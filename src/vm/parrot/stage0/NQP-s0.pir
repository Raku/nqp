.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_373_1382484127.52628") :anon :lex
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5047 = 'cuid_374_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_375_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_376_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_400_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_425_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_426_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_427_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_428_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_429_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_430_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_431_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_432_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_433_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_512_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_516_1382484127.52628' 
    capture_lex $P5047 
    .const 'Sub' $P5047 = 'cuid_526_1382484127.52628' 
    capture_lex $P5047 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "ParseShared", $P105 
    .lex "NQPCursorRole", $P106 
    .lex "$nqpcomp", $P107 
    .lex "@clo", $P108 
    .lex "&MAIN", $P109 
    .lex "&hll-config", $P110 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P107, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P108, $P5003
    .const 'Sub' $P5004 = 'cuid_374_1382484127.52628' 
    capture_lex $P5004
    set $P109, $P5004
    .const 'Sub' $P5005 = 'cuid_375_1382484127.52628' 
    capture_lex $P5005
    set $P110, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_376_1382484127.52628' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_400_1382484127.52628' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_425_1382484127.52628' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1494
    nqp_get_sc_object $P5016, "0B0C72E2184996CA924631B8722E3D0303B59EA5-1382484096.05537", 60
    $P5017 = $P5016."operations"()
    set $P104, $P5017
.annotate 'line', 1496
    .const 'Sub' $P5019 = 'cuid_426_1382484127.52628' 
    capture_lex $P5019
    newclosure $P5018, $P5019
    $P104."add_hll_op"("nqp", "preinc", $P5018)
.annotate 'line', 1511
    .const 'Sub' $P5021 = 'cuid_427_1382484127.52628' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P104."add_hll_op"("nqp", "predec", $P5020)
.annotate 'line', 1526
    .const 'Sub' $P5023 = 'cuid_428_1382484127.52628' 
    capture_lex $P5023
    newclosure $P5022, $P5023
    $P104."add_hll_op"("nqp", "postinc", $P5022)
.annotate 'line', 1550
    .const 'Sub' $P5025 = 'cuid_429_1382484127.52628' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P104."add_hll_op"("nqp", "postdec", $P5024)
.annotate 'line', 1574
    .const 'Sub' $P5027 = 'cuid_430_1382484127.52628' 
    capture_lex $P5027
    newclosure $P5026, $P5027
    $P104."add_hll_op"("nqp", "numify", $P5026)
.annotate 'line', 1578
    .const 'Sub' $P5029 = 'cuid_431_1382484127.52628' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "stringify", $P5028)
.annotate 'line', 1582
    .const 'Sub' $P5031 = 'cuid_432_1382484127.52628' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "falsey", $P5030)
    .const 'Sub' $P5032 = 'cuid_433_1382484127.52628' 
    capture_lex $P5032
    $P5033 = $P5032()
    .const 'Sub' $P5034 = 'cuid_512_1382484127.52628' 
    capture_lex $P5034
    $P5035 = $P5034()
    .const 'Sub' $P5036 = 'cuid_516_1382484127.52628' 
    capture_lex $P5036
    $P5037 = $P5036()
    .const 'Sub' $P5038 = 'cuid_526_1382484127.52628' 
    capture_lex $P5038
    $P5039 = $P5038()
.annotate 'line', 3549
    nqp_get_sc_object $P5040, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 380
    $P5041 = $P5040."new"()
    set $P107, $P5041
.annotate 'line', 3550
    $P107."language"("nqp")
.annotate 'line', 3551
    nqp_get_sc_object $P5042, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P107."parsegrammar"($P5042)
.annotate 'line', 3552
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 245
    $P107."parseactions"($P5043)
.annotate 'line', 3553
    $P5044 = $P107."config"()
    "&hll-config"($P5044)
.annotate 'line', 3555
    $P107."addstage"("optimize", "ast" :named("after"))
.annotate 'line', 3558
    $P5045 = $P107."commandline_options"()
    set $P108, $P5045
.annotate 'line', 3559
    $P108."push"("parsetrace")
.annotate 'line', 3560
    $P108."push"("setting=s")
.annotate 'line', 3561
    $P108."push"("setting-path=s")
.annotate 'line', 3562
    $P108."push"("module-path=s")
.annotate 'line', 3563
    $P108."push"("no-regex-lib")
.annotate 'line', 3564
    $P108."push"("stable-sc")
.annotate 'line', 3565
    $P108."push"("optimize=s")
.annotate 'line', 3566
    $P108."push"("vmlibs=s")
.annotate 'line', 3567
    $P108."push"("dynext=s")
    unless _lex_param_0 goto if3353_end7316 
    $P5046 = "&MAIN"(_lex_param_0 :flat)
  if3353_end7316:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_374_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3570
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3572
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3579
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_375_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3583
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.10-15-g4768ece"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-10-22T23:22:07Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 8
    .const 'Sub' $P5033 = 'cuid_377_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_1_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_2_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_3_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_4_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_5_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_6_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_7_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_8_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_9_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_10_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_11_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_17_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_18_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_19_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_20_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_21_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_22_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_23_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_24_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_25_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_26_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_27_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_28_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_29_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_30_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_31_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_32_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_33_1382484127.52628' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_34_1382484127.52628' 
    capture_lex $P5033 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$loader", $P103 
    .lex "&compilee_list", $P104 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_377_1382484127.52628' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_1_1382484127.52628' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_2_1382484127.52628' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_3_1382484127.52628' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_4_1382484127.52628' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_5_1382484127.52628' 
    capture_lex $P5007
    get_hll_global $P5008, "ModuleLoader"
    set $P103, $P5008
    .const 'Sub' $P5009 = 'cuid_6_1382484127.52628' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_7_1382484127.52628' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_8_1382484127.52628' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_9_1382484127.52628' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_10_1382484127.52628' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_11_1382484127.52628' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_17_1382484127.52628' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_18_1382484127.52628' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_19_1382484127.52628' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_20_1382484127.52628' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_21_1382484127.52628' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_22_1382484127.52628' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_23_1382484127.52628' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_24_1382484127.52628' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_25_1382484127.52628' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_26_1382484127.52628' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_27_1382484127.52628' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_28_1382484127.52628' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_29_1382484127.52628' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_30_1382484127.52628' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_31_1382484127.52628' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_32_1382484127.52628' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_33_1382484127.52628' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_34_1382484127.52628' 
    capture_lex $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "compilee_list" :subid("cuid_377_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 531
    .param pmc _lex_param_0 :optional 
    .param int haz_param_1 :opt_flag 
    .lex "@orig", _lex_param_0 
    if haz_param_1, default16
    new $P5003, 'ResizablePMCArray'
    set _lex_param_0, $P5003
  default16:
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if12_else14 
    set $P5002, _lex_param_0
    goto if12_end15
  if12_else14:
    new $P5001, 'ResizablePMCArray'
    set $P5002, $P5001
  if12_end15:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_378_1382484127.52628' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc fb_tmp_2 
    .local pmc fb_tmp_3 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", 8, $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", 9, $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", 10, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", 11, $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", 12, $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", 13, $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback23
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_3, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_3
    unless $I5004 goto if16_else24 
    set $P5022, fb_tmp_3["%COMPILING"]
    set $P5024, $P5022
    goto if16_end25
  if16_else24:
    null $P5023
    set $P5024, $P5023
  if16_end25:
    unless_null $P5024, vivi_1726
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_1726:
    unless_null $P5024, vivi_1827
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_1827:
    set $P5019, $P5024
  fallback23:
    set fb_tmp_2, $P5019
    repr_defined $I5003, fb_tmp_2
    unless $I5003 goto if15_else21 
    set $P5027, fb_tmp_2["%?OPTIONS"]
    set $P5029, $P5027
    goto if15_end22
  if15_else21:
    null $P5028
    set $P5029, $P5028
  if15_end22:
    unless_null $P5029, vivi_1928
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_1928:
    set fb_tmp_1, $P5029
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if14_else19 
    set $P5031, fb_tmp_1["dynext"]
    set $P5033, $P5031
    goto if14_end20
  if14_else19:
    null $P5032
    set $P5033, $P5032
  if14_end20:
    unless_null $P5033, vivi_2029
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_2029:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if13_end18 
    .const 'Sub' $P5035 = 'cuid_378_1382484127.52628' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if13_end18:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1382484127.52628") :anon :lex :outer("cuid_1_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 41
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_4 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback34
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_6
    unless $I5003 goto if23_else35 
    set $P5006, fb_tmp_6["%COMPILING"]
    set $P5008, $P5006
    goto if23_end36
  if23_else35:
    null $P5007
    set $P5008, $P5007
  if23_end36:
    unless_null $P5008, vivi_2437
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2437:
    unless_null $P5008, vivi_2538
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2538:
    set $P5003, $P5008
  fallback34:
    set fb_tmp_5, $P5003
    repr_defined $I5002, fb_tmp_5
    unless $I5002 goto if22_else32 
    set $P5011, fb_tmp_5["%?OPTIONS"]
    set $P5013, $P5011
    goto if22_end33
  if22_else32:
    null $P5012
    set $P5013, $P5012
  if22_end33:
    unless_null $P5013, vivi_2639
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_2639:
    set fb_tmp_4, $P5013
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if21_else30 
    set $P5015, fb_tmp_4["dynext"]
    set $P5017, $P5015
    goto if21_end31
  if21_else30:
    null $P5016
    set $P5017, $P5016
  if21_end31:
    unless_null $P5017, vivi_2740
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_2740:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_8, $P5019
    repr_defined $I5005, fb_tmp_8
    unless $I5005 goto if29_else43 
    set $P5020, fb_tmp_8[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if29_end44
  if29_else43:
    null $P5021
    set $P5022, $P5021
  if29_end44:
    unless_null $P5022, vivi_3045
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_3045:
    set fb_tmp_7, $P5022
    repr_defined $I5004, fb_tmp_7
    unless $I5004 goto if28_else41 
    set $P5024, fb_tmp_7[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if28_end42
  if28_else41:
    null $P5025
    set $P5026, $P5025
  if28_end42:
    unless_null $P5026, vivi_3146
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_3146:
    set $P102, $P5026
.annotate 'line', 45
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 50
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_9 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 52
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5004 = $P5003."new"()
    $P5005 = $P5002."new"($P5004, _lex_param_1 :named("node"))
    set $P101, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!BLOCKS", 8
    set $N5001, $P5008
    unless $N5001 goto if32_end48 
.annotate 'line', 53
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!BLOCKS", 8
    set fb_tmp_9, $P5011
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if33_else49 
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5015, $P5013, $P5014, "@!BLOCKS", 8
    set $N5002, $P5015
    set $I5003, $N5002
    sub $I5002, $I5003, 1
    set $P5012, fb_tmp_9[$I5002]
    set $P5017, $P5012
    goto if33_end50
  if33_else49:
    null $P5016
    set $P5017, $P5016
  if33_end50:
    unless_null $P5017, vivi_3451
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_3451:
    set $P101["outer"], $P5017
  if32_end48:
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5021, $P5019, $P5020, "@!BLOCKS", 8
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5024, $P5022, $P5023, "@!BLOCKS", 8
    set $N5003, $P5024
    set $I5004, $N5003
    set $P5021[$I5004], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 62
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_10 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS", 8
    set fb_tmp_10, $P5003
    repr_defined $I5001, fb_tmp_10
    unless $I5001 goto if35_else52 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS", 8
    set $N5001, $P5007
    set $I5003, $N5001
    sub $I5002, $I5003, 1
    set $P5004, fb_tmp_10[$I5002]
    set $P5009, $P5004
    goto if35_end53
  if35_else52:
    null $P5008
    set $P5009, $P5008
  if35_end53:
    unless_null $P5009, vivi_3654
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_3654:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 71
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS", 8
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 73
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 83
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_379_1382484127.52628' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_55
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if37_end58 
    .const 'Sub' $P5001 = 'cuid_379_1382484127.52628' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if37_end58:
    goto lexotic_56
  lexotic_55:
    .get_results ($P5003)
  lexotic_56:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1382484127.52628") :anon :lex :outer("cuid_6_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 85
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_11 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_13 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback61
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_12, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_12
    unless $I5002 goto if39_else62 
    set $P5006, fb_tmp_12["%COMPILING"]
    set $P5008, $P5006
    goto if39_end63
  if39_else62:
    null $P5007
    set $P5008, $P5007
  if39_end63:
    unless_null $P5008, vivi_4064
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4064:
    unless_null $P5008, vivi_4165
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4165:
    set $P5003, $P5008
  fallback61:
    set fb_tmp_11, $P5003
    repr_defined $I5001, fb_tmp_11
    unless $I5001 goto if38_else59 
    set $P5011, fb_tmp_11["%?OPTIONS"]
    set $P5013, $P5011
    goto if38_end60
  if38_else59:
    null $P5012
    set $P5013, $P5012
  if38_end60:
    unless_null $P5013, vivi_4266
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_4266:
.annotate 'line', 90
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 94
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 96
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    find_dynamic_lex $P5020, "$*UNIT"
    unless_null $P5020, fallback67
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set fb_tmp_13, $P5021
    repr_defined $I5003, fb_tmp_13
    unless $I5003 goto if43_else68 
    set $P5023, fb_tmp_13["$UNIT"]
    set $P5025, $P5023
    goto if43_end69
  if43_else68:
    null $P5024
    set $P5025, $P5024
  if43_end69:
    unless_null $P5025, vivi_4470
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_4470:
    unless_null $P5025, vivi_4571
    die "Contextual $*UNIT not found"
    box $P5027, "Contextual $*UNIT not found"
    set $P5025, $P5027
  vivi_4571:
    set $P5020, $P5025
  fallback67:
    $P5028 = $P5019."new"($P5020 :named("value"))
.annotate 'line', 97
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 99
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 101
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5032 = $P5031."new"("ModuleLoader" :named("value"))
    $P5033 = $P5030."new"($P5032, "getcurhllsym" :named("op"))
.annotate 'line', 103
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    find_lex $P5035, "$setting_name"
    $P5036 = $P5034."new"($P5035 :named("value"))
    $P5037 = $P5029."new"($P5033, $P5036, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5038 = $P5018."new"($P5028, $P5037, "forceouterctx" :named("op"))
    set $P102, $P5038
.annotate 'line', 105
    find_lex $P5040, "self"
    nqp_decontainerize $P5039, $P5040
    $P5041 = $P5039."is_precompilation_mode"()
    unless $P5041 goto if46_else72 
.annotate 'line', 106
    find_lex $P5043, "self"
    nqp_decontainerize $P5042, $P5043
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 107
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 109
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 110
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5048 = $P5047."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 111
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5050 = $P5049."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 112
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5052 = $P5051."new"("ModuleLoader.moarvm" :named("value"))
    $P5053 = $P5046."new"($P5048 :named("parrot"), $P5050 :named("jvm"), $P5052 :named("moar"))
    $P5054 = $P5045."new"($P5053, "loadbytecode" :named("op"))
    $P5055 = $P5044."new"($P5054, $P102)
    $P5056 = $P5042."add_load_dependency_task"($P5055 :named("deserialize_past"))
    goto if46_end73
  if46_else72:
.annotate 'line', 117
.annotate 'line', 118
    find_lex $P5058, "self"
    nqp_decontainerize $P5057, $P5058
    $P5059 = $P5057."add_fixup_task"($P102 :named("fixup_past"))
  if46_end73:
    getattribute $P5060, $P101, 'lex_pad'
    $P5061 = "RETURN"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 127
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_74
    .lex "RETURN", $P102
.annotate 'line', 129
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 132
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if47_end77 
.annotate 'line', 133
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 134
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 136
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 137
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5011 = $P5010."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 138
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5013 = $P5012."new"("ModuleLoader.class" :named("value"))
.annotate 'line', 139
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5015 = $P5014."new"("ModuleLoader.moarvm" :named("value"))
    $P5016 = $P5009."new"($P5011 :named("parrot"), $P5013 :named("jvm"), $P5015 :named("moar"))
    $P5017 = $P5008."new"($P5016, "loadbytecode" :named("op"))
.annotate 'line', 141
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 143
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 145
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5021 = $P5020."new"("ModuleLoader" :named("value"))
    $P5022 = $P5019."new"($P5021, "getcurhllsym" :named("op"))
.annotate 'line', 147
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5024 = $P5023."new"(_lex_param_1 :named("value"))
    $P5025 = $P5018."new"($P5022, $P5024, "callmethod" :named("op"), "load_module" :named("name"))
    $P5026 = $P5007."new"($P5017, $P5025)
    $P5027 = $P5006."add_load_dependency_task"($P5026 :named("deserialize_past"))
  if47_end77:
    getattribute $P5028, $P101, 'lex_pad'
    $P5029 = "RETURN"($P5028)
    goto lexotic_75
  lexotic_74:
    .get_results ($P5029)
  lexotic_75:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_380_1382484127.52628' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 155
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next78:
    unless $P5006, for_done80
    shift $P5008, $P5006
  for_redo79:
    .const 'Sub' $P5007 = 'cuid_380_1382484127.52628' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next78
  for_done80:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1382484127.52628") :anon :lex :outer("cuid_8_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 157
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 163
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_382_1382484127.52628' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 165
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next100:
    unless $P5008, for_done102
    shift $P5010, $P5008
  for_redo101:
    .const 'Sub' $P5009 = 'cuid_382_1382484127.52628' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next100
  for_done102:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1382484127.52628") :anon :lex :outer("cuid_9_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 169
    .param pmc _lex_param_0 
    .const 'Sub' $P5011 = 'cuid_381_1382484127.52628' 
    capture_lex $P5011 
    .lex "$part", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set $S5001, _lex_param_0
    box $P5002, $S5001
    set $P101, $P5002
    find_lex $P5004, "$target"
    get_who $P5003, $P5004
    set $S5002, $P101
    exists $I5001, $P5003[$S5002]
    unless $I5001 goto if48_else81 
.annotate 'line', 171
    find_lex $P5007, "$target"
    get_who $P5006, $P5007
    set $S5003, $P101
    set $P5005, $P5006[$S5003]
    store_lex "$target", $P5005
    set $P5010, $P5005
    goto if48_end82
  if48_else81:
    .const 'Sub' $P5008 = 'cuid_381_1382484127.52628' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if48_end82:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1382484127.52628") :anon :lex :outer("cuid_382_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 174
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_15 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_16 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback85
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_14, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if50_else86 
    set $P5006, fb_tmp_14["%HOW"]
    set $P5008, $P5006
    goto if50_end87
  if50_else86:
    null $P5007
    set $P5008, $P5007
  if50_end87:
    unless_null $P5008, vivi_5188
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_5188:
    unless_null $P5008, vivi_5289
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_5289:
    set $P5003, $P5008
  fallback85:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if49_else83 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback90
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_15, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if53_else91 
    set $P5015, fb_tmp_15["%HOW"]
    set $P5017, $P5015
    goto if53_end92
  if53_else91:
    null $P5016
    set $P5017, $P5016
  if53_end92:
    unless_null $P5017, vivi_5493
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_5493:
    unless_null $P5017, vivi_5594
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_5594:
    set $P5012, $P5017
  fallback90:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if49_end84
  if49_else83:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback95
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_16, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_16
    unless $I5004 goto if56_else96 
    set $P5024, fb_tmp_16["%HOW"]
    set $P5026, $P5024
    goto if56_end97
  if56_else96:
    null $P5025
    set $P5026, $P5025
  if56_end97:
    unless_null $P5026, vivi_5798
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_5798:
    unless_null $P5026, vivi_5899
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_5899:
    set $P5021, $P5026
  fallback95:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if49_end84:
    set $P101, $P5029
.annotate 'line', 178
    find_lex $P5030, "$part"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 179
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$part"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 188
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_17 
.annotate 'line', 189
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 190
    set fb_tmp_17, _lex_param_1
    repr_defined $I5001, fb_tmp_17
    unless $I5001 goto if59_else103 
    set $P5001, fb_tmp_17[0]
    set $P5003, $P5001
    goto if59_end104
  if59_else103:
    null $P5002
    set $P5003, $P5002
  if59_end104:
    unless_null $P5003, vivi_60105
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  vivi_60105:
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5006 = $P5005."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "static" :named("decl"), _lex_param_3 :named("value"))
    $P5007 = $P5003."push"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 198
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 200
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5005 = $P5004."new"(_lex_param_1 :named("value"))
    $P5006 = $P5003."new"($P5005, "who" :named("op"))
.annotate 'line', 201
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    set $S5001, _lex_param_2
    $P5008 = $P5007."new"($S5001 :named("value"))
.annotate 'line', 202
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    $P5010 = $P5009."new"(_lex_param_3 :named("value"))
    $P5011 = $P5002."new"($P5006, $P5008, $P5010, "bindkey" :named("op"))
    set $P101, $P5011
.annotate 'line', 204
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 209
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_2 :opt_flag 
    .const 'Sub' $P5083 = 'cuid_12_1382484127.52628' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_386_1382484127.52628' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_387_1382484127.52628' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_388_1382484127.52628' 
    capture_lex $P5083 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    if haz_param_2, default216
    box $P5082, "NQPRoutine"
    set _lex_param_4, $P5082
  default216:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_106
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_68119
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 215
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback108
    nqp_get_sc_object $P5015, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5014, $P5015
    set fb_tmp_18, $P5014
    repr_defined $I5002, fb_tmp_18
    unless $I5002 goto if61_else109 
    set $P5016, fb_tmp_18["$PACKAGE"]
    set $P5018, $P5016
    goto if61_end110
  if61_else109:
    null $P5017
    set $P5018, $P5017
  if61_end110:
    unless_null $P5018, vivi_62111
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_62111:
    unless_null $P5018, vivi_63112
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_63112:
    set $P5013, $P5018
  fallback108:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback113
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_19, $P5022
    repr_defined $I5003, fb_tmp_19
    unless $I5003 goto if64_else114 
    set $P5024, fb_tmp_19["$PACKAGE"]
    set $P5026, $P5024
    goto if64_end115
  if64_else114:
    null $P5025
    set $P5026, $P5025
  if64_end115:
    unless_null $P5026, vivi_65116
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_65116:
    unless_null $P5026, vivi_66117
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_66117:
    set $P5021, $P5026
  fallback113:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_67118
  catch_handler_68119:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_67118
  skip_handler_67118:
    .const 'Sub' $P5034 = 'cuid_12_1382484127.52628' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if109_end193 
.annotate 'line', 264
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if109_end193:
.annotate 'line', 269
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5037 = $P5036."new"()
    set $P105, $P5037
    set fb_tmp_37, _lex_param_1
    repr_defined $I5005, fb_tmp_37
    unless $I5005 goto if111_else196 
    set $P5038, fb_tmp_37["compile_time_dummy"]
    set $P5040, $P5038
    goto if111_end197
  if111_else196:
    null $P5039
    set $P5040, $P5039
  if111_end197:
    unless_null $P5040, vivi_112198
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_112198:
    defined $I5004, $P5040
    unless $I5004 goto if110_else194 
.annotate 'line', 272
    set fb_tmp_38, _lex_param_1
    repr_defined $I5006, fb_tmp_38
    unless $I5006 goto if113_else199 
    set $P5042, fb_tmp_38["compile_time_dummy"]
    set $P5044, $P5042
    goto if113_end200
  if113_else199:
    null $P5043
    set $P5044, $P5043
  if113_end200:
    unless_null $P5044, vivi_114201
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5044, $P5045
  vivi_114201:
    set $P106, $P5044
    goto if110_end195
  if110_else194:
.annotate 'line', 275
    nqp_fresh_stub $P5046, $P103
    set $P106, $P5046
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, 'STATIC_CODE_REF', $P106
    setprop $P106, 'COMPILER_STUB', $P106
.annotate 'line', 283
    nqp_decontainerize $P5047, _lex_param_0
    $P5048 = $P5047."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5048
    nqp_decontainerize $P5049, _lex_param_0
    nqp_get_sc_object $P5050, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5051, $P5049, $P5050, "%!code_stub_sc_idx", 12
.annotate 'line', 284
    $P5052 = _lex_param_1."cuid"()
    set $S5004, $P5052
    set $P5051[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5064, $P102
    unless $P102 goto if115_end203 
.annotate 'line', 290
    nqp_decontainerize $P5053, _lex_param_0
    nqp_get_sc_object $P5054, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5055, $P5053, $P5054, "%!code_object_fixup_list", 11
.annotate 'line', 291
    $P5056 = _lex_param_1."cuid"()
    set $S5005, $P5056
    set $P5055[$S5005], $P105
.annotate 'line', 292
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."is_precompilation_mode"()
    unless $P5058 goto if116_else204 
    .const 'Sub' $P5059 = 'cuid_386_1382484127.52628' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if116_end205
  if116_else204:
    .const 'Sub' $P5061 = 'cuid_387_1382484127.52628' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if116_end205:
    set $P5064, $P5063
  if115_end203:
  if110_end195:
.annotate 'line', 332
    nqp_decontainerize $P5065, _lex_param_0
    $P5065."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if121_else212 
    .const 'Sub' $P5066 = 'cuid_388_1382484127.52628' 
    capture_lex $P5066
    $P5067 = $P5066()
    set $P5081, $P5067
    goto if121_end213
  if121_else212:
.annotate 'line', 371
.annotate 'line', 374
    nqp_get_sc_object $P5068, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 376
    nqp_get_sc_object $P5069, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 378
    nqp_get_sc_object $P5070, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    nqp_decontainerize $P5071, _lex_param_0
    $P5072 = $P5071."handle"()
    $P5073 = $P5070."new"($P5072 :named("value"))
.annotate 'line', 379
    nqp_get_sc_object $P5074, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5075 = $P5074."new"($P107 :named("value"))
    $P5076 = $P5069."new"($P5073, $P5075, "scgetcode" :named("op"))
.annotate 'line', 381
    nqp_get_sc_object $P5077, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    $P5078 = $P5077."new"(_lex_param_1 :named("value"))
    $P5079 = $P5068."new"($P5076, $P5078, "replacecoderef" :named("op"))
    $P105."push"($P5079)
    $P5080 = "RETURN"($P106)
    set $P5081, $P5080
  if121_end213:
    goto lexotic_107
  lexotic_106:
    .get_results ($P5081)
  lexotic_107:
    .return ($P5081) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1382484127.52628") :anon :lex :outer("cuid_17_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 222
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5051 = 'cuid_385_1382484127.52628' 
    capture_lex $P5051 
    .lex "$compiler", $P101 
    .lex "$compiled", $P102 
    .lex "@allcodes", $P103 
    .lex "$c", $P104 
    .lex "$i", $P105 
    .lex "$mainline", $P106 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc pkg_viv_tmp_7 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P106, $P5006
.annotate 'line', 224
    find_lex $P5007, "$past"
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."libs"()
    $P5007."unshift"($P5010)
    compreg $P5011, "nqp"
    set $P101, $P5011
.annotate 'line', 226
.annotate 'line', 227
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 120
    find_lex $P5013, "$past"
    $P5014 = $P5012."new"($P5013, "nqp" :named("hll"))
    find_dynamic_lex $P5015, "$*LINEPOSCACHE"
    unless_null $P5015, fallback120
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_20, $P5016
    repr_defined $I5001, fb_tmp_20
    unless $I5001 goto if69_else121 
    set $P5018, fb_tmp_20["$LINEPOSCACHE"]
    set $P5020, $P5018
    goto if69_end122
  if69_else121:
    null $P5019
    set $P5020, $P5019
  if69_end122:
    unless_null $P5020, vivi_70123
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_70123:
    unless_null $P5020, vivi_71124
    die "Contextual $*LINEPOSCACHE not found"
    box $P5022, "Contextual $*LINEPOSCACHE not found"
    set $P5020, $P5022
  vivi_71124:
    set $P5015, $P5020
  fallback120:
    find_dynamic_lex $P5023, "%*COMPILING"
    unless_null $P5023, fallback131
    nqp_get_sc_object $P5025, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_7, $P5024
    set fb_tmp_23, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_23
    unless $I5004 goto if75_else132 
    set $P5026, fb_tmp_23["%COMPILING"]
    set $P5028, $P5026
    goto if75_end133
  if75_else132:
    null $P5027
    set $P5028, $P5027
  if75_end133:
    unless_null $P5028, vivi_76134
    new $P5029, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5029
    set $P5028, $P5029
  vivi_76134:
    unless_null $P5028, vivi_77135
    die "Contextual %*COMPILING not found"
    box $P5030, "Contextual %*COMPILING not found"
    set $P5028, $P5030
  vivi_77135:
    set $P5023, $P5028
  fallback131:
    set fb_tmp_22, $P5023
    repr_defined $I5003, fb_tmp_22
    unless $I5003 goto if74_else129 
    set $P5031, fb_tmp_22["%?OPTIONS"]
    set $P5033, $P5031
    goto if74_end130
  if74_else129:
    null $P5032
    set $P5033, $P5032
  if74_end130:
    unless_null $P5033, vivi_78136
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_78136:
    set fb_tmp_21, $P5033
    repr_defined $I5002, fb_tmp_21
    unless $I5002 goto if73_else127 
    set $P5035, fb_tmp_21["bootstrap"]
    set $P5037, $P5035
    goto if73_end128
  if73_else127:
    null $P5036
    set $P5037, $P5036
  if73_end128:
    unless_null $P5037, vivi_79137
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_79137:
    unless $P5037 goto if72_else125 
    set $I5005, 1
    goto if72_end126
  if72_else125:
    set $I5005, 0
  if72_end126:
    $P5039 = $P101."compile"($P5014, "ast" :named("from"), 1 :named("compunit_ok"), $P5015 :named("lineposcache"), $I5005 :named("bootstrap"))
    set $P102, $P5039
.annotate 'line', 232
    $P5040 = $P101."backend"()
    $P5041 = $P5040."compunit_coderefs"($P102)
    set $P103, $P5041
    elements $I5006, $P103
    box $P5042, $I5006
    set $P104, $P5042
    box $P5043, 0
    set $P105, $P5043
  while80_test138:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5007, $N5001, $N5002
    box $P5047, $I5007
    set $P5046, $P5047
    unless $I5007 goto while80_done142 
  while80_redo140:
    .const 'Sub' $P5044 = 'cuid_385_1382484127.52628' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5046, $P5045
    goto while80_test138 
  while80_done142:
.annotate 'line', 258
    $P5048 = $P101."backend"()
    $P5049 = $P5048."compunit_mainline"($P102)
    set $P106, $P5049
.annotate 'line', 259
    $P5050 = $P106(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1382484127.52628") :anon :lex :outer("cuid_12_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 235
    .const 'Sub' $P5017 = 'cuid_384_1382484127.52628' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "@allcodes"
    set fb_tmp_24, $P5002
    repr_defined $I5001, fb_tmp_24
    unless $I5001 goto if81_else143 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_24[$I5002]
    set $P5006, $P5003
    goto if81_end144
  if81_else143:
    null $P5005
    set $P5006, $P5005
  if81_end144:
    unless_null $P5006, vivi_82145
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_82145:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up", 9
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if83_end147 
    .const 'Sub' $P5013 = 'cuid_384_1382484127.52628' 
    capture_lex $P5013
    $P5014 = $P5013()
  if83_end147:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1382484127.52628") :anon :lex :outer("cuid_385_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 237
    .const 'Sub' $P5089 = 'cuid_383_1382484127.52628' 
    capture_lex $P5089 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_33 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 241
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up", 9
    set fb_tmp_25, $P5006
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if84_else148 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_25[$S5001]
    set $P5010, $P5007
    goto if84_end149
  if84_else148:
    null $P5009
    set $P5010, $P5009
  if84_end149:
    unless_null $P5010, vivi_85150
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_85150:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types", 10
    set fb_tmp_26, $P5016
    repr_defined $I5002, fb_tmp_26
    unless $I5002 goto if86_else151 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_26[$S5002]
    set $P5020, $P5017
    goto if86_end152
  if86_else151:
    null $P5019
    set $P5020, $P5019
  if86_end152:
    unless_null $P5020, vivi_87153
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_87153:
    find_lex $P5022, "@allcodes"
    set fb_tmp_27, $P5022
    repr_defined $I5003, fb_tmp_27
    unless $I5003 goto if88_else154 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_27[$I5004]
    set $P5026, $P5023
    goto if88_end155
  if88_else154:
    null $P5025
    set $P5026, $P5025
  if88_end155:
    unless_null $P5026, vivi_89156
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_89156:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types", 10
    set fb_tmp_28, $P5031
    repr_defined $I5005, fb_tmp_28
    unless $I5005 goto if90_else157 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_28[$S5003]
    set $P5035, $P5032
    goto if90_end158
  if90_else157:
    null $P5034
    set $P5035, $P5034
  if90_end158:
    unless_null $P5035, vivi_91159
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_91159:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up", 9
    set fb_tmp_29, $P5044
    repr_defined $I5006, fb_tmp_29
    unless $I5006 goto if92_else160 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_29[$S5004]
    set $P5048, $P5045
    goto if92_end161
  if92_else160:
    null $P5047
    set $P5048, $P5047
  if92_end161:
    unless_null $P5048, vivi_93162
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5048, $P5049
  vivi_93162:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next172:
    unless $P5040, for_done174
    shift $P5051, $P5040
  for_redo173:
    .const 'Sub' $P5050 = 'cuid_383_1382484127.52628' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next172
  for_done174:
    find_lex $P5052, "@allcodes"
    set fb_tmp_33, $P5052
    repr_defined $I5007, fb_tmp_33
    unless $I5007 goto if100_else175 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_33[$I5008]
    set $P5056, $P5053
    goto if100_end176
  if100_else175:
    null $P5055
    set $P5056, $P5055
  if100_end176:
    unless_null $P5056, vivi_101177
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5056, $P5057
  vivi_101177:
    setprop $P5056, 'STATIC_CODE_REF', $P5056
.annotate 'line', 249
    find_lex $P5059, "self"
    nqp_decontainerize $P5058, $P5059
    find_lex $P5061, "self"
    nqp_decontainerize $P5060, $P5061
    nqp_get_sc_object $P5062, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5063, $P5060, $P5062, "%!code_stub_sc_idx", 12
    set fb_tmp_34, $P5063
    repr_defined $I5009, fb_tmp_34
    unless $I5009 goto if102_else178 
    find_lex $P5065, "$subid"
    set $S5005, $P5065
    set $P5064, fb_tmp_34[$S5005]
    set $P5067, $P5064
    goto if102_end179
  if102_else178:
    null $P5066
    set $P5067, $P5066
  if102_end179:
    unless_null $P5067, vivi_103180
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5067, $P5068
  vivi_103180:
    find_lex $P5069, "@allcodes"
    set fb_tmp_35, $P5069
    repr_defined $I5010, fb_tmp_35
    unless $I5010 goto if104_else181 
    find_lex $P5071, "$i"
    set $I5011, $P5071
    set $P5070, fb_tmp_35[$I5011]
    set $P5073, $P5070
    goto if104_end182
  if104_else181:
    null $P5072
    set $P5073, $P5072
  if104_end182:
    unless_null $P5073, vivi_105183
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5073, $P5074
  vivi_105183:
    $P5058."update_root_code_ref"($P5067, $P5073)
    find_lex $P5076, "self"
    nqp_decontainerize $P5075, $P5076
    nqp_get_sc_object $P5077, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5078, $P5075, $P5077, "%!code_object_fixup_list", 11
    set fb_tmp_36, $P5078
    repr_defined $I5012, fb_tmp_36
    unless $I5012 goto if106_else184 
    find_lex $P5080, "$subid"
    set $S5006, $P5080
    set $P5079, fb_tmp_36[$S5006]
    set $P5082, $P5079
    goto if106_end185
  if106_else184:
    null $P5081
    set $P5082, $P5081
  if106_end185:
    unless_null $P5082, vivi_107186
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_107186:
    set $P102, $P5082
    new $P5087, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5087, while108_handlers190
    push_eh $P5087
  while108_test187:
    $P5084 = $P102."list"()
    set $N5001, $P5084
    box $P5088, $N5001
    set $P5086, $P5088
    unless $N5001 goto while108_done191 
  while108_redo189:
.annotate 'line', 253
    $P5085 = $P102."shift"()
    set $P5086, $P5085
    goto while108_test187 
  while108_handlers190:
    .get_results ($P5087)
    pop_upto_eh $P5087
    getattribute $P5087, $P5087, 'type'
    eq $P5087, .CONTROL_LOOP_NEXT, while108_test187
    eq $P5087, .CONTROL_LOOP_REDO, while108_redo189
  while108_done191:
    pop_eh 
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1382484127.52628") :anon :lex :outer("cuid_384_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 244
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types", 10
    set fb_tmp_30, $P5004
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if94_else163 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_30[$S5001]
    set $P5008, $P5005
    goto if94_end164
  if94_else163:
    null $P5007
    set $P5008, $P5007
  if94_end164:
    unless_null $P5008, vivi_95165
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_95165:
    find_lex $P5011, "@allcodes"
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if96_else166 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_31[$I5003]
    set $P5015, $P5012
    goto if96_end167
  if96_else166:
    null $P5014
    set $P5015, $P5014
  if96_end167:
    unless_null $P5015, vivi_97168
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_97168:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types", 10
    set fb_tmp_32, $P5020
    repr_defined $I5004, fb_tmp_32
    unless $I5004 goto if98_else169 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_32[$S5002]
    set $P5024, $P5021
    goto if98_end170
  if98_else169:
    null $P5023
    set $P5024, $P5023
  if98_end170:
    unless_null $P5024, vivi_99171
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_99171:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1382484127.52628") :anon :lex :outer("cuid_17_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 292
    .const 'Sub' $P5012 = 'cuid_13_1382484127.52628' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1382484127.52628' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1382484127.52628' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_14_1382484127.52628' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1382484127.52628") :anon :lex :outer("cuid_386_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_39 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 294
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up", 9
    set fb_tmp_39, $P5005
    repr_defined $I5001, fb_tmp_39
    unless $I5001 goto if117_else206 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_39[$S5001]
    set $P5010, $P5006
    goto if117_end207
  if117_else206:
    null $P5009
    set $P5010, $P5009
  if117_end207:
    unless_null $P5010, vivi_118208
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_118208:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, 'COMPILER_STUB', $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1382484127.52628") :anon :lex :outer("cuid_386_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 300

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1382484127.52628") :anon :lex :outer("cuid_17_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 304
    .const 'Sub' $P5012 = 'cuid_15_1382484127.52628' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1382484127.52628' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1382484127.52628' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks", 13
    .const 'Sub' $P5011 = 'cuid_16_1382484127.52628' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1382484127.52628") :anon :lex :outer("cuid_387_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 305
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_40 
.annotate 'line', 307
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 308
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 310
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 312
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5007 = $P5006."new"(_lex_param_2 :named("value"))
.annotate 'line', 313
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_lex $P5009, "$code_type"
    $P5010 = $P5008."new"($P5009 :named("value"))
.annotate 'line', 314
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5012 = $P5011."new"("$!do" :named("value"))
.annotate 'line', 315
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    find_lex $P5015, "$past"
    $P5016 = $P5014."new"($P5015 :named("value"))
    $P5017 = $P5013."new"($P5016, "clone" :named("op"))
    $P5018 = $P5005."new"($P5007, $P5010, $P5012, $P5017, "bindattr" :named("op"))
.annotate 'line', 317
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5020 = $P5019."new"(_lex_param_2 :named("value"))
    $P5021 = $P5004."new"($P5018, $P5020, "setcodeobj" :named("op"))
    $P5003."push"($P5021)
.annotate 'line', 321
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    nqp_get_sc_object $P5024, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5025, $P5022, $P5024, "%!code_objects_to_fix_up", 9
    set fb_tmp_40, $P5025
    repr_defined $I5001, fb_tmp_40
    unless $I5001 goto if119_else209 
    find_lex $P5027, "$past"
    $P5028 = $P5027."cuid"()
    set $S5001, $P5028
    set $P5026, fb_tmp_40[$S5001]
    set $P5030, $P5026
    goto if119_end210
  if119_else209:
    null $P5029
    set $P5030, $P5029
  if119_end210:
    unless_null $P5030, vivi_120211
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  vivi_120211:
    $P5032 = $P5030."push"(_lex_param_2)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1382484127.52628") :anon :lex :outer("cuid_387_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 324

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1382484127.52628") :anon :lex :outer("cuid_17_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 336
    .lex "$slot", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if122_end215 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
.annotate 'line', 339
    $P5008 = "&compilee_list"()
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if122_end215:
.annotate 'line', 341
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 344
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 345
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 347
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    find_lex $P5017, "$past"
    $P5018 = $P5016."new"($P5017 :named("value"))
.annotate 'line', 348
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_lex $P5020, "$code_obj"
    $P5021 = $P5019."new"($P5020 :named("value"))
    $P5022 = $P5015."new"($P5018, $P5021, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5022 :named("deserialize_past"))
.annotate 'line', 352
    find_lex $P5023, "$fixups"
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 354
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_lex $P5026, "$code_obj"
    $P5027 = $P5025."new"($P5026 :named("value"))
.annotate 'line', 355
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_lex $P5029, "$code_type"
    $P5030 = $P5028."new"($P5029 :named("value"))
.annotate 'line', 356
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5032 = $P5031."new"("$!do" :named("value"))
.annotate 'line', 357
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    find_lex $P5034, "$past"
    $P5035 = $P5033."new"($P5034 :named("value"))
    $P5036 = $P5024."new"($P5027, $P5030, $P5032, $P5035, "bindattr" :named("op"))
    $P5023."push"($P5036)
.annotate 'line', 359
    find_lex $P5037, "$fixups"
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 361
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    find_lex $P5040, "$past"
    $P5041 = $P5039."new"($P5040 :named("value"))
.annotate 'line', 362
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_lex $P5043, "$code_obj"
    $P5044 = $P5042."new"($P5043 :named("value"))
    $P5045 = $P5038."new"($P5041, $P5044, "setcodeobj" :named("op"))
    $P5037."push"($P5045)
    find_lex $P5047, "self"
    nqp_decontainerize $P5046, $P5047
    nqp_get_sc_object $P5048, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5049, $P5046, $P5048, "%!code_objects_to_fix_up", 9
.annotate 'line', 366
    find_lex $P5050, "$past"
    $P5051 = $P5050."cuid"()
    set $S5001, $P5051
    new $P5052, 'ResizablePMCArray'
    find_lex $P5053, "$code_obj"
    push $P5052, $P5053
    set $P5049[$S5001], $P5052
    find_lex $P5055, "self"
    nqp_decontainerize $P5054, $P5055
    nqp_get_sc_object $P5056, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5057, $P5054, $P5056, "%!code_object_types", 10
.annotate 'line', 367
    find_lex $P5058, "$past"
    $P5059 = $P5058."cuid"()
    set $S5002, $P5059
    find_lex $P5060, "$code_type"
    set $P5057[$S5002], $P5060
    find_lex $P5061, "$code_obj"
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 389
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_4 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_3, default223
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_2, $P5006
  default223:
    if haz_param_4, default224
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_3, $P5007
  default224:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_217
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if123_end220 
.annotate 'line', 392
    set $P101["name"], _lex_param_2
  if123_end220:
    defined $I5002, _lex_param_3
    unless $I5002 goto if124_end222 
.annotate 'line', 393
    set $P101["repr"], _lex_param_3
  if124_end222:
.annotate 'line', 394
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 395
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    $P5005 = "RETURN"($P102)
    goto lexotic_218
  lexotic_217:
    .get_results ($P5005)
  lexotic_218:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 407
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 408
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 413
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 414
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 418
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 419
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 420
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
.annotate 'line', 423
    $P5013 = "&compilee_list"(_lex_param_2)
    setattribute $P103, $P101, "$!types", $P5013
.annotate 'line', 425
    $P5014 = "&compilee_list"(_lex_param_3)
    setattribute $P103, $P101, "$!definednesses", $P5014
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 430
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 432
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 435
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 440
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 443
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 444
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 448
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 449
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_391_1382484127.52628' 
    capture_lex $P5030 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_45 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_225
    .lex "RETURN", $P106
.annotate 'line', 455
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
.annotate 'line', 456
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5008 = $P5007."new"()
    $P5009 = $P5006."new"($P5008, _lex_param_1)
    set $P101, $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!BLOCKS", 8
    set $N5001, $P5012
    box $P5013, $N5001
    set $P103, $P5013
  while125_test227:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto while125_done231 
  while125_redo229:
    .const 'Sub' $P5014 = 'cuid_391_1382484127.52628' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5016, $P5015
    goto while125_test227 
  while125_done231:
.annotate 'line', 480
    nqp_decontainerize $P5018, _lex_param_0
    $P5019 = $P5018."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5019
    get_hll_global $P5020, "GLOBAL"
    set $P105, $P5020
    find_dynamic_lex $P5021, "$*GLOBALish"
    unless_null $P5021, fallback253
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_45, $P5022
    repr_defined $I5002, fb_tmp_45
    unless $I5002 goto if137_else254 
    set $P5024, fb_tmp_45["$GLOBALish"]
    set $P5026, $P5024
    goto if137_end255
  if137_else254:
    null $P5025
    set $P5026, $P5025
  if137_end255:
    unless_null $P5026, vivi_138256
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_138256:
    unless_null $P5026, vivi_139257
    die "Contextual $*GLOBALish not found"
    box $P5028, "Contextual $*GLOBALish not found"
    set $P5026, $P5028
  vivi_139257:
    set $P5021, $P5026
  fallback253:
    set_hll_global "GLOBAL", $P5021
.annotate 'line', 483
    $P104()
    set_hll_global "GLOBAL", $P105
.annotate 'line', 488
    $P101."shift"()
    $P5029 = "RETURN"($P101)
    goto lexotic_226
  lexotic_225:
    .get_results ($P5029)
  lexotic_226:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1382484127.52628") :anon :lex :outer("cuid_26_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 461
    .const 'Sub' $P5019 = 'cuid_390_1382484127.52628' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_41 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 463
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_41, $P5007
    repr_defined $I5001, fb_tmp_41
    unless $I5001 goto if126_else232 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_41[$I5002]
    set $P5011, $P5008
    goto if126_end233
  if126_else232:
    null $P5010
    set $P5011, $P5010
  if126_end233:
    unless_null $P5011, vivi_127234
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_127234:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next250:
    unless $P5016, for_done252
    shift $P5018, $P5016
  for_redo251:
    .const 'Sub' $P5017 = 'cuid_390_1382484127.52628' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next250
  for_done252:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1382484127.52628") :anon :lex :outer("cuid_391_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_389_1382484127.52628' 
    capture_lex $P5012 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_42 
    find_lex $P5001, "%seen"
    set fb_tmp_42, $P5001
    repr_defined $I5002, fb_tmp_42
    unless $I5002 goto if130_else239 
.annotate 'line', 465
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_42[$S5001]
    set $P5005, $P5002
    goto if130_end240
  if130_else239:
    null $P5004
    set $P5005, $P5004
  if130_end240:
    unless_null $P5005, vivi_131241
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_131241:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if129_end238 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if129_end238:
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if128_end236 
    .const 'Sub' $P5008 = 'cuid_389_1382484127.52628' 
    capture_lex $P5008
    $P5009 = $P5008()
    set $P5010, $P5009
  if128_end236:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1382484127.52628") :anon :lex :outer("cuid_390_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 465
    .lex "$value", $P101 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 466
    find_lex $P5002, "$_"
    $P5003 = $P5002."value"()
    set fb_tmp_43, $P5003
    repr_defined $I5001, fb_tmp_43
    unless $I5001 goto if132_else242 
    set $P5004, fb_tmp_43["value"]
    set $P5006, $P5004
    goto if132_end243
  if132_else242:
    null $P5005
    set $P5006, $P5005
  if132_end243:
    unless_null $P5006, vivi_133244
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_133244:
    set $P101, $P5006
    nqp_get_sc_for_object $P5008, $P101
    isnull $I5002, $P5008
    if $I5002 goto unless134_end246 
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5009, "$wrapper"
    set fb_tmp_44, $P5009
    repr_defined $I5003, fb_tmp_44
    unless $I5003 goto if135_else247 
    set $P5010, fb_tmp_44[0]
    set $P5012, $P5010
    goto if135_end248
  if135_else247:
    null $P5011
    set $P5012, $P5011
  if135_end248:
    unless_null $P5012, vivi_136249
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_136249:
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 470
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5016, "$_"
    $P5017 = $P5016."key"()
    $P5018 = $P5015."new"($P5017 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 471
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5020 = $P5019."new"($P101 :named("value"))
    $P5021 = $P5014."new"($P5018, $P5020, "bind" :named("op"))
    $P5022 = $P5012."push"($P5021)
  unless134_end246:
    find_lex $P5023, "%seen"
.annotate 'line', 474
    find_lex $P5024, "$_"
    $P5025 = $P5024."key"()
    set $S5001, $P5025
    box $P5026, 1
    set $P5023[$S5001], $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 493
    .param pmc _lex_param_0 
    .const 'Sub' $P5052 = 'cuid_392_1382484127.52628' 
    capture_lex $P5052 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    .local pmc pkg_viv_tmp_9 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback264
    nqp_get_sc_object $P5010, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_8, $P5009
    set fb_tmp_48, pkg_viv_tmp_8
    repr_defined $I5003, fb_tmp_48
    unless $I5003 goto if143_else265 
    set $P5011, fb_tmp_48["%COMPILING"]
    set $P5013, $P5011
    goto if143_end266
  if143_else265:
    null $P5012
    set $P5013, $P5012
  if143_end266:
    unless_null $P5013, vivi_144267
    new $P5014, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_144267:
    unless_null $P5013, vivi_145268
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_145268:
    set $P5008, $P5013
  fallback264:
    set fb_tmp_47, $P5008
    repr_defined $I5002, fb_tmp_47
    unless $I5002 goto if142_else262 
    set $P5016, fb_tmp_47["%?OPTIONS"]
    set $P5018, $P5016
    goto if142_end263
  if142_else262:
    null $P5017
    set $P5018, $P5017
  if142_end263:
    unless_null $P5018, vivi_146269
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_146269:
    set fb_tmp_46, $P5018
    repr_defined $I5001, fb_tmp_46
    unless $I5001 goto if141_else260 
    set $P5020, fb_tmp_46["vmlibs"]
    set $P5022, $P5020
    goto if141_end261
  if141_else260:
    null $P5021
    set $P5022, $P5021
  if141_end261:
    unless_null $P5022, vivi_147270
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_147270:
    unless $P5022 goto if140_end259 
.annotate 'line', 496
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback275
    nqp_get_sc_object $P5030, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_9, $P5029
    set fb_tmp_51, pkg_viv_tmp_9
    repr_defined $I5006, fb_tmp_51
    unless $I5006 goto if150_else276 
    set $P5031, fb_tmp_51["%COMPILING"]
    set $P5033, $P5031
    goto if150_end277
  if150_else276:
    null $P5032
    set $P5033, $P5032
  if150_end277:
    unless_null $P5033, vivi_151278
    new $P5034, 'Hash'
    set pkg_viv_tmp_9["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_151278:
    unless_null $P5033, vivi_152279
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_152279:
    set $P5028, $P5033
  fallback275:
    set fb_tmp_50, $P5028
    repr_defined $I5005, fb_tmp_50
    unless $I5005 goto if149_else273 
    set $P5036, fb_tmp_50["%?OPTIONS"]
    set $P5038, $P5036
    goto if149_end274
  if149_else273:
    null $P5037
    set $P5038, $P5037
  if149_end274:
    unless_null $P5038, vivi_153280
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5038, $P5039
  vivi_153280:
    set fb_tmp_49, $P5038
    repr_defined $I5004, fb_tmp_49
    unless $I5004 goto if148_else271 
    set $P5040, fb_tmp_49["vmlibs"]
    set $P5042, $P5040
    goto if148_end272
  if148_else271:
    null $P5041
    set $P5042, $P5041
  if148_end272:
    unless_null $P5042, vivi_154281
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5042, $P5043
  vivi_154281:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next282:
    unless $P5026, for_done284
    shift $P5045, $P5026
  for_redo283:
    .const 'Sub' $P5044 = 'cuid_392_1382484127.52628' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next282
  for_done284:
  if140_end259:
.annotate 'line', 501
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 503
    nqp_get_sc_object $P5047, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5048 = $P5047."new"("null" :named("op"))
.annotate 'line', 504
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5050 = $P5049."new"("null" :named("op"))
    $P5051 = $P5046."new"($P101 :named("loadlibs"), $P5048 :named("jvm"), $P5050 :named("moar"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1382484127.52628") :anon :lex :outer("cuid_27_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 497
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 498
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 509
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 510
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 511
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 512
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    $P5005 = $P5004."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 513
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    $P5007 = $P5006."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 514
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 516
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    $P5010 = $P5009."new"("getinterp P" :named("pirop"))
.annotate 'line', 517
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5013 = $P5012."new"("LexPad" :named("value"))
    $P5014 = $P5011."new"($P5013, "get_class Ps" :named("pirop"))
.annotate 'line', 518
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5017 = $P5016."new"("NQPLexPad" :named("value"))
    $P5018 = $P5015."new"($P5017, "get_class Ps" :named("pirop"))
    $P5019 = $P5008."new"($P5010, $P5014, $P5018, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5020 = $P5003."new"($P5005, $P5007, $P5019)
.annotate 'line', 520
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5022 = $P5021."new"("null" :named("op"))
.annotate 'line', 521
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5024 = $P5023."new"("null" :named("op"))
    $P5025 = $P5002."new"($P5020 :named("parrot"), $P5022 :named("jvm"), $P5024 :named("moar"))
    $P5026 = $P5001."add_load_dependency_task"($P5025 :named("deserialize_past"))
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 526
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_393_1382484127.52628' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks", 13
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next285:
    unless $P5003, for_done287
    shift $P5008, $P5003
  for_redo286:
    .const 'Sub' $P5007 = 'cuid_393_1382484127.52628' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next285
  for_done287:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1382484127.52628") :anon :lex :outer("cuid_29_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 527
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 537
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 538
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 543
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 544
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 549
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_394_1382484127.52628' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_288
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS", 8
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while155_test290:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while155_done294 
  while155_redo292:
    .const 'Sub' $P5006 = 'cuid_394_1382484127.52628' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while155_test290 
  while155_done294:
    box $P5010, 0
    goto lexotic_289
  lexotic_288:
    .get_results ($P5010)
  lexotic_289:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1382484127.52628") :anon :lex :outer("cuid_32_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 551
    .lex "%sym", $P101 
    .local pmc fb_tmp_52 
    .local pmc fb_tmp_53 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 553
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_52, $P5007
    repr_defined $I5001, fb_tmp_52
    unless $I5001 goto if156_else295 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_52[$I5002]
    set $P5011, $P5008
    goto if156_end296
  if156_else295:
    null $P5010
    set $P5011, $P5010
  if156_end296:
    unless_null $P5011, vivi_157297
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_157297:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5022, $N5004
    set $P5021, $P5022
    unless $N5004 goto if158_end299 
.annotate 'line', 554
    set fb_tmp_53, $P101
    repr_defined $I5004, fb_tmp_53
    unless $I5004 goto if159_else300 
    set $P5015, fb_tmp_53["scope"]
    set $P5017, $P5015
    goto if159_end301
  if159_else300:
    null $P5016
    set $P5017, $P5016
  if159_end301:
    unless_null $P5017, vivi_160302
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_160302:
    set $S5001, $P5017
    find_lex $P5019, "$wanted_scope"
    set $S5002, $P5019
    iseq $I5003, $S5001, $S5002
    $P5020 = "RETURN"($I5003)
    set $P5021, $P5020
  if158_end299:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 562
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_162304
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 564
.annotate 'line', 565
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_161303
  catch_handler_162304:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_161303
  skip_handler_161303:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1382484127.52628") :anon :lex :outer("cuid_376_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 574
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_396_1382484127.52628' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_398_1382484127.52628' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_399_1382484127.52628' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_305
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless163_end308 
.annotate 'line', 576
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless163_end308:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if164_end310 
    .const 'Sub' $P5003 = 'cuid_396_1382484127.52628' 
    capture_lex $P5003
    $P5004 = $P5003()
  if164_end310:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback329
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5006, $P5007
    set fb_tmp_57, $P5006
    repr_defined $I5002, fb_tmp_57
    unless $I5002 goto if174_else330 
    set $P5008, fb_tmp_57["$GLOBALish"]
    set $P5010, $P5008
    goto if174_end331
  if174_else330:
    null $P5009
    set $P5010, $P5009
  if174_end331:
    unless_null $P5010, vivi_175332
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_175332:
    unless_null $P5010, vivi_176333
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_176333:
    set $P5005, $P5010
  fallback329:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if177_end335 
    .const 'Sub' $P5013 = 'cuid_398_1382484127.52628' 
    capture_lex $P5013
    $P5014 = $P5013()
  if177_end335:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next359:
    unless $P5017, for_done361
    shift $P5019, $P5017
  for_redo360:
    .const 'Sub' $P5018 = 'cuid_399_1382484127.52628' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next359
  for_done361:
    goto lexotic_306
  lexotic_305:
    .get_results ($P101)
  lexotic_306:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1382484127.52628") :anon :lex :outer("cuid_34_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 580
    .const 'Sub' $P5017 = 'cuid_395_1382484127.52628' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_54 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_54, $P5003
    repr_defined $I5001, fb_tmp_54
    unless $I5001 goto if165_else311 
    set $P5004, fb_tmp_54[0]
    set $P5006, $P5004
    goto if165_end312
  if165_else311:
    null $P5005
    set $P5006, $P5005
  if165_end312:
    unless_null $P5006, vivi_166313
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_166313:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while167_test314:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while167_done318 
  while167_redo316:
    .const 'Sub' $P5013 = 'cuid_395_1382484127.52628' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while167_test314 
  while167_done318:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1382484127.52628") :anon :lex :outer("cuid_396_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 583
    .lex "%sym", $P101 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 585
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_55, $P5007
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if168_else319 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_55[$I5002]
    set $P5011, $P5008
    goto if168_end320
  if168_else319:
    null $P5010
    set $P5011, $P5010
  if168_end320:
    unless_null $P5011, vivi_169321
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_169321:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5024, $N5004
    set $P5023, $P5024
    unless $N5004 goto if170_end323 
.annotate 'line', 586
    exists $I5003, $P101["value"]
    unless $I5003 goto if171_else324 
.annotate 'line', 587
    set fb_tmp_56, $P101
    repr_defined $I5004, fb_tmp_56
    unless $I5004 goto if172_else326 
    set $P5015, fb_tmp_56["value"]
    set $P5017, $P5015
    goto if172_end327
  if172_else326:
    null $P5016
    set $P5017, $P5016
  if172_end327:
    unless_null $P5017, vivi_173328
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_173328:
    $P5019 = "RETURN"($P5017)
    set $P5022, $P5019
    goto if171_end325
  if171_else324:
.annotate 'line', 590
    find_lex $P5020, "$final_name"
    set $S5002, $P5020
    concat $S5001, "No compile-time value for ", $S5002
    box $P5021, $S5001
    die $P5021
    set $P5022, $P5021
  if171_end325:
    set $P5023, $P5022
  if170_end323:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1382484127.52628") :anon :lex :outer("cuid_34_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 601
    .const 'Sub' $P5017 = 'cuid_397_1382484127.52628' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_58, $P5003
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if178_else336 
    set $P5004, fb_tmp_58[0]
    set $P5006, $P5004
    goto if178_end337
  if178_else336:
    null $P5005
    set $P5006, $P5005
  if178_end337:
    unless_null $P5006, vivi_179338
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_179338:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS", 8
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while180_test339:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while180_done343 
  while180_redo341:
    .const 'Sub' $P5013 = 'cuid_397_1382484127.52628' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while180_test339 
  while180_done343:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1382484127.52628") :anon :lex :outer("cuid_398_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 604
    .lex "%sym", $P101 
    .local pmc fb_tmp_59 
    .local pmc fb_tmp_60 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 606
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS", 8
    set fb_tmp_59, $P5007
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if181_else344 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_59[$I5002]
    set $P5011, $P5008
    goto if181_end345
  if181_else344:
    null $P5010
    set $P5011, $P5010
  if181_end345:
    unless_null $P5011, vivi_182346
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_182346:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if183_end348 
.annotate 'line', 607
    exists $I5003, $P101["value"]
    unless $I5003 goto if184_else349 
.annotate 'line', 608
    set fb_tmp_60, $P101
    repr_defined $I5004, fb_tmp_60
    unless $I5004 goto if185_else351 
    set $P5015, fb_tmp_60["value"]
    set $P5017, $P5015
    goto if185_end352
  if185_else351:
    null $P5016
    set $P5017, $P5016
  if185_end352:
    unless_null $P5017, vivi_186353
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_186353:
    store_lex "$result", $P5017
.annotate 'line', 610
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if184_end350
  if184_else349:
.annotate 'line', 613
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if184_end350:
    set $P5024, $P5023
  if183_end348:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1382484127.52628") :anon :lex :outer("cuid_34_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 621
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_61 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if187_else354 
.annotate 'line', 622
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_61, $P5003
    repr_defined $I5002, fb_tmp_61
    unless $I5002 goto if188_else356 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_61[$S5002]
    set $P5007, $P5005
    goto if188_end357
  if188_else356:
    null $P5006
    set $P5007, $P5006
  if188_end357:
    unless_null $P5007, vivi_189358
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_189358:
    store_lex "$result", $P5007
    set $P5012, $P5007
    goto if187_end355
  if187_else354:
.annotate 'line', 625
.annotate 'line', 627
    find_lex $P5009, "@name"
    $P5010 = "&join"("::", $P5009)
    set $S5004, $P5010
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5011, $S5003
    die $P5011
    set $P5012, $P5011
  if187_end355:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 636
    .const 'Sub' $P5199 = 'cuid_35_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_36_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_37_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_38_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_39_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_40_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_41_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_43_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_45_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_46_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_48_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_50_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_51_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_52_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_53_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_54_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_55_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_56_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_57_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_58_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_59_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_60_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_61_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_62_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_63_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_64_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_65_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_66_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_68_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_69_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_70_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_71_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_72_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_73_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_74_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_75_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_76_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_77_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_79_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_80_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_81_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_82_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_83_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_84_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_85_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_86_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_87_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_88_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_89_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_90_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_91_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_92_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_95_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_96_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_97_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_98_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_99_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_100_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_101_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_102_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_103_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_104_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_105_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_106_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_107_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_108_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_109_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_110_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_111_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_112_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_113_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_114_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_115_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_116_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_117_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_118_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_119_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_120_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_121_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_122_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_123_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_124_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_125_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_126_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_127_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_128_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_129_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_130_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_131_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_132_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_133_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_134_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_135_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_136_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_137_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_138_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_139_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_140_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_141_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_142_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_143_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_144_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_145_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_146_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_147_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_148_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_149_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_150_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_151_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_152_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_153_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_154_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_155_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_156_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_157_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_158_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_159_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_160_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_161_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_162_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_163_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_164_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_165_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_166_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_167_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_168_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_169_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_170_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_171_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_172_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_173_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_174_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_175_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_176_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_177_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_178_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_179_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_180_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_181_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_182_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_183_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_184_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_185_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_186_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_187_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_188_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_189_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_190_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_191_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_192_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_193_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_194_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_195_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_196_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_197_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_198_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_199_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_200_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_201_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_202_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_203_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_204_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_205_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_206_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_207_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_208_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_209_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_210_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_211_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_212_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_213_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_214_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_215_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_216_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_217_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_218_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_219_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_220_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_221_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_222_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_223_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_224_1382484127.52628' 
    capture_lex $P5199 
    .const 'Sub' $P5199 = 'cuid_225_1382484127.52628' 
    capture_lex $P5199 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
.annotate 'line', 1324
.annotate 'line', 1325
    nqp_get_sc_object $P5001, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5001."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1326
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5002."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1327
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5003."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1328
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5004."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1329
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5005."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1330
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5006."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1331
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5007."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1332
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5008."O"(":prec<m=>, :assoc<non>", "%relational")
.annotate 'line', 1333
    nqp_get_sc_object $P5009, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5009."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1334
    nqp_get_sc_object $P5010, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5010."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1335
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5011."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1336
    nqp_get_sc_object $P5012, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5012."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1337
    nqp_get_sc_object $P5013, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5013."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1338
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5014."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1339
    nqp_get_sc_object $P5015, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    $P5015."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 636
    .const 'Sub' $P5016 = 'cuid_35_1382484127.52628' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_36_1382484127.52628' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_37_1382484127.52628' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_38_1382484127.52628' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_39_1382484127.52628' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_40_1382484127.52628' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_41_1382484127.52628' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_43_1382484127.52628' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_45_1382484127.52628' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_46_1382484127.52628' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_48_1382484127.52628' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_50_1382484127.52628' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_51_1382484127.52628' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_52_1382484127.52628' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_53_1382484127.52628' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_54_1382484127.52628' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_55_1382484127.52628' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_56_1382484127.52628' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_57_1382484127.52628' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_58_1382484127.52628' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_59_1382484127.52628' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_60_1382484127.52628' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_61_1382484127.52628' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_62_1382484127.52628' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_63_1382484127.52628' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_64_1382484127.52628' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_65_1382484127.52628' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_66_1382484127.52628' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_68_1382484127.52628' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_69_1382484127.52628' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_70_1382484127.52628' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_71_1382484127.52628' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_72_1382484127.52628' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_73_1382484127.52628' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_74_1382484127.52628' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_75_1382484127.52628' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_76_1382484127.52628' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_77_1382484127.52628' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_79_1382484127.52628' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_80_1382484127.52628' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_81_1382484127.52628' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_82_1382484127.52628' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_83_1382484127.52628' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_84_1382484127.52628' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_85_1382484127.52628' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_86_1382484127.52628' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_87_1382484127.52628' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_88_1382484127.52628' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_89_1382484127.52628' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_90_1382484127.52628' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_91_1382484127.52628' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_92_1382484127.52628' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_95_1382484127.52628' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_96_1382484127.52628' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_97_1382484127.52628' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_98_1382484127.52628' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_99_1382484127.52628' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_100_1382484127.52628' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_101_1382484127.52628' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_102_1382484127.52628' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_103_1382484127.52628' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_104_1382484127.52628' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_105_1382484127.52628' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_106_1382484127.52628' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_107_1382484127.52628' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_108_1382484127.52628' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_109_1382484127.52628' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_110_1382484127.52628' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_111_1382484127.52628' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_112_1382484127.52628' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_113_1382484127.52628' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_114_1382484127.52628' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_115_1382484127.52628' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_116_1382484127.52628' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_117_1382484127.52628' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_118_1382484127.52628' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_119_1382484127.52628' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_120_1382484127.52628' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_121_1382484127.52628' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_122_1382484127.52628' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_123_1382484127.52628' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_124_1382484127.52628' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_125_1382484127.52628' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_126_1382484127.52628' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_127_1382484127.52628' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_128_1382484127.52628' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_129_1382484127.52628' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_130_1382484127.52628' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_131_1382484127.52628' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_132_1382484127.52628' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_133_1382484127.52628' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_134_1382484127.52628' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_135_1382484127.52628' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_136_1382484127.52628' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_137_1382484127.52628' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_138_1382484127.52628' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_139_1382484127.52628' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_140_1382484127.52628' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_141_1382484127.52628' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_142_1382484127.52628' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_143_1382484127.52628' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_144_1382484127.52628' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_145_1382484127.52628' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_146_1382484127.52628' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_147_1382484127.52628' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_148_1382484127.52628' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_149_1382484127.52628' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_150_1382484127.52628' 
    capture_lex $P5123
    .const 'Sub' $P5124 = 'cuid_151_1382484127.52628' 
    capture_lex $P5124
    .const 'Sub' $P5125 = 'cuid_152_1382484127.52628' 
    capture_lex $P5125
    .const 'Sub' $P5126 = 'cuid_153_1382484127.52628' 
    capture_lex $P5126
    .const 'Sub' $P5127 = 'cuid_154_1382484127.52628' 
    capture_lex $P5127
    .const 'Sub' $P5128 = 'cuid_155_1382484127.52628' 
    capture_lex $P5128
    .const 'Sub' $P5129 = 'cuid_156_1382484127.52628' 
    capture_lex $P5129
    .const 'Sub' $P5130 = 'cuid_157_1382484127.52628' 
    capture_lex $P5130
    .const 'Sub' $P5131 = 'cuid_158_1382484127.52628' 
    capture_lex $P5131
    .const 'Sub' $P5132 = 'cuid_159_1382484127.52628' 
    capture_lex $P5132
    .const 'Sub' $P5133 = 'cuid_160_1382484127.52628' 
    capture_lex $P5133
    .const 'Sub' $P5134 = 'cuid_161_1382484127.52628' 
    capture_lex $P5134
    .const 'Sub' $P5135 = 'cuid_162_1382484127.52628' 
    capture_lex $P5135
    .const 'Sub' $P5136 = 'cuid_163_1382484127.52628' 
    capture_lex $P5136
    .const 'Sub' $P5137 = 'cuid_164_1382484127.52628' 
    capture_lex $P5137
    .const 'Sub' $P5138 = 'cuid_165_1382484127.52628' 
    capture_lex $P5138
    .const 'Sub' $P5139 = 'cuid_166_1382484127.52628' 
    capture_lex $P5139
    .const 'Sub' $P5140 = 'cuid_167_1382484127.52628' 
    capture_lex $P5140
    .const 'Sub' $P5141 = 'cuid_168_1382484127.52628' 
    capture_lex $P5141
    .const 'Sub' $P5142 = 'cuid_169_1382484127.52628' 
    capture_lex $P5142
    .const 'Sub' $P5143 = 'cuid_170_1382484127.52628' 
    capture_lex $P5143
    .const 'Sub' $P5144 = 'cuid_171_1382484127.52628' 
    capture_lex $P5144
    .const 'Sub' $P5145 = 'cuid_172_1382484127.52628' 
    capture_lex $P5145
    .const 'Sub' $P5146 = 'cuid_173_1382484127.52628' 
    capture_lex $P5146
    .const 'Sub' $P5147 = 'cuid_174_1382484127.52628' 
    capture_lex $P5147
    .const 'Sub' $P5148 = 'cuid_175_1382484127.52628' 
    capture_lex $P5148
    .const 'Sub' $P5149 = 'cuid_176_1382484127.52628' 
    capture_lex $P5149
    .const 'Sub' $P5150 = 'cuid_177_1382484127.52628' 
    capture_lex $P5150
    .const 'Sub' $P5151 = 'cuid_178_1382484127.52628' 
    capture_lex $P5151
    .const 'Sub' $P5152 = 'cuid_179_1382484127.52628' 
    capture_lex $P5152
    .const 'Sub' $P5153 = 'cuid_180_1382484127.52628' 
    capture_lex $P5153
    .const 'Sub' $P5154 = 'cuid_181_1382484127.52628' 
    capture_lex $P5154
    .const 'Sub' $P5155 = 'cuid_182_1382484127.52628' 
    capture_lex $P5155
    .const 'Sub' $P5156 = 'cuid_183_1382484127.52628' 
    capture_lex $P5156
    .const 'Sub' $P5157 = 'cuid_184_1382484127.52628' 
    capture_lex $P5157
    .const 'Sub' $P5158 = 'cuid_185_1382484127.52628' 
    capture_lex $P5158
    .const 'Sub' $P5159 = 'cuid_186_1382484127.52628' 
    capture_lex $P5159
    .const 'Sub' $P5160 = 'cuid_187_1382484127.52628' 
    capture_lex $P5160
    .const 'Sub' $P5161 = 'cuid_188_1382484127.52628' 
    capture_lex $P5161
    .const 'Sub' $P5162 = 'cuid_189_1382484127.52628' 
    capture_lex $P5162
    .const 'Sub' $P5163 = 'cuid_190_1382484127.52628' 
    capture_lex $P5163
    .const 'Sub' $P5164 = 'cuid_191_1382484127.52628' 
    capture_lex $P5164
    .const 'Sub' $P5165 = 'cuid_192_1382484127.52628' 
    capture_lex $P5165
    .const 'Sub' $P5166 = 'cuid_193_1382484127.52628' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_194_1382484127.52628' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_195_1382484127.52628' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_196_1382484127.52628' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_197_1382484127.52628' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_198_1382484127.52628' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_199_1382484127.52628' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_200_1382484127.52628' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_201_1382484127.52628' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_202_1382484127.52628' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_203_1382484127.52628' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_204_1382484127.52628' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_205_1382484127.52628' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_206_1382484127.52628' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_207_1382484127.52628' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_208_1382484127.52628' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_209_1382484127.52628' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_210_1382484127.52628' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_211_1382484127.52628' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_212_1382484127.52628' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_213_1382484127.52628' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_214_1382484127.52628' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_215_1382484127.52628' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_216_1382484127.52628' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_217_1382484127.52628' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_218_1382484127.52628' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_219_1382484127.52628' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_220_1382484127.52628' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_221_1382484127.52628' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_222_1382484127.52628' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_223_1382484127.52628' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_224_1382484127.52628' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_225_1382484127.52628' 
    capture_lex $P5198
    .return ($P5198) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 637
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_62 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_63 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_64 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_65 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_66 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_67 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_68 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_69 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_70 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_71 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_72 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_76 
    .local pmc pkg_viv_tmp_19 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P107, $P5007
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P108, $P5008
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P109, $P5009
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P110, $P5010
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback367
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_11, $P5020
    set fb_tmp_63, pkg_viv_tmp_11
    repr_defined $I5002, fb_tmp_63
    unless $I5002 goto if193_else368 
    set $P5022, fb_tmp_63["%LANG"]
    set $P5024, $P5022
    goto if193_end369
  if193_else368:
    null $P5023
    set $P5024, $P5023
  if193_end369:
    unless_null $P5024, vivi_194370
    new $P5025, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5025
    set $P5024, $P5025
  vivi_194370:
    unless_null $P5024, vivi_195371
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_195371:
    set $P101, $P5024
  fallback367:
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    set pkg_lookup_tmp_1, $P5028
    get_who $P5029, pkg_lookup_tmp_1
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if197_else374 
    get_who $P5031, pkg_lookup_tmp_1
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if197_end375
  if197_else374:
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5032
  if197_end375:
    get_who $P5027, $P5033
    set fb_tmp_64, $P5027
    repr_defined $I5003, fb_tmp_64
    unless $I5003 goto if196_else372 
    set $P5034, fb_tmp_64["Regex"]
    set $P5036, $P5034
    goto if196_end373
  if196_else372:
    null $P5035
    set $P5036, $P5035
  if196_end373:
    unless_null $P5036, vivi_198376
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5036, $P5037
  vivi_198376:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback377
    nqp_get_sc_object $P5039, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_12, $P5038
    set fb_tmp_65, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_65
    unless $I5005 goto if199_else378 
    set $P5040, fb_tmp_65["%LANG"]
    set $P5042, $P5040
    goto if199_end379
  if199_else378:
    null $P5041
    set $P5042, $P5041
  if199_end379:
    unless_null $P5042, vivi_200380
    new $P5043, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5043
    set $P5042, $P5043
  vivi_200380:
    unless_null $P5042, vivi_201381
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_201381:
    set $P101, $P5042
  fallback377:
    nqp_get_sc_object $P5046, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    set pkg_lookup_tmp_2, $P5046
    get_who $P5047, pkg_lookup_tmp_2
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if203_else384 
    get_who $P5049, pkg_lookup_tmp_2
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if203_end385
  if203_else384:
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5051, $P5050
  if203_end385:
    get_who $P5045, $P5051
    set fb_tmp_66, $P5045
    repr_defined $I5006, fb_tmp_66
    unless $I5006 goto if202_else382 
    set $P5052, fb_tmp_66["RegexActions"]
    set $P5054, $P5052
    goto if202_end383
  if202_else382:
    null $P5053
    set $P5054, $P5053
  if202_end383:
    unless_null $P5054, vivi_204386
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5054, $P5055
  vivi_204386:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback387
    nqp_get_sc_object $P5057, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_13, $P5056
    set fb_tmp_67, pkg_viv_tmp_13
    repr_defined $I5008, fb_tmp_67
    unless $I5008 goto if205_else388 
    set $P5058, fb_tmp_67["%LANG"]
    set $P5060, $P5058
    goto if205_end389
  if205_else388:
    null $P5059
    set $P5060, $P5059
  if205_end389:
    unless_null $P5060, vivi_206390
    new $P5061, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5061
    set $P5060, $P5061
  vivi_206390:
    unless_null $P5060, vivi_207391
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_207391:
    set $P101, $P5060
  fallback387:
    nqp_get_sc_object $P5063, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    set $P101["MAIN"], $P5063
    unless_null $P101, fallback392
    nqp_get_sc_object $P5065, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5064, $P5065
    set pkg_viv_tmp_14, $P5064
    set fb_tmp_68, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_68
    unless $I5009 goto if208_else393 
    set $P5066, fb_tmp_68["%LANG"]
    set $P5068, $P5066
    goto if208_end394
  if208_else393:
    null $P5067
    set $P5068, $P5067
  if208_end394:
    unless_null $P5068, vivi_209395
    new $P5069, 'Hash'
    set pkg_viv_tmp_14["%LANG"], $P5069
    set $P5068, $P5069
  vivi_209395:
    unless_null $P5068, vivi_210396
    die "Contextual %*LANG not found"
    box $P5070, "Contextual %*LANG not found"
    set $P5068, $P5070
  vivi_210396:
    set $P101, $P5068
  fallback392:
    nqp_get_sc_object $P5072, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    set pkg_lookup_tmp_3, $P5072
    get_who $P5073, pkg_lookup_tmp_3
    exists $I5011, $P5073["NQP"]
    unless $I5011 goto if212_else399 
    get_who $P5075, pkg_lookup_tmp_3
    set $P5074, $P5075["NQP"]
    set $P5077, $P5074
    goto if212_end400
  if212_else399:
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5077, $P5076
  if212_end400:
    get_who $P5071, $P5077
    set fb_tmp_69, $P5071
    repr_defined $I5010, fb_tmp_69
    unless $I5010 goto if211_else397 
    set $P5078, fb_tmp_69["Actions"]
    set $P5080, $P5078
    goto if211_end398
  if211_else397:
    null $P5079
    set $P5080, $P5079
  if211_end398:
    unless_null $P5080, vivi_213401
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5080, $P5081
  vivi_213401:
    set $P101["MAIN-actions"], $P5080
    unless_null $P102, fallback407
    nqp_get_sc_object $P5090, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_16, $P5089
    set fb_tmp_71, pkg_viv_tmp_16
    repr_defined $I5013, fb_tmp_71
    unless $I5013 goto if217_else408 
    set $P5091, fb_tmp_71["%HOW"]
    set $P5093, $P5091
    goto if217_end409
  if217_else408:
    null $P5092
    set $P5093, $P5092
  if217_end409:
    unless_null $P5093, vivi_218410
    new $P5094, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5094
    set $P5093, $P5094
  vivi_218410:
    unless_null $P5093, vivi_219411
    die "Contextual %*HOW not found"
    box $P5095, "Contextual %*HOW not found"
    set $P5093, $P5095
  vivi_219411:
    set $P102, $P5093
  fallback407:
    get_knowhow $P5096
    set $P102["knowhow"], $P5096
    unless_null $P102, fallback412
    nqp_get_sc_object $P5098, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_17, $P5097
    set fb_tmp_72, pkg_viv_tmp_17
    repr_defined $I5014, fb_tmp_72
    unless $I5014 goto if220_else413 
    set $P5099, fb_tmp_72["%HOW"]
    set $P5101, $P5099
    goto if220_end414
  if220_else413:
    null $P5100
    set $P5101, $P5100
  if220_end414:
    unless_null $P5101, vivi_221415
    new $P5102, 'Hash'
    set pkg_viv_tmp_17["%HOW"], $P5102
    set $P5101, $P5102
  vivi_221415:
    unless_null $P5101, vivi_222416
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_222416:
    set $P102, $P5101
  fallback412:
    get_knowhow_attribute $P5104
    set $P102["knowhow-attr"], $P5104
    find_dynamic_lex $P5105, "$?FILES"
    set $P103, $P5105
.annotate 'line', 656
    nqp_decontainerize $P5106, _lex_param_0
    $P5107 = $P5106."target"()
    set $S5003, $P5107
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5108, "%*COMPILING"
    unless_null $P5108, fallback423
    nqp_get_sc_object $P5110, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_18, $P5109
    set fb_tmp_75, pkg_viv_tmp_18
    repr_defined $I5017, fb_tmp_75
    unless $I5017 goto if226_else424 
    set $P5111, fb_tmp_75["%COMPILING"]
    set $P5113, $P5111
    goto if226_end425
  if226_else424:
    null $P5112
    set $P5113, $P5112
  if226_end425:
    unless_null $P5113, vivi_227426
    new $P5114, 'Hash'
    set pkg_viv_tmp_18["%COMPILING"], $P5114
    set $P5113, $P5114
  vivi_227426:
    unless_null $P5113, vivi_228427
    die "Contextual %*COMPILING not found"
    box $P5115, "Contextual %*COMPILING not found"
    set $P5113, $P5115
  vivi_228427:
    set $P5108, $P5113
  fallback423:
    set fb_tmp_74, $P5108
    repr_defined $I5016, fb_tmp_74
    unless $I5016 goto if225_else421 
    set $P5116, fb_tmp_74["%?OPTIONS"]
    set $P5118, $P5116
    goto if225_end422
  if225_else421:
    null $P5117
    set $P5118, $P5117
  if225_end422:
    unless_null $P5118, vivi_229428
    nqp_get_sc_object $P5119, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5118, $P5119
  vivi_229428:
    set fb_tmp_73, $P5118
    repr_defined $I5015, fb_tmp_73
    unless $I5015 goto if224_else419 
    set $P5120, fb_tmp_73["stable-sc"]
    set $P5122, $P5120
    goto if224_end420
  if224_else419:
    null $P5121
    set $P5122, $P5121
  if224_end420:
    unless_null $P5122, vivi_230429
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5122, $P5123
  vivi_230429:
    unless $P5122 goto if223_else417 
    set $S5006, ""
    goto if223_end418
  if223_else417:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if223_end418:
    concat $S5001, $S5002, $S5006
    box $P5124, $S5001
    set $P104, $P5124
    isnull $I5018, $P103
    unless $I5018 goto if231_else430 
.annotate 'line', 659
    nqp_get_sc_object $P5125, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    $P5126 = $P5125."new"($P104 :named("handle"))
    set $P5129, $P5126
    goto if231_end431
  if231_else430:
.annotate 'line', 660
    nqp_get_sc_object $P5127, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    $P5128 = $P5127."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5129, $P5128
  if231_end431:
    set $P105, $P5129
    box $P5130, ""
    set $P106, $P5130
    box $P5131, ""
    set $P107, $P5131
    box $P5132, ""
    set $P108, $P5132
    box $P5133, 0
    set $P109, $P5133
    box $P5134, 0
    set $P110, $P5134
    box $P5135, 0
    set $P111, $P5135
.annotate 'line', 669
    nqp_decontainerize $P5143, _lex_param_0
    $P5144 = $P5143."comp_unit"()
    .return ($P5144) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 674
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx235_start
    .local string rx235_tgt
    .local int rx235_pos
    .local int rx235_off
    .local int rx235_eos
    .local int rx235_rep
    .local pmc rx235_cur
    .local pmc rx235_curclass
    .local pmc rx235_bstack
    .local pmc rx235_cstack
    rx235_start = self."!cursor_start_all"()
    set rx235_cur, rx235_start[0]
    set rx235_tgt, rx235_start[1]
    set rx235_pos, rx235_start[2]
    set rx235_curclass, rx235_start[3]
    set rx235_bstack, rx235_start[4]
    set $I19, rx235_start[5]
    store_lex unicode:"$\x{a2}", rx235_cur
    length rx235_eos, rx235_tgt
    eq $I19, 1, rx235_restart439
    gt rx235_pos, rx235_eos, rx235_fail440
    repr_get_attr_int $I11, self, rx235_curclass, "$!from"
    ne $I11, -1, rxscan236_done446
    goto rxscan236_scan445
  rxscan236_loop444:
    inc rx235_pos
    gt rx235_pos, rx235_eos, rx235_fail440
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!from", rx235_pos
  rxscan236_scan445:
    nqp_rxmark rx235_bstack, rxscan236_loop444, rx235_pos, 0
  rxscan236_done446:
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!pos", rx235_pos
    $P11 = rx235_cur."ident"()
    repr_get_attr_int $I11, $P11, rx235_curclass, "$!pos"
    lt $I11, 0, rx235_fail440
    repr_get_attr_int rx235_pos, $P11, rx235_curclass, "$!pos"
    nqp_rxmark rx235_bstack, rxquantr238_done449, rx235_pos, 0
  rxquantr238_loop448:
    ge rx235_pos, rx235_eos, rx235_fail440
    substr $S11, rx235_tgt, rx235_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx235_fail440
    inc rx235_pos
    repr_bind_attr_int rx235_cur, rx235_curclass, "$!pos", rx235_pos
    $P11 = rx235_cur."ident"()
    repr_get_attr_int $I11, $P11, rx235_curclass, "$!pos"
    lt $I11, 0, rx235_fail440
    repr_get_attr_int rx235_pos, $P11, rx235_curclass, "$!pos"
    nqp_rxpeek $I19, rx235_bstack, rxquantr238_done449
    inc $I19
    inc $I19
    set rx235_rep, rx235_bstack[$I19]
    nqp_rxcommit rx235_bstack, rxquantr238_done449
    inc rx235_rep
    nqp_rxmark rx235_bstack, rxquantr238_done449, rx235_pos, rx235_rep
    goto rxquantr238_loop448
  rxquantr238_done449:
    rx235_cur."!cursor_pass"(rx235_pos, "identifier", 'backtrack'=>1)
    .return (rx235_cur)
  rx235_restart439:
    repr_get_attr_obj rx235_cstack, rx235_cur, rx235_curclass, "$!cstack"
  rx235_fail440:
    unless rx235_bstack, rx235_done438
    pop $I19, rx235_bstack
    if_null rx235_cstack, rx235_cstack_done443
    unless rx235_cstack, rx235_cstack_done443
    dec $I19
    set $P11, rx235_cstack[$I19]
  rx235_cstack_done443:
    pop rx235_rep, rx235_bstack
    pop rx235_pos, rx235_bstack
    pop $I19, rx235_bstack
    lt rx235_pos, -1, rx235_done438
    lt rx235_pos, 0, rx235_fail440
    eq $I19, 0, rx235_fail440
    nqp_islist $I20, rx235_cstack
    unless $I20, rx235_jump441
    elements $I18, rx235_bstack
    le $I18, 0, rx235_cut442
    dec $I18
    set $I18, rx235_bstack[$I18]
  rx235_cut442:
    assign rx235_cstack, $I18
  rx235_jump441:
    jump $I19
  rx235_done438:
    rx235_cur."!cursor_fail"()
    .return (rx235_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 676
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx240_start
    .local string rx240_tgt
    .local int rx240_pos
    .local int rx240_off
    .local int rx240_eos
    .local int rx240_rep
    .local pmc rx240_cur
    .local pmc rx240_curclass
    .local pmc rx240_bstack
    .local pmc rx240_cstack
    rx240_start = self."!cursor_start_all"()
    set rx240_cur, rx240_start[0]
    set rx240_tgt, rx240_start[1]
    set rx240_pos, rx240_start[2]
    set rx240_curclass, rx240_start[3]
    set rx240_bstack, rx240_start[4]
    set $I19, rx240_start[5]
    store_lex unicode:"$\x{a2}", rx240_cur
    length rx240_eos, rx240_tgt
    eq $I19, 1, rx240_restart453
    gt rx240_pos, rx240_eos, rx240_fail454
    repr_get_attr_int $I11, self, rx240_curclass, "$!from"
    ne $I11, -1, rxscan241_done460
    goto rxscan241_scan459
  rxscan241_loop458:
    inc rx240_pos
    gt rx240_pos, rx240_eos, rx240_fail454
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!from", rx240_pos
  rxscan241_scan459:
    nqp_rxmark rx240_bstack, rxscan241_loop458, rx240_pos, 0
  rxscan241_done460:
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!pos", rx240_pos
    $P11 = rx240_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx240_curclass, "$!pos"
    lt $I11, 0, rx240_fail454
    nqp_rxmark rx240_bstack, rxsubrule242_pass461, -1, 0
  rxsubrule242_pass461:
    rx240_cstack = rx240_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx240_pos, $P11, rx240_curclass, "$!pos"
    nqp_rxmark rx240_bstack, rxquantr243_done463, rx240_pos, 0
  rxquantr243_loop462:
    add $I11, rx240_pos, 2
    gt $I11, rx240_eos, rx240_fail454
    substr $S10, rx240_tgt, rx240_pos, 2
    ne $S10, ucs4:"::", rx240_fail454
    add rx240_pos, 2
    repr_bind_attr_int rx240_cur, rx240_curclass, "$!pos", rx240_pos
    $P11 = rx240_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx240_curclass, "$!pos"
    lt $I11, 0, rx240_fail454
    nqp_rxmark rx240_bstack, rxsubrule244_pass464, -1, 0
  rxsubrule244_pass464:
    rx240_cstack = rx240_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx240_pos, $P11, rx240_curclass, "$!pos"
    nqp_rxpeek $I19, rx240_bstack, rxquantr243_done463
    inc $I19
    inc $I19
    set rx240_rep, rx240_bstack[$I19]
    nqp_rxcommit rx240_bstack, rxquantr243_done463
    inc rx240_rep
    nqp_rxmark rx240_bstack, rxquantr243_done463, rx240_pos, rx240_rep
    goto rxquantr243_loop462
  rxquantr243_done463:
    rx240_cur."!cursor_pass"(rx240_pos, "name", 'backtrack'=>1)
    .return (rx240_cur)
  rx240_restart453:
    repr_get_attr_obj rx240_cstack, rx240_cur, rx240_curclass, "$!cstack"
  rx240_fail454:
    unless rx240_bstack, rx240_done452
    pop $I19, rx240_bstack
    if_null rx240_cstack, rx240_cstack_done457
    unless rx240_cstack, rx240_cstack_done457
    dec $I19
    set $P11, rx240_cstack[$I19]
  rx240_cstack_done457:
    pop rx240_rep, rx240_bstack
    pop rx240_pos, rx240_bstack
    pop $I19, rx240_bstack
    lt rx240_pos, -1, rx240_done452
    lt rx240_pos, 0, rx240_fail454
    eq $I19, 0, rx240_fail454
    nqp_islist $I20, rx240_cstack
    unless $I20, rx240_jump455
    elements $I18, rx240_bstack
    le $I18, 0, rx240_cut456
    dec $I18
    set $I18, rx240_bstack[$I18]
  rx240_cut456:
    assign rx240_cstack, $I18
  rx240_jump455:
    jump $I19
  rx240_done452:
    rx240_cur."!cursor_fail"()
    .return (rx240_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 678
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx245_start
    .local string rx245_tgt
    .local int rx245_pos
    .local int rx245_off
    .local int rx245_eos
    .local int rx245_rep
    .local pmc rx245_cur
    .local pmc rx245_curclass
    .local pmc rx245_bstack
    .local pmc rx245_cstack
    rx245_start = self."!cursor_start_all"()
    set rx245_cur, rx245_start[0]
    set rx245_tgt, rx245_start[1]
    set rx245_pos, rx245_start[2]
    set rx245_curclass, rx245_start[3]
    set rx245_bstack, rx245_start[4]
    set $I19, rx245_start[5]
    store_lex unicode:"$\x{a2}", rx245_cur
    length rx245_eos, rx245_tgt
    eq $I19, 1, rx245_restart467
    gt rx245_pos, rx245_eos, rx245_fail468
    repr_get_attr_int $I11, self, rx245_curclass, "$!from"
    ne $I11, -1, rxscan246_done474
    goto rxscan246_scan473
  rxscan246_loop472:
    inc rx245_pos
    gt rx245_pos, rx245_eos, rx245_fail468
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!from", rx245_pos
  rxscan246_scan473:
    nqp_rxmark rx245_bstack, rxscan246_loop472, rx245_pos, 0
  rxscan246_done474:
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!pos", rx245_pos
    $P11 = rx245_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
    nqp_rxmark rx245_bstack, rxsubrule247_pass475, -1, 0
  rxsubrule247_pass475:
    rx245_cstack = rx245_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx245_pos, $P11, rx245_curclass, "$!pos"
    nqp_rxmark rx245_bstack, rxquantr248_done477, rx245_pos, 0
  rxquantr248_loop476:
    repr_bind_attr_int rx245_cur, rx245_curclass, "$!pos", rx245_pos
    $P11 = rx245_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
    goto rxsubrule249_pass478
  rxsubrule249_back479:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx245_curclass, "$!pos"
    lt $I11, 0, rx245_fail468
  rxsubrule249_pass478:
    rx245_cstack = rx245_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule249_back479
    push rx245_bstack, $I11
    push rx245_bstack, 0
    push rx245_bstack, rx245_pos
    elements $I11, rx245_cstack
    push rx245_bstack, $I11
    repr_get_attr_int rx245_pos, $P11, rx245_curclass, "$!pos"
    nqp_rxpeek $I19, rx245_bstack, rxquantr248_done477
    inc $I19
    inc $I19
    set rx245_rep, rx245_bstack[$I19]
    nqp_rxcommit rx245_bstack, rxquantr248_done477
    inc rx245_rep
  rxquantr248_done477:
    rx245_cur."!cursor_pass"(rx245_pos, "deflongname", 'backtrack'=>1)
    .return (rx245_cur)
  rx245_restart467:
    repr_get_attr_obj rx245_cstack, rx245_cur, rx245_curclass, "$!cstack"
  rx245_fail468:
    unless rx245_bstack, rx245_done466
    pop $I19, rx245_bstack
    if_null rx245_cstack, rx245_cstack_done471
    unless rx245_cstack, rx245_cstack_done471
    dec $I19
    set $P11, rx245_cstack[$I19]
  rx245_cstack_done471:
    pop rx245_rep, rx245_bstack
    pop rx245_pos, rx245_bstack
    pop $I19, rx245_bstack
    lt rx245_pos, -1, rx245_done466
    lt rx245_pos, 0, rx245_fail468
    eq $I19, 0, rx245_fail468
    nqp_islist $I20, rx245_cstack
    unless $I20, rx245_jump469
    elements $I18, rx245_bstack
    le $I18, 0, rx245_cut470
    dec $I18
    set $I18, rx245_bstack[$I18]
  rx245_cut470:
    assign rx245_cstack, $I18
  rx245_jump469:
    jump $I19
  rx245_done466:
    rx245_cur."!cursor_fail"()
    .return (rx245_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 682
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx250_start
    .local string rx250_tgt
    .local int rx250_pos
    .local int rx250_off
    .local int rx250_eos
    .local int rx250_rep
    .local pmc rx250_cur
    .local pmc rx250_curclass
    .local pmc rx250_bstack
    .local pmc rx250_cstack
    rx250_start = self."!cursor_start_all"()
    set rx250_cur, rx250_start[0]
    set rx250_tgt, rx250_start[1]
    set rx250_pos, rx250_start[2]
    set rx250_curclass, rx250_start[3]
    set rx250_bstack, rx250_start[4]
    set $I19, rx250_start[5]
    store_lex unicode:"$\x{a2}", rx250_cur
    length rx250_eos, rx250_tgt
    eq $I19, 1, rx250_restart482
    gt rx250_pos, rx250_eos, rx250_fail483
    repr_get_attr_int $I11, self, rx250_curclass, "$!from"
    ne $I11, -1, rxscan251_done489
    goto rxscan251_scan488
  rxscan251_loop487:
    inc rx250_pos
    gt rx250_pos, rx250_eos, rx250_fail483
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!from", rx250_pos
  rxscan251_scan488:
    nqp_rxmark rx250_bstack, rxscan251_loop487, rx250_pos, 0
  rxscan251_done489:
    nqp_rxmark rx250_bstack, rxquantr252_done491, rx250_pos, 0
  rxquantr252_loop490:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt253_0493
    nqp_push_label $P11, alt253_1498
    nqp_rxmark rx250_bstack, alt253_end492, -1, 0
    rx250_cur."!alt"(rx250_pos, "alt_nfa__1_1382484129.38012", $P11)
    goto rx250_fail483
  alt253_0493:
    nqp_rxmark rx250_bstack, rxquantr254_done495, rx250_pos, 0
  rxquantr254_loop494:
    ge rx250_pos, rx250_eos, rx250_fail483
    substr $S11, rx250_tgt, rx250_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx250_fail483
    inc rx250_pos
    nqp_rxpeek $I19, rx250_bstack, rxquantr254_done495
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr254_done495
    inc rx250_rep
    nqp_rxmark rx250_bstack, rxquantr254_done495, rx250_pos, rx250_rep
    goto rxquantr254_loop494
  rxquantr254_done495:
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, rx250_pos
    if $I11, rxanchor255_done496
    ne rx250_pos, rx250_eos, rx250_fail483
    eq rx250_pos, 0, rxanchor255_done496
    sub $I11, rx250_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, $I11
    if $I11, rx250_fail483
  rxanchor255_done496:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."ws"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto alt253_end492
  alt253_1498:
    nqp_rxmark rx250_bstack, rxquantr257_done500, rx250_pos, 0
  rxquantr257_loop499:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."unv"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto rxsubrule258_pass501
  rxsubrule258_back502:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
  rxsubrule258_pass501:
    rx250_cstack = rx250_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule258_back502
    push rx250_bstack, $I11
    push rx250_bstack, 0
    push rx250_bstack, rx250_pos
    elements $I11, rx250_cstack
    push rx250_bstack, $I11
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    nqp_rxpeek $I19, rx250_bstack, rxquantr257_done500
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr257_done500
    inc rx250_rep
  rxquantr257_done500:
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, rx250_pos
    if $I11, rxanchor259_done503
    ne rx250_pos, rx250_eos, rx250_fail483
    eq rx250_pos, 0, rxanchor259_done503
    sub $I11, rx250_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx250_tgt, $I11
    if $I11, rx250_fail483
  rxanchor259_done503:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."ws"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail483
    goto alt253_end492
  alt253_end492:
    nqp_rxpeek $I19, rx250_bstack, rxquantr252_done491
    inc $I19
    inc $I19
    set rx250_rep, rx250_bstack[$I19]
    nqp_rxcommit rx250_bstack, rxquantr252_done491
    inc rx250_rep
  rxquantr252_done491:
    rx250_cur."!cursor_pass"(rx250_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx250_cur)
  rx250_restart482:
    repr_get_attr_obj rx250_cstack, rx250_cur, rx250_curclass, "$!cstack"
  rx250_fail483:
    unless rx250_bstack, rx250_done481
    pop $I19, rx250_bstack
    if_null rx250_cstack, rx250_cstack_done486
    unless rx250_cstack, rx250_cstack_done486
    dec $I19
    set $P11, rx250_cstack[$I19]
  rx250_cstack_done486:
    pop rx250_rep, rx250_bstack
    pop rx250_pos, rx250_bstack
    pop $I19, rx250_bstack
    lt rx250_pos, -1, rx250_done481
    lt rx250_pos, 0, rx250_fail483
    eq $I19, 0, rx250_fail483
    nqp_islist $I20, rx250_cstack
    unless $I20, rx250_jump484
    elements $I18, rx250_bstack
    le $I18, 0, rx250_cut485
    dec $I18
    set $I18, rx250_bstack[$I18]
  rx250_cut485:
    assign rx250_cstack, $I18
  rx250_jump484:
    jump $I19
  rx250_done481:
    rx250_cur."!cursor_fail"()
    .return (rx250_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 689
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx261_start
    .local string rx261_tgt
    .local int rx261_pos
    .local int rx261_off
    .local int rx261_eos
    .local int rx261_rep
    .local pmc rx261_cur
    .local pmc rx261_curclass
    .local pmc rx261_bstack
    .local pmc rx261_cstack
    rx261_start = self."!cursor_start_all"()
    set rx261_cur, rx261_start[0]
    set rx261_tgt, rx261_start[1]
    set rx261_pos, rx261_start[2]
    set rx261_curclass, rx261_start[3]
    set rx261_bstack, rx261_start[4]
    set $I19, rx261_start[5]
    store_lex unicode:"$\x{a2}", rx261_cur
    length rx261_eos, rx261_tgt
    eq $I19, 1, rx261_restart507
    gt rx261_pos, rx261_eos, rx261_fail508
    repr_get_attr_int $I11, self, rx261_curclass, "$!from"
    ne $I11, -1, rxscan262_done514
    goto rxscan262_scan513
  rxscan262_loop512:
    inc rx261_pos
    gt rx261_pos, rx261_eos, rx261_fail508
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!from", rx261_pos
  rxscan262_scan513:
    nqp_rxmark rx261_bstack, rxscan262_loop512, rx261_pos, 0
  rxscan262_done514:
  alt263_0516:
    nqp_rxmark rx261_bstack, alt263_1517, rx261_pos, 0
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
    goto alt263_end515
  alt263_1517:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."ww"()
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    ge $I11, 0, rx261_fail508
    nqp_rxmark rx261_bstack, rxquantr264_done519, rx261_pos, 0
  rxquantr264_loop518:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt265_0521
    nqp_push_label $P11, alt265_1524
    nqp_push_label $P11, alt265_2527
    nqp_push_label $P11, alt265_3530
    nqp_rxmark rx261_bstack, alt265_end520, -1, 0
    rx261_cur."!alt"(rx261_pos, "alt_nfa__2_1382484129.49259", $P11)
    goto rx261_fail508
  alt265_0521:
    nqp_rxmark rx261_bstack, rxquantr266_done523, -1, 0
  rxquantr266_loop522:
    ge rx261_pos, rx261_eos, rx261_fail508
    substr $S11, rx261_tgt, rx261_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx261_fail508
    inc rx261_pos
    nqp_rxpeek $I19, rx261_bstack, rxquantr266_done523
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr266_done523
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr266_done523, rx261_pos, rx261_rep
    goto rxquantr266_loop522
  rxquantr266_done523:
    goto alt265_end520
  alt265_1524:
    add $I11, rx261_pos, 1
    gt $I11, rx261_eos, rx261_fail508
    substr $S10, rx261_tgt, rx261_pos, 1
    ne $S10, ucs4:"#", rx261_fail508
    add rx261_pos, 1
    nqp_rxmark rx261_bstack, rxquantr267_done526, rx261_pos, 0
  rxquantr267_loop525:
    ge rx261_pos, rx261_eos, rx261_fail508
    is_cclass $I11, .CCLASS_NEWLINE, rx261_tgt, rx261_pos
    if $I11, rx261_fail508
    substr $S10, rx261_tgt, rx261_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx261_pos, $I11
    add rx261_pos, 1
    nqp_rxpeek $I19, rx261_bstack, rxquantr267_done526
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr267_done526
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr267_done526, rx261_pos, rx261_rep
    goto rxquantr267_loop525
  rxquantr267_done526:
    goto alt265_end520
  alt265_2527:
    eq rx261_pos, 0, rxanchor268_done528
    ge rx261_pos, rx261_eos, rx261_fail508
    sub $I11, rx261_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx261_tgt, $I11
    unless $I11, rx261_fail508
  rxanchor268_done528:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
    repr_get_attr_int rx261_pos, $P11, rx261_curclass, "$!pos"
    goto alt265_end520
  alt265_3530:
    nqp_rxmark rx261_bstack, rxquantr270_done532, -1, 0
  rxquantr270_loop531:
    ge rx261_pos, rx261_eos, rx261_fail508
    substr $S11, rx261_tgt, rx261_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx261_fail508
    inc rx261_pos
    nqp_rxpeek $I19, rx261_bstack, rxquantr270_done532
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr270_done532
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr270_done532, rx261_pos, rx261_rep
    goto rxquantr270_loop531
  rxquantr270_done532:
    goto alt265_end520
  alt265_end520:
    nqp_rxpeek $I19, rx261_bstack, rxquantr264_done519
    inc $I19
    inc $I19
    set rx261_rep, rx261_bstack[$I19]
    nqp_rxcommit rx261_bstack, rxquantr264_done519
    inc rx261_rep
    nqp_rxmark rx261_bstack, rxquantr264_done519, rx261_pos, rx261_rep
    goto rxquantr264_loop518
  rxquantr264_done519:
    repr_bind_attr_int rx261_cur, rx261_curclass, "$!pos", rx261_pos
    $P11 = rx261_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx261_curclass, "$!pos"
    lt $I11, 0, rx261_fail508
  alt263_end515:
    rx261_cur."!cursor_pass"(rx261_pos, "ws", 'backtrack'=>1)
    .return (rx261_cur)
  rx261_restart507:
    repr_get_attr_obj rx261_cstack, rx261_cur, rx261_curclass, "$!cstack"
  rx261_fail508:
    unless rx261_bstack, rx261_done506
    pop $I19, rx261_bstack
    if_null rx261_cstack, rx261_cstack_done511
    unless rx261_cstack, rx261_cstack_done511
    dec $I19
    set $P11, rx261_cstack[$I19]
  rx261_cstack_done511:
    pop rx261_rep, rx261_bstack
    pop rx261_pos, rx261_bstack
    pop $I19, rx261_bstack
    lt rx261_pos, -1, rx261_done506
    lt rx261_pos, 0, rx261_fail508
    eq $I19, 0, rx261_fail508
    nqp_islist $I20, rx261_cstack
    unless $I20, rx261_jump509
    elements $I18, rx261_bstack
    le $I18, 0, rx261_cut510
    dec $I18
    set $I18, rx261_bstack[$I18]
  rx261_cut510:
    assign rx261_cstack, $I18
  rx261_jump509:
    jump $I19
  rx261_done506:
    rx261_cur."!cursor_fail"()
    .return (rx261_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 700
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx271_start
    .local string rx271_tgt
    .local int rx271_pos
    .local int rx271_off
    .local int rx271_eos
    .local int rx271_rep
    .local pmc rx271_cur
    .local pmc rx271_curclass
    .local pmc rx271_bstack
    .local pmc rx271_cstack
    rx271_start = self."!cursor_start_all"()
    set rx271_cur, rx271_start[0]
    set rx271_tgt, rx271_start[1]
    set rx271_pos, rx271_start[2]
    set rx271_curclass, rx271_start[3]
    set rx271_bstack, rx271_start[4]
    set $I19, rx271_start[5]
    store_lex unicode:"$\x{a2}", rx271_cur
    length rx271_eos, rx271_tgt
    eq $I19, 1, rx271_restart535
    gt rx271_pos, rx271_eos, rx271_fail536
    repr_get_attr_int $I11, self, rx271_curclass, "$!from"
    ne $I11, -1, rxscan272_done542
    goto rxscan272_scan541
  rxscan272_loop540:
    inc rx271_pos
    gt rx271_pos, rx271_eos, rx271_fail536
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!from", rx271_pos
  rxscan272_scan541:
    nqp_rxmark rx271_bstack, rxscan272_loop540, rx271_pos, 0
  rxscan272_done542:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt273_0544
    nqp_push_label $P11, alt273_1562
    nqp_push_label $P11, alt273_2567
    nqp_rxmark rx271_bstack, alt273_end543, -1, 0
    rx271_cur."!alt"(rx271_pos, "alt_nfa__4_1382484129.51838", $P11)
    goto rx271_fail536
  alt273_0544:
    eq rx271_pos, 0, rxanchor274_done545
    ge rx271_pos, rx271_eos, rx271_fail536
    sub $I11, rx271_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx271_tgt, $I11
    unless $I11, rx271_fail536
  rxanchor274_done545:
    .const 'Sub' $P5001 = 'cuid_42_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!pos", rx271_pos
    $P11 = rx271_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx271_curclass, "$!pos"
    lt $I11, 0, rx271_fail536
    repr_bind_attr_int rx271_cur, rx271_curclass, "$!pos", rx271_pos
    $P11 = rx271_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx271_curclass, "$!pos"
    lt $I11, 0, rx271_fail536
    repr_get_attr_int rx271_pos, $P11, rx271_curclass, "$!pos"
    goto alt273_end543
  alt273_1562:
    nqp_rxmark rx271_bstack, rxquantr280_done564, rx271_pos, 0
  rxquantr280_loop563:
    ge rx271_pos, rx271_eos, rx271_fail536
    substr $S11, rx271_tgt, rx271_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx271_fail536
    inc rx271_pos
    nqp_rxpeek $I19, rx271_bstack, rxquantr280_done564
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr280_done564
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr280_done564, rx271_pos, rx271_rep
    goto rxquantr280_loop563
  rxquantr280_done564:
    add $I11, rx271_pos, 1
    gt $I11, rx271_eos, rx271_fail536
    substr $S10, rx271_tgt, rx271_pos, 1
    ne $S10, ucs4:"#", rx271_fail536
    add rx271_pos, 1
    nqp_rxmark rx271_bstack, rxquantr281_done566, rx271_pos, 0
  rxquantr281_loop565:
    ge rx271_pos, rx271_eos, rx271_fail536
    is_cclass $I11, .CCLASS_NEWLINE, rx271_tgt, rx271_pos
    if $I11, rx271_fail536
    substr $S10, rx271_tgt, rx271_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx271_pos, $I11
    add rx271_pos, 1
    nqp_rxpeek $I19, rx271_bstack, rxquantr281_done566
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr281_done566
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr281_done566, rx271_pos, rx271_rep
    goto rxquantr281_loop565
  rxquantr281_done566:
    goto alt273_end543
  alt273_2567:
    nqp_rxmark rx271_bstack, rxquantr282_done569, -1, 0
  rxquantr282_loop568:
    ge rx271_pos, rx271_eos, rx271_fail536
    substr $S11, rx271_tgt, rx271_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx271_fail536
    inc rx271_pos
    nqp_rxpeek $I19, rx271_bstack, rxquantr282_done569
    inc $I19
    inc $I19
    set rx271_rep, rx271_bstack[$I19]
    nqp_rxcommit rx271_bstack, rxquantr282_done569
    inc rx271_rep
    nqp_rxmark rx271_bstack, rxquantr282_done569, rx271_pos, rx271_rep
    goto rxquantr282_loop568
  rxquantr282_done569:
    goto alt273_end543
  alt273_end543:
    nqp_rxcommit rx271_bstack, alt273_end543
    rx271_cur."!cursor_pass"(rx271_pos, "unv", 'backtrack'=>1)
    .return (rx271_cur)
  rx271_restart535:
    repr_get_attr_obj rx271_cstack, rx271_cur, rx271_curclass, "$!cstack"
  rx271_fail536:
    unless rx271_bstack, rx271_done534
    pop $I19, rx271_bstack
    if_null rx271_cstack, rx271_cstack_done539
    unless rx271_cstack, rx271_cstack_done539
    dec $I19
    set $P11, rx271_cstack[$I19]
  rx271_cstack_done539:
    pop rx271_rep, rx271_bstack
    pop rx271_pos, rx271_bstack
    pop $I19, rx271_bstack
    lt rx271_pos, -1, rx271_done534
    lt rx271_pos, 0, rx271_fail536
    eq $I19, 0, rx271_fail536
    nqp_islist $I20, rx271_cstack
    unless $I20, rx271_jump537
    elements $I18, rx271_bstack
    le $I18, 0, rx271_cut538
    dec $I18
    set $I18, rx271_bstack[$I18]
  rx271_cut538:
    assign rx271_cstack, $I18
  rx271_jump537:
    jump $I19
  rx271_done534:
    rx271_cur."!cursor_fail"()
    .return (rx271_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1382484127.52628") :anon :lex :outer("cuid_41_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx275_start
    .local string rx275_tgt
    .local int rx275_pos
    .local int rx275_off
    .local int rx275_eos
    .local int rx275_rep
    .local pmc rx275_cur
    .local pmc rx275_curclass
    .local pmc rx275_bstack
    .local pmc rx275_cstack
    rx275_start = self."!cursor_start_all"()
    set rx275_cur, rx275_start[0]
    set rx275_tgt, rx275_start[1]
    set rx275_pos, rx275_start[2]
    set rx275_curclass, rx275_start[3]
    set rx275_bstack, rx275_start[4]
    set $I19, rx275_start[5]
    store_lex unicode:"$\x{a2}", rx275_cur
    length rx275_eos, rx275_tgt
    eq $I19, 1, rx275_restart548
    gt rx275_pos, rx275_eos, rx275_fail549
    repr_get_attr_int $I11, self, rx275_curclass, "$!from"
    ne $I11, -1, rxscan276_done555
    goto rxscan276_scan554
  rxscan276_loop553:
    inc rx275_pos
    gt rx275_pos, rx275_eos, rx275_fail549
    repr_bind_attr_int rx275_cur, rx275_curclass, "$!from", rx275_pos
  rxscan276_scan554:
    nqp_rxmark rx275_bstack, rxscan276_loop553, rx275_pos, 0
  rxscan276_done555:
    nqp_rxmark rx275_bstack, rxquantr277_done557, rx275_pos, 0
  rxquantr277_loop556:
    ge rx275_pos, rx275_eos, rx275_fail549
    substr $S11, rx275_tgt, rx275_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx275_fail549
    inc rx275_pos
    nqp_rxpeek $I19, rx275_bstack, rxquantr277_done557
    inc $I19
    inc $I19
    set rx275_rep, rx275_bstack[$I19]
    nqp_rxcommit rx275_bstack, rxquantr277_done557
    inc rx275_rep
    nqp_rxmark rx275_bstack, rxquantr277_done557, rx275_pos, rx275_rep
    goto rxquantr277_loop556
  rxquantr277_done557:
    add $I11, rx275_pos, 1
    gt $I11, rx275_eos, rx275_fail549
    substr $S10, rx275_tgt, rx275_pos, 1
    ne $S10, ucs4:"=", rx275_fail549
    add rx275_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt278_0559
    nqp_push_label $P11, alt278_1560
    nqp_rxmark rx275_bstack, alt278_end558, -1, 0
    rx275_cur."!alt"(rx275_pos, "alt_nfa__3_1382484129.50595", $P11)
    goto rx275_fail549
  alt278_0559:
    ge rx275_pos, rx275_eos, rx275_fail549
    is_cclass $I11, .CCLASS_WORD, rx275_tgt, rx275_pos
    unless $I11, rx275_fail549
    add rx275_pos, 1
    goto alt278_end558
  alt278_1560:
    add $I11, rx275_pos, 1
    gt $I11, rx275_eos, rx275_fail549
    substr $S10, rx275_tgt, rx275_pos, 1
    ne $S10, ucs4:"\\", rx275_fail549
    add rx275_pos, 1
    goto alt278_end558
  alt278_end558:
    nqp_rxcommit rx275_bstack, alt278_end558
    rx275_cur."!cursor_pass"(rx275_pos, 'backtrack'=>1)
    .return (rx275_cur)
  rx275_restart548:
    repr_get_attr_obj rx275_cstack, rx275_cur, rx275_curclass, "$!cstack"
  rx275_fail549:
    unless rx275_bstack, rx275_done547
    pop $I19, rx275_bstack
    if_null rx275_cstack, rx275_cstack_done552
    unless rx275_cstack, rx275_cstack_done552
    dec $I19
    set $P11, rx275_cstack[$I19]
  rx275_cstack_done552:
    pop rx275_rep, rx275_bstack
    pop rx275_pos, rx275_bstack
    pop $I19, rx275_bstack
    lt rx275_pos, -1, rx275_done547
    lt rx275_pos, 0, rx275_fail549
    eq $I19, 0, rx275_fail549
    nqp_islist $I20, rx275_cstack
    unless $I20, rx275_jump550
    elements $I18, rx275_bstack
    le $I18, 0, rx275_cut551
    dec $I18
    set $I18, rx275_bstack[$I18]
  rx275_cut551:
    assign rx275_cstack, $I18
  rx275_jump550:
    jump $I19
  rx275_done547:
    rx275_cur."!cursor_fail"()
    .return (rx275_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 709
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_401_1382484127.52628' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_44_1382484127.52628' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx283_start
    .local string rx283_tgt
    .local int rx283_pos
    .local int rx283_off
    .local int rx283_eos
    .local int rx283_rep
    .local pmc rx283_cur
    .local pmc rx283_curclass
    .local pmc rx283_bstack
    .local pmc rx283_cstack
    rx283_start = self."!cursor_start_all"()
    set rx283_cur, rx283_start[0]
    set rx283_tgt, rx283_start[1]
    set rx283_pos, rx283_start[2]
    set rx283_curclass, rx283_start[3]
    set rx283_bstack, rx283_start[4]
    set $I19, rx283_start[5]
    store_lex unicode:"$\x{a2}", rx283_cur
    length rx283_eos, rx283_tgt
    eq $I19, 1, rx283_restart572
    gt rx283_pos, rx283_eos, rx283_fail573
    repr_get_attr_int $I11, self, rx283_curclass, "$!from"
    ne $I11, -1, rxscan284_done579
    goto rxscan284_scan578
  rxscan284_loop577:
    inc rx283_pos
    gt rx283_pos, rx283_eos, rx283_fail573
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!from", rx283_pos
  rxscan284_scan578:
    nqp_rxmark rx283_bstack, rxscan284_loop577, rx283_pos, 0
  rxscan284_done579:
    eq rx283_pos, 0, rxanchor285_done580
    ge rx283_pos, rx283_eos, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, $I11
    unless $I11, rx283_fail573
  rxanchor285_done580:
    nqp_rxmark rx283_bstack, rxquantr286_done582, rx283_pos, 0
  rxquantr286_loop581:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr286_done582
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr286_done582
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr286_done582, rx283_pos, rx283_rep
    goto rxquantr286_loop581
  rxquantr286_done582:
    add $I11, rx283_pos, 1
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 1
    ne $S10, ucs4:"=", rx283_fail573
    add rx283_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt287_0584
    nqp_push_label $P11, alt287_1603
    nqp_push_label $P11, alt287_2622
    nqp_push_label $P11, alt287_3644
    nqp_push_label $P11, alt287_4668
    nqp_rxmark rx283_bstack, alt287_end583, -1, 0
    rx283_cur."!alt"(rx283_pos, "alt_nfa__6_1382484129.62275", $P11)
    goto rx283_fail573
  alt287_0584:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    nqp_rxmark rx283_bstack, rxquantr288_done586, -1, 0
  rxquantr288_loop585:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr288_done586
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr288_done586
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr288_done586, rx283_pos, rx283_rep
    goto rxquantr288_loop585
  rxquantr288_done586:
    add $I11, rx283_pos, 3
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 3
    ne $S10, ucs4:"END", rx283_fail573
    add rx283_pos, 3
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
  alt290_0589:
    nqp_rxmark rx283_bstack, alt290_1600, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf291_loop590, rx283_pos, rx283_rep
    goto rxquantf291_done591
  rxquantf291_loop590:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf291_loop590, rx283_pos, rx283_rep
  rxquantf291_done591:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr292_done594, rx283_pos, 0
  rxquantr292_loop593:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr292_done594
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr292_done594
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr292_done594, rx283_pos, rx283_rep
    goto rxquantr292_loop593
  rxquantr292_done594:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    nqp_rxmark rx283_bstack, rxquantr293_done596, -1, 0
  rxquantr293_loop595:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr293_done596
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr293_done596
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr293_done596, rx283_pos, rx283_rep
    goto rxquantr293_loop595
  rxquantr293_done596:
    add $I11, rx283_pos, 3
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 3
    ne $S10, ucs4:"END", rx283_fail573
    add rx283_pos, 3
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr295_done599, rx283_pos, 0
  rxquantr295_loop598:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr295_done599
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr295_done599
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr295_done599, rx283_pos, rx283_rep
    goto rxquantr295_loop598
  rxquantr295_done599:
    goto alt290_end588
  alt290_1600:
    nqp_rxmark rx283_bstack, rxquantr296_done602, rx283_pos, 0
  rxquantr296_loop601:
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr296_done602
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr296_done602
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr296_done602, rx283_pos, rx283_rep
    goto rxquantr296_loop601
  rxquantr296_done602:
  alt290_end588:
    goto alt287_end583
  alt287_1603:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    nqp_rxmark rx283_bstack, rxquantr297_done605, -1, 0
  rxquantr297_loop604:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr297_done605
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr297_done605
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr297_done605, rx283_pos, rx283_rep
    goto rxquantr297_loop604
  rxquantr297_done605:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    nqp_rxmark rx283_bstack, rxsubrule298_pass606, -1, 0
  rxsubrule298_pass606:
    rx283_cstack = rx283_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt299_0608:
    nqp_rxmark rx283_bstack, alt299_1620, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf300_loop609, rx283_pos, rx283_rep
    goto rxquantf300_done610
  rxquantf300_loop609:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf300_loop609, rx283_pos, rx283_rep
  rxquantf300_done610:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr301_done613, rx283_pos, 0
  rxquantr301_loop612:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr301_done613
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr301_done613
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr301_done613, rx283_pos, rx283_rep
    goto rxquantr301_loop612
  rxquantr301_done613:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    nqp_rxmark rx283_bstack, rxquantr302_done615, -1, 0
  rxquantr302_loop614:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr302_done615
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr302_done615
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr302_done615, rx283_pos, rx283_rep
    goto rxquantr302_loop614
  rxquantr302_done615:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr305_done619, rx283_pos, 0
  rxquantr305_loop618:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr305_done619
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr305_done619
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr305_done619, rx283_pos, rx283_rep
    goto rxquantr305_loop618
  rxquantr305_done619:
    goto alt299_end607
  alt299_1620:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt299_end607:
    goto alt287_end583
  alt287_2622:
    add $I11, rx283_pos, 5
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 5
    ne $S10, ucs4:"begin", rx283_fail573
    add rx283_pos, 5
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr308_done625, rx283_pos, 0
  rxquantr308_loop624:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr308_done625
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr308_done625
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr308_done625, rx283_pos, rx283_rep
    goto rxquantr308_loop624
  rxquantr308_done625:
  alt309_0627:
    nqp_rxmark rx283_bstack, alt309_1629, rx283_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rxanchor310_done628
    ne rx283_pos, rx283_eos, rx283_fail573
    eq rx283_pos, 0, rxanchor310_done628
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, $I11
    if $I11, rx283_fail573
  rxanchor310_done628:
    goto alt309_end626
  alt309_1629:
    nqp_rxmark rx283_bstack, alt309_2630, rx283_pos, 0
    add $I11, rx283_pos, 1
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 1
    ne $S10, ucs4:"#", rx283_fail573
    add rx283_pos, 1
    goto alt309_end626
  alt309_2630:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt309_end626:
  alt312_0633:
    nqp_rxmark rx283_bstack, alt312_1642, rx283_pos, 0
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf313_loop634, rx283_pos, rx283_rep
    goto rxquantf313_done635
  rxquantf313_loop634:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf313_loop634, rx283_pos, rx283_rep
  rxquantf313_done635:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxmark rx283_bstack, rxquantr314_done638, rx283_pos, 0
  rxquantr314_loop637:
    ge rx283_pos, rx283_eos, rx283_fail573
    substr $S11, rx283_tgt, rx283_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx283_fail573
    inc rx283_pos
    nqp_rxpeek $I19, rx283_bstack, rxquantr314_done638
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr314_done638
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr314_done638, rx283_pos, rx283_rep
    goto rxquantr314_loop637
  rxquantr314_done638:
    add $I11, rx283_pos, 4
    gt $I11, rx283_eos, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 4
    ne $S10, ucs4:"=end", rx283_fail573
    add rx283_pos, 4
    le rx283_pos, 0, rx283_fail573
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    sub $I11, rx283_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx283_tgt, $I11
    unless $I11, rx283_fail573
    nqp_rxmark rx283_bstack, rxquantr316_done641, rx283_pos, 0
  rxquantr316_loop640:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr316_done641
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr316_done641
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr316_done641, rx283_pos, rx283_rep
    goto rxquantr316_loop640
  rxquantr316_done641:
    goto alt312_end632
  alt312_1642:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt312_end632:
    goto alt287_end583
  alt287_3644:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    nqp_rxmark rx283_bstack, rxsubrule318_pass645, -1, 0
  rxsubrule318_pass645:
    rx283_cstack = rx283_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    store_lex unicode:"$\x{a2}", rx283_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_401_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    set rx283_rep, 0
    nqp_rxmark rx283_bstack, rxquantf319_loop646, rx283_pos, rx283_rep
    goto rxquantf319_done647
  rxquantf319_loop646:
    set $I12, rx283_rep
    ge rx283_pos, rx283_eos, rx283_fail573
    add rx283_pos, 1
    set rx283_rep, $I12
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantf319_loop646, rx283_pos, rx283_rep
  rxquantf319_done647:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    .const 'Sub' $P5004 = 'cuid_44_1382484127.52628' 
    capture_lex $P5004
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    goto alt287_end583
  alt287_4668:
  alt327_0670:
    nqp_rxmark rx283_bstack, alt327_1671, rx283_pos, 0
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_WHITESPACE, rx283_tgt, rx283_pos
    unless $I11, rx283_fail573
    add rx283_pos, 1
    goto alt327_end669
  alt327_1671:
    repr_bind_attr_int rx283_cur, rx283_curclass, "$!pos", rx283_pos
    $P11 = rx283_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx283_curclass, "$!pos"
    lt $I11, 0, rx283_fail573
    repr_get_attr_int rx283_pos, $P11, rx283_curclass, "$!pos"
  alt327_end669:
    nqp_rxmark rx283_bstack, rxquantr329_done674, rx283_pos, 0
  rxquantr329_loop673:
    ge rx283_pos, rx283_eos, rx283_fail573
    is_cclass $I11, .CCLASS_NEWLINE, rx283_tgt, rx283_pos
    if $I11, rx283_fail573
    substr $S10, rx283_tgt, rx283_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx283_pos, $I11
    add rx283_pos, 1
    nqp_rxpeek $I19, rx283_bstack, rxquantr329_done674
    inc $I19
    inc $I19
    set rx283_rep, rx283_bstack[$I19]
    nqp_rxcommit rx283_bstack, rxquantr329_done674
    inc rx283_rep
    nqp_rxmark rx283_bstack, rxquantr329_done674, rx283_pos, rx283_rep
    goto rxquantr329_loop673
  rxquantr329_done674:
    goto alt287_end583
  alt287_end583:
    nqp_rxcommit rx283_bstack, alt287_end583
    rx283_cur."!cursor_pass"(rx283_pos, "pod_comment", 'backtrack'=>1)
    .return (rx283_cur)
  rx283_restart572:
    repr_get_attr_obj rx283_cstack, rx283_cur, rx283_curclass, "$!cstack"
  rx283_fail573:
    unless rx283_bstack, rx283_done571
    pop $I19, rx283_bstack
    if_null rx283_cstack, rx283_cstack_done576
    unless rx283_cstack, rx283_cstack_done576
    dec $I19
    set $P11, rx283_cstack[$I19]
  rx283_cstack_done576:
    pop rx283_rep, rx283_bstack
    pop rx283_pos, rx283_bstack
    pop $I19, rx283_bstack
    lt rx283_pos, -1, rx283_done571
    lt rx283_pos, 0, rx283_fail573
    eq $I19, 0, rx283_fail573
    nqp_islist $I20, rx283_cstack
    unless $I20, rx283_jump574
    elements $I18, rx283_bstack
    le $I18, 0, rx283_cut575
    dec $I18
    set $I18, rx283_bstack[$I18]
  rx283_cut575:
    assign rx283_cstack, $I18
  rx283_jump574:
    jump $I19
  rx283_done571:
    rx283_cur."!cursor_fail"()
    .return (rx283_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1382484127.52628") :anon :lex :outer("cuid_43_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 725

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1382484127.52628") :anon :lex :outer("cuid_43_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx320_start
    .local string rx320_tgt
    .local int rx320_pos
    .local int rx320_off
    .local int rx320_eos
    .local int rx320_rep
    .local pmc rx320_cur
    .local pmc rx320_curclass
    .local pmc rx320_bstack
    .local pmc rx320_cstack
    rx320_start = self."!cursor_start_all"()
    set rx320_cur, rx320_start[0]
    set rx320_tgt, rx320_start[1]
    set rx320_pos, rx320_start[2]
    set rx320_curclass, rx320_start[3]
    set rx320_bstack, rx320_start[4]
    set $I19, rx320_start[5]
    store_lex unicode:"$\x{a2}", rx320_cur
    length rx320_eos, rx320_tgt
    eq $I19, 1, rx320_restart651
    gt rx320_pos, rx320_eos, rx320_fail652
    repr_get_attr_int $I11, self, rx320_curclass, "$!from"
    ne $I11, -1, rxscan321_done658
    goto rxscan321_scan657
  rxscan321_loop656:
    inc rx320_pos
    gt rx320_pos, rx320_eos, rx320_fail652
    repr_bind_attr_int rx320_cur, rx320_curclass, "$!from", rx320_pos
  rxscan321_scan657:
    nqp_rxmark rx320_bstack, rxscan321_loop656, rx320_pos, 0
  rxscan321_done658:
    nqp_rxmark rx320_bstack, rxquantr322_done660, rx320_pos, 0
  rxquantr322_loop659:
    ge rx320_pos, rx320_eos, rx320_fail652
    substr $S11, rx320_tgt, rx320_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx320_fail652
    inc rx320_pos
    nqp_rxpeek $I19, rx320_bstack, rxquantr322_done660
    inc $I19
    inc $I19
    set rx320_rep, rx320_bstack[$I19]
    nqp_rxcommit rx320_bstack, rxquantr322_done660
    inc rx320_rep
    nqp_rxmark rx320_bstack, rxquantr322_done660, rx320_pos, rx320_rep
    goto rxquantr322_loop659
  rxquantr322_done660:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt323_0662
    nqp_push_label $P11, alt323_1667
    nqp_rxmark rx320_bstack, alt323_end661, -1, 0
    rx320_cur."!alt"(rx320_pos, "alt_nfa__5_1382484129.60728", $P11)
    goto rx320_fail652
  alt323_0662:
    add $I11, rx320_pos, 1
    gt $I11, rx320_eos, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 1
    ne $S10, ucs4:"=", rx320_fail652
    add rx320_pos, 1
    nqp_rxmark rx320_bstack, rxquantr324_done664, rx320_pos, 0
  rxquantr324_loop663:
    add $I11, rx320_pos, 3
    gt $I11, rx320_eos, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 3
    ne $S10, ucs4:"cut", rx320_fail652
    add rx320_pos, 3
    le rx320_pos, 0, rx320_fail652
    is_cclass $I11, .CCLASS_WORD, rx320_tgt, rx320_pos
    if $I11, rx320_fail652
    sub $I11, rx320_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx320_tgt, $I11
    unless $I11, rx320_fail652
    repr_bind_attr_int rx320_cur, rx320_curclass, "$!pos", rx320_pos
    $P11 = rx320_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx320_curclass, "$!pos"
    lt $I11, 0, rx320_fail652
    repr_get_attr_int rx320_pos, $P11, rx320_curclass, "$!pos"
    nqp_rxpeek $I19, rx320_bstack, rxquantr324_done664
    inc $I19
    inc $I19
    set rx320_rep, rx320_bstack[$I19]
    nqp_rxcommit rx320_bstack, rxquantr324_done664
    inc rx320_rep
  rxquantr324_done664:
    goto alt323_end661
  alt323_1667:
    ge rx320_pos, rx320_eos, rx320_fail652
    is_cclass $I11, .CCLASS_NEWLINE, rx320_tgt, rx320_pos
    unless $I11, rx320_fail652
    substr $S10, rx320_tgt, rx320_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx320_pos, $I11
    add rx320_pos, 1
    goto alt323_end661
  alt323_end661:
    nqp_rxcommit rx320_bstack, alt323_end661
    rx320_cur."!cursor_pass"(rx320_pos, 'backtrack'=>1)
    .return (rx320_cur)
  rx320_restart651:
    repr_get_attr_obj rx320_cstack, rx320_cur, rx320_curclass, "$!cstack"
  rx320_fail652:
    unless rx320_bstack, rx320_done650
    pop $I19, rx320_bstack
    if_null rx320_cstack, rx320_cstack_done655
    unless rx320_cstack, rx320_cstack_done655
    dec $I19
    set $P11, rx320_cstack[$I19]
  rx320_cstack_done655:
    pop rx320_rep, rx320_bstack
    pop rx320_pos, rx320_bstack
    pop $I19, rx320_bstack
    lt rx320_pos, -1, rx320_done650
    lt rx320_pos, 0, rx320_fail652
    eq $I19, 0, rx320_fail652
    nqp_islist $I20, rx320_cstack
    unless $I20, rx320_jump653
    elements $I18, rx320_bstack
    le $I18, 0, rx320_cut654
    dec $I18
    set $I18, rx320_bstack[$I18]
  rx320_cut654:
    assign rx320_cstack, $I18
  rx320_jump653:
    jump $I19
  rx320_done650:
    rx320_cur."!cursor_fail"()
    .return (rx320_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 740
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_402_1382484127.52628' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_403_1382484127.52628' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_405_1382484127.52628' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_406_1382484127.52628' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_91 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P106, $P5006
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx330_start
    .local string rx330_tgt
    .local int rx330_pos
    .local int rx330_off
    .local int rx330_eos
    .local int rx330_rep
    .local pmc rx330_cur
    .local pmc rx330_curclass
    .local pmc rx330_bstack
    .local pmc rx330_cstack
    rx330_start = self."!cursor_start_all"()
    set rx330_cur, rx330_start[0]
    set rx330_tgt, rx330_start[1]
    set rx330_pos, rx330_start[2]
    set rx330_curclass, rx330_start[3]
    set rx330_bstack, rx330_start[4]
    set $I19, rx330_start[5]
    store_lex unicode:"$\x{a2}", rx330_cur
    length rx330_eos, rx330_tgt
    eq $I19, 1, rx330_restart677
    gt rx330_pos, rx330_eos, rx330_fail678
    repr_get_attr_int $I11, self, rx330_curclass, "$!from"
    ne $I11, -1, rxscan331_done684
    goto rxscan331_scan683
  rxscan331_loop682:
    inc rx330_pos
    gt rx330_pos, rx330_eos, rx330_fail678
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!from", rx330_pos
  rxscan331_scan683:
    nqp_rxmark rx330_bstack, rxscan331_loop682, rx330_pos, 0
  rxscan331_done684:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P103, fallback685
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5010, $P5011
    set fb_tmp_77, $P5010
    repr_defined $I5001, fb_tmp_77
    unless $I5001 goto if332_else686 
    set $P5012, fb_tmp_77["$MAIN_SUB"]
    set $P5014, $P5012
    goto if332_end687
  if332_else686:
    null $P5013
    set $P5014, $P5013
  if332_end687:
    unless_null $P5014, vivi_333688
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_333688:
    unless_null $P5014, vivi_334689
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_334689:
    set $P103, $P5014
  fallback685:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
.annotate 'line', 745
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback690
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5018, $P5019
    set fb_tmp_78, $P5018
    repr_defined $I5002, fb_tmp_78
    unless $I5002 goto if335_else691 
    set $P5020, fb_tmp_78["$W"]
    set $P5022, $P5020
    goto if335_end692
  if335_else691:
    null $P5021
    set $P5022, $P5021
  if335_end692:
    unless_null $P5022, vivi_336693
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_336693:
    unless_null $P5022, vivi_337694
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_337694:
    set $P5017, $P5022
  fallback690:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
.annotate 'line', 749
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback695
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5027, $P5028
    set fb_tmp_79, $P5027
    repr_defined $I5003, fb_tmp_79
    unless $I5003 goto if338_else696 
    set $P5029, fb_tmp_79["$W"]
    set $P5031, $P5029
    goto if338_end697
  if338_else696:
    null $P5030
    set $P5031, $P5030
  if338_end697:
    unless_null $P5031, vivi_339698
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_339698:
    unless_null $P5031, vivi_340699
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_340699:
    set $P5026, $P5031
  fallback695:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback702
    nqp_get_sc_object $P5036, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_20, $P5035
    set fb_tmp_81, pkg_viv_tmp_20
    repr_defined $I5005, fb_tmp_81
    unless $I5005 goto if342_else703 
    set $P5037, fb_tmp_81["%HOW"]
    set $P5039, $P5037
    goto if342_end704
  if342_else703:
    null $P5038
    set $P5039, $P5038
  if342_end704:
    unless_null $P5039, vivi_343705
    new $P5040, 'Hash'
    set pkg_viv_tmp_20["%HOW"], $P5040
    set $P5039, $P5040
  vivi_343705:
    unless_null $P5039, vivi_344706
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_344706:
    set $P5034, $P5039
  fallback702:
    set fb_tmp_80, $P5034
    repr_defined $I5004, fb_tmp_80
    unless $I5004 goto if341_else700 
    set $P5042, fb_tmp_80["knowhow"]
    set $P5044, $P5042
    goto if341_end701
  if341_else700:
    null $P5043
    set $P5044, $P5043
  if341_end701:
    unless_null $P5044, vivi_345707
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5044, $P5045
  vivi_345707:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_402_1382484127.52628' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P105, fallback733
    nqp_get_sc_object $P5051, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5050, $P5051
    set fb_tmp_87, $P5050
    repr_defined $I5006, fb_tmp_87
    unless $I5006 goto if361_else734 
    set $P5052, fb_tmp_87["$GLOBALish"]
    set $P5054, $P5052
    goto if361_end735
  if361_else734:
    null $P5053
    set $P5054, $P5053
  if361_end735:
    unless_null $P5054, vivi_362736
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5054, $P5055
  vivi_362736:
    unless_null $P5054, vivi_363737
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_363737:
    set $P105, $P5054
  fallback733:
    set $P106, $P105
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_403_1382484127.52628' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    unless_null $P107, fallback753
    nqp_get_sc_object $P5061, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5060, $P5061
    set fb_tmp_91, $P5060
    repr_defined $I5007, fb_tmp_91
    unless $I5007 goto if373_else754 
    set $P5062, fb_tmp_91["$EXPORT"]
    set $P5064, $P5062
    goto if373_end755
  if373_else754:
    null $P5063
    set $P5064, $P5063
  if373_end755:
    unless_null $P5064, vivi_374756
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5064, $P5065
  vivi_374756:
    unless_null $P5064, vivi_375757
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_375757:
    set $P107, $P5064
  fallback753:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_405_1382484127.52628' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    store_lex unicode:"$\x{a2}", rx330_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_406_1382484127.52628' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    nqp_rxmark rx330_bstack, rxsubrule422_pass833, -1, 0
  rxsubrule422_pass833:
    rx330_cstack = rx330_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
  alt423_0835:
    nqp_rxmark rx330_bstack, alt423_1837, rx330_pos, 0
    lt rx330_pos, rx330_eos, rx330_fail678
    goto alt423_end834
  alt423_1837:
    repr_bind_attr_int rx330_cur, rx330_curclass, "$!pos", rx330_pos
    $P11 = rx330_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx330_curclass, "$!pos"
    lt $I11, 0, rx330_fail678
    repr_get_attr_int rx330_pos, $P11, rx330_curclass, "$!pos"
  alt423_end834:
    rx330_cur."!cursor_pass"(rx330_pos, "comp_unit", 'backtrack'=>1)
    .return (rx330_cur)
  rx330_restart677:
    repr_get_attr_obj rx330_cstack, rx330_cur, rx330_curclass, "$!cstack"
  rx330_fail678:
    unless rx330_bstack, rx330_done676
    pop $I19, rx330_bstack
    if_null rx330_cstack, rx330_cstack_done681
    unless rx330_cstack, rx330_cstack_done681
    dec $I19
    set $P11, rx330_cstack[$I19]
  rx330_cstack_done681:
    pop rx330_rep, rx330_bstack
    pop rx330_pos, rx330_bstack
    pop $I19, rx330_bstack
    lt rx330_pos, -1, rx330_done676
    lt rx330_pos, 0, rx330_fail678
    eq $I19, 0, rx330_fail678
    nqp_islist $I20, rx330_cstack
    unless $I20, rx330_jump679
    elements $I18, rx330_bstack
    le $I18, 0, rx330_cut680
    dec $I18
    set $I18, rx330_bstack[$I18]
  rx330_cut680:
    assign rx330_cstack, $I18
  rx330_jump679:
    jump $I19
  rx330_done676:
    rx330_cur."!cursor_fail"()
    .return (rx330_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1382484127.52628") :anon :lex :outer("cuid_45_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 750
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
.annotate 'line', 751
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback708
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_82, $P5003
    repr_defined $I5001, fb_tmp_82
    unless $I5001 goto if346_else709 
    set $P5005, fb_tmp_82["$GLOBALish"]
    set $P5007, $P5005
    goto if346_end710
  if346_else709:
    null $P5006
    set $P5007, $P5006
  if346_end710:
    unless_null $P5007, vivi_347711
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_347711:
    unless_null $P5007, vivi_348712
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_348712:
    set $P5002, $P5007
  fallback708:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback713
    nqp_get_sc_object $P5012, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5011, $P5012
    set fb_tmp_83, $P5011
    repr_defined $I5002, fb_tmp_83
    unless $I5002 goto if349_else714 
    set $P5013, fb_tmp_83["$GLOBALish"]
    set $P5015, $P5013
    goto if349_end715
  if349_else714:
    null $P5014
    set $P5015, $P5014
  if349_end715:
    unless_null $P5015, vivi_350716
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_350716:
    unless_null $P5015, vivi_351717
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_351717:
    set $P5010, $P5015
  fallback713:
    $P5001."compose"($P5010)
.annotate 'line', 752
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback718
    nqp_get_sc_object $P5020, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5019, $P5020
    set fb_tmp_84, $P5019
    repr_defined $I5003, fb_tmp_84
    unless $I5003 goto if352_else719 
    set $P5021, fb_tmp_84["$W"]
    set $P5023, $P5021
    goto if352_end720
  if352_else719:
    null $P5022
    set $P5023, $P5022
  if352_end720:
    unless_null $P5023, vivi_353721
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_353721:
    unless_null $P5023, vivi_354722
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_354722:
    set $P5018, $P5023
  fallback718:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback723
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5027, $P5028
    set fb_tmp_85, $P5027
    repr_defined $I5004, fb_tmp_85
    unless $I5004 goto if355_else724 
    set $P5029, fb_tmp_85["$UNIT"]
    set $P5031, $P5029
    goto if355_end725
  if355_else724:
    null $P5030
    set $P5031, $P5030
  if355_end725:
    unless_null $P5031, vivi_356726
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_356726:
    unless_null $P5031, vivi_357727
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_357727:
    set $P5026, $P5031
  fallback723:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback728
    nqp_get_sc_object $P5036, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5035, $P5036
    set fb_tmp_86, $P5035
    repr_defined $I5005, fb_tmp_86
    unless $I5005 goto if358_else729 
    set $P5037, fb_tmp_86["$GLOBALish"]
    set $P5039, $P5037
    goto if358_end730
  if358_else729:
    null $P5038
    set $P5039, $P5038
  if358_end730:
    unless_null $P5039, vivi_359731
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5039, $P5040
  vivi_359731:
    unless_null $P5039, vivi_360732
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_360732:
    set $P5034, $P5039
  fallback728:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1382484127.52628") :anon :lex :outer("cuid_45_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 757
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback738
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_88, $P5002
    repr_defined $I5001, fb_tmp_88
    unless $I5001 goto if364_else739 
    set $P5004, fb_tmp_88["$W"]
    set $P5006, $P5004
    goto if364_end740
  if364_else739:
    null $P5005
    set $P5006, $P5005
  if364_end740:
    unless_null $P5006, vivi_365741
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_365741:
    unless_null $P5006, vivi_366742
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_366742:
    set $P5001, $P5006
  fallback738:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback743
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5010, $P5011
    set fb_tmp_89, $P5010
    repr_defined $I5002, fb_tmp_89
    unless $I5002 goto if367_else744 
    set $P5012, fb_tmp_89["$UNIT"]
    set $P5014, $P5012
    goto if367_end745
  if367_else744:
    null $P5013
    set $P5014, $P5013
  if367_end745:
    unless_null $P5014, vivi_368746
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_368746:
    unless_null $P5014, vivi_369747
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_369747:
    set $P5009, $P5014
  fallback743:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback748
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5018, $P5019
    set fb_tmp_90, $P5018
    repr_defined $I5003, fb_tmp_90
    unless $I5003 goto if370_else749 
    set $P5020, fb_tmp_90["$PACKAGE"]
    set $P5022, $P5020
    goto if370_end750
  if370_else749:
    null $P5021
    set $P5022, $P5021
  if370_end750:
    unless_null $P5022, vivi_371751
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_371751:
    unless_null $P5022, vivi_372752
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_372752:
    set $P5017, $P5022
  fallback748:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1382484127.52628") :anon :lex :outer("cuid_45_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 761
    .const 'Sub' $P5021 = 'cuid_404_1382484127.52628' 
    capture_lex $P5021 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc pkg_viv_tmp_21 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback764
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_21, $P5002
    set fb_tmp_94, pkg_viv_tmp_21
    repr_defined $I5004, fb_tmp_94
    unless $I5004 goto if379_else765 
    set $P5004, fb_tmp_94["%COMPILING"]
    set $P5006, $P5004
    goto if379_end766
  if379_else765:
    null $P5005
    set $P5006, $P5005
  if379_end766:
    unless_null $P5006, vivi_380767
    new $P5007, 'Hash'
    set pkg_viv_tmp_21["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_380767:
    unless_null $P5006, vivi_381768
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_381768:
    set $P5001, $P5006
  fallback764:
    set fb_tmp_93, $P5001
    repr_defined $I5003, fb_tmp_93
    unless $I5003 goto if378_else762 
    set $P5009, fb_tmp_93["%?OPTIONS"]
    set $P5011, $P5009
    goto if378_end763
  if378_else762:
    null $P5010
    set $P5011, $P5010
  if378_end763:
    unless_null $P5011, vivi_382769
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_382769:
    set fb_tmp_92, $P5011
    repr_defined $I5002, fb_tmp_92
    unless $I5002 goto if377_else760 
    set $P5013, fb_tmp_92["setting"]
    set $P5015, $P5013
    goto if377_end761
  if377_else760:
    null $P5014
    set $P5015, $P5014
  if377_end761:
    unless_null $P5015, vivi_383770
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_383770:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless376_end759 
    .const 'Sub' $P5017 = 'cuid_404_1382484127.52628' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless376_end759:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1382484127.52628") :anon :lex :outer("cuid_405_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 762
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_106 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 763
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback771
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_95, $P5003
    repr_defined $I5001, fb_tmp_95
    unless $I5001 goto if384_else772 
    set $P5005, fb_tmp_95["$W"]
    set $P5007, $P5005
    goto if384_end773
  if384_else772:
    null $P5006
    set $P5007, $P5006
  if384_end773:
    unless_null $P5007, vivi_385774
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_385774:
    unless_null $P5007, vivi_386775
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_386775:
    set $P5002, $P5007
  fallback771:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback778
    nqp_get_sc_object $P5012, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_22, $P5011
    set fb_tmp_97, pkg_viv_tmp_22
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if388_else779 
    set $P5013, fb_tmp_97["%HOW"]
    set $P5015, $P5013
    goto if388_end780
  if388_else779:
    null $P5014
    set $P5015, $P5014
  if388_end780:
    unless_null $P5015, vivi_389781
    new $P5016, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5016
    set $P5015, $P5016
  vivi_389781:
    unless_null $P5015, vivi_390782
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_390782:
    set $P5010, $P5015
  fallback778:
    set fb_tmp_96, $P5010
    repr_defined $I5002, fb_tmp_96
    unless $I5002 goto if387_else776 
    set $P5018, fb_tmp_96["knowhow"]
    set $P5020, $P5018
    goto if387_end777
  if387_else776:
    null $P5019
    set $P5020, $P5019
  if387_end777:
    unless_null $P5020, vivi_391783
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_391783:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 764
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback784
    nqp_get_sc_object $P5026, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5025, $P5026
    set fb_tmp_98, $P5025
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if392_else785 
    set $P5027, fb_tmp_98["$EXPORT"]
    set $P5029, $P5027
    goto if392_end786
  if392_else785:
    null $P5028
    set $P5029, $P5028
  if392_end786:
    unless_null $P5029, vivi_393787
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_393787:
    unless_null $P5029, vivi_394788
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_394788:
    set $P5024, $P5029
  fallback784:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback789
    nqp_get_sc_object $P5034, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5033, $P5034
    set fb_tmp_99, $P5033
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if395_else790 
    set $P5035, fb_tmp_99["$EXPORT"]
    set $P5037, $P5035
    goto if395_end791
  if395_else790:
    null $P5036
    set $P5037, $P5036
  if395_end791:
    unless_null $P5037, vivi_396792
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_396792:
    unless_null $P5037, vivi_397793
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_397793:
    set $P5032, $P5037
  fallback789:
    $P5023."compose"($P5032)
.annotate 'line', 765
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback794
    nqp_get_sc_object $P5042, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5041, $P5042
    set fb_tmp_100, $P5041
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if398_else795 
    set $P5043, fb_tmp_100["$W"]
    set $P5045, $P5043
    goto if398_end796
  if398_else795:
    null $P5044
    set $P5045, $P5044
  if398_end796:
    unless_null $P5045, vivi_399797
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_399797:
    unless_null $P5045, vivi_400798
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_400798:
    set $P5040, $P5045
  fallback794:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback799
    nqp_get_sc_object $P5050, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5049, $P5050
    set fb_tmp_101, $P5049
    repr_defined $I5007, fb_tmp_101
    unless $I5007 goto if401_else800 
    set $P5051, fb_tmp_101["$UNIT"]
    set $P5053, $P5051
    goto if401_end801
  if401_else800:
    null $P5052
    set $P5053, $P5052
  if401_end801:
    unless_null $P5053, vivi_402802
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5053, $P5054
  vivi_402802:
    unless_null $P5053, vivi_403803
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_403803:
    set $P5048, $P5053
  fallback799:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback804
    nqp_get_sc_object $P5058, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5057, $P5058
    set fb_tmp_102, $P5057
    repr_defined $I5008, fb_tmp_102
    unless $I5008 goto if404_else805 
    set $P5059, fb_tmp_102["$EXPORT"]
    set $P5061, $P5059
    goto if404_end806
  if404_else805:
    null $P5060
    set $P5061, $P5060
  if404_end806:
    unless_null $P5061, vivi_405807
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5061, $P5062
  vivi_405807:
    unless_null $P5061, vivi_406808
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_406808:
    set $P5056, $P5061
  fallback804:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 766
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback809
    nqp_get_sc_object $P5066, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5065, $P5066
    set fb_tmp_103, $P5065
    repr_defined $I5009, fb_tmp_103
    unless $I5009 goto if407_else810 
    set $P5067, fb_tmp_103["$W"]
    set $P5069, $P5067
    goto if407_end811
  if407_else810:
    null $P5068
    set $P5069, $P5068
  if407_end811:
    unless_null $P5069, vivi_408812
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5069, $P5070
  vivi_408812:
    unless_null $P5069, vivi_409813
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_409813:
    set $P5064, $P5069
  fallback809:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback816
    nqp_get_sc_object $P5074, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_23, $P5073
    set fb_tmp_105, pkg_viv_tmp_23
    repr_defined $I5011, fb_tmp_105
    unless $I5011 goto if411_else817 
    set $P5075, fb_tmp_105["%HOW"]
    set $P5077, $P5075
    goto if411_end818
  if411_else817:
    null $P5076
    set $P5077, $P5076
  if411_end818:
    unless_null $P5077, vivi_412819
    new $P5078, 'Hash'
    set pkg_viv_tmp_23["%HOW"], $P5078
    set $P5077, $P5078
  vivi_412819:
    unless_null $P5077, vivi_413820
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_413820:
    set $P5072, $P5077
  fallback816:
    set fb_tmp_104, $P5072
    repr_defined $I5010, fb_tmp_104
    unless $I5010 goto if410_else814 
    set $P5080, fb_tmp_104["knowhow"]
    set $P5082, $P5080
    goto if410_end815
  if410_else814:
    null $P5081
    set $P5082, $P5081
  if410_end815:
    unless_null $P5082, vivi_414821
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_414821:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 767
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback822
    nqp_get_sc_object $P5089, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5088, $P5089
    set fb_tmp_106, $P5088
    repr_defined $I5012, fb_tmp_106
    unless $I5012 goto if415_else823 
    set $P5090, fb_tmp_106["$EXPORT"]
    set $P5092, $P5090
    goto if415_end824
  if415_else823:
    null $P5091
    set $P5092, $P5091
  if415_end824:
    unless_null $P5092, vivi_416825
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5092, $P5093
  vivi_416825:
    unless_null $P5092, vivi_417826
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_417826:
    set $P5087, $P5092
  fallback822:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1382484127.52628") :anon :lex :outer("cuid_45_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 772
    .local pmc fb_tmp_107 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback827
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_107, $P5002
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if418_else828 
    set $P5004, fb_tmp_107["$W"]
    set $P5006, $P5004
    goto if418_end829
  if418_else828:
    null $P5005
    set $P5006, $P5005
  if418_end829:
    unless_null $P5006, vivi_419830
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_419830:
    unless_null $P5006, vivi_420831
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_420831:
    set $P5001, $P5006
  fallback827:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 780
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_47_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx426_start
    .local string rx426_tgt
    .local int rx426_pos
    .local int rx426_off
    .local int rx426_eos
    .local int rx426_rep
    .local pmc rx426_cur
    .local pmc rx426_curclass
    .local pmc rx426_bstack
    .local pmc rx426_cstack
    rx426_start = self."!cursor_start_all"()
    set rx426_cur, rx426_start[0]
    set rx426_tgt, rx426_start[1]
    set rx426_pos, rx426_start[2]
    set rx426_curclass, rx426_start[3]
    set rx426_bstack, rx426_start[4]
    set $I19, rx426_start[5]
    store_lex unicode:"$\x{a2}", rx426_cur
    length rx426_eos, rx426_tgt
    eq $I19, 1, rx426_restart841
    gt rx426_pos, rx426_eos, rx426_fail842
    repr_get_attr_int $I11, self, rx426_curclass, "$!from"
    ne $I11, -1, rxscan427_done848
    goto rxscan427_scan847
  rxscan427_loop846:
    inc rx426_pos
    gt rx426_pos, rx426_eos, rx426_fail842
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!from", rx426_pos
  rxscan427_scan847:
    nqp_rxmark rx426_bstack, rxscan427_loop846, rx426_pos, 0
  rxscan427_done848:
    add $I11, rx426_pos, 0
    gt $I11, rx426_eos, rx426_fail842
    substr $S10, rx426_tgt, rx426_pos, 0
    ne $S10, ucs4:"", rx426_fail842
    add rx426_pos, 0
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule428_pass849
  rxsubrule428_back850:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule428_pass849:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule428_back850
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt429_0852
    nqp_push_label $P11, alt429_1856
    nqp_push_label $P11, alt429_2869
    nqp_rxmark rx426_bstack, alt429_end851, -1, 0
    rx426_cur."!alt"(rx426_pos, "alt_nfa__7_1382484129.77433", $P11)
    goto rx426_fail842
  alt429_0852:
    lt rx426_pos, rx426_eos, rx426_fail842
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule431_pass854
  rxsubrule431_back855:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule431_pass854:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule431_back855
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    goto alt429_end851
  alt429_1856:
    .const 'Sub' $P5001 = 'cuid_47_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule434_pass867
  rxsubrule434_back868:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule434_pass867:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule434_back868
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    goto alt429_end851
  alt429_2869:
    nqp_rxmark rx426_bstack, rxquantg435_done871, rx426_pos, 0
  rxquantg435_loop870:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."statement"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule436_pass872
  rxsubrule436_back873:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule436_pass872:
    rx426_cstack = rx426_cur."!cursor_capture"($P11, "statement")
    set_addr $I11, rxsubrule436_back873
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule437_pass874
  rxsubrule437_back875:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule437_pass874:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule437_back875
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule438_pass876
  rxsubrule438_back877:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule438_pass876:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule438_back877
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule439_pass878
  rxsubrule439_back879:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule439_pass878:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule439_back879
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    nqp_rxmark rx426_bstack, rxquantg435_done871, rx426_pos, rx426_rep
    goto rxquantg435_loop870
  rxquantg435_done871:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule440_pass880
  rxsubrule440_back881:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule440_pass880:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule440_back881
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    goto alt429_end851
  alt429_end851:
    repr_bind_attr_int rx426_cur, rx426_curclass, "$!pos", rx426_pos
    $P11 = rx426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
    goto rxsubrule441_pass882
  rxsubrule441_back883:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx426_curclass, "$!pos"
    lt $I11, 0, rx426_fail842
  rxsubrule441_pass882:
    rx426_cstack = rx426_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule441_back883
    push rx426_bstack, $I11
    push rx426_bstack, 0
    push rx426_bstack, rx426_pos
    elements $I11, rx426_cstack
    push rx426_bstack, $I11
    repr_get_attr_int rx426_pos, $P11, rx426_curclass, "$!pos"
    rx426_cur."!cursor_pass"(rx426_pos, "statementlist", 'backtrack'=>1)
    .return (rx426_cur)
  rx426_restart841:
    repr_get_attr_obj rx426_cstack, rx426_cur, rx426_curclass, "$!cstack"
  rx426_fail842:
    unless rx426_bstack, rx426_done840
    pop $I19, rx426_bstack
    if_null rx426_cstack, rx426_cstack_done845
    unless rx426_cstack, rx426_cstack_done845
    dec $I19
    set $P11, rx426_cstack[$I19]
  rx426_cstack_done845:
    pop rx426_rep, rx426_bstack
    pop rx426_pos, rx426_bstack
    pop $I19, rx426_bstack
    lt rx426_pos, -1, rx426_done840
    lt rx426_pos, 0, rx426_fail842
    eq $I19, 0, rx426_fail842
    nqp_islist $I20, rx426_cstack
    unless $I20, rx426_jump843
    elements $I18, rx426_bstack
    le $I18, 0, rx426_cut844
    dec $I18
    set $I18, rx426_bstack[$I18]
  rx426_cut844:
    assign rx426_cstack, $I18
  rx426_jump843:
    jump $I19
  rx426_done840:
    rx426_cur."!cursor_fail"()
    .return (rx426_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_47_1382484127.52628") :anon :lex :outer("cuid_46_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx432_start
    .local string rx432_tgt
    .local int rx432_pos
    .local int rx432_off
    .local int rx432_eos
    .local int rx432_rep
    .local pmc rx432_cur
    .local pmc rx432_curclass
    .local pmc rx432_bstack
    .local pmc rx432_cstack
    rx432_start = self."!cursor_start_all"()
    set rx432_cur, rx432_start[0]
    set rx432_tgt, rx432_start[1]
    set rx432_pos, rx432_start[2]
    set rx432_curclass, rx432_start[3]
    set rx432_bstack, rx432_start[4]
    set $I19, rx432_start[5]
    store_lex unicode:"$\x{a2}", rx432_cur
    length rx432_eos, rx432_tgt
    eq $I19, 1, rx432_restart859
    gt rx432_pos, rx432_eos, rx432_fail860
    repr_get_attr_int $I11, self, rx432_curclass, "$!from"
    ne $I11, -1, rxscan433_done866
    goto rxscan433_scan865
  rxscan433_loop864:
    inc rx432_pos
    gt rx432_pos, rx432_eos, rx432_fail860
    repr_bind_attr_int rx432_cur, rx432_curclass, "$!from", rx432_pos
  rxscan433_scan865:
    nqp_rxmark rx432_bstack, rxscan433_loop864, rx432_pos, 0
  rxscan433_done866:
    ge rx432_pos, rx432_eos, rx432_fail860
    substr $S11, rx432_tgt, rx432_pos, 1
    index $I11, ucs4:")]}", $S11
    lt $I11, 0, rx432_fail860
    inc rx432_pos
    rx432_cur."!cursor_pass"(rx432_pos, 'backtrack'=>1)
    .return (rx432_cur)
  rx432_restart859:
    repr_get_attr_obj rx432_cstack, rx432_cur, rx432_curclass, "$!cstack"
  rx432_fail860:
    unless rx432_bstack, rx432_done858
    pop $I19, rx432_bstack
    if_null rx432_cstack, rx432_cstack_done863
    unless rx432_cstack, rx432_cstack_done863
    dec $I19
    set $P11, rx432_cstack[$I19]
  rx432_cstack_done863:
    pop rx432_rep, rx432_bstack
    pop rx432_pos, rx432_bstack
    pop $I19, rx432_bstack
    lt rx432_pos, -1, rx432_done858
    lt rx432_pos, 0, rx432_fail860
    eq $I19, 0, rx432_fail860
    nqp_islist $I20, rx432_cstack
    unless $I20, rx432_jump861
    elements $I18, rx432_bstack
    le $I18, 0, rx432_cut862
    dec $I18
    set $I18, rx432_bstack[$I18]
  rx432_cut862:
    assign rx432_cstack, $I18
  rx432_jump861:
    jump $I19
  rx432_done858:
    rx432_cur."!cursor_fail"()
    .return (rx432_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_48_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 789
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_49_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx442_start
    .local string rx442_tgt
    .local int rx442_pos
    .local int rx442_off
    .local int rx442_eos
    .local int rx442_rep
    .local pmc rx442_cur
    .local pmc rx442_curclass
    .local pmc rx442_bstack
    .local pmc rx442_cstack
    rx442_start = self."!cursor_start_all"()
    set rx442_cur, rx442_start[0]
    set rx442_tgt, rx442_start[1]
    set rx442_pos, rx442_start[2]
    set rx442_curclass, rx442_start[3]
    set rx442_bstack, rx442_start[4]
    set $I19, rx442_start[5]
    store_lex unicode:"$\x{a2}", rx442_cur
    length rx442_eos, rx442_tgt
    eq $I19, 1, rx442_restart886
    gt rx442_pos, rx442_eos, rx442_fail887
    repr_get_attr_int $I11, self, rx442_curclass, "$!from"
    ne $I11, -1, rxscan443_done893
    goto rxscan443_scan892
  rxscan443_loop891:
    inc rx442_pos
    gt rx442_pos, rx442_eos, rx442_fail887
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!from", rx442_pos
  rxscan443_scan892:
    nqp_rxmark rx442_bstack, rxscan443_loop891, rx442_pos, 0
  rxscan443_done893:
    .const 'Sub' $P5001 = 'cuid_49_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    ge $I11, 0, rx442_fail887
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt448_0909
    nqp_push_label $P11, alt448_1911
    nqp_rxmark rx442_bstack, alt448_end908, -1, 0
    rx442_cur."!alt"(rx442_pos, "alt_nfa__9_1382484129.79894", $P11)
    goto rx442_fail887
  alt448_0909:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    nqp_rxmark rx442_bstack, rxsubrule449_pass910, -1, 0
  rxsubrule449_pass910:
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    goto alt448_end908
  alt448_1911:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    nqp_rxmark rx442_bstack, rxsubrule450_pass912, -1, 0
  rxsubrule450_pass912:
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."ws"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    nqp_rxmark rx442_bstack, rxquantr452_done915, rx442_pos, 0
  rxquantr452_loop914:
  alt453_0917:
    nqp_rxmark rx442_bstack, alt453_1918, rx442_pos, 0
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    goto alt453_end916
  alt453_1918:
    nqp_rxmark rx442_bstack, alt453_2924, rx442_pos, 0
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    nqp_rxmark rx442_bstack, rxsubrule454_pass919, -1, 0
  rxsubrule454_pass919:
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    nqp_rxmark rx442_bstack, rxquantr455_done921, rx442_pos, 0
  rxquantr455_loop920:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    goto rxsubrule456_pass922
  rxsubrule456_back923:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
  rxsubrule456_pass922:
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule456_back923
    push rx442_bstack, $I11
    push rx442_bstack, 0
    push rx442_bstack, rx442_pos
    elements $I11, rx442_cstack
    push rx442_bstack, $I11
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
    nqp_rxpeek $I19, rx442_bstack, rxquantr455_done921
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr455_done921
    inc rx442_rep
  rxquantr455_done921:
    goto alt453_end916
  alt453_2924:
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx442_curclass, "$!pos"
    lt $I11, 0, rx442_fail887
    nqp_rxmark rx442_bstack, rxsubrule457_pass925, -1, 0
  rxsubrule457_pass925:
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx442_pos, $P11, rx442_curclass, "$!pos"
  alt453_end916:
    nqp_rxpeek $I19, rx442_bstack, rxquantr452_done915
    inc $I19
    inc $I19
    set rx442_rep, rx442_bstack[$I19]
    nqp_rxcommit rx442_bstack, rxquantr452_done915
    inc rx442_rep
  rxquantr452_done915:
    goto alt448_end908
  alt448_end908:
    nqp_rxcommit rx442_bstack, alt448_end908
    rx442_cur."!cursor_pass"(rx442_pos, "statement", 'backtrack'=>1)
    .return (rx442_cur)
  rx442_restart886:
    repr_get_attr_obj rx442_cstack, rx442_cur, rx442_curclass, "$!cstack"
  rx442_fail887:
    unless rx442_bstack, rx442_done885
    pop $I19, rx442_bstack
    if_null rx442_cstack, rx442_cstack_done890
    unless rx442_cstack, rx442_cstack_done890
    dec $I19
    set $P11, rx442_cstack[$I19]
  rx442_cstack_done890:
    pop rx442_rep, rx442_bstack
    pop rx442_pos, rx442_bstack
    pop $I19, rx442_bstack
    lt rx442_pos, -1, rx442_done885
    lt rx442_pos, 0, rx442_fail887
    eq $I19, 0, rx442_fail887
    nqp_islist $I20, rx442_cstack
    unless $I20, rx442_jump888
    elements $I18, rx442_bstack
    le $I18, 0, rx442_cut889
    dec $I18
    set $I18, rx442_bstack[$I18]
  rx442_cut889:
    assign rx442_cstack, $I18
  rx442_jump888:
    jump $I19
  rx442_done885:
    rx442_cur."!cursor_fail"()
    .return (rx442_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_49_1382484127.52628") :anon :lex :outer("cuid_48_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx444_start
    .local string rx444_tgt
    .local int rx444_pos
    .local int rx444_off
    .local int rx444_eos
    .local int rx444_rep
    .local pmc rx444_cur
    .local pmc rx444_curclass
    .local pmc rx444_bstack
    .local pmc rx444_cstack
    rx444_start = self."!cursor_start_all"()
    set rx444_cur, rx444_start[0]
    set rx444_tgt, rx444_start[1]
    set rx444_pos, rx444_start[2]
    set rx444_curclass, rx444_start[3]
    set rx444_bstack, rx444_start[4]
    set $I19, rx444_start[5]
    store_lex unicode:"$\x{a2}", rx444_cur
    length rx444_eos, rx444_tgt
    eq $I19, 1, rx444_restart896
    gt rx444_pos, rx444_eos, rx444_fail897
    repr_get_attr_int $I11, self, rx444_curclass, "$!from"
    ne $I11, -1, rxscan445_done903
    goto rxscan445_scan902
  rxscan445_loop901:
    inc rx444_pos
    gt rx444_pos, rx444_eos, rx444_fail897
    repr_bind_attr_int rx444_cur, rx444_curclass, "$!from", rx444_pos
  rxscan445_scan902:
    nqp_rxmark rx444_bstack, rxscan445_loop901, rx444_pos, 0
  rxscan445_done903:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt446_0905
    nqp_push_label $P11, alt446_1906
    nqp_rxmark rx444_bstack, alt446_end904, -1, 0
    rx444_cur."!alt"(rx444_pos, "alt_nfa__8_1382484129.7819", $P11)
    goto rx444_fail897
  alt446_0905:
    ge rx444_pos, rx444_eos, rx444_fail897
    substr $S11, rx444_tgt, rx444_pos, 1
    index $I11, ucs4:"])}", $S11
    lt $I11, 0, rx444_fail897
    inc rx444_pos
    goto alt446_end904
  alt446_1906:
    lt rx444_pos, rx444_eos, rx444_fail897
    goto alt446_end904
  alt446_end904:
    rx444_cur."!cursor_pass"(rx444_pos, 'backtrack'=>1)
    .return (rx444_cur)
  rx444_restart896:
    repr_get_attr_obj rx444_cstack, rx444_cur, rx444_curclass, "$!cstack"
  rx444_fail897:
    unless rx444_bstack, rx444_done895
    pop $I19, rx444_bstack
    if_null rx444_cstack, rx444_cstack_done900
    unless rx444_cstack, rx444_cstack_done900
    dec $I19
    set $P11, rx444_cstack[$I19]
  rx444_cstack_done900:
    pop rx444_rep, rx444_bstack
    pop rx444_pos, rx444_bstack
    pop $I19, rx444_bstack
    lt rx444_pos, -1, rx444_done895
    lt rx444_pos, 0, rx444_fail897
    eq $I19, 0, rx444_fail897
    nqp_islist $I20, rx444_cstack
    unless $I20, rx444_jump898
    elements $I18, rx444_bstack
    le $I18, 0, rx444_cut899
    dec $I18
    set $I18, rx444_bstack[$I18]
  rx444_cut899:
    assign rx444_cstack, $I18
  rx444_jump898:
    jump $I19
  rx444_done895:
    rx444_cur."!cursor_fail"()
    .return (rx444_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_50_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 802
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx458_start
    .local string rx458_tgt
    .local int rx458_pos
    .local int rx458_off
    .local int rx458_eos
    .local int rx458_rep
    .local pmc rx458_cur
    .local pmc rx458_curclass
    .local pmc rx458_bstack
    .local pmc rx458_cstack
    rx458_start = self."!cursor_start_all"()
    set rx458_cur, rx458_start[0]
    set rx458_tgt, rx458_start[1]
    set rx458_pos, rx458_start[2]
    set rx458_curclass, rx458_start[3]
    set rx458_bstack, rx458_start[4]
    set $I19, rx458_start[5]
    store_lex unicode:"$\x{a2}", rx458_cur
    length rx458_eos, rx458_tgt
    eq $I19, 1, rx458_restart928
    gt rx458_pos, rx458_eos, rx458_fail929
    repr_get_attr_int $I11, self, rx458_curclass, "$!from"
    ne $I11, -1, rxscan459_done935
    goto rxscan459_scan934
  rxscan459_loop933:
    inc rx458_pos
    gt rx458_pos, rx458_eos, rx458_fail929
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!from", rx458_pos
  rxscan459_scan934:
    nqp_rxmark rx458_bstack, rxscan459_loop933, rx458_pos, 0
  rxscan459_done935:
  alt460_0937:
    nqp_rxmark rx458_bstack, alt460_1938, rx458_pos, 0
    add $I11, rx458_pos, 1
    gt $I11, rx458_eos, rx458_fail929
    substr $S10, rx458_tgt, rx458_pos, 1
    ne $S10, ucs4:";", rx458_fail929
    add rx458_pos, 1
    goto alt460_end936
  alt460_1938:
    nqp_rxmark rx458_bstack, alt460_2939, rx458_pos, 0
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!pos", rx458_pos
    $P11 = rx458_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx458_curclass, "$!pos"
    lt $I11, 0, rx458_fail929
    goto alt460_end936
  alt460_2939:
    nqp_rxmark rx458_bstack, alt460_3940, rx458_pos, 0
    repr_bind_attr_int rx458_cur, rx458_curclass, "$!pos", rx458_pos
    $P11 = rx458_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx458_curclass, "$!pos"
    lt $I11, 0, rx458_fail929
    goto alt460_end936
  alt460_3940:
    lt rx458_pos, rx458_eos, rx458_fail929
  alt460_end936:
    rx458_cur."!cursor_pass"(rx458_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx458_cur)
  rx458_restart928:
    repr_get_attr_obj rx458_cstack, rx458_cur, rx458_curclass, "$!cstack"
  rx458_fail929:
    unless rx458_bstack, rx458_done927
    pop $I19, rx458_bstack
    if_null rx458_cstack, rx458_cstack_done932
    unless rx458_cstack, rx458_cstack_done932
    dec $I19
    set $P11, rx458_cstack[$I19]
  rx458_cstack_done932:
    pop rx458_rep, rx458_bstack
    pop rx458_pos, rx458_bstack
    pop $I19, rx458_bstack
    lt rx458_pos, -1, rx458_done927
    lt rx458_pos, 0, rx458_fail929
    eq $I19, 0, rx458_fail929
    nqp_islist $I20, rx458_cstack
    unless $I20, rx458_jump930
    elements $I18, rx458_bstack
    le $I18, 0, rx458_cut931
    dec $I18
    set $I18, rx458_bstack[$I18]
  rx458_cut931:
    assign rx458_cstack, $I18
  rx458_jump930:
    jump $I19
  rx458_done927:
    rx458_cur."!cursor_fail"()
    .return (rx458_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_51_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 809
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx462_start
    .local string rx462_tgt
    .local int rx462_pos
    .local int rx462_off
    .local int rx462_eos
    .local int rx462_rep
    .local pmc rx462_cur
    .local pmc rx462_curclass
    .local pmc rx462_bstack
    .local pmc rx462_cstack
    rx462_start = self."!cursor_start_all"()
    set rx462_cur, rx462_start[0]
    set rx462_tgt, rx462_start[1]
    set rx462_pos, rx462_start[2]
    set rx462_curclass, rx462_start[3]
    set rx462_bstack, rx462_start[4]
    set $I19, rx462_start[5]
    store_lex unicode:"$\x{a2}", rx462_cur
    length rx462_eos, rx462_tgt
    eq $I19, 1, rx462_restart944
    gt rx462_pos, rx462_eos, rx462_fail945
    repr_get_attr_int $I11, self, rx462_curclass, "$!from"
    ne $I11, -1, rxscan463_done951
    goto rxscan463_scan950
  rxscan463_loop949:
    inc rx462_pos
    gt rx462_pos, rx462_eos, rx462_fail945
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!from", rx462_pos
  rxscan463_scan950:
    nqp_rxmark rx462_bstack, rxscan463_loop949, rx462_pos, 0
  rxscan463_done951:
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!pos", rx462_pos
    $P11 = rx462_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx462_curclass, "$!pos"
    lt $I11, 0, rx462_fail945
    nqp_rxmark rx462_bstack, rxsubrule464_pass952, -1, 0
  rxsubrule464_pass952:
    rx462_cstack = rx462_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx462_pos, $P11, rx462_curclass, "$!pos"
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!pos", rx462_pos
    $P11 = rx462_cur."ws"()
    repr_get_attr_int $I11, $P11, rx462_curclass, "$!pos"
    lt $I11, 0, rx462_fail945
    repr_get_attr_int rx462_pos, $P11, rx462_curclass, "$!pos"
    repr_bind_attr_int rx462_cur, rx462_curclass, "$!pos", rx462_pos
    $P11 = rx462_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx462_curclass, "$!pos"
    lt $I11, 0, rx462_fail945
    nqp_rxmark rx462_bstack, rxsubrule466_pass954, -1, 0
  rxsubrule466_pass954:
    rx462_cstack = rx462_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx462_pos, $P11, rx462_curclass, "$!pos"
    rx462_cur."!cursor_pass"(rx462_pos, "xblock", 'backtrack'=>1)
    .return (rx462_cur)
  rx462_restart944:
    repr_get_attr_obj rx462_cstack, rx462_cur, rx462_curclass, "$!cstack"
  rx462_fail945:
    unless rx462_bstack, rx462_done943
    pop $I19, rx462_bstack
    if_null rx462_cstack, rx462_cstack_done948
    unless rx462_cstack, rx462_cstack_done948
    dec $I19
    set $P11, rx462_cstack[$I19]
  rx462_cstack_done948:
    pop rx462_rep, rx462_bstack
    pop rx462_pos, rx462_bstack
    pop $I19, rx462_bstack
    lt rx462_pos, -1, rx462_done943
    lt rx462_pos, 0, rx462_fail945
    eq $I19, 0, rx462_fail945
    nqp_islist $I20, rx462_cstack
    unless $I20, rx462_jump946
    elements $I18, rx462_bstack
    le $I18, 0, rx462_cut947
    dec $I18
    set $I18, rx462_bstack[$I18]
  rx462_cut947:
    assign rx462_cstack, $I18
  rx462_jump946:
    jump $I19
  rx462_done943:
    rx462_cur."!cursor_fail"()
    .return (rx462_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_52_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 813
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx467_start
    .local string rx467_tgt
    .local int rx467_pos
    .local int rx467_off
    .local int rx467_eos
    .local int rx467_rep
    .local pmc rx467_cur
    .local pmc rx467_curclass
    .local pmc rx467_bstack
    .local pmc rx467_cstack
    rx467_start = self."!cursor_start_all"()
    set rx467_cur, rx467_start[0]
    set rx467_tgt, rx467_start[1]
    set rx467_pos, rx467_start[2]
    set rx467_curclass, rx467_start[3]
    set rx467_bstack, rx467_start[4]
    set $I19, rx467_start[5]
    store_lex unicode:"$\x{a2}", rx467_cur
    length rx467_eos, rx467_tgt
    eq $I19, 1, rx467_restart957
    gt rx467_pos, rx467_eos, rx467_fail958
    repr_get_attr_int $I11, self, rx467_curclass, "$!from"
    ne $I11, -1, rxscan468_done964
    goto rxscan468_scan963
  rxscan468_loop962:
    inc rx467_pos
    gt rx467_pos, rx467_eos, rx467_fail958
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!from", rx467_pos
  rxscan468_scan963:
    nqp_rxmark rx467_bstack, rxscan468_loop962, rx467_pos, 0
  rxscan468_done964:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt469_0966
    nqp_push_label $P11, alt469_1972
    nqp_push_label $P11, alt469_2975
    nqp_rxmark rx467_bstack, alt469_end965, -1, 0
    rx467_cur."!alt"(rx467_pos, "alt_nfa__10_1382484129.85794", $P11)
    goto rx467_fail958
  alt469_0966:
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."signature"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    nqp_rxmark rx467_bstack, rxsubrule472_pass969, -1, 0
  rxsubrule472_pass969:
    rx467_cstack = rx467_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."ws"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    nqp_rxmark rx467_bstack, rxsubrule474_pass971, -1, 0
  rxsubrule474_pass971:
    rx467_cstack = rx467_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    goto alt469_end965
  alt469_1972:
    ge rx467_pos, rx467_eos, rx467_fail958
    substr $S11, rx467_tgt, rx467_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx467_fail958
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    nqp_rxmark rx467_bstack, rxsubrule476_pass974, -1, 0
  rxsubrule476_pass974:
    rx467_cstack = rx467_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    goto alt469_end965
  alt469_2975:
    repr_bind_attr_int rx467_cur, rx467_curclass, "$!pos", rx467_pos
    $P11 = rx467_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx467_curclass, "$!pos"
    lt $I11, 0, rx467_fail958
    repr_get_attr_int rx467_pos, $P11, rx467_curclass, "$!pos"
    goto alt469_end965
  alt469_end965:
    rx467_cur."!cursor_pass"(rx467_pos, "pblock", 'backtrack'=>1)
    .return (rx467_cur)
  rx467_restart957:
    repr_get_attr_obj rx467_cstack, rx467_cur, rx467_curclass, "$!cstack"
  rx467_fail958:
    unless rx467_bstack, rx467_done956
    pop $I19, rx467_bstack
    if_null rx467_cstack, rx467_cstack_done961
    unless rx467_cstack, rx467_cstack_done961
    dec $I19
    set $P11, rx467_cstack[$I19]
  rx467_cstack_done961:
    pop rx467_rep, rx467_bstack
    pop rx467_pos, rx467_bstack
    pop $I19, rx467_bstack
    lt rx467_pos, -1, rx467_done956
    lt rx467_pos, 0, rx467_fail958
    eq $I19, 0, rx467_fail958
    nqp_islist $I20, rx467_cstack
    unless $I20, rx467_jump959
    elements $I18, rx467_bstack
    le $I18, 0, rx467_cut960
    dec $I18
    set $I18, rx467_bstack[$I18]
  rx467_cut960:
    assign rx467_cstack, $I18
  rx467_jump959:
    jump $I19
  rx467_done956:
    rx467_cur."!cursor_fail"()
    .return (rx467_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_53_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 824
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx478_start
    .local string rx478_tgt
    .local int rx478_pos
    .local int rx478_off
    .local int rx478_eos
    .local int rx478_rep
    .local pmc rx478_cur
    .local pmc rx478_curclass
    .local pmc rx478_bstack
    .local pmc rx478_cstack
    rx478_start = self."!cursor_start_all"()
    set rx478_cur, rx478_start[0]
    set rx478_tgt, rx478_start[1]
    set rx478_pos, rx478_start[2]
    set rx478_curclass, rx478_start[3]
    set rx478_bstack, rx478_start[4]
    set $I19, rx478_start[5]
    store_lex unicode:"$\x{a2}", rx478_cur
    length rx478_eos, rx478_tgt
    eq $I19, 1, rx478_restart979
    gt rx478_pos, rx478_eos, rx478_fail980
    repr_get_attr_int $I11, self, rx478_curclass, "$!from"
    ne $I11, -1, rxscan479_done986
    goto rxscan479_scan985
  rxscan479_loop984:
    inc rx478_pos
    gt rx478_pos, rx478_eos, rx478_fail980
    repr_bind_attr_int rx478_cur, rx478_curclass, "$!from", rx478_pos
  rxscan479_scan985:
    nqp_rxmark rx478_bstack, rxscan479_loop984, rx478_pos, 0
  rxscan479_done986:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt480_0988
    nqp_push_label $P11, alt480_1989
    nqp_rxmark rx478_bstack, alt480_end987, -1, 0
    rx478_cur."!alt"(rx478_pos, "alt_nfa__11_1382484129.865", $P11)
    goto rx478_fail980
  alt480_0988:
    add $I11, rx478_pos, 2
    gt $I11, rx478_eos, rx478_fail980
    substr $S10, rx478_tgt, rx478_pos, 2
    ne $S10, ucs4:"->", rx478_fail980
    add rx478_pos, 2
    goto alt480_end987
  alt480_1989:
    add $I11, rx478_pos, 3
    gt $I11, rx478_eos, rx478_fail980
    substr $S10, rx478_tgt, rx478_pos, 3
    ne $S10, ucs4:"<->", rx478_fail980
    add rx478_pos, 3
    goto alt480_end987
  alt480_end987:
    rx478_cur."!cursor_pass"(rx478_pos, "lambda", 'backtrack'=>1)
    .return (rx478_cur)
  rx478_restart979:
    repr_get_attr_obj rx478_cstack, rx478_cur, rx478_curclass, "$!cstack"
  rx478_fail980:
    unless rx478_bstack, rx478_done978
    pop $I19, rx478_bstack
    if_null rx478_cstack, rx478_cstack_done983
    unless rx478_cstack, rx478_cstack_done983
    dec $I19
    set $P11, rx478_cstack[$I19]
  rx478_cstack_done983:
    pop rx478_rep, rx478_bstack
    pop rx478_pos, rx478_bstack
    pop $I19, rx478_bstack
    lt rx478_pos, -1, rx478_done978
    lt rx478_pos, 0, rx478_fail980
    eq $I19, 0, rx478_fail980
    nqp_islist $I20, rx478_cstack
    unless $I20, rx478_jump981
    elements $I18, rx478_bstack
    le $I18, 0, rx478_cut982
    dec $I18
    set $I18, rx478_bstack[$I18]
  rx478_cut982:
    assign rx478_cstack, $I18
  rx478_jump981:
    jump $I19
  rx478_done978:
    rx478_cur."!cursor_fail"()
    .return (rx478_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_54_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 826
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx481_start
    .local string rx481_tgt
    .local int rx481_pos
    .local int rx481_off
    .local int rx481_eos
    .local int rx481_rep
    .local pmc rx481_cur
    .local pmc rx481_curclass
    .local pmc rx481_bstack
    .local pmc rx481_cstack
    rx481_start = self."!cursor_start_all"()
    set rx481_cur, rx481_start[0]
    set rx481_tgt, rx481_start[1]
    set rx481_pos, rx481_start[2]
    set rx481_curclass, rx481_start[3]
    set rx481_bstack, rx481_start[4]
    set $I19, rx481_start[5]
    store_lex unicode:"$\x{a2}", rx481_cur
    length rx481_eos, rx481_tgt
    eq $I19, 1, rx481_restart992
    gt rx481_pos, rx481_eos, rx481_fail993
    repr_get_attr_int $I11, self, rx481_curclass, "$!from"
    ne $I11, -1, rxscan482_done999
    goto rxscan482_scan998
  rxscan482_loop997:
    inc rx481_pos
    gt rx481_pos, rx481_eos, rx481_fail993
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!from", rx481_pos
  rxscan482_scan998:
    nqp_rxmark rx481_bstack, rxscan482_loop997, rx481_pos, 0
  rxscan482_done999:
  alt483_01001:
    nqp_rxmark rx481_bstack, alt483_11002, rx481_pos, 0
    ge rx481_pos, rx481_eos, rx481_fail993
    substr $S11, rx481_tgt, rx481_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx481_fail993
    goto alt483_end1000
  alt483_11002:
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!pos", rx481_pos
    $P11 = rx481_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx481_curclass, "$!pos"
    lt $I11, 0, rx481_fail993
    repr_get_attr_int rx481_pos, $P11, rx481_curclass, "$!pos"
  alt483_end1000:
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!pos", rx481_pos
    $P11 = rx481_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx481_curclass, "$!pos"
    lt $I11, 0, rx481_fail993
    repr_get_attr_int rx481_pos, $P11, rx481_curclass, "$!pos"
    repr_bind_attr_int rx481_cur, rx481_curclass, "$!pos", rx481_pos
    $P11 = rx481_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx481_curclass, "$!pos"
    lt $I11, 0, rx481_fail993
    nqp_rxmark rx481_bstack, rxsubrule486_pass1005, -1, 0
  rxsubrule486_pass1005:
    rx481_cstack = rx481_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx481_pos, $P11, rx481_curclass, "$!pos"
    rx481_cur."!cursor_pass"(rx481_pos, "block", 'backtrack'=>1)
    .return (rx481_cur)
  rx481_restart992:
    repr_get_attr_obj rx481_cstack, rx481_cur, rx481_curclass, "$!cstack"
  rx481_fail993:
    unless rx481_bstack, rx481_done991
    pop $I19, rx481_bstack
    if_null rx481_cstack, rx481_cstack_done996
    unless rx481_cstack, rx481_cstack_done996
    dec $I19
    set $P11, rx481_cstack[$I19]
  rx481_cstack_done996:
    pop rx481_rep, rx481_bstack
    pop rx481_pos, rx481_bstack
    pop $I19, rx481_bstack
    lt rx481_pos, -1, rx481_done991
    lt rx481_pos, 0, rx481_fail993
    eq $I19, 0, rx481_fail993
    nqp_islist $I20, rx481_cstack
    unless $I20, rx481_jump994
    elements $I18, rx481_bstack
    le $I18, 0, rx481_cut995
    dec $I18
    set $I18, rx481_bstack[$I18]
  rx481_cut995:
    assign rx481_cstack, $I18
  rx481_jump994:
    jump $I19
  rx481_done991:
    rx481_cur."!cursor_fail"()
    .return (rx481_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_55_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 832
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_108 
    .local pmc pkg_viv_tmp_24 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx487_start
    .local string rx487_tgt
    .local int rx487_pos
    .local int rx487_off
    .local int rx487_eos
    .local int rx487_rep
    .local pmc rx487_cur
    .local pmc rx487_curclass
    .local pmc rx487_bstack
    .local pmc rx487_cstack
    rx487_start = self."!cursor_start_all"()
    set rx487_cur, rx487_start[0]
    set rx487_tgt, rx487_start[1]
    set rx487_pos, rx487_start[2]
    set rx487_curclass, rx487_start[3]
    set rx487_bstack, rx487_start[4]
    set $I19, rx487_start[5]
    store_lex unicode:"$\x{a2}", rx487_cur
    length rx487_eos, rx487_tgt
    eq $I19, 1, rx487_restart1008
    gt rx487_pos, rx487_eos, rx487_fail1009
    repr_get_attr_int $I11, self, rx487_curclass, "$!from"
    ne $I11, -1, rxscan488_done1015
    goto rxscan488_scan1014
  rxscan488_loop1013:
    inc rx487_pos
    gt rx487_pos, rx487_eos, rx487_fail1009
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!from", rx487_pos
  rxscan488_scan1014:
    nqp_rxmark rx487_bstack, rxscan488_loop1013, rx487_pos, 0
  rxscan488_done1015:
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    store_lex unicode:"$\x{a2}", rx487_cur
    unless_null $P101, fallback1016
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_24, $P5002
    set fb_tmp_108, pkg_viv_tmp_24
    repr_defined $I5001, fb_tmp_108
    unless $I5001 goto if489_else1017 
    set $P5004, fb_tmp_108["%HANDLERS"]
    set $P5006, $P5004
    goto if489_end1018
  if489_else1017:
    null $P5005
    set $P5006, $P5005
  if489_end1018:
    unless_null $P5006, vivi_4901019
    new $P5007, 'Hash'
    set pkg_viv_tmp_24["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_4901019:
    unless_null $P5006, vivi_4911020
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_4911020:
    set $P101, $P5006
  fallback1016:
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    $P11 = rx487_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
    repr_get_attr_int rx487_pos, $P11, rx487_curclass, "$!pos"
  alt493_01023:
    nqp_rxmark rx487_bstack, alt493_11025, rx487_pos, 0
    add $I11, rx487_pos, 14
    gt $I11, rx487_eos, rx487_fail1009
    substr $S10, rx487_tgt, rx487_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx487_fail1009
    add rx487_pos, 14
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    $P11 = rx487_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
    nqp_rxmark rx487_bstack, rxsubrule494_pass1024, -1, 0
  rxsubrule494_pass1024:
    rx487_cstack = rx487_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx487_pos, $P11, rx487_curclass, "$!pos"
    goto alt493_end1022
  alt493_11025:
    add $I11, rx487_pos, 1
    gt $I11, rx487_eos, rx487_fail1009
    substr $S10, rx487_tgt, rx487_pos, 1
    ne $S10, ucs4:"{", rx487_fail1009
    add rx487_pos, 1
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    $P11 = rx487_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
    nqp_rxmark rx487_bstack, rxsubrule495_pass1026, -1, 0
  rxsubrule495_pass1026:
    rx487_cstack = rx487_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx487_pos, $P11, rx487_curclass, "$!pos"
  alt496_01028:
    nqp_rxmark rx487_bstack, alt496_11029, rx487_pos, 0
    add $I11, rx487_pos, 1
    gt $I11, rx487_eos, rx487_fail1009
    substr $S10, rx487_tgt, rx487_pos, 1
    ne $S10, ucs4:"}", rx487_fail1009
    add rx487_pos, 1
    goto alt496_end1027
  alt496_11029:
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    $P11 = rx487_cur."FAILGOAL"("'}' ")
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
    goto rxsubrule497_pass1030
  rxsubrule497_back1031:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
  rxsubrule497_pass1030:
    rx487_cstack = rx487_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule497_back1031
    push rx487_bstack, $I11
    push rx487_bstack, 0
    push rx487_bstack, rx487_pos
    elements $I11, rx487_cstack
    push rx487_bstack, $I11
    repr_get_attr_int rx487_pos, $P11, rx487_curclass, "$!pos"
  alt496_end1027:
  alt493_end1022:
    repr_bind_attr_int rx487_cur, rx487_curclass, "$!pos", rx487_pos
    $P11 = rx487_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx487_curclass, "$!pos"
    lt $I11, 0, rx487_fail1009
    rx487_cur."!cursor_pass"(rx487_pos, "blockoid", 'backtrack'=>1)
    .return (rx487_cur)
  rx487_restart1008:
    repr_get_attr_obj rx487_cstack, rx487_cur, rx487_curclass, "$!cstack"
  rx487_fail1009:
    unless rx487_bstack, rx487_done1007
    pop $I19, rx487_bstack
    if_null rx487_cstack, rx487_cstack_done1012
    unless rx487_cstack, rx487_cstack_done1012
    dec $I19
    set $P11, rx487_cstack[$I19]
  rx487_cstack_done1012:
    pop rx487_rep, rx487_bstack
    pop rx487_pos, rx487_bstack
    pop $I19, rx487_bstack
    lt rx487_pos, -1, rx487_done1007
    lt rx487_pos, 0, rx487_fail1009
    eq $I19, 0, rx487_fail1009
    nqp_islist $I20, rx487_cstack
    unless $I20, rx487_jump1010
    elements $I18, rx487_bstack
    le $I18, 0, rx487_cut1011
    dec $I18
    set $I18, rx487_bstack[$I18]
  rx487_cut1011:
    assign rx487_cstack, $I18
  rx487_jump1010:
    jump $I19
  rx487_done1007:
    rx487_cur."!cursor_fail"()
    .return (rx487_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_56_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 842
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx498_start
    .local string rx498_tgt
    .local int rx498_pos
    .local int rx498_off
    .local int rx498_eos
    .local int rx498_rep
    .local pmc rx498_cur
    .local pmc rx498_curclass
    .local pmc rx498_bstack
    .local pmc rx498_cstack
    rx498_start = self."!cursor_start_all"()
    set rx498_cur, rx498_start[0]
    set rx498_tgt, rx498_start[1]
    set rx498_pos, rx498_start[2]
    set rx498_curclass, rx498_start[3]
    set rx498_bstack, rx498_start[4]
    set $I19, rx498_start[5]
    store_lex unicode:"$\x{a2}", rx498_cur
    length rx498_eos, rx498_tgt
    eq $I19, 1, rx498_restart1034
    gt rx498_pos, rx498_eos, rx498_fail1035
    repr_get_attr_int $I11, self, rx498_curclass, "$!from"
    ne $I11, -1, rxscan499_done1041
    goto rxscan499_scan1040
  rxscan499_loop1039:
    inc rx498_pos
    gt rx498_pos, rx498_eos, rx498_fail1035
    repr_bind_attr_int rx498_cur, rx498_curclass, "$!from", rx498_pos
  rxscan499_scan1040:
    nqp_rxmark rx498_bstack, rxscan499_loop1039, rx498_pos, 0
  rxscan499_done1041:
    rx498_cur."!cursor_pass"(rx498_pos, "newpad", 'backtrack'=>1)
    .return (rx498_cur)
  rx498_restart1034:
    repr_get_attr_obj rx498_cstack, rx498_cur, rx498_curclass, "$!cstack"
  rx498_fail1035:
    unless rx498_bstack, rx498_done1033
    pop $I19, rx498_bstack
    if_null rx498_cstack, rx498_cstack_done1038
    unless rx498_cstack, rx498_cstack_done1038
    dec $I19
    set $P11, rx498_cstack[$I19]
  rx498_cstack_done1038:
    pop rx498_rep, rx498_bstack
    pop rx498_pos, rx498_bstack
    pop $I19, rx498_bstack
    lt rx498_pos, -1, rx498_done1033
    lt rx498_pos, 0, rx498_fail1035
    eq $I19, 0, rx498_fail1035
    nqp_islist $I20, rx498_cstack
    unless $I20, rx498_jump1036
    elements $I18, rx498_bstack
    le $I18, 0, rx498_cut1037
    dec $I18
    set $I18, rx498_bstack[$I18]
  rx498_cut1037:
    assign rx498_cstack, $I18
  rx498_jump1036:
    jump $I19
  rx498_done1033:
    rx498_cur."!cursor_fail"()
    .return (rx498_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_57_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 843
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx501_start
    .local string rx501_tgt
    .local int rx501_pos
    .local int rx501_off
    .local int rx501_eos
    .local int rx501_rep
    .local pmc rx501_cur
    .local pmc rx501_curclass
    .local pmc rx501_bstack
    .local pmc rx501_cstack
    rx501_start = self."!cursor_start_all"()
    set rx501_cur, rx501_start[0]
    set rx501_tgt, rx501_start[1]
    set rx501_pos, rx501_start[2]
    set rx501_curclass, rx501_start[3]
    set rx501_bstack, rx501_start[4]
    set $I19, rx501_start[5]
    store_lex unicode:"$\x{a2}", rx501_cur
    length rx501_eos, rx501_tgt
    eq $I19, 1, rx501_restart1045
    gt rx501_pos, rx501_eos, rx501_fail1046
    repr_get_attr_int $I11, self, rx501_curclass, "$!from"
    ne $I11, -1, rxscan502_done1052
    goto rxscan502_scan1051
  rxscan502_loop1050:
    inc rx501_pos
    gt rx501_pos, rx501_eos, rx501_fail1046
    repr_bind_attr_int rx501_cur, rx501_curclass, "$!from", rx501_pos
  rxscan502_scan1051:
    nqp_rxmark rx501_bstack, rxscan502_loop1050, rx501_pos, 0
  rxscan502_done1052:
    rx501_cur."!cursor_pass"(rx501_pos, "outerctx", 'backtrack'=>1)
    .return (rx501_cur)
  rx501_restart1045:
    repr_get_attr_obj rx501_cstack, rx501_cur, rx501_curclass, "$!cstack"
  rx501_fail1046:
    unless rx501_bstack, rx501_done1044
    pop $I19, rx501_bstack
    if_null rx501_cstack, rx501_cstack_done1049
    unless rx501_cstack, rx501_cstack_done1049
    dec $I19
    set $P11, rx501_cstack[$I19]
  rx501_cstack_done1049:
    pop rx501_rep, rx501_bstack
    pop rx501_pos, rx501_bstack
    pop $I19, rx501_bstack
    lt rx501_pos, -1, rx501_done1044
    lt rx501_pos, 0, rx501_fail1046
    eq $I19, 0, rx501_fail1046
    nqp_islist $I20, rx501_cstack
    unless $I20, rx501_jump1047
    elements $I18, rx501_bstack
    le $I18, 0, rx501_cut1048
    dec $I18
    set $I18, rx501_bstack[$I18]
  rx501_cut1048:
    assign rx501_cstack, $I18
  rx501_jump1047:
    jump $I19
  rx501_done1044:
    rx501_cur."!cursor_fail"()
    .return (rx501_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_58_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 844
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx504_start
    .local string rx504_tgt
    .local int rx504_pos
    .local int rx504_off
    .local int rx504_eos
    .local int rx504_rep
    .local pmc rx504_cur
    .local pmc rx504_curclass
    .local pmc rx504_bstack
    .local pmc rx504_cstack
    rx504_start = self."!cursor_start_all"()
    set rx504_cur, rx504_start[0]
    set rx504_tgt, rx504_start[1]
    set rx504_pos, rx504_start[2]
    set rx504_curclass, rx504_start[3]
    set rx504_bstack, rx504_start[4]
    set $I19, rx504_start[5]
    store_lex unicode:"$\x{a2}", rx504_cur
    length rx504_eos, rx504_tgt
    eq $I19, 1, rx504_restart1056
    gt rx504_pos, rx504_eos, rx504_fail1057
    repr_get_attr_int $I11, self, rx504_curclass, "$!from"
    ne $I11, -1, rxscan505_done1063
    goto rxscan505_scan1062
  rxscan505_loop1061:
    inc rx504_pos
    gt rx504_pos, rx504_eos, rx504_fail1057
    repr_bind_attr_int rx504_cur, rx504_curclass, "$!from", rx504_pos
  rxscan505_scan1062:
    nqp_rxmark rx504_bstack, rxscan505_loop1061, rx504_pos, 0
  rxscan505_done1063:
    rx504_cur."!cursor_pass"(rx504_pos, "finishpad", 'backtrack'=>1)
    .return (rx504_cur)
  rx504_restart1056:
    repr_get_attr_obj rx504_cstack, rx504_cur, rx504_curclass, "$!cstack"
  rx504_fail1057:
    unless rx504_bstack, rx504_done1055
    pop $I19, rx504_bstack
    if_null rx504_cstack, rx504_cstack_done1060
    unless rx504_cstack, rx504_cstack_done1060
    dec $I19
    set $P11, rx504_cstack[$I19]
  rx504_cstack_done1060:
    pop rx504_rep, rx504_bstack
    pop rx504_pos, rx504_bstack
    pop $I19, rx504_bstack
    lt rx504_pos, -1, rx504_done1055
    lt rx504_pos, 0, rx504_fail1057
    eq $I19, 0, rx504_fail1057
    nqp_islist $I20, rx504_cstack
    unless $I20, rx504_jump1058
    elements $I18, rx504_bstack
    le $I18, 0, rx504_cut1059
    dec $I18
    set $I18, rx504_bstack[$I18]
  rx504_cut1059:
    assign rx504_cstack, $I18
  rx504_jump1058:
    jump $I19
  rx504_done1055:
    rx504_cur."!cursor_fail"()
    .return (rx504_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_59_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 845
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx507_start
    .local string rx507_tgt
    .local int rx507_pos
    .local int rx507_off
    .local int rx507_eos
    .local int rx507_rep
    .local pmc rx507_cur
    .local pmc rx507_curclass
    .local pmc rx507_bstack
    .local pmc rx507_cstack
    rx507_start = self."!cursor_start_all"()
    set rx507_cur, rx507_start[0]
    set rx507_tgt, rx507_start[1]
    set rx507_pos, rx507_start[2]
    set rx507_curclass, rx507_start[3]
    set rx507_bstack, rx507_start[4]
    set $I19, rx507_start[5]
    store_lex unicode:"$\x{a2}", rx507_cur
    length rx507_eos, rx507_tgt
    eq $I19, 1, rx507_restart1067
    gt rx507_pos, rx507_eos, rx507_fail1068
    repr_get_attr_int $I11, self, rx507_curclass, "$!from"
    ne $I11, -1, rxscan508_done1074
    goto rxscan508_scan1073
  rxscan508_loop1072:
    inc rx507_pos
    gt rx507_pos, rx507_eos, rx507_fail1068
    repr_bind_attr_int rx507_cur, rx507_curclass, "$!from", rx507_pos
  rxscan508_scan1073:
    nqp_rxmark rx507_bstack, rxscan508_loop1072, rx507_pos, 0
  rxscan508_done1074:
    rx507_cur."!cursor_pass"(rx507_pos, "you_are_here", 'backtrack'=>1)
    .return (rx507_cur)
  rx507_restart1067:
    repr_get_attr_obj rx507_cstack, rx507_cur, rx507_curclass, "$!cstack"
  rx507_fail1068:
    unless rx507_bstack, rx507_done1066
    pop $I19, rx507_bstack
    if_null rx507_cstack, rx507_cstack_done1071
    unless rx507_cstack, rx507_cstack_done1071
    dec $I19
    set $P11, rx507_cstack[$I19]
  rx507_cstack_done1071:
    pop rx507_rep, rx507_bstack
    pop rx507_pos, rx507_bstack
    pop $I19, rx507_bstack
    lt rx507_pos, -1, rx507_done1066
    lt rx507_pos, 0, rx507_fail1068
    eq $I19, 0, rx507_fail1068
    nqp_islist $I20, rx507_cstack
    unless $I20, rx507_jump1069
    elements $I18, rx507_bstack
    le $I18, 0, rx507_cut1070
    dec $I18
    set $I18, rx507_bstack[$I18]
  rx507_cut1070:
    assign rx507_cstack, $I18
  rx507_jump1069:
    jump $I19
  rx507_done1066:
    rx507_cur."!cursor_fail"()
    .return (rx507_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_60_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 847
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_61_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 849
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx510_start
    .local string rx510_tgt
    .local int rx510_pos
    .local int rx510_off
    .local int rx510_eos
    .local int rx510_rep
    .local pmc rx510_cur
    .local pmc rx510_curclass
    .local pmc rx510_bstack
    .local pmc rx510_cstack
    rx510_start = self."!cursor_start_all"()
    set rx510_cur, rx510_start[0]
    set rx510_tgt, rx510_start[1]
    set rx510_pos, rx510_start[2]
    set rx510_curclass, rx510_start[3]
    set rx510_bstack, rx510_start[4]
    set $I19, rx510_start[5]
    store_lex unicode:"$\x{a2}", rx510_cur
    length rx510_eos, rx510_tgt
    eq $I19, 1, rx510_restart1078
    gt rx510_pos, rx510_eos, rx510_fail1079
    repr_get_attr_int $I11, self, rx510_curclass, "$!from"
    ne $I11, -1, rxscan511_done1085
    goto rxscan511_scan1084
  rxscan511_loop1083:
    inc rx510_pos
    gt rx510_pos, rx510_eos, rx510_fail1079
    repr_bind_attr_int rx510_cur, rx510_curclass, "$!from", rx510_pos
  rxscan511_scan1084:
    nqp_rxmark rx510_bstack, rxscan511_loop1083, rx510_pos, 0
  rxscan511_done1085:
    ge rx510_pos, rx510_eos, rx510_fail1079
    substr $S11, rx510_tgt, rx510_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx510_fail1079
    rx510_cur."!cursor_pass"(rx510_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx510_cur)
  rx510_restart1078:
    repr_get_attr_obj rx510_cstack, rx510_cur, rx510_curclass, "$!cstack"
  rx510_fail1079:
    unless rx510_bstack, rx510_done1077
    pop $I19, rx510_bstack
    if_null rx510_cstack, rx510_cstack_done1082
    unless rx510_cstack, rx510_cstack_done1082
    dec $I19
    set $P11, rx510_cstack[$I19]
  rx510_cstack_done1082:
    pop rx510_rep, rx510_bstack
    pop rx510_pos, rx510_bstack
    pop $I19, rx510_bstack
    lt rx510_pos, -1, rx510_done1077
    lt rx510_pos, 0, rx510_fail1079
    eq $I19, 0, rx510_fail1079
    nqp_islist $I20, rx510_cstack
    unless $I20, rx510_jump1080
    elements $I18, rx510_bstack
    le $I18, 0, rx510_cut1081
    dec $I18
    set $I18, rx510_bstack[$I18]
  rx510_cut1081:
    assign rx510_cstack, $I18
  rx510_jump1080:
    jump $I19
  rx510_done1077:
    rx510_cur."!cursor_fail"()
    .return (rx510_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_62_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 850
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx512_start
    .local string rx512_tgt
    .local int rx512_pos
    .local int rx512_off
    .local int rx512_eos
    .local int rx512_rep
    .local pmc rx512_cur
    .local pmc rx512_curclass
    .local pmc rx512_bstack
    .local pmc rx512_cstack
    rx512_start = self."!cursor_start_all"()
    set rx512_cur, rx512_start[0]
    set rx512_tgt, rx512_start[1]
    set rx512_pos, rx512_start[2]
    set rx512_curclass, rx512_start[3]
    set rx512_bstack, rx512_start[4]
    set $I19, rx512_start[5]
    store_lex unicode:"$\x{a2}", rx512_cur
    length rx512_eos, rx512_tgt
    eq $I19, 1, rx512_restart1088
    gt rx512_pos, rx512_eos, rx512_fail1089
    repr_get_attr_int $I11, self, rx512_curclass, "$!from"
    ne $I11, -1, rxscan513_done1095
    goto rxscan513_scan1094
  rxscan513_loop1093:
    inc rx512_pos
    gt rx512_pos, rx512_eos, rx512_fail1089
    repr_bind_attr_int rx512_cur, rx512_curclass, "$!from", rx512_pos
  rxscan513_scan1094:
    nqp_rxmark rx512_bstack, rxscan513_loop1093, rx512_pos, 0
  rxscan513_done1095:
    ge rx512_pos, rx512_eos, rx512_fail1089
    substr $S11, rx512_tgt, rx512_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx512_fail1089
    rx512_cur."!cursor_pass"(rx512_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx512_cur)
  rx512_restart1088:
    repr_get_attr_obj rx512_cstack, rx512_cur, rx512_curclass, "$!cstack"
  rx512_fail1089:
    unless rx512_bstack, rx512_done1087
    pop $I19, rx512_bstack
    if_null rx512_cstack, rx512_cstack_done1092
    unless rx512_cstack, rx512_cstack_done1092
    dec $I19
    set $P11, rx512_cstack[$I19]
  rx512_cstack_done1092:
    pop rx512_rep, rx512_bstack
    pop rx512_pos, rx512_bstack
    pop $I19, rx512_bstack
    lt rx512_pos, -1, rx512_done1087
    lt rx512_pos, 0, rx512_fail1089
    eq $I19, 0, rx512_fail1089
    nqp_islist $I20, rx512_cstack
    unless $I20, rx512_jump1090
    elements $I18, rx512_bstack
    le $I18, 0, rx512_cut1091
    dec $I18
    set $I18, rx512_bstack[$I18]
  rx512_cut1091:
    assign rx512_cstack, $I18
  rx512_jump1090:
    jump $I19
  rx512_done1087:
    rx512_cur."!cursor_fail"()
    .return (rx512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_63_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 854
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_64_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 856
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx514_start
    .local string rx514_tgt
    .local int rx514_pos
    .local int rx514_off
    .local int rx514_eos
    .local int rx514_rep
    .local pmc rx514_cur
    .local pmc rx514_curclass
    .local pmc rx514_bstack
    .local pmc rx514_cstack
    rx514_start = self."!cursor_start_all"()
    set rx514_cur, rx514_start[0]
    set rx514_tgt, rx514_start[1]
    set rx514_pos, rx514_start[2]
    set rx514_curclass, rx514_start[3]
    set rx514_bstack, rx514_start[4]
    set $I19, rx514_start[5]
    store_lex unicode:"$\x{a2}", rx514_cur
    length rx514_eos, rx514_tgt
    eq $I19, 1, rx514_restart1098
    gt rx514_pos, rx514_eos, rx514_fail1099
    repr_get_attr_int $I11, self, rx514_curclass, "$!from"
    ne $I11, -1, rxscan515_done1105
    goto rxscan515_scan1104
  rxscan515_loop1103:
    inc rx514_pos
    gt rx514_pos, rx514_eos, rx514_fail1099
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!from", rx514_pos
  rxscan515_scan1104:
    nqp_rxmark rx514_bstack, rxscan515_loop1103, rx514_pos, 0
  rxscan515_done1105:
    nqp_rxmark rx514_bstack, rxcap516_fail1107, rx514_pos, 0
    add $I11, rx514_pos, 3
    gt $I11, rx514_eos, rx514_fail1099
    substr $S10, rx514_tgt, rx514_pos, 3
    ne $S10, ucs4:"use", rx514_fail1099
    add rx514_pos, 3
    nqp_rxpeek $I19, rx514_bstack, rxcap516_fail1107
    inc $I19
    set $I11, rx514_bstack[$I19]
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx514_pos)
    rx514_cstack = rx514_cur."!cursor_capture"($P11, "sym")
    goto rxcap516_done1106
  rxcap516_fail1107:
    goto rx514_fail1099
  rxcap516_done1106:
    ge rx514_pos, rx514_eos, rx514_fail1099
    is_cclass $I11, .CCLASS_WHITESPACE, rx514_tgt, rx514_pos
    unless $I11, rx514_fail1099
    add rx514_pos, 1
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."ws"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
    goto rxsubrule517_pass1108
  rxsubrule517_back1109:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
  rxsubrule517_pass1108:
    rx514_cstack = rx514_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule517_back1109
    push rx514_bstack, $I11
    push rx514_bstack, 0
    push rx514_bstack, rx514_pos
    elements $I11, rx514_cstack
    push rx514_bstack, $I11
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."name"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
    goto rxsubrule518_pass1110
  rxsubrule518_back1111:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
  rxsubrule518_pass1110:
    rx514_cstack = rx514_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule518_back1111
    push rx514_bstack, $I11
    push rx514_bstack, 0
    push rx514_bstack, rx514_pos
    elements $I11, rx514_cstack
    push rx514_bstack, $I11
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."ws"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
    goto rxsubrule519_pass1112
  rxsubrule519_back1113:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1099
  rxsubrule519_pass1112:
    rx514_cstack = rx514_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule519_back1113
    push rx514_bstack, $I11
    push rx514_bstack, 0
    push rx514_bstack, rx514_pos
    elements $I11, rx514_cstack
    push rx514_bstack, $I11
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    rx514_cur."!cursor_pass"(rx514_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx514_cur)
  rx514_restart1098:
    repr_get_attr_obj rx514_cstack, rx514_cur, rx514_curclass, "$!cstack"
  rx514_fail1099:
    unless rx514_bstack, rx514_done1097
    pop $I19, rx514_bstack
    if_null rx514_cstack, rx514_cstack_done1102
    unless rx514_cstack, rx514_cstack_done1102
    dec $I19
    set $P11, rx514_cstack[$I19]
  rx514_cstack_done1102:
    pop rx514_rep, rx514_bstack
    pop rx514_pos, rx514_bstack
    pop $I19, rx514_bstack
    lt rx514_pos, -1, rx514_done1097
    lt rx514_pos, 0, rx514_fail1099
    eq $I19, 0, rx514_fail1099
    nqp_islist $I20, rx514_cstack
    unless $I20, rx514_jump1100
    elements $I18, rx514_bstack
    le $I18, 0, rx514_cut1101
    dec $I18
    set $I18, rx514_bstack[$I18]
  rx514_cut1101:
    assign rx514_cstack, $I18
  rx514_jump1100:
    jump $I19
  rx514_done1097:
    rx514_cur."!cursor_fail"()
    .return (rx514_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_65_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 860
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx520_start
    .local string rx520_tgt
    .local int rx520_pos
    .local int rx520_off
    .local int rx520_eos
    .local int rx520_rep
    .local pmc rx520_cur
    .local pmc rx520_curclass
    .local pmc rx520_bstack
    .local pmc rx520_cstack
    rx520_start = self."!cursor_start_all"()
    set rx520_cur, rx520_start[0]
    set rx520_tgt, rx520_start[1]
    set rx520_pos, rx520_start[2]
    set rx520_curclass, rx520_start[3]
    set rx520_bstack, rx520_start[4]
    set $I19, rx520_start[5]
    store_lex unicode:"$\x{a2}", rx520_cur
    length rx520_eos, rx520_tgt
    eq $I19, 1, rx520_restart1116
    gt rx520_pos, rx520_eos, rx520_fail1117
    repr_get_attr_int $I11, self, rx520_curclass, "$!from"
    ne $I11, -1, rxscan521_done1123
    goto rxscan521_scan1122
  rxscan521_loop1121:
    inc rx520_pos
    gt rx520_pos, rx520_eos, rx520_fail1117
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!from", rx520_pos
  rxscan521_scan1122:
    nqp_rxmark rx520_bstack, rxscan521_loop1121, rx520_pos, 0
  rxscan521_done1123:
    nqp_rxmark rx520_bstack, rxcap522_fail1125, rx520_pos, 0
    add $I11, rx520_pos, 2
    gt $I11, rx520_eos, rx520_fail1117
    substr $S10, rx520_tgt, rx520_pos, 2
    ne $S10, ucs4:"if", rx520_fail1117
    add rx520_pos, 2
    nqp_rxpeek $I19, rx520_bstack, rxcap522_fail1125
    inc $I19
    set $I11, rx520_bstack[$I19]
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx520_pos)
    rx520_cstack = rx520_cur."!cursor_capture"($P11, "sym")
    goto rxcap522_done1124
  rxcap522_fail1125:
    goto rx520_fail1117
  rxcap522_done1124:
    ge rx520_pos, rx520_eos, rx520_fail1117
    is_cclass $I11, .CCLASS_WHITESPACE, rx520_tgt, rx520_pos
    unless $I11, rx520_fail1117
    add rx520_pos, 1
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule523_pass1126
  rxsubrule523_back1127:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule523_pass1126:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule523_back1127
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule524_pass1128
  rxsubrule524_back1129:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule524_pass1128:
    rx520_cstack = rx520_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule524_back1129
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule525_pass1130
  rxsubrule525_back1131:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule525_pass1130:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule525_back1131
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    nqp_rxmark rx520_bstack, rxquantg526_done1133, rx520_pos, 0
  rxquantg526_loop1132:
    add $I11, rx520_pos, 5
    gt $I11, rx520_eos, rx520_fail1117
    substr $S10, rx520_tgt, rx520_pos, 5
    ne $S10, ucs4:"elsif", rx520_fail1117
    add rx520_pos, 5
    ge rx520_pos, rx520_eos, rx520_fail1117
    is_cclass $I11, .CCLASS_WHITESPACE, rx520_tgt, rx520_pos
    unless $I11, rx520_fail1117
    add rx520_pos, 1
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule527_pass1134
  rxsubrule527_back1135:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule527_pass1134:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule527_back1135
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule528_pass1136
  rxsubrule528_back1137:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule528_pass1136:
    rx520_cstack = rx520_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule528_back1137
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule529_pass1138
  rxsubrule529_back1139:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule529_pass1138:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule529_back1139
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    nqp_rxmark rx520_bstack, rxquantg526_done1133, rx520_pos, rx520_rep
    goto rxquantg526_loop1132
  rxquantg526_done1133:
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule530_pass1140
  rxsubrule530_back1141:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule530_pass1140:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule530_back1141
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    nqp_rxmark rx520_bstack, rxquantg531_done1143, rx520_pos, 0
  rxquantg531_loop1142:
    add $I11, rx520_pos, 4
    gt $I11, rx520_eos, rx520_fail1117
    substr $S10, rx520_tgt, rx520_pos, 4
    ne $S10, ucs4:"else", rx520_fail1117
    add rx520_pos, 4
    ge rx520_pos, rx520_eos, rx520_fail1117
    is_cclass $I11, .CCLASS_WHITESPACE, rx520_tgt, rx520_pos
    unless $I11, rx520_fail1117
    add rx520_pos, 1
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule532_pass1144
  rxsubrule532_back1145:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule532_pass1144:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule532_back1145
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule533_pass1146
  rxsubrule533_back1147:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule533_pass1146:
    rx520_cstack = rx520_cur."!cursor_capture"($P11, "else")
    set_addr $I11, rxsubrule533_back1147
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule534_pass1148
  rxsubrule534_back1149:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule534_pass1148:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule534_back1149
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
  rxquantg531_done1143:
    repr_bind_attr_int rx520_cur, rx520_curclass, "$!pos", rx520_pos
    $P11 = rx520_cur."ws"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
    goto rxsubrule535_pass1150
  rxsubrule535_back1151:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx520_curclass, "$!pos"
    lt $I11, 0, rx520_fail1117
  rxsubrule535_pass1150:
    rx520_cstack = rx520_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule535_back1151
    push rx520_bstack, $I11
    push rx520_bstack, 0
    push rx520_bstack, rx520_pos
    elements $I11, rx520_cstack
    push rx520_bstack, $I11
    repr_get_attr_int rx520_pos, $P11, rx520_curclass, "$!pos"
    rx520_cur."!cursor_pass"(rx520_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx520_cur)
  rx520_restart1116:
    repr_get_attr_obj rx520_cstack, rx520_cur, rx520_curclass, "$!cstack"
  rx520_fail1117:
    unless rx520_bstack, rx520_done1115
    pop $I19, rx520_bstack
    if_null rx520_cstack, rx520_cstack_done1120
    unless rx520_cstack, rx520_cstack_done1120
    dec $I19
    set $P11, rx520_cstack[$I19]
  rx520_cstack_done1120:
    pop rx520_rep, rx520_bstack
    pop rx520_pos, rx520_bstack
    pop $I19, rx520_bstack
    lt rx520_pos, -1, rx520_done1115
    lt rx520_pos, 0, rx520_fail1117
    eq $I19, 0, rx520_fail1117
    nqp_islist $I20, rx520_cstack
    unless $I20, rx520_jump1118
    elements $I18, rx520_bstack
    le $I18, 0, rx520_cut1119
    dec $I18
    set $I18, rx520_bstack[$I18]
  rx520_cut1119:
    assign rx520_cstack, $I18
  rx520_jump1118:
    jump $I19
  rx520_done1115:
    rx520_cur."!cursor_fail"()
    .return (rx520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_66_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 867
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_67_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx536_start
    .local string rx536_tgt
    .local int rx536_pos
    .local int rx536_off
    .local int rx536_eos
    .local int rx536_rep
    .local pmc rx536_cur
    .local pmc rx536_curclass
    .local pmc rx536_bstack
    .local pmc rx536_cstack
    rx536_start = self."!cursor_start_all"()
    set rx536_cur, rx536_start[0]
    set rx536_tgt, rx536_start[1]
    set rx536_pos, rx536_start[2]
    set rx536_curclass, rx536_start[3]
    set rx536_bstack, rx536_start[4]
    set $I19, rx536_start[5]
    store_lex unicode:"$\x{a2}", rx536_cur
    length rx536_eos, rx536_tgt
    eq $I19, 1, rx536_restart1154
    gt rx536_pos, rx536_eos, rx536_fail1155
    repr_get_attr_int $I11, self, rx536_curclass, "$!from"
    ne $I11, -1, rxscan537_done1161
    goto rxscan537_scan1160
  rxscan537_loop1159:
    inc rx536_pos
    gt rx536_pos, rx536_eos, rx536_fail1155
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!from", rx536_pos
  rxscan537_scan1160:
    nqp_rxmark rx536_bstack, rxscan537_loop1159, rx536_pos, 0
  rxscan537_done1161:
    nqp_rxmark rx536_bstack, rxcap538_fail1163, rx536_pos, 0
    add $I11, rx536_pos, 6
    gt $I11, rx536_eos, rx536_fail1155
    substr $S10, rx536_tgt, rx536_pos, 6
    ne $S10, ucs4:"unless", rx536_fail1155
    add rx536_pos, 6
    nqp_rxpeek $I19, rx536_bstack, rxcap538_fail1163
    inc $I19
    set $I11, rx536_bstack[$I19]
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx536_pos)
    rx536_cstack = rx536_cur."!cursor_capture"($P11, "sym")
    goto rxcap538_done1162
  rxcap538_fail1163:
    goto rx536_fail1155
  rxcap538_done1162:
    ge rx536_pos, rx536_eos, rx536_fail1155
    is_cclass $I11, .CCLASS_WHITESPACE, rx536_tgt, rx536_pos
    unless $I11, rx536_fail1155
    add rx536_pos, 1
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule539_pass1164
  rxsubrule539_back1165:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule539_pass1164:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule539_back1165
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule540_pass1166
  rxsubrule540_back1167:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule540_pass1166:
    rx536_cstack = rx536_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule540_back1167
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule541_pass1168
  rxsubrule541_back1169:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule541_pass1168:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule541_back1169
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
  alt542_01171:
    nqp_rxmark rx536_bstack, alt542_11184, rx536_pos, 0
    .const 'Sub' $P5001 = 'cuid_67_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    ge $I11, 0, rx536_fail1155
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule545_pass1182
  rxsubrule545_back1183:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule545_pass1182:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule545_back1183
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    goto alt542_end1170
  alt542_11184:
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule546_pass1185
  rxsubrule546_back1186:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule546_pass1185:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule546_back1186
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule547_pass1187
  rxsubrule547_back1188:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule547_pass1187:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule547_back1188
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
  alt542_end1170:
    repr_bind_attr_int rx536_cur, rx536_curclass, "$!pos", rx536_pos
    $P11 = rx536_cur."ws"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
    goto rxsubrule548_pass1189
  rxsubrule548_back1190:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx536_curclass, "$!pos"
    lt $I11, 0, rx536_fail1155
  rxsubrule548_pass1189:
    rx536_cstack = rx536_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule548_back1190
    push rx536_bstack, $I11
    push rx536_bstack, 0
    push rx536_bstack, rx536_pos
    elements $I11, rx536_cstack
    push rx536_bstack, $I11
    repr_get_attr_int rx536_pos, $P11, rx536_curclass, "$!pos"
    rx536_cur."!cursor_pass"(rx536_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx536_cur)
  rx536_restart1154:
    repr_get_attr_obj rx536_cstack, rx536_cur, rx536_curclass, "$!cstack"
  rx536_fail1155:
    unless rx536_bstack, rx536_done1153
    pop $I19, rx536_bstack
    if_null rx536_cstack, rx536_cstack_done1158
    unless rx536_cstack, rx536_cstack_done1158
    dec $I19
    set $P11, rx536_cstack[$I19]
  rx536_cstack_done1158:
    pop rx536_rep, rx536_bstack
    pop rx536_pos, rx536_bstack
    pop $I19, rx536_bstack
    lt rx536_pos, -1, rx536_done1153
    lt rx536_pos, 0, rx536_fail1155
    eq $I19, 0, rx536_fail1155
    nqp_islist $I20, rx536_cstack
    unless $I20, rx536_jump1156
    elements $I18, rx536_bstack
    le $I18, 0, rx536_cut1157
    dec $I18
    set $I18, rx536_bstack[$I18]
  rx536_cut1157:
    assign rx536_cstack, $I18
  rx536_jump1156:
    jump $I19
  rx536_done1153:
    rx536_cur."!cursor_fail"()
    .return (rx536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_67_1382484127.52628") :anon :lex :outer("cuid_66_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx543_start
    .local string rx543_tgt
    .local int rx543_pos
    .local int rx543_off
    .local int rx543_eos
    .local int rx543_rep
    .local pmc rx543_cur
    .local pmc rx543_curclass
    .local pmc rx543_bstack
    .local pmc rx543_cstack
    rx543_start = self."!cursor_start_all"()
    set rx543_cur, rx543_start[0]
    set rx543_tgt, rx543_start[1]
    set rx543_pos, rx543_start[2]
    set rx543_curclass, rx543_start[3]
    set rx543_bstack, rx543_start[4]
    set $I19, rx543_start[5]
    store_lex unicode:"$\x{a2}", rx543_cur
    length rx543_eos, rx543_tgt
    eq $I19, 1, rx543_restart1174
    gt rx543_pos, rx543_eos, rx543_fail1175
    repr_get_attr_int $I11, self, rx543_curclass, "$!from"
    ne $I11, -1, rxscan544_done1181
    goto rxscan544_scan1180
  rxscan544_loop1179:
    inc rx543_pos
    index rx543_pos, rx543_tgt, ucs4:"else", rx543_pos
    eq rx543_pos, -1, rx543_fail1175
    gt rx543_pos, rx543_eos, rx543_fail1175
    repr_bind_attr_int rx543_cur, rx543_curclass, "$!from", rx543_pos
  rxscan544_scan1180:
    nqp_rxmark rx543_bstack, rxscan544_loop1179, rx543_pos, 0
  rxscan544_done1181:
    add $I11, rx543_pos, 4
    gt $I11, rx543_eos, rx543_fail1175
    substr $S10, rx543_tgt, rx543_pos, 4
    ne $S10, ucs4:"else", rx543_fail1175
    add rx543_pos, 4
    rx543_cur."!cursor_pass"(rx543_pos, 'backtrack'=>1)
    .return (rx543_cur)
  rx543_restart1174:
    repr_get_attr_obj rx543_cstack, rx543_cur, rx543_curclass, "$!cstack"
  rx543_fail1175:
    unless rx543_bstack, rx543_done1173
    pop $I19, rx543_bstack
    if_null rx543_cstack, rx543_cstack_done1178
    unless rx543_cstack, rx543_cstack_done1178
    dec $I19
    set $P11, rx543_cstack[$I19]
  rx543_cstack_done1178:
    pop rx543_rep, rx543_bstack
    pop rx543_pos, rx543_bstack
    pop $I19, rx543_bstack
    lt rx543_pos, -1, rx543_done1173
    lt rx543_pos, 0, rx543_fail1175
    eq $I19, 0, rx543_fail1175
    nqp_islist $I20, rx543_cstack
    unless $I20, rx543_jump1176
    elements $I18, rx543_bstack
    le $I18, 0, rx543_cut1177
    dec $I18
    set $I18, rx543_bstack[$I18]
  rx543_cut1177:
    assign rx543_cstack, $I18
  rx543_jump1176:
    jump $I19
  rx543_done1173:
    rx543_cur."!cursor_fail"()
    .return (rx543_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_68_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 873
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx549_start
    .local string rx549_tgt
    .local int rx549_pos
    .local int rx549_off
    .local int rx549_eos
    .local int rx549_rep
    .local pmc rx549_cur
    .local pmc rx549_curclass
    .local pmc rx549_bstack
    .local pmc rx549_cstack
    rx549_start = self."!cursor_start_all"()
    set rx549_cur, rx549_start[0]
    set rx549_tgt, rx549_start[1]
    set rx549_pos, rx549_start[2]
    set rx549_curclass, rx549_start[3]
    set rx549_bstack, rx549_start[4]
    set $I19, rx549_start[5]
    store_lex unicode:"$\x{a2}", rx549_cur
    length rx549_eos, rx549_tgt
    eq $I19, 1, rx549_restart1193
    gt rx549_pos, rx549_eos, rx549_fail1194
    repr_get_attr_int $I11, self, rx549_curclass, "$!from"
    ne $I11, -1, rxscan550_done1200
    goto rxscan550_scan1199
  rxscan550_loop1198:
    inc rx549_pos
    gt rx549_pos, rx549_eos, rx549_fail1194
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!from", rx549_pos
  rxscan550_scan1199:
    nqp_rxmark rx549_bstack, rxscan550_loop1198, rx549_pos, 0
  rxscan550_done1200:
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    store_lex unicode:"$\x{a2}", rx549_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx549_bstack, rxcap551_fail1202, rx549_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt552_01204
    nqp_push_label $P11, alt552_11205
    nqp_rxmark rx549_bstack, alt552_end1203, -1, 0
    rx549_cur."!alt"(rx549_pos, "alt_nfa__12_1382484130.01494", $P11)
    goto rx549_fail1194
  alt552_01204:
    add $I11, rx549_pos, 5
    gt $I11, rx549_eos, rx549_fail1194
    substr $S10, rx549_tgt, rx549_pos, 5
    ne $S10, ucs4:"while", rx549_fail1194
    add rx549_pos, 5
    goto alt552_end1203
  alt552_11205:
    add $I11, rx549_pos, 5
    gt $I11, rx549_eos, rx549_fail1194
    substr $S10, rx549_tgt, rx549_pos, 5
    ne $S10, ucs4:"until", rx549_fail1194
    add rx549_pos, 5
    goto alt552_end1203
  alt552_end1203:
    nqp_rxcommit rx549_bstack, alt552_end1203
    nqp_rxpeek $I19, rx549_bstack, rxcap551_fail1202
    inc $I19
    set $I11, rx549_bstack[$I19]
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx549_pos)
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "sym")
    goto rxcap551_done1201
  rxcap551_fail1202:
    goto rx549_fail1194
  rxcap551_done1201:
    ge rx549_pos, rx549_eos, rx549_fail1194
    is_cclass $I11, .CCLASS_WHITESPACE, rx549_tgt, rx549_pos
    unless $I11, rx549_fail1194
    add rx549_pos, 1
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
    goto rxsubrule553_pass1206
  rxsubrule553_back1207:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
  rxsubrule553_pass1206:
    rx549_cstack = rx549_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule553_back1207
    push rx549_bstack, $I11
    push rx549_bstack, 0
    push rx549_bstack, rx549_pos
    elements $I11, rx549_cstack
    push rx549_bstack, $I11
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
    goto rxsubrule554_pass1208
  rxsubrule554_back1209:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
  rxsubrule554_pass1208:
    rx549_cstack = rx549_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule554_back1209
    push rx549_bstack, $I11
    push rx549_bstack, 0
    push rx549_bstack, rx549_pos
    elements $I11, rx549_cstack
    push rx549_bstack, $I11
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    repr_bind_attr_int rx549_cur, rx549_curclass, "$!pos", rx549_pos
    $P11 = rx549_cur."ws"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
    goto rxsubrule555_pass1210
  rxsubrule555_back1211:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx549_curclass, "$!pos"
    lt $I11, 0, rx549_fail1194
  rxsubrule555_pass1210:
    rx549_cstack = rx549_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule555_back1211
    push rx549_bstack, $I11
    push rx549_bstack, 0
    push rx549_bstack, rx549_pos
    elements $I11, rx549_cstack
    push rx549_bstack, $I11
    repr_get_attr_int rx549_pos, $P11, rx549_curclass, "$!pos"
    rx549_cur."!cursor_pass"(rx549_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx549_cur)
  rx549_restart1193:
    repr_get_attr_obj rx549_cstack, rx549_cur, rx549_curclass, "$!cstack"
  rx549_fail1194:
    unless rx549_bstack, rx549_done1192
    pop $I19, rx549_bstack
    if_null rx549_cstack, rx549_cstack_done1197
    unless rx549_cstack, rx549_cstack_done1197
    dec $I19
    set $P11, rx549_cstack[$I19]
  rx549_cstack_done1197:
    pop rx549_rep, rx549_bstack
    pop rx549_pos, rx549_bstack
    pop $I19, rx549_bstack
    lt rx549_pos, -1, rx549_done1192
    lt rx549_pos, 0, rx549_fail1194
    eq $I19, 0, rx549_fail1194
    nqp_islist $I20, rx549_cstack
    unless $I20, rx549_jump1195
    elements $I18, rx549_bstack
    le $I18, 0, rx549_cut1196
    dec $I18
    set $I18, rx549_bstack[$I18]
  rx549_cut1196:
    assign rx549_cstack, $I18
  rx549_jump1195:
    jump $I19
  rx549_done1192:
    rx549_cur."!cursor_fail"()
    .return (rx549_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_69_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 879
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx556_start
    .local string rx556_tgt
    .local int rx556_pos
    .local int rx556_off
    .local int rx556_eos
    .local int rx556_rep
    .local pmc rx556_cur
    .local pmc rx556_curclass
    .local pmc rx556_bstack
    .local pmc rx556_cstack
    rx556_start = self."!cursor_start_all"()
    set rx556_cur, rx556_start[0]
    set rx556_tgt, rx556_start[1]
    set rx556_pos, rx556_start[2]
    set rx556_curclass, rx556_start[3]
    set rx556_bstack, rx556_start[4]
    set $I19, rx556_start[5]
    store_lex unicode:"$\x{a2}", rx556_cur
    length rx556_eos, rx556_tgt
    eq $I19, 1, rx556_restart1214
    gt rx556_pos, rx556_eos, rx556_fail1215
    repr_get_attr_int $I11, self, rx556_curclass, "$!from"
    ne $I11, -1, rxscan557_done1221
    goto rxscan557_scan1220
  rxscan557_loop1219:
    inc rx556_pos
    gt rx556_pos, rx556_eos, rx556_fail1215
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!from", rx556_pos
  rxscan557_scan1220:
    nqp_rxmark rx556_bstack, rxscan557_loop1219, rx556_pos, 0
  rxscan557_done1221:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    store_lex unicode:"$\x{a2}", rx556_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx556_bstack, rxcap558_fail1223, rx556_pos, 0
    add $I11, rx556_pos, 6
    gt $I11, rx556_eos, rx556_fail1215
    substr $S10, rx556_tgt, rx556_pos, 6
    ne $S10, ucs4:"repeat", rx556_fail1215
    add rx556_pos, 6
    nqp_rxpeek $I19, rx556_bstack, rxcap558_fail1223
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "sym")
    goto rxcap558_done1222
  rxcap558_fail1223:
    goto rx556_fail1215
  rxcap558_done1222:
    ge rx556_pos, rx556_eos, rx556_fail1215
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1215
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule559_pass1224
  rxsubrule559_back1225:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule559_pass1224:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule559_back1225
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt560_01227
    nqp_push_label $P11, alt560_11239
    nqp_rxmark rx556_bstack, alt560_end1226, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__15_1382484130.04991", $P11)
    goto rx556_fail1215
  alt560_01227:
    nqp_rxmark rx556_bstack, rxcap561_fail1229, rx556_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt562_01231
    nqp_push_label $P11, alt562_11232
    nqp_rxmark rx556_bstack, alt562_end1230, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__13_1382484130.0484", $P11)
    goto rx556_fail1215
  alt562_01231:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1215
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"while", rx556_fail1215
    add rx556_pos, 5
    goto alt562_end1230
  alt562_11232:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1215
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"until", rx556_fail1215
    add rx556_pos, 5
    goto alt562_end1230
  alt562_end1230:
    nqp_rxcommit rx556_bstack, alt562_end1230
    nqp_rxpeek $I19, rx556_bstack, rxcap561_fail1229
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "wu")
    goto rxcap561_done1228
  rxcap561_fail1229:
    goto rx556_fail1215
  rxcap561_done1228:
    ge rx556_pos, rx556_eos, rx556_fail1215
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1215
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule563_pass1233
  rxsubrule563_back1234:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule563_pass1233:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule563_back1234
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule564_pass1235
  rxsubrule564_back1236:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule564_pass1235:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule564_back1236
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule565_pass1237
  rxsubrule565_back1238:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule565_pass1237:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule565_back1238
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    goto alt560_end1226
  alt560_11239:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule566_pass1240
  rxsubrule566_back1241:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule566_pass1240:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "pblock")
    set_addr $I11, rxsubrule566_back1241
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule567_pass1242
  rxsubrule567_back1243:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule567_pass1242:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule567_back1243
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    nqp_rxmark rx556_bstack, rxcap568_fail1245, rx556_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt569_01247
    nqp_push_label $P11, alt569_11248
    nqp_rxmark rx556_bstack, alt569_end1246, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__14_1382484130.04922", $P11)
    goto rx556_fail1215
  alt569_01247:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1215
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"while", rx556_fail1215
    add rx556_pos, 5
    goto alt569_end1246
  alt569_11248:
    add $I11, rx556_pos, 5
    gt $I11, rx556_eos, rx556_fail1215
    substr $S10, rx556_tgt, rx556_pos, 5
    ne $S10, ucs4:"until", rx556_fail1215
    add rx556_pos, 5
    goto alt569_end1246
  alt569_end1246:
    nqp_rxcommit rx556_bstack, alt569_end1246
    nqp_rxpeek $I19, rx556_bstack, rxcap568_fail1245
    inc $I19
    set $I11, rx556_bstack[$I19]
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx556_pos)
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "wu")
    goto rxcap568_done1244
  rxcap568_fail1245:
    goto rx556_fail1215
  rxcap568_done1244:
    ge rx556_pos, rx556_eos, rx556_fail1215
    is_cclass $I11, .CCLASS_WHITESPACE, rx556_tgt, rx556_pos
    unless $I11, rx556_fail1215
    add rx556_pos, 1
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule570_pass1249
  rxsubrule570_back1250:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule570_pass1249:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule570_back1250
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule571_pass1251
  rxsubrule571_back1252:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule571_pass1251:
    rx556_cstack = rx556_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule571_back1252
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule572_pass1253
  rxsubrule572_back1254:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule572_pass1253:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule572_back1254
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    goto alt560_end1226
  alt560_end1226:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ws"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
    goto rxsubrule573_pass1255
  rxsubrule573_back1256:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail1215
  rxsubrule573_pass1255:
    rx556_cstack = rx556_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule573_back1256
    push rx556_bstack, $I11
    push rx556_bstack, 0
    push rx556_bstack, rx556_pos
    elements $I11, rx556_cstack
    push rx556_bstack, $I11
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    rx556_cur."!cursor_pass"(rx556_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx556_cur)
  rx556_restart1214:
    repr_get_attr_obj rx556_cstack, rx556_cur, rx556_curclass, "$!cstack"
  rx556_fail1215:
    unless rx556_bstack, rx556_done1213
    pop $I19, rx556_bstack
    if_null rx556_cstack, rx556_cstack_done1218
    unless rx556_cstack, rx556_cstack_done1218
    dec $I19
    set $P11, rx556_cstack[$I19]
  rx556_cstack_done1218:
    pop rx556_rep, rx556_bstack
    pop rx556_pos, rx556_bstack
    pop $I19, rx556_bstack
    lt rx556_pos, -1, rx556_done1213
    lt rx556_pos, 0, rx556_fail1215
    eq $I19, 0, rx556_fail1215
    nqp_islist $I20, rx556_cstack
    unless $I20, rx556_jump1216
    elements $I18, rx556_bstack
    le $I18, 0, rx556_cut1217
    dec $I18
    set $I18, rx556_bstack[$I18]
  rx556_cut1217:
    assign rx556_cstack, $I18
  rx556_jump1216:
    jump $I19
  rx556_done1213:
    rx556_cur."!cursor_fail"()
    .return (rx556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_70_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 888
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx574_start
    .local string rx574_tgt
    .local int rx574_pos
    .local int rx574_off
    .local int rx574_eos
    .local int rx574_rep
    .local pmc rx574_cur
    .local pmc rx574_curclass
    .local pmc rx574_bstack
    .local pmc rx574_cstack
    rx574_start = self."!cursor_start_all"()
    set rx574_cur, rx574_start[0]
    set rx574_tgt, rx574_start[1]
    set rx574_pos, rx574_start[2]
    set rx574_curclass, rx574_start[3]
    set rx574_bstack, rx574_start[4]
    set $I19, rx574_start[5]
    store_lex unicode:"$\x{a2}", rx574_cur
    length rx574_eos, rx574_tgt
    eq $I19, 1, rx574_restart1259
    gt rx574_pos, rx574_eos, rx574_fail1260
    repr_get_attr_int $I11, self, rx574_curclass, "$!from"
    ne $I11, -1, rxscan575_done1266
    goto rxscan575_scan1265
  rxscan575_loop1264:
    inc rx574_pos
    gt rx574_pos, rx574_eos, rx574_fail1260
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!from", rx574_pos
  rxscan575_scan1265:
    nqp_rxmark rx574_bstack, rxscan575_loop1264, rx574_pos, 0
  rxscan575_done1266:
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    store_lex unicode:"$\x{a2}", rx574_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx574_bstack, rxcap576_fail1268, rx574_pos, 0
    add $I11, rx574_pos, 3
    gt $I11, rx574_eos, rx574_fail1260
    substr $S10, rx574_tgt, rx574_pos, 3
    ne $S10, ucs4:"for", rx574_fail1260
    add rx574_pos, 3
    nqp_rxpeek $I19, rx574_bstack, rxcap576_fail1268
    inc $I19
    set $I11, rx574_bstack[$I19]
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx574_pos)
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "sym")
    goto rxcap576_done1267
  rxcap576_fail1268:
    goto rx574_fail1260
  rxcap576_done1267:
    ge rx574_pos, rx574_eos, rx574_fail1260
    is_cclass $I11, .CCLASS_WHITESPACE, rx574_tgt, rx574_pos
    unless $I11, rx574_fail1260
    add rx574_pos, 1
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
    goto rxsubrule577_pass1269
  rxsubrule577_back1270:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
  rxsubrule577_pass1269:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule577_back1270
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
    goto rxsubrule578_pass1271
  rxsubrule578_back1272:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
  rxsubrule578_pass1271:
    rx574_cstack = rx574_cur."!cursor_capture"($P11, "xblock")
    set_addr $I11, rxsubrule578_back1272
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    repr_bind_attr_int rx574_cur, rx574_curclass, "$!pos", rx574_pos
    $P11 = rx574_cur."ws"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
    goto rxsubrule579_pass1273
  rxsubrule579_back1274:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx574_curclass, "$!pos"
    lt $I11, 0, rx574_fail1260
  rxsubrule579_pass1273:
    rx574_cstack = rx574_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule579_back1274
    push rx574_bstack, $I11
    push rx574_bstack, 0
    push rx574_bstack, rx574_pos
    elements $I11, rx574_cstack
    push rx574_bstack, $I11
    repr_get_attr_int rx574_pos, $P11, rx574_curclass, "$!pos"
    rx574_cur."!cursor_pass"(rx574_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx574_cur)
  rx574_restart1259:
    repr_get_attr_obj rx574_cstack, rx574_cur, rx574_curclass, "$!cstack"
  rx574_fail1260:
    unless rx574_bstack, rx574_done1258
    pop $I19, rx574_bstack
    if_null rx574_cstack, rx574_cstack_done1263
    unless rx574_cstack, rx574_cstack_done1263
    dec $I19
    set $P11, rx574_cstack[$I19]
  rx574_cstack_done1263:
    pop rx574_rep, rx574_bstack
    pop rx574_pos, rx574_bstack
    pop $I19, rx574_bstack
    lt rx574_pos, -1, rx574_done1258
    lt rx574_pos, 0, rx574_fail1260
    eq $I19, 0, rx574_fail1260
    nqp_islist $I20, rx574_cstack
    unless $I20, rx574_jump1261
    elements $I18, rx574_bstack
    le $I18, 0, rx574_cut1262
    dec $I18
    set $I18, rx574_bstack[$I18]
  rx574_cut1262:
    assign rx574_cstack, $I18
  rx574_jump1261:
    jump $I19
  rx574_done1258:
    rx574_cur."!cursor_fail"()
    .return (rx574_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_71_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 894
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx580_start
    .local string rx580_tgt
    .local int rx580_pos
    .local int rx580_off
    .local int rx580_eos
    .local int rx580_rep
    .local pmc rx580_cur
    .local pmc rx580_curclass
    .local pmc rx580_bstack
    .local pmc rx580_cstack
    rx580_start = self."!cursor_start_all"()
    set rx580_cur, rx580_start[0]
    set rx580_tgt, rx580_start[1]
    set rx580_pos, rx580_start[2]
    set rx580_curclass, rx580_start[3]
    set rx580_bstack, rx580_start[4]
    set $I19, rx580_start[5]
    store_lex unicode:"$\x{a2}", rx580_cur
    length rx580_eos, rx580_tgt
    eq $I19, 1, rx580_restart1277
    gt rx580_pos, rx580_eos, rx580_fail1278
    repr_get_attr_int $I11, self, rx580_curclass, "$!from"
    ne $I11, -1, rxscan581_done1284
    goto rxscan581_scan1283
  rxscan581_loop1282:
    inc rx580_pos
    gt rx580_pos, rx580_eos, rx580_fail1278
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!from", rx580_pos
  rxscan581_scan1283:
    nqp_rxmark rx580_bstack, rxscan581_loop1282, rx580_pos, 0
  rxscan581_done1284:
    nqp_rxmark rx580_bstack, rxcap582_fail1286, rx580_pos, 0
    add $I11, rx580_pos, 5
    gt $I11, rx580_eos, rx580_fail1278
    substr $S10, rx580_tgt, rx580_pos, 5
    ne $S10, ucs4:"CATCH", rx580_fail1278
    add rx580_pos, 5
    nqp_rxpeek $I19, rx580_bstack, rxcap582_fail1286
    inc $I19
    set $I11, rx580_bstack[$I19]
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx580_pos)
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "sym")
    goto rxcap582_done1285
  rxcap582_fail1286:
    goto rx580_fail1278
  rxcap582_done1285:
    ge rx580_pos, rx580_eos, rx580_fail1278
    is_cclass $I11, .CCLASS_WHITESPACE, rx580_tgt, rx580_pos
    unless $I11, rx580_fail1278
    add rx580_pos, 1
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."ws"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
    goto rxsubrule583_pass1287
  rxsubrule583_back1288:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
  rxsubrule583_pass1287:
    rx580_cstack = rx580_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule583_back1288
    push rx580_bstack, $I11
    push rx580_bstack, 0
    push rx580_bstack, rx580_pos
    elements $I11, rx580_cstack
    push rx580_bstack, $I11
    repr_get_attr_int rx580_pos, $P11, rx580_curclass, "$!pos"
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."block"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
    goto rxsubrule584_pass1289
  rxsubrule584_back1290:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
  rxsubrule584_pass1289:
    rx580_cstack = rx580_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule584_back1290
    push rx580_bstack, $I11
    push rx580_bstack, 0
    push rx580_bstack, rx580_pos
    elements $I11, rx580_cstack
    push rx580_bstack, $I11
    repr_get_attr_int rx580_pos, $P11, rx580_curclass, "$!pos"
    repr_bind_attr_int rx580_cur, rx580_curclass, "$!pos", rx580_pos
    $P11 = rx580_cur."ws"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
    goto rxsubrule585_pass1291
  rxsubrule585_back1292:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx580_curclass, "$!pos"
    lt $I11, 0, rx580_fail1278
  rxsubrule585_pass1291:
    rx580_cstack = rx580_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule585_back1292
    push rx580_bstack, $I11
    push rx580_bstack, 0
    push rx580_bstack, rx580_pos
    elements $I11, rx580_cstack
    push rx580_bstack, $I11
    repr_get_attr_int rx580_pos, $P11, rx580_curclass, "$!pos"
    rx580_cur."!cursor_pass"(rx580_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx580_cur)
  rx580_restart1277:
    repr_get_attr_obj rx580_cstack, rx580_cur, rx580_curclass, "$!cstack"
  rx580_fail1278:
    unless rx580_bstack, rx580_done1276
    pop $I19, rx580_bstack
    if_null rx580_cstack, rx580_cstack_done1281
    unless rx580_cstack, rx580_cstack_done1281
    dec $I19
    set $P11, rx580_cstack[$I19]
  rx580_cstack_done1281:
    pop rx580_rep, rx580_bstack
    pop rx580_pos, rx580_bstack
    pop $I19, rx580_bstack
    lt rx580_pos, -1, rx580_done1276
    lt rx580_pos, 0, rx580_fail1278
    eq $I19, 0, rx580_fail1278
    nqp_islist $I20, rx580_cstack
    unless $I20, rx580_jump1279
    elements $I18, rx580_bstack
    le $I18, 0, rx580_cut1280
    dec $I18
    set $I18, rx580_bstack[$I18]
  rx580_cut1280:
    assign rx580_cstack, $I18
  rx580_jump1279:
    jump $I19
  rx580_done1276:
    rx580_cur."!cursor_fail"()
    .return (rx580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_72_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 896
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx586_start
    .local string rx586_tgt
    .local int rx586_pos
    .local int rx586_off
    .local int rx586_eos
    .local int rx586_rep
    .local pmc rx586_cur
    .local pmc rx586_curclass
    .local pmc rx586_bstack
    .local pmc rx586_cstack
    rx586_start = self."!cursor_start_all"()
    set rx586_cur, rx586_start[0]
    set rx586_tgt, rx586_start[1]
    set rx586_pos, rx586_start[2]
    set rx586_curclass, rx586_start[3]
    set rx586_bstack, rx586_start[4]
    set $I19, rx586_start[5]
    store_lex unicode:"$\x{a2}", rx586_cur
    length rx586_eos, rx586_tgt
    eq $I19, 1, rx586_restart1295
    gt rx586_pos, rx586_eos, rx586_fail1296
    repr_get_attr_int $I11, self, rx586_curclass, "$!from"
    ne $I11, -1, rxscan587_done1302
    goto rxscan587_scan1301
  rxscan587_loop1300:
    inc rx586_pos
    gt rx586_pos, rx586_eos, rx586_fail1296
    repr_bind_attr_int rx586_cur, rx586_curclass, "$!from", rx586_pos
  rxscan587_scan1301:
    nqp_rxmark rx586_bstack, rxscan587_loop1300, rx586_pos, 0
  rxscan587_done1302:
    nqp_rxmark rx586_bstack, rxcap588_fail1304, rx586_pos, 0
    add $I11, rx586_pos, 7
    gt $I11, rx586_eos, rx586_fail1296
    substr $S10, rx586_tgt, rx586_pos, 7
    ne $S10, ucs4:"CONTROL", rx586_fail1296
    add rx586_pos, 7
    nqp_rxpeek $I19, rx586_bstack, rxcap588_fail1304
    inc $I19
    set $I11, rx586_bstack[$I19]
    repr_bind_attr_int rx586_cur, rx586_curclass, "$!pos", rx586_pos
    $P11 = rx586_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx586_pos)
    rx586_cstack = rx586_cur."!cursor_capture"($P11, "sym")
    goto rxcap588_done1303
  rxcap588_fail1304:
    goto rx586_fail1296
  rxcap588_done1303:
    ge rx586_pos, rx586_eos, rx586_fail1296
    is_cclass $I11, .CCLASS_WHITESPACE, rx586_tgt, rx586_pos
    unless $I11, rx586_fail1296
    add rx586_pos, 1
    repr_bind_attr_int rx586_cur, rx586_curclass, "$!pos", rx586_pos
    $P11 = rx586_cur."ws"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
    goto rxsubrule589_pass1305
  rxsubrule589_back1306:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
  rxsubrule589_pass1305:
    rx586_cstack = rx586_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule589_back1306
    push rx586_bstack, $I11
    push rx586_bstack, 0
    push rx586_bstack, rx586_pos
    elements $I11, rx586_cstack
    push rx586_bstack, $I11
    repr_get_attr_int rx586_pos, $P11, rx586_curclass, "$!pos"
    repr_bind_attr_int rx586_cur, rx586_curclass, "$!pos", rx586_pos
    $P11 = rx586_cur."block"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
    goto rxsubrule590_pass1307
  rxsubrule590_back1308:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
  rxsubrule590_pass1307:
    rx586_cstack = rx586_cur."!cursor_capture"($P11, "block")
    set_addr $I11, rxsubrule590_back1308
    push rx586_bstack, $I11
    push rx586_bstack, 0
    push rx586_bstack, rx586_pos
    elements $I11, rx586_cstack
    push rx586_bstack, $I11
    repr_get_attr_int rx586_pos, $P11, rx586_curclass, "$!pos"
    repr_bind_attr_int rx586_cur, rx586_curclass, "$!pos", rx586_pos
    $P11 = rx586_cur."ws"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
    goto rxsubrule591_pass1309
  rxsubrule591_back1310:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx586_curclass, "$!pos"
    lt $I11, 0, rx586_fail1296
  rxsubrule591_pass1309:
    rx586_cstack = rx586_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule591_back1310
    push rx586_bstack, $I11
    push rx586_bstack, 0
    push rx586_bstack, rx586_pos
    elements $I11, rx586_cstack
    push rx586_bstack, $I11
    repr_get_attr_int rx586_pos, $P11, rx586_curclass, "$!pos"
    rx586_cur."!cursor_pass"(rx586_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx586_cur)
  rx586_restart1295:
    repr_get_attr_obj rx586_cstack, rx586_cur, rx586_curclass, "$!cstack"
  rx586_fail1296:
    unless rx586_bstack, rx586_done1294
    pop $I19, rx586_bstack
    if_null rx586_cstack, rx586_cstack_done1299
    unless rx586_cstack, rx586_cstack_done1299
    dec $I19
    set $P11, rx586_cstack[$I19]
  rx586_cstack_done1299:
    pop rx586_rep, rx586_bstack
    pop rx586_pos, rx586_bstack
    pop $I19, rx586_bstack
    lt rx586_pos, -1, rx586_done1294
    lt rx586_pos, 0, rx586_fail1296
    eq $I19, 0, rx586_fail1296
    nqp_islist $I20, rx586_cstack
    unless $I20, rx586_jump1297
    elements $I18, rx586_bstack
    le $I18, 0, rx586_cut1298
    dec $I18
    set $I18, rx586_bstack[$I18]
  rx586_cut1298:
    assign rx586_cstack, $I18
  rx586_jump1297:
    jump $I19
  rx586_done1294:
    rx586_cur."!cursor_fail"()
    .return (rx586_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_73_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 898
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_74_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 899
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx592_start
    .local string rx592_tgt
    .local int rx592_pos
    .local int rx592_off
    .local int rx592_eos
    .local int rx592_rep
    .local pmc rx592_cur
    .local pmc rx592_curclass
    .local pmc rx592_bstack
    .local pmc rx592_cstack
    rx592_start = self."!cursor_start_all"()
    set rx592_cur, rx592_start[0]
    set rx592_tgt, rx592_start[1]
    set rx592_pos, rx592_start[2]
    set rx592_curclass, rx592_start[3]
    set rx592_bstack, rx592_start[4]
    set $I19, rx592_start[5]
    store_lex unicode:"$\x{a2}", rx592_cur
    length rx592_eos, rx592_tgt
    eq $I19, 1, rx592_restart1313
    gt rx592_pos, rx592_eos, rx592_fail1314
    repr_get_attr_int $I11, self, rx592_curclass, "$!from"
    ne $I11, -1, rxscan593_done1320
    goto rxscan593_scan1319
  rxscan593_loop1318:
    inc rx592_pos
    gt rx592_pos, rx592_eos, rx592_fail1314
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!from", rx592_pos
  rxscan593_scan1319:
    nqp_rxmark rx592_bstack, rxscan593_loop1318, rx592_pos, 0
  rxscan593_done1320:
    nqp_rxmark rx592_bstack, rxcap594_fail1322, rx592_pos, 0
    add $I11, rx592_pos, 5
    gt $I11, rx592_eos, rx592_fail1314
    substr $S10, rx592_tgt, rx592_pos, 5
    ne $S10, ucs4:"BEGIN", rx592_fail1314
    add rx592_pos, 5
    nqp_rxpeek $I19, rx592_bstack, rxcap594_fail1322
    inc $I19
    set $I11, rx592_bstack[$I19]
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx592_pos)
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "sym")
    goto rxcap594_done1321
  rxcap594_fail1322:
    goto rx592_fail1314
  rxcap594_done1321:
    repr_bind_attr_int rx592_cur, rx592_curclass, "$!pos", rx592_pos
    $P11 = rx592_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx592_curclass, "$!pos"
    lt $I11, 0, rx592_fail1314
    nqp_rxmark rx592_bstack, rxsubrule595_pass1323, -1, 0
  rxsubrule595_pass1323:
    rx592_cstack = rx592_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx592_pos, $P11, rx592_curclass, "$!pos"
    rx592_cur."!cursor_pass"(rx592_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx592_cur)
  rx592_restart1313:
    repr_get_attr_obj rx592_cstack, rx592_cur, rx592_curclass, "$!cstack"
  rx592_fail1314:
    unless rx592_bstack, rx592_done1312
    pop $I19, rx592_bstack
    if_null rx592_cstack, rx592_cstack_done1317
    unless rx592_cstack, rx592_cstack_done1317
    dec $I19
    set $P11, rx592_cstack[$I19]
  rx592_cstack_done1317:
    pop rx592_rep, rx592_bstack
    pop rx592_pos, rx592_bstack
    pop $I19, rx592_bstack
    lt rx592_pos, -1, rx592_done1312
    lt rx592_pos, 0, rx592_fail1314
    eq $I19, 0, rx592_fail1314
    nqp_islist $I20, rx592_cstack
    unless $I20, rx592_jump1315
    elements $I18, rx592_bstack
    le $I18, 0, rx592_cut1316
    dec $I18
    set $I18, rx592_bstack[$I18]
  rx592_cut1316:
    assign rx592_cstack, $I18
  rx592_jump1315:
    jump $I19
  rx592_done1312:
    rx592_cur."!cursor_fail"()
    .return (rx592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_75_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 900
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx596_start
    .local string rx596_tgt
    .local int rx596_pos
    .local int rx596_off
    .local int rx596_eos
    .local int rx596_rep
    .local pmc rx596_cur
    .local pmc rx596_curclass
    .local pmc rx596_bstack
    .local pmc rx596_cstack
    rx596_start = self."!cursor_start_all"()
    set rx596_cur, rx596_start[0]
    set rx596_tgt, rx596_start[1]
    set rx596_pos, rx596_start[2]
    set rx596_curclass, rx596_start[3]
    set rx596_bstack, rx596_start[4]
    set $I19, rx596_start[5]
    store_lex unicode:"$\x{a2}", rx596_cur
    length rx596_eos, rx596_tgt
    eq $I19, 1, rx596_restart1326
    gt rx596_pos, rx596_eos, rx596_fail1327
    repr_get_attr_int $I11, self, rx596_curclass, "$!from"
    ne $I11, -1, rxscan597_done1333
    goto rxscan597_scan1332
  rxscan597_loop1331:
    inc rx596_pos
    gt rx596_pos, rx596_eos, rx596_fail1327
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!from", rx596_pos
  rxscan597_scan1332:
    nqp_rxmark rx596_bstack, rxscan597_loop1331, rx596_pos, 0
  rxscan597_done1333:
    nqp_rxmark rx596_bstack, rxcap598_fail1335, rx596_pos, 0
    add $I11, rx596_pos, 4
    gt $I11, rx596_eos, rx596_fail1327
    substr $S10, rx596_tgt, rx596_pos, 4
    ne $S10, ucs4:"INIT", rx596_fail1327
    add rx596_pos, 4
    nqp_rxpeek $I19, rx596_bstack, rxcap598_fail1335
    inc $I19
    set $I11, rx596_bstack[$I19]
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx596_pos)
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "sym")
    goto rxcap598_done1334
  rxcap598_fail1335:
    goto rx596_fail1327
  rxcap598_done1334:
    repr_bind_attr_int rx596_cur, rx596_curclass, "$!pos", rx596_pos
    $P11 = rx596_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx596_curclass, "$!pos"
    lt $I11, 0, rx596_fail1327
    nqp_rxmark rx596_bstack, rxsubrule599_pass1336, -1, 0
  rxsubrule599_pass1336:
    rx596_cstack = rx596_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx596_pos, $P11, rx596_curclass, "$!pos"
    rx596_cur."!cursor_pass"(rx596_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx596_cur)
  rx596_restart1326:
    repr_get_attr_obj rx596_cstack, rx596_cur, rx596_curclass, "$!cstack"
  rx596_fail1327:
    unless rx596_bstack, rx596_done1325
    pop $I19, rx596_bstack
    if_null rx596_cstack, rx596_cstack_done1330
    unless rx596_cstack, rx596_cstack_done1330
    dec $I19
    set $P11, rx596_cstack[$I19]
  rx596_cstack_done1330:
    pop rx596_rep, rx596_bstack
    pop rx596_pos, rx596_bstack
    pop $I19, rx596_bstack
    lt rx596_pos, -1, rx596_done1325
    lt rx596_pos, 0, rx596_fail1327
    eq $I19, 0, rx596_fail1327
    nqp_islist $I20, rx596_cstack
    unless $I20, rx596_jump1328
    elements $I18, rx596_bstack
    le $I18, 0, rx596_cut1329
    dec $I18
    set $I18, rx596_bstack[$I18]
  rx596_cut1329:
    assign rx596_cstack, $I18
  rx596_jump1328:
    jump $I19
  rx596_done1325:
    rx596_cur."!cursor_fail"()
    .return (rx596_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_76_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 901
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx600_start
    .local string rx600_tgt
    .local int rx600_pos
    .local int rx600_off
    .local int rx600_eos
    .local int rx600_rep
    .local pmc rx600_cur
    .local pmc rx600_curclass
    .local pmc rx600_bstack
    .local pmc rx600_cstack
    rx600_start = self."!cursor_start_all"()
    set rx600_cur, rx600_start[0]
    set rx600_tgt, rx600_start[1]
    set rx600_pos, rx600_start[2]
    set rx600_curclass, rx600_start[3]
    set rx600_bstack, rx600_start[4]
    set $I19, rx600_start[5]
    store_lex unicode:"$\x{a2}", rx600_cur
    length rx600_eos, rx600_tgt
    eq $I19, 1, rx600_restart1339
    gt rx600_pos, rx600_eos, rx600_fail1340
    repr_get_attr_int $I11, self, rx600_curclass, "$!from"
    ne $I11, -1, rxscan601_done1346
    goto rxscan601_scan1345
  rxscan601_loop1344:
    inc rx600_pos
    gt rx600_pos, rx600_eos, rx600_fail1340
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!from", rx600_pos
  rxscan601_scan1345:
    nqp_rxmark rx600_bstack, rxscan601_loop1344, rx600_pos, 0
  rxscan601_done1346:
    nqp_rxmark rx600_bstack, rxcap602_fail1348, rx600_pos, 0
    add $I11, rx600_pos, 3
    gt $I11, rx600_eos, rx600_fail1340
    substr $S10, rx600_tgt, rx600_pos, 3
    ne $S10, ucs4:"try", rx600_fail1340
    add rx600_pos, 3
    nqp_rxpeek $I19, rx600_bstack, rxcap602_fail1348
    inc $I19
    set $I11, rx600_bstack[$I19]
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx600_pos)
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "sym")
    goto rxcap602_done1347
  rxcap602_fail1348:
    goto rx600_fail1340
  rxcap602_done1347:
    repr_bind_attr_int rx600_cur, rx600_curclass, "$!pos", rx600_pos
    $P11 = rx600_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx600_curclass, "$!pos"
    lt $I11, 0, rx600_fail1340
    nqp_rxmark rx600_bstack, rxsubrule603_pass1349, -1, 0
  rxsubrule603_pass1349:
    rx600_cstack = rx600_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx600_pos, $P11, rx600_curclass, "$!pos"
    rx600_cur."!cursor_pass"(rx600_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx600_cur)
  rx600_restart1339:
    repr_get_attr_obj rx600_cstack, rx600_cur, rx600_curclass, "$!cstack"
  rx600_fail1340:
    unless rx600_bstack, rx600_done1338
    pop $I19, rx600_bstack
    if_null rx600_cstack, rx600_cstack_done1343
    unless rx600_cstack, rx600_cstack_done1343
    dec $I19
    set $P11, rx600_cstack[$I19]
  rx600_cstack_done1343:
    pop rx600_rep, rx600_bstack
    pop rx600_pos, rx600_bstack
    pop $I19, rx600_bstack
    lt rx600_pos, -1, rx600_done1338
    lt rx600_pos, 0, rx600_fail1340
    eq $I19, 0, rx600_fail1340
    nqp_islist $I20, rx600_cstack
    unless $I20, rx600_jump1341
    elements $I18, rx600_bstack
    le $I18, 0, rx600_cut1342
    dec $I18
    set $I18, rx600_bstack[$I18]
  rx600_cut1342:
    assign rx600_cstack, $I18
  rx600_jump1341:
    jump $I19
  rx600_done1338:
    rx600_cur."!cursor_fail"()
    .return (rx600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_77_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 903
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_78_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx604_start
    .local string rx604_tgt
    .local int rx604_pos
    .local int rx604_off
    .local int rx604_eos
    .local int rx604_rep
    .local pmc rx604_cur
    .local pmc rx604_curclass
    .local pmc rx604_bstack
    .local pmc rx604_cstack
    rx604_start = self."!cursor_start_all"()
    set rx604_cur, rx604_start[0]
    set rx604_tgt, rx604_start[1]
    set rx604_pos, rx604_start[2]
    set rx604_curclass, rx604_start[3]
    set rx604_bstack, rx604_start[4]
    set $I19, rx604_start[5]
    store_lex unicode:"$\x{a2}", rx604_cur
    length rx604_eos, rx604_tgt
    eq $I19, 1, rx604_restart1352
    gt rx604_pos, rx604_eos, rx604_fail1353
    repr_get_attr_int $I11, self, rx604_curclass, "$!from"
    ne $I11, -1, rxscan605_done1359
    goto rxscan605_scan1358
  rxscan605_loop1357:
    inc rx604_pos
    gt rx604_pos, rx604_eos, rx604_fail1353
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!from", rx604_pos
  rxscan605_scan1358:
    nqp_rxmark rx604_bstack, rxscan605_loop1357, rx604_pos, 0
  rxscan605_done1359:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt606_01361
    nqp_push_label $P11, alt606_11378
    nqp_rxmark rx604_bstack, alt606_end1360, -1, 0
    rx604_cur."!alt"(rx604_pos, "alt_nfa__17_1382484130.11919", $P11)
    goto rx604_fail1353
  alt606_01361:
    .const 'Sub' $P5001 = 'cuid_78_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1353
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."ws"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1353
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt610_01374
    nqp_push_label $P11, alt610_11376
    nqp_rxmark rx604_bstack, alt610_end1373, -1, 0
    rx604_cur."!alt"(rx604_pos, "alt_nfa__16_1382484130.11889", $P11)
    goto rx604_fail1353
  alt610_01374:
    ge rx604_pos, rx604_eos, rx604_fail1353
    substr $S11, rx604_tgt, rx604_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx604_fail1353
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."block"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1353
    nqp_rxmark rx604_bstack, rxsubrule611_pass1375, -1, 0
  rxsubrule611_pass1375:
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    goto alt610_end1373
  alt610_11376:
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."statement"()
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1353
    nqp_rxmark rx604_bstack, rxsubrule612_pass1377, -1, 0
  rxsubrule612_pass1377:
    rx604_cstack = rx604_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    goto alt610_end1373
  alt610_end1373:
    nqp_rxcommit rx604_bstack, alt610_end1373
    goto alt606_end1360
  alt606_11378:
    repr_bind_attr_int rx604_cur, rx604_curclass, "$!pos", rx604_pos
    $P11 = rx604_cur."panic"("Whitespace required after keyword")
    repr_get_attr_int $I11, $P11, rx604_curclass, "$!pos"
    lt $I11, 0, rx604_fail1353
    repr_get_attr_int rx604_pos, $P11, rx604_curclass, "$!pos"
    goto alt606_end1360
  alt606_end1360:
    nqp_rxcommit rx604_bstack, alt606_end1360
    rx604_cur."!cursor_pass"(rx604_pos, "blorst", 'backtrack'=>1)
    .return (rx604_cur)
  rx604_restart1352:
    repr_get_attr_obj rx604_cstack, rx604_cur, rx604_curclass, "$!cstack"
  rx604_fail1353:
    unless rx604_bstack, rx604_done1351
    pop $I19, rx604_bstack
    if_null rx604_cstack, rx604_cstack_done1356
    unless rx604_cstack, rx604_cstack_done1356
    dec $I19
    set $P11, rx604_cstack[$I19]
  rx604_cstack_done1356:
    pop rx604_rep, rx604_bstack
    pop rx604_pos, rx604_bstack
    pop $I19, rx604_bstack
    lt rx604_pos, -1, rx604_done1351
    lt rx604_pos, 0, rx604_fail1353
    eq $I19, 0, rx604_fail1353
    nqp_islist $I20, rx604_cstack
    unless $I20, rx604_jump1354
    elements $I18, rx604_bstack
    le $I18, 0, rx604_cut1355
    dec $I18
    set $I18, rx604_bstack[$I18]
  rx604_cut1355:
    assign rx604_cstack, $I18
  rx604_jump1354:
    jump $I19
  rx604_done1351:
    rx604_cur."!cursor_fail"()
    .return (rx604_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_78_1382484127.52628") :anon :lex :outer("cuid_77_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx607_start
    .local string rx607_tgt
    .local int rx607_pos
    .local int rx607_off
    .local int rx607_eos
    .local int rx607_rep
    .local pmc rx607_cur
    .local pmc rx607_curclass
    .local pmc rx607_bstack
    .local pmc rx607_cstack
    rx607_start = self."!cursor_start_all"()
    set rx607_cur, rx607_start[0]
    set rx607_tgt, rx607_start[1]
    set rx607_pos, rx607_start[2]
    set rx607_curclass, rx607_start[3]
    set rx607_bstack, rx607_start[4]
    set $I19, rx607_start[5]
    store_lex unicode:"$\x{a2}", rx607_cur
    length rx607_eos, rx607_tgt
    eq $I19, 1, rx607_restart1364
    gt rx607_pos, rx607_eos, rx607_fail1365
    repr_get_attr_int $I11, self, rx607_curclass, "$!from"
    ne $I11, -1, rxscan608_done1371
    goto rxscan608_scan1370
  rxscan608_loop1369:
    inc rx607_pos
    gt rx607_pos, rx607_eos, rx607_fail1365
    repr_bind_attr_int rx607_cur, rx607_curclass, "$!from", rx607_pos
  rxscan608_scan1370:
    nqp_rxmark rx607_bstack, rxscan608_loop1369, rx607_pos, 0
  rxscan608_done1371:
    ge rx607_pos, rx607_eos, rx607_fail1365
    is_cclass $I11, .CCLASS_WHITESPACE, rx607_tgt, rx607_pos
    unless $I11, rx607_fail1365
    add rx607_pos, 1
    rx607_cur."!cursor_pass"(rx607_pos, 'backtrack'=>1)
    .return (rx607_cur)
  rx607_restart1364:
    repr_get_attr_obj rx607_cstack, rx607_cur, rx607_curclass, "$!cstack"
  rx607_fail1365:
    unless rx607_bstack, rx607_done1363
    pop $I19, rx607_bstack
    if_null rx607_cstack, rx607_cstack_done1368
    unless rx607_cstack, rx607_cstack_done1368
    dec $I19
    set $P11, rx607_cstack[$I19]
  rx607_cstack_done1368:
    pop rx607_rep, rx607_bstack
    pop rx607_pos, rx607_bstack
    pop $I19, rx607_bstack
    lt rx607_pos, -1, rx607_done1363
    lt rx607_pos, 0, rx607_fail1365
    eq $I19, 0, rx607_fail1365
    nqp_islist $I20, rx607_cstack
    unless $I20, rx607_jump1366
    elements $I18, rx607_bstack
    le $I18, 0, rx607_cut1367
    dec $I18
    set $I18, rx607_bstack[$I18]
  rx607_cut1367:
    assign rx607_cstack, $I18
  rx607_jump1366:
    jump $I19
  rx607_done1363:
    rx607_cur."!cursor_fail"()
    .return (rx607_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_79_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 916
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_80_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 918
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_407_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx614_start
    .local string rx614_tgt
    .local int rx614_pos
    .local int rx614_off
    .local int rx614_eos
    .local int rx614_rep
    .local pmc rx614_cur
    .local pmc rx614_curclass
    .local pmc rx614_bstack
    .local pmc rx614_cstack
    rx614_start = self."!cursor_start_all"()
    set rx614_cur, rx614_start[0]
    set rx614_tgt, rx614_start[1]
    set rx614_pos, rx614_start[2]
    set rx614_curclass, rx614_start[3]
    set rx614_bstack, rx614_start[4]
    set $I19, rx614_start[5]
    store_lex unicode:"$\x{a2}", rx614_cur
    length rx614_eos, rx614_tgt
    eq $I19, 1, rx614_restart1382
    gt rx614_pos, rx614_eos, rx614_fail1383
    repr_get_attr_int $I11, self, rx614_curclass, "$!from"
    ne $I11, -1, rxscan615_done1389
    goto rxscan615_scan1388
  rxscan615_loop1387:
    inc rx614_pos
    gt rx614_pos, rx614_eos, rx614_fail1383
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!from", rx614_pos
  rxscan615_scan1388:
    nqp_rxmark rx614_bstack, rxscan615_loop1387, rx614_pos, 0
  rxscan615_done1389:
    nqp_rxmark rx614_bstack, rxcap616_fail1391, rx614_pos, 0
    add $I11, rx614_pos, 2
    gt $I11, rx614_eos, rx614_fail1383
    substr $S10, rx614_tgt, rx614_pos, 2
    ne $S10, ucs4:"if", rx614_fail1383
    add rx614_pos, 2
    nqp_rxpeek $I19, rx614_bstack, rxcap616_fail1391
    inc $I19
    set $I11, rx614_bstack[$I19]
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx614_pos)
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "sym")
    goto rxcap616_done1390
  rxcap616_fail1391:
    goto rx614_fail1383
  rxcap616_done1390:
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
    goto rxsubrule617_pass1392
  rxsubrule617_back1393:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
  rxsubrule617_pass1392:
    rx614_cstack = rx614_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule617_back1393
    push rx614_bstack, $I11
    push rx614_bstack, 0
    push rx614_bstack, rx614_pos
    elements $I11, rx614_cstack
    push rx614_bstack, $I11
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    store_lex unicode:"$\x{a2}", rx614_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_407_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
    goto rxsubrule618_pass1394
  rxsubrule618_back1395:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
  rxsubrule618_pass1394:
    rx614_cstack = rx614_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule618_back1395
    push rx614_bstack, $I11
    push rx614_bstack, 0
    push rx614_bstack, rx614_pos
    elements $I11, rx614_cstack
    push rx614_bstack, $I11
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    repr_bind_attr_int rx614_cur, rx614_curclass, "$!pos", rx614_pos
    $P11 = rx614_cur."ws"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
    goto rxsubrule619_pass1396
  rxsubrule619_back1397:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx614_curclass, "$!pos"
    lt $I11, 0, rx614_fail1383
  rxsubrule619_pass1396:
    rx614_cstack = rx614_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule619_back1397
    push rx614_bstack, $I11
    push rx614_bstack, 0
    push rx614_bstack, rx614_pos
    elements $I11, rx614_cstack
    push rx614_bstack, $I11
    repr_get_attr_int rx614_pos, $P11, rx614_curclass, "$!pos"
    rx614_cur."!cursor_pass"(rx614_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx614_cur)
  rx614_restart1382:
    repr_get_attr_obj rx614_cstack, rx614_cur, rx614_curclass, "$!cstack"
  rx614_fail1383:
    unless rx614_bstack, rx614_done1381
    pop $I19, rx614_bstack
    if_null rx614_cstack, rx614_cstack_done1386
    unless rx614_cstack, rx614_cstack_done1386
    dec $I19
    set $P11, rx614_cstack[$I19]
  rx614_cstack_done1386:
    pop rx614_rep, rx614_bstack
    pop rx614_pos, rx614_bstack
    pop $I19, rx614_bstack
    lt rx614_pos, -1, rx614_done1381
    lt rx614_pos, 0, rx614_fail1383
    eq $I19, 0, rx614_fail1383
    nqp_islist $I20, rx614_cstack
    unless $I20, rx614_jump1384
    elements $I18, rx614_bstack
    le $I18, 0, rx614_cut1385
    dec $I18
    set $I18, rx614_bstack[$I18]
  rx614_cut1385:
    assign rx614_cstack, $I18
  rx614_jump1384:
    jump $I19
  rx614_done1381:
    rx614_cur."!cursor_fail"()
    .return (rx614_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1382484127.52628") :anon :lex :outer("cuid_80_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 918

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_81_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 919
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_408_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx620_start
    .local string rx620_tgt
    .local int rx620_pos
    .local int rx620_off
    .local int rx620_eos
    .local int rx620_rep
    .local pmc rx620_cur
    .local pmc rx620_curclass
    .local pmc rx620_bstack
    .local pmc rx620_cstack
    rx620_start = self."!cursor_start_all"()
    set rx620_cur, rx620_start[0]
    set rx620_tgt, rx620_start[1]
    set rx620_pos, rx620_start[2]
    set rx620_curclass, rx620_start[3]
    set rx620_bstack, rx620_start[4]
    set $I19, rx620_start[5]
    store_lex unicode:"$\x{a2}", rx620_cur
    length rx620_eos, rx620_tgt
    eq $I19, 1, rx620_restart1400
    gt rx620_pos, rx620_eos, rx620_fail1401
    repr_get_attr_int $I11, self, rx620_curclass, "$!from"
    ne $I11, -1, rxscan621_done1407
    goto rxscan621_scan1406
  rxscan621_loop1405:
    inc rx620_pos
    gt rx620_pos, rx620_eos, rx620_fail1401
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!from", rx620_pos
  rxscan621_scan1406:
    nqp_rxmark rx620_bstack, rxscan621_loop1405, rx620_pos, 0
  rxscan621_done1407:
    nqp_rxmark rx620_bstack, rxcap622_fail1409, rx620_pos, 0
    add $I11, rx620_pos, 6
    gt $I11, rx620_eos, rx620_fail1401
    substr $S10, rx620_tgt, rx620_pos, 6
    ne $S10, ucs4:"unless", rx620_fail1401
    add rx620_pos, 6
    nqp_rxpeek $I19, rx620_bstack, rxcap622_fail1409
    inc $I19
    set $I11, rx620_bstack[$I19]
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx620_pos)
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "sym")
    goto rxcap622_done1408
  rxcap622_fail1409:
    goto rx620_fail1401
  rxcap622_done1408:
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."ws"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
    goto rxsubrule623_pass1410
  rxsubrule623_back1411:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
  rxsubrule623_pass1410:
    rx620_cstack = rx620_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule623_back1411
    push rx620_bstack, $I11
    push rx620_bstack, 0
    push rx620_bstack, rx620_pos
    elements $I11, rx620_cstack
    push rx620_bstack, $I11
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    store_lex unicode:"$\x{a2}", rx620_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_408_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
    goto rxsubrule624_pass1412
  rxsubrule624_back1413:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
  rxsubrule624_pass1412:
    rx620_cstack = rx620_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule624_back1413
    push rx620_bstack, $I11
    push rx620_bstack, 0
    push rx620_bstack, rx620_pos
    elements $I11, rx620_cstack
    push rx620_bstack, $I11
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    repr_bind_attr_int rx620_cur, rx620_curclass, "$!pos", rx620_pos
    $P11 = rx620_cur."ws"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
    goto rxsubrule625_pass1414
  rxsubrule625_back1415:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx620_curclass, "$!pos"
    lt $I11, 0, rx620_fail1401
  rxsubrule625_pass1414:
    rx620_cstack = rx620_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule625_back1415
    push rx620_bstack, $I11
    push rx620_bstack, 0
    push rx620_bstack, rx620_pos
    elements $I11, rx620_cstack
    push rx620_bstack, $I11
    repr_get_attr_int rx620_pos, $P11, rx620_curclass, "$!pos"
    rx620_cur."!cursor_pass"(rx620_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx620_cur)
  rx620_restart1400:
    repr_get_attr_obj rx620_cstack, rx620_cur, rx620_curclass, "$!cstack"
  rx620_fail1401:
    unless rx620_bstack, rx620_done1399
    pop $I19, rx620_bstack
    if_null rx620_cstack, rx620_cstack_done1404
    unless rx620_cstack, rx620_cstack_done1404
    dec $I19
    set $P11, rx620_cstack[$I19]
  rx620_cstack_done1404:
    pop rx620_rep, rx620_bstack
    pop rx620_pos, rx620_bstack
    pop $I19, rx620_bstack
    lt rx620_pos, -1, rx620_done1399
    lt rx620_pos, 0, rx620_fail1401
    eq $I19, 0, rx620_fail1401
    nqp_islist $I20, rx620_cstack
    unless $I20, rx620_jump1402
    elements $I18, rx620_bstack
    le $I18, 0, rx620_cut1403
    dec $I18
    set $I18, rx620_bstack[$I18]
  rx620_cut1403:
    assign rx620_cstack, $I18
  rx620_jump1402:
    jump $I19
  rx620_done1399:
    rx620_cur."!cursor_fail"()
    .return (rx620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1382484127.52628") :anon :lex :outer("cuid_81_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 919

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_82_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 921
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_83_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 923
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_409_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx626_start
    .local string rx626_tgt
    .local int rx626_pos
    .local int rx626_off
    .local int rx626_eos
    .local int rx626_rep
    .local pmc rx626_cur
    .local pmc rx626_curclass
    .local pmc rx626_bstack
    .local pmc rx626_cstack
    rx626_start = self."!cursor_start_all"()
    set rx626_cur, rx626_start[0]
    set rx626_tgt, rx626_start[1]
    set rx626_pos, rx626_start[2]
    set rx626_curclass, rx626_start[3]
    set rx626_bstack, rx626_start[4]
    set $I19, rx626_start[5]
    store_lex unicode:"$\x{a2}", rx626_cur
    length rx626_eos, rx626_tgt
    eq $I19, 1, rx626_restart1418
    gt rx626_pos, rx626_eos, rx626_fail1419
    repr_get_attr_int $I11, self, rx626_curclass, "$!from"
    ne $I11, -1, rxscan627_done1425
    goto rxscan627_scan1424
  rxscan627_loop1423:
    inc rx626_pos
    gt rx626_pos, rx626_eos, rx626_fail1419
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!from", rx626_pos
  rxscan627_scan1424:
    nqp_rxmark rx626_bstack, rxscan627_loop1423, rx626_pos, 0
  rxscan627_done1425:
    nqp_rxmark rx626_bstack, rxcap628_fail1427, rx626_pos, 0
    add $I11, rx626_pos, 5
    gt $I11, rx626_eos, rx626_fail1419
    substr $S10, rx626_tgt, rx626_pos, 5
    ne $S10, ucs4:"while", rx626_fail1419
    add rx626_pos, 5
    nqp_rxpeek $I19, rx626_bstack, rxcap628_fail1427
    inc $I19
    set $I11, rx626_bstack[$I19]
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx626_pos)
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "sym")
    goto rxcap628_done1426
  rxcap628_fail1427:
    goto rx626_fail1419
  rxcap628_done1426:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."ws"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
    goto rxsubrule629_pass1428
  rxsubrule629_back1429:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
  rxsubrule629_pass1428:
    rx626_cstack = rx626_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule629_back1429
    push rx626_bstack, $I11
    push rx626_bstack, 0
    push rx626_bstack, rx626_pos
    elements $I11, rx626_cstack
    push rx626_bstack, $I11
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
    goto rxsubrule630_pass1430
  rxsubrule630_back1431:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
  rxsubrule630_pass1430:
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule630_back1431
    push rx626_bstack, $I11
    push rx626_bstack, 0
    push rx626_bstack, rx626_pos
    elements $I11, rx626_cstack
    push rx626_bstack, $I11
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."ws"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
    goto rxsubrule631_pass1432
  rxsubrule631_back1433:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1419
  rxsubrule631_pass1432:
    rx626_cstack = rx626_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule631_back1433
    push rx626_bstack, $I11
    push rx626_bstack, 0
    push rx626_bstack, rx626_pos
    elements $I11, rx626_cstack
    push rx626_bstack, $I11
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    rx626_cur."!cursor_pass"(rx626_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx626_cur)
  rx626_restart1418:
    repr_get_attr_obj rx626_cstack, rx626_cur, rx626_curclass, "$!cstack"
  rx626_fail1419:
    unless rx626_bstack, rx626_done1417
    pop $I19, rx626_bstack
    if_null rx626_cstack, rx626_cstack_done1422
    unless rx626_cstack, rx626_cstack_done1422
    dec $I19
    set $P11, rx626_cstack[$I19]
  rx626_cstack_done1422:
    pop rx626_rep, rx626_bstack
    pop rx626_pos, rx626_bstack
    pop $I19, rx626_bstack
    lt rx626_pos, -1, rx626_done1417
    lt rx626_pos, 0, rx626_fail1419
    eq $I19, 0, rx626_fail1419
    nqp_islist $I20, rx626_cstack
    unless $I20, rx626_jump1420
    elements $I18, rx626_bstack
    le $I18, 0, rx626_cut1421
    dec $I18
    set $I18, rx626_bstack[$I18]
  rx626_cut1421:
    assign rx626_cstack, $I18
  rx626_jump1420:
    jump $I19
  rx626_done1417:
    rx626_cur."!cursor_fail"()
    .return (rx626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1382484127.52628") :anon :lex :outer("cuid_83_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 923

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_84_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 924
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_410_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx632_start
    .local string rx632_tgt
    .local int rx632_pos
    .local int rx632_off
    .local int rx632_eos
    .local int rx632_rep
    .local pmc rx632_cur
    .local pmc rx632_curclass
    .local pmc rx632_bstack
    .local pmc rx632_cstack
    rx632_start = self."!cursor_start_all"()
    set rx632_cur, rx632_start[0]
    set rx632_tgt, rx632_start[1]
    set rx632_pos, rx632_start[2]
    set rx632_curclass, rx632_start[3]
    set rx632_bstack, rx632_start[4]
    set $I19, rx632_start[5]
    store_lex unicode:"$\x{a2}", rx632_cur
    length rx632_eos, rx632_tgt
    eq $I19, 1, rx632_restart1436
    gt rx632_pos, rx632_eos, rx632_fail1437
    repr_get_attr_int $I11, self, rx632_curclass, "$!from"
    ne $I11, -1, rxscan633_done1443
    goto rxscan633_scan1442
  rxscan633_loop1441:
    inc rx632_pos
    gt rx632_pos, rx632_eos, rx632_fail1437
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!from", rx632_pos
  rxscan633_scan1442:
    nqp_rxmark rx632_bstack, rxscan633_loop1441, rx632_pos, 0
  rxscan633_done1443:
    nqp_rxmark rx632_bstack, rxcap634_fail1445, rx632_pos, 0
    add $I11, rx632_pos, 5
    gt $I11, rx632_eos, rx632_fail1437
    substr $S10, rx632_tgt, rx632_pos, 5
    ne $S10, ucs4:"until", rx632_fail1437
    add rx632_pos, 5
    nqp_rxpeek $I19, rx632_bstack, rxcap634_fail1445
    inc $I19
    set $I11, rx632_bstack[$I19]
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx632_pos)
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "sym")
    goto rxcap634_done1444
  rxcap634_fail1445:
    goto rx632_fail1437
  rxcap634_done1444:
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
    goto rxsubrule635_pass1446
  rxsubrule635_back1447:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
  rxsubrule635_pass1446:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule635_back1447
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    store_lex unicode:"$\x{a2}", rx632_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_410_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
    goto rxsubrule636_pass1448
  rxsubrule636_back1449:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
  rxsubrule636_pass1448:
    rx632_cstack = rx632_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule636_back1449
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    repr_bind_attr_int rx632_cur, rx632_curclass, "$!pos", rx632_pos
    $P11 = rx632_cur."ws"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
    goto rxsubrule637_pass1450
  rxsubrule637_back1451:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx632_curclass, "$!pos"
    lt $I11, 0, rx632_fail1437
  rxsubrule637_pass1450:
    rx632_cstack = rx632_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule637_back1451
    push rx632_bstack, $I11
    push rx632_bstack, 0
    push rx632_bstack, rx632_pos
    elements $I11, rx632_cstack
    push rx632_bstack, $I11
    repr_get_attr_int rx632_pos, $P11, rx632_curclass, "$!pos"
    rx632_cur."!cursor_pass"(rx632_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx632_cur)
  rx632_restart1436:
    repr_get_attr_obj rx632_cstack, rx632_cur, rx632_curclass, "$!cstack"
  rx632_fail1437:
    unless rx632_bstack, rx632_done1435
    pop $I19, rx632_bstack
    if_null rx632_cstack, rx632_cstack_done1440
    unless rx632_cstack, rx632_cstack_done1440
    dec $I19
    set $P11, rx632_cstack[$I19]
  rx632_cstack_done1440:
    pop rx632_rep, rx632_bstack
    pop rx632_pos, rx632_bstack
    pop $I19, rx632_bstack
    lt rx632_pos, -1, rx632_done1435
    lt rx632_pos, 0, rx632_fail1437
    eq $I19, 0, rx632_fail1437
    nqp_islist $I20, rx632_cstack
    unless $I20, rx632_jump1438
    elements $I18, rx632_bstack
    le $I18, 0, rx632_cut1439
    dec $I18
    set $I18, rx632_bstack[$I18]
  rx632_cut1439:
    assign rx632_cstack, $I18
  rx632_jump1438:
    jump $I19
  rx632_done1435:
    rx632_cur."!cursor_fail"()
    .return (rx632_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1382484127.52628") :anon :lex :outer("cuid_84_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 924

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_85_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_411_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx638_start
    .local string rx638_tgt
    .local int rx638_pos
    .local int rx638_off
    .local int rx638_eos
    .local int rx638_rep
    .local pmc rx638_cur
    .local pmc rx638_curclass
    .local pmc rx638_bstack
    .local pmc rx638_cstack
    rx638_start = self."!cursor_start_all"()
    set rx638_cur, rx638_start[0]
    set rx638_tgt, rx638_start[1]
    set rx638_pos, rx638_start[2]
    set rx638_curclass, rx638_start[3]
    set rx638_bstack, rx638_start[4]
    set $I19, rx638_start[5]
    store_lex unicode:"$\x{a2}", rx638_cur
    length rx638_eos, rx638_tgt
    eq $I19, 1, rx638_restart1454
    gt rx638_pos, rx638_eos, rx638_fail1455
    repr_get_attr_int $I11, self, rx638_curclass, "$!from"
    ne $I11, -1, rxscan639_done1461
    goto rxscan639_scan1460
  rxscan639_loop1459:
    inc rx638_pos
    gt rx638_pos, rx638_eos, rx638_fail1455
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!from", rx638_pos
  rxscan639_scan1460:
    nqp_rxmark rx638_bstack, rxscan639_loop1459, rx638_pos, 0
  rxscan639_done1461:
    nqp_rxmark rx638_bstack, rxcap640_fail1463, rx638_pos, 0
    add $I11, rx638_pos, 3
    gt $I11, rx638_eos, rx638_fail1455
    substr $S10, rx638_tgt, rx638_pos, 3
    ne $S10, ucs4:"for", rx638_fail1455
    add rx638_pos, 3
    nqp_rxpeek $I19, rx638_bstack, rxcap640_fail1463
    inc $I19
    set $I11, rx638_bstack[$I19]
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx638_pos)
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "sym")
    goto rxcap640_done1462
  rxcap640_fail1463:
    goto rx638_fail1455
  rxcap640_done1462:
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
    goto rxsubrule641_pass1464
  rxsubrule641_back1465:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
  rxsubrule641_pass1464:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule641_back1465
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    store_lex unicode:"$\x{a2}", rx638_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_411_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
    goto rxsubrule642_pass1466
  rxsubrule642_back1467:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
  rxsubrule642_pass1466:
    rx638_cstack = rx638_cur."!cursor_capture"($P11, "cond")
    set_addr $I11, rxsubrule642_back1467
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    repr_bind_attr_int rx638_cur, rx638_curclass, "$!pos", rx638_pos
    $P11 = rx638_cur."ws"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
    goto rxsubrule643_pass1468
  rxsubrule643_back1469:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx638_curclass, "$!pos"
    lt $I11, 0, rx638_fail1455
  rxsubrule643_pass1468:
    rx638_cstack = rx638_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule643_back1469
    push rx638_bstack, $I11
    push rx638_bstack, 0
    push rx638_bstack, rx638_pos
    elements $I11, rx638_cstack
    push rx638_bstack, $I11
    repr_get_attr_int rx638_pos, $P11, rx638_curclass, "$!pos"
    rx638_cur."!cursor_pass"(rx638_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx638_cur)
  rx638_restart1454:
    repr_get_attr_obj rx638_cstack, rx638_cur, rx638_curclass, "$!cstack"
  rx638_fail1455:
    unless rx638_bstack, rx638_done1453
    pop $I19, rx638_bstack
    if_null rx638_cstack, rx638_cstack_done1458
    unless rx638_cstack, rx638_cstack_done1458
    dec $I19
    set $P11, rx638_cstack[$I19]
  rx638_cstack_done1458:
    pop rx638_rep, rx638_bstack
    pop rx638_pos, rx638_bstack
    pop $I19, rx638_bstack
    lt rx638_pos, -1, rx638_done1453
    lt rx638_pos, 0, rx638_fail1455
    eq $I19, 0, rx638_fail1455
    nqp_islist $I20, rx638_cstack
    unless $I20, rx638_jump1456
    elements $I18, rx638_bstack
    le $I18, 0, rx638_cut1457
    dec $I18
    set $I18, rx638_bstack[$I18]
  rx638_cut1457:
    assign rx638_cstack, $I18
  rx638_jump1456:
    jump $I19
  rx638_done1453:
    rx638_cur."!cursor_fail"()
    .return (rx638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1382484127.52628") :anon :lex :outer("cuid_85_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 925

    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_86_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx644_start
    .local string rx644_tgt
    .local int rx644_pos
    .local int rx644_off
    .local int rx644_eos
    .local int rx644_rep
    .local pmc rx644_cur
    .local pmc rx644_curclass
    .local pmc rx644_bstack
    .local pmc rx644_cstack
    rx644_start = self."!cursor_start_all"()
    set rx644_cur, rx644_start[0]
    set rx644_tgt, rx644_start[1]
    set rx644_pos, rx644_start[2]
    set rx644_curclass, rx644_start[3]
    set rx644_bstack, rx644_start[4]
    set $I19, rx644_start[5]
    store_lex unicode:"$\x{a2}", rx644_cur
    length rx644_eos, rx644_tgt
    eq $I19, 1, rx644_restart1472
    gt rx644_pos, rx644_eos, rx644_fail1473
    repr_get_attr_int $I11, self, rx644_curclass, "$!from"
    ne $I11, -1, rxscan645_done1479
    goto rxscan645_scan1478
  rxscan645_loop1477:
    inc rx644_pos
    gt rx644_pos, rx644_eos, rx644_fail1473
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!from", rx644_pos
  rxscan645_scan1478:
    nqp_rxmark rx644_bstack, rxscan645_loop1477, rx644_pos, 0
  rxscan645_done1479:
    repr_bind_attr_int rx644_cur, rx644_curclass, "$!pos", rx644_pos
    $P11 = rx644_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx644_curclass, "$!pos"
    lt $I11, 0, rx644_fail1473
    nqp_rxmark rx644_bstack, rxsubrule646_pass1480, -1, 0
  rxsubrule646_pass1480:
    rx644_cstack = rx644_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx644_pos, $P11, rx644_curclass, "$!pos"
    rx644_cur."!cursor_pass"(rx644_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx644_cur)
  rx644_restart1472:
    repr_get_attr_obj rx644_cstack, rx644_cur, rx644_curclass, "$!cstack"
  rx644_fail1473:
    unless rx644_bstack, rx644_done1471
    pop $I19, rx644_bstack
    if_null rx644_cstack, rx644_cstack_done1476
    unless rx644_cstack, rx644_cstack_done1476
    dec $I19
    set $P11, rx644_cstack[$I19]
  rx644_cstack_done1476:
    pop rx644_rep, rx644_bstack
    pop rx644_pos, rx644_bstack
    pop $I19, rx644_bstack
    lt rx644_pos, -1, rx644_done1471
    lt rx644_pos, 0, rx644_fail1473
    eq $I19, 0, rx644_fail1473
    nqp_islist $I20, rx644_cstack
    unless $I20, rx644_jump1474
    elements $I18, rx644_bstack
    le $I18, 0, rx644_cut1475
    dec $I18
    set $I18, rx644_bstack[$I18]
  rx644_cut1475:
    assign rx644_cstack, $I18
  rx644_jump1474:
    jump $I19
  rx644_done1471:
    rx644_cur."!cursor_fail"()
    .return (rx644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_87_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx647_start
    .local string rx647_tgt
    .local int rx647_pos
    .local int rx647_off
    .local int rx647_eos
    .local int rx647_rep
    .local pmc rx647_cur
    .local pmc rx647_curclass
    .local pmc rx647_bstack
    .local pmc rx647_cstack
    rx647_start = self."!cursor_start_all"()
    set rx647_cur, rx647_start[0]
    set rx647_tgt, rx647_start[1]
    set rx647_pos, rx647_start[2]
    set rx647_curclass, rx647_start[3]
    set rx647_bstack, rx647_start[4]
    set $I19, rx647_start[5]
    store_lex unicode:"$\x{a2}", rx647_cur
    length rx647_eos, rx647_tgt
    eq $I19, 1, rx647_restart1483
    gt rx647_pos, rx647_eos, rx647_fail1484
    repr_get_attr_int $I11, self, rx647_curclass, "$!from"
    ne $I11, -1, rxscan648_done1490
    goto rxscan648_scan1489
  rxscan648_loop1488:
    inc rx647_pos
    gt rx647_pos, rx647_eos, rx647_fail1484
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!from", rx647_pos
  rxscan648_scan1489:
    nqp_rxmark rx647_bstack, rxscan648_loop1488, rx647_pos, 0
  rxscan648_done1490:
    repr_bind_attr_int rx647_cur, rx647_curclass, "$!pos", rx647_pos
    $P11 = rx647_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx647_curclass, "$!pos"
    lt $I11, 0, rx647_fail1484
    nqp_rxmark rx647_bstack, rxsubrule649_pass1491, -1, 0
  rxsubrule649_pass1491:
    rx647_cstack = rx647_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx647_pos, $P11, rx647_curclass, "$!pos"
    rx647_cur."!cursor_pass"(rx647_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx647_cur)
  rx647_restart1483:
    repr_get_attr_obj rx647_cstack, rx647_cur, rx647_curclass, "$!cstack"
  rx647_fail1484:
    unless rx647_bstack, rx647_done1482
    pop $I19, rx647_bstack
    if_null rx647_cstack, rx647_cstack_done1487
    unless rx647_cstack, rx647_cstack_done1487
    dec $I19
    set $P11, rx647_cstack[$I19]
  rx647_cstack_done1487:
    pop rx647_rep, rx647_bstack
    pop rx647_pos, rx647_bstack
    pop $I19, rx647_bstack
    lt rx647_pos, -1, rx647_done1482
    lt rx647_pos, 0, rx647_fail1484
    eq $I19, 0, rx647_fail1484
    nqp_islist $I20, rx647_cstack
    unless $I20, rx647_jump1485
    elements $I18, rx647_bstack
    le $I18, 0, rx647_cut1486
    dec $I18
    set $I18, rx647_bstack[$I18]
  rx647_cut1486:
    assign rx647_cstack, $I18
  rx647_jump1485:
    jump $I19
  rx647_done1482:
    rx647_cur."!cursor_fail"()
    .return (rx647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_88_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx650_start
    .local string rx650_tgt
    .local int rx650_pos
    .local int rx650_off
    .local int rx650_eos
    .local int rx650_rep
    .local pmc rx650_cur
    .local pmc rx650_curclass
    .local pmc rx650_bstack
    .local pmc rx650_cstack
    rx650_start = self."!cursor_start_all"()
    set rx650_cur, rx650_start[0]
    set rx650_tgt, rx650_start[1]
    set rx650_pos, rx650_start[2]
    set rx650_curclass, rx650_start[3]
    set rx650_bstack, rx650_start[4]
    set $I19, rx650_start[5]
    store_lex unicode:"$\x{a2}", rx650_cur
    length rx650_eos, rx650_tgt
    eq $I19, 1, rx650_restart1494
    gt rx650_pos, rx650_eos, rx650_fail1495
    repr_get_attr_int $I11, self, rx650_curclass, "$!from"
    ne $I11, -1, rxscan651_done1501
    goto rxscan651_scan1500
  rxscan651_loop1499:
    inc rx650_pos
    gt rx650_pos, rx650_eos, rx650_fail1495
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!from", rx650_pos
  rxscan651_scan1500:
    nqp_rxmark rx650_bstack, rxscan651_loop1499, rx650_pos, 0
  rxscan651_done1501:
    repr_bind_attr_int rx650_cur, rx650_curclass, "$!pos", rx650_pos
    $P11 = rx650_cur."variable"()
    repr_get_attr_int $I11, $P11, rx650_curclass, "$!pos"
    lt $I11, 0, rx650_fail1495
    nqp_rxmark rx650_bstack, rxsubrule652_pass1502, -1, 0
  rxsubrule652_pass1502:
    rx650_cstack = rx650_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx650_pos, $P11, rx650_curclass, "$!pos"
    rx650_cur."!cursor_pass"(rx650_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx650_cur)
  rx650_restart1494:
    repr_get_attr_obj rx650_cstack, rx650_cur, rx650_curclass, "$!cstack"
  rx650_fail1495:
    unless rx650_bstack, rx650_done1493
    pop $I19, rx650_bstack
    if_null rx650_cstack, rx650_cstack_done1498
    unless rx650_cstack, rx650_cstack_done1498
    dec $I19
    set $P11, rx650_cstack[$I19]
  rx650_cstack_done1498:
    pop rx650_rep, rx650_bstack
    pop rx650_pos, rx650_bstack
    pop $I19, rx650_bstack
    lt rx650_pos, -1, rx650_done1493
    lt rx650_pos, 0, rx650_fail1495
    eq $I19, 0, rx650_fail1495
    nqp_islist $I20, rx650_cstack
    unless $I20, rx650_jump1496
    elements $I18, rx650_bstack
    le $I18, 0, rx650_cut1497
    dec $I18
    set $I18, rx650_bstack[$I18]
  rx650_cut1497:
    assign rx650_cstack, $I18
  rx650_jump1496:
    jump $I19
  rx650_done1493:
    rx650_cur."!cursor_fail"()
    .return (rx650_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_89_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 932
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx653_start
    .local string rx653_tgt
    .local int rx653_pos
    .local int rx653_off
    .local int rx653_eos
    .local int rx653_rep
    .local pmc rx653_cur
    .local pmc rx653_curclass
    .local pmc rx653_bstack
    .local pmc rx653_cstack
    rx653_start = self."!cursor_start_all"()
    set rx653_cur, rx653_start[0]
    set rx653_tgt, rx653_start[1]
    set rx653_pos, rx653_start[2]
    set rx653_curclass, rx653_start[3]
    set rx653_bstack, rx653_start[4]
    set $I19, rx653_start[5]
    store_lex unicode:"$\x{a2}", rx653_cur
    length rx653_eos, rx653_tgt
    eq $I19, 1, rx653_restart1505
    gt rx653_pos, rx653_eos, rx653_fail1506
    repr_get_attr_int $I11, self, rx653_curclass, "$!from"
    ne $I11, -1, rxscan654_done1512
    goto rxscan654_scan1511
  rxscan654_loop1510:
    inc rx653_pos
    gt rx653_pos, rx653_eos, rx653_fail1506
    repr_bind_attr_int rx653_cur, rx653_curclass, "$!from", rx653_pos
  rxscan654_scan1511:
    nqp_rxmark rx653_bstack, rxscan654_loop1510, rx653_pos, 0
  rxscan654_done1512:
    repr_bind_attr_int rx653_cur, rx653_curclass, "$!pos", rx653_pos
    $P11 = rx653_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx653_curclass, "$!pos"
    lt $I11, 0, rx653_fail1506
    nqp_rxmark rx653_bstack, rxsubrule655_pass1513, -1, 0
  rxsubrule655_pass1513:
    rx653_cstack = rx653_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx653_pos, $P11, rx653_curclass, "$!pos"
    rx653_cur."!cursor_pass"(rx653_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx653_cur)
  rx653_restart1505:
    repr_get_attr_obj rx653_cstack, rx653_cur, rx653_curclass, "$!cstack"
  rx653_fail1506:
    unless rx653_bstack, rx653_done1504
    pop $I19, rx653_bstack
    if_null rx653_cstack, rx653_cstack_done1509
    unless rx653_cstack, rx653_cstack_done1509
    dec $I19
    set $P11, rx653_cstack[$I19]
  rx653_cstack_done1509:
    pop rx653_rep, rx653_bstack
    pop rx653_pos, rx653_bstack
    pop $I19, rx653_bstack
    lt rx653_pos, -1, rx653_done1504
    lt rx653_pos, 0, rx653_fail1506
    eq $I19, 0, rx653_fail1506
    nqp_islist $I20, rx653_cstack
    unless $I20, rx653_jump1507
    elements $I18, rx653_bstack
    le $I18, 0, rx653_cut1508
    dec $I18
    set $I18, rx653_bstack[$I18]
  rx653_cut1508:
    assign rx653_cstack, $I18
  rx653_jump1507:
    jump $I19
  rx653_done1504:
    rx653_cur."!cursor_fail"()
    .return (rx653_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_90_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 933
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx656_start
    .local string rx656_tgt
    .local int rx656_pos
    .local int rx656_off
    .local int rx656_eos
    .local int rx656_rep
    .local pmc rx656_cur
    .local pmc rx656_curclass
    .local pmc rx656_bstack
    .local pmc rx656_cstack
    rx656_start = self."!cursor_start_all"()
    set rx656_cur, rx656_start[0]
    set rx656_tgt, rx656_start[1]
    set rx656_pos, rx656_start[2]
    set rx656_curclass, rx656_start[3]
    set rx656_bstack, rx656_start[4]
    set $I19, rx656_start[5]
    store_lex unicode:"$\x{a2}", rx656_cur
    length rx656_eos, rx656_tgt
    eq $I19, 1, rx656_restart1516
    gt rx656_pos, rx656_eos, rx656_fail1517
    repr_get_attr_int $I11, self, rx656_curclass, "$!from"
    ne $I11, -1, rxscan657_done1523
    goto rxscan657_scan1522
  rxscan657_loop1521:
    inc rx656_pos
    gt rx656_pos, rx656_eos, rx656_fail1517
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!from", rx656_pos
  rxscan657_scan1522:
    nqp_rxmark rx656_bstack, rxscan657_loop1521, rx656_pos, 0
  rxscan657_done1523:
    repr_bind_attr_int rx656_cur, rx656_curclass, "$!pos", rx656_pos
    $P11 = rx656_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx656_curclass, "$!pos"
    lt $I11, 0, rx656_fail1517
    nqp_rxmark rx656_bstack, rxsubrule658_pass1524, -1, 0
  rxsubrule658_pass1524:
    rx656_cstack = rx656_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx656_pos, $P11, rx656_curclass, "$!pos"
    rx656_cur."!cursor_pass"(rx656_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx656_cur)
  rx656_restart1516:
    repr_get_attr_obj rx656_cstack, rx656_cur, rx656_curclass, "$!cstack"
  rx656_fail1517:
    unless rx656_bstack, rx656_done1515
    pop $I19, rx656_bstack
    if_null rx656_cstack, rx656_cstack_done1520
    unless rx656_cstack, rx656_cstack_done1520
    dec $I19
    set $P11, rx656_cstack[$I19]
  rx656_cstack_done1520:
    pop rx656_rep, rx656_bstack
    pop rx656_pos, rx656_bstack
    pop $I19, rx656_bstack
    lt rx656_pos, -1, rx656_done1515
    lt rx656_pos, 0, rx656_fail1517
    eq $I19, 0, rx656_fail1517
    nqp_islist $I20, rx656_cstack
    unless $I20, rx656_jump1518
    elements $I18, rx656_bstack
    le $I18, 0, rx656_cut1519
    dec $I18
    set $I18, rx656_bstack[$I18]
  rx656_cut1519:
    assign rx656_cstack, $I18
  rx656_jump1518:
    jump $I19
  rx656_done1515:
    rx656_cur."!cursor_fail"()
    .return (rx656_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_91_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 934
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx659_start
    .local string rx659_tgt
    .local int rx659_pos
    .local int rx659_off
    .local int rx659_eos
    .local int rx659_rep
    .local pmc rx659_cur
    .local pmc rx659_curclass
    .local pmc rx659_bstack
    .local pmc rx659_cstack
    rx659_start = self."!cursor_start_all"()
    set rx659_cur, rx659_start[0]
    set rx659_tgt, rx659_start[1]
    set rx659_pos, rx659_start[2]
    set rx659_curclass, rx659_start[3]
    set rx659_bstack, rx659_start[4]
    set $I19, rx659_start[5]
    store_lex unicode:"$\x{a2}", rx659_cur
    length rx659_eos, rx659_tgt
    eq $I19, 1, rx659_restart1527
    gt rx659_pos, rx659_eos, rx659_fail1528
    repr_get_attr_int $I11, self, rx659_curclass, "$!from"
    ne $I11, -1, rxscan660_done1534
    goto rxscan660_scan1533
  rxscan660_loop1532:
    inc rx659_pos
    gt rx659_pos, rx659_eos, rx659_fail1528
    repr_bind_attr_int rx659_cur, rx659_curclass, "$!from", rx659_pos
  rxscan660_scan1533:
    nqp_rxmark rx659_bstack, rxscan660_loop1532, rx659_pos, 0
  rxscan660_done1534:
    repr_bind_attr_int rx659_cur, rx659_curclass, "$!pos", rx659_pos
    $P11 = rx659_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx659_curclass, "$!pos"
    lt $I11, 0, rx659_fail1528
    nqp_rxmark rx659_bstack, rxsubrule661_pass1535, -1, 0
  rxsubrule661_pass1535:
    rx659_cstack = rx659_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx659_pos, $P11, rx659_curclass, "$!pos"
    rx659_cur."!cursor_pass"(rx659_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx659_cur)
  rx659_restart1527:
    repr_get_attr_obj rx659_cstack, rx659_cur, rx659_curclass, "$!cstack"
  rx659_fail1528:
    unless rx659_bstack, rx659_done1526
    pop $I19, rx659_bstack
    if_null rx659_cstack, rx659_cstack_done1531
    unless rx659_cstack, rx659_cstack_done1531
    dec $I19
    set $P11, rx659_cstack[$I19]
  rx659_cstack_done1531:
    pop rx659_rep, rx659_bstack
    pop rx659_pos, rx659_bstack
    pop $I19, rx659_bstack
    lt rx659_pos, -1, rx659_done1526
    lt rx659_pos, 0, rx659_fail1528
    eq $I19, 0, rx659_fail1528
    nqp_islist $I20, rx659_cstack
    unless $I20, rx659_jump1529
    elements $I18, rx659_bstack
    le $I18, 0, rx659_cut1530
    dec $I18
    set $I18, rx659_bstack[$I18]
  rx659_cut1530:
    assign rx659_cstack, $I18
  rx659_jump1529:
    jump $I19
  rx659_done1526:
    rx659_cur."!cursor_fail"()
    .return (rx659_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_92_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 935
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_93_1382484127.52628' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_94_1382484127.52628' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx662_start
    .local string rx662_tgt
    .local int rx662_pos
    .local int rx662_off
    .local int rx662_eos
    .local int rx662_rep
    .local pmc rx662_cur
    .local pmc rx662_curclass
    .local pmc rx662_bstack
    .local pmc rx662_cstack
    rx662_start = self."!cursor_start_all"()
    set rx662_cur, rx662_start[0]
    set rx662_tgt, rx662_start[1]
    set rx662_pos, rx662_start[2]
    set rx662_curclass, rx662_start[3]
    set rx662_bstack, rx662_start[4]
    set $I19, rx662_start[5]
    store_lex unicode:"$\x{a2}", rx662_cur
    length rx662_eos, rx662_tgt
    eq $I19, 1, rx662_restart1538
    gt rx662_pos, rx662_eos, rx662_fail1539
    repr_get_attr_int $I11, self, rx662_curclass, "$!from"
    ne $I11, -1, rxscan663_done1545
    goto rxscan663_scan1544
  rxscan663_loop1543:
    inc rx662_pos
    gt rx662_pos, rx662_eos, rx662_fail1539
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!from", rx662_pos
  rxscan663_scan1544:
    nqp_rxmark rx662_bstack, rxscan663_loop1543, rx662_pos, 0
  rxscan663_done1545:
    .const 'Sub' $P5001 = 'cuid_93_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1539
    .const 'Sub' $P5002 = 'cuid_94_1382484127.52628' 
    capture_lex $P5002
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    ge $I11, 0, rx662_fail1539
    repr_bind_attr_int rx662_cur, rx662_curclass, "$!pos", rx662_pos
    $P11 = rx662_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx662_curclass, "$!pos"
    lt $I11, 0, rx662_fail1539
    nqp_rxmark rx662_bstack, rxsubrule671_pass1575, -1, 0
  rxsubrule671_pass1575:
    rx662_cstack = rx662_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx662_pos, $P11, rx662_curclass, "$!pos"
    rx662_cur."!cursor_pass"(rx662_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx662_cur)
  rx662_restart1538:
    repr_get_attr_obj rx662_cstack, rx662_cur, rx662_curclass, "$!cstack"
  rx662_fail1539:
    unless rx662_bstack, rx662_done1537
    pop $I19, rx662_bstack
    if_null rx662_cstack, rx662_cstack_done1542
    unless rx662_cstack, rx662_cstack_done1542
    dec $I19
    set $P11, rx662_cstack[$I19]
  rx662_cstack_done1542:
    pop rx662_rep, rx662_bstack
    pop rx662_pos, rx662_bstack
    pop $I19, rx662_bstack
    lt rx662_pos, -1, rx662_done1537
    lt rx662_pos, 0, rx662_fail1539
    eq $I19, 0, rx662_fail1539
    nqp_islist $I20, rx662_cstack
    unless $I20, rx662_jump1540
    elements $I18, rx662_bstack
    le $I18, 0, rx662_cut1541
    dec $I18
    set $I18, rx662_bstack[$I18]
  rx662_cut1541:
    assign rx662_cstack, $I18
  rx662_jump1540:
    jump $I19
  rx662_done1537:
    rx662_cur."!cursor_fail"()
    .return (rx662_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_93_1382484127.52628") :anon :lex :outer("cuid_92_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx664_start
    .local string rx664_tgt
    .local int rx664_pos
    .local int rx664_off
    .local int rx664_eos
    .local int rx664_rep
    .local pmc rx664_cur
    .local pmc rx664_curclass
    .local pmc rx664_bstack
    .local pmc rx664_cstack
    rx664_start = self."!cursor_start_all"()
    set rx664_cur, rx664_start[0]
    set rx664_tgt, rx664_start[1]
    set rx664_pos, rx664_start[2]
    set rx664_curclass, rx664_start[3]
    set rx664_bstack, rx664_start[4]
    set $I19, rx664_start[5]
    store_lex unicode:"$\x{a2}", rx664_cur
    length rx664_eos, rx664_tgt
    eq $I19, 1, rx664_restart1548
    gt rx664_pos, rx664_eos, rx664_fail1549
    repr_get_attr_int $I11, self, rx664_curclass, "$!from"
    ne $I11, -1, rxscan665_done1555
    goto rxscan665_scan1554
  rxscan665_loop1553:
    inc rx664_pos
    gt rx664_pos, rx664_eos, rx664_fail1549
    repr_bind_attr_int rx664_cur, rx664_curclass, "$!from", rx664_pos
  rxscan665_scan1554:
    nqp_rxmark rx664_bstack, rxscan665_loop1553, rx664_pos, 0
  rxscan665_done1555:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt666_01557
    nqp_push_label $P11, alt666_11558
    nqp_push_label $P11, alt666_21559
    nqp_rxmark rx664_bstack, alt666_end1556, -1, 0
    rx664_cur."!alt"(rx664_pos, "alt_nfa__18_1382484130.23742", $P11)
    goto rx664_fail1549
  alt666_01557:
    add $I11, rx664_pos, 5
    gt $I11, rx664_eos, rx664_fail1549
    substr $S10, rx664_tgt, rx664_pos, 5
    ne $S10, ucs4:"multi", rx664_fail1549
    add rx664_pos, 5
    goto alt666_end1556
  alt666_11558:
    add $I11, rx664_pos, 5
    gt $I11, rx664_eos, rx664_fail1549
    substr $S10, rx664_tgt, rx664_pos, 5
    ne $S10, ucs4:"proto", rx664_fail1549
    add rx664_pos, 5
    goto alt666_end1556
  alt666_21559:
    add $I11, rx664_pos, 4
    gt $I11, rx664_eos, rx664_fail1549
    substr $S10, rx664_tgt, rx664_pos, 4
    ne $S10, ucs4:"only", rx664_fail1549
    add rx664_pos, 4
    goto alt666_end1556
  alt666_end1556:
    rx664_cur."!cursor_pass"(rx664_pos, 'backtrack'=>1)
    .return (rx664_cur)
  rx664_restart1548:
    repr_get_attr_obj rx664_cstack, rx664_cur, rx664_curclass, "$!cstack"
  rx664_fail1549:
    unless rx664_bstack, rx664_done1547
    pop $I19, rx664_bstack
    if_null rx664_cstack, rx664_cstack_done1552
    unless rx664_cstack, rx664_cstack_done1552
    dec $I19
    set $P11, rx664_cstack[$I19]
  rx664_cstack_done1552:
    pop rx664_rep, rx664_bstack
    pop rx664_pos, rx664_bstack
    pop $I19, rx664_bstack
    lt rx664_pos, -1, rx664_done1547
    lt rx664_pos, 0, rx664_fail1549
    eq $I19, 0, rx664_fail1549
    nqp_islist $I20, rx664_cstack
    unless $I20, rx664_jump1550
    elements $I18, rx664_bstack
    le $I18, 0, rx664_cut1551
    dec $I18
    set $I18, rx664_bstack[$I18]
  rx664_cut1551:
    assign rx664_cstack, $I18
  rx664_jump1550:
    jump $I19
  rx664_done1547:
    rx664_cur."!cursor_fail"()
    .return (rx664_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_94_1382484127.52628") :anon :lex :outer("cuid_92_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx667_start
    .local string rx667_tgt
    .local int rx667_pos
    .local int rx667_off
    .local int rx667_eos
    .local int rx667_rep
    .local pmc rx667_cur
    .local pmc rx667_curclass
    .local pmc rx667_bstack
    .local pmc rx667_cstack
    rx667_start = self."!cursor_start_all"()
    set rx667_cur, rx667_start[0]
    set rx667_tgt, rx667_start[1]
    set rx667_pos, rx667_start[2]
    set rx667_curclass, rx667_start[3]
    set rx667_bstack, rx667_start[4]
    set $I19, rx667_start[5]
    store_lex unicode:"$\x{a2}", rx667_cur
    length rx667_eos, rx667_tgt
    eq $I19, 1, rx667_restart1562
    gt rx667_pos, rx667_eos, rx667_fail1563
    repr_get_attr_int $I11, self, rx667_curclass, "$!from"
    ne $I11, -1, rxscan668_done1569
    goto rxscan668_scan1568
  rxscan668_loop1567:
    inc rx667_pos
    index rx667_pos, rx667_tgt, ucs4:"proto", rx667_pos
    eq rx667_pos, -1, rx667_fail1563
    gt rx667_pos, rx667_eos, rx667_fail1563
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!from", rx667_pos
  rxscan668_scan1568:
    nqp_rxmark rx667_bstack, rxscan668_loop1567, rx667_pos, 0
  rxscan668_done1569:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1563
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"proto", rx667_fail1563
    add rx667_pos, 5
    repr_bind_attr_int rx667_cur, rx667_curclass, "$!pos", rx667_pos
    $P11 = rx667_cur."ws"()
    repr_get_attr_int $I11, $P11, rx667_curclass, "$!pos"
    lt $I11, 0, rx667_fail1563
    repr_get_attr_int rx667_pos, $P11, rx667_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt670_01572
    nqp_push_label $P11, alt670_11573
    nqp_push_label $P11, alt670_21574
    nqp_rxmark rx667_bstack, alt670_end1571, -1, 0
    rx667_cur."!alt"(rx667_pos, "alt_nfa__19_1382484130.25001", $P11)
    goto rx667_fail1563
  alt670_01572:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1563
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"regex", rx667_fail1563
    add rx667_pos, 5
    goto alt670_end1571
  alt670_11573:
    add $I11, rx667_pos, 5
    gt $I11, rx667_eos, rx667_fail1563
    substr $S10, rx667_tgt, rx667_pos, 5
    ne $S10, ucs4:"token", rx667_fail1563
    add rx667_pos, 5
    goto alt670_end1571
  alt670_21574:
    add $I11, rx667_pos, 4
    gt $I11, rx667_eos, rx667_fail1563
    substr $S10, rx667_tgt, rx667_pos, 4
    ne $S10, ucs4:"rule", rx667_fail1563
    add rx667_pos, 4
    goto alt670_end1571
  alt670_end1571:
    nqp_rxcommit rx667_bstack, alt670_end1571
    rx667_cur."!cursor_pass"(rx667_pos, 'backtrack'=>1)
    .return (rx667_cur)
  rx667_restart1562:
    repr_get_attr_obj rx667_cstack, rx667_cur, rx667_curclass, "$!cstack"
  rx667_fail1563:
    unless rx667_bstack, rx667_done1561
    pop $I19, rx667_bstack
    if_null rx667_cstack, rx667_cstack_done1566
    unless rx667_cstack, rx667_cstack_done1566
    dec $I19
    set $P11, rx667_cstack[$I19]
  rx667_cstack_done1566:
    pop rx667_rep, rx667_bstack
    pop rx667_pos, rx667_bstack
    pop $I19, rx667_bstack
    lt rx667_pos, -1, rx667_done1561
    lt rx667_pos, 0, rx667_fail1563
    eq $I19, 0, rx667_fail1563
    nqp_islist $I20, rx667_cstack
    unless $I20, rx667_jump1564
    elements $I18, rx667_bstack
    le $I18, 0, rx667_cut1565
    dec $I18
    set $I18, rx667_bstack[$I18]
  rx667_cut1565:
    assign rx667_cstack, $I18
  rx667_jump1564:
    jump $I19
  rx667_done1561:
    rx667_cur."!cursor_fail"()
    .return (rx667_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_95_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 940
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx672_start
    .local string rx672_tgt
    .local int rx672_pos
    .local int rx672_off
    .local int rx672_eos
    .local int rx672_rep
    .local pmc rx672_cur
    .local pmc rx672_curclass
    .local pmc rx672_bstack
    .local pmc rx672_cstack
    rx672_start = self."!cursor_start_all"()
    set rx672_cur, rx672_start[0]
    set rx672_tgt, rx672_start[1]
    set rx672_pos, rx672_start[2]
    set rx672_curclass, rx672_start[3]
    set rx672_bstack, rx672_start[4]
    set $I19, rx672_start[5]
    store_lex unicode:"$\x{a2}", rx672_cur
    length rx672_eos, rx672_tgt
    eq $I19, 1, rx672_restart1578
    gt rx672_pos, rx672_eos, rx672_fail1579
    repr_get_attr_int $I11, self, rx672_curclass, "$!from"
    ne $I11, -1, rxscan673_done1585
    goto rxscan673_scan1584
  rxscan673_loop1583:
    inc rx672_pos
    gt rx672_pos, rx672_eos, rx672_fail1579
    repr_bind_attr_int rx672_cur, rx672_curclass, "$!from", rx672_pos
  rxscan673_scan1584:
    nqp_rxmark rx672_bstack, rxscan673_loop1583, rx672_pos, 0
  rxscan673_done1585:
    repr_bind_attr_int rx672_cur, rx672_curclass, "$!pos", rx672_pos
    $P11 = rx672_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx672_curclass, "$!pos"
    lt $I11, 0, rx672_fail1579
    nqp_rxmark rx672_bstack, rxsubrule674_pass1586, -1, 0
  rxsubrule674_pass1586:
    rx672_cstack = rx672_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx672_pos, $P11, rx672_curclass, "$!pos"
    rx672_cur."!cursor_pass"(rx672_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx672_cur)
  rx672_restart1578:
    repr_get_attr_obj rx672_cstack, rx672_cur, rx672_curclass, "$!cstack"
  rx672_fail1579:
    unless rx672_bstack, rx672_done1577
    pop $I19, rx672_bstack
    if_null rx672_cstack, rx672_cstack_done1582
    unless rx672_cstack, rx672_cstack_done1582
    dec $I19
    set $P11, rx672_cstack[$I19]
  rx672_cstack_done1582:
    pop rx672_rep, rx672_bstack
    pop rx672_pos, rx672_bstack
    pop $I19, rx672_bstack
    lt rx672_pos, -1, rx672_done1577
    lt rx672_pos, 0, rx672_fail1579
    eq $I19, 0, rx672_fail1579
    nqp_islist $I20, rx672_cstack
    unless $I20, rx672_jump1580
    elements $I18, rx672_bstack
    le $I18, 0, rx672_cut1581
    dec $I18
    set $I18, rx672_bstack[$I18]
  rx672_cut1581:
    assign rx672_cstack, $I18
  rx672_jump1580:
    jump $I19
  rx672_done1577:
    rx672_cur."!cursor_fail"()
    .return (rx672_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_96_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 941
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx675_start
    .local string rx675_tgt
    .local int rx675_pos
    .local int rx675_off
    .local int rx675_eos
    .local int rx675_rep
    .local pmc rx675_cur
    .local pmc rx675_curclass
    .local pmc rx675_bstack
    .local pmc rx675_cstack
    rx675_start = self."!cursor_start_all"()
    set rx675_cur, rx675_start[0]
    set rx675_tgt, rx675_start[1]
    set rx675_pos, rx675_start[2]
    set rx675_curclass, rx675_start[3]
    set rx675_bstack, rx675_start[4]
    set $I19, rx675_start[5]
    store_lex unicode:"$\x{a2}", rx675_cur
    length rx675_eos, rx675_tgt
    eq $I19, 1, rx675_restart1589
    gt rx675_pos, rx675_eos, rx675_fail1590
    repr_get_attr_int $I11, self, rx675_curclass, "$!from"
    ne $I11, -1, rxscan676_done1596
    goto rxscan676_scan1595
  rxscan676_loop1594:
    inc rx675_pos
    gt rx675_pos, rx675_eos, rx675_fail1590
    repr_bind_attr_int rx675_cur, rx675_curclass, "$!from", rx675_pos
  rxscan676_scan1595:
    nqp_rxmark rx675_bstack, rxscan676_loop1594, rx675_pos, 0
  rxscan676_done1596:
    repr_bind_attr_int rx675_cur, rx675_curclass, "$!pos", rx675_pos
    $P11 = rx675_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx675_curclass, "$!pos"
    lt $I11, 0, rx675_fail1590
    nqp_rxmark rx675_bstack, rxsubrule677_pass1597, -1, 0
  rxsubrule677_pass1597:
    rx675_cstack = rx675_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx675_pos, $P11, rx675_curclass, "$!pos"
    rx675_cur."!cursor_pass"(rx675_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx675_cur)
  rx675_restart1589:
    repr_get_attr_obj rx675_cstack, rx675_cur, rx675_curclass, "$!cstack"
  rx675_fail1590:
    unless rx675_bstack, rx675_done1588
    pop $I19, rx675_bstack
    if_null rx675_cstack, rx675_cstack_done1593
    unless rx675_cstack, rx675_cstack_done1593
    dec $I19
    set $P11, rx675_cstack[$I19]
  rx675_cstack_done1593:
    pop rx675_rep, rx675_bstack
    pop rx675_pos, rx675_bstack
    pop $I19, rx675_bstack
    lt rx675_pos, -1, rx675_done1588
    lt rx675_pos, 0, rx675_fail1590
    eq $I19, 0, rx675_fail1590
    nqp_islist $I20, rx675_cstack
    unless $I20, rx675_jump1591
    elements $I18, rx675_bstack
    le $I18, 0, rx675_cut1592
    dec $I18
    set $I18, rx675_bstack[$I18]
  rx675_cut1592:
    assign rx675_cstack, $I18
  rx675_jump1591:
    jump $I19
  rx675_done1588:
    rx675_cur."!cursor_fail"()
    .return (rx675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_97_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 942
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx678_start
    .local string rx678_tgt
    .local int rx678_pos
    .local int rx678_off
    .local int rx678_eos
    .local int rx678_rep
    .local pmc rx678_cur
    .local pmc rx678_curclass
    .local pmc rx678_bstack
    .local pmc rx678_cstack
    rx678_start = self."!cursor_start_all"()
    set rx678_cur, rx678_start[0]
    set rx678_tgt, rx678_start[1]
    set rx678_pos, rx678_start[2]
    set rx678_curclass, rx678_start[3]
    set rx678_bstack, rx678_start[4]
    set $I19, rx678_start[5]
    store_lex unicode:"$\x{a2}", rx678_cur
    length rx678_eos, rx678_tgt
    eq $I19, 1, rx678_restart1600
    gt rx678_pos, rx678_eos, rx678_fail1601
    repr_get_attr_int $I11, self, rx678_curclass, "$!from"
    ne $I11, -1, rxscan679_done1607
    goto rxscan679_scan1606
  rxscan679_loop1605:
    inc rx678_pos
    gt rx678_pos, rx678_eos, rx678_fail1601
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!from", rx678_pos
  rxscan679_scan1606:
    nqp_rxmark rx678_bstack, rxscan679_loop1605, rx678_pos, 0
  rxscan679_done1607:
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!pos", rx678_pos
    $P11 = rx678_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx678_curclass, "$!pos"
    lt $I11, 0, rx678_fail1601
    repr_bind_attr_int rx678_cur, rx678_curclass, "$!pos", rx678_pos
    $P11 = rx678_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx678_curclass, "$!pos"
    lt $I11, 0, rx678_fail1601
    nqp_rxmark rx678_bstack, rxsubrule680_pass1608, -1, 0
  rxsubrule680_pass1608:
    rx678_cstack = rx678_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx678_pos, $P11, rx678_curclass, "$!pos"
    rx678_cur."!cursor_pass"(rx678_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx678_cur)
  rx678_restart1600:
    repr_get_attr_obj rx678_cstack, rx678_cur, rx678_curclass, "$!cstack"
  rx678_fail1601:
    unless rx678_bstack, rx678_done1599
    pop $I19, rx678_bstack
    if_null rx678_cstack, rx678_cstack_done1604
    unless rx678_cstack, rx678_cstack_done1604
    dec $I19
    set $P11, rx678_cstack[$I19]
  rx678_cstack_done1604:
    pop rx678_rep, rx678_bstack
    pop rx678_pos, rx678_bstack
    pop $I19, rx678_bstack
    lt rx678_pos, -1, rx678_done1599
    lt rx678_pos, 0, rx678_fail1601
    eq $I19, 0, rx678_fail1601
    nqp_islist $I20, rx678_cstack
    unless $I20, rx678_jump1602
    elements $I18, rx678_bstack
    le $I18, 0, rx678_cut1603
    dec $I18
    set $I18, rx678_bstack[$I18]
  rx678_cut1603:
    assign rx678_cstack, $I18
  rx678_jump1602:
    jump $I19
  rx678_done1599:
    rx678_cur."!cursor_fail"()
    .return (rx678_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_98_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_412_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx681_start
    .local string rx681_tgt
    .local int rx681_pos
    .local int rx681_off
    .local int rx681_eos
    .local int rx681_rep
    .local pmc rx681_cur
    .local pmc rx681_curclass
    .local pmc rx681_bstack
    .local pmc rx681_cstack
    rx681_start = self."!cursor_start_all"()
    set rx681_cur, rx681_start[0]
    set rx681_tgt, rx681_start[1]
    set rx681_pos, rx681_start[2]
    set rx681_curclass, rx681_start[3]
    set rx681_bstack, rx681_start[4]
    set $I19, rx681_start[5]
    store_lex unicode:"$\x{a2}", rx681_cur
    length rx681_eos, rx681_tgt
    eq $I19, 1, rx681_restart1611
    gt rx681_pos, rx681_eos, rx681_fail1612
    repr_get_attr_int $I11, self, rx681_curclass, "$!from"
    ne $I11, -1, rxscan682_done1618
    goto rxscan682_scan1617
  rxscan682_loop1616:
    inc rx681_pos
    gt rx681_pos, rx681_eos, rx681_fail1612
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!from", rx681_pos
  rxscan682_scan1617:
    nqp_rxmark rx681_bstack, rxscan682_loop1616, rx681_pos, 0
  rxscan682_done1618:
    nqp_rxmark rx681_bstack, rxcap683_fail1620, rx681_pos, 0
    add $I11, rx681_pos, 4
    gt $I11, rx681_eos, rx681_fail1612
    substr $S10, rx681_tgt, rx681_pos, 4
    ne $S10, ucs4:"last", rx681_fail1612
    add rx681_pos, 4
    nqp_rxpeek $I19, rx681_bstack, rxcap683_fail1620
    inc $I19
    set $I11, rx681_bstack[$I19]
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    $P11 = rx681_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx681_pos)
    rx681_cstack = rx681_cur."!cursor_capture"($P11, "sym")
    goto rxcap683_done1619
  rxcap683_fail1620:
    goto rx681_fail1612
  rxcap683_done1619:
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    $P11 = rx681_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx681_curclass, "$!pos"
    ge $I11, 0, rx681_fail1612
    repr_bind_attr_int rx681_cur, rx681_curclass, "$!pos", rx681_pos
    store_lex unicode:"$\x{a2}", rx681_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_412_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx681_cur."!cursor_pass"(rx681_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx681_cur)
  rx681_restart1611:
    repr_get_attr_obj rx681_cstack, rx681_cur, rx681_curclass, "$!cstack"
  rx681_fail1612:
    unless rx681_bstack, rx681_done1610
    pop $I19, rx681_bstack
    if_null rx681_cstack, rx681_cstack_done1615
    unless rx681_cstack, rx681_cstack_done1615
    dec $I19
    set $P11, rx681_cstack[$I19]
  rx681_cstack_done1615:
    pop rx681_rep, rx681_bstack
    pop rx681_pos, rx681_bstack
    pop $I19, rx681_bstack
    lt rx681_pos, -1, rx681_done1610
    lt rx681_pos, 0, rx681_fail1612
    eq $I19, 0, rx681_fail1612
    nqp_islist $I20, rx681_cstack
    unless $I20, rx681_jump1613
    elements $I18, rx681_bstack
    le $I18, 0, rx681_cut1614
    dec $I18
    set $I18, rx681_bstack[$I18]
  rx681_cut1614:
    assign rx681_cstack, $I18
  rx681_jump1613:
    jump $I19
  rx681_done1610:
    rx681_cur."!cursor_fail"()
    .return (rx681_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1382484127.52628") :anon :lex :outer("cuid_98_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 943

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_99_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 944
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_413_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx684_start
    .local string rx684_tgt
    .local int rx684_pos
    .local int rx684_off
    .local int rx684_eos
    .local int rx684_rep
    .local pmc rx684_cur
    .local pmc rx684_curclass
    .local pmc rx684_bstack
    .local pmc rx684_cstack
    rx684_start = self."!cursor_start_all"()
    set rx684_cur, rx684_start[0]
    set rx684_tgt, rx684_start[1]
    set rx684_pos, rx684_start[2]
    set rx684_curclass, rx684_start[3]
    set rx684_bstack, rx684_start[4]
    set $I19, rx684_start[5]
    store_lex unicode:"$\x{a2}", rx684_cur
    length rx684_eos, rx684_tgt
    eq $I19, 1, rx684_restart1623
    gt rx684_pos, rx684_eos, rx684_fail1624
    repr_get_attr_int $I11, self, rx684_curclass, "$!from"
    ne $I11, -1, rxscan685_done1630
    goto rxscan685_scan1629
  rxscan685_loop1628:
    inc rx684_pos
    gt rx684_pos, rx684_eos, rx684_fail1624
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!from", rx684_pos
  rxscan685_scan1629:
    nqp_rxmark rx684_bstack, rxscan685_loop1628, rx684_pos, 0
  rxscan685_done1630:
    nqp_rxmark rx684_bstack, rxcap686_fail1632, rx684_pos, 0
    add $I11, rx684_pos, 4
    gt $I11, rx684_eos, rx684_fail1624
    substr $S10, rx684_tgt, rx684_pos, 4
    ne $S10, ucs4:"next", rx684_fail1624
    add rx684_pos, 4
    nqp_rxpeek $I19, rx684_bstack, rxcap686_fail1632
    inc $I19
    set $I11, rx684_bstack[$I19]
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    $P11 = rx684_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx684_pos)
    rx684_cstack = rx684_cur."!cursor_capture"($P11, "sym")
    goto rxcap686_done1631
  rxcap686_fail1632:
    goto rx684_fail1624
  rxcap686_done1631:
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    $P11 = rx684_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx684_curclass, "$!pos"
    ge $I11, 0, rx684_fail1624
    repr_bind_attr_int rx684_cur, rx684_curclass, "$!pos", rx684_pos
    store_lex unicode:"$\x{a2}", rx684_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_413_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx684_cur."!cursor_pass"(rx684_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx684_cur)
  rx684_restart1623:
    repr_get_attr_obj rx684_cstack, rx684_cur, rx684_curclass, "$!cstack"
  rx684_fail1624:
    unless rx684_bstack, rx684_done1622
    pop $I19, rx684_bstack
    if_null rx684_cstack, rx684_cstack_done1627
    unless rx684_cstack, rx684_cstack_done1627
    dec $I19
    set $P11, rx684_cstack[$I19]
  rx684_cstack_done1627:
    pop rx684_rep, rx684_bstack
    pop rx684_pos, rx684_bstack
    pop $I19, rx684_bstack
    lt rx684_pos, -1, rx684_done1622
    lt rx684_pos, 0, rx684_fail1624
    eq $I19, 0, rx684_fail1624
    nqp_islist $I20, rx684_cstack
    unless $I20, rx684_jump1625
    elements $I18, rx684_bstack
    le $I18, 0, rx684_cut1626
    dec $I18
    set $I18, rx684_bstack[$I18]
  rx684_cut1626:
    assign rx684_cstack, $I18
  rx684_jump1625:
    jump $I19
  rx684_done1622:
    rx684_cur."!cursor_fail"()
    .return (rx684_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1382484127.52628") :anon :lex :outer("cuid_99_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 944

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_100_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 945
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_414_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx687_start
    .local string rx687_tgt
    .local int rx687_pos
    .local int rx687_off
    .local int rx687_eos
    .local int rx687_rep
    .local pmc rx687_cur
    .local pmc rx687_curclass
    .local pmc rx687_bstack
    .local pmc rx687_cstack
    rx687_start = self."!cursor_start_all"()
    set rx687_cur, rx687_start[0]
    set rx687_tgt, rx687_start[1]
    set rx687_pos, rx687_start[2]
    set rx687_curclass, rx687_start[3]
    set rx687_bstack, rx687_start[4]
    set $I19, rx687_start[5]
    store_lex unicode:"$\x{a2}", rx687_cur
    length rx687_eos, rx687_tgt
    eq $I19, 1, rx687_restart1635
    gt rx687_pos, rx687_eos, rx687_fail1636
    repr_get_attr_int $I11, self, rx687_curclass, "$!from"
    ne $I11, -1, rxscan688_done1642
    goto rxscan688_scan1641
  rxscan688_loop1640:
    inc rx687_pos
    gt rx687_pos, rx687_eos, rx687_fail1636
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!from", rx687_pos
  rxscan688_scan1641:
    nqp_rxmark rx687_bstack, rxscan688_loop1640, rx687_pos, 0
  rxscan688_done1642:
    nqp_rxmark rx687_bstack, rxcap689_fail1644, rx687_pos, 0
    add $I11, rx687_pos, 4
    gt $I11, rx687_eos, rx687_fail1636
    substr $S10, rx687_tgt, rx687_pos, 4
    ne $S10, ucs4:"redo", rx687_fail1636
    add rx687_pos, 4
    nqp_rxpeek $I19, rx687_bstack, rxcap689_fail1644
    inc $I19
    set $I11, rx687_bstack[$I19]
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx687_pos)
    rx687_cstack = rx687_cur."!cursor_capture"($P11, "sym")
    goto rxcap689_done1643
  rxcap689_fail1644:
    goto rx687_fail1636
  rxcap689_done1643:
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    $P11 = rx687_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx687_curclass, "$!pos"
    ge $I11, 0, rx687_fail1636
    repr_bind_attr_int rx687_cur, rx687_curclass, "$!pos", rx687_pos
    store_lex unicode:"$\x{a2}", rx687_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_414_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx687_cur."!cursor_pass"(rx687_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx687_cur)
  rx687_restart1635:
    repr_get_attr_obj rx687_cstack, rx687_cur, rx687_curclass, "$!cstack"
  rx687_fail1636:
    unless rx687_bstack, rx687_done1634
    pop $I19, rx687_bstack
    if_null rx687_cstack, rx687_cstack_done1639
    unless rx687_cstack, rx687_cstack_done1639
    dec $I19
    set $P11, rx687_cstack[$I19]
  rx687_cstack_done1639:
    pop rx687_rep, rx687_bstack
    pop rx687_pos, rx687_bstack
    pop $I19, rx687_bstack
    lt rx687_pos, -1, rx687_done1634
    lt rx687_pos, 0, rx687_fail1636
    eq $I19, 0, rx687_fail1636
    nqp_islist $I20, rx687_cstack
    unless $I20, rx687_jump1637
    elements $I18, rx687_bstack
    le $I18, 0, rx687_cut1638
    dec $I18
    set $I18, rx687_bstack[$I18]
  rx687_cut1638:
    assign rx687_cstack, $I18
  rx687_jump1637:
    jump $I19
  rx687_done1634:
    rx687_cur."!cursor_fail"()
    .return (rx687_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1382484127.52628") :anon :lex :outer("cuid_100_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 945

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_101_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 947
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx690_start
    .local string rx690_tgt
    .local int rx690_pos
    .local int rx690_off
    .local int rx690_eos
    .local int rx690_rep
    .local pmc rx690_cur
    .local pmc rx690_curclass
    .local pmc rx690_bstack
    .local pmc rx690_cstack
    rx690_start = self."!cursor_start_all"()
    set rx690_cur, rx690_start[0]
    set rx690_tgt, rx690_start[1]
    set rx690_pos, rx690_start[2]
    set rx690_curclass, rx690_start[3]
    set rx690_bstack, rx690_start[4]
    set $I19, rx690_start[5]
    store_lex unicode:"$\x{a2}", rx690_cur
    length rx690_eos, rx690_tgt
    eq $I19, 1, rx690_restart1647
    gt rx690_pos, rx690_eos, rx690_fail1648
    repr_get_attr_int $I11, self, rx690_curclass, "$!from"
    ne $I11, -1, rxscan691_done1654
    goto rxscan691_scan1653
  rxscan691_loop1652:
    inc rx690_pos
    gt rx690_pos, rx690_eos, rx690_fail1648
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!from", rx690_pos
  rxscan691_scan1653:
    nqp_rxmark rx690_bstack, rxscan691_loop1652, rx690_pos, 0
  rxscan691_done1654:
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1648
    nqp_rxmark rx690_bstack, rxsubrule692_pass1655, -1, 0
  rxsubrule692_pass1655:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    nqp_rxmark rx690_bstack, rxquantr693_done1657, rx690_pos, 0
  rxquantr693_loop1656:
    ge rx690_pos, rx690_eos, rx690_fail1648
    substr $S11, rx690_tgt, rx690_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx690_fail1648
    inc rx690_pos
    nqp_rxpeek $I19, rx690_bstack, rxquantr693_done1657
    inc $I19
    inc $I19
    set rx690_rep, rx690_bstack[$I19]
    nqp_rxcommit rx690_bstack, rxquantr693_done1657
    inc rx690_rep
    nqp_rxmark rx690_bstack, rxquantr693_done1657, rx690_pos, rx690_rep
    goto rxquantr693_loop1656
  rxquantr693_done1657:
    add $I11, rx690_pos, 2
    gt $I11, rx690_eos, rx690_fail1648
    substr $S10, rx690_tgt, rx690_pos, 2
    ne $S10, ucs4:"=>", rx690_fail1648
    add rx690_pos, 2
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."ws"()
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1648
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    repr_bind_attr_int rx690_cur, rx690_curclass, "$!pos", rx690_pos
    $P11 = rx690_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx690_curclass, "$!pos"
    lt $I11, 0, rx690_fail1648
    nqp_rxmark rx690_bstack, rxsubrule695_pass1659, -1, 0
  rxsubrule695_pass1659:
    rx690_cstack = rx690_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx690_pos, $P11, rx690_curclass, "$!pos"
    rx690_cur."!cursor_pass"(rx690_pos, "fatarrow", 'backtrack'=>1)
    .return (rx690_cur)
  rx690_restart1647:
    repr_get_attr_obj rx690_cstack, rx690_cur, rx690_curclass, "$!cstack"
  rx690_fail1648:
    unless rx690_bstack, rx690_done1646
    pop $I19, rx690_bstack
    if_null rx690_cstack, rx690_cstack_done1651
    unless rx690_cstack, rx690_cstack_done1651
    dec $I19
    set $P11, rx690_cstack[$I19]
  rx690_cstack_done1651:
    pop rx690_rep, rx690_bstack
    pop rx690_pos, rx690_bstack
    pop $I19, rx690_bstack
    lt rx690_pos, -1, rx690_done1646
    lt rx690_pos, 0, rx690_fail1648
    eq $I19, 0, rx690_fail1648
    nqp_islist $I20, rx690_cstack
    unless $I20, rx690_jump1649
    elements $I18, rx690_bstack
    le $I18, 0, rx690_cut1650
    dec $I18
    set $I18, rx690_bstack[$I18]
  rx690_cut1650:
    assign rx690_cstack, $I18
  rx690_jump1649:
    jump $I19
  rx690_done1646:
    rx690_cur."!cursor_fail"()
    .return (rx690_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_102_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 951
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx696_start
    .local string rx696_tgt
    .local int rx696_pos
    .local int rx696_off
    .local int rx696_eos
    .local int rx696_rep
    .local pmc rx696_cur
    .local pmc rx696_curclass
    .local pmc rx696_bstack
    .local pmc rx696_cstack
    rx696_start = self."!cursor_start_all"()
    set rx696_cur, rx696_start[0]
    set rx696_tgt, rx696_start[1]
    set rx696_pos, rx696_start[2]
    set rx696_curclass, rx696_start[3]
    set rx696_bstack, rx696_start[4]
    set $I19, rx696_start[5]
    store_lex unicode:"$\x{a2}", rx696_cur
    length rx696_eos, rx696_tgt
    eq $I19, 1, rx696_restart1662
    gt rx696_pos, rx696_eos, rx696_fail1663
    repr_get_attr_int $I11, self, rx696_curclass, "$!from"
    ne $I11, -1, rxscan697_done1669
    goto rxscan697_scan1668
  rxscan697_loop1667:
    inc rx696_pos
    index rx696_pos, rx696_tgt, ucs4:":", rx696_pos
    eq rx696_pos, -1, rx696_fail1663
    gt rx696_pos, rx696_eos, rx696_fail1663
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!from", rx696_pos
  rxscan697_scan1668:
    nqp_rxmark rx696_bstack, rxscan697_loop1667, rx696_pos, 0
  rxscan697_done1669:
    add $I11, rx696_pos, 1
    gt $I11, rx696_eos, rx696_fail1663
    substr $S10, rx696_tgt, rx696_pos, 1
    ne $S10, ucs4:":", rx696_fail1663
    add rx696_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt698_01671
    nqp_push_label $P11, alt698_11675
    nqp_push_label $P11, alt698_21681
    nqp_push_label $P11, alt698_31683
    nqp_rxmark rx696_bstack, alt698_end1670, -1, 0
    rx696_cur."!alt"(rx696_pos, "alt_nfa__20_1382484130.3535", $P11)
    goto rx696_fail1663
  alt698_01671:
    nqp_rxmark rx696_bstack, rxcap699_fail1673, rx696_pos, 0
    add $I11, rx696_pos, 1
    gt $I11, rx696_eos, rx696_fail1663
    substr $S10, rx696_tgt, rx696_pos, 1
    ne $S10, ucs4:"!", rx696_fail1663
    add rx696_pos, 1
    nqp_rxpeek $I19, rx696_bstack, rxcap699_fail1673
    inc $I19
    set $I11, rx696_bstack[$I19]
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx696_pos)
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "not")
    goto rxcap699_done1672
  rxcap699_fail1673:
    goto rx696_fail1663
  rxcap699_done1672:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
    nqp_rxmark rx696_bstack, rxsubrule700_pass1674, -1, 0
  rxsubrule700_pass1674:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1670
  alt698_11675:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
    nqp_rxmark rx696_bstack, rxsubrule701_pass1676, -1, 0
  rxsubrule701_pass1676:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    nqp_rxmark rx696_bstack, rxquantr702_done1678, rx696_pos, 0
  rxquantr702_loop1677:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
    goto rxsubrule703_pass1679
  rxsubrule703_back1680:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
  rxsubrule703_pass1679:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule703_back1680
    push rx696_bstack, $I11
    push rx696_bstack, 0
    push rx696_bstack, rx696_pos
    elements $I11, rx696_cstack
    push rx696_bstack, $I11
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    nqp_rxpeek $I19, rx696_bstack, rxquantr702_done1678
    inc $I19
    inc $I19
    set rx696_rep, rx696_bstack[$I19]
    nqp_rxcommit rx696_bstack, rxquantr702_done1678
    inc rx696_rep
  rxquantr702_done1678:
    goto alt698_end1670
  alt698_21681:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
    nqp_rxmark rx696_bstack, rxsubrule704_pass1682, -1, 0
  rxsubrule704_pass1682:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1670
  alt698_31683:
    repr_bind_attr_int rx696_cur, rx696_curclass, "$!pos", rx696_pos
    $P11 = rx696_cur."variable"()
    repr_get_attr_int $I11, $P11, rx696_curclass, "$!pos"
    lt $I11, 0, rx696_fail1663
    nqp_rxmark rx696_bstack, rxsubrule705_pass1684, -1, 0
  rxsubrule705_pass1684:
    rx696_cstack = rx696_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx696_pos, $P11, rx696_curclass, "$!pos"
    goto alt698_end1670
  alt698_end1670:
    nqp_rxcommit rx696_bstack, alt698_end1670
    rx696_cur."!cursor_pass"(rx696_pos, "colonpair", 'backtrack'=>1)
    .return (rx696_cur)
  rx696_restart1662:
    repr_get_attr_obj rx696_cstack, rx696_cur, rx696_curclass, "$!cstack"
  rx696_fail1663:
    unless rx696_bstack, rx696_done1661
    pop $I19, rx696_bstack
    if_null rx696_cstack, rx696_cstack_done1666
    unless rx696_cstack, rx696_cstack_done1666
    dec $I19
    set $P11, rx696_cstack[$I19]
  rx696_cstack_done1666:
    pop rx696_rep, rx696_bstack
    pop rx696_pos, rx696_bstack
    pop $I19, rx696_bstack
    lt rx696_pos, -1, rx696_done1661
    lt rx696_pos, 0, rx696_fail1663
    eq $I19, 0, rx696_fail1663
    nqp_islist $I20, rx696_cstack
    unless $I20, rx696_jump1664
    elements $I18, rx696_bstack
    le $I18, 0, rx696_cut1665
    dec $I18
    set $I18, rx696_bstack[$I18]
  rx696_cut1665:
    assign rx696_cstack, $I18
  rx696_jump1664:
    jump $I19
  rx696_done1661:
    rx696_cur."!cursor_fail"()
    .return (rx696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_103_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 961
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx706_start
    .local string rx706_tgt
    .local int rx706_pos
    .local int rx706_off
    .local int rx706_eos
    .local int rx706_rep
    .local pmc rx706_cur
    .local pmc rx706_curclass
    .local pmc rx706_bstack
    .local pmc rx706_cstack
    rx706_start = self."!cursor_start_all"()
    set rx706_cur, rx706_start[0]
    set rx706_tgt, rx706_start[1]
    set rx706_pos, rx706_start[2]
    set rx706_curclass, rx706_start[3]
    set rx706_bstack, rx706_start[4]
    set $I19, rx706_start[5]
    store_lex unicode:"$\x{a2}", rx706_cur
    length rx706_eos, rx706_tgt
    eq $I19, 1, rx706_restart1687
    gt rx706_pos, rx706_eos, rx706_fail1688
    repr_get_attr_int $I11, self, rx706_curclass, "$!from"
    ne $I11, -1, rxscan707_done1694
    goto rxscan707_scan1693
  rxscan707_loop1692:
    inc rx706_pos
    gt rx706_pos, rx706_eos, rx706_fail1688
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!from", rx706_pos
  rxscan707_scan1693:
    nqp_rxmark rx706_bstack, rxscan707_loop1692, rx706_pos, 0
  rxscan707_done1694:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt708_01696
    nqp_push_label $P11, alt708_11703
    nqp_push_label $P11, alt708_21706
    nqp_push_label $P11, alt708_31714
    nqp_rxmark rx706_bstack, alt708_end1695, -1, 0
    rx706_cur."!alt"(rx706_pos, "alt_nfa__21_1382484130.38055", $P11)
    goto rx706_fail1688
  alt708_01696:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule709_pass1697, -1, 0
  rxsubrule709_pass1697:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    nqp_rxmark rx706_bstack, rxquantr710_done1699, rx706_pos, 0
  rxquantr710_loop1698:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    goto rxsubrule711_pass1700
  rxsubrule711_back1701:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
  rxsubrule711_pass1700:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule711_back1701
    push rx706_bstack, $I11
    push rx706_bstack, 0
    push rx706_bstack, rx706_pos
    elements $I11, rx706_cstack
    push rx706_bstack, $I11
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    nqp_rxpeek $I19, rx706_bstack, rxquantr710_done1699
    inc $I19
    inc $I19
    set rx706_rep, rx706_bstack[$I19]
    nqp_rxcommit rx706_bstack, rxquantr710_done1699
    inc rx706_rep
  rxquantr710_done1699:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."name"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule712_pass1702, -1, 0
  rxsubrule712_pass1702:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    goto alt708_end1695
  alt708_11703:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule713_pass1704, -1, 0
  rxsubrule713_pass1704:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    ge rx706_pos, rx706_eos, rx706_fail1688
    substr $S11, rx706_tgt, rx706_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx706_fail1688
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule714_pass1705, -1, 0
  rxsubrule714_pass1705:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    goto alt708_end1695
  alt708_21706:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule715_pass1707, -1, 0
  rxsubrule715_pass1707:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1688
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:"(", rx706_fail1688
    add rx706_pos, 1
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    nqp_rxmark rx706_bstack, rxsubrule716_pass1708, -1, 0
  rxsubrule716_pass1708:
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
  alt717_01710:
    nqp_rxmark rx706_bstack, alt717_11711, rx706_pos, 0
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1688
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:")", rx706_fail1688
    add rx706_pos, 1
    goto alt717_end1709
  alt717_11711:
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
    goto rxsubrule718_pass1712
  rxsubrule718_back1713:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx706_curclass, "$!pos"
    lt $I11, 0, rx706_fail1688
  rxsubrule718_pass1712:
    rx706_cstack = rx706_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule718_back1713
    push rx706_bstack, $I11
    push rx706_bstack, 0
    push rx706_bstack, rx706_pos
    elements $I11, rx706_cstack
    push rx706_bstack, $I11
    repr_get_attr_int rx706_pos, $P11, rx706_curclass, "$!pos"
  alt717_end1709:
    goto alt708_end1695
  alt708_31714:
    nqp_rxmark rx706_bstack, rxcap719_fail1716, rx706_pos, 0
    add $I11, rx706_pos, 1
    gt $I11, rx706_eos, rx706_fail1688
    substr $S10, rx706_tgt, rx706_pos, 1
    ne $S10, ucs4:"$", rx706_fail1688
    add rx706_pos, 1
    nqp_rxpeek $I19, rx706_bstack, rxcap719_fail1716
    inc $I19
    set $I11, rx706_bstack[$I19]
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx706_pos)
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "sigil")
    goto rxcap719_done1715
  rxcap719_fail1716:
    goto rx706_fail1688
  rxcap719_done1715:
    nqp_rxmark rx706_bstack, rxcap720_fail1718, rx706_pos, 0
    ge rx706_pos, rx706_eos, rx706_fail1688
    substr $S11, rx706_tgt, rx706_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx706_fail1688
    inc rx706_pos
    nqp_rxpeek $I19, rx706_bstack, rxcap720_fail1718
    inc $I19
    set $I11, rx706_bstack[$I19]
    repr_bind_attr_int rx706_cur, rx706_curclass, "$!pos", rx706_pos
    $P11 = rx706_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx706_pos)
    rx706_cstack = rx706_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap720_done1717
  rxcap720_fail1718:
    goto rx706_fail1688
  rxcap720_done1717:
    goto alt708_end1695
  alt708_end1695:
    rx706_cur."!cursor_pass"(rx706_pos, "variable", 'backtrack'=>1)
    .return (rx706_cur)
  rx706_restart1687:
    repr_get_attr_obj rx706_cstack, rx706_cur, rx706_curclass, "$!cstack"
  rx706_fail1688:
    unless rx706_bstack, rx706_done1686
    pop $I19, rx706_bstack
    if_null rx706_cstack, rx706_cstack_done1691
    unless rx706_cstack, rx706_cstack_done1691
    dec $I19
    set $P11, rx706_cstack[$I19]
  rx706_cstack_done1691:
    pop rx706_rep, rx706_bstack
    pop rx706_pos, rx706_bstack
    pop $I19, rx706_bstack
    lt rx706_pos, -1, rx706_done1686
    lt rx706_pos, 0, rx706_fail1688
    eq $I19, 0, rx706_fail1688
    nqp_islist $I20, rx706_cstack
    unless $I20, rx706_jump1689
    elements $I18, rx706_bstack
    le $I18, 0, rx706_cut1690
    dec $I18
    set $I18, rx706_bstack[$I18]
  rx706_cut1690:
    assign rx706_cstack, $I18
  rx706_jump1689:
    jump $I19
  rx706_done1686:
    rx706_cur."!cursor_fail"()
    .return (rx706_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_104_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 968
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx721_start
    .local string rx721_tgt
    .local int rx721_pos
    .local int rx721_off
    .local int rx721_eos
    .local int rx721_rep
    .local pmc rx721_cur
    .local pmc rx721_curclass
    .local pmc rx721_bstack
    .local pmc rx721_cstack
    rx721_start = self."!cursor_start_all"()
    set rx721_cur, rx721_start[0]
    set rx721_tgt, rx721_start[1]
    set rx721_pos, rx721_start[2]
    set rx721_curclass, rx721_start[3]
    set rx721_bstack, rx721_start[4]
    set $I19, rx721_start[5]
    store_lex unicode:"$\x{a2}", rx721_cur
    length rx721_eos, rx721_tgt
    eq $I19, 1, rx721_restart1721
    gt rx721_pos, rx721_eos, rx721_fail1722
    repr_get_attr_int $I11, self, rx721_curclass, "$!from"
    ne $I11, -1, rxscan722_done1728
    goto rxscan722_scan1727
  rxscan722_loop1726:
    inc rx721_pos
    gt rx721_pos, rx721_eos, rx721_fail1722
    repr_bind_attr_int rx721_cur, rx721_curclass, "$!from", rx721_pos
  rxscan722_scan1727:
    nqp_rxmark rx721_bstack, rxscan722_loop1726, rx721_pos, 0
  rxscan722_done1728:
    ge rx721_pos, rx721_eos, rx721_fail1722
    substr $S11, rx721_tgt, rx721_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx721_fail1722
    inc rx721_pos
    rx721_cur."!cursor_pass"(rx721_pos, "sigil", 'backtrack'=>1)
    .return (rx721_cur)
  rx721_restart1721:
    repr_get_attr_obj rx721_cstack, rx721_cur, rx721_curclass, "$!cstack"
  rx721_fail1722:
    unless rx721_bstack, rx721_done1720
    pop $I19, rx721_bstack
    if_null rx721_cstack, rx721_cstack_done1725
    unless rx721_cstack, rx721_cstack_done1725
    dec $I19
    set $P11, rx721_cstack[$I19]
  rx721_cstack_done1725:
    pop rx721_rep, rx721_bstack
    pop rx721_pos, rx721_bstack
    pop $I19, rx721_bstack
    lt rx721_pos, -1, rx721_done1720
    lt rx721_pos, 0, rx721_fail1722
    eq $I19, 0, rx721_fail1722
    nqp_islist $I20, rx721_cstack
    unless $I20, rx721_jump1723
    elements $I18, rx721_bstack
    le $I18, 0, rx721_cut1724
    dec $I18
    set $I18, rx721_bstack[$I18]
  rx721_cut1724:
    assign rx721_cstack, $I18
  rx721_jump1723:
    jump $I19
  rx721_done1720:
    rx721_cur."!cursor_fail"()
    .return (rx721_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_105_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 970
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx723_start
    .local string rx723_tgt
    .local int rx723_pos
    .local int rx723_off
    .local int rx723_eos
    .local int rx723_rep
    .local pmc rx723_cur
    .local pmc rx723_curclass
    .local pmc rx723_bstack
    .local pmc rx723_cstack
    rx723_start = self."!cursor_start_all"()
    set rx723_cur, rx723_start[0]
    set rx723_tgt, rx723_start[1]
    set rx723_pos, rx723_start[2]
    set rx723_curclass, rx723_start[3]
    set rx723_bstack, rx723_start[4]
    set $I19, rx723_start[5]
    store_lex unicode:"$\x{a2}", rx723_cur
    length rx723_eos, rx723_tgt
    eq $I19, 1, rx723_restart1731
    gt rx723_pos, rx723_eos, rx723_fail1732
    repr_get_attr_int $I11, self, rx723_curclass, "$!from"
    ne $I11, -1, rxscan724_done1738
    goto rxscan724_scan1737
  rxscan724_loop1736:
    inc rx723_pos
    gt rx723_pos, rx723_eos, rx723_fail1732
    repr_bind_attr_int rx723_cur, rx723_curclass, "$!from", rx723_pos
  rxscan724_scan1737:
    nqp_rxmark rx723_bstack, rxscan724_loop1736, rx723_pos, 0
  rxscan724_done1738:
    ge rx723_pos, rx723_eos, rx723_fail1732
    substr $S11, rx723_tgt, rx723_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx723_fail1732
    inc rx723_pos
    rx723_cur."!cursor_pass"(rx723_pos, "twigil", 'backtrack'=>1)
    .return (rx723_cur)
  rx723_restart1731:
    repr_get_attr_obj rx723_cstack, rx723_cur, rx723_curclass, "$!cstack"
  rx723_fail1732:
    unless rx723_bstack, rx723_done1730
    pop $I19, rx723_bstack
    if_null rx723_cstack, rx723_cstack_done1735
    unless rx723_cstack, rx723_cstack_done1735
    dec $I19
    set $P11, rx723_cstack[$I19]
  rx723_cstack_done1735:
    pop rx723_rep, rx723_bstack
    pop rx723_pos, rx723_bstack
    pop $I19, rx723_bstack
    lt rx723_pos, -1, rx723_done1730
    lt rx723_pos, 0, rx723_fail1732
    eq $I19, 0, rx723_fail1732
    nqp_islist $I20, rx723_cstack
    unless $I20, rx723_jump1733
    elements $I18, rx723_bstack
    le $I18, 0, rx723_cut1734
    dec $I18
    set $I18, rx723_bstack[$I18]
  rx723_cut1734:
    assign rx723_cstack, $I18
  rx723_jump1733:
    jump $I19
  rx723_done1730:
    rx723_cur."!cursor_fail"()
    .return (rx723_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_106_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 972
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_107_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 973
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_109 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx725_start
    .local string rx725_tgt
    .local int rx725_pos
    .local int rx725_off
    .local int rx725_eos
    .local int rx725_rep
    .local pmc rx725_cur
    .local pmc rx725_curclass
    .local pmc rx725_bstack
    .local pmc rx725_cstack
    rx725_start = self."!cursor_start_all"()
    set rx725_cur, rx725_start[0]
    set rx725_tgt, rx725_start[1]
    set rx725_pos, rx725_start[2]
    set rx725_curclass, rx725_start[3]
    set rx725_bstack, rx725_start[4]
    set $I19, rx725_start[5]
    store_lex unicode:"$\x{a2}", rx725_cur
    length rx725_eos, rx725_tgt
    eq $I19, 1, rx725_restart1741
    gt rx725_pos, rx725_eos, rx725_fail1742
    repr_get_attr_int $I11, self, rx725_curclass, "$!from"
    ne $I11, -1, rxscan726_done1748
    goto rxscan726_scan1747
  rxscan726_loop1746:
    inc rx725_pos
    gt rx725_pos, rx725_eos, rx725_fail1742
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!from", rx725_pos
  rxscan726_scan1747:
    nqp_rxmark rx725_bstack, rxscan726_loop1746, rx725_pos, 0
  rxscan726_done1748:
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    store_lex unicode:"$\x{a2}", rx725_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1749
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_109, $P5004
    repr_defined $I5001, fb_tmp_109
    unless $I5001 goto if727_else1750 
    set $P5006, fb_tmp_109["$PACKAGE"]
    set $P5008, $P5006
    goto if727_end1751
  if727_else1750:
    null $P5007
    set $P5008, $P5007
  if727_end1751:
    unless_null $P5008, vivi_7281752
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7281752:
    unless_null $P5008, vivi_7291753
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7291753:
    set $P5003, $P5008
  fallback1749:
    set $P101, $P5003
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    store_lex unicode:"$\x{a2}", rx725_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx725_bstack, rxcap730_fail1755, rx725_pos, 0
    add $I11, rx725_pos, 6
    gt $I11, rx725_eos, rx725_fail1742
    substr $S10, rx725_tgt, rx725_pos, 6
    ne $S10, ucs4:"module", rx725_fail1742
    add rx725_pos, 6
    nqp_rxpeek $I19, rx725_bstack, rxcap730_fail1755
    inc $I19
    set $I11, rx725_bstack[$I19]
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    $P11 = rx725_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx725_pos)
    rx725_cstack = rx725_cur."!cursor_capture"($P11, "sym")
    goto rxcap730_done1754
  rxcap730_fail1755:
    goto rx725_fail1742
  rxcap730_done1754:
    repr_bind_attr_int rx725_cur, rx725_curclass, "$!pos", rx725_pos
    $P11 = rx725_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx725_curclass, "$!pos"
    lt $I11, 0, rx725_fail1742
    nqp_rxmark rx725_bstack, rxsubrule731_pass1756, -1, 0
  rxsubrule731_pass1756:
    rx725_cstack = rx725_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx725_pos, $P11, rx725_curclass, "$!pos"
    rx725_cur."!cursor_pass"(rx725_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx725_cur)
  rx725_restart1741:
    repr_get_attr_obj rx725_cstack, rx725_cur, rx725_curclass, "$!cstack"
  rx725_fail1742:
    unless rx725_bstack, rx725_done1740
    pop $I19, rx725_bstack
    if_null rx725_cstack, rx725_cstack_done1745
    unless rx725_cstack, rx725_cstack_done1745
    dec $I19
    set $P11, rx725_cstack[$I19]
  rx725_cstack_done1745:
    pop rx725_rep, rx725_bstack
    pop rx725_pos, rx725_bstack
    pop $I19, rx725_bstack
    lt rx725_pos, -1, rx725_done1740
    lt rx725_pos, 0, rx725_fail1742
    eq $I19, 0, rx725_fail1742
    nqp_islist $I20, rx725_cstack
    unless $I20, rx725_jump1743
    elements $I18, rx725_bstack
    le $I18, 0, rx725_cut1744
    dec $I18
    set $I18, rx725_bstack[$I18]
  rx725_cut1744:
    assign rx725_cstack, $I18
  rx725_jump1743:
    jump $I19
  rx725_done1740:
    rx725_cur."!cursor_fail"()
    .return (rx725_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_108_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 978
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_110 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx732_start
    .local string rx732_tgt
    .local int rx732_pos
    .local int rx732_off
    .local int rx732_eos
    .local int rx732_rep
    .local pmc rx732_cur
    .local pmc rx732_curclass
    .local pmc rx732_bstack
    .local pmc rx732_cstack
    rx732_start = self."!cursor_start_all"()
    set rx732_cur, rx732_start[0]
    set rx732_tgt, rx732_start[1]
    set rx732_pos, rx732_start[2]
    set rx732_curclass, rx732_start[3]
    set rx732_bstack, rx732_start[4]
    set $I19, rx732_start[5]
    store_lex unicode:"$\x{a2}", rx732_cur
    length rx732_eos, rx732_tgt
    eq $I19, 1, rx732_restart1759
    gt rx732_pos, rx732_eos, rx732_fail1760
    repr_get_attr_int $I11, self, rx732_curclass, "$!from"
    ne $I11, -1, rxscan733_done1766
    goto rxscan733_scan1765
  rxscan733_loop1764:
    inc rx732_pos
    gt rx732_pos, rx732_eos, rx732_fail1760
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!from", rx732_pos
  rxscan733_scan1765:
    nqp_rxmark rx732_bstack, rxscan733_loop1764, rx732_pos, 0
  rxscan733_done1766:
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    store_lex unicode:"$\x{a2}", rx732_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1767
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_110, $P5004
    repr_defined $I5001, fb_tmp_110
    unless $I5001 goto if734_else1768 
    set $P5006, fb_tmp_110["$PACKAGE"]
    set $P5008, $P5006
    goto if734_end1769
  if734_else1768:
    null $P5007
    set $P5008, $P5007
  if734_end1769:
    unless_null $P5008, vivi_7351770
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7351770:
    unless_null $P5008, vivi_7361771
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7361771:
    set $P5003, $P5008
  fallback1767:
    set $P101, $P5003
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    store_lex unicode:"$\x{a2}", rx732_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx732_bstack, rxcap737_fail1773, rx732_pos, 0
    add $I11, rx732_pos, 7
    gt $I11, rx732_eos, rx732_fail1760
    substr $S10, rx732_tgt, rx732_pos, 7
    ne $S10, ucs4:"knowhow", rx732_fail1760
    add rx732_pos, 7
    nqp_rxpeek $I19, rx732_bstack, rxcap737_fail1773
    inc $I19
    set $I11, rx732_bstack[$I19]
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx732_pos)
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "sym")
    goto rxcap737_done1772
  rxcap737_fail1773:
    goto rx732_fail1760
  rxcap737_done1772:
    repr_bind_attr_int rx732_cur, rx732_curclass, "$!pos", rx732_pos
    $P11 = rx732_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx732_curclass, "$!pos"
    lt $I11, 0, rx732_fail1760
    nqp_rxmark rx732_bstack, rxsubrule738_pass1774, -1, 0
  rxsubrule738_pass1774:
    rx732_cstack = rx732_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx732_pos, $P11, rx732_curclass, "$!pos"
    rx732_cur."!cursor_pass"(rx732_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx732_cur)
  rx732_restart1759:
    repr_get_attr_obj rx732_cstack, rx732_cur, rx732_curclass, "$!cstack"
  rx732_fail1760:
    unless rx732_bstack, rx732_done1758
    pop $I19, rx732_bstack
    if_null rx732_cstack, rx732_cstack_done1763
    unless rx732_cstack, rx732_cstack_done1763
    dec $I19
    set $P11, rx732_cstack[$I19]
  rx732_cstack_done1763:
    pop rx732_rep, rx732_bstack
    pop rx732_pos, rx732_bstack
    pop $I19, rx732_bstack
    lt rx732_pos, -1, rx732_done1758
    lt rx732_pos, 0, rx732_fail1760
    eq $I19, 0, rx732_fail1760
    nqp_islist $I20, rx732_cstack
    unless $I20, rx732_jump1761
    elements $I18, rx732_bstack
    le $I18, 0, rx732_cut1762
    dec $I18
    set $I18, rx732_bstack[$I18]
  rx732_cut1762:
    assign rx732_cstack, $I18
  rx732_jump1761:
    jump $I19
  rx732_done1758:
    rx732_cur."!cursor_fail"()
    .return (rx732_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_109_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 983
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_111 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx739_start
    .local string rx739_tgt
    .local int rx739_pos
    .local int rx739_off
    .local int rx739_eos
    .local int rx739_rep
    .local pmc rx739_cur
    .local pmc rx739_curclass
    .local pmc rx739_bstack
    .local pmc rx739_cstack
    rx739_start = self."!cursor_start_all"()
    set rx739_cur, rx739_start[0]
    set rx739_tgt, rx739_start[1]
    set rx739_pos, rx739_start[2]
    set rx739_curclass, rx739_start[3]
    set rx739_bstack, rx739_start[4]
    set $I19, rx739_start[5]
    store_lex unicode:"$\x{a2}", rx739_cur
    length rx739_eos, rx739_tgt
    eq $I19, 1, rx739_restart1777
    gt rx739_pos, rx739_eos, rx739_fail1778
    repr_get_attr_int $I11, self, rx739_curclass, "$!from"
    ne $I11, -1, rxscan740_done1784
    goto rxscan740_scan1783
  rxscan740_loop1782:
    inc rx739_pos
    gt rx739_pos, rx739_eos, rx739_fail1778
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!from", rx739_pos
  rxscan740_scan1783:
    nqp_rxmark rx739_bstack, rxscan740_loop1782, rx739_pos, 0
  rxscan740_done1784:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    store_lex unicode:"$\x{a2}", rx739_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1785
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_111, $P5004
    repr_defined $I5001, fb_tmp_111
    unless $I5001 goto if741_else1786 
    set $P5006, fb_tmp_111["$PACKAGE"]
    set $P5008, $P5006
    goto if741_end1787
  if741_else1786:
    null $P5007
    set $P5008, $P5007
  if741_end1787:
    unless_null $P5008, vivi_7421788
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7421788:
    unless_null $P5008, vivi_7431789
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7431789:
    set $P5003, $P5008
  fallback1785:
    set $P101, $P5003
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    store_lex unicode:"$\x{a2}", rx739_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx739_bstack, rxcap744_fail1791, rx739_pos, 0
    add $I11, rx739_pos, 5
    gt $I11, rx739_eos, rx739_fail1778
    substr $S10, rx739_tgt, rx739_pos, 5
    ne $S10, ucs4:"class", rx739_fail1778
    add rx739_pos, 5
    nqp_rxpeek $I19, rx739_bstack, rxcap744_fail1791
    inc $I19
    set $I11, rx739_bstack[$I19]
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx739_pos)
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "sym")
    goto rxcap744_done1790
  rxcap744_fail1791:
    goto rx739_fail1778
  rxcap744_done1790:
    repr_bind_attr_int rx739_cur, rx739_curclass, "$!pos", rx739_pos
    $P11 = rx739_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx739_curclass, "$!pos"
    lt $I11, 0, rx739_fail1778
    nqp_rxmark rx739_bstack, rxsubrule745_pass1792, -1, 0
  rxsubrule745_pass1792:
    rx739_cstack = rx739_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx739_pos, $P11, rx739_curclass, "$!pos"
    rx739_cur."!cursor_pass"(rx739_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx739_cur)
  rx739_restart1777:
    repr_get_attr_obj rx739_cstack, rx739_cur, rx739_curclass, "$!cstack"
  rx739_fail1778:
    unless rx739_bstack, rx739_done1776
    pop $I19, rx739_bstack
    if_null rx739_cstack, rx739_cstack_done1781
    unless rx739_cstack, rx739_cstack_done1781
    dec $I19
    set $P11, rx739_cstack[$I19]
  rx739_cstack_done1781:
    pop rx739_rep, rx739_bstack
    pop rx739_pos, rx739_bstack
    pop $I19, rx739_bstack
    lt rx739_pos, -1, rx739_done1776
    lt rx739_pos, 0, rx739_fail1778
    eq $I19, 0, rx739_fail1778
    nqp_islist $I20, rx739_cstack
    unless $I20, rx739_jump1779
    elements $I18, rx739_bstack
    le $I18, 0, rx739_cut1780
    dec $I18
    set $I18, rx739_bstack[$I18]
  rx739_cut1780:
    assign rx739_cstack, $I18
  rx739_jump1779:
    jump $I19
  rx739_done1776:
    rx739_cur."!cursor_fail"()
    .return (rx739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_110_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 988
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_112 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx746_start
    .local string rx746_tgt
    .local int rx746_pos
    .local int rx746_off
    .local int rx746_eos
    .local int rx746_rep
    .local pmc rx746_cur
    .local pmc rx746_curclass
    .local pmc rx746_bstack
    .local pmc rx746_cstack
    rx746_start = self."!cursor_start_all"()
    set rx746_cur, rx746_start[0]
    set rx746_tgt, rx746_start[1]
    set rx746_pos, rx746_start[2]
    set rx746_curclass, rx746_start[3]
    set rx746_bstack, rx746_start[4]
    set $I19, rx746_start[5]
    store_lex unicode:"$\x{a2}", rx746_cur
    length rx746_eos, rx746_tgt
    eq $I19, 1, rx746_restart1795
    gt rx746_pos, rx746_eos, rx746_fail1796
    repr_get_attr_int $I11, self, rx746_curclass, "$!from"
    ne $I11, -1, rxscan747_done1802
    goto rxscan747_scan1801
  rxscan747_loop1800:
    inc rx746_pos
    gt rx746_pos, rx746_eos, rx746_fail1796
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!from", rx746_pos
  rxscan747_scan1801:
    nqp_rxmark rx746_bstack, rxscan747_loop1800, rx746_pos, 0
  rxscan747_done1802:
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    store_lex unicode:"$\x{a2}", rx746_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1803
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_112, $P5004
    repr_defined $I5001, fb_tmp_112
    unless $I5001 goto if748_else1804 
    set $P5006, fb_tmp_112["$PACKAGE"]
    set $P5008, $P5006
    goto if748_end1805
  if748_else1804:
    null $P5007
    set $P5008, $P5007
  if748_end1805:
    unless_null $P5008, vivi_7491806
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7491806:
    unless_null $P5008, vivi_7501807
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7501807:
    set $P5003, $P5008
  fallback1803:
    set $P101, $P5003
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    store_lex unicode:"$\x{a2}", rx746_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx746_bstack, rxcap751_fail1809, rx746_pos, 0
    add $I11, rx746_pos, 7
    gt $I11, rx746_eos, rx746_fail1796
    substr $S10, rx746_tgt, rx746_pos, 7
    ne $S10, ucs4:"grammar", rx746_fail1796
    add rx746_pos, 7
    nqp_rxpeek $I19, rx746_bstack, rxcap751_fail1809
    inc $I19
    set $I11, rx746_bstack[$I19]
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    $P11 = rx746_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx746_pos)
    rx746_cstack = rx746_cur."!cursor_capture"($P11, "sym")
    goto rxcap751_done1808
  rxcap751_fail1809:
    goto rx746_fail1796
  rxcap751_done1808:
    repr_bind_attr_int rx746_cur, rx746_curclass, "$!pos", rx746_pos
    $P11 = rx746_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx746_curclass, "$!pos"
    lt $I11, 0, rx746_fail1796
    nqp_rxmark rx746_bstack, rxsubrule752_pass1810, -1, 0
  rxsubrule752_pass1810:
    rx746_cstack = rx746_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx746_pos, $P11, rx746_curclass, "$!pos"
    rx746_cur."!cursor_pass"(rx746_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx746_cur)
  rx746_restart1795:
    repr_get_attr_obj rx746_cstack, rx746_cur, rx746_curclass, "$!cstack"
  rx746_fail1796:
    unless rx746_bstack, rx746_done1794
    pop $I19, rx746_bstack
    if_null rx746_cstack, rx746_cstack_done1799
    unless rx746_cstack, rx746_cstack_done1799
    dec $I19
    set $P11, rx746_cstack[$I19]
  rx746_cstack_done1799:
    pop rx746_rep, rx746_bstack
    pop rx746_pos, rx746_bstack
    pop $I19, rx746_bstack
    lt rx746_pos, -1, rx746_done1794
    lt rx746_pos, 0, rx746_fail1796
    eq $I19, 0, rx746_fail1796
    nqp_islist $I20, rx746_cstack
    unless $I20, rx746_jump1797
    elements $I18, rx746_bstack
    le $I18, 0, rx746_cut1798
    dec $I18
    set $I18, rx746_bstack[$I18]
  rx746_cut1798:
    assign rx746_cstack, $I18
  rx746_jump1797:
    jump $I19
  rx746_done1794:
    rx746_cur."!cursor_fail"()
    .return (rx746_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_111_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 993
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_113 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx753_start
    .local string rx753_tgt
    .local int rx753_pos
    .local int rx753_off
    .local int rx753_eos
    .local int rx753_rep
    .local pmc rx753_cur
    .local pmc rx753_curclass
    .local pmc rx753_bstack
    .local pmc rx753_cstack
    rx753_start = self."!cursor_start_all"()
    set rx753_cur, rx753_start[0]
    set rx753_tgt, rx753_start[1]
    set rx753_pos, rx753_start[2]
    set rx753_curclass, rx753_start[3]
    set rx753_bstack, rx753_start[4]
    set $I19, rx753_start[5]
    store_lex unicode:"$\x{a2}", rx753_cur
    length rx753_eos, rx753_tgt
    eq $I19, 1, rx753_restart1813
    gt rx753_pos, rx753_eos, rx753_fail1814
    repr_get_attr_int $I11, self, rx753_curclass, "$!from"
    ne $I11, -1, rxscan754_done1820
    goto rxscan754_scan1819
  rxscan754_loop1818:
    inc rx753_pos
    gt rx753_pos, rx753_eos, rx753_fail1814
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!from", rx753_pos
  rxscan754_scan1819:
    nqp_rxmark rx753_bstack, rxscan754_loop1818, rx753_pos, 0
  rxscan754_done1820:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1821
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_113, $P5004
    repr_defined $I5001, fb_tmp_113
    unless $I5001 goto if755_else1822 
    set $P5006, fb_tmp_113["$PACKAGE"]
    set $P5008, $P5006
    goto if755_end1823
  if755_else1822:
    null $P5007
    set $P5008, $P5007
  if755_end1823:
    unless_null $P5008, vivi_7561824
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7561824:
    unless_null $P5008, vivi_7571825
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7571825:
    set $P5003, $P5008
  fallback1821:
    set $P101, $P5003
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    store_lex unicode:"$\x{a2}", rx753_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx753_bstack, rxcap758_fail1827, rx753_pos, 0
    add $I11, rx753_pos, 4
    gt $I11, rx753_eos, rx753_fail1814
    substr $S10, rx753_tgt, rx753_pos, 4
    ne $S10, ucs4:"role", rx753_fail1814
    add rx753_pos, 4
    nqp_rxpeek $I19, rx753_bstack, rxcap758_fail1827
    inc $I19
    set $I11, rx753_bstack[$I19]
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx753_pos)
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "sym")
    goto rxcap758_done1826
  rxcap758_fail1827:
    goto rx753_fail1814
  rxcap758_done1826:
    repr_bind_attr_int rx753_cur, rx753_curclass, "$!pos", rx753_pos
    $P11 = rx753_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx753_curclass, "$!pos"
    lt $I11, 0, rx753_fail1814
    nqp_rxmark rx753_bstack, rxsubrule759_pass1828, -1, 0
  rxsubrule759_pass1828:
    rx753_cstack = rx753_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx753_pos, $P11, rx753_curclass, "$!pos"
    rx753_cur."!cursor_pass"(rx753_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx753_cur)
  rx753_restart1813:
    repr_get_attr_obj rx753_cstack, rx753_cur, rx753_curclass, "$!cstack"
  rx753_fail1814:
    unless rx753_bstack, rx753_done1812
    pop $I19, rx753_bstack
    if_null rx753_cstack, rx753_cstack_done1817
    unless rx753_cstack, rx753_cstack_done1817
    dec $I19
    set $P11, rx753_cstack[$I19]
  rx753_cstack_done1817:
    pop rx753_rep, rx753_bstack
    pop rx753_pos, rx753_bstack
    pop $I19, rx753_bstack
    lt rx753_pos, -1, rx753_done1812
    lt rx753_pos, 0, rx753_fail1814
    eq $I19, 0, rx753_fail1814
    nqp_islist $I20, rx753_cstack
    unless $I20, rx753_jump1815
    elements $I18, rx753_bstack
    le $I18, 0, rx753_cut1816
    dec $I18
    set $I18, rx753_bstack[$I18]
  rx753_cut1816:
    assign rx753_cstack, $I18
  rx753_jump1815:
    jump $I19
  rx753_done1812:
    rx753_cur."!cursor_fail"()
    .return (rx753_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_112_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 998
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_114 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx760_start
    .local string rx760_tgt
    .local int rx760_pos
    .local int rx760_off
    .local int rx760_eos
    .local int rx760_rep
    .local pmc rx760_cur
    .local pmc rx760_curclass
    .local pmc rx760_bstack
    .local pmc rx760_cstack
    rx760_start = self."!cursor_start_all"()
    set rx760_cur, rx760_start[0]
    set rx760_tgt, rx760_start[1]
    set rx760_pos, rx760_start[2]
    set rx760_curclass, rx760_start[3]
    set rx760_bstack, rx760_start[4]
    set $I19, rx760_start[5]
    store_lex unicode:"$\x{a2}", rx760_cur
    length rx760_eos, rx760_tgt
    eq $I19, 1, rx760_restart1831
    gt rx760_pos, rx760_eos, rx760_fail1832
    repr_get_attr_int $I11, self, rx760_curclass, "$!from"
    ne $I11, -1, rxscan761_done1838
    goto rxscan761_scan1837
  rxscan761_loop1836:
    inc rx760_pos
    gt rx760_pos, rx760_eos, rx760_fail1832
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!from", rx760_pos
  rxscan761_scan1837:
    nqp_rxmark rx760_bstack, rxscan761_loop1836, rx760_pos, 0
  rxscan761_done1838:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    store_lex unicode:"$\x{a2}", rx760_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1839
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_114, $P5004
    repr_defined $I5001, fb_tmp_114
    unless $I5001 goto if762_else1840 
    set $P5006, fb_tmp_114["$PACKAGE"]
    set $P5008, $P5006
    goto if762_end1841
  if762_else1840:
    null $P5007
    set $P5008, $P5007
  if762_end1841:
    unless_null $P5008, vivi_7631842
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7631842:
    unless_null $P5008, vivi_7641843
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7641843:
    set $P5003, $P5008
  fallback1839:
    set $P101, $P5003
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    store_lex unicode:"$\x{a2}", rx760_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx760_bstack, rxcap765_fail1845, rx760_pos, 0
    add $I11, rx760_pos, 6
    gt $I11, rx760_eos, rx760_fail1832
    substr $S10, rx760_tgt, rx760_pos, 6
    ne $S10, ucs4:"native", rx760_fail1832
    add rx760_pos, 6
    nqp_rxpeek $I19, rx760_bstack, rxcap765_fail1845
    inc $I19
    set $I11, rx760_bstack[$I19]
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx760_pos)
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "sym")
    goto rxcap765_done1844
  rxcap765_fail1845:
    goto rx760_fail1832
  rxcap765_done1844:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1832
    nqp_rxmark rx760_bstack, rxsubrule766_pass1846, -1, 0
  rxsubrule766_pass1846:
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    rx760_cur."!cursor_pass"(rx760_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx760_cur)
  rx760_restart1831:
    repr_get_attr_obj rx760_cstack, rx760_cur, rx760_curclass, "$!cstack"
  rx760_fail1832:
    unless rx760_bstack, rx760_done1830
    pop $I19, rx760_bstack
    if_null rx760_cstack, rx760_cstack_done1835
    unless rx760_cstack, rx760_cstack_done1835
    dec $I19
    set $P11, rx760_cstack[$I19]
  rx760_cstack_done1835:
    pop rx760_rep, rx760_bstack
    pop rx760_pos, rx760_bstack
    pop $I19, rx760_bstack
    lt rx760_pos, -1, rx760_done1830
    lt rx760_pos, 0, rx760_fail1832
    eq $I19, 0, rx760_fail1832
    nqp_islist $I20, rx760_cstack
    unless $I20, rx760_jump1833
    elements $I18, rx760_bstack
    le $I18, 0, rx760_cut1834
    dec $I18
    set $I18, rx760_bstack[$I18]
  rx760_cut1834:
    assign rx760_cstack, $I18
  rx760_jump1833:
    jump $I19
  rx760_done1830:
    rx760_cur."!cursor_fail"()
    .return (rx760_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_113_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1003
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_115 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx767_start
    .local string rx767_tgt
    .local int rx767_pos
    .local int rx767_off
    .local int rx767_eos
    .local int rx767_rep
    .local pmc rx767_cur
    .local pmc rx767_curclass
    .local pmc rx767_bstack
    .local pmc rx767_cstack
    rx767_start = self."!cursor_start_all"()
    set rx767_cur, rx767_start[0]
    set rx767_tgt, rx767_start[1]
    set rx767_pos, rx767_start[2]
    set rx767_curclass, rx767_start[3]
    set rx767_bstack, rx767_start[4]
    set $I19, rx767_start[5]
    store_lex unicode:"$\x{a2}", rx767_cur
    length rx767_eos, rx767_tgt
    eq $I19, 1, rx767_restart1849
    gt rx767_pos, rx767_eos, rx767_fail1850
    repr_get_attr_int $I11, self, rx767_curclass, "$!from"
    ne $I11, -1, rxscan768_done1856
    goto rxscan768_scan1855
  rxscan768_loop1854:
    inc rx767_pos
    gt rx767_pos, rx767_eos, rx767_fail1850
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!from", rx767_pos
  rxscan768_scan1855:
    nqp_rxmark rx767_bstack, rxscan768_loop1854, rx767_pos, 0
  rxscan768_done1856:
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    store_lex unicode:"$\x{a2}", rx767_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback1857
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_115, $P5004
    repr_defined $I5001, fb_tmp_115
    unless $I5001 goto if769_else1858 
    set $P5006, fb_tmp_115["$PACKAGE"]
    set $P5008, $P5006
    goto if769_end1859
  if769_else1858:
    null $P5007
    set $P5008, $P5007
  if769_end1859:
    unless_null $P5008, vivi_7701860
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_7701860:
    unless_null $P5008, vivi_7711861
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_7711861:
    set $P5003, $P5008
  fallback1857:
    set $P101, $P5003
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    store_lex unicode:"$\x{a2}", rx767_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx767_bstack, rxcap772_fail1863, rx767_pos, 0
    add $I11, rx767_pos, 4
    gt $I11, rx767_eos, rx767_fail1850
    substr $S10, rx767_tgt, rx767_pos, 4
    ne $S10, ucs4:"stub", rx767_fail1850
    add rx767_pos, 4
    nqp_rxpeek $I19, rx767_bstack, rxcap772_fail1863
    inc $I19
    set $I11, rx767_bstack[$I19]
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx767_pos)
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "sym")
    goto rxcap772_done1862
  rxcap772_fail1863:
    goto rx767_fail1850
  rxcap772_done1862:
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule773_pass1864
  rxsubrule773_back1865:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule773_pass1864:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule773_back1865
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."name"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule774_pass1866
  rxsubrule774_back1867:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule774_pass1866:
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule774_back1867
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule775_pass1868
  rxsubrule775_back1869:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule775_pass1868:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule775_back1869
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 9
    gt $I11, rx767_eos, rx767_fail1850
    substr $S10, rx767_tgt, rx767_pos, 9
    ne $S10, ucs4:"metaclass", rx767_fail1850
    add rx767_pos, 9
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule776_pass1870
  rxsubrule776_back1871:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule776_pass1870:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule776_back1871
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."name"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule777_pass1872
  rxsubrule777_back1873:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule777_pass1872:
    rx767_cstack = rx767_cur."!cursor_capture"($P11, "metaclass")
    set_addr $I11, rxsubrule777_back1873
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule778_pass1874
  rxsubrule778_back1875:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule778_pass1874:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule778_back1875
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 1
    gt $I11, rx767_eos, rx767_fail1850
    substr $S10, rx767_tgt, rx767_pos, 1
    ne $S10, ucs4:"{", rx767_fail1850
    add rx767_pos, 1
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule779_pass1876
  rxsubrule779_back1877:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule779_pass1876:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule779_back1877
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 3
    gt $I11, rx767_eos, rx767_fail1850
    substr $S10, rx767_tgt, rx767_pos, 3
    ne $S10, ucs4:"...", rx767_fail1850
    add rx767_pos, 3
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule780_pass1878
  rxsubrule780_back1879:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule780_pass1878:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule780_back1879
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    add $I11, rx767_pos, 1
    gt $I11, rx767_eos, rx767_fail1850
    substr $S10, rx767_tgt, rx767_pos, 1
    ne $S10, ucs4:"}", rx767_fail1850
    add rx767_pos, 1
    repr_bind_attr_int rx767_cur, rx767_curclass, "$!pos", rx767_pos
    $P11 = rx767_cur."ws"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
    goto rxsubrule781_pass1880
  rxsubrule781_back1881:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx767_curclass, "$!pos"
    lt $I11, 0, rx767_fail1850
  rxsubrule781_pass1880:
    rx767_cstack = rx767_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule781_back1881
    push rx767_bstack, $I11
    push rx767_bstack, 0
    push rx767_bstack, rx767_pos
    elements $I11, rx767_cstack
    push rx767_bstack, $I11
    repr_get_attr_int rx767_pos, $P11, rx767_curclass, "$!pos"
    rx767_cur."!cursor_pass"(rx767_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx767_cur)
  rx767_restart1849:
    repr_get_attr_obj rx767_cstack, rx767_cur, rx767_curclass, "$!cstack"
  rx767_fail1850:
    unless rx767_bstack, rx767_done1848
    pop $I19, rx767_bstack
    if_null rx767_cstack, rx767_cstack_done1853
    unless rx767_cstack, rx767_cstack_done1853
    dec $I19
    set $P11, rx767_cstack[$I19]
  rx767_cstack_done1853:
    pop rx767_rep, rx767_bstack
    pop rx767_pos, rx767_bstack
    pop $I19, rx767_bstack
    lt rx767_pos, -1, rx767_done1848
    lt rx767_pos, 0, rx767_fail1850
    eq $I19, 0, rx767_fail1850
    nqp_islist $I20, rx767_cstack
    unless $I20, rx767_jump1851
    elements $I18, rx767_bstack
    le $I18, 0, rx767_cut1852
    dec $I18
    set $I18, rx767_bstack[$I18]
  rx767_cut1852:
    assign rx767_cstack, $I18
  rx767_jump1851:
    jump $I19
  rx767_done1848:
    rx767_cur."!cursor_fail"()
    .return (rx767_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_114_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1011
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_415_1382484127.52628' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_416_1382484127.52628' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx782_start
    .local string rx782_tgt
    .local int rx782_pos
    .local int rx782_off
    .local int rx782_eos
    .local int rx782_rep
    .local pmc rx782_cur
    .local pmc rx782_curclass
    .local pmc rx782_bstack
    .local pmc rx782_cstack
    rx782_start = self."!cursor_start_all"()
    set rx782_cur, rx782_start[0]
    set rx782_tgt, rx782_start[1]
    set rx782_pos, rx782_start[2]
    set rx782_curclass, rx782_start[3]
    set rx782_bstack, rx782_start[4]
    set $I19, rx782_start[5]
    store_lex unicode:"$\x{a2}", rx782_cur
    length rx782_eos, rx782_tgt
    eq $I19, 1, rx782_restart1884
    gt rx782_pos, rx782_eos, rx782_fail1885
    repr_get_attr_int $I11, self, rx782_curclass, "$!from"
    ne $I11, -1, rxscan783_done1891
    goto rxscan783_scan1890
  rxscan783_loop1889:
    inc rx782_pos
    gt rx782_pos, rx782_eos, rx782_fail1885
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!from", rx782_pos
  rxscan783_scan1890:
    nqp_rxmark rx782_bstack, rxscan783_loop1889, rx782_pos, 0
  rxscan783_done1891:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    unless_null $P101, fallback1892
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_116, $P5003
    repr_defined $I5001, fb_tmp_116
    unless $I5001 goto if784_else1893 
    set $P5005, fb_tmp_116["$PACKAGE"]
    set $P5007, $P5005
    goto if784_end1894
  if784_else1893:
    null $P5006
    set $P5007, $P5006
  if784_end1894:
    unless_null $P5007, vivi_7851895
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_7851895:
    unless_null $P5007, vivi_7861896
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_7861896:
    set $P101, $P5007
  fallback1892:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
.annotate 'line', 1013
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback1897
    nqp_get_sc_object $P5012, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5011, $P5012
    set fb_tmp_117, $P5011
    repr_defined $I5002, fb_tmp_117
    unless $I5002 goto if787_else1898 
    set $P5013, fb_tmp_117["$W"]
    set $P5015, $P5013
    goto if787_end1899
  if787_else1898:
    null $P5014
    set $P5015, $P5014
  if787_end1899:
    unless_null $P5015, vivi_7881900
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_7881900:
    unless_null $P5015, vivi_7891901
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_7891901:
    set $P5010, $P5015
  fallback1897:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    add $I11, rx782_pos, 0
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 0
    ne $S10, ucs4:"", rx782_fail1885
    add rx782_pos, 0
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule790_pass1902
  rxsubrule790_back1903:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule790_pass1902:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule790_back1903
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule791_pass1904
  rxsubrule791_back1905:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule791_pass1904:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "name")
    set_addr $I11, rxsubrule791_back1905
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule792_pass1906
  rxsubrule792_back1907:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule792_pass1906:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule792_back1907
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule793_pass1908
  rxsubrule793_back1909:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule793_pass1908:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule793_back1909
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule794_pass1910
  rxsubrule794_back1911:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule794_pass1910:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule794_back1911
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantg795_done1913, rx782_pos, 0
  rxquantg795_loop1912:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_415_1382484127.52628' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx782_fail1885
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule799_pass1919
  rxsubrule799_back1920:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule799_pass1919:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule799_back1920
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:"[", rx782_fail1885
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule800_pass1921
  rxsubrule800_back1922:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule800_pass1921:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule800_back1922
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule801_pass1923
  rxsubrule801_back1924:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule801_pass1923:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "role_params")
    set_addr $I11, rxsubrule801_back1924
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule802_pass1925
  rxsubrule802_back1926:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule802_pass1925:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule802_back1926
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt803_01928:
    nqp_rxmark rx782_bstack, alt803_11931, rx782_pos, 0
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:"]", rx782_fail1885
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule804_pass1929
  rxsubrule804_back1930:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule804_pass1929:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule804_back1930
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt803_end1927
  alt803_11931:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."FAILGOAL"("']' ")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule805_pass1932
  rxsubrule805_back1933:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule805_pass1932:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule805_back1933
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt803_end1927:
  rxquantg795_done1913:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule806_pass1934
  rxsubrule806_back1935:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule806_pass1934:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule806_back1935
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantg807_done1937, rx782_pos, 0
  rxquantg807_loop1936:
    add $I11, rx782_pos, 2
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 2
    ne $S10, ucs4:"is", rx782_fail1885
    add rx782_pos, 2
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule808_pass1938
  rxsubrule808_back1939:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule808_pass1938:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule808_back1939
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 5
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 5
    ne $S10, ucs4:"repr(", rx782_fail1885
    add rx782_pos, 5
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule809_pass1940
  rxsubrule809_back1941:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule809_pass1940:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule809_back1941
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule810_pass1942
  rxsubrule810_back1943:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule810_pass1942:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "repr")
    set_addr $I11, rxsubrule810_back1943
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule811_pass1944
  rxsubrule811_back1945:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule811_pass1944:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule811_back1945
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:")", rx782_fail1885
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule812_pass1946
  rxsubrule812_back1947:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule812_pass1946:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule812_back1947
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  rxquantg807_done1937:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule813_pass1948
  rxsubrule813_back1949:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule813_pass1948:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule813_back1949
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    store_lex unicode:"$\x{a2}", rx782_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_416_1382484127.52628' 
    capture_lex $P5023
    $P5024 = $P5023()
    nqp_rxmark rx782_bstack, rxquantg931_done2151, rx782_pos, 0
  rxquantg931_loop2150:
    nqp_rxmark rx782_bstack, rxcap932_fail2153, rx782_pos, 0
    add $I11, rx782_pos, 9
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 9
    ne $S10, ucs4:"is export", rx782_fail1885
    add rx782_pos, 9
    nqp_rxpeek $I19, rx782_bstack, rxcap932_fail2153
    inc $I19
    set $I11, rx782_bstack[$I19]
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx782_pos)
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "export")
    goto rxcap932_done2152
  rxcap932_fail2153:
    goto rx782_fail1885
  rxcap932_done2152:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule933_pass2154
  rxsubrule933_back2155:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule933_pass2154:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule933_back2155
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  rxquantg931_done2151:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule934_pass2156
  rxsubrule934_back2157:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule934_pass2156:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule934_back2157
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantg935_done2159, rx782_pos, 0
  rxquantg935_loop2158:
    add $I11, rx782_pos, 2
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 2
    ne $S10, ucs4:"is", rx782_fail1885
    add rx782_pos, 2
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule936_pass2160
  rxsubrule936_back2161:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule936_pass2160:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule936_back2161
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule937_pass2162
  rxsubrule937_back2163:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule937_pass2162:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "parent")
    set_addr $I11, rxsubrule937_back2163
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule938_pass2164
  rxsubrule938_back2165:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule938_pass2164:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule938_back2165
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  rxquantg935_done2159:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule939_pass2166
  rxsubrule939_back2167:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule939_pass2166:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule939_back2167
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantg940_done2169, rx782_pos, 0
  rxquantg940_loop2168:
    add $I11, rx782_pos, 4
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 4
    ne $S10, ucs4:"does", rx782_fail1885
    add rx782_pos, 4
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule941_pass2170
  rxsubrule941_back2171:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule941_pass2170:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule941_back2171
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."name"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule942_pass2172
  rxsubrule942_back2173:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule942_pass2172:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "role")
    set_addr $I11, rxsubrule942_back2173
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule943_pass2174
  rxsubrule943_back2175:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule943_pass2174:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule943_back2175
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    nqp_rxmark rx782_bstack, rxquantg940_done2169, rx782_pos, rx782_rep
    goto rxquantg940_loop2168
  rxquantg940_done2169:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule944_pass2176
  rxsubrule944_back2177:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule944_pass2176:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule944_back2177
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt945_02179:
    nqp_rxmark rx782_bstack, alt945_12198, rx782_pos, 0
    add $I11, rx782_pos, 1
    gt $I11, rx782_eos, rx782_fail1885
    substr $S10, rx782_tgt, rx782_pos, 1
    ne $S10, ucs4:";", rx782_fail1885
    add rx782_pos, 1
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule946_pass2180
  rxsubrule946_back2181:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule946_pass2180:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule946_back2181
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule947_pass2182
  rxsubrule947_back2183:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule947_pass2182:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "statementlist")
    set_addr $I11, rxsubrule947_back2183
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule948_pass2184
  rxsubrule948_back2185:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule948_pass2184:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule948_back2185
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt949_02187:
    nqp_rxmark rx782_bstack, alt949_12191, rx782_pos, 0
    lt rx782_pos, rx782_eos, rx782_fail1885
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule951_pass2189
  rxsubrule951_back2190:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule951_pass2189:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule951_back2190
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt949_end2186
  alt949_12191:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule952_pass2192
  rxsubrule952_back2193:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule952_pass2192:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule952_back2193
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule953_pass2194
  rxsubrule953_back2195:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule953_pass2194:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule953_back2195
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt949_end2186:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule954_pass2196
  rxsubrule954_back2197:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule954_pass2196:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule954_back2197
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt945_end2178
  alt945_12198:
    nqp_rxmark rx782_bstack, alt945_22205, rx782_pos, 0
    ge rx782_pos, rx782_eos, rx782_fail1885
    substr $S11, rx782_tgt, rx782_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx782_fail1885
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule955_pass2199
  rxsubrule955_back2200:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule955_pass2199:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule955_back2200
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule956_pass2201
  rxsubrule956_back2202:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule956_pass2201:
    rx782_cstack = rx782_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule956_back2202
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule957_pass2203
  rxsubrule957_back2204:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule957_pass2203:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule957_back2204
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    goto alt945_end2178
  alt945_22205:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule958_pass2206
  rxsubrule958_back2207:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule958_pass2206:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule958_back2207
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule959_pass2208
  rxsubrule959_back2209:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule959_pass2208:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule959_back2209
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
  alt945_end2178:
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule960_pass2210
  rxsubrule960_back2211:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule960_pass2210:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule960_back2211
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    repr_bind_attr_int rx782_cur, rx782_curclass, "$!pos", rx782_pos
    $P11 = rx782_cur."ws"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
    goto rxsubrule961_pass2212
  rxsubrule961_back2213:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx782_curclass, "$!pos"
    lt $I11, 0, rx782_fail1885
  rxsubrule961_pass2212:
    rx782_cstack = rx782_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule961_back2213
    push rx782_bstack, $I11
    push rx782_bstack, 0
    push rx782_bstack, rx782_pos
    elements $I11, rx782_cstack
    push rx782_bstack, $I11
    repr_get_attr_int rx782_pos, $P11, rx782_curclass, "$!pos"
    rx782_cur."!cursor_pass"(rx782_pos, "package_def", 'backtrack'=>1)
    .return (rx782_cur)
  rx782_restart1884:
    repr_get_attr_obj rx782_cstack, rx782_cur, rx782_curclass, "$!cstack"
  rx782_fail1885:
    unless rx782_bstack, rx782_done1883
    pop $I19, rx782_bstack
    if_null rx782_cstack, rx782_cstack_done1888
    unless rx782_cstack, rx782_cstack_done1888
    dec $I19
    set $P11, rx782_cstack[$I19]
  rx782_cstack_done1888:
    pop rx782_rep, rx782_bstack
    pop rx782_pos, rx782_bstack
    pop $I19, rx782_bstack
    lt rx782_pos, -1, rx782_done1883
    lt rx782_pos, 0, rx782_fail1885
    eq $I19, 0, rx782_fail1885
    nqp_islist $I20, rx782_cstack
    unless $I20, rx782_jump1886
    elements $I18, rx782_bstack
    le $I18, 0, rx782_cut1887
    dec $I18
    set $I18, rx782_bstack[$I18]
  rx782_cut1887:
    assign rx782_cstack, $I18
  rx782_jump1886:
    jump $I19
  rx782_done1883:
    rx782_cur."!cursor_fail"()
    .return (rx782_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1382484127.52628") :anon :lex :outer("cuid_114_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1018
    .local pmc fb_tmp_118 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback1914
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_118, $P5002
    repr_defined $I5002, fb_tmp_118
    unless $I5002 goto if796_else1915 
    set $P5004, fb_tmp_118["$PKGDECL"]
    set $P5006, $P5004
    goto if796_end1916
  if796_else1915:
    null $P5005
    set $P5006, $P5005
  if796_end1916:
    unless_null $P5006, vivi_7971917
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_7971917:
    unless_null $P5006, vivi_7981918
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_7981918:
    set $P5001, $P5006
  fallback1914:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1382484127.52628") :anon :lex :outer("cuid_114_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1021
    .lex "%args", $P101 
    .lex "$how", $P102 
    .lex "$INNER", $P103 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc fb_tmp_149 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    find_lex $P5004, "$/"
    unless_null $P5004, fallback1952
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  fallback1952:
    set fb_tmp_119, $P5004
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if814_else1950 
    set $P5006, fb_tmp_119["name"]
    set $P5008, $P5006
    goto if814_end1951
  if814_else1950:
    null $P5007
    set $P5008, $P5007
  if814_end1951:
    unless_null $P5008, vivi_8151953
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_8151953:
    set $S5001, $P5008
    box $P5010, $S5001
    set $P101["name"], $P5010
    find_lex $P5011, "$/"
    unless_null $P5011, fallback1958
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  fallback1958:
    set fb_tmp_120, $P5011
    repr_defined $I5002, fb_tmp_120
    unless $I5002 goto if817_else1956 
    set $P5013, fb_tmp_120["repr"]
    set $P5015, $P5013
    goto if817_end1957
  if817_else1956:
    null $P5014
    set $P5015, $P5014
  if817_end1957:
    unless_null $P5015, vivi_8181959
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_8181959:
    unless $P5015 goto if816_end1955 
.annotate 'line', 1026
    find_lex $P5017, "$/"
    unless_null $P5017, fallback1968
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  fallback1968:
    set fb_tmp_124, $P5017
    repr_defined $I5006, fb_tmp_124
    unless $I5006 goto if822_else1966 
    set $P5019, fb_tmp_124["repr"]
    set $P5021, $P5019
    goto if822_end1967
  if822_else1966:
    null $P5020
    set $P5021, $P5020
  if822_end1967:
    unless_null $P5021, vivi_8231969
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_8231969:
    set fb_tmp_123, $P5021
    repr_defined $I5005, fb_tmp_123
    unless $I5005 goto if821_else1964 
    set $P5023, fb_tmp_123["quote_delimited"]
    set $P5025, $P5023
    goto if821_end1965
  if821_else1964:
    null $P5024
    set $P5025, $P5024
  if821_end1965:
    unless_null $P5025, vivi_8241970
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_8241970:
    set fb_tmp_122, $P5025
    repr_defined $I5004, fb_tmp_122
    unless $I5004 goto if820_else1962 
    set $P5027, fb_tmp_122["quote_atom"]
    set $P5029, $P5027
    goto if820_end1963
  if820_else1962:
    null $P5028
    set $P5029, $P5028
  if820_end1963:
    unless_null $P5029, vivi_8251971
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_8251971:
    set fb_tmp_121, $P5029
    repr_defined $I5003, fb_tmp_121
    unless $I5003 goto if819_else1960 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if819_end1961
  if819_else1960:
    null $P5032
    set $P5033, $P5032
  if819_end1961:
    unless_null $P5033, vivi_8261972
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_8261972:
    set $S5002, $P5033
    box $P5035, $S5002
    set $P101["repr"], $P5035
  if816_end1955:
    find_dynamic_lex $P5036, "%*HOW"
    unless_null $P5036, fallback1975
    nqp_get_sc_object $P5038, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5037, $P5038
    set pkg_viv_tmp_25, $P5037
    set fb_tmp_126, pkg_viv_tmp_25
    repr_defined $I5008, fb_tmp_126
    unless $I5008 goto if828_else1976 
    set $P5039, fb_tmp_126["%HOW"]
    set $P5041, $P5039
    goto if828_end1977
  if828_else1976:
    null $P5040
    set $P5041, $P5040
  if828_end1977:
    unless_null $P5041, vivi_8291978
    new $P5042, 'Hash'
    set pkg_viv_tmp_25["%HOW"], $P5042
    set $P5041, $P5042
  vivi_8291978:
    unless_null $P5041, vivi_8301979
    die "Contextual %*HOW not found"
    box $P5043, "Contextual %*HOW not found"
    set $P5041, $P5043
  vivi_8301979:
    set $P5036, $P5041
  fallback1975:
    set fb_tmp_125, $P5036
    repr_defined $I5007, fb_tmp_125
    unless $I5007 goto if827_else1973 
    find_dynamic_lex $P5045, "$*PKGDECL"
    unless_null $P5045, fallback1980
    nqp_get_sc_object $P5047, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5046, $P5047
    set fb_tmp_127, $P5046
    repr_defined $I5009, fb_tmp_127
    unless $I5009 goto if831_else1981 
    set $P5048, fb_tmp_127["$PKGDECL"]
    set $P5050, $P5048
    goto if831_end1982
  if831_else1981:
    null $P5049
    set $P5050, $P5049
  if831_end1982:
    unless_null $P5050, vivi_8321983
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5050, $P5051
  vivi_8321983:
    unless_null $P5050, vivi_8331984
    die "Contextual $*PKGDECL not found"
    box $P5052, "Contextual $*PKGDECL not found"
    set $P5050, $P5052
  vivi_8331984:
    set $P5045, $P5050
  fallback1980:
    set $S5003, $P5045
    set $P5044, fb_tmp_125[$S5003]
    set $P5054, $P5044
    goto if827_end1974
  if827_else1973:
    null $P5053
    set $P5054, $P5053
  if827_end1974:
    unless_null $P5054, vivi_8341985
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5054, $P5055
  vivi_8341985:
    set $P102, $P5054
.annotate 'line', 1030
    find_dynamic_lex $P5056, "$*W"
    unless_null $P5056, fallback1986
    nqp_get_sc_object $P5058, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5057, $P5058
    set fb_tmp_128, $P5057
    repr_defined $I5010, fb_tmp_128
    unless $I5010 goto if835_else1987 
    set $P5059, fb_tmp_128["$W"]
    set $P5061, $P5059
    goto if835_end1988
  if835_else1987:
    null $P5060
    set $P5061, $P5060
  if835_end1988:
    unless_null $P5061, vivi_8361989
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5061, $P5062
  vivi_8361989:
    unless_null $P5061, vivi_8371990
    die "Contextual $*W not found"
    box $P5063, "Contextual $*W not found"
    set $P5061, $P5063
  vivi_8371990:
    set $P5056, $P5061
  fallback1986:
    $P5064 = $P5056."cur_lexpad"()
    set $P103, $P5064
.annotate 'line', 1031
    find_dynamic_lex $P5065, "$*W"
    unless_null $P5065, fallback1991
    nqp_get_sc_object $P5067, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5066, $P5067
    set fb_tmp_129, $P5066
    repr_defined $I5011, fb_tmp_129
    unless $I5011 goto if838_else1992 
    set $P5068, fb_tmp_129["$W"]
    set $P5070, $P5068
    goto if838_end1993
  if838_else1992:
    null $P5069
    set $P5070, $P5069
  if838_end1993:
    unless_null $P5070, vivi_8391994
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5070, $P5071
  vivi_8391994:
    unless_null $P5070, vivi_8401995
    die "Contextual $*W not found"
    box $P5072, "Contextual $*W not found"
    set $P5070, $P5072
  vivi_8401995:
    set $P5065, $P5070
  fallback1991:
    $P5073 = $P5065."pkg_create_mo"($P102, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5073
    can $I5012, $P102, "parametric"
    box $P5076, $I5012
    set $P5075, $P5076
    unless $I5012 goto if842_end1999 
.annotate 'line', 1034
    $P5074 = $P102."parametric"($P102)
    set $P5075, $P5074
  if842_end1999:
    unless $P5075 goto if841_else1996 
.annotate 'line', 1035
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback2000
    nqp_get_sc_object $P5079, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5078, $P5079
    set fb_tmp_130, $P5078
    repr_defined $I5013, fb_tmp_130
    unless $I5013 goto if843_else2001 
    set $P5080, fb_tmp_130["$W"]
    set $P5082, $P5080
    goto if843_end2002
  if843_else2001:
    null $P5081
    set $P5082, $P5081
  if843_end2002:
    unless_null $P5082, vivi_8442003
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_8442003:
    unless_null $P5082, vivi_8452004
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_8452004:
    set $P5077, $P5082
  fallback2000:
    find_dynamic_lex $P5085, "$*PACKAGE"
    unless_null $P5085, fallback2005
    nqp_get_sc_object $P5087, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5086, $P5087
    set fb_tmp_131, $P5086
    repr_defined $I5014, fb_tmp_131
    unless $I5014 goto if846_else2006 
    set $P5088, fb_tmp_131["$PACKAGE"]
    set $P5090, $P5088
    goto if846_end2007
  if846_else2006:
    null $P5089
    set $P5090, $P5089
  if846_end2007:
    unless_null $P5090, vivi_8472008
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5090, $P5091
  vivi_8472008:
    unless_null $P5090, vivi_8482009
    die "Contextual $*PACKAGE not found"
    box $P5092, "Contextual $*PACKAGE not found"
    set $P5090, $P5092
  vivi_8482009:
    set $P5085, $P5090
  fallback2005:
    $P5077."install_lexical_symbol"($P103, "$?PACKAGE", $P5085)
.annotate 'line', 1036
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback2010
    nqp_get_sc_object $P5095, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5094, $P5095
    set fb_tmp_132, $P5094
    repr_defined $I5015, fb_tmp_132
    unless $I5015 goto if849_else2011 
    set $P5096, fb_tmp_132["$W"]
    set $P5098, $P5096
    goto if849_end2012
  if849_else2011:
    null $P5097
    set $P5098, $P5097
  if849_end2012:
    unless_null $P5098, vivi_8502013
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5098, $P5099
  vivi_8502013:
    unless_null $P5098, vivi_8512014
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_8512014:
    set $P5093, $P5098
  fallback2010:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback2015
    nqp_get_sc_object $P5103, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5102, $P5103
    set fb_tmp_133, $P5102
    repr_defined $I5016, fb_tmp_133
    unless $I5016 goto if852_else2016 
    set $P5104, fb_tmp_133["$PACKAGE"]
    set $P5106, $P5104
    goto if852_end2017
  if852_else2016:
    null $P5105
    set $P5106, $P5105
  if852_end2017:
    unless_null $P5106, vivi_8532018
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5106, $P5107
  vivi_8532018:
    unless_null $P5106, vivi_8542019
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_8542019:
    set $P5101, $P5106
  fallback2015:
    $P5109 = $P5093."install_lexical_symbol"($P103, "$?ROLE", $P5101)
    goto if841_end1997
  if841_else1996:
.annotate 'line', 1038
.annotate 'line', 1039
    find_dynamic_lex $P5110, "$*W"
    unless_null $P5110, fallback2020
    nqp_get_sc_object $P5112, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5111, $P5112
    set fb_tmp_134, $P5111
    repr_defined $I5017, fb_tmp_134
    unless $I5017 goto if855_else2021 
    set $P5113, fb_tmp_134["$W"]
    set $P5115, $P5113
    goto if855_end2022
  if855_else2021:
    null $P5114
    set $P5115, $P5114
  if855_end2022:
    unless_null $P5115, vivi_8562023
    nqp_get_sc_object $P5116, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5115, $P5116
  vivi_8562023:
    unless_null $P5115, vivi_8572024
    die "Contextual $*W not found"
    box $P5117, "Contextual $*W not found"
    set $P5115, $P5117
  vivi_8572024:
    set $P5110, $P5115
  fallback2020:
    find_dynamic_lex $P5118, "$*PACKAGE"
    unless_null $P5118, fallback2025
    nqp_get_sc_object $P5120, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5119, $P5120
    set fb_tmp_135, $P5119
    repr_defined $I5018, fb_tmp_135
    unless $I5018 goto if858_else2026 
    set $P5121, fb_tmp_135["$PACKAGE"]
    set $P5123, $P5121
    goto if858_end2027
  if858_else2026:
    null $P5122
    set $P5123, $P5122
  if858_end2027:
    unless_null $P5123, vivi_8592028
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5123, $P5124
  vivi_8592028:
    unless_null $P5123, vivi_8602029
    die "Contextual $*PACKAGE not found"
    box $P5125, "Contextual $*PACKAGE not found"
    set $P5123, $P5125
  vivi_8602029:
    set $P5118, $P5123
  fallback2025:
    $P5110."install_lexical_symbol"($P103, "$?PACKAGE", $P5118)
.annotate 'line', 1040
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback2030
    nqp_get_sc_object $P5128, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5127, $P5128
    set fb_tmp_136, $P5127
    repr_defined $I5019, fb_tmp_136
    unless $I5019 goto if861_else2031 
    set $P5129, fb_tmp_136["$W"]
    set $P5131, $P5129
    goto if861_end2032
  if861_else2031:
    null $P5130
    set $P5131, $P5130
  if861_end2032:
    unless_null $P5131, vivi_8622033
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5131, $P5132
  vivi_8622033:
    unless_null $P5131, vivi_8632034
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_8632034:
    set $P5126, $P5131
  fallback2030:
    find_dynamic_lex $P5134, "$*PACKAGE"
    unless_null $P5134, fallback2035
    nqp_get_sc_object $P5136, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5135, $P5136
    set fb_tmp_137, $P5135
    repr_defined $I5020, fb_tmp_137
    unless $I5020 goto if864_else2036 
    set $P5137, fb_tmp_137["$PACKAGE"]
    set $P5139, $P5137
    goto if864_end2037
  if864_else2036:
    null $P5138
    set $P5139, $P5138
  if864_end2037:
    unless_null $P5139, vivi_8652038
    nqp_get_sc_object $P5140, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5139, $P5140
  vivi_8652038:
    unless_null $P5139, vivi_8662039
    die "Contextual $*PACKAGE not found"
    box $P5141, "Contextual $*PACKAGE not found"
    set $P5139, $P5141
  vivi_8662039:
    set $P5134, $P5139
  fallback2035:
    $P5142 = $P5126."install_lexical_symbol"($P103, "$?CLASS", $P5134)
  if841_end1997:
    find_dynamic_lex $P5143, "$*SCOPE"
    unless_null $P5143, fallback2044
    nqp_get_sc_object $P5145, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5144, $P5145
    set fb_tmp_138, $P5144
    repr_defined $I5022, fb_tmp_138
    unless $I5022 goto if869_else2045 
    set $P5146, fb_tmp_138["$SCOPE"]
    set $P5148, $P5146
    goto if869_end2046
  if869_else2045:
    null $P5147
    set $P5148, $P5147
  if869_end2046:
    unless_null $P5148, vivi_8702047
    nqp_get_sc_object $P5149, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5148, $P5149
  vivi_8702047:
    unless_null $P5148, vivi_8712048
    die "Contextual $*SCOPE not found"
    box $P5150, "Contextual $*SCOPE not found"
    set $P5148, $P5150
  vivi_8712048:
    set $P5143, $P5148
  fallback2044:
    set $S5004, $P5143
    iseq $I5021, $S5004, "our"
    set $I5025, $I5021
    if $I5021 goto unless868_end2043 
    find_dynamic_lex $P5151, "$*SCOPE"
    unless_null $P5151, fallback2049
    nqp_get_sc_object $P5153, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5152, $P5153
    set fb_tmp_139, $P5152
    repr_defined $I5024, fb_tmp_139
    unless $I5024 goto if872_else2050 
    set $P5154, fb_tmp_139["$SCOPE"]
    set $P5156, $P5154
    goto if872_end2051
  if872_else2050:
    null $P5155
    set $P5156, $P5155
  if872_end2051:
    unless_null $P5156, vivi_8732052
    nqp_get_sc_object $P5157, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5156, $P5157
  vivi_8732052:
    unless_null $P5156, vivi_8742053
    die "Contextual $*SCOPE not found"
    box $P5158, "Contextual $*SCOPE not found"
    set $P5156, $P5158
  vivi_8742053:
    set $P5151, $P5156
  fallback2049:
    set $S5005, $P5151
    iseq $I5023, $S5005, ""
    set $I5025, $I5023
  unless868_end2043:
    unless $I5025 goto if867_else2040 
.annotate 'line', 1044
.annotate 'line', 1045
    find_dynamic_lex $P5159, "$*W"
    unless_null $P5159, fallback2054
    nqp_get_sc_object $P5161, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5160, $P5161
    set fb_tmp_140, $P5160
    repr_defined $I5026, fb_tmp_140
    unless $I5026 goto if875_else2055 
    set $P5162, fb_tmp_140["$W"]
    set $P5164, $P5162
    goto if875_end2056
  if875_else2055:
    null $P5163
    set $P5164, $P5163
  if875_end2056:
    unless_null $P5164, vivi_8762057
    nqp_get_sc_object $P5165, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5164, $P5165
  vivi_8762057:
    unless_null $P5164, vivi_8772058
    die "Contextual $*W not found"
    box $P5166, "Contextual $*W not found"
    set $P5164, $P5166
  vivi_8772058:
    set $P5159, $P5164
  fallback2054:
    find_dynamic_lex $P5167, "$*OUTERPACKAGE"
    unless_null $P5167, fallback2059
    nqp_get_sc_object $P5169, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5168, $P5169
    set fb_tmp_141, $P5168
    repr_defined $I5027, fb_tmp_141
    unless $I5027 goto if878_else2060 
    set $P5170, fb_tmp_141["$OUTERPACKAGE"]
    set $P5172, $P5170
    goto if878_end2061
  if878_else2060:
    null $P5171
    set $P5172, $P5171
  if878_end2061:
    unless_null $P5172, vivi_8792062
    nqp_get_sc_object $P5173, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5172, $P5173
  vivi_8792062:
    unless_null $P5172, vivi_8802063
    die "Contextual $*OUTERPACKAGE not found"
    box $P5174, "Contextual $*OUTERPACKAGE not found"
    set $P5172, $P5174
  vivi_8802063:
    set $P5167, $P5172
  fallback2059:
    find_lex $P5175, "$/"
    unless_null $P5175, fallback2068
    nqp_get_sc_object $P5176, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5175, $P5176
  fallback2068:
    set fb_tmp_143, $P5175
    repr_defined $I5029, fb_tmp_143
    unless $I5029 goto if882_else2066 
    set $P5177, fb_tmp_143["name"]
    set $P5179, $P5177
    goto if882_end2067
  if882_else2066:
    null $P5178
    set $P5179, $P5178
  if882_end2067:
    unless_null $P5179, vivi_8832069
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5179, $P5180
  vivi_8832069:
    set fb_tmp_142, $P5179
    repr_defined $I5028, fb_tmp_142
    unless $I5028 goto if881_else2064 
    set $P5181, fb_tmp_142["identifier"]
    set $P5183, $P5181
    goto if881_end2065
  if881_else2064:
    null $P5182
    set $P5183, $P5182
  if881_end2065:
    unless_null $P5183, vivi_8842070
    nqp_get_sc_object $P5184, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5183, $P5184
  vivi_8842070:
    find_dynamic_lex $P5185, "$*PACKAGE"
    unless_null $P5185, fallback2071
    nqp_get_sc_object $P5187, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5186, $P5187
    set fb_tmp_144, $P5186
    repr_defined $I5030, fb_tmp_144
    unless $I5030 goto if885_else2072 
    set $P5188, fb_tmp_144["$PACKAGE"]
    set $P5190, $P5188
    goto if885_end2073
  if885_else2072:
    null $P5189
    set $P5190, $P5189
  if885_end2073:
    unless_null $P5190, vivi_8862074
    nqp_get_sc_object $P5191, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5190, $P5191
  vivi_8862074:
    unless_null $P5190, vivi_8872075
    die "Contextual $*PACKAGE not found"
    box $P5192, "Contextual $*PACKAGE not found"
    set $P5190, $P5192
  vivi_8872075:
    set $P5185, $P5190
  fallback2071:
    $P5159."install_package_symbol"($P5167, $P5183, $P5185)
    find_lex $P5193, "$/"
    unless_null $P5193, fallback2082
    nqp_get_sc_object $P5194, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5193, $P5194
  fallback2082:
    set fb_tmp_146, $P5193
    repr_defined $I5033, fb_tmp_146
    unless $I5033 goto if890_else2080 
    set $P5195, fb_tmp_146["name"]
    set $P5197, $P5195
    goto if890_end2081
  if890_else2080:
    null $P5196
    set $P5197, $P5196
  if890_end2081:
    unless_null $P5197, vivi_8912083
    nqp_get_sc_object $P5198, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5197, $P5198
  vivi_8912083:
    set fb_tmp_145, $P5197
    repr_defined $I5032, fb_tmp_145
    unless $I5032 goto if889_else2078 
    set $P5199, fb_tmp_145["identifier"]
    set $P5201, $P5199
    goto if889_end2079
  if889_else2078:
    null $P5200
    set $P5201, $P5200
  if889_end2079:
    unless_null $P5201, vivi_8922084
    nqp_get_sc_object $P5202, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5201, $P5202
  vivi_8922084:
    set $N5001, $P5201
    set $N5002, 1
    iseq $I5031, $N5001, $N5002
    box $P5236, $I5031
    set $P5235, $P5236
    unless $I5031 goto if888_end2077 
.annotate 'line', 1046
.annotate 'line', 1047
    find_dynamic_lex $P5203, "$*W"
    unless_null $P5203, fallback2085
    nqp_get_sc_object $P5205, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5204, $P5205
    set fb_tmp_147, $P5204
    repr_defined $I5034, fb_tmp_147
    unless $I5034 goto if893_else2086 
    set $P5206, fb_tmp_147["$W"]
    set $P5208, $P5206
    goto if893_end2087
  if893_else2086:
    null $P5207
    set $P5208, $P5207
  if893_end2087:
    unless_null $P5208, vivi_8942088
    nqp_get_sc_object $P5209, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5208, $P5209
  vivi_8942088:
    unless_null $P5208, vivi_8952089
    die "Contextual $*W not found"
    box $P5210, "Contextual $*W not found"
    set $P5208, $P5210
  vivi_8952089:
    set $P5203, $P5208
  fallback2085:
    find_lex $P5211, "$OUTER"
    find_lex $P5212, "$/"
    unless_null $P5212, fallback2096
    nqp_get_sc_object $P5213, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5212, $P5213
  fallback2096:
    set fb_tmp_150, $P5212
    repr_defined $I5037, fb_tmp_150
    unless $I5037 goto if898_else2094 
    set $P5214, fb_tmp_150["name"]
    set $P5216, $P5214
    goto if898_end2095
  if898_else2094:
    null $P5215
    set $P5216, $P5215
  if898_end2095:
    unless_null $P5216, vivi_8992097
    nqp_get_sc_object $P5217, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5216, $P5217
  vivi_8992097:
    set fb_tmp_149, $P5216
    repr_defined $I5036, fb_tmp_149
    unless $I5036 goto if897_else2092 
    set $P5218, fb_tmp_149["identifier"]
    set $P5220, $P5218
    goto if897_end2093
  if897_else2092:
    null $P5219
    set $P5220, $P5219
  if897_end2093:
    unless_null $P5220, vivi_9002098
    nqp_get_sc_object $P5221, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5220, $P5221
  vivi_9002098:
    set fb_tmp_148, $P5220
    repr_defined $I5035, fb_tmp_148
    unless $I5035 goto if896_else2090 
    set $P5222, fb_tmp_148[0]
    set $P5224, $P5222
    goto if896_end2091
  if896_else2090:
    null $P5223
    set $P5224, $P5223
  if896_end2091:
    unless_null $P5224, vivi_9012099
    nqp_get_sc_object $P5225, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5224, $P5225
  vivi_9012099:
    find_dynamic_lex $P5226, "$*PACKAGE"
    unless_null $P5226, fallback2100
    nqp_get_sc_object $P5228, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5227, $P5228
    set fb_tmp_151, $P5227
    repr_defined $I5038, fb_tmp_151
    unless $I5038 goto if902_else2101 
    set $P5229, fb_tmp_151["$PACKAGE"]
    set $P5231, $P5229
    goto if902_end2102
  if902_else2101:
    null $P5230
    set $P5231, $P5230
  if902_end2102:
    unless_null $P5231, vivi_9032103
    nqp_get_sc_object $P5232, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5231, $P5232
  vivi_9032103:
    unless_null $P5231, vivi_9042104
    die "Contextual $*PACKAGE not found"
    box $P5233, "Contextual $*PACKAGE not found"
    set $P5231, $P5233
  vivi_9042104:
    set $P5226, $P5231
  fallback2100:
    $P5234 = $P5203."install_lexical_symbol"($P5211, $P5224, $P5226)
    set $P5235, $P5234
  if888_end2077:
    set $P5307, $P5235
    goto if867_end2041
  if867_else2040:
    find_dynamic_lex $P5237, "$*SCOPE"
    unless_null $P5237, fallback2107
    nqp_get_sc_object $P5239, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5238, $P5239
    set fb_tmp_152, $P5238
    repr_defined $I5040, fb_tmp_152
    unless $I5040 goto if906_else2108 
    set $P5240, fb_tmp_152["$SCOPE"]
    set $P5242, $P5240
    goto if906_end2109
  if906_else2108:
    null $P5241
    set $P5242, $P5241
  if906_end2109:
    unless_null $P5242, vivi_9072110
    nqp_get_sc_object $P5243, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5242, $P5243
  vivi_9072110:
    unless_null $P5242, vivi_9082111
    die "Contextual $*SCOPE not found"
    box $P5244, "Contextual $*SCOPE not found"
    set $P5242, $P5244
  vivi_9082111:
    set $P5237, $P5242
  fallback2107:
    set $S5006, $P5237
    iseq $I5039, $S5006, "my"
    unless $I5039 goto if905_else2105 
.annotate 'line', 1050
    find_lex $P5245, "$/"
    unless_null $P5245, fallback2118
    nqp_get_sc_object $P5246, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5245, $P5246
  fallback2118:
    set fb_tmp_154, $P5245
    repr_defined $I5043, fb_tmp_154
    unless $I5043 goto if911_else2116 
    set $P5247, fb_tmp_154["name"]
    set $P5249, $P5247
    goto if911_end2117
  if911_else2116:
    null $P5248
    set $P5249, $P5248
  if911_end2117:
    unless_null $P5249, vivi_9122119
    nqp_get_sc_object $P5250, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5249, $P5250
  vivi_9122119:
    set fb_tmp_153, $P5249
    repr_defined $I5042, fb_tmp_153
    unless $I5042 goto if910_else2114 
    set $P5251, fb_tmp_153["identifier"]
    set $P5253, $P5251
    goto if910_end2115
  if910_else2114:
    null $P5252
    set $P5253, $P5252
  if910_end2115:
    unless_null $P5253, vivi_9132120
    nqp_get_sc_object $P5254, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5253, $P5254
  vivi_9132120:
    set $N5003, $P5253
    set $N5004, 1
    isne $I5041, $N5003, $N5004
    unless $I5041 goto if909_end2113 
.annotate 'line', 1051
.annotate 'line', 1052
    find_lex $P5255, "$/"
    unless_null $P5255, fallback2123
    nqp_get_sc_object $P5256, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5255, $P5256
  fallback2123:
    set fb_tmp_155, $P5255
    repr_defined $I5044, fb_tmp_155
    unless $I5044 goto if914_else2121 
    set $P5257, fb_tmp_155["name"]
    set $P5259, $P5257
    goto if914_end2122
  if914_else2121:
    null $P5258
    set $P5259, $P5258
  if914_end2122:
    unless_null $P5259, vivi_9152124
    nqp_get_sc_object $P5260, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5259, $P5260
  vivi_9152124:
    $P5261 = $P5259."CURSOR"()
    $P5262 = $P5261."panic"("A my scoped package cannot have a multi-part name yet")
  if909_end2113:
.annotate 'line', 1054
    find_dynamic_lex $P5263, "$*W"
    unless_null $P5263, fallback2125
    nqp_get_sc_object $P5265, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5264, $P5265
    set fb_tmp_156, $P5264
    repr_defined $I5045, fb_tmp_156
    unless $I5045 goto if916_else2126 
    set $P5266, fb_tmp_156["$W"]
    set $P5268, $P5266
    goto if916_end2127
  if916_else2126:
    null $P5267
    set $P5268, $P5267
  if916_end2127:
    unless_null $P5268, vivi_9172128
    nqp_get_sc_object $P5269, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5268, $P5269
  vivi_9172128:
    unless_null $P5268, vivi_9182129
    die "Contextual $*W not found"
    box $P5270, "Contextual $*W not found"
    set $P5268, $P5270
  vivi_9182129:
    set $P5263, $P5268
  fallback2125:
    find_lex $P5271, "$OUTER"
    find_lex $P5272, "$/"
    unless_null $P5272, fallback2136
    nqp_get_sc_object $P5273, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5272, $P5273
  fallback2136:
    set fb_tmp_159, $P5272
    repr_defined $I5048, fb_tmp_159
    unless $I5048 goto if921_else2134 
    set $P5274, fb_tmp_159["name"]
    set $P5276, $P5274
    goto if921_end2135
  if921_else2134:
    null $P5275
    set $P5276, $P5275
  if921_end2135:
    unless_null $P5276, vivi_9222137
    nqp_get_sc_object $P5277, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5276, $P5277
  vivi_9222137:
    set fb_tmp_158, $P5276
    repr_defined $I5047, fb_tmp_158
    unless $I5047 goto if920_else2132 
    set $P5278, fb_tmp_158["identifier"]
    set $P5280, $P5278
    goto if920_end2133
  if920_else2132:
    null $P5279
    set $P5280, $P5279
  if920_end2133:
    unless_null $P5280, vivi_9232138
    nqp_get_sc_object $P5281, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5280, $P5281
  vivi_9232138:
    set fb_tmp_157, $P5280
    repr_defined $I5046, fb_tmp_157
    unless $I5046 goto if919_else2130 
    set $P5282, fb_tmp_157[0]
    set $P5284, $P5282
    goto if919_end2131
  if919_else2130:
    null $P5283
    set $P5284, $P5283
  if919_end2131:
    unless_null $P5284, vivi_9242139
    nqp_get_sc_object $P5285, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5284, $P5285
  vivi_9242139:
    find_dynamic_lex $P5286, "$*PACKAGE"
    unless_null $P5286, fallback2140
    nqp_get_sc_object $P5288, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5287, $P5288
    set fb_tmp_160, $P5287
    repr_defined $I5049, fb_tmp_160
    unless $I5049 goto if925_else2141 
    set $P5289, fb_tmp_160["$PACKAGE"]
    set $P5291, $P5289
    goto if925_end2142
  if925_else2141:
    null $P5290
    set $P5291, $P5290
  if925_end2142:
    unless_null $P5291, vivi_9262143
    nqp_get_sc_object $P5292, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5291, $P5292
  vivi_9262143:
    unless_null $P5291, vivi_9272144
    die "Contextual $*PACKAGE not found"
    box $P5293, "Contextual $*PACKAGE not found"
    set $P5291, $P5293
  vivi_9272144:
    set $P5286, $P5291
  fallback2140:
    $P5294 = $P5263."install_lexical_symbol"($P5271, $P5284, $P5286)
    set $P5306, $P5294
    goto if905_end2106
  if905_else2105:
.annotate 'line', 1056
.annotate 'line', 1057
    find_lex $P5295, "$/"
    $P5296 = $P5295."CURSOR"()
    find_dynamic_lex $P5297, "$*SCOPE"
    unless_null $P5297, fallback2145
    nqp_get_sc_object $P5299, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5298, $P5299
    set fb_tmp_161, $P5298
    repr_defined $I5050, fb_tmp_161
    unless $I5050 goto if928_else2146 
    set $P5300, fb_tmp_161["$SCOPE"]
    set $P5302, $P5300
    goto if928_end2147
  if928_else2146:
    null $P5301
    set $P5302, $P5301
  if928_end2147:
    unless_null $P5302, vivi_9292148
    nqp_get_sc_object $P5303, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5302, $P5303
  vivi_9292148:
    unless_null $P5302, vivi_9302149
    die "Contextual $*SCOPE not found"
    box $P5304, "Contextual $*SCOPE not found"
    set $P5302, $P5304
  vivi_9302149:
    set $P5297, $P5302
  fallback2145:
    set $S5008, $P5297
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5305 = $P5296."panic"($S5007)
    set $P5306, $P5305
  if905_end2106:
    set $P5307, $P5306
  if867_end2041:
    .return ($P5307) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_115_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1072
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx962_start
    .local string rx962_tgt
    .local int rx962_pos
    .local int rx962_off
    .local int rx962_eos
    .local int rx962_rep
    .local pmc rx962_cur
    .local pmc rx962_curclass
    .local pmc rx962_bstack
    .local pmc rx962_cstack
    rx962_start = self."!cursor_start_all"()
    set rx962_cur, rx962_start[0]
    set rx962_tgt, rx962_start[1]
    set rx962_pos, rx962_start[2]
    set rx962_curclass, rx962_start[3]
    set rx962_bstack, rx962_start[4]
    set $I19, rx962_start[5]
    store_lex unicode:"$\x{a2}", rx962_cur
    length rx962_eos, rx962_tgt
    eq $I19, 1, rx962_restart2216
    gt rx962_pos, rx962_eos, rx962_fail2217
    repr_get_attr_int $I11, self, rx962_curclass, "$!from"
    ne $I11, -1, rxscan963_done2223
    goto rxscan963_scan2222
  rxscan963_loop2221:
    inc rx962_pos
    gt rx962_pos, rx962_eos, rx962_fail2217
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!from", rx962_pos
  rxscan963_scan2222:
    nqp_rxmark rx962_bstack, rxscan963_loop2221, rx962_pos, 0
  rxscan963_done2223:
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    store_lex unicode:"$\x{a2}", rx962_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    store_lex unicode:"$\x{a2}", rx962_cur
    box $P5004, "variable"
    set $P102, $P5004
    nqp_rxmark rx962_bstack, rxquantr964_done2225, -1, 0
  rxquantr964_loop2224:
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    $P11 = rx962_cur."variable"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
    goto rxsubrule965_pass2226
  rxsubrule965_back2227:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
  rxsubrule965_pass2226:
    rx962_cstack = rx962_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule965_back2227
    push rx962_bstack, $I11
    push rx962_bstack, 0
    push rx962_bstack, rx962_pos
    elements $I11, rx962_cstack
    push rx962_bstack, $I11
    repr_get_attr_int rx962_pos, $P11, rx962_curclass, "$!pos"
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    $P11 = rx962_cur."ws"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
    goto rxsubrule966_pass2228
  rxsubrule966_back2229:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
  rxsubrule966_pass2228:
    rx962_cstack = rx962_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule966_back2229
    push rx962_bstack, $I11
    push rx962_bstack, 0
    push rx962_bstack, rx962_pos
    elements $I11, rx962_cstack
    push rx962_bstack, $I11
    repr_get_attr_int rx962_pos, $P11, rx962_curclass, "$!pos"
    nqp_rxpeek $I19, rx962_bstack, rxquantr964_done2225
    inc $I19
    inc $I19
    set rx962_rep, rx962_bstack[$I19]
    nqp_rxcommit rx962_bstack, rxquantr964_done2225
    inc rx962_rep
    nqp_rxmark rx962_bstack, rxquantr964_done2225, rx962_pos, rx962_rep
    add $I11, rx962_pos, 1
    gt $I11, rx962_eos, rx962_fail2217
    substr $S10, rx962_tgt, rx962_pos, 1
    ne $S10, ucs4:",", rx962_fail2217
    add rx962_pos, 1
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    $P11 = rx962_cur."ws"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
    goto rxsubrule967_pass2230
  rxsubrule967_back2231:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail2217
  rxsubrule967_pass2230:
    rx962_cstack = rx962_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule967_back2231
    push rx962_bstack, $I11
    push rx962_bstack, 0
    push rx962_bstack, rx962_pos
    elements $I11, rx962_cstack
    push rx962_bstack, $I11
    repr_get_attr_int rx962_pos, $P11, rx962_curclass, "$!pos"
    goto rxquantr964_loop2224
  rxquantr964_done2225:
    rx962_cur."!cursor_pass"(rx962_pos, "role_params", 'backtrack'=>1)
    .return (rx962_cur)
  rx962_restart2216:
    repr_get_attr_obj rx962_cstack, rx962_cur, rx962_curclass, "$!cstack"
  rx962_fail2217:
    unless rx962_bstack, rx962_done2215
    pop $I19, rx962_bstack
    if_null rx962_cstack, rx962_cstack_done2220
    unless rx962_cstack, rx962_cstack_done2220
    dec $I19
    set $P11, rx962_cstack[$I19]
  rx962_cstack_done2220:
    pop rx962_rep, rx962_bstack
    pop rx962_pos, rx962_bstack
    pop $I19, rx962_bstack
    lt rx962_pos, -1, rx962_done2215
    lt rx962_pos, 0, rx962_fail2217
    eq $I19, 0, rx962_fail2217
    nqp_islist $I20, rx962_cstack
    unless $I20, rx962_jump2218
    elements $I18, rx962_bstack
    le $I18, 0, rx962_cut2219
    dec $I18
    set $I18, rx962_bstack[$I18]
  rx962_cut2219:
    assign rx962_cstack, $I18
  rx962_jump2218:
    jump $I19
  rx962_done2215:
    rx962_cur."!cursor_fail"()
    .return (rx962_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_116_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1078
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_117_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1079
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx968_start
    .local string rx968_tgt
    .local int rx968_pos
    .local int rx968_off
    .local int rx968_eos
    .local int rx968_rep
    .local pmc rx968_cur
    .local pmc rx968_curclass
    .local pmc rx968_bstack
    .local pmc rx968_cstack
    rx968_start = self."!cursor_start_all"()
    set rx968_cur, rx968_start[0]
    set rx968_tgt, rx968_start[1]
    set rx968_pos, rx968_start[2]
    set rx968_curclass, rx968_start[3]
    set rx968_bstack, rx968_start[4]
    set $I19, rx968_start[5]
    store_lex unicode:"$\x{a2}", rx968_cur
    length rx968_eos, rx968_tgt
    eq $I19, 1, rx968_restart2234
    gt rx968_pos, rx968_eos, rx968_fail2235
    repr_get_attr_int $I11, self, rx968_curclass, "$!from"
    ne $I11, -1, rxscan969_done2241
    goto rxscan969_scan2240
  rxscan969_loop2239:
    inc rx968_pos
    gt rx968_pos, rx968_eos, rx968_fail2235
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!from", rx968_pos
  rxscan969_scan2240:
    nqp_rxmark rx968_bstack, rxscan969_loop2239, rx968_pos, 0
  rxscan969_done2241:
    nqp_rxmark rx968_bstack, rxcap970_fail2243, rx968_pos, 0
    add $I11, rx968_pos, 2
    gt $I11, rx968_eos, rx968_fail2235
    substr $S10, rx968_tgt, rx968_pos, 2
    ne $S10, ucs4:"my", rx968_fail2235
    add rx968_pos, 2
    nqp_rxpeek $I19, rx968_bstack, rxcap970_fail2243
    inc $I19
    set $I11, rx968_bstack[$I19]
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx968_pos)
    rx968_cstack = rx968_cur."!cursor_capture"($P11, "sym")
    goto rxcap970_done2242
  rxcap970_fail2243:
    goto rx968_fail2235
  rxcap970_done2242:
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
    goto rxsubrule971_pass2244
  rxsubrule971_back2245:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
  rxsubrule971_pass2244:
    rx968_cstack = rx968_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule971_back2245
    push rx968_bstack, $I11
    push rx968_bstack, 0
    push rx968_bstack, rx968_pos
    elements $I11, rx968_cstack
    push rx968_bstack, $I11
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
    goto rxsubrule972_pass2246
  rxsubrule972_back2247:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
  rxsubrule972_pass2246:
    rx968_cstack = rx968_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule972_back2247
    push rx968_bstack, $I11
    push rx968_bstack, 0
    push rx968_bstack, rx968_pos
    elements $I11, rx968_cstack
    push rx968_bstack, $I11
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    repr_bind_attr_int rx968_cur, rx968_curclass, "$!pos", rx968_pos
    $P11 = rx968_cur."ws"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
    goto rxsubrule973_pass2248
  rxsubrule973_back2249:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx968_curclass, "$!pos"
    lt $I11, 0, rx968_fail2235
  rxsubrule973_pass2248:
    rx968_cstack = rx968_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule973_back2249
    push rx968_bstack, $I11
    push rx968_bstack, 0
    push rx968_bstack, rx968_pos
    elements $I11, rx968_cstack
    push rx968_bstack, $I11
    repr_get_attr_int rx968_pos, $P11, rx968_curclass, "$!pos"
    rx968_cur."!cursor_pass"(rx968_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx968_cur)
  rx968_restart2234:
    repr_get_attr_obj rx968_cstack, rx968_cur, rx968_curclass, "$!cstack"
  rx968_fail2235:
    unless rx968_bstack, rx968_done2233
    pop $I19, rx968_bstack
    if_null rx968_cstack, rx968_cstack_done2238
    unless rx968_cstack, rx968_cstack_done2238
    dec $I19
    set $P11, rx968_cstack[$I19]
  rx968_cstack_done2238:
    pop rx968_rep, rx968_bstack
    pop rx968_pos, rx968_bstack
    pop $I19, rx968_bstack
    lt rx968_pos, -1, rx968_done2233
    lt rx968_pos, 0, rx968_fail2235
    eq $I19, 0, rx968_fail2235
    nqp_islist $I20, rx968_cstack
    unless $I20, rx968_jump2236
    elements $I18, rx968_bstack
    le $I18, 0, rx968_cut2237
    dec $I18
    set $I18, rx968_bstack[$I18]
  rx968_cut2237:
    assign rx968_cstack, $I18
  rx968_jump2236:
    jump $I19
  rx968_done2233:
    rx968_cur."!cursor_fail"()
    .return (rx968_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_118_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1080
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx974_start
    .local string rx974_tgt
    .local int rx974_pos
    .local int rx974_off
    .local int rx974_eos
    .local int rx974_rep
    .local pmc rx974_cur
    .local pmc rx974_curclass
    .local pmc rx974_bstack
    .local pmc rx974_cstack
    rx974_start = self."!cursor_start_all"()
    set rx974_cur, rx974_start[0]
    set rx974_tgt, rx974_start[1]
    set rx974_pos, rx974_start[2]
    set rx974_curclass, rx974_start[3]
    set rx974_bstack, rx974_start[4]
    set $I19, rx974_start[5]
    store_lex unicode:"$\x{a2}", rx974_cur
    length rx974_eos, rx974_tgt
    eq $I19, 1, rx974_restart2252
    gt rx974_pos, rx974_eos, rx974_fail2253
    repr_get_attr_int $I11, self, rx974_curclass, "$!from"
    ne $I11, -1, rxscan975_done2259
    goto rxscan975_scan2258
  rxscan975_loop2257:
    inc rx974_pos
    gt rx974_pos, rx974_eos, rx974_fail2253
    repr_bind_attr_int rx974_cur, rx974_curclass, "$!from", rx974_pos
  rxscan975_scan2258:
    nqp_rxmark rx974_bstack, rxscan975_loop2257, rx974_pos, 0
  rxscan975_done2259:
    nqp_rxmark rx974_bstack, rxcap976_fail2261, rx974_pos, 0
    add $I11, rx974_pos, 3
    gt $I11, rx974_eos, rx974_fail2253
    substr $S10, rx974_tgt, rx974_pos, 3
    ne $S10, ucs4:"our", rx974_fail2253
    add rx974_pos, 3
    nqp_rxpeek $I19, rx974_bstack, rxcap976_fail2261
    inc $I19
    set $I11, rx974_bstack[$I19]
    repr_bind_attr_int rx974_cur, rx974_curclass, "$!pos", rx974_pos
    $P11 = rx974_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx974_pos)
    rx974_cstack = rx974_cur."!cursor_capture"($P11, "sym")
    goto rxcap976_done2260
  rxcap976_fail2261:
    goto rx974_fail2253
  rxcap976_done2260:
    repr_bind_attr_int rx974_cur, rx974_curclass, "$!pos", rx974_pos
    $P11 = rx974_cur."ws"()
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
    goto rxsubrule977_pass2262
  rxsubrule977_back2263:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
  rxsubrule977_pass2262:
    rx974_cstack = rx974_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule977_back2263
    push rx974_bstack, $I11
    push rx974_bstack, 0
    push rx974_bstack, rx974_pos
    elements $I11, rx974_cstack
    push rx974_bstack, $I11
    repr_get_attr_int rx974_pos, $P11, rx974_curclass, "$!pos"
    repr_bind_attr_int rx974_cur, rx974_curclass, "$!pos", rx974_pos
    $P11 = rx974_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
    goto rxsubrule978_pass2264
  rxsubrule978_back2265:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
  rxsubrule978_pass2264:
    rx974_cstack = rx974_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule978_back2265
    push rx974_bstack, $I11
    push rx974_bstack, 0
    push rx974_bstack, rx974_pos
    elements $I11, rx974_cstack
    push rx974_bstack, $I11
    repr_get_attr_int rx974_pos, $P11, rx974_curclass, "$!pos"
    repr_bind_attr_int rx974_cur, rx974_curclass, "$!pos", rx974_pos
    $P11 = rx974_cur."ws"()
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
    goto rxsubrule979_pass2266
  rxsubrule979_back2267:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx974_curclass, "$!pos"
    lt $I11, 0, rx974_fail2253
  rxsubrule979_pass2266:
    rx974_cstack = rx974_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule979_back2267
    push rx974_bstack, $I11
    push rx974_bstack, 0
    push rx974_bstack, rx974_pos
    elements $I11, rx974_cstack
    push rx974_bstack, $I11
    repr_get_attr_int rx974_pos, $P11, rx974_curclass, "$!pos"
    rx974_cur."!cursor_pass"(rx974_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx974_cur)
  rx974_restart2252:
    repr_get_attr_obj rx974_cstack, rx974_cur, rx974_curclass, "$!cstack"
  rx974_fail2253:
    unless rx974_bstack, rx974_done2251
    pop $I19, rx974_bstack
    if_null rx974_cstack, rx974_cstack_done2256
    unless rx974_cstack, rx974_cstack_done2256
    dec $I19
    set $P11, rx974_cstack[$I19]
  rx974_cstack_done2256:
    pop rx974_rep, rx974_bstack
    pop rx974_pos, rx974_bstack
    pop $I19, rx974_bstack
    lt rx974_pos, -1, rx974_done2251
    lt rx974_pos, 0, rx974_fail2253
    eq $I19, 0, rx974_fail2253
    nqp_islist $I20, rx974_cstack
    unless $I20, rx974_jump2254
    elements $I18, rx974_bstack
    le $I18, 0, rx974_cut2255
    dec $I18
    set $I18, rx974_bstack[$I18]
  rx974_cut2255:
    assign rx974_cstack, $I18
  rx974_jump2254:
    jump $I19
  rx974_done2251:
    rx974_cur."!cursor_fail"()
    .return (rx974_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_119_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1081
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx980_start
    .local string rx980_tgt
    .local int rx980_pos
    .local int rx980_off
    .local int rx980_eos
    .local int rx980_rep
    .local pmc rx980_cur
    .local pmc rx980_curclass
    .local pmc rx980_bstack
    .local pmc rx980_cstack
    rx980_start = self."!cursor_start_all"()
    set rx980_cur, rx980_start[0]
    set rx980_tgt, rx980_start[1]
    set rx980_pos, rx980_start[2]
    set rx980_curclass, rx980_start[3]
    set rx980_bstack, rx980_start[4]
    set $I19, rx980_start[5]
    store_lex unicode:"$\x{a2}", rx980_cur
    length rx980_eos, rx980_tgt
    eq $I19, 1, rx980_restart2270
    gt rx980_pos, rx980_eos, rx980_fail2271
    repr_get_attr_int $I11, self, rx980_curclass, "$!from"
    ne $I11, -1, rxscan981_done2277
    goto rxscan981_scan2276
  rxscan981_loop2275:
    inc rx980_pos
    gt rx980_pos, rx980_eos, rx980_fail2271
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!from", rx980_pos
  rxscan981_scan2276:
    nqp_rxmark rx980_bstack, rxscan981_loop2275, rx980_pos, 0
  rxscan981_done2277:
    nqp_rxmark rx980_bstack, rxcap982_fail2279, rx980_pos, 0
    add $I11, rx980_pos, 3
    gt $I11, rx980_eos, rx980_fail2271
    substr $S10, rx980_tgt, rx980_pos, 3
    ne $S10, ucs4:"has", rx980_fail2271
    add rx980_pos, 3
    nqp_rxpeek $I19, rx980_bstack, rxcap982_fail2279
    inc $I19
    set $I11, rx980_bstack[$I19]
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx980_pos)
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "sym")
    goto rxcap982_done2278
  rxcap982_fail2279:
    goto rx980_fail2271
  rxcap982_done2278:
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
    goto rxsubrule983_pass2280
  rxsubrule983_back2281:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
  rxsubrule983_pass2280:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule983_back2281
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
    goto rxsubrule984_pass2282
  rxsubrule984_back2283:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
  rxsubrule984_pass2282:
    rx980_cstack = rx980_cur."!cursor_capture"($P11, "scoped")
    set_addr $I11, rxsubrule984_back2283
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    repr_bind_attr_int rx980_cur, rx980_curclass, "$!pos", rx980_pos
    $P11 = rx980_cur."ws"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
    goto rxsubrule985_pass2284
  rxsubrule985_back2285:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx980_curclass, "$!pos"
    lt $I11, 0, rx980_fail2271
  rxsubrule985_pass2284:
    rx980_cstack = rx980_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule985_back2285
    push rx980_bstack, $I11
    push rx980_bstack, 0
    push rx980_bstack, rx980_pos
    elements $I11, rx980_cstack
    push rx980_bstack, $I11
    repr_get_attr_int rx980_pos, $P11, rx980_curclass, "$!pos"
    rx980_cur."!cursor_pass"(rx980_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx980_cur)
  rx980_restart2270:
    repr_get_attr_obj rx980_cstack, rx980_cur, rx980_curclass, "$!cstack"
  rx980_fail2271:
    unless rx980_bstack, rx980_done2269
    pop $I19, rx980_bstack
    if_null rx980_cstack, rx980_cstack_done2274
    unless rx980_cstack, rx980_cstack_done2274
    dec $I19
    set $P11, rx980_cstack[$I19]
  rx980_cstack_done2274:
    pop rx980_rep, rx980_bstack
    pop rx980_pos, rx980_bstack
    pop $I19, rx980_bstack
    lt rx980_pos, -1, rx980_done2269
    lt rx980_pos, 0, rx980_fail2271
    eq $I19, 0, rx980_fail2271
    nqp_islist $I20, rx980_cstack
    unless $I20, rx980_jump2272
    elements $I18, rx980_bstack
    le $I18, 0, rx980_cut2273
    dec $I18
    set $I18, rx980_bstack[$I18]
  rx980_cut2273:
    assign rx980_cstack, $I18
  rx980_jump2272:
    jump $I19
  rx980_done2269:
    rx980_cur."!cursor_fail"()
    .return (rx980_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_120_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx986_start
    .local string rx986_tgt
    .local int rx986_pos
    .local int rx986_off
    .local int rx986_eos
    .local int rx986_rep
    .local pmc rx986_cur
    .local pmc rx986_curclass
    .local pmc rx986_bstack
    .local pmc rx986_cstack
    rx986_start = self."!cursor_start_all"()
    set rx986_cur, rx986_start[0]
    set rx986_tgt, rx986_start[1]
    set rx986_pos, rx986_start[2]
    set rx986_curclass, rx986_start[3]
    set rx986_bstack, rx986_start[4]
    set $I19, rx986_start[5]
    store_lex unicode:"$\x{a2}", rx986_cur
    length rx986_eos, rx986_tgt
    eq $I19, 1, rx986_restart2288
    gt rx986_pos, rx986_eos, rx986_fail2289
    repr_get_attr_int $I11, self, rx986_curclass, "$!from"
    ne $I11, -1, rxscan987_done2295
    goto rxscan987_scan2294
  rxscan987_loop2293:
    inc rx986_pos
    gt rx986_pos, rx986_eos, rx986_fail2289
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!from", rx986_pos
  rxscan987_scan2294:
    nqp_rxmark rx986_bstack, rxscan987_loop2293, rx986_pos, 0
  rxscan987_done2295:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt988_02297
    nqp_push_label $P11, alt988_12299
    nqp_push_label $P11, alt988_22301
    nqp_rxmark rx986_bstack, alt988_end2296, -1, 0
    rx986_cur."!alt"(rx986_pos, "alt_nfa__22_1382484130.8118", $P11)
    goto rx986_fail2289
  alt988_02297:
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2289
    nqp_rxmark rx986_bstack, rxsubrule989_pass2298, -1, 0
  rxsubrule989_pass2298:
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    goto alt988_end2296
  alt988_12299:
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2289
    nqp_rxmark rx986_bstack, rxsubrule990_pass2300, -1, 0
  rxsubrule990_pass2300:
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    goto alt988_end2296
  alt988_22301:
    repr_bind_attr_int rx986_cur, rx986_curclass, "$!pos", rx986_pos
    $P11 = rx986_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx986_curclass, "$!pos"
    lt $I11, 0, rx986_fail2289
    nqp_rxmark rx986_bstack, rxsubrule991_pass2302, -1, 0
  rxsubrule991_pass2302:
    rx986_cstack = rx986_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx986_pos, $P11, rx986_curclass, "$!pos"
    goto alt988_end2296
  alt988_end2296:
    rx986_cur."!cursor_pass"(rx986_pos, "scoped", 'backtrack'=>1)
    .return (rx986_cur)
  rx986_restart2288:
    repr_get_attr_obj rx986_cstack, rx986_cur, rx986_curclass, "$!cstack"
  rx986_fail2289:
    unless rx986_bstack, rx986_done2287
    pop $I19, rx986_bstack
    if_null rx986_cstack, rx986_cstack_done2292
    unless rx986_cstack, rx986_cstack_done2292
    dec $I19
    set $P11, rx986_cstack[$I19]
  rx986_cstack_done2292:
    pop rx986_rep, rx986_bstack
    pop rx986_pos, rx986_bstack
    pop $I19, rx986_bstack
    lt rx986_pos, -1, rx986_done2287
    lt rx986_pos, 0, rx986_fail2289
    eq $I19, 0, rx986_fail2289
    nqp_islist $I20, rx986_cstack
    unless $I20, rx986_jump2290
    elements $I18, rx986_bstack
    le $I18, 0, rx986_cut2291
    dec $I18
    set $I18, rx986_bstack[$I18]
  rx986_cut2291:
    assign rx986_cstack, $I18
  rx986_jump2290:
    jump $I19
  rx986_done2287:
    rx986_cur."!cursor_fail"()
    .return (rx986_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_121_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1089
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_417_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx992_start
    .local string rx992_tgt
    .local int rx992_pos
    .local int rx992_off
    .local int rx992_eos
    .local int rx992_rep
    .local pmc rx992_cur
    .local pmc rx992_curclass
    .local pmc rx992_bstack
    .local pmc rx992_cstack
    rx992_start = self."!cursor_start_all"()
    set rx992_cur, rx992_start[0]
    set rx992_tgt, rx992_start[1]
    set rx992_pos, rx992_start[2]
    set rx992_curclass, rx992_start[3]
    set rx992_bstack, rx992_start[4]
    set $I19, rx992_start[5]
    store_lex unicode:"$\x{a2}", rx992_cur
    length rx992_eos, rx992_tgt
    eq $I19, 1, rx992_restart2305
    gt rx992_pos, rx992_eos, rx992_fail2306
    repr_get_attr_int $I11, self, rx992_curclass, "$!from"
    ne $I11, -1, rxscan993_done2312
    goto rxscan993_scan2311
  rxscan993_loop2310:
    inc rx992_pos
    gt rx992_pos, rx992_eos, rx992_fail2306
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!from", rx992_pos
  rxscan993_scan2311:
    nqp_rxmark rx992_bstack, rxscan993_loop2310, rx992_pos, 0
  rxscan993_done2312:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."name"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2306
    nqp_rxmark rx992_bstack, rxsubrule994_pass2313, -1, 0
  rxsubrule994_pass2313:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    store_lex unicode:"$\x{a2}", rx992_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_417_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx992_fail2306
    rx992_cur."!cursor_pass"(rx992_pos, "typename", 'backtrack'=>1)
    .return (rx992_cur)
  rx992_restart2305:
    repr_get_attr_obj rx992_cstack, rx992_cur, rx992_curclass, "$!cstack"
  rx992_fail2306:
    unless rx992_bstack, rx992_done2304
    pop $I19, rx992_bstack
    if_null rx992_cstack, rx992_cstack_done2309
    unless rx992_cstack, rx992_cstack_done2309
    dec $I19
    set $P11, rx992_cstack[$I19]
  rx992_cstack_done2309:
    pop rx992_rep, rx992_bstack
    pop rx992_pos, rx992_bstack
    pop $I19, rx992_bstack
    lt rx992_pos, -1, rx992_done2304
    lt rx992_pos, 0, rx992_fail2306
    eq $I19, 0, rx992_fail2306
    nqp_islist $I20, rx992_cstack
    unless $I20, rx992_jump2307
    elements $I18, rx992_bstack
    le $I18, 0, rx992_cut2308
    dec $I18
    set $I18, rx992_bstack[$I18]
  rx992_cut2308:
    assign rx992_cstack, $I18
  rx992_jump2307:
    jump $I19
  rx992_done2304:
    rx992_cur."!cursor_fail"()
    .return (rx992_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1382484127.52628") :anon :lex :outer("cuid_121_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1091
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2314
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_162, $P5002
    repr_defined $I5001, fb_tmp_162
    unless $I5001 goto if995_else2315 
    set $P5004, fb_tmp_162["$W"]
    set $P5006, $P5004
    goto if995_end2316
  if995_else2315:
    null $P5005
    set $P5006, $P5005
  if995_end2316:
    unless_null $P5006, vivi_9962317
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_9962317:
    unless_null $P5006, vivi_9972318
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_9972318:
    set $P5001, $P5006
  fallback2314:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2323
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  fallback2323:
    set fb_tmp_164, $P5010
    repr_defined $I5003, fb_tmp_164
    unless $I5003 goto if999_else2321 
    set $P5012, fb_tmp_164["name"]
    set $P5014, $P5012
    goto if999_end2322
  if999_else2321:
    null $P5013
    set $P5014, $P5013
  if999_end2322:
    unless_null $P5014, vivi_10002324
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_10002324:
    set fb_tmp_163, $P5014
    repr_defined $I5002, fb_tmp_163
    unless $I5002 goto if998_else2319 
    set $P5016, fb_tmp_163["identifier"]
    set $P5018, $P5016
    goto if998_end2320
  if998_else2319:
    null $P5017
    set $P5018, $P5017
  if998_end2320:
    unless_null $P5018, vivi_10012325
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_10012325:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_122_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1094
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1002_start
    .local string rx1002_tgt
    .local int rx1002_pos
    .local int rx1002_off
    .local int rx1002_eos
    .local int rx1002_rep
    .local pmc rx1002_cur
    .local pmc rx1002_curclass
    .local pmc rx1002_bstack
    .local pmc rx1002_cstack
    rx1002_start = self."!cursor_start_all"()
    set rx1002_cur, rx1002_start[0]
    set rx1002_tgt, rx1002_start[1]
    set rx1002_pos, rx1002_start[2]
    set rx1002_curclass, rx1002_start[3]
    set rx1002_bstack, rx1002_start[4]
    set $I19, rx1002_start[5]
    store_lex unicode:"$\x{a2}", rx1002_cur
    length rx1002_eos, rx1002_tgt
    eq $I19, 1, rx1002_restart2328
    gt rx1002_pos, rx1002_eos, rx1002_fail2329
    repr_get_attr_int $I11, self, rx1002_curclass, "$!from"
    ne $I11, -1, rxscan1003_done2335
    goto rxscan1003_scan2334
  rxscan1003_loop2333:
    inc rx1002_pos
    gt rx1002_pos, rx1002_eos, rx1002_fail2329
    repr_bind_attr_int rx1002_cur, rx1002_curclass, "$!from", rx1002_pos
  rxscan1003_scan2334:
    nqp_rxmark rx1002_bstack, rxscan1003_loop2333, rx1002_pos, 0
  rxscan1003_done2335:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1004_02337
    nqp_push_label $P11, alt1004_12339
    nqp_rxmark rx1002_bstack, alt1004_end2336, -1, 0
    rx1002_cur."!alt"(rx1002_pos, "alt_nfa__23_1382484130.83018", $P11)
    goto rx1002_fail2329
  alt1004_02337:
    repr_bind_attr_int rx1002_cur, rx1002_curclass, "$!pos", rx1002_pos
    $P11 = rx1002_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1002_curclass, "$!pos"
    lt $I11, 0, rx1002_fail2329
    nqp_rxmark rx1002_bstack, rxsubrule1005_pass2338, -1, 0
  rxsubrule1005_pass2338:
    rx1002_cstack = rx1002_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1002_pos, $P11, rx1002_curclass, "$!pos"
    goto alt1004_end2336
  alt1004_12339:
    repr_bind_attr_int rx1002_cur, rx1002_curclass, "$!pos", rx1002_pos
    $P11 = rx1002_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1002_curclass, "$!pos"
    lt $I11, 0, rx1002_fail2329
    nqp_rxmark rx1002_bstack, rxsubrule1006_pass2340, -1, 0
  rxsubrule1006_pass2340:
    rx1002_cstack = rx1002_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1002_pos, $P11, rx1002_curclass, "$!pos"
    goto alt1004_end2336
  alt1004_end2336:
    rx1002_cur."!cursor_pass"(rx1002_pos, "declarator", 'backtrack'=>1)
    .return (rx1002_cur)
  rx1002_restart2328:
    repr_get_attr_obj rx1002_cstack, rx1002_cur, rx1002_curclass, "$!cstack"
  rx1002_fail2329:
    unless rx1002_bstack, rx1002_done2327
    pop $I19, rx1002_bstack
    if_null rx1002_cstack, rx1002_cstack_done2332
    unless rx1002_cstack, rx1002_cstack_done2332
    dec $I19
    set $P11, rx1002_cstack[$I19]
  rx1002_cstack_done2332:
    pop rx1002_rep, rx1002_bstack
    pop rx1002_pos, rx1002_bstack
    pop $I19, rx1002_bstack
    lt rx1002_pos, -1, rx1002_done2327
    lt rx1002_pos, 0, rx1002_fail2329
    eq $I19, 0, rx1002_fail2329
    nqp_islist $I20, rx1002_cstack
    unless $I20, rx1002_jump2330
    elements $I18, rx1002_bstack
    le $I18, 0, rx1002_cut2331
    dec $I18
    set $I18, rx1002_bstack[$I18]
  rx1002_cut2331:
    assign rx1002_cstack, $I18
  rx1002_jump2330:
    jump $I19
  rx1002_done2327:
    rx1002_cur."!cursor_fail"()
    .return (rx1002_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_123_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1099
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_418_1382484127.52628' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1007_start
    .local string rx1007_tgt
    .local int rx1007_pos
    .local int rx1007_off
    .local int rx1007_eos
    .local int rx1007_rep
    .local pmc rx1007_cur
    .local pmc rx1007_curclass
    .local pmc rx1007_bstack
    .local pmc rx1007_cstack
    rx1007_start = self."!cursor_start_all"()
    set rx1007_cur, rx1007_start[0]
    set rx1007_tgt, rx1007_start[1]
    set rx1007_pos, rx1007_start[2]
    set rx1007_curclass, rx1007_start[3]
    set rx1007_bstack, rx1007_start[4]
    set $I19, rx1007_start[5]
    store_lex unicode:"$\x{a2}", rx1007_cur
    length rx1007_eos, rx1007_tgt
    eq $I19, 1, rx1007_restart2343
    gt rx1007_pos, rx1007_eos, rx1007_fail2344
    repr_get_attr_int $I11, self, rx1007_curclass, "$!from"
    ne $I11, -1, rxscan1008_done2350
    goto rxscan1008_scan2349
  rxscan1008_loop2348:
    inc rx1007_pos
    gt rx1007_pos, rx1007_eos, rx1007_fail2344
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!from", rx1007_pos
  rxscan1008_scan2349:
    nqp_rxmark rx1007_bstack, rxscan1008_loop2348, rx1007_pos, 0
  rxscan1008_done2350:
    nqp_rxmark rx1007_bstack, rxquantg1009_done2352, rx1007_pos, 0
  rxquantg1009_loop2351:
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1010_pass2353
  rxsubrule1010_back2354:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1010_pass2353:
    rx1007_cstack = rx1007_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1010_back2354
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
  rxquantg1009_done2352:
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1011_pass2355
  rxsubrule1011_back2356:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1011_pass2355:
    rx1007_cstack = rx1007_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1011_back2356
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    store_lex unicode:"$\x{a2}", rx1007_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1012_pass2357
  rxsubrule1012_back2358:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1012_pass2357:
    rx1007_cstack = rx1007_cur."!cursor_capture"($P11, "variable")
    set_addr $I11, rxsubrule1012_back2358
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1013_pass2359
  rxsubrule1013_back2360:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1013_pass2359:
    rx1007_cstack = rx1007_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1013_back2360
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    store_lex unicode:"$\x{a2}", rx1007_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_418_1382484127.52628' 
    capture_lex $P5004
    $P5005 = $P5004()
    nqp_rxmark rx1007_bstack, rxquantg1014_done2362, rx1007_pos, 0
  rxquantg1014_loop2361:
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1015_pass2363
  rxsubrule1015_back2364:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1015_pass2363:
    rx1007_cstack = rx1007_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1015_back2364
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    nqp_rxmark rx1007_bstack, rxquantg1014_done2362, rx1007_pos, rx1007_rep
    goto rxquantg1014_loop2361
  rxquantg1014_done2362:
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!pos", rx1007_pos
    $P11 = rx1007_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
    goto rxsubrule1016_pass2365
  rxsubrule1016_back2366:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1007_curclass, "$!pos"
    lt $I11, 0, rx1007_fail2344
  rxsubrule1016_pass2365:
    rx1007_cstack = rx1007_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1016_back2366
    push rx1007_bstack, $I11
    push rx1007_bstack, 0
    push rx1007_bstack, rx1007_pos
    elements $I11, rx1007_cstack
    push rx1007_bstack, $I11
    repr_get_attr_int rx1007_pos, $P11, rx1007_curclass, "$!pos"
    rx1007_cur."!cursor_pass"(rx1007_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1007_cur)
  rx1007_restart2343:
    repr_get_attr_obj rx1007_cstack, rx1007_cur, rx1007_curclass, "$!cstack"
  rx1007_fail2344:
    unless rx1007_bstack, rx1007_done2342
    pop $I19, rx1007_bstack
    if_null rx1007_cstack, rx1007_cstack_done2347
    unless rx1007_cstack, rx1007_cstack_done2347
    dec $I19
    set $P11, rx1007_cstack[$I19]
  rx1007_cstack_done2347:
    pop rx1007_rep, rx1007_bstack
    pop rx1007_pos, rx1007_bstack
    pop $I19, rx1007_bstack
    lt rx1007_pos, -1, rx1007_done2342
    lt rx1007_pos, 0, rx1007_fail2344
    eq $I19, 0, rx1007_fail2344
    nqp_islist $I20, rx1007_cstack
    unless $I20, rx1007_jump2345
    elements $I18, rx1007_bstack
    le $I18, 0, rx1007_cut2346
    dec $I18
    set $I18, rx1007_bstack[$I18]
  rx1007_cut2346:
    assign rx1007_cstack, $I18
  rx1007_jump2345:
    jump $I19
  rx1007_done2342:
    rx1007_cur."!cursor_fail"()
    .return (rx1007_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1382484127.52628") :anon :lex :outer("cuid_123_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1103

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_124_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1107
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_125_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1108
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1017_start
    .local string rx1017_tgt
    .local int rx1017_pos
    .local int rx1017_off
    .local int rx1017_eos
    .local int rx1017_rep
    .local pmc rx1017_cur
    .local pmc rx1017_curclass
    .local pmc rx1017_bstack
    .local pmc rx1017_cstack
    rx1017_start = self."!cursor_start_all"()
    set rx1017_cur, rx1017_start[0]
    set rx1017_tgt, rx1017_start[1]
    set rx1017_pos, rx1017_start[2]
    set rx1017_curclass, rx1017_start[3]
    set rx1017_bstack, rx1017_start[4]
    set $I19, rx1017_start[5]
    store_lex unicode:"$\x{a2}", rx1017_cur
    length rx1017_eos, rx1017_tgt
    eq $I19, 1, rx1017_restart2369
    gt rx1017_pos, rx1017_eos, rx1017_fail2370
    repr_get_attr_int $I11, self, rx1017_curclass, "$!from"
    ne $I11, -1, rxscan1018_done2376
    goto rxscan1018_scan2375
  rxscan1018_loop2374:
    inc rx1017_pos
    gt rx1017_pos, rx1017_eos, rx1017_fail2370
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!from", rx1017_pos
  rxscan1018_scan2375:
    nqp_rxmark rx1017_bstack, rxscan1018_loop2374, rx1017_pos, 0
  rxscan1018_done2376:
    nqp_rxmark rx1017_bstack, rxcap1019_fail2378, rx1017_pos, 0
    add $I11, rx1017_pos, 3
    gt $I11, rx1017_eos, rx1017_fail2370
    substr $S10, rx1017_tgt, rx1017_pos, 3
    ne $S10, ucs4:"sub", rx1017_fail2370
    add rx1017_pos, 3
    nqp_rxpeek $I19, rx1017_bstack, rxcap1019_fail2378
    inc $I19
    set $I11, rx1017_bstack[$I19]
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1017_pos)
    rx1017_cstack = rx1017_cur."!cursor_capture"($P11, "sym")
    goto rxcap1019_done2377
  rxcap1019_fail2378:
    goto rx1017_fail2370
  rxcap1019_done2377:
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
    goto rxsubrule1020_pass2379
  rxsubrule1020_back2380:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
  rxsubrule1020_pass2379:
    rx1017_cstack = rx1017_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1020_back2380
    push rx1017_bstack, $I11
    push rx1017_bstack, 0
    push rx1017_bstack, rx1017_pos
    elements $I11, rx1017_cstack
    push rx1017_bstack, $I11
    repr_get_attr_int rx1017_pos, $P11, rx1017_curclass, "$!pos"
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
    goto rxsubrule1021_pass2381
  rxsubrule1021_back2382:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
  rxsubrule1021_pass2381:
    rx1017_cstack = rx1017_cur."!cursor_capture"($P11, "routine_def")
    set_addr $I11, rxsubrule1021_back2382
    push rx1017_bstack, $I11
    push rx1017_bstack, 0
    push rx1017_bstack, rx1017_pos
    elements $I11, rx1017_cstack
    push rx1017_bstack, $I11
    repr_get_attr_int rx1017_pos, $P11, rx1017_curclass, "$!pos"
    repr_bind_attr_int rx1017_cur, rx1017_curclass, "$!pos", rx1017_pos
    $P11 = rx1017_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
    goto rxsubrule1022_pass2383
  rxsubrule1022_back2384:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1017_curclass, "$!pos"
    lt $I11, 0, rx1017_fail2370
  rxsubrule1022_pass2383:
    rx1017_cstack = rx1017_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1022_back2384
    push rx1017_bstack, $I11
    push rx1017_bstack, 0
    push rx1017_bstack, rx1017_pos
    elements $I11, rx1017_cstack
    push rx1017_bstack, $I11
    repr_get_attr_int rx1017_pos, $P11, rx1017_curclass, "$!pos"
    rx1017_cur."!cursor_pass"(rx1017_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1017_cur)
  rx1017_restart2369:
    repr_get_attr_obj rx1017_cstack, rx1017_cur, rx1017_curclass, "$!cstack"
  rx1017_fail2370:
    unless rx1017_bstack, rx1017_done2368
    pop $I19, rx1017_bstack
    if_null rx1017_cstack, rx1017_cstack_done2373
    unless rx1017_cstack, rx1017_cstack_done2373
    dec $I19
    set $P11, rx1017_cstack[$I19]
  rx1017_cstack_done2373:
    pop rx1017_rep, rx1017_bstack
    pop rx1017_pos, rx1017_bstack
    pop $I19, rx1017_bstack
    lt rx1017_pos, -1, rx1017_done2368
    lt rx1017_pos, 0, rx1017_fail2370
    eq $I19, 0, rx1017_fail2370
    nqp_islist $I20, rx1017_cstack
    unless $I20, rx1017_jump2371
    elements $I18, rx1017_bstack
    le $I18, 0, rx1017_cut2372
    dec $I18
    set $I18, rx1017_bstack[$I18]
  rx1017_cut2372:
    assign rx1017_cstack, $I18
  rx1017_jump2371:
    jump $I19
  rx1017_done2368:
    rx1017_cur."!cursor_fail"()
    .return (rx1017_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_126_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1109
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1023_start
    .local string rx1023_tgt
    .local int rx1023_pos
    .local int rx1023_off
    .local int rx1023_eos
    .local int rx1023_rep
    .local pmc rx1023_cur
    .local pmc rx1023_curclass
    .local pmc rx1023_bstack
    .local pmc rx1023_cstack
    rx1023_start = self."!cursor_start_all"()
    set rx1023_cur, rx1023_start[0]
    set rx1023_tgt, rx1023_start[1]
    set rx1023_pos, rx1023_start[2]
    set rx1023_curclass, rx1023_start[3]
    set rx1023_bstack, rx1023_start[4]
    set $I19, rx1023_start[5]
    store_lex unicode:"$\x{a2}", rx1023_cur
    length rx1023_eos, rx1023_tgt
    eq $I19, 1, rx1023_restart2387
    gt rx1023_pos, rx1023_eos, rx1023_fail2388
    repr_get_attr_int $I11, self, rx1023_curclass, "$!from"
    ne $I11, -1, rxscan1024_done2394
    goto rxscan1024_scan2393
  rxscan1024_loop2392:
    inc rx1023_pos
    gt rx1023_pos, rx1023_eos, rx1023_fail2388
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!from", rx1023_pos
  rxscan1024_scan2393:
    nqp_rxmark rx1023_bstack, rxscan1024_loop2392, rx1023_pos, 0
  rxscan1024_done2394:
    nqp_rxmark rx1023_bstack, rxcap1025_fail2396, rx1023_pos, 0
    add $I11, rx1023_pos, 6
    gt $I11, rx1023_eos, rx1023_fail2388
    substr $S10, rx1023_tgt, rx1023_pos, 6
    ne $S10, ucs4:"method", rx1023_fail2388
    add rx1023_pos, 6
    nqp_rxpeek $I19, rx1023_bstack, rxcap1025_fail2396
    inc $I19
    set $I11, rx1023_bstack[$I19]
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1023_pos)
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "sym")
    goto rxcap1025_done2395
  rxcap1025_fail2396:
    goto rx1023_fail2388
  rxcap1025_done2395:
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
    goto rxsubrule1026_pass2397
  rxsubrule1026_back2398:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
  rxsubrule1026_pass2397:
    rx1023_cstack = rx1023_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1026_back2398
    push rx1023_bstack, $I11
    push rx1023_bstack, 0
    push rx1023_bstack, rx1023_pos
    elements $I11, rx1023_cstack
    push rx1023_bstack, $I11
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
    goto rxsubrule1027_pass2399
  rxsubrule1027_back2400:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
  rxsubrule1027_pass2399:
    rx1023_cstack = rx1023_cur."!cursor_capture"($P11, "method_def")
    set_addr $I11, rxsubrule1027_back2400
    push rx1023_bstack, $I11
    push rx1023_bstack, 0
    push rx1023_bstack, rx1023_pos
    elements $I11, rx1023_cstack
    push rx1023_bstack, $I11
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    repr_bind_attr_int rx1023_cur, rx1023_curclass, "$!pos", rx1023_pos
    $P11 = rx1023_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
    goto rxsubrule1028_pass2401
  rxsubrule1028_back2402:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1023_curclass, "$!pos"
    lt $I11, 0, rx1023_fail2388
  rxsubrule1028_pass2401:
    rx1023_cstack = rx1023_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1028_back2402
    push rx1023_bstack, $I11
    push rx1023_bstack, 0
    push rx1023_bstack, rx1023_pos
    elements $I11, rx1023_cstack
    push rx1023_bstack, $I11
    repr_get_attr_int rx1023_pos, $P11, rx1023_curclass, "$!pos"
    rx1023_cur."!cursor_pass"(rx1023_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1023_cur)
  rx1023_restart2387:
    repr_get_attr_obj rx1023_cstack, rx1023_cur, rx1023_curclass, "$!cstack"
  rx1023_fail2388:
    unless rx1023_bstack, rx1023_done2386
    pop $I19, rx1023_bstack
    if_null rx1023_cstack, rx1023_cstack_done2391
    unless rx1023_cstack, rx1023_cstack_done2391
    dec $I19
    set $P11, rx1023_cstack[$I19]
  rx1023_cstack_done2391:
    pop rx1023_rep, rx1023_bstack
    pop rx1023_pos, rx1023_bstack
    pop $I19, rx1023_bstack
    lt rx1023_pos, -1, rx1023_done2386
    lt rx1023_pos, 0, rx1023_fail2388
    eq $I19, 0, rx1023_fail2388
    nqp_islist $I20, rx1023_cstack
    unless $I20, rx1023_jump2389
    elements $I18, rx1023_bstack
    le $I18, 0, rx1023_cut2390
    dec $I18
    set $I18, rx1023_bstack[$I18]
  rx1023_cut2390:
    assign rx1023_cstack, $I18
  rx1023_jump2389:
    jump $I19
  rx1023_done2386:
    rx1023_cur."!cursor_fail"()
    .return (rx1023_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_127_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1111
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1029_start
    .local string rx1029_tgt
    .local int rx1029_pos
    .local int rx1029_off
    .local int rx1029_eos
    .local int rx1029_rep
    .local pmc rx1029_cur
    .local pmc rx1029_curclass
    .local pmc rx1029_bstack
    .local pmc rx1029_cstack
    rx1029_start = self."!cursor_start_all"()
    set rx1029_cur, rx1029_start[0]
    set rx1029_tgt, rx1029_start[1]
    set rx1029_pos, rx1029_start[2]
    set rx1029_curclass, rx1029_start[3]
    set rx1029_bstack, rx1029_start[4]
    set $I19, rx1029_start[5]
    store_lex unicode:"$\x{a2}", rx1029_cur
    length rx1029_eos, rx1029_tgt
    eq $I19, 1, rx1029_restart2405
    gt rx1029_pos, rx1029_eos, rx1029_fail2406
    repr_get_attr_int $I11, self, rx1029_curclass, "$!from"
    ne $I11, -1, rxscan1030_done2412
    goto rxscan1030_scan2411
  rxscan1030_loop2410:
    inc rx1029_pos
    gt rx1029_pos, rx1029_eos, rx1029_fail2406
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!from", rx1029_pos
  rxscan1030_scan2411:
    nqp_rxmark rx1029_bstack, rxscan1030_loop2410, rx1029_pos, 0
  rxscan1030_done2412:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    store_lex unicode:"$\x{a2}", rx1029_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx1029_bstack, rxquantg1031_done2414, rx1029_pos, 0
  rxquantg1031_loop2413:
    nqp_rxmark rx1029_bstack, rxcap1032_fail2416, rx1029_pos, 0
    nqp_rxmark rx1029_bstack, rxquantr1033_done2418, rx1029_pos, 0
  rxquantr1033_loop2417:
    add $I11, rx1029_pos, 1
    gt $I11, rx1029_eos, rx1029_fail2406
    substr $S10, rx1029_tgt, rx1029_pos, 1
    ne $S10, ucs4:"&", rx1029_fail2406
    add rx1029_pos, 1
    nqp_rxpeek $I19, rx1029_bstack, rxquantr1033_done2418
    inc $I19
    inc $I19
    set rx1029_rep, rx1029_bstack[$I19]
    nqp_rxcommit rx1029_bstack, rxquantr1033_done2418
    inc rx1029_rep
  rxquantr1033_done2418:
    nqp_rxpeek $I19, rx1029_bstack, rxcap1032_fail2416
    inc $I19
    set $I11, rx1029_bstack[$I19]
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1029_pos)
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1032_done2415
  rxcap1032_fail2416:
    goto rx1029_fail2406
  rxcap1032_done2415:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1034_pass2419
  rxsubrule1034_back2420:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1034_pass2419:
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1034_back2420
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1035_pass2421
  rxsubrule1035_back2422:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1035_pass2421:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1035_back2422
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
  rxquantg1031_done2414:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1036_pass2423
  rxsubrule1036_back2424:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1036_pass2423:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1036_back2424
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1037_pass2425
  rxsubrule1037_back2426:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1037_pass2425:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1037_back2426
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1038_pass2427
  rxsubrule1038_back2428:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1038_pass2427:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1038_back2428
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
  alt1039_02430:
    nqp_rxmark rx1029_bstack, alt1039_12444, rx1029_pos, 0
    add $I11, rx1029_pos, 1
    gt $I11, rx1029_eos, rx1029_fail2406
    substr $S10, rx1029_tgt, rx1029_pos, 1
    ne $S10, ucs4:"(", rx1029_fail2406
    add rx1029_pos, 1
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1040_pass2431
  rxsubrule1040_back2432:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1040_pass2431:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1040_back2432
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1041_pass2433
  rxsubrule1041_back2434:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1041_pass2433:
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1041_back2434
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1042_pass2435
  rxsubrule1042_back2436:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1042_pass2435:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1042_back2436
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
  alt1043_02438:
    nqp_rxmark rx1029_bstack, alt1043_12441, rx1029_pos, 0
    add $I11, rx1029_pos, 1
    gt $I11, rx1029_eos, rx1029_fail2406
    substr $S10, rx1029_tgt, rx1029_pos, 1
    ne $S10, ucs4:")", rx1029_fail2406
    add rx1029_pos, 1
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1044_pass2439
  rxsubrule1044_back2440:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1044_pass2439:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1044_back2440
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    goto alt1043_end2437
  alt1043_12441:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1045_pass2442
  rxsubrule1045_back2443:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1045_pass2442:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1045_back2443
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
  alt1043_end2437:
    goto alt1039_end2429
  alt1039_12444:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1046_pass2445
  rxsubrule1046_back2446:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1046_pass2445:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1046_back2446
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1047_pass2447
  rxsubrule1047_back2448:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1047_pass2447:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1047_back2448
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
  alt1039_end2429:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1048_pass2449
  rxsubrule1048_back2450:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1048_pass2449:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1048_back2450
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    nqp_rxmark rx1029_bstack, rxquantg1049_done2452, rx1029_pos, 0
  rxquantg1049_loop2451:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1050_pass2453
  rxsubrule1050_back2454:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1050_pass2453:
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1050_back2454
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    nqp_rxmark rx1029_bstack, rxquantg1049_done2452, rx1029_pos, rx1029_rep
    goto rxquantg1049_loop2451
  rxquantg1049_done2452:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1051_pass2455
  rxsubrule1051_back2456:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1051_pass2455:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1051_back2456
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1052_02458
    nqp_push_label $P11, alt1052_12463
    nqp_rxmark rx1029_bstack, alt1052_end2457, -1, 0
    rx1029_cur."!alt"(rx1029_pos, "alt_nfa__24_1382484130.92416", $P11)
    goto rx1029_fail2406
  alt1052_02458:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1053_pass2459
  rxsubrule1053_back2460:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1053_pass2459:
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1053_back2460
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1054_pass2461
  rxsubrule1054_back2462:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1054_pass2461:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1054_back2462
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    goto alt1052_end2457
  alt1052_12463:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1055_pass2464
  rxsubrule1055_back2465:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1055_pass2464:
    rx1029_cstack = rx1029_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1055_back2465
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1056_pass2466
  rxsubrule1056_back2467:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1056_pass2466:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1056_back2467
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    goto alt1052_end2457
  alt1052_end2457:
    repr_bind_attr_int rx1029_cur, rx1029_curclass, "$!pos", rx1029_pos
    $P11 = rx1029_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
    goto rxsubrule1057_pass2468
  rxsubrule1057_back2469:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1029_curclass, "$!pos"
    lt $I11, 0, rx1029_fail2406
  rxsubrule1057_pass2468:
    rx1029_cstack = rx1029_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1057_back2469
    push rx1029_bstack, $I11
    push rx1029_bstack, 0
    push rx1029_bstack, rx1029_pos
    elements $I11, rx1029_cstack
    push rx1029_bstack, $I11
    repr_get_attr_int rx1029_pos, $P11, rx1029_curclass, "$!pos"
    rx1029_cur."!cursor_pass"(rx1029_pos, "routine_def", 'backtrack'=>1)
    .return (rx1029_cur)
  rx1029_restart2405:
    repr_get_attr_obj rx1029_cstack, rx1029_cur, rx1029_curclass, "$!cstack"
  rx1029_fail2406:
    unless rx1029_bstack, rx1029_done2404
    pop $I19, rx1029_bstack
    if_null rx1029_cstack, rx1029_cstack_done2409
    unless rx1029_cstack, rx1029_cstack_done2409
    dec $I19
    set $P11, rx1029_cstack[$I19]
  rx1029_cstack_done2409:
    pop rx1029_rep, rx1029_bstack
    pop rx1029_pos, rx1029_bstack
    pop $I19, rx1029_bstack
    lt rx1029_pos, -1, rx1029_done2404
    lt rx1029_pos, 0, rx1029_fail2406
    eq $I19, 0, rx1029_fail2406
    nqp_islist $I20, rx1029_cstack
    unless $I20, rx1029_jump2407
    elements $I18, rx1029_bstack
    le $I18, 0, rx1029_cut2408
    dec $I18
    set $I18, rx1029_bstack[$I18]
  rx1029_cut2408:
    assign rx1029_cstack, $I18
  rx1029_jump2407:
    jump $I19
  rx1029_done2404:
    rx1029_cur."!cursor_fail"()
    .return (rx1029_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_128_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1124
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_419_1382484127.52628' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1058_start
    .local string rx1058_tgt
    .local int rx1058_pos
    .local int rx1058_off
    .local int rx1058_eos
    .local int rx1058_rep
    .local pmc rx1058_cur
    .local pmc rx1058_curclass
    .local pmc rx1058_bstack
    .local pmc rx1058_cstack
    rx1058_start = self."!cursor_start_all"()
    set rx1058_cur, rx1058_start[0]
    set rx1058_tgt, rx1058_start[1]
    set rx1058_pos, rx1058_start[2]
    set rx1058_curclass, rx1058_start[3]
    set rx1058_bstack, rx1058_start[4]
    set $I19, rx1058_start[5]
    store_lex unicode:"$\x{a2}", rx1058_cur
    length rx1058_eos, rx1058_tgt
    eq $I19, 1, rx1058_restart2472
    gt rx1058_pos, rx1058_eos, rx1058_fail2473
    repr_get_attr_int $I11, self, rx1058_curclass, "$!from"
    ne $I11, -1, rxscan1059_done2479
    goto rxscan1059_scan2478
  rxscan1059_loop2477:
    inc rx1058_pos
    gt rx1058_pos, rx1058_eos, rx1058_fail2473
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!from", rx1058_pos
  rxscan1059_scan2478:
    nqp_rxmark rx1058_bstack, rxscan1059_loop2477, rx1058_pos, 0
  rxscan1059_done2479:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    store_lex unicode:"$\x{a2}", rx1058_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    store_lex unicode:"$\x{a2}", rx1058_cur
    box $P5004, 1
    set $P102, $P5004
  alt1060_02481:
    nqp_rxmark rx1058_bstack, alt1060_12490, rx1058_pos, 0
    add $I11, rx1058_pos, 3
    gt $I11, rx1058_eos, rx1058_fail2473
    substr $S10, rx1058_tgt, rx1058_pos, 3
    ne $S10, ucs4:"::(", rx1058_fail2473
    add rx1058_pos, 3
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1061_pass2482
  rxsubrule1061_back2483:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1061_pass2482:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1061_back2483
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1062_pass2484
  rxsubrule1062_back2485:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1062_pass2484:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1062_back2485
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1063_pass2486
  rxsubrule1063_back2487:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1063_pass2486:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1063_back2487
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    add $I11, rx1058_pos, 1
    gt $I11, rx1058_eos, rx1058_fail2473
    substr $S10, rx1058_tgt, rx1058_pos, 1
    ne $S10, ucs4:")", rx1058_fail2473
    add rx1058_pos, 1
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1064_pass2488
  rxsubrule1064_back2489:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1064_pass2488:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1064_back2489
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    goto alt1060_end2480
  alt1060_12490:
    nqp_rxmark rx1058_bstack, rxcap1065_fail2492, rx1058_pos, 0
    nqp_rxmark rx1058_bstack, rxquantr1066_done2494, rx1058_pos, 0
  rxquantr1066_loop2493:
    add $I11, rx1058_pos, 1
    gt $I11, rx1058_eos, rx1058_fail2473
    substr $S10, rx1058_tgt, rx1058_pos, 1
    ne $S10, ucs4:"!", rx1058_fail2473
    add rx1058_pos, 1
    nqp_rxpeek $I19, rx1058_bstack, rxquantr1066_done2494
    inc $I19
    inc $I19
    set rx1058_rep, rx1058_bstack[$I19]
    nqp_rxcommit rx1058_bstack, rxquantr1066_done2494
    inc rx1058_rep
  rxquantr1066_done2494:
    nqp_rxpeek $I19, rx1058_bstack, rxcap1065_fail2492
    inc $I19
    set $I11, rx1058_bstack[$I19]
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1058_pos)
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "private")
    goto rxcap1065_done2491
  rxcap1065_fail2492:
    goto rx1058_fail2473
  rxcap1065_done2491:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1067_pass2495
  rxsubrule1067_back2496:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1067_pass2495:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1067_back2496
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    nqp_rxmark rx1058_bstack, rxquantg1068_done2498, rx1058_pos, 0
  rxquantg1068_loop2497:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1069_pass2499
  rxsubrule1069_back2500:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1069_pass2499:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1069_back2500
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  rxquantg1068_done2498:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1070_pass2501
  rxsubrule1070_back2502:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1070_pass2501:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1070_back2502
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  alt1060_end2480:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1071_pass2503
  rxsubrule1071_back2504:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1071_pass2503:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1071_back2504
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1072_pass2505
  rxsubrule1072_back2506:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1072_pass2505:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1072_back2506
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1073_pass2507
  rxsubrule1073_back2508:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1073_pass2507:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1073_back2508
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  alt1074_02510:
    nqp_rxmark rx1058_bstack, alt1074_12524, rx1058_pos, 0
    add $I11, rx1058_pos, 1
    gt $I11, rx1058_eos, rx1058_fail2473
    substr $S10, rx1058_tgt, rx1058_pos, 1
    ne $S10, ucs4:"(", rx1058_fail2473
    add rx1058_pos, 1
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1075_pass2511
  rxsubrule1075_back2512:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1075_pass2511:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1075_back2512
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1076_pass2513
  rxsubrule1076_back2514:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1076_pass2513:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1076_back2514
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1077_pass2515
  rxsubrule1077_back2516:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1077_pass2515:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1077_back2516
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  alt1078_02518:
    nqp_rxmark rx1058_bstack, alt1078_12521, rx1058_pos, 0
    add $I11, rx1058_pos, 1
    gt $I11, rx1058_eos, rx1058_fail2473
    substr $S10, rx1058_tgt, rx1058_pos, 1
    ne $S10, ucs4:")", rx1058_fail2473
    add rx1058_pos, 1
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1079_pass2519
  rxsubrule1079_back2520:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1079_pass2519:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1079_back2520
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    goto alt1078_end2517
  alt1078_12521:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1080_pass2522
  rxsubrule1080_back2523:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1080_pass2522:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1080_back2523
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  alt1078_end2517:
    goto alt1074_end2509
  alt1074_12524:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1081_pass2525
  rxsubrule1081_back2526:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1081_pass2525:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1081_back2526
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1082_pass2527
  rxsubrule1082_back2528:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1082_pass2527:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1082_back2528
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
  alt1074_end2509:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1083_pass2529
  rxsubrule1083_back2530:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1083_pass2529:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1083_back2530
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    store_lex unicode:"$\x{a2}", rx1058_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_419_1382484127.52628' 
    capture_lex $P5006
    $P5007 = $P5006()
    nqp_rxmark rx1058_bstack, rxquantg1084_done2532, rx1058_pos, 0
  rxquantg1084_loop2531:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1085_pass2533
  rxsubrule1085_back2534:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1085_pass2533:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1085_back2534
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    nqp_rxmark rx1058_bstack, rxquantg1084_done2532, rx1058_pos, rx1058_rep
    goto rxquantg1084_loop2531
  rxquantg1084_done2532:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1086_pass2535
  rxsubrule1086_back2536:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1086_pass2535:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1086_back2536
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1087_02538
    nqp_push_label $P11, alt1087_12543
    nqp_rxmark rx1058_bstack, alt1087_end2537, -1, 0
    rx1058_cur."!alt"(rx1058_pos, "alt_nfa__25_1382484130.97349", $P11)
    goto rx1058_fail2473
  alt1087_02538:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1088_pass2539
  rxsubrule1088_back2540:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1088_pass2539:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "onlystar")
    set_addr $I11, rxsubrule1088_back2540
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1089_pass2541
  rxsubrule1089_back2542:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1089_pass2541:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1089_back2542
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    goto alt1087_end2537
  alt1087_12543:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1090_pass2544
  rxsubrule1090_back2545:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1090_pass2544:
    rx1058_cstack = rx1058_cur."!cursor_capture"($P11, "blockoid")
    set_addr $I11, rxsubrule1090_back2545
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1091_pass2546
  rxsubrule1091_back2547:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1091_pass2546:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1091_back2547
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    goto alt1087_end2537
  alt1087_end2537:
    repr_bind_attr_int rx1058_cur, rx1058_curclass, "$!pos", rx1058_pos
    $P11 = rx1058_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
    goto rxsubrule1092_pass2548
  rxsubrule1092_back2549:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1058_curclass, "$!pos"
    lt $I11, 0, rx1058_fail2473
  rxsubrule1092_pass2548:
    rx1058_cstack = rx1058_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1092_back2549
    push rx1058_bstack, $I11
    push rx1058_bstack, 0
    push rx1058_bstack, rx1058_pos
    elements $I11, rx1058_cstack
    push rx1058_bstack, $I11
    repr_get_attr_int rx1058_pos, $P11, rx1058_curclass, "$!pos"
    rx1058_cur."!cursor_pass"(rx1058_pos, "method_def", 'backtrack'=>1)
    .return (rx1058_cur)
  rx1058_restart2472:
    repr_get_attr_obj rx1058_cstack, rx1058_cur, rx1058_curclass, "$!cstack"
  rx1058_fail2473:
    unless rx1058_bstack, rx1058_done2471
    pop $I19, rx1058_bstack
    if_null rx1058_cstack, rx1058_cstack_done2476
    unless rx1058_cstack, rx1058_cstack_done2476
    dec $I19
    set $P11, rx1058_cstack[$I19]
  rx1058_cstack_done2476:
    pop rx1058_rep, rx1058_bstack
    pop rx1058_pos, rx1058_bstack
    pop $I19, rx1058_bstack
    lt rx1058_pos, -1, rx1058_done2471
    lt rx1058_pos, 0, rx1058_fail2473
    eq $I19, 0, rx1058_fail2473
    nqp_islist $I20, rx1058_cstack
    unless $I20, rx1058_jump2474
    elements $I18, rx1058_bstack
    le $I18, 0, rx1058_cut2475
    dec $I18
    set $I18, rx1058_bstack[$I18]
  rx1058_cut2475:
    assign rx1058_cstack, $I18
  rx1058_jump2474:
    jump $I19
  rx1058_done2471:
    rx1058_cur."!cursor_fail"()
    .return (rx1058_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1382484127.52628") :anon :lex :outer("cuid_128_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1134

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_129_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1142
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_420_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1093_start
    .local string rx1093_tgt
    .local int rx1093_pos
    .local int rx1093_off
    .local int rx1093_eos
    .local int rx1093_rep
    .local pmc rx1093_cur
    .local pmc rx1093_curclass
    .local pmc rx1093_bstack
    .local pmc rx1093_cstack
    rx1093_start = self."!cursor_start_all"()
    set rx1093_cur, rx1093_start[0]
    set rx1093_tgt, rx1093_start[1]
    set rx1093_pos, rx1093_start[2]
    set rx1093_curclass, rx1093_start[3]
    set rx1093_bstack, rx1093_start[4]
    set $I19, rx1093_start[5]
    store_lex unicode:"$\x{a2}", rx1093_cur
    length rx1093_eos, rx1093_tgt
    eq $I19, 1, rx1093_restart2552
    gt rx1093_pos, rx1093_eos, rx1093_fail2553
    repr_get_attr_int $I11, self, rx1093_curclass, "$!from"
    ne $I11, -1, rxscan1094_done2559
    goto rxscan1094_scan2558
  rxscan1094_loop2557:
    inc rx1093_pos
    gt rx1093_pos, rx1093_eos, rx1093_fail2553
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!from", rx1093_pos
  rxscan1094_scan2558:
    nqp_rxmark rx1093_bstack, rxscan1094_loop2557, rx1093_pos, 0
  rxscan1094_done2559:
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    store_lex unicode:"$\x{a2}", rx1093_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_420_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1093_fail2553
    add $I11, rx1093_pos, 1
    gt $I11, rx1093_eos, rx1093_fail2553
    substr $S10, rx1093_tgt, rx1093_pos, 1
    ne $S10, ucs4:"{", rx1093_fail2553
    add rx1093_pos, 1
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2553
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    add $I11, rx1093_pos, 1
    gt $I11, rx1093_eos, rx1093_fail2553
    substr $S10, rx1093_tgt, rx1093_pos, 1
    ne $S10, ucs4:"*", rx1093_fail2553
    add rx1093_pos, 1
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2553
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    add $I11, rx1093_pos, 1
    gt $I11, rx1093_eos, rx1093_fail2553
    substr $S10, rx1093_tgt, rx1093_pos, 1
    ne $S10, ucs4:"}", rx1093_fail2553
    add rx1093_pos, 1
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2553
    repr_bind_attr_int rx1093_cur, rx1093_curclass, "$!pos", rx1093_pos
    $P11 = rx1093_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1093_curclass, "$!pos"
    lt $I11, 0, rx1093_fail2553
    repr_get_attr_int rx1093_pos, $P11, rx1093_curclass, "$!pos"
    rx1093_cur."!cursor_pass"(rx1093_pos, "onlystar", 'backtrack'=>1)
    .return (rx1093_cur)
  rx1093_restart2552:
    repr_get_attr_obj rx1093_cstack, rx1093_cur, rx1093_curclass, "$!cstack"
  rx1093_fail2553:
    unless rx1093_bstack, rx1093_done2551
    pop $I19, rx1093_bstack
    if_null rx1093_cstack, rx1093_cstack_done2556
    unless rx1093_cstack, rx1093_cstack_done2556
    dec $I19
    set $P11, rx1093_cstack[$I19]
  rx1093_cstack_done2556:
    pop rx1093_rep, rx1093_bstack
    pop rx1093_pos, rx1093_bstack
    pop $I19, rx1093_bstack
    lt rx1093_pos, -1, rx1093_done2551
    lt rx1093_pos, 0, rx1093_fail2553
    eq $I19, 0, rx1093_fail2553
    nqp_islist $I20, rx1093_cstack
    unless $I20, rx1093_jump2554
    elements $I18, rx1093_bstack
    le $I18, 0, rx1093_cut2555
    dec $I18
    set $I18, rx1093_bstack[$I18]
  rx1093_cut2555:
    assign rx1093_cstack, $I18
  rx1093_jump2554:
    jump $I19
  rx1093_done2551:
    rx1093_cur."!cursor_fail"()
    .return (rx1093_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1382484127.52628") :anon :lex :outer("cuid_129_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1143
    .local pmc fb_tmp_165 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2560
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_165, $P5002
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if1095_else2561 
    set $P5004, fb_tmp_165["$MULTINESS"]
    set $P5006, $P5004
    goto if1095_end2562
  if1095_else2561:
    null $P5005
    set $P5006, $P5005
  if1095_end2562:
    unless_null $P5006, vivi_10962563
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_10962563:
    unless_null $P5006, vivi_10972564
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_10972564:
    set $P5001, $P5006
  fallback2560:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_130_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1149
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_131_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1150
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1101_start
    .local string rx1101_tgt
    .local int rx1101_pos
    .local int rx1101_off
    .local int rx1101_eos
    .local int rx1101_rep
    .local pmc rx1101_cur
    .local pmc rx1101_curclass
    .local pmc rx1101_bstack
    .local pmc rx1101_cstack
    rx1101_start = self."!cursor_start_all"()
    set rx1101_cur, rx1101_start[0]
    set rx1101_tgt, rx1101_start[1]
    set rx1101_pos, rx1101_start[2]
    set rx1101_curclass, rx1101_start[3]
    set rx1101_bstack, rx1101_start[4]
    set $I19, rx1101_start[5]
    store_lex unicode:"$\x{a2}", rx1101_cur
    length rx1101_eos, rx1101_tgt
    eq $I19, 1, rx1101_restart2570
    gt rx1101_pos, rx1101_eos, rx1101_fail2571
    repr_get_attr_int $I11, self, rx1101_curclass, "$!from"
    ne $I11, -1, rxscan1102_done2577
    goto rxscan1102_scan2576
  rxscan1102_loop2575:
    inc rx1101_pos
    gt rx1101_pos, rx1101_eos, rx1101_fail2571
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!from", rx1101_pos
  rxscan1102_scan2576:
    nqp_rxmark rx1101_bstack, rxscan1102_loop2575, rx1101_pos, 0
  rxscan1102_done2577:
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    store_lex unicode:"$\x{a2}", rx1101_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1101_bstack, rxcap1103_fail2579, rx1101_pos, 0
    add $I11, rx1101_pos, 5
    gt $I11, rx1101_eos, rx1101_fail2571
    substr $S10, rx1101_tgt, rx1101_pos, 5
    ne $S10, ucs4:"multi", rx1101_fail2571
    add rx1101_pos, 5
    nqp_rxpeek $I19, rx1101_bstack, rxcap1103_fail2579
    inc $I19
    set $I11, rx1101_bstack[$I19]
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    $P11 = rx1101_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1101_pos)
    rx1101_cstack = rx1101_cur."!cursor_capture"($P11, "sym")
    goto rxcap1103_done2578
  rxcap1103_fail2579:
    goto rx1101_fail2571
  rxcap1103_done2578:
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    $P11 = rx1101_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1101_curclass, "$!pos"
    lt $I11, 0, rx1101_fail2571
    repr_get_attr_int rx1101_pos, $P11, rx1101_curclass, "$!pos"
  alt1105_02582:
    nqp_rxmark rx1101_bstack, alt1105_12584, rx1101_pos, 0
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    $P11 = rx1101_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1101_curclass, "$!pos"
    lt $I11, 0, rx1101_fail2571
    nqp_rxmark rx1101_bstack, rxsubrule1106_pass2583, -1, 0
  rxsubrule1106_pass2583:
    rx1101_cstack = rx1101_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1101_pos, $P11, rx1101_curclass, "$!pos"
    goto alt1105_end2581
  alt1105_12584:
    nqp_rxmark rx1101_bstack, alt1105_22586, rx1101_pos, 0
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    $P11 = rx1101_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1101_curclass, "$!pos"
    lt $I11, 0, rx1101_fail2571
    nqp_rxmark rx1101_bstack, rxsubrule1107_pass2585, -1, 0
  rxsubrule1107_pass2585:
    rx1101_cstack = rx1101_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1101_pos, $P11, rx1101_curclass, "$!pos"
    goto alt1105_end2581
  alt1105_22586:
    repr_bind_attr_int rx1101_cur, rx1101_curclass, "$!pos", rx1101_pos
    $P11 = rx1101_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1101_curclass, "$!pos"
    lt $I11, 0, rx1101_fail2571
    repr_get_attr_int rx1101_pos, $P11, rx1101_curclass, "$!pos"
  alt1105_end2581:
    rx1101_cur."!cursor_pass"(rx1101_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1101_cur)
  rx1101_restart2570:
    repr_get_attr_obj rx1101_cstack, rx1101_cur, rx1101_curclass, "$!cstack"
  rx1101_fail2571:
    unless rx1101_bstack, rx1101_done2569
    pop $I19, rx1101_bstack
    if_null rx1101_cstack, rx1101_cstack_done2574
    unless rx1101_cstack, rx1101_cstack_done2574
    dec $I19
    set $P11, rx1101_cstack[$I19]
  rx1101_cstack_done2574:
    pop rx1101_rep, rx1101_bstack
    pop rx1101_pos, rx1101_bstack
    pop $I19, rx1101_bstack
    lt rx1101_pos, -1, rx1101_done2569
    lt rx1101_pos, 0, rx1101_fail2571
    eq $I19, 0, rx1101_fail2571
    nqp_islist $I20, rx1101_cstack
    unless $I20, rx1101_jump2572
    elements $I18, rx1101_bstack
    le $I18, 0, rx1101_cut2573
    dec $I18
    set $I18, rx1101_bstack[$I18]
  rx1101_cut2573:
    assign rx1101_cstack, $I18
  rx1101_jump2572:
    jump $I19
  rx1101_done2569:
    rx1101_cur."!cursor_fail"()
    .return (rx1101_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_132_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1155
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1109_start
    .local string rx1109_tgt
    .local int rx1109_pos
    .local int rx1109_off
    .local int rx1109_eos
    .local int rx1109_rep
    .local pmc rx1109_cur
    .local pmc rx1109_curclass
    .local pmc rx1109_bstack
    .local pmc rx1109_cstack
    rx1109_start = self."!cursor_start_all"()
    set rx1109_cur, rx1109_start[0]
    set rx1109_tgt, rx1109_start[1]
    set rx1109_pos, rx1109_start[2]
    set rx1109_curclass, rx1109_start[3]
    set rx1109_bstack, rx1109_start[4]
    set $I19, rx1109_start[5]
    store_lex unicode:"$\x{a2}", rx1109_cur
    length rx1109_eos, rx1109_tgt
    eq $I19, 1, rx1109_restart2590
    gt rx1109_pos, rx1109_eos, rx1109_fail2591
    repr_get_attr_int $I11, self, rx1109_curclass, "$!from"
    ne $I11, -1, rxscan1110_done2597
    goto rxscan1110_scan2596
  rxscan1110_loop2595:
    inc rx1109_pos
    gt rx1109_pos, rx1109_eos, rx1109_fail2591
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!from", rx1109_pos
  rxscan1110_scan2596:
    nqp_rxmark rx1109_bstack, rxscan1110_loop2595, rx1109_pos, 0
  rxscan1110_done2597:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    store_lex unicode:"$\x{a2}", rx1109_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1109_bstack, rxcap1111_fail2599, rx1109_pos, 0
    add $I11, rx1109_pos, 5
    gt $I11, rx1109_eos, rx1109_fail2591
    substr $S10, rx1109_tgt, rx1109_pos, 5
    ne $S10, ucs4:"proto", rx1109_fail2591
    add rx1109_pos, 5
    nqp_rxpeek $I19, rx1109_bstack, rxcap1111_fail2599
    inc $I19
    set $I11, rx1109_bstack[$I19]
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1109_pos)
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "sym")
    goto rxcap1111_done2598
  rxcap1111_fail2599:
    goto rx1109_fail2591
  rxcap1111_done2598:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2591
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
  alt1113_02602:
    nqp_rxmark rx1109_bstack, alt1113_12604, rx1109_pos, 0
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2591
    nqp_rxmark rx1109_bstack, rxsubrule1114_pass2603, -1, 0
  rxsubrule1114_pass2603:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    goto alt1113_end2601
  alt1113_12604:
    nqp_rxmark rx1109_bstack, alt1113_22606, rx1109_pos, 0
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2591
    nqp_rxmark rx1109_bstack, rxsubrule1115_pass2605, -1, 0
  rxsubrule1115_pass2605:
    rx1109_cstack = rx1109_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
    goto alt1113_end2601
  alt1113_22606:
    repr_bind_attr_int rx1109_cur, rx1109_curclass, "$!pos", rx1109_pos
    $P11 = rx1109_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1109_curclass, "$!pos"
    lt $I11, 0, rx1109_fail2591
    repr_get_attr_int rx1109_pos, $P11, rx1109_curclass, "$!pos"
  alt1113_end2601:
    rx1109_cur."!cursor_pass"(rx1109_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1109_cur)
  rx1109_restart2590:
    repr_get_attr_obj rx1109_cstack, rx1109_cur, rx1109_curclass, "$!cstack"
  rx1109_fail2591:
    unless rx1109_bstack, rx1109_done2589
    pop $I19, rx1109_bstack
    if_null rx1109_cstack, rx1109_cstack_done2594
    unless rx1109_cstack, rx1109_cstack_done2594
    dec $I19
    set $P11, rx1109_cstack[$I19]
  rx1109_cstack_done2594:
    pop rx1109_rep, rx1109_bstack
    pop rx1109_pos, rx1109_bstack
    pop $I19, rx1109_bstack
    lt rx1109_pos, -1, rx1109_done2589
    lt rx1109_pos, 0, rx1109_fail2591
    eq $I19, 0, rx1109_fail2591
    nqp_islist $I20, rx1109_cstack
    unless $I20, rx1109_jump2592
    elements $I18, rx1109_bstack
    le $I18, 0, rx1109_cut2593
    dec $I18
    set $I18, rx1109_bstack[$I18]
  rx1109_cut2593:
    assign rx1109_cstack, $I18
  rx1109_jump2592:
    jump $I19
  rx1109_done2589:
    rx1109_cur."!cursor_fail"()
    .return (rx1109_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_133_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1160
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1117_start
    .local string rx1117_tgt
    .local int rx1117_pos
    .local int rx1117_off
    .local int rx1117_eos
    .local int rx1117_rep
    .local pmc rx1117_cur
    .local pmc rx1117_curclass
    .local pmc rx1117_bstack
    .local pmc rx1117_cstack
    rx1117_start = self."!cursor_start_all"()
    set rx1117_cur, rx1117_start[0]
    set rx1117_tgt, rx1117_start[1]
    set rx1117_pos, rx1117_start[2]
    set rx1117_curclass, rx1117_start[3]
    set rx1117_bstack, rx1117_start[4]
    set $I19, rx1117_start[5]
    store_lex unicode:"$\x{a2}", rx1117_cur
    length rx1117_eos, rx1117_tgt
    eq $I19, 1, rx1117_restart2610
    gt rx1117_pos, rx1117_eos, rx1117_fail2611
    repr_get_attr_int $I11, self, rx1117_curclass, "$!from"
    ne $I11, -1, rxscan1118_done2617
    goto rxscan1118_scan2616
  rxscan1118_loop2615:
    inc rx1117_pos
    gt rx1117_pos, rx1117_eos, rx1117_fail2611
    repr_bind_attr_int rx1117_cur, rx1117_curclass, "$!from", rx1117_pos
  rxscan1118_scan2616:
    nqp_rxmark rx1117_bstack, rxscan1118_loop2615, rx1117_pos, 0
  rxscan1118_done2617:
    repr_bind_attr_int rx1117_cur, rx1117_curclass, "$!pos", rx1117_pos
    store_lex unicode:"$\x{a2}", rx1117_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1117_cur, rx1117_curclass, "$!pos", rx1117_pos
    $P11 = rx1117_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1117_curclass, "$!pos"
    lt $I11, 0, rx1117_fail2611
    nqp_rxmark rx1117_bstack, rxsubrule1119_pass2618, -1, 0
  rxsubrule1119_pass2618:
    rx1117_cstack = rx1117_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1117_pos, $P11, rx1117_curclass, "$!pos"
    rx1117_cur."!cursor_pass"(rx1117_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1117_cur)
  rx1117_restart2610:
    repr_get_attr_obj rx1117_cstack, rx1117_cur, rx1117_curclass, "$!cstack"
  rx1117_fail2611:
    unless rx1117_bstack, rx1117_done2609
    pop $I19, rx1117_bstack
    if_null rx1117_cstack, rx1117_cstack_done2614
    unless rx1117_cstack, rx1117_cstack_done2614
    dec $I19
    set $P11, rx1117_cstack[$I19]
  rx1117_cstack_done2614:
    pop rx1117_rep, rx1117_bstack
    pop rx1117_pos, rx1117_bstack
    pop $I19, rx1117_bstack
    lt rx1117_pos, -1, rx1117_done2609
    lt rx1117_pos, 0, rx1117_fail2611
    eq $I19, 0, rx1117_fail2611
    nqp_islist $I20, rx1117_cstack
    unless $I20, rx1117_jump2612
    elements $I18, rx1117_bstack
    le $I18, 0, rx1117_cut2613
    dec $I18
    set $I18, rx1117_bstack[$I18]
  rx1117_cut2613:
    assign rx1117_cstack, $I18
  rx1117_jump2612:
    jump $I19
  rx1117_done2609:
    rx1117_cur."!cursor_fail"()
    .return (rx1117_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_134_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1165
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_421_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1120_start
    .local string rx1120_tgt
    .local int rx1120_pos
    .local int rx1120_off
    .local int rx1120_eos
    .local int rx1120_rep
    .local pmc rx1120_cur
    .local pmc rx1120_curclass
    .local pmc rx1120_bstack
    .local pmc rx1120_cstack
    rx1120_start = self."!cursor_start_all"()
    set rx1120_cur, rx1120_start[0]
    set rx1120_tgt, rx1120_start[1]
    set rx1120_pos, rx1120_start[2]
    set rx1120_curclass, rx1120_start[3]
    set rx1120_bstack, rx1120_start[4]
    set $I19, rx1120_start[5]
    store_lex unicode:"$\x{a2}", rx1120_cur
    length rx1120_eos, rx1120_tgt
    eq $I19, 1, rx1120_restart2621
    gt rx1120_pos, rx1120_eos, rx1120_fail2622
    repr_get_attr_int $I11, self, rx1120_curclass, "$!from"
    ne $I11, -1, rxscan1121_done2628
    goto rxscan1121_scan2627
  rxscan1121_loop2626:
    inc rx1120_pos
    gt rx1120_pos, rx1120_eos, rx1120_fail2622
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!from", rx1120_pos
  rxscan1121_scan2627:
    nqp_rxmark rx1120_bstack, rxscan1121_loop2626, rx1120_pos, 0
  rxscan1121_done2628:
    nqp_rxmark rx1120_bstack, rxquantg1122_done2630, rx1120_pos, 0
  rxquantg1122_loop2629:
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    store_lex unicode:"$\x{a2}", rx1120_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_421_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1120_fail2622
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1126_pass2636
  rxsubrule1126_back2637:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1126_pass2636:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1126_back2637
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1127_pass2638
  rxsubrule1127_back2639:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1127_pass2638:
    rx1120_cstack = rx1120_cur."!cursor_capture"($P11, "invocant")
    set_addr $I11, rxsubrule1127_back2639
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1128_pass2640
  rxsubrule1128_back2641:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1128_pass2640:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1128_back2641
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    add $I11, rx1120_pos, 1
    gt $I11, rx1120_eos, rx1120_fail2622
    substr $S10, rx1120_tgt, rx1120_pos, 1
    ne $S10, ucs4:":", rx1120_fail2622
    add rx1120_pos, 1
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1129_pass2642
  rxsubrule1129_back2643:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1129_pass2642:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1129_back2643
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
  rxquantg1122_done2630:
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1130_pass2644
  rxsubrule1130_back2645:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1130_pass2644:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1130_back2645
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    nqp_rxmark rx1120_bstack, rxquantg1131_done2647, rx1120_pos, 0
  rxquantg1131_loop2646:
    nqp_rxmark rx1120_bstack, rxquantr1132_done2649, rx1120_pos, 0
  rxquantr1132_loop2648:
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1133_pass2650
  rxsubrule1133_back2651:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1133_pass2650:
    rx1120_cstack = rx1120_cur."!cursor_capture"($P11, "parameter")
    set_addr $I11, rxsubrule1133_back2651
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1134_pass2652
  rxsubrule1134_back2653:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1134_pass2652:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1134_back2653
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    nqp_rxpeek $I19, rx1120_bstack, rxquantr1132_done2649
    inc $I19
    inc $I19
    set rx1120_rep, rx1120_bstack[$I19]
    nqp_rxcommit rx1120_bstack, rxquantr1132_done2649
    inc rx1120_rep
    nqp_rxmark rx1120_bstack, rxquantr1132_done2649, rx1120_pos, rx1120_rep
    add $I11, rx1120_pos, 1
    gt $I11, rx1120_eos, rx1120_fail2622
    substr $S10, rx1120_tgt, rx1120_pos, 1
    ne $S10, ucs4:",", rx1120_fail2622
    add rx1120_pos, 1
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1135_pass2654
  rxsubrule1135_back2655:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1135_pass2654:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1135_back2655
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    goto rxquantr1132_loop2648
  rxquantr1132_done2649:
  rxquantg1131_done2647:
    repr_bind_attr_int rx1120_cur, rx1120_curclass, "$!pos", rx1120_pos
    $P11 = rx1120_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
    goto rxsubrule1136_pass2656
  rxsubrule1136_back2657:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1120_curclass, "$!pos"
    lt $I11, 0, rx1120_fail2622
  rxsubrule1136_pass2656:
    rx1120_cstack = rx1120_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1136_back2657
    push rx1120_bstack, $I11
    push rx1120_bstack, 0
    push rx1120_bstack, rx1120_pos
    elements $I11, rx1120_cstack
    push rx1120_bstack, $I11
    repr_get_attr_int rx1120_pos, $P11, rx1120_curclass, "$!pos"
    rx1120_cur."!cursor_pass"(rx1120_pos, "signature", 'backtrack'=>1)
    .return (rx1120_cur)
  rx1120_restart2621:
    repr_get_attr_obj rx1120_cstack, rx1120_cur, rx1120_curclass, "$!cstack"
  rx1120_fail2622:
    unless rx1120_bstack, rx1120_done2620
    pop $I19, rx1120_bstack
    if_null rx1120_cstack, rx1120_cstack_done2625
    unless rx1120_cstack, rx1120_cstack_done2625
    dec $I19
    set $P11, rx1120_cstack[$I19]
  rx1120_cstack_done2625:
    pop rx1120_rep, rx1120_bstack
    pop rx1120_pos, rx1120_bstack
    pop $I19, rx1120_bstack
    lt rx1120_pos, -1, rx1120_done2620
    lt rx1120_pos, 0, rx1120_fail2622
    eq $I19, 0, rx1120_fail2622
    nqp_islist $I20, rx1120_cstack
    unless $I20, rx1120_jump2623
    elements $I18, rx1120_bstack
    le $I18, 0, rx1120_cut2624
    dec $I18
    set $I18, rx1120_bstack[$I18]
  rx1120_cut2624:
    assign rx1120_cstack, $I18
  rx1120_jump2623:
    jump $I19
  rx1120_done2620:
    rx1120_cur."!cursor_fail"()
    .return (rx1120_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1382484127.52628") :anon :lex :outer("cuid_134_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1166
    .local pmc fb_tmp_166 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2631
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_166, $P5002
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1123_else2632 
    set $P5004, fb_tmp_166["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1123_end2633
  if1123_else2632:
    null $P5005
    set $P5006, $P5005
  if1123_end2633:
    unless_null $P5006, vivi_11242634
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_11242634:
    unless_null $P5006, vivi_11252635
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_11252635:
    set $P5001, $P5006
  fallback2631:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_135_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1170
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1137_start
    .local string rx1137_tgt
    .local int rx1137_pos
    .local int rx1137_off
    .local int rx1137_eos
    .local int rx1137_rep
    .local pmc rx1137_cur
    .local pmc rx1137_curclass
    .local pmc rx1137_bstack
    .local pmc rx1137_cstack
    rx1137_start = self."!cursor_start_all"()
    set rx1137_cur, rx1137_start[0]
    set rx1137_tgt, rx1137_start[1]
    set rx1137_pos, rx1137_start[2]
    set rx1137_curclass, rx1137_start[3]
    set rx1137_bstack, rx1137_start[4]
    set $I19, rx1137_start[5]
    store_lex unicode:"$\x{a2}", rx1137_cur
    length rx1137_eos, rx1137_tgt
    eq $I19, 1, rx1137_restart2660
    gt rx1137_pos, rx1137_eos, rx1137_fail2661
    repr_get_attr_int $I11, self, rx1137_curclass, "$!from"
    ne $I11, -1, rxscan1138_done2667
    goto rxscan1138_scan2666
  rxscan1138_loop2665:
    inc rx1137_pos
    gt rx1137_pos, rx1137_eos, rx1137_fail2661
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!from", rx1137_pos
  rxscan1138_scan2666:
    nqp_rxmark rx1137_bstack, rxscan1138_loop2665, rx1137_pos, 0
  rxscan1138_done2667:
    nqp_rxmark rx1137_bstack, rxquantr1139_done2669, rx1137_pos, 0
  rxquantr1139_loop2668:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    nqp_rxmark rx1137_bstack, rxsubrule1140_pass2670, -1, 0
  rxsubrule1140_pass2670:
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    nqp_rxmark rx1137_bstack, rxquantr1141_done2672, rx1137_pos, 0
  rxquantr1141_loop2671:
    add $I11, rx1137_pos, 1
    gt $I11, rx1137_eos, rx1137_fail2661
    substr $S10, rx1137_tgt, rx1137_pos, 1
    ne $S10, ucs4:":", rx1137_fail2661
    add rx1137_pos, 1
    nqp_rxmark rx1137_bstack, rxcap1142_fail2674, rx1137_pos, 0
    ge rx1137_pos, rx1137_eos, rx1137_fail2661
    substr $S11, rx1137_tgt, rx1137_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1137_fail2661
    inc rx1137_pos
    nqp_rxpeek $I19, rx1137_bstack, rxcap1142_fail2674
    inc $I19
    set $I11, rx1137_bstack[$I19]
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1137_pos)
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1142_done2673
  rxcap1142_fail2674:
    goto rx1137_fail2661
  rxcap1142_done2673:
    nqp_rxpeek $I19, rx1137_bstack, rxquantr1141_done2672
    inc $I19
    inc $I19
    set rx1137_rep, rx1137_bstack[$I19]
    nqp_rxcommit rx1137_bstack, rxquantr1141_done2672
    inc rx1137_rep
  rxquantr1141_done2672:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    nqp_rxpeek $I19, rx1137_bstack, rxquantr1139_done2669
    inc $I19
    inc $I19
    set rx1137_rep, rx1137_bstack[$I19]
    nqp_rxcommit rx1137_bstack, rxquantr1139_done2669
    inc rx1137_rep
    nqp_rxmark rx1137_bstack, rxquantr1139_done2669, rx1137_pos, rx1137_rep
    goto rxquantr1139_loop2668
  rxquantr1139_done2669:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1144_02677
    nqp_push_label $P11, alt1144_12681
    nqp_rxmark rx1137_bstack, alt1144_end2676, -1, 0
    rx1137_cur."!alt"(rx1137_pos, "alt_nfa__28_1382484131.11864", $P11)
    goto rx1137_fail2661
  alt1144_02677:
    nqp_rxmark rx1137_bstack, rxcap1145_fail2679, rx1137_pos, 0
    add $I11, rx1137_pos, 1
    gt $I11, rx1137_eos, rx1137_fail2661
    substr $S10, rx1137_tgt, rx1137_pos, 1
    ne $S10, ucs4:"*", rx1137_fail2661
    add rx1137_pos, 1
    nqp_rxpeek $I19, rx1137_bstack, rxcap1145_fail2679
    inc $I19
    set $I11, rx1137_bstack[$I19]
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1137_pos)
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "quant")
    goto rxcap1145_done2678
  rxcap1145_fail2679:
    goto rx1137_fail2661
  rxcap1145_done2678:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    nqp_rxmark rx1137_bstack, rxsubrule1146_pass2680, -1, 0
  rxsubrule1146_pass2680:
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    goto alt1144_end2676
  alt1144_12681:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1147_02683
    nqp_push_label $P11, alt1147_12685
    nqp_rxmark rx1137_bstack, alt1147_end2682, -1, 0
    rx1137_cur."!alt"(rx1137_pos, "alt_nfa__26_1382484131.11792", $P11)
    goto rx1137_fail2661
  alt1147_02683:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    nqp_rxmark rx1137_bstack, rxsubrule1148_pass2684, -1, 0
  rxsubrule1148_pass2684:
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    goto alt1147_end2682
  alt1147_12685:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    nqp_rxmark rx1137_bstack, rxsubrule1149_pass2686, -1, 0
  rxsubrule1149_pass2686:
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    goto alt1147_end2682
  alt1147_end2682:
    nqp_rxcommit rx1137_bstack, alt1147_end2682
    nqp_rxmark rx1137_bstack, rxcap1150_fail2688, rx1137_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1151_02690
    nqp_push_label $P11, alt1151_12691
    nqp_push_label $P11, alt1151_22692
    nqp_rxmark rx1137_bstack, alt1151_end2689, -1, 0
    rx1137_cur."!alt"(rx1137_pos, "alt_nfa__27_1382484131.11825", $P11)
    goto rx1137_fail2661
  alt1151_02690:
    add $I11, rx1137_pos, 1
    gt $I11, rx1137_eos, rx1137_fail2661
    substr $S10, rx1137_tgt, rx1137_pos, 1
    ne $S10, ucs4:"?", rx1137_fail2661
    add rx1137_pos, 1
    goto alt1151_end2689
  alt1151_12691:
    add $I11, rx1137_pos, 1
    gt $I11, rx1137_eos, rx1137_fail2661
    substr $S10, rx1137_tgt, rx1137_pos, 1
    ne $S10, ucs4:"!", rx1137_fail2661
    add rx1137_pos, 1
    goto alt1151_end2689
  alt1151_22692:
    goto alt1151_end2689
  alt1151_end2689:
    nqp_rxcommit rx1137_bstack, alt1151_end2689
    nqp_rxpeek $I19, rx1137_bstack, rxcap1150_fail2688
    inc $I19
    set $I11, rx1137_bstack[$I19]
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1137_pos)
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "quant")
    goto rxcap1150_done2687
  rxcap1150_fail2688:
    goto rx1137_fail2661
  rxcap1150_done2687:
    goto alt1144_end2676
  alt1144_end2676:
    nqp_rxcommit rx1137_bstack, alt1144_end2676
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    nqp_rxmark rx1137_bstack, rxquantr1154_done2696, rx1137_pos, 0
  rxquantr1154_loop2695:
    repr_bind_attr_int rx1137_cur, rx1137_curclass, "$!pos", rx1137_pos
    $P11 = rx1137_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
    goto rxsubrule1155_pass2697
  rxsubrule1155_back2698:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1137_curclass, "$!pos"
    lt $I11, 0, rx1137_fail2661
  rxsubrule1155_pass2697:
    rx1137_cstack = rx1137_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1155_back2698
    push rx1137_bstack, $I11
    push rx1137_bstack, 0
    push rx1137_bstack, rx1137_pos
    elements $I11, rx1137_cstack
    push rx1137_bstack, $I11
    repr_get_attr_int rx1137_pos, $P11, rx1137_curclass, "$!pos"
    nqp_rxpeek $I19, rx1137_bstack, rxquantr1154_done2696
    inc $I19
    inc $I19
    set rx1137_rep, rx1137_bstack[$I19]
    nqp_rxcommit rx1137_bstack, rxquantr1154_done2696
    inc rx1137_rep
  rxquantr1154_done2696:
    rx1137_cur."!cursor_pass"(rx1137_pos, "parameter", 'backtrack'=>1)
    .return (rx1137_cur)
  rx1137_restart2660:
    repr_get_attr_obj rx1137_cstack, rx1137_cur, rx1137_curclass, "$!cstack"
  rx1137_fail2661:
    unless rx1137_bstack, rx1137_done2659
    pop $I19, rx1137_bstack
    if_null rx1137_cstack, rx1137_cstack_done2664
    unless rx1137_cstack, rx1137_cstack_done2664
    dec $I19
    set $P11, rx1137_cstack[$I19]
  rx1137_cstack_done2664:
    pop rx1137_rep, rx1137_bstack
    pop rx1137_pos, rx1137_bstack
    pop $I19, rx1137_bstack
    lt rx1137_pos, -1, rx1137_done2659
    lt rx1137_pos, 0, rx1137_fail2661
    eq $I19, 0, rx1137_fail2661
    nqp_islist $I20, rx1137_cstack
    unless $I20, rx1137_jump2662
    elements $I18, rx1137_bstack
    le $I18, 0, rx1137_cut2663
    dec $I18
    set $I18, rx1137_bstack[$I18]
  rx1137_cut2663:
    assign rx1137_cstack, $I18
  rx1137_jump2662:
    jump $I19
  rx1137_done2659:
    rx1137_cur."!cursor_fail"()
    .return (rx1137_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_136_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1179
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1156_start
    .local string rx1156_tgt
    .local int rx1156_pos
    .local int rx1156_off
    .local int rx1156_eos
    .local int rx1156_rep
    .local pmc rx1156_cur
    .local pmc rx1156_curclass
    .local pmc rx1156_bstack
    .local pmc rx1156_cstack
    rx1156_start = self."!cursor_start_all"()
    set rx1156_cur, rx1156_start[0]
    set rx1156_tgt, rx1156_start[1]
    set rx1156_pos, rx1156_start[2]
    set rx1156_curclass, rx1156_start[3]
    set rx1156_bstack, rx1156_start[4]
    set $I19, rx1156_start[5]
    store_lex unicode:"$\x{a2}", rx1156_cur
    length rx1156_eos, rx1156_tgt
    eq $I19, 1, rx1156_restart2701
    gt rx1156_pos, rx1156_eos, rx1156_fail2702
    repr_get_attr_int $I11, self, rx1156_curclass, "$!from"
    ne $I11, -1, rxscan1157_done2708
    goto rxscan1157_scan2707
  rxscan1157_loop2706:
    inc rx1156_pos
    gt rx1156_pos, rx1156_eos, rx1156_fail2702
    repr_bind_attr_int rx1156_cur, rx1156_curclass, "$!from", rx1156_pos
  rxscan1157_scan2707:
    nqp_rxmark rx1156_bstack, rxscan1157_loop2706, rx1156_pos, 0
  rxscan1157_done2708:
    repr_bind_attr_int rx1156_cur, rx1156_curclass, "$!pos", rx1156_pos
    $P11 = rx1156_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1156_curclass, "$!pos"
    lt $I11, 0, rx1156_fail2702
    nqp_rxmark rx1156_bstack, rxsubrule1158_pass2709, -1, 0
  rxsubrule1158_pass2709:
    rx1156_cstack = rx1156_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1156_pos, $P11, rx1156_curclass, "$!pos"
    nqp_rxmark rx1156_bstack, rxquantr1159_done2711, rx1156_pos, 0
  rxquantr1159_loop2710:
    repr_bind_attr_int rx1156_cur, rx1156_curclass, "$!pos", rx1156_pos
    $P11 = rx1156_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1156_curclass, "$!pos"
    lt $I11, 0, rx1156_fail2702
    goto rxsubrule1160_pass2712
  rxsubrule1160_back2713:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1156_curclass, "$!pos"
    lt $I11, 0, rx1156_fail2702
  rxsubrule1160_pass2712:
    rx1156_cstack = rx1156_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1160_back2713
    push rx1156_bstack, $I11
    push rx1156_bstack, 0
    push rx1156_bstack, rx1156_pos
    elements $I11, rx1156_cstack
    push rx1156_bstack, $I11
    repr_get_attr_int rx1156_pos, $P11, rx1156_curclass, "$!pos"
    nqp_rxpeek $I19, rx1156_bstack, rxquantr1159_done2711
    inc $I19
    inc $I19
    set rx1156_rep, rx1156_bstack[$I19]
    nqp_rxcommit rx1156_bstack, rxquantr1159_done2711
    inc rx1156_rep
  rxquantr1159_done2711:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1161_02715
    nqp_push_label $P11, alt1161_12717
    nqp_rxmark rx1156_bstack, alt1161_end2714, -1, 0
    rx1156_cur."!alt"(rx1156_pos, "alt_nfa__29_1382484131.13284", $P11)
    goto rx1156_fail2702
  alt1161_02715:
    repr_bind_attr_int rx1156_cur, rx1156_curclass, "$!pos", rx1156_pos
    $P11 = rx1156_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1156_curclass, "$!pos"
    lt $I11, 0, rx1156_fail2702
    nqp_rxmark rx1156_bstack, rxsubrule1162_pass2716, -1, 0
  rxsubrule1162_pass2716:
    rx1156_cstack = rx1156_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1156_pos, $P11, rx1156_curclass, "$!pos"
    goto alt1161_end2714
  alt1161_12717:
    nqp_rxmark rx1156_bstack, rxcap1163_fail2719, rx1156_pos, 0
    ge rx1156_pos, rx1156_eos, rx1156_fail2702
    substr $S11, rx1156_tgt, rx1156_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1156_fail2702
    inc rx1156_pos
    nqp_rxpeek $I19, rx1156_bstack, rxcap1163_fail2719
    inc $I19
    set $I11, rx1156_bstack[$I19]
    repr_bind_attr_int rx1156_cur, rx1156_curclass, "$!pos", rx1156_pos
    $P11 = rx1156_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1156_pos)
    rx1156_cstack = rx1156_cur."!cursor_capture"($P11, "name")
    goto rxcap1163_done2718
  rxcap1163_fail2719:
    goto rx1156_fail2702
  rxcap1163_done2718:
    goto alt1161_end2714
  alt1161_end2714:
    nqp_rxcommit rx1156_bstack, alt1161_end2714
    rx1156_cur."!cursor_pass"(rx1156_pos, "param_var", 'backtrack'=>1)
    .return (rx1156_cur)
  rx1156_restart2701:
    repr_get_attr_obj rx1156_cstack, rx1156_cur, rx1156_curclass, "$!cstack"
  rx1156_fail2702:
    unless rx1156_bstack, rx1156_done2700
    pop $I19, rx1156_bstack
    if_null rx1156_cstack, rx1156_cstack_done2705
    unless rx1156_cstack, rx1156_cstack_done2705
    dec $I19
    set $P11, rx1156_cstack[$I19]
  rx1156_cstack_done2705:
    pop rx1156_rep, rx1156_bstack
    pop rx1156_pos, rx1156_bstack
    pop $I19, rx1156_bstack
    lt rx1156_pos, -1, rx1156_done2700
    lt rx1156_pos, 0, rx1156_fail2702
    eq $I19, 0, rx1156_fail2702
    nqp_islist $I20, rx1156_cstack
    unless $I20, rx1156_jump2703
    elements $I18, rx1156_bstack
    le $I18, 0, rx1156_cut2704
    dec $I18
    set $I18, rx1156_bstack[$I18]
  rx1156_cut2704:
    assign rx1156_cstack, $I18
  rx1156_jump2703:
    jump $I19
  rx1156_done2700:
    rx1156_cur."!cursor_fail"()
    .return (rx1156_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_137_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1184
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1164_start
    .local string rx1164_tgt
    .local int rx1164_pos
    .local int rx1164_off
    .local int rx1164_eos
    .local int rx1164_rep
    .local pmc rx1164_cur
    .local pmc rx1164_curclass
    .local pmc rx1164_bstack
    .local pmc rx1164_cstack
    rx1164_start = self."!cursor_start_all"()
    set rx1164_cur, rx1164_start[0]
    set rx1164_tgt, rx1164_start[1]
    set rx1164_pos, rx1164_start[2]
    set rx1164_curclass, rx1164_start[3]
    set rx1164_bstack, rx1164_start[4]
    set $I19, rx1164_start[5]
    store_lex unicode:"$\x{a2}", rx1164_cur
    length rx1164_eos, rx1164_tgt
    eq $I19, 1, rx1164_restart2722
    gt rx1164_pos, rx1164_eos, rx1164_fail2723
    repr_get_attr_int $I11, self, rx1164_curclass, "$!from"
    ne $I11, -1, rxscan1165_done2729
    goto rxscan1165_scan2728
  rxscan1165_loop2727:
    inc rx1164_pos
    index rx1164_pos, rx1164_tgt, ucs4:":", rx1164_pos
    eq rx1164_pos, -1, rx1164_fail2723
    gt rx1164_pos, rx1164_eos, rx1164_fail2723
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!from", rx1164_pos
  rxscan1165_scan2728:
    nqp_rxmark rx1164_bstack, rxscan1165_loop2727, rx1164_pos, 0
  rxscan1165_done2729:
    add $I11, rx1164_pos, 1
    gt $I11, rx1164_eos, rx1164_fail2723
    substr $S10, rx1164_tgt, rx1164_pos, 1
    ne $S10, ucs4:":", rx1164_fail2723
    add rx1164_pos, 1
    repr_bind_attr_int rx1164_cur, rx1164_curclass, "$!pos", rx1164_pos
    $P11 = rx1164_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1164_curclass, "$!pos"
    lt $I11, 0, rx1164_fail2723
    nqp_rxmark rx1164_bstack, rxsubrule1166_pass2730, -1, 0
  rxsubrule1166_pass2730:
    rx1164_cstack = rx1164_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1164_pos, $P11, rx1164_curclass, "$!pos"
    rx1164_cur."!cursor_pass"(rx1164_pos, "named_param", 'backtrack'=>1)
    .return (rx1164_cur)
  rx1164_restart2722:
    repr_get_attr_obj rx1164_cstack, rx1164_cur, rx1164_curclass, "$!cstack"
  rx1164_fail2723:
    unless rx1164_bstack, rx1164_done2721
    pop $I19, rx1164_bstack
    if_null rx1164_cstack, rx1164_cstack_done2726
    unless rx1164_cstack, rx1164_cstack_done2726
    dec $I19
    set $P11, rx1164_cstack[$I19]
  rx1164_cstack_done2726:
    pop rx1164_rep, rx1164_bstack
    pop rx1164_pos, rx1164_bstack
    pop $I19, rx1164_bstack
    lt rx1164_pos, -1, rx1164_done2721
    lt rx1164_pos, 0, rx1164_fail2723
    eq $I19, 0, rx1164_fail2723
    nqp_islist $I20, rx1164_cstack
    unless $I20, rx1164_jump2724
    elements $I18, rx1164_bstack
    le $I18, 0, rx1164_cut2725
    dec $I18
    set $I18, rx1164_bstack[$I18]
  rx1164_cut2725:
    assign rx1164_cstack, $I18
  rx1164_jump2724:
    jump $I19
  rx1164_done2721:
    rx1164_cur."!cursor_fail"()
    .return (rx1164_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_138_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1188
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1167_start
    .local string rx1167_tgt
    .local int rx1167_pos
    .local int rx1167_off
    .local int rx1167_eos
    .local int rx1167_rep
    .local pmc rx1167_cur
    .local pmc rx1167_curclass
    .local pmc rx1167_bstack
    .local pmc rx1167_cstack
    rx1167_start = self."!cursor_start_all"()
    set rx1167_cur, rx1167_start[0]
    set rx1167_tgt, rx1167_start[1]
    set rx1167_pos, rx1167_start[2]
    set rx1167_curclass, rx1167_start[3]
    set rx1167_bstack, rx1167_start[4]
    set $I19, rx1167_start[5]
    store_lex unicode:"$\x{a2}", rx1167_cur
    length rx1167_eos, rx1167_tgt
    eq $I19, 1, rx1167_restart2733
    gt rx1167_pos, rx1167_eos, rx1167_fail2734
    repr_get_attr_int $I11, self, rx1167_curclass, "$!from"
    ne $I11, -1, rxscan1168_done2740
    goto rxscan1168_scan2739
  rxscan1168_loop2738:
    inc rx1167_pos
    gt rx1167_pos, rx1167_eos, rx1167_fail2734
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!from", rx1167_pos
  rxscan1168_scan2739:
    nqp_rxmark rx1167_bstack, rxscan1168_loop2738, rx1167_pos, 0
  rxscan1168_done2740:
    add $I11, rx1167_pos, 1
    gt $I11, rx1167_eos, rx1167_fail2734
    substr $S10, rx1167_tgt, rx1167_pos, 1
    ne $S10, ucs4:"=", rx1167_fail2734
    add rx1167_pos, 1
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
    goto rxsubrule1169_pass2741
  rxsubrule1169_back2742:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
  rxsubrule1169_pass2741:
    rx1167_cstack = rx1167_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1169_back2742
    push rx1167_bstack, $I11
    push rx1167_bstack, 0
    push rx1167_bstack, rx1167_pos
    elements $I11, rx1167_cstack
    push rx1167_bstack, $I11
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
    goto rxsubrule1170_pass2743
  rxsubrule1170_back2744:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
  rxsubrule1170_pass2743:
    rx1167_cstack = rx1167_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1170_back2744
    push rx1167_bstack, $I11
    push rx1167_bstack, 0
    push rx1167_bstack, rx1167_pos
    elements $I11, rx1167_cstack
    push rx1167_bstack, $I11
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    repr_bind_attr_int rx1167_cur, rx1167_curclass, "$!pos", rx1167_pos
    $P11 = rx1167_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
    goto rxsubrule1171_pass2745
  rxsubrule1171_back2746:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1167_curclass, "$!pos"
    lt $I11, 0, rx1167_fail2734
  rxsubrule1171_pass2745:
    rx1167_cstack = rx1167_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1171_back2746
    push rx1167_bstack, $I11
    push rx1167_bstack, 0
    push rx1167_bstack, rx1167_pos
    elements $I11, rx1167_cstack
    push rx1167_bstack, $I11
    repr_get_attr_int rx1167_pos, $P11, rx1167_curclass, "$!pos"
    rx1167_cur."!cursor_pass"(rx1167_pos, "default_value", 'backtrack'=>1)
    .return (rx1167_cur)
  rx1167_restart2733:
    repr_get_attr_obj rx1167_cstack, rx1167_cur, rx1167_curclass, "$!cstack"
  rx1167_fail2734:
    unless rx1167_bstack, rx1167_done2732
    pop $I19, rx1167_bstack
    if_null rx1167_cstack, rx1167_cstack_done2737
    unless rx1167_cstack, rx1167_cstack_done2737
    dec $I19
    set $P11, rx1167_cstack[$I19]
  rx1167_cstack_done2737:
    pop rx1167_rep, rx1167_bstack
    pop rx1167_pos, rx1167_bstack
    pop $I19, rx1167_bstack
    lt rx1167_pos, -1, rx1167_done2732
    lt rx1167_pos, 0, rx1167_fail2734
    eq $I19, 0, rx1167_fail2734
    nqp_islist $I20, rx1167_cstack
    unless $I20, rx1167_jump2735
    elements $I18, rx1167_bstack
    le $I18, 0, rx1167_cut2736
    dec $I18
    set $I18, rx1167_bstack[$I18]
  rx1167_cut2736:
    assign rx1167_cstack, $I18
  rx1167_jump2735:
    jump $I19
  rx1167_done2732:
    rx1167_cur."!cursor_fail"()
    .return (rx1167_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_139_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1190
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1172_start
    .local string rx1172_tgt
    .local int rx1172_pos
    .local int rx1172_off
    .local int rx1172_eos
    .local int rx1172_rep
    .local pmc rx1172_cur
    .local pmc rx1172_curclass
    .local pmc rx1172_bstack
    .local pmc rx1172_cstack
    rx1172_start = self."!cursor_start_all"()
    set rx1172_cur, rx1172_start[0]
    set rx1172_tgt, rx1172_start[1]
    set rx1172_pos, rx1172_start[2]
    set rx1172_curclass, rx1172_start[3]
    set rx1172_bstack, rx1172_start[4]
    set $I19, rx1172_start[5]
    store_lex unicode:"$\x{a2}", rx1172_cur
    length rx1172_eos, rx1172_tgt
    eq $I19, 1, rx1172_restart2749
    gt rx1172_pos, rx1172_eos, rx1172_fail2750
    repr_get_attr_int $I11, self, rx1172_curclass, "$!from"
    ne $I11, -1, rxscan1173_done2756
    goto rxscan1173_scan2755
  rxscan1173_loop2754:
    inc rx1172_pos
    gt rx1172_pos, rx1172_eos, rx1172_fail2750
    repr_bind_attr_int rx1172_cur, rx1172_curclass, "$!from", rx1172_pos
  rxscan1173_scan2755:
    nqp_rxmark rx1172_bstack, rxscan1173_loop2754, rx1172_pos, 0
  rxscan1173_done2756:
    repr_bind_attr_int rx1172_cur, rx1172_curclass, "$!pos", rx1172_pos
    $P11 = rx1172_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1172_curclass, "$!pos"
    lt $I11, 0, rx1172_fail2750
    nqp_rxmark rx1172_bstack, rxsubrule1174_pass2757, -1, 0
  rxsubrule1174_pass2757:
    rx1172_cstack = rx1172_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1172_pos, $P11, rx1172_curclass, "$!pos"
    rx1172_cur."!cursor_pass"(rx1172_pos, "trait", 'backtrack'=>1)
    .return (rx1172_cur)
  rx1172_restart2749:
    repr_get_attr_obj rx1172_cstack, rx1172_cur, rx1172_curclass, "$!cstack"
  rx1172_fail2750:
    unless rx1172_bstack, rx1172_done2748
    pop $I19, rx1172_bstack
    if_null rx1172_cstack, rx1172_cstack_done2753
    unless rx1172_cstack, rx1172_cstack_done2753
    dec $I19
    set $P11, rx1172_cstack[$I19]
  rx1172_cstack_done2753:
    pop rx1172_rep, rx1172_bstack
    pop rx1172_pos, rx1172_bstack
    pop $I19, rx1172_bstack
    lt rx1172_pos, -1, rx1172_done2748
    lt rx1172_pos, 0, rx1172_fail2750
    eq $I19, 0, rx1172_fail2750
    nqp_islist $I20, rx1172_cstack
    unless $I20, rx1172_jump2751
    elements $I18, rx1172_bstack
    le $I18, 0, rx1172_cut2752
    dec $I18
    set $I18, rx1172_bstack[$I18]
  rx1172_cut2752:
    assign rx1172_cstack, $I18
  rx1172_jump2751:
    jump $I19
  rx1172_done2748:
    rx1172_cur."!cursor_fail"()
    .return (rx1172_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_140_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1192
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_141_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1193
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1175_start
    .local string rx1175_tgt
    .local int rx1175_pos
    .local int rx1175_off
    .local int rx1175_eos
    .local int rx1175_rep
    .local pmc rx1175_cur
    .local pmc rx1175_curclass
    .local pmc rx1175_bstack
    .local pmc rx1175_cstack
    rx1175_start = self."!cursor_start_all"()
    set rx1175_cur, rx1175_start[0]
    set rx1175_tgt, rx1175_start[1]
    set rx1175_pos, rx1175_start[2]
    set rx1175_curclass, rx1175_start[3]
    set rx1175_bstack, rx1175_start[4]
    set $I19, rx1175_start[5]
    store_lex unicode:"$\x{a2}", rx1175_cur
    length rx1175_eos, rx1175_tgt
    eq $I19, 1, rx1175_restart2760
    gt rx1175_pos, rx1175_eos, rx1175_fail2761
    repr_get_attr_int $I11, self, rx1175_curclass, "$!from"
    ne $I11, -1, rxscan1176_done2767
    goto rxscan1176_scan2766
  rxscan1176_loop2765:
    inc rx1175_pos
    gt rx1175_pos, rx1175_eos, rx1175_fail2761
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!from", rx1175_pos
  rxscan1176_scan2766:
    nqp_rxmark rx1175_bstack, rxscan1176_loop2765, rx1175_pos, 0
  rxscan1176_done2767:
    nqp_rxmark rx1175_bstack, rxcap1177_fail2769, rx1175_pos, 0
    add $I11, rx1175_pos, 2
    gt $I11, rx1175_eos, rx1175_fail2761
    substr $S10, rx1175_tgt, rx1175_pos, 2
    ne $S10, ucs4:"is", rx1175_fail2761
    add rx1175_pos, 2
    nqp_rxpeek $I19, rx1175_bstack, rxcap1177_fail2769
    inc $I19
    set $I11, rx1175_bstack[$I19]
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!pos", rx1175_pos
    $P11 = rx1175_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1175_pos)
    rx1175_cstack = rx1175_cur."!cursor_capture"($P11, "sym")
    goto rxcap1177_done2768
  rxcap1177_fail2769:
    goto rx1175_fail2761
  rxcap1177_done2768:
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!pos", rx1175_pos
    $P11 = rx1175_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
    goto rxsubrule1178_pass2770
  rxsubrule1178_back2771:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
  rxsubrule1178_pass2770:
    rx1175_cstack = rx1175_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1178_back2771
    push rx1175_bstack, $I11
    push rx1175_bstack, 0
    push rx1175_bstack, rx1175_pos
    elements $I11, rx1175_cstack
    push rx1175_bstack, $I11
    repr_get_attr_int rx1175_pos, $P11, rx1175_curclass, "$!pos"
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!pos", rx1175_pos
    $P11 = rx1175_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
    nqp_rxmark rx1175_bstack, rxsubrule1179_pass2772, -1, 0
  rxsubrule1179_pass2772:
    rx1175_cstack = rx1175_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1175_pos, $P11, rx1175_curclass, "$!pos"
    nqp_rxmark rx1175_bstack, rxquantg1180_done2774, rx1175_pos, 0
  rxquantg1180_loop2773:
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!pos", rx1175_pos
    $P11 = rx1175_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
    goto rxsubrule1181_pass2775
  rxsubrule1181_back2776:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
  rxsubrule1181_pass2775:
    rx1175_cstack = rx1175_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1181_back2776
    push rx1175_bstack, $I11
    push rx1175_bstack, 0
    push rx1175_bstack, rx1175_pos
    elements $I11, rx1175_cstack
    push rx1175_bstack, $I11
    repr_get_attr_int rx1175_pos, $P11, rx1175_curclass, "$!pos"
  rxquantg1180_done2774:
    repr_bind_attr_int rx1175_cur, rx1175_curclass, "$!pos", rx1175_pos
    $P11 = rx1175_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
    goto rxsubrule1182_pass2777
  rxsubrule1182_back2778:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1175_curclass, "$!pos"
    lt $I11, 0, rx1175_fail2761
  rxsubrule1182_pass2777:
    rx1175_cstack = rx1175_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1182_back2778
    push rx1175_bstack, $I11
    push rx1175_bstack, 0
    push rx1175_bstack, rx1175_pos
    elements $I11, rx1175_cstack
    push rx1175_bstack, $I11
    repr_get_attr_int rx1175_pos, $P11, rx1175_curclass, "$!pos"
    rx1175_cur."!cursor_pass"(rx1175_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1175_cur)
  rx1175_restart2760:
    repr_get_attr_obj rx1175_cstack, rx1175_cur, rx1175_curclass, "$!cstack"
  rx1175_fail2761:
    unless rx1175_bstack, rx1175_done2759
    pop $I19, rx1175_bstack
    if_null rx1175_cstack, rx1175_cstack_done2764
    unless rx1175_cstack, rx1175_cstack_done2764
    dec $I19
    set $P11, rx1175_cstack[$I19]
  rx1175_cstack_done2764:
    pop rx1175_rep, rx1175_bstack
    pop rx1175_pos, rx1175_bstack
    pop $I19, rx1175_bstack
    lt rx1175_pos, -1, rx1175_done2759
    lt rx1175_pos, 0, rx1175_fail2761
    eq $I19, 0, rx1175_fail2761
    nqp_islist $I20, rx1175_cstack
    unless $I20, rx1175_jump2762
    elements $I18, rx1175_bstack
    le $I18, 0, rx1175_cut2763
    dec $I18
    set $I18, rx1175_bstack[$I18]
  rx1175_cut2763:
    assign rx1175_cstack, $I18
  rx1175_jump2762:
    jump $I19
  rx1175_done2759:
    rx1175_cur."!cursor_fail"()
    .return (rx1175_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_142_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1195
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_422_1382484127.52628' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_167 
    .local pmc pkg_viv_tmp_26 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1183_start
    .local string rx1183_tgt
    .local int rx1183_pos
    .local int rx1183_off
    .local int rx1183_eos
    .local int rx1183_rep
    .local pmc rx1183_cur
    .local pmc rx1183_curclass
    .local pmc rx1183_bstack
    .local pmc rx1183_cstack
    rx1183_start = self."!cursor_start_all"()
    set rx1183_cur, rx1183_start[0]
    set rx1183_tgt, rx1183_start[1]
    set rx1183_pos, rx1183_start[2]
    set rx1183_curclass, rx1183_start[3]
    set rx1183_bstack, rx1183_start[4]
    set $I19, rx1183_start[5]
    store_lex unicode:"$\x{a2}", rx1183_cur
    length rx1183_eos, rx1183_tgt
    eq $I19, 1, rx1183_restart2781
    gt rx1183_pos, rx1183_eos, rx1183_fail2782
    repr_get_attr_int $I11, self, rx1183_curclass, "$!from"
    ne $I11, -1, rxscan1184_done2788
    goto rxscan1184_scan2787
  rxscan1184_loop2786:
    inc rx1183_pos
    gt rx1183_pos, rx1183_eos, rx1183_fail2782
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!from", rx1183_pos
  rxscan1184_scan2787:
    nqp_rxmark rx1183_bstack, rxscan1184_loop2786, rx1183_pos, 0
  rxscan1184_done2788:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1185_02790
    nqp_push_label $P11, alt1185_12843
    nqp_rxmark rx1183_bstack, alt1185_end2789, -1, 0
    rx1183_cur."!alt"(rx1183_pos, "alt_nfa__32_1382484131.35951", $P11)
    goto rx1183_fail2782
  alt1185_02790:
    nqp_rxmark rx1183_bstack, rxcap1186_fail2792, rx1183_pos, 0
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"proto", rx1183_fail2782
    add rx1183_pos, 5
    nqp_rxpeek $I19, rx1183_bstack, rxcap1186_fail2792
    inc $I19
    set $I11, rx1183_bstack[$I19]
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1183_pos)
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "proto")
    goto rxcap1186_done2791
  rxcap1186_fail2792:
    goto rx1183_fail2782
  rxcap1186_done2791:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1187_pass2793
  rxsubrule1187_back2794:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1187_pass2793:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1187_back2794
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1188_02796
    nqp_push_label $P11, alt1188_12797
    nqp_push_label $P11, alt1188_22798
    nqp_rxmark rx1183_bstack, alt1188_end2795, -1, 0
    rx1183_cur."!alt"(rx1183_pos, "alt_nfa__30_1382484131.35743", $P11)
    goto rx1183_fail2782
  alt1188_02796:
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"regex", rx1183_fail2782
    add rx1183_pos, 5
    goto alt1188_end2795
  alt1188_12797:
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"token", rx1183_fail2782
    add rx1183_pos, 5
    goto alt1188_end2795
  alt1188_22798:
    add $I11, rx1183_pos, 4
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 4
    ne $S10, ucs4:"rule", rx1183_fail2782
    add rx1183_pos, 4
    goto alt1188_end2795
  alt1188_end2795:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1189_pass2799
  rxsubrule1189_back2800:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1189_pass2799:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1189_back2800
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1190_02802:
    nqp_rxmark rx1183_bstack, alt1190_12811, rx1183_pos, 0
    add $I11, rx1183_pos, 3
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 3
    ne $S10, ucs4:"::(", rx1183_fail2782
    add rx1183_pos, 3
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1191_pass2803
  rxsubrule1191_back2804:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1191_pass2803:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1191_back2804
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1192_pass2805
  rxsubrule1192_back2806:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1192_pass2805:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1192_back2806
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1193_pass2807
  rxsubrule1193_back2808:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1193_pass2807:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1193_back2808
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:")", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1194_pass2809
  rxsubrule1194_back2810:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1194_pass2809:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1194_back2810
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1190_end2801
  alt1190_12811:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1195_pass2812
  rxsubrule1195_back2813:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1195_pass2812:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1195_back2813
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1196_pass2814
  rxsubrule1196_back2815:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1196_pass2814:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1196_back2815
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1190_end2801:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1197_pass2816
  rxsubrule1197_back2817:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1197_pass2816:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1197_back2817
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1198_02819:
    nqp_rxmark rx1183_bstack, alt1198_12822, rx1183_pos, 0
    add $I11, rx1183_pos, 3
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 3
    ne $S10, ucs4:"{*}", rx1183_fail2782
    add rx1183_pos, 3
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1199_pass2820
  rxsubrule1199_back2821:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1199_pass2820:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1199_back2821
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1198_end2818
  alt1198_12822:
    nqp_rxmark rx1183_bstack, alt1198_22829, rx1183_pos, 0
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"{", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1200_pass2823
  rxsubrule1200_back2824:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1200_pass2823:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1200_back2824
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"<...>", rx1183_fail2782
    add rx1183_pos, 5
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1201_pass2825
  rxsubrule1201_back2826:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1201_pass2825:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1201_back2826
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"}", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1202_pass2827
  rxsubrule1202_back2828:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1202_pass2827:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1202_back2828
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1198_end2818
  alt1198_22829:
    nqp_rxmark rx1183_bstack, alt1198_32836, rx1183_pos, 0
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"{", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1203_pass2830
  rxsubrule1203_back2831:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1203_pass2830:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1203_back2831
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 3
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 3
    ne $S10, ucs4:"<*>", rx1183_fail2782
    add rx1183_pos, 3
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1204_pass2832
  rxsubrule1204_back2833:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1204_pass2832:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1204_back2833
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"}", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1205_pass2834
  rxsubrule1205_back2835:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1205_pass2834:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1205_back2835
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1198_end2818
  alt1198_32836:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1206_pass2837
  rxsubrule1206_back2838:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1206_pass2837:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1206_back2838
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1207_pass2839
  rxsubrule1207_back2840:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1207_pass2839:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1207_back2840
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1198_end2818:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1208_pass2841
  rxsubrule1208_back2842:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1208_pass2841:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1208_back2842
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1185_end2789
  alt1185_12843:
    nqp_rxmark rx1183_bstack, rxcap1209_fail2845, rx1183_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1210_02847
    nqp_push_label $P11, alt1210_12848
    nqp_push_label $P11, alt1210_22849
    nqp_rxmark rx1183_bstack, alt1210_end2846, -1, 0
    rx1183_cur."!alt"(rx1183_pos, "alt_nfa__31_1382484131.3587", $P11)
    goto rx1183_fail2782
  alt1210_02847:
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"regex", rx1183_fail2782
    add rx1183_pos, 5
    goto alt1210_end2846
  alt1210_12848:
    add $I11, rx1183_pos, 5
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 5
    ne $S10, ucs4:"token", rx1183_fail2782
    add rx1183_pos, 5
    goto alt1210_end2846
  alt1210_22849:
    add $I11, rx1183_pos, 4
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 4
    ne $S10, ucs4:"rule", rx1183_fail2782
    add rx1183_pos, 4
    goto alt1210_end2846
  alt1210_end2846:
    nqp_rxcommit rx1183_bstack, alt1210_end2846
    nqp_rxpeek $I19, rx1183_bstack, rxcap1209_fail2845
    inc $I19
    set $I11, rx1183_bstack[$I19]
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1183_pos)
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "sym")
    goto rxcap1209_done2844
  rxcap1209_fail2845:
    goto rx1183_fail2782
  rxcap1209_done2844:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1211_pass2850
  rxsubrule1211_back2851:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1211_pass2850:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1211_back2851
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1212_02853:
    nqp_rxmark rx1183_bstack, alt1212_12862, rx1183_pos, 0
    add $I11, rx1183_pos, 3
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 3
    ne $S10, ucs4:"::(", rx1183_fail2782
    add rx1183_pos, 3
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1213_pass2854
  rxsubrule1213_back2855:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1213_pass2854:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1213_back2855
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1214_pass2856
  rxsubrule1214_back2857:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1214_pass2856:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "latename=variable")
    set_addr $I11, rxsubrule1214_back2857
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1215_pass2858
  rxsubrule1215_back2859:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1215_pass2858:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1215_back2859
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:")", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1216_pass2860
  rxsubrule1216_back2861:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1216_pass2860:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1216_back2861
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1212_end2852
  alt1212_12862:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1217_pass2863
  rxsubrule1217_back2864:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1217_pass2863:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1217_back2864
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1218_pass2865
  rxsubrule1218_back2866:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1218_pass2865:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1218_back2866
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1212_end2852:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1219_pass2867
  rxsubrule1219_back2868:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1219_pass2867:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1219_back2868
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1220_pass2869
  rxsubrule1220_back2870:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1220_pass2869:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1220_back2870
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1221_pass2871
  rxsubrule1221_back2872:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1221_pass2871:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1221_back2872
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    nqp_rxmark rx1183_bstack, rxquantg1222_done2874, rx1183_pos, 0
  rxquantg1222_loop2873:
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"(", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1223_pass2875
  rxsubrule1223_back2876:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1223_pass2875:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1223_back2876
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1224_pass2877
  rxsubrule1224_back2878:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1224_pass2877:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "signature")
    set_addr $I11, rxsubrule1224_back2878
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1225_pass2879
  rxsubrule1225_back2880:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1225_pass2879:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1225_back2880
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1226_02882:
    nqp_rxmark rx1183_bstack, alt1226_12885, rx1183_pos, 0
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:")", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1227_pass2883
  rxsubrule1227_back2884:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1227_pass2883:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1227_back2884
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1226_end2881
  alt1226_12885:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1228_pass2886
  rxsubrule1228_back2887:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1228_pass2886:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1228_back2887
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
  alt1226_end2881:
  rxquantg1222_done2874:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1229_pass2888
  rxsubrule1229_back2889:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1229_pass2888:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1229_back2889
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    store_lex unicode:"$\x{a2}", rx1183_cur
    unless_null $P101, fallback2890
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_167, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_167
    unless $I5001 goto if1230_else2891 
    set $P5004, fb_tmp_167["%RX"]
    set $P5006, $P5004
    goto if1230_end2892
  if1230_else2891:
    null $P5005
    set $P5006, $P5005
  if1230_end2892:
    unless_null $P5006, vivi_12312893
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_12312893:
    unless_null $P5006, vivi_12322894
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12322894:
    set $P101, $P5006
  fallback2890:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    store_lex unicode:"$\x{a2}", rx1183_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_422_1382484127.52628' 
    capture_lex $P5010
    $P5011 = $P5010()
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"{", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    nqp_rxmark rx1183_bstack, rxsubrule1270_pass2961, -1, 0
  rxsubrule1270_pass2961:
    rx1183_cstack = rx1183_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    add $I11, rx1183_pos, 1
    gt $I11, rx1183_eos, rx1183_fail2782
    substr $S10, rx1183_tgt, rx1183_pos, 1
    ne $S10, ucs4:"}", rx1183_fail2782
    add rx1183_pos, 1
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1271_pass2962
  rxsubrule1271_back2963:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1271_pass2962:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1271_back2963
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    goto alt1185_end2789
  alt1185_end2789:
    repr_bind_attr_int rx1183_cur, rx1183_curclass, "$!pos", rx1183_pos
    $P11 = rx1183_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
    goto rxsubrule1272_pass2964
  rxsubrule1272_back2965:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1183_curclass, "$!pos"
    lt $I11, 0, rx1183_fail2782
  rxsubrule1272_pass2964:
    rx1183_cstack = rx1183_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1272_back2965
    push rx1183_bstack, $I11
    push rx1183_bstack, 0
    push rx1183_bstack, rx1183_pos
    elements $I11, rx1183_cstack
    push rx1183_bstack, $I11
    repr_get_attr_int rx1183_pos, $P11, rx1183_curclass, "$!pos"
    rx1183_cur."!cursor_pass"(rx1183_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1183_cur)
  rx1183_restart2781:
    repr_get_attr_obj rx1183_cstack, rx1183_cur, rx1183_curclass, "$!cstack"
  rx1183_fail2782:
    unless rx1183_bstack, rx1183_done2780
    pop $I19, rx1183_bstack
    if_null rx1183_cstack, rx1183_cstack_done2785
    unless rx1183_cstack, rx1183_cstack_done2785
    dec $I19
    set $P11, rx1183_cstack[$I19]
  rx1183_cstack_done2785:
    pop rx1183_rep, rx1183_bstack
    pop rx1183_pos, rx1183_bstack
    pop $I19, rx1183_bstack
    lt rx1183_pos, -1, rx1183_done2780
    lt rx1183_pos, 0, rx1183_fail2782
    eq $I19, 0, rx1183_fail2782
    nqp_islist $I20, rx1183_cstack
    unless $I20, rx1183_jump2783
    elements $I18, rx1183_bstack
    le $I18, 0, rx1183_cut2784
    dec $I18
    set $I18, rx1183_bstack[$I18]
  rx1183_cut2784:
    assign rx1183_cstack, $I18
  rx1183_jump2783:
    jump $I19
  rx1183_done2780:
    rx1183_cur."!cursor_fail"()
    .return (rx1183_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1382484127.52628") :anon :lex :outer("cuid_142_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1216
    .local pmc fb_tmp_168 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_171 
    .local pmc fb_tmp_172 
    .local pmc fb_tmp_173 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_174 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_178 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc pkg_viv_tmp_31 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback2895
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_27, $P5002
    set fb_tmp_168, pkg_viv_tmp_27
    repr_defined $I5001, fb_tmp_168
    unless $I5001 goto if1233_else2896 
    set $P5004, fb_tmp_168["%RX"]
    set $P5006, $P5004
    goto if1233_end2897
  if1233_else2896:
    null $P5005
    set $P5006, $P5005
  if1233_end2897:
    unless_null $P5006, vivi_12342898
    new $P5007, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5007
    set $P5006, $P5007
  vivi_12342898:
    unless_null $P5006, vivi_12352899
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_12352899:
    set $P5001, $P5006
  fallback2895:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2902
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  fallback2902:
    set fb_tmp_169, $P5009
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if1236_else2900 
    set $P5011, fb_tmp_169["sym"]
    set $P5013, $P5011
    goto if1236_end2901
  if1236_else2900:
    null $P5012
    set $P5013, $P5012
  if1236_end2901:
    unless_null $P5013, vivi_12372903
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_12372903:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback2904
    nqp_get_sc_object $P5018, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_28, $P5017
    set fb_tmp_170, pkg_viv_tmp_28
    repr_defined $I5004, fb_tmp_170
    unless $I5004 goto if1238_else2905 
    set $P5019, fb_tmp_170["%RX"]
    set $P5021, $P5019
    goto if1238_end2906
  if1238_else2905:
    null $P5020
    set $P5021, $P5020
  if1238_end2906:
    unless_null $P5021, vivi_12392907
    new $P5022, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5022
    set $P5021, $P5022
  vivi_12392907:
    unless_null $P5021, vivi_12402908
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_12402908:
    set $P5016, $P5021
  fallback2904:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback2913
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  fallback2913:
    set fb_tmp_171, $P5024
    repr_defined $I5006, fb_tmp_171
    unless $I5006 goto if1242_else2911 
    set $P5026, fb_tmp_171["sym"]
    set $P5028, $P5026
    goto if1242_end2912
  if1242_else2911:
    null $P5027
    set $P5028, $P5027
  if1242_end2912:
    unless_null $P5028, vivi_12432914
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_12432914:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1241_end2910 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback2917
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  fallback2917:
    set fb_tmp_172, $P5030
    repr_defined $I5008, fb_tmp_172
    unless $I5008 goto if1244_else2915 
    set $P5032, fb_tmp_172["sym"]
    set $P5034, $P5032
    goto if1244_end2916
  if1244_else2915:
    null $P5033
    set $P5034, $P5033
  if1244_end2916:
    unless_null $P5034, vivi_12452918
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_12452918:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1241_end2910:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback2919
    nqp_get_sc_object $P5039, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_29, $P5038
    set fb_tmp_173, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_173
    unless $I5010 goto if1246_else2920 
    set $P5040, fb_tmp_173["%RX"]
    set $P5042, $P5040
    goto if1246_end2921
  if1246_else2920:
    null $P5041
    set $P5042, $P5041
  if1246_end2921:
    unless_null $P5042, vivi_12472922
    new $P5043, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5043
    set $P5042, $P5043
  vivi_12472922:
    unless_null $P5042, vivi_12482923
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_12482923:
    set $P5037, $P5042
  fallback2919:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback2928
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  fallback2928:
    set fb_tmp_174, $P5045
    repr_defined $I5011, fb_tmp_174
    unless $I5011 goto if1250_else2926 
    set $P5047, fb_tmp_174["deflongname"]
    set $P5049, $P5047
    goto if1250_end2927
  if1250_else2926:
    null $P5048
    set $P5049, $P5048
  if1250_end2927:
    unless_null $P5049, vivi_12512929
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_12512929:
    unless $P5049 goto if1249_else2924 
.annotate 'line', 1219
    find_lex $P5051, "$/"
    unless_null $P5051, fallback2932
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5051, $P5052
  fallback2932:
    set fb_tmp_175, $P5051
    repr_defined $I5012, fb_tmp_175
    unless $I5012 goto if1252_else2930 
    set $P5053, fb_tmp_175["deflongname"]
    set $P5055, $P5053
    goto if1252_end2931
  if1252_else2930:
    null $P5054
    set $P5055, $P5054
  if1252_end2931:
    unless_null $P5055, vivi_12532933
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5055, $P5056
  vivi_12532933:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1249_end2925
  if1249_else2924:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback2936
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5058, $P5059
  fallback2936:
    set fb_tmp_176, $P5058
    repr_defined $I5013, fb_tmp_176
    unless $I5013 goto if1254_else2934 
    set $P5060, fb_tmp_176["latename"]
    set $P5062, $P5060
    goto if1254_end2935
  if1254_else2934:
    null $P5061
    set $P5062, $P5061
  if1254_end2935:
    unless_null $P5062, vivi_12552937
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5062, $P5063
  vivi_12552937:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1249_end2925:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2938
    nqp_get_sc_object $P5068, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_30, $P5067
    set fb_tmp_177, pkg_viv_tmp_30
    repr_defined $I5014, fb_tmp_177
    unless $I5014 goto if1256_else2939 
    set $P5069, fb_tmp_177["%RX"]
    set $P5071, $P5069
    goto if1256_end2940
  if1256_else2939:
    null $P5070
    set $P5071, $P5070
  if1256_end2940:
    unless_null $P5071, vivi_12572941
    new $P5072, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5072
    set $P5071, $P5072
  vivi_12572941:
    unless_null $P5071, vivi_12582942
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_12582942:
    set $P5066, $P5071
  fallback2938:
.annotate 'line', 1220
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback2943
    nqp_get_sc_object $P5076, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5075, $P5076
    set fb_tmp_178, $P5075
    repr_defined $I5015, fb_tmp_178
    unless $I5015 goto if1259_else2944 
    set $P5077, fb_tmp_178["$W"]
    set $P5079, $P5077
    goto if1259_end2945
  if1259_else2944:
    null $P5078
    set $P5079, $P5078
  if1259_end2945:
    unless_null $P5079, vivi_12602946
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5079, $P5080
  vivi_12602946:
    unless_null $P5079, vivi_12612947
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_12612947:
    set $P5074, $P5079
  fallback2943:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback2948
    nqp_get_sc_object $P5084, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5083, $P5084
    set fb_tmp_179, $P5083
    repr_defined $I5016, fb_tmp_179
    unless $I5016 goto if1262_else2949 
    set $P5085, fb_tmp_179["$W"]
    set $P5087, $P5085
    goto if1262_end2950
  if1262_else2949:
    null $P5086
    set $P5087, $P5086
  if1262_end2950:
    unless_null $P5087, vivi_12632951
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5087, $P5088
  vivi_12632951:
    unless_null $P5087, vivi_12642952
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_12642952:
    set $P5082, $P5087
  fallback2948:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback2955
    nqp_get_sc_object $P5093, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_31, $P5092
    set fb_tmp_181, pkg_viv_tmp_31
    repr_defined $I5018, fb_tmp_181
    unless $I5018 goto if1266_else2956 
    set $P5094, fb_tmp_181["%RX"]
    set $P5096, $P5094
    goto if1266_end2957
  if1266_else2956:
    null $P5095
    set $P5096, $P5095
  if1266_end2957:
    unless_null $P5096, vivi_12672958
    new $P5097, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5097
    set $P5096, $P5097
  vivi_12672958:
    unless_null $P5096, vivi_12682959
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_12682959:
    set $P5091, $P5096
  fallback2955:
    set fb_tmp_180, $P5091
    repr_defined $I5017, fb_tmp_180
    unless $I5017 goto if1265_else2953 
    set $P5099, fb_tmp_180["name"]
    set $P5101, $P5099
    goto if1265_end2954
  if1265_else2953:
    null $P5100
    set $P5101, $P5100
  if1265_end2954:
    unless_null $P5101, vivi_12692960
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5101, $P5102
  vivi_12692960:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_143_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1226
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1273_start
    .local string rx1273_tgt
    .local int rx1273_pos
    .local int rx1273_off
    .local int rx1273_eos
    .local int rx1273_rep
    .local pmc rx1273_cur
    .local pmc rx1273_curclass
    .local pmc rx1273_bstack
    .local pmc rx1273_cstack
    rx1273_start = self."!cursor_start_all"()
    set rx1273_cur, rx1273_start[0]
    set rx1273_tgt, rx1273_start[1]
    set rx1273_pos, rx1273_start[2]
    set rx1273_curclass, rx1273_start[3]
    set rx1273_bstack, rx1273_start[4]
    set $I19, rx1273_start[5]
    store_lex unicode:"$\x{a2}", rx1273_cur
    length rx1273_eos, rx1273_tgt
    eq $I19, 1, rx1273_restart2968
    gt rx1273_pos, rx1273_eos, rx1273_fail2969
    repr_get_attr_int $I11, self, rx1273_curclass, "$!from"
    ne $I11, -1, rxscan1274_done2975
    goto rxscan1274_scan2974
  rxscan1274_loop2973:
    inc rx1273_pos
    index rx1273_pos, rx1273_tgt, ucs4:".", rx1273_pos
    eq rx1273_pos, -1, rx1273_fail2969
    gt rx1273_pos, rx1273_eos, rx1273_fail2969
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!from", rx1273_pos
  rxscan1274_scan2974:
    nqp_rxmark rx1273_bstack, rxscan1274_loop2973, rx1273_pos, 0
  rxscan1274_done2975:
    add $I11, rx1273_pos, 1
    gt $I11, rx1273_eos, rx1273_fail2969
    substr $S10, rx1273_tgt, rx1273_pos, 1
    ne $S10, ucs4:".", rx1273_fail2969
    add rx1273_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1275_02977
    nqp_push_label $P11, alt1275_12979
    nqp_rxmark rx1273_bstack, alt1275_end2976, -1, 0
    rx1273_cur."!alt"(rx1273_pos, "alt_nfa__33_1382484131.38603", $P11)
    goto rx1273_fail2969
  alt1275_02977:
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!pos", rx1273_pos
    $P11 = rx1273_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1273_curclass, "$!pos"
    lt $I11, 0, rx1273_fail2969
    nqp_rxmark rx1273_bstack, rxsubrule1276_pass2978, -1, 0
  rxsubrule1276_pass2978:
    rx1273_cstack = rx1273_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1273_pos, $P11, rx1273_curclass, "$!pos"
    goto alt1275_end2976
  alt1275_12979:
    ge rx1273_pos, rx1273_eos, rx1273_fail2969
    substr $S11, rx1273_tgt, rx1273_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1273_fail2969
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!pos", rx1273_pos
    $P11 = rx1273_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1273_curclass, "$!pos"
    lt $I11, 0, rx1273_fail2969
    nqp_rxmark rx1273_bstack, rxsubrule1277_pass2980, -1, 0
  rxsubrule1277_pass2980:
    rx1273_cstack = rx1273_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1273_pos, $P11, rx1273_curclass, "$!pos"
  alt1278_02982:
    nqp_rxmark rx1273_bstack, alt1278_12983, rx1273_pos, 0
    ge rx1273_pos, rx1273_eos, rx1273_fail2969
    substr $S11, rx1273_tgt, rx1273_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1273_fail2969
    goto alt1278_end2981
  alt1278_12983:
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!pos", rx1273_pos
    $P11 = rx1273_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1273_curclass, "$!pos"
    lt $I11, 0, rx1273_fail2969
    repr_get_attr_int rx1273_pos, $P11, rx1273_curclass, "$!pos"
  alt1278_end2981:
    goto alt1275_end2976
  alt1275_end2976:
    nqp_rxcommit rx1273_bstack, alt1275_end2976
    nqp_rxmark rx1273_bstack, rxquantr1280_done2986, rx1273_pos, 0
  rxquantr1280_loop2985:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1281_02988
    nqp_push_label $P11, alt1281_12990
    nqp_rxmark rx1273_bstack, alt1281_end2987, -1, 0
    rx1273_cur."!alt"(rx1273_pos, "alt_nfa__34_1382484131.38636", $P11)
    goto rx1273_fail2969
  alt1281_02988:
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!pos", rx1273_pos
    $P11 = rx1273_cur."args"()
    repr_get_attr_int $I11, $P11, rx1273_curclass, "$!pos"
    lt $I11, 0, rx1273_fail2969
    nqp_rxmark rx1273_bstack, rxsubrule1282_pass2989, -1, 0
  rxsubrule1282_pass2989:
    rx1273_cstack = rx1273_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1273_pos, $P11, rx1273_curclass, "$!pos"
    goto alt1281_end2987
  alt1281_12990:
    add $I11, rx1273_pos, 1
    gt $I11, rx1273_eos, rx1273_fail2969
    substr $S10, rx1273_tgt, rx1273_pos, 1
    ne $S10, ucs4:":", rx1273_fail2969
    add rx1273_pos, 1
    ge rx1273_pos, rx1273_eos, rx1273_fail2969
    is_cclass $I11, .CCLASS_WHITESPACE, rx1273_tgt, rx1273_pos
    unless $I11, rx1273_fail2969
    add rx1273_pos, 1
    repr_bind_attr_int rx1273_cur, rx1273_curclass, "$!pos", rx1273_pos
    $P11 = rx1273_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1273_curclass, "$!pos"
    lt $I11, 0, rx1273_fail2969
    nqp_rxmark rx1273_bstack, rxsubrule1283_pass2991, -1, 0
  rxsubrule1283_pass2991:
    rx1273_cstack = rx1273_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1273_pos, $P11, rx1273_curclass, "$!pos"
    goto alt1281_end2987
  alt1281_end2987:
    nqp_rxpeek $I19, rx1273_bstack, rxquantr1280_done2986
    inc $I19
    inc $I19
    set rx1273_rep, rx1273_bstack[$I19]
    nqp_rxcommit rx1273_bstack, rxquantr1280_done2986
    inc rx1273_rep
  rxquantr1280_done2986:
    rx1273_cur."!cursor_pass"(rx1273_pos, "dotty", 'backtrack'=>1)
    .return (rx1273_cur)
  rx1273_restart2968:
    repr_get_attr_obj rx1273_cstack, rx1273_cur, rx1273_curclass, "$!cstack"
  rx1273_fail2969:
    unless rx1273_bstack, rx1273_done2967
    pop $I19, rx1273_bstack
    if_null rx1273_cstack, rx1273_cstack_done2972
    unless rx1273_cstack, rx1273_cstack_done2972
    dec $I19
    set $P11, rx1273_cstack[$I19]
  rx1273_cstack_done2972:
    pop rx1273_rep, rx1273_bstack
    pop rx1273_pos, rx1273_bstack
    pop $I19, rx1273_bstack
    lt rx1273_pos, -1, rx1273_done2967
    lt rx1273_pos, 0, rx1273_fail2969
    eq $I19, 0, rx1273_fail2969
    nqp_islist $I20, rx1273_cstack
    unless $I20, rx1273_jump2970
    elements $I18, rx1273_bstack
    le $I18, 0, rx1273_cut2971
    dec $I18
    set $I18, rx1273_bstack[$I18]
  rx1273_cut2971:
    assign rx1273_cstack, $I18
  rx1273_jump2970:
    jump $I19
  rx1273_done2967:
    rx1273_cur."!cursor_fail"()
    .return (rx1273_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_144_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1239
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1284_start
    .local string rx1284_tgt
    .local int rx1284_pos
    .local int rx1284_off
    .local int rx1284_eos
    .local int rx1284_rep
    .local pmc rx1284_cur
    .local pmc rx1284_curclass
    .local pmc rx1284_bstack
    .local pmc rx1284_cstack
    rx1284_start = self."!cursor_start_all"()
    set rx1284_cur, rx1284_start[0]
    set rx1284_tgt, rx1284_start[1]
    set rx1284_pos, rx1284_start[2]
    set rx1284_curclass, rx1284_start[3]
    set rx1284_bstack, rx1284_start[4]
    set $I19, rx1284_start[5]
    store_lex unicode:"$\x{a2}", rx1284_cur
    length rx1284_eos, rx1284_tgt
    eq $I19, 1, rx1284_restart2994
    gt rx1284_pos, rx1284_eos, rx1284_fail2995
    repr_get_attr_int $I11, self, rx1284_curclass, "$!from"
    ne $I11, -1, rxscan1285_done3001
    goto rxscan1285_scan3000
  rxscan1285_loop2999:
    inc rx1284_pos
    gt rx1284_pos, rx1284_eos, rx1284_fail2995
    repr_bind_attr_int rx1284_cur, rx1284_curclass, "$!from", rx1284_pos
  rxscan1285_scan3000:
    nqp_rxmark rx1284_bstack, rxscan1285_loop2999, rx1284_pos, 0
  rxscan1285_done3001:
    nqp_rxmark rx1284_bstack, rxcap1286_fail3003, rx1284_pos, 0
    add $I11, rx1284_pos, 4
    gt $I11, rx1284_eos, rx1284_fail2995
    substr $S10, rx1284_tgt, rx1284_pos, 4
    ne $S10, ucs4:"self", rx1284_fail2995
    add rx1284_pos, 4
    nqp_rxpeek $I19, rx1284_bstack, rxcap1286_fail3003
    inc $I19
    set $I11, rx1284_bstack[$I19]
    repr_bind_attr_int rx1284_cur, rx1284_curclass, "$!pos", rx1284_pos
    $P11 = rx1284_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1284_pos)
    rx1284_cstack = rx1284_cur."!cursor_capture"($P11, "sym")
    goto rxcap1286_done3002
  rxcap1286_fail3003:
    goto rx1284_fail2995
  rxcap1286_done3002:
    le rx1284_pos, 0, rx1284_fail2995
    is_cclass $I11, .CCLASS_WORD, rx1284_tgt, rx1284_pos
    if $I11, rx1284_fail2995
    sub $I11, rx1284_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1284_tgt, $I11
    unless $I11, rx1284_fail2995
    rx1284_cur."!cursor_pass"(rx1284_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1284_cur)
  rx1284_restart2994:
    repr_get_attr_obj rx1284_cstack, rx1284_cur, rx1284_curclass, "$!cstack"
  rx1284_fail2995:
    unless rx1284_bstack, rx1284_done2993
    pop $I19, rx1284_bstack
    if_null rx1284_cstack, rx1284_cstack_done2998
    unless rx1284_cstack, rx1284_cstack_done2998
    dec $I19
    set $P11, rx1284_cstack[$I19]
  rx1284_cstack_done2998:
    pop rx1284_rep, rx1284_bstack
    pop rx1284_pos, rx1284_bstack
    pop $I19, rx1284_bstack
    lt rx1284_pos, -1, rx1284_done2993
    lt rx1284_pos, 0, rx1284_fail2995
    eq $I19, 0, rx1284_fail2995
    nqp_islist $I20, rx1284_cstack
    unless $I20, rx1284_jump2996
    elements $I18, rx1284_bstack
    le $I18, 0, rx1284_cut2997
    dec $I18
    set $I18, rx1284_bstack[$I18]
  rx1284_cut2997:
    assign rx1284_cstack, $I18
  rx1284_jump2996:
    jump $I19
  rx1284_done2993:
    rx1284_cur."!cursor_fail"()
    .return (rx1284_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_145_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1241
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1288_start
    .local string rx1288_tgt
    .local int rx1288_pos
    .local int rx1288_off
    .local int rx1288_eos
    .local int rx1288_rep
    .local pmc rx1288_cur
    .local pmc rx1288_curclass
    .local pmc rx1288_bstack
    .local pmc rx1288_cstack
    rx1288_start = self."!cursor_start_all"()
    set rx1288_cur, rx1288_start[0]
    set rx1288_tgt, rx1288_start[1]
    set rx1288_pos, rx1288_start[2]
    set rx1288_curclass, rx1288_start[3]
    set rx1288_bstack, rx1288_start[4]
    set $I19, rx1288_start[5]
    store_lex unicode:"$\x{a2}", rx1288_cur
    length rx1288_eos, rx1288_tgt
    eq $I19, 1, rx1288_restart3007
    gt rx1288_pos, rx1288_eos, rx1288_fail3008
    repr_get_attr_int $I11, self, rx1288_curclass, "$!from"
    ne $I11, -1, rxscan1289_done3014
    goto rxscan1289_scan3013
  rxscan1289_loop3012:
    inc rx1288_pos
    gt rx1288_pos, rx1288_eos, rx1288_fail3008
    repr_bind_attr_int rx1288_cur, rx1288_curclass, "$!from", rx1288_pos
  rxscan1289_scan3013:
    nqp_rxmark rx1288_bstack, rxscan1289_loop3012, rx1288_pos, 0
  rxscan1289_done3014:
    repr_bind_attr_int rx1288_cur, rx1288_curclass, "$!pos", rx1288_pos
    $P11 = rx1288_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1288_curclass, "$!pos"
    lt $I11, 0, rx1288_fail3008
    nqp_rxmark rx1288_bstack, rxsubrule1290_pass3015, -1, 0
  rxsubrule1290_pass3015:
    rx1288_cstack = rx1288_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1288_pos, $P11, rx1288_curclass, "$!pos"
    repr_bind_attr_int rx1288_cur, rx1288_curclass, "$!pos", rx1288_pos
    $P11 = rx1288_cur."args"()
    repr_get_attr_int $I11, $P11, rx1288_curclass, "$!pos"
    lt $I11, 0, rx1288_fail3008
    nqp_rxmark rx1288_bstack, rxsubrule1291_pass3016, -1, 0
  rxsubrule1291_pass3016:
    rx1288_cstack = rx1288_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1288_pos, $P11, rx1288_curclass, "$!pos"
    rx1288_cur."!cursor_pass"(rx1288_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1288_cur)
  rx1288_restart3007:
    repr_get_attr_obj rx1288_cstack, rx1288_cur, rx1288_curclass, "$!cstack"
  rx1288_fail3008:
    unless rx1288_bstack, rx1288_done3006
    pop $I19, rx1288_bstack
    if_null rx1288_cstack, rx1288_cstack_done3011
    unless rx1288_cstack, rx1288_cstack_done3011
    dec $I19
    set $P11, rx1288_cstack[$I19]
  rx1288_cstack_done3011:
    pop rx1288_rep, rx1288_bstack
    pop rx1288_pos, rx1288_bstack
    pop $I19, rx1288_bstack
    lt rx1288_pos, -1, rx1288_done3006
    lt rx1288_pos, 0, rx1288_fail3008
    eq $I19, 0, rx1288_fail3008
    nqp_islist $I20, rx1288_cstack
    unless $I20, rx1288_jump3009
    elements $I18, rx1288_bstack
    le $I18, 0, rx1288_cut3010
    dec $I18
    set $I18, rx1288_bstack[$I18]
  rx1288_cut3010:
    assign rx1288_cstack, $I18
  rx1288_jump3009:
    jump $I19
  rx1288_done3006:
    rx1288_cur."!cursor_fail"()
    .return (rx1288_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_146_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1245
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1292_start
    .local string rx1292_tgt
    .local int rx1292_pos
    .local int rx1292_off
    .local int rx1292_eos
    .local int rx1292_rep
    .local pmc rx1292_cur
    .local pmc rx1292_curclass
    .local pmc rx1292_bstack
    .local pmc rx1292_cstack
    rx1292_start = self."!cursor_start_all"()
    set rx1292_cur, rx1292_start[0]
    set rx1292_tgt, rx1292_start[1]
    set rx1292_pos, rx1292_start[2]
    set rx1292_curclass, rx1292_start[3]
    set rx1292_bstack, rx1292_start[4]
    set $I19, rx1292_start[5]
    store_lex unicode:"$\x{a2}", rx1292_cur
    length rx1292_eos, rx1292_tgt
    eq $I19, 1, rx1292_restart3019
    gt rx1292_pos, rx1292_eos, rx1292_fail3020
    repr_get_attr_int $I11, self, rx1292_curclass, "$!from"
    ne $I11, -1, rxscan1293_done3026
    goto rxscan1293_scan3025
  rxscan1293_loop3024:
    inc rx1292_pos
    index rx1292_pos, rx1292_tgt, ucs4:"pir::", rx1292_pos
    eq rx1292_pos, -1, rx1292_fail3020
    gt rx1292_pos, rx1292_eos, rx1292_fail3020
    repr_bind_attr_int rx1292_cur, rx1292_curclass, "$!from", rx1292_pos
  rxscan1293_scan3025:
    nqp_rxmark rx1292_bstack, rxscan1293_loop3024, rx1292_pos, 0
  rxscan1293_done3026:
    add $I11, rx1292_pos, 5
    gt $I11, rx1292_eos, rx1292_fail3020
    substr $S10, rx1292_tgt, rx1292_pos, 5
    ne $S10, ucs4:"pir::", rx1292_fail3020
    add rx1292_pos, 5
    nqp_rxmark rx1292_bstack, rxcap1294_fail3028, rx1292_pos, 0
    nqp_rxmark rx1292_bstack, rxquantr1295_done3030, -1, 0
  rxquantr1295_loop3029:
    ge rx1292_pos, rx1292_eos, rx1292_fail3020
    is_cclass $I11, .CCLASS_WORD, rx1292_tgt, rx1292_pos
    unless $I11, rx1292_fail3020
    add rx1292_pos, 1
    nqp_rxpeek $I19, rx1292_bstack, rxquantr1295_done3030
    inc $I19
    inc $I19
    set rx1292_rep, rx1292_bstack[$I19]
    nqp_rxcommit rx1292_bstack, rxquantr1295_done3030
    inc rx1292_rep
    nqp_rxmark rx1292_bstack, rxquantr1295_done3030, rx1292_pos, rx1292_rep
    goto rxquantr1295_loop3029
  rxquantr1295_done3030:
    nqp_rxpeek $I19, rx1292_bstack, rxcap1294_fail3028
    inc $I19
    set $I11, rx1292_bstack[$I19]
    repr_bind_attr_int rx1292_cur, rx1292_curclass, "$!pos", rx1292_pos
    $P11 = rx1292_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1292_pos)
    rx1292_cstack = rx1292_cur."!cursor_capture"($P11, "op")
    goto rxcap1294_done3027
  rxcap1294_fail3028:
    goto rx1292_fail3020
  rxcap1294_done3027:
    nqp_rxmark rx1292_bstack, rxquantr1296_done3032, rx1292_pos, 0
  rxquantr1296_loop3031:
    repr_bind_attr_int rx1292_cur, rx1292_curclass, "$!pos", rx1292_pos
    $P11 = rx1292_cur."args"()
    repr_get_attr_int $I11, $P11, rx1292_curclass, "$!pos"
    lt $I11, 0, rx1292_fail3020
    goto rxsubrule1297_pass3033
  rxsubrule1297_back3034:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1292_curclass, "$!pos"
    lt $I11, 0, rx1292_fail3020
  rxsubrule1297_pass3033:
    rx1292_cstack = rx1292_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1297_back3034
    push rx1292_bstack, $I11
    push rx1292_bstack, 0
    push rx1292_bstack, rx1292_pos
    elements $I11, rx1292_cstack
    push rx1292_bstack, $I11
    repr_get_attr_int rx1292_pos, $P11, rx1292_curclass, "$!pos"
    nqp_rxpeek $I19, rx1292_bstack, rxquantr1296_done3032
    inc $I19
    inc $I19
    set rx1292_rep, rx1292_bstack[$I19]
    nqp_rxcommit rx1292_bstack, rxquantr1296_done3032
    inc rx1292_rep
  rxquantr1296_done3032:
    rx1292_cur."!cursor_pass"(rx1292_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1292_cur)
  rx1292_restart3019:
    repr_get_attr_obj rx1292_cstack, rx1292_cur, rx1292_curclass, "$!cstack"
  rx1292_fail3020:
    unless rx1292_bstack, rx1292_done3018
    pop $I19, rx1292_bstack
    if_null rx1292_cstack, rx1292_cstack_done3023
    unless rx1292_cstack, rx1292_cstack_done3023
    dec $I19
    set $P11, rx1292_cstack[$I19]
  rx1292_cstack_done3023:
    pop rx1292_rep, rx1292_bstack
    pop rx1292_pos, rx1292_bstack
    pop $I19, rx1292_bstack
    lt rx1292_pos, -1, rx1292_done3018
    lt rx1292_pos, 0, rx1292_fail3020
    eq $I19, 0, rx1292_fail3020
    nqp_islist $I20, rx1292_cstack
    unless $I20, rx1292_jump3021
    elements $I18, rx1292_bstack
    le $I18, 0, rx1292_cut3022
    dec $I18
    set $I18, rx1292_bstack[$I18]
  rx1292_cut3022:
    assign rx1292_cstack, $I18
  rx1292_jump3021:
    jump $I19
  rx1292_done3018:
    rx1292_cur."!cursor_fail"()
    .return (rx1292_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_147_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1249
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1298_start
    .local string rx1298_tgt
    .local int rx1298_pos
    .local int rx1298_off
    .local int rx1298_eos
    .local int rx1298_rep
    .local pmc rx1298_cur
    .local pmc rx1298_curclass
    .local pmc rx1298_bstack
    .local pmc rx1298_cstack
    rx1298_start = self."!cursor_start_all"()
    set rx1298_cur, rx1298_start[0]
    set rx1298_tgt, rx1298_start[1]
    set rx1298_pos, rx1298_start[2]
    set rx1298_curclass, rx1298_start[3]
    set rx1298_bstack, rx1298_start[4]
    set $I19, rx1298_start[5]
    store_lex unicode:"$\x{a2}", rx1298_cur
    length rx1298_eos, rx1298_tgt
    eq $I19, 1, rx1298_restart3037
    gt rx1298_pos, rx1298_eos, rx1298_fail3038
    repr_get_attr_int $I11, self, rx1298_curclass, "$!from"
    ne $I11, -1, rxscan1299_done3044
    goto rxscan1299_scan3043
  rxscan1299_loop3042:
    inc rx1298_pos
    index rx1298_pos, rx1298_tgt, ucs4:"pir::const::", rx1298_pos
    eq rx1298_pos, -1, rx1298_fail3038
    gt rx1298_pos, rx1298_eos, rx1298_fail3038
    repr_bind_attr_int rx1298_cur, rx1298_curclass, "$!from", rx1298_pos
  rxscan1299_scan3043:
    nqp_rxmark rx1298_bstack, rxscan1299_loop3042, rx1298_pos, 0
  rxscan1299_done3044:
    add $I11, rx1298_pos, 12
    gt $I11, rx1298_eos, rx1298_fail3038
    substr $S10, rx1298_tgt, rx1298_pos, 12
    ne $S10, ucs4:"pir::const::", rx1298_fail3038
    add rx1298_pos, 12
    nqp_rxmark rx1298_bstack, rxcap1300_fail3046, rx1298_pos, 0
    nqp_rxmark rx1298_bstack, rxquantr1301_done3048, -1, 0
  rxquantr1301_loop3047:
    ge rx1298_pos, rx1298_eos, rx1298_fail3038
    is_cclass $I11, .CCLASS_WORD, rx1298_tgt, rx1298_pos
    unless $I11, rx1298_fail3038
    add rx1298_pos, 1
    nqp_rxpeek $I19, rx1298_bstack, rxquantr1301_done3048
    inc $I19
    inc $I19
    set rx1298_rep, rx1298_bstack[$I19]
    nqp_rxcommit rx1298_bstack, rxquantr1301_done3048
    inc rx1298_rep
    nqp_rxmark rx1298_bstack, rxquantr1301_done3048, rx1298_pos, rx1298_rep
    goto rxquantr1301_loop3047
  rxquantr1301_done3048:
    nqp_rxpeek $I19, rx1298_bstack, rxcap1300_fail3046
    inc $I19
    set $I11, rx1298_bstack[$I19]
    repr_bind_attr_int rx1298_cur, rx1298_curclass, "$!pos", rx1298_pos
    $P11 = rx1298_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1298_pos)
    rx1298_cstack = rx1298_cur."!cursor_capture"($P11, "const")
    goto rxcap1300_done3045
  rxcap1300_fail3046:
    goto rx1298_fail3038
  rxcap1300_done3045:
    rx1298_cur."!cursor_pass"(rx1298_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1298_cur)
  rx1298_restart3037:
    repr_get_attr_obj rx1298_cstack, rx1298_cur, rx1298_curclass, "$!cstack"
  rx1298_fail3038:
    unless rx1298_bstack, rx1298_done3036
    pop $I19, rx1298_bstack
    if_null rx1298_cstack, rx1298_cstack_done3041
    unless rx1298_cstack, rx1298_cstack_done3041
    dec $I19
    set $P11, rx1298_cstack[$I19]
  rx1298_cstack_done3041:
    pop rx1298_rep, rx1298_bstack
    pop rx1298_pos, rx1298_bstack
    pop $I19, rx1298_bstack
    lt rx1298_pos, -1, rx1298_done3036
    lt rx1298_pos, 0, rx1298_fail3038
    eq $I19, 0, rx1298_fail3038
    nqp_islist $I20, rx1298_cstack
    unless $I20, rx1298_jump3039
    elements $I18, rx1298_bstack
    le $I18, 0, rx1298_cut3040
    dec $I18
    set $I18, rx1298_bstack[$I18]
  rx1298_cut3040:
    assign rx1298_cstack, $I18
  rx1298_jump3039:
    jump $I19
  rx1298_done3036:
    rx1298_cur."!cursor_fail"()
    .return (rx1298_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_148_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1253
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1302_start
    .local string rx1302_tgt
    .local int rx1302_pos
    .local int rx1302_off
    .local int rx1302_eos
    .local int rx1302_rep
    .local pmc rx1302_cur
    .local pmc rx1302_curclass
    .local pmc rx1302_bstack
    .local pmc rx1302_cstack
    rx1302_start = self."!cursor_start_all"()
    set rx1302_cur, rx1302_start[0]
    set rx1302_tgt, rx1302_start[1]
    set rx1302_pos, rx1302_start[2]
    set rx1302_curclass, rx1302_start[3]
    set rx1302_bstack, rx1302_start[4]
    set $I19, rx1302_start[5]
    store_lex unicode:"$\x{a2}", rx1302_cur
    length rx1302_eos, rx1302_tgt
    eq $I19, 1, rx1302_restart3051
    gt rx1302_pos, rx1302_eos, rx1302_fail3052
    repr_get_attr_int $I11, self, rx1302_curclass, "$!from"
    ne $I11, -1, rxscan1303_done3058
    goto rxscan1303_scan3057
  rxscan1303_loop3056:
    inc rx1302_pos
    index rx1302_pos, rx1302_tgt, ucs4:"nqp::", rx1302_pos
    eq rx1302_pos, -1, rx1302_fail3052
    gt rx1302_pos, rx1302_eos, rx1302_fail3052
    repr_bind_attr_int rx1302_cur, rx1302_curclass, "$!from", rx1302_pos
  rxscan1303_scan3057:
    nqp_rxmark rx1302_bstack, rxscan1303_loop3056, rx1302_pos, 0
  rxscan1303_done3058:
    add $I11, rx1302_pos, 5
    gt $I11, rx1302_eos, rx1302_fail3052
    substr $S10, rx1302_tgt, rx1302_pos, 5
    ne $S10, ucs4:"nqp::", rx1302_fail3052
    add rx1302_pos, 5
    nqp_rxmark rx1302_bstack, rxcap1304_fail3060, rx1302_pos, 0
    nqp_rxmark rx1302_bstack, rxquantr1305_done3062, -1, 0
  rxquantr1305_loop3061:
    ge rx1302_pos, rx1302_eos, rx1302_fail3052
    is_cclass $I11, .CCLASS_WORD, rx1302_tgt, rx1302_pos
    unless $I11, rx1302_fail3052
    add rx1302_pos, 1
    nqp_rxpeek $I19, rx1302_bstack, rxquantr1305_done3062
    inc $I19
    inc $I19
    set rx1302_rep, rx1302_bstack[$I19]
    nqp_rxcommit rx1302_bstack, rxquantr1305_done3062
    inc rx1302_rep
    nqp_rxmark rx1302_bstack, rxquantr1305_done3062, rx1302_pos, rx1302_rep
    goto rxquantr1305_loop3061
  rxquantr1305_done3062:
    nqp_rxpeek $I19, rx1302_bstack, rxcap1304_fail3060
    inc $I19
    set $I11, rx1302_bstack[$I19]
    repr_bind_attr_int rx1302_cur, rx1302_curclass, "$!pos", rx1302_pos
    $P11 = rx1302_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1302_pos)
    rx1302_cstack = rx1302_cur."!cursor_capture"($P11, "op")
    goto rxcap1304_done3059
  rxcap1304_fail3060:
    goto rx1302_fail3052
  rxcap1304_done3059:
    nqp_rxmark rx1302_bstack, rxquantr1306_done3064, rx1302_pos, 0
  rxquantr1306_loop3063:
    repr_bind_attr_int rx1302_cur, rx1302_curclass, "$!pos", rx1302_pos
    $P11 = rx1302_cur."args"()
    repr_get_attr_int $I11, $P11, rx1302_curclass, "$!pos"
    lt $I11, 0, rx1302_fail3052
    goto rxsubrule1307_pass3065
  rxsubrule1307_back3066:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1302_curclass, "$!pos"
    lt $I11, 0, rx1302_fail3052
  rxsubrule1307_pass3065:
    rx1302_cstack = rx1302_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1307_back3066
    push rx1302_bstack, $I11
    push rx1302_bstack, 0
    push rx1302_bstack, rx1302_pos
    elements $I11, rx1302_cstack
    push rx1302_bstack, $I11
    repr_get_attr_int rx1302_pos, $P11, rx1302_curclass, "$!pos"
    nqp_rxpeek $I19, rx1302_bstack, rxquantr1306_done3064
    inc $I19
    inc $I19
    set rx1302_rep, rx1302_bstack[$I19]
    nqp_rxcommit rx1302_bstack, rxquantr1306_done3064
    inc rx1302_rep
  rxquantr1306_done3064:
    rx1302_cur."!cursor_pass"(rx1302_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1302_cur)
  rx1302_restart3051:
    repr_get_attr_obj rx1302_cstack, rx1302_cur, rx1302_curclass, "$!cstack"
  rx1302_fail3052:
    unless rx1302_bstack, rx1302_done3050
    pop $I19, rx1302_bstack
    if_null rx1302_cstack, rx1302_cstack_done3055
    unless rx1302_cstack, rx1302_cstack_done3055
    dec $I19
    set $P11, rx1302_cstack[$I19]
  rx1302_cstack_done3055:
    pop rx1302_rep, rx1302_bstack
    pop rx1302_pos, rx1302_bstack
    pop $I19, rx1302_bstack
    lt rx1302_pos, -1, rx1302_done3050
    lt rx1302_pos, 0, rx1302_fail3052
    eq $I19, 0, rx1302_fail3052
    nqp_islist $I20, rx1302_cstack
    unless $I20, rx1302_jump3053
    elements $I18, rx1302_bstack
    le $I18, 0, rx1302_cut3054
    dec $I18
    set $I18, rx1302_bstack[$I18]
  rx1302_cut3054:
    assign rx1302_cstack, $I18
  rx1302_jump3053:
    jump $I19
  rx1302_done3050:
    rx1302_cur."!cursor_fail"()
    .return (rx1302_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_149_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1257
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1308_start
    .local string rx1308_tgt
    .local int rx1308_pos
    .local int rx1308_off
    .local int rx1308_eos
    .local int rx1308_rep
    .local pmc rx1308_cur
    .local pmc rx1308_curclass
    .local pmc rx1308_bstack
    .local pmc rx1308_cstack
    rx1308_start = self."!cursor_start_all"()
    set rx1308_cur, rx1308_start[0]
    set rx1308_tgt, rx1308_start[1]
    set rx1308_pos, rx1308_start[2]
    set rx1308_curclass, rx1308_start[3]
    set rx1308_bstack, rx1308_start[4]
    set $I19, rx1308_start[5]
    store_lex unicode:"$\x{a2}", rx1308_cur
    length rx1308_eos, rx1308_tgt
    eq $I19, 1, rx1308_restart3069
    gt rx1308_pos, rx1308_eos, rx1308_fail3070
    repr_get_attr_int $I11, self, rx1308_curclass, "$!from"
    ne $I11, -1, rxscan1309_done3076
    goto rxscan1309_scan3075
  rxscan1309_loop3074:
    inc rx1308_pos
    index rx1308_pos, rx1308_tgt, ucs4:"nqp::const::", rx1308_pos
    eq rx1308_pos, -1, rx1308_fail3070
    gt rx1308_pos, rx1308_eos, rx1308_fail3070
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!from", rx1308_pos
  rxscan1309_scan3075:
    nqp_rxmark rx1308_bstack, rxscan1309_loop3074, rx1308_pos, 0
  rxscan1309_done3076:
    add $I11, rx1308_pos, 12
    gt $I11, rx1308_eos, rx1308_fail3070
    substr $S10, rx1308_tgt, rx1308_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1308_fail3070
    add rx1308_pos, 12
    nqp_rxmark rx1308_bstack, rxcap1310_fail3078, rx1308_pos, 0
    nqp_rxmark rx1308_bstack, rxquantr1311_done3080, -1, 0
  rxquantr1311_loop3079:
    ge rx1308_pos, rx1308_eos, rx1308_fail3070
    is_cclass $I11, .CCLASS_WORD, rx1308_tgt, rx1308_pos
    unless $I11, rx1308_fail3070
    add rx1308_pos, 1
    nqp_rxpeek $I19, rx1308_bstack, rxquantr1311_done3080
    inc $I19
    inc $I19
    set rx1308_rep, rx1308_bstack[$I19]
    nqp_rxcommit rx1308_bstack, rxquantr1311_done3080
    inc rx1308_rep
    nqp_rxmark rx1308_bstack, rxquantr1311_done3080, rx1308_pos, rx1308_rep
    goto rxquantr1311_loop3079
  rxquantr1311_done3080:
    nqp_rxpeek $I19, rx1308_bstack, rxcap1310_fail3078
    inc $I19
    set $I11, rx1308_bstack[$I19]
    repr_bind_attr_int rx1308_cur, rx1308_curclass, "$!pos", rx1308_pos
    $P11 = rx1308_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1308_pos)
    rx1308_cstack = rx1308_cur."!cursor_capture"($P11, "const")
    goto rxcap1310_done3077
  rxcap1310_fail3078:
    goto rx1308_fail3070
  rxcap1310_done3077:
    rx1308_cur."!cursor_pass"(rx1308_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1308_cur)
  rx1308_restart3069:
    repr_get_attr_obj rx1308_cstack, rx1308_cur, rx1308_curclass, "$!cstack"
  rx1308_fail3070:
    unless rx1308_bstack, rx1308_done3068
    pop $I19, rx1308_bstack
    if_null rx1308_cstack, rx1308_cstack_done3073
    unless rx1308_cstack, rx1308_cstack_done3073
    dec $I19
    set $P11, rx1308_cstack[$I19]
  rx1308_cstack_done3073:
    pop rx1308_rep, rx1308_bstack
    pop rx1308_pos, rx1308_bstack
    pop $I19, rx1308_bstack
    lt rx1308_pos, -1, rx1308_done3068
    lt rx1308_pos, 0, rx1308_fail3070
    eq $I19, 0, rx1308_fail3070
    nqp_islist $I20, rx1308_cstack
    unless $I20, rx1308_jump3071
    elements $I18, rx1308_bstack
    le $I18, 0, rx1308_cut3072
    dec $I18
    set $I18, rx1308_bstack[$I18]
  rx1308_cut3072:
    assign rx1308_cstack, $I18
  rx1308_jump3071:
    jump $I19
  rx1308_done3068:
    rx1308_cur."!cursor_fail"()
    .return (rx1308_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_150_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1261
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_423_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1312_start
    .local string rx1312_tgt
    .local int rx1312_pos
    .local int rx1312_off
    .local int rx1312_eos
    .local int rx1312_rep
    .local pmc rx1312_cur
    .local pmc rx1312_curclass
    .local pmc rx1312_bstack
    .local pmc rx1312_cstack
    rx1312_start = self."!cursor_start_all"()
    set rx1312_cur, rx1312_start[0]
    set rx1312_tgt, rx1312_start[1]
    set rx1312_pos, rx1312_start[2]
    set rx1312_curclass, rx1312_start[3]
    set rx1312_bstack, rx1312_start[4]
    set $I19, rx1312_start[5]
    store_lex unicode:"$\x{a2}", rx1312_cur
    length rx1312_eos, rx1312_tgt
    eq $I19, 1, rx1312_restart3083
    gt rx1312_pos, rx1312_eos, rx1312_fail3084
    repr_get_attr_int $I11, self, rx1312_curclass, "$!from"
    ne $I11, -1, rxscan1313_done3090
    goto rxscan1313_scan3089
  rxscan1313_loop3088:
    inc rx1312_pos
    index rx1312_pos, rx1312_tgt, ucs4:"{*}", rx1312_pos
    eq rx1312_pos, -1, rx1312_fail3084
    gt rx1312_pos, rx1312_eos, rx1312_fail3084
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!from", rx1312_pos
  rxscan1313_scan3089:
    nqp_rxmark rx1312_bstack, rxscan1313_loop3088, rx1312_pos, 0
  rxscan1313_done3090:
    add $I11, rx1312_pos, 3
    gt $I11, rx1312_eos, rx1312_fail3084
    substr $S10, rx1312_tgt, rx1312_pos, 3
    ne $S10, ucs4:"{*}", rx1312_fail3084
    add rx1312_pos, 3
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3084
  alt1314_03092:
    nqp_rxmark rx1312_bstack, alt1314_13098, rx1312_pos, 0
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    store_lex unicode:"$\x{a2}", rx1312_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_423_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1312_fail3084
    goto alt1314_end3091
  alt1314_13098:
    repr_bind_attr_int rx1312_cur, rx1312_curclass, "$!pos", rx1312_pos
    $P11 = rx1312_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1312_curclass, "$!pos"
    lt $I11, 0, rx1312_fail3084
    repr_get_attr_int rx1312_pos, $P11, rx1312_curclass, "$!pos"
  alt1314_end3091:
    rx1312_cur."!cursor_pass"(rx1312_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1312_cur)
  rx1312_restart3083:
    repr_get_attr_obj rx1312_cstack, rx1312_cur, rx1312_curclass, "$!cstack"
  rx1312_fail3084:
    unless rx1312_bstack, rx1312_done3082
    pop $I19, rx1312_bstack
    if_null rx1312_cstack, rx1312_cstack_done3087
    unless rx1312_cstack, rx1312_cstack_done3087
    dec $I19
    set $P11, rx1312_cstack[$I19]
  rx1312_cstack_done3087:
    pop rx1312_rep, rx1312_bstack
    pop rx1312_pos, rx1312_bstack
    pop $I19, rx1312_bstack
    lt rx1312_pos, -1, rx1312_done3082
    lt rx1312_pos, 0, rx1312_fail3084
    eq $I19, 0, rx1312_fail3084
    nqp_islist $I20, rx1312_cstack
    unless $I20, rx1312_jump3085
    elements $I18, rx1312_bstack
    le $I18, 0, rx1312_cut3086
    dec $I18
    set $I18, rx1312_bstack[$I18]
  rx1312_cut3086:
    assign rx1312_cstack, $I18
  rx1312_jump3085:
    jump $I19
  rx1312_done3082:
    rx1312_cur."!cursor_fail"()
    .return (rx1312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1382484127.52628") :anon :lex :outer("cuid_150_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1263
    .local pmc fb_tmp_182 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback3093
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_182, $P5002
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if1315_else3094 
    set $P5004, fb_tmp_182["$MULTINESS"]
    set $P5006, $P5004
    goto if1315_end3095
  if1315_else3094:
    null $P5005
    set $P5006, $P5005
  if1315_end3095:
    unless_null $P5006, vivi_13163096
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_13163096:
    unless_null $P5006, vivi_13173097
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13173097:
    set $P5001, $P5006
  fallback3093:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_151_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1266
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1319_start
    .local string rx1319_tgt
    .local int rx1319_pos
    .local int rx1319_off
    .local int rx1319_eos
    .local int rx1319_rep
    .local pmc rx1319_cur
    .local pmc rx1319_curclass
    .local pmc rx1319_bstack
    .local pmc rx1319_cstack
    rx1319_start = self."!cursor_start_all"()
    set rx1319_cur, rx1319_start[0]
    set rx1319_tgt, rx1319_start[1]
    set rx1319_pos, rx1319_start[2]
    set rx1319_curclass, rx1319_start[3]
    set rx1319_bstack, rx1319_start[4]
    set $I19, rx1319_start[5]
    store_lex unicode:"$\x{a2}", rx1319_cur
    length rx1319_eos, rx1319_tgt
    eq $I19, 1, rx1319_restart3102
    gt rx1319_pos, rx1319_eos, rx1319_fail3103
    repr_get_attr_int $I11, self, rx1319_curclass, "$!from"
    ne $I11, -1, rxscan1320_done3109
    goto rxscan1320_scan3108
  rxscan1320_loop3107:
    inc rx1319_pos
    gt rx1319_pos, rx1319_eos, rx1319_fail3103
    repr_bind_attr_int rx1319_cur, rx1319_curclass, "$!from", rx1319_pos
  rxscan1320_scan3108:
    nqp_rxmark rx1319_bstack, rxscan1320_loop3107, rx1319_pos, 0
  rxscan1320_done3109:
    repr_bind_attr_int rx1319_cur, rx1319_curclass, "$!pos", rx1319_pos
    $P11 = rx1319_cur."name"()
    repr_get_attr_int $I11, $P11, rx1319_curclass, "$!pos"
    lt $I11, 0, rx1319_fail3103
    nqp_rxmark rx1319_bstack, rxsubrule1321_pass3110, -1, 0
  rxsubrule1321_pass3110:
    rx1319_cstack = rx1319_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1319_pos, $P11, rx1319_curclass, "$!pos"
    nqp_rxmark rx1319_bstack, rxquantr1322_done3112, rx1319_pos, 0
  rxquantr1322_loop3111:
    repr_bind_attr_int rx1319_cur, rx1319_curclass, "$!pos", rx1319_pos
    $P11 = rx1319_cur."args"()
    repr_get_attr_int $I11, $P11, rx1319_curclass, "$!pos"
    lt $I11, 0, rx1319_fail3103
    goto rxsubrule1323_pass3113
  rxsubrule1323_back3114:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1319_curclass, "$!pos"
    lt $I11, 0, rx1319_fail3103
  rxsubrule1323_pass3113:
    rx1319_cstack = rx1319_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1323_back3114
    push rx1319_bstack, $I11
    push rx1319_bstack, 0
    push rx1319_bstack, rx1319_pos
    elements $I11, rx1319_cstack
    push rx1319_bstack, $I11
    repr_get_attr_int rx1319_pos, $P11, rx1319_curclass, "$!pos"
    nqp_rxpeek $I19, rx1319_bstack, rxquantr1322_done3112
    inc $I19
    inc $I19
    set rx1319_rep, rx1319_bstack[$I19]
    nqp_rxcommit rx1319_bstack, rxquantr1322_done3112
    inc rx1319_rep
  rxquantr1322_done3112:
    rx1319_cur."!cursor_pass"(rx1319_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1319_cur)
  rx1319_restart3102:
    repr_get_attr_obj rx1319_cstack, rx1319_cur, rx1319_curclass, "$!cstack"
  rx1319_fail3103:
    unless rx1319_bstack, rx1319_done3101
    pop $I19, rx1319_bstack
    if_null rx1319_cstack, rx1319_cstack_done3106
    unless rx1319_cstack, rx1319_cstack_done3106
    dec $I19
    set $P11, rx1319_cstack[$I19]
  rx1319_cstack_done3106:
    pop rx1319_rep, rx1319_bstack
    pop rx1319_pos, rx1319_bstack
    pop $I19, rx1319_bstack
    lt rx1319_pos, -1, rx1319_done3101
    lt rx1319_pos, 0, rx1319_fail3103
    eq $I19, 0, rx1319_fail3103
    nqp_islist $I20, rx1319_cstack
    unless $I20, rx1319_jump3104
    elements $I18, rx1319_bstack
    le $I18, 0, rx1319_cut3105
    dec $I18
    set $I18, rx1319_bstack[$I18]
  rx1319_cut3105:
    assign rx1319_cstack, $I18
  rx1319_jump3104:
    jump $I19
  rx1319_done3101:
    rx1319_cur."!cursor_fail"()
    .return (rx1319_cur) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_152_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1270
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1324_start
    .local string rx1324_tgt
    .local int rx1324_pos
    .local int rx1324_off
    .local int rx1324_eos
    .local int rx1324_rep
    .local pmc rx1324_cur
    .local pmc rx1324_curclass
    .local pmc rx1324_bstack
    .local pmc rx1324_cstack
    rx1324_start = self."!cursor_start_all"()
    set rx1324_cur, rx1324_start[0]
    set rx1324_tgt, rx1324_start[1]
    set rx1324_pos, rx1324_start[2]
    set rx1324_curclass, rx1324_start[3]
    set rx1324_bstack, rx1324_start[4]
    set $I19, rx1324_start[5]
    store_lex unicode:"$\x{a2}", rx1324_cur
    length rx1324_eos, rx1324_tgt
    eq $I19, 1, rx1324_restart3117
    gt rx1324_pos, rx1324_eos, rx1324_fail3118
    repr_get_attr_int $I11, self, rx1324_curclass, "$!from"
    ne $I11, -1, rxscan1325_done3124
    goto rxscan1325_scan3123
  rxscan1325_loop3122:
    inc rx1324_pos
    index rx1324_pos, rx1324_tgt, ucs4:"(", rx1324_pos
    eq rx1324_pos, -1, rx1324_fail3118
    gt rx1324_pos, rx1324_eos, rx1324_fail3118
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!from", rx1324_pos
  rxscan1325_scan3123:
    nqp_rxmark rx1324_bstack, rxscan1325_loop3122, rx1324_pos, 0
  rxscan1325_done3124:
    add $I11, rx1324_pos, 1
    gt $I11, rx1324_eos, rx1324_fail3118
    substr $S10, rx1324_tgt, rx1324_pos, 1
    ne $S10, ucs4:"(", rx1324_fail3118
    add rx1324_pos, 1
    repr_bind_attr_int rx1324_cur, rx1324_curclass, "$!pos", rx1324_pos
    $P11 = rx1324_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1324_curclass, "$!pos"
    lt $I11, 0, rx1324_fail3118
    nqp_rxmark rx1324_bstack, rxsubrule1326_pass3125, -1, 0
  rxsubrule1326_pass3125:
    rx1324_cstack = rx1324_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1324_pos, $P11, rx1324_curclass, "$!pos"
    add $I11, rx1324_pos, 1
    gt $I11, rx1324_eos, rx1324_fail3118
    substr $S10, rx1324_tgt, rx1324_pos, 1
    ne $S10, ucs4:")", rx1324_fail3118
    add rx1324_pos, 1
    rx1324_cur."!cursor_pass"(rx1324_pos, "args", 'backtrack'=>1)
    .return (rx1324_cur)
  rx1324_restart3117:
    repr_get_attr_obj rx1324_cstack, rx1324_cur, rx1324_curclass, "$!cstack"
  rx1324_fail3118:
    unless rx1324_bstack, rx1324_done3116
    pop $I19, rx1324_bstack
    if_null rx1324_cstack, rx1324_cstack_done3121
    unless rx1324_cstack, rx1324_cstack_done3121
    dec $I19
    set $P11, rx1324_cstack[$I19]
  rx1324_cstack_done3121:
    pop rx1324_rep, rx1324_bstack
    pop rx1324_pos, rx1324_bstack
    pop $I19, rx1324_bstack
    lt rx1324_pos, -1, rx1324_done3116
    lt rx1324_pos, 0, rx1324_fail3118
    eq $I19, 0, rx1324_fail3118
    nqp_islist $I20, rx1324_cstack
    unless $I20, rx1324_jump3119
    elements $I18, rx1324_bstack
    le $I18, 0, rx1324_cut3120
    dec $I18
    set $I18, rx1324_bstack[$I18]
  rx1324_cut3120:
    assign rx1324_cstack, $I18
  rx1324_jump3119:
    jump $I19
  rx1324_done3116:
    rx1324_cur."!cursor_fail"()
    .return (rx1324_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_153_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1274
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1327_start
    .local string rx1327_tgt
    .local int rx1327_pos
    .local int rx1327_off
    .local int rx1327_eos
    .local int rx1327_rep
    .local pmc rx1327_cur
    .local pmc rx1327_curclass
    .local pmc rx1327_bstack
    .local pmc rx1327_cstack
    rx1327_start = self."!cursor_start_all"()
    set rx1327_cur, rx1327_start[0]
    set rx1327_tgt, rx1327_start[1]
    set rx1327_pos, rx1327_start[2]
    set rx1327_curclass, rx1327_start[3]
    set rx1327_bstack, rx1327_start[4]
    set $I19, rx1327_start[5]
    store_lex unicode:"$\x{a2}", rx1327_cur
    length rx1327_eos, rx1327_tgt
    eq $I19, 1, rx1327_restart3128
    gt rx1327_pos, rx1327_eos, rx1327_fail3129
    repr_get_attr_int $I11, self, rx1327_curclass, "$!from"
    ne $I11, -1, rxscan1328_done3135
    goto rxscan1328_scan3134
  rxscan1328_loop3133:
    inc rx1327_pos
    gt rx1327_pos, rx1327_eos, rx1327_fail3129
    repr_bind_attr_int rx1327_cur, rx1327_curclass, "$!from", rx1327_pos
  rxscan1328_scan3134:
    nqp_rxmark rx1327_bstack, rxscan1328_loop3133, rx1327_pos, 0
  rxscan1328_done3135:
    repr_bind_attr_int rx1327_cur, rx1327_curclass, "$!pos", rx1327_pos
    $P11 = rx1327_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1327_curclass, "$!pos"
    lt $I11, 0, rx1327_fail3129
    repr_get_attr_int rx1327_pos, $P11, rx1327_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1330_03138
    nqp_push_label $P11, alt1330_13140
    nqp_rxmark rx1327_bstack, alt1330_end3137, -1, 0
    rx1327_cur."!alt"(rx1327_pos, "alt_nfa__35_1382484131.51032", $P11)
    goto rx1327_fail3129
  alt1330_03138:
    repr_bind_attr_int rx1327_cur, rx1327_curclass, "$!pos", rx1327_pos
    $P11 = rx1327_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1327_curclass, "$!pos"
    lt $I11, 0, rx1327_fail3129
    nqp_rxmark rx1327_bstack, rxsubrule1331_pass3139, -1, 0
  rxsubrule1331_pass3139:
    rx1327_cstack = rx1327_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1327_pos, $P11, rx1327_curclass, "$!pos"
    goto alt1330_end3137
  alt1330_13140:
    goto alt1330_end3137
  alt1330_end3137:
    nqp_rxcommit rx1327_bstack, alt1330_end3137
    rx1327_cur."!cursor_pass"(rx1327_pos, "arglist", 'backtrack'=>1)
    .return (rx1327_cur)
  rx1327_restart3128:
    repr_get_attr_obj rx1327_cstack, rx1327_cur, rx1327_curclass, "$!cstack"
  rx1327_fail3129:
    unless rx1327_bstack, rx1327_done3127
    pop $I19, rx1327_bstack
    if_null rx1327_cstack, rx1327_cstack_done3132
    unless rx1327_cstack, rx1327_cstack_done3132
    dec $I19
    set $P11, rx1327_cstack[$I19]
  rx1327_cstack_done3132:
    pop rx1327_rep, rx1327_bstack
    pop rx1327_pos, rx1327_bstack
    pop $I19, rx1327_bstack
    lt rx1327_pos, -1, rx1327_done3127
    lt rx1327_pos, 0, rx1327_fail3129
    eq $I19, 0, rx1327_fail3129
    nqp_islist $I20, rx1327_cstack
    unless $I20, rx1327_jump3130
    elements $I18, rx1327_bstack
    le $I18, 0, rx1327_cut3131
    dec $I18
    set $I18, rx1327_bstack[$I18]
  rx1327_cut3131:
    assign rx1327_cstack, $I18
  rx1327_jump3130:
    jump $I19
  rx1327_done3127:
    rx1327_cur."!cursor_fail"()
    .return (rx1327_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_154_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1283
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1333_start
    .local string rx1333_tgt
    .local int rx1333_pos
    .local int rx1333_off
    .local int rx1333_eos
    .local int rx1333_rep
    .local pmc rx1333_cur
    .local pmc rx1333_curclass
    .local pmc rx1333_bstack
    .local pmc rx1333_cstack
    rx1333_start = self."!cursor_start_all"()
    set rx1333_cur, rx1333_start[0]
    set rx1333_tgt, rx1333_start[1]
    set rx1333_pos, rx1333_start[2]
    set rx1333_curclass, rx1333_start[3]
    set rx1333_bstack, rx1333_start[4]
    set $I19, rx1333_start[5]
    store_lex unicode:"$\x{a2}", rx1333_cur
    length rx1333_eos, rx1333_tgt
    eq $I19, 1, rx1333_restart3144
    gt rx1333_pos, rx1333_eos, rx1333_fail3145
    repr_get_attr_int $I11, self, rx1333_curclass, "$!from"
    ne $I11, -1, rxscan1334_done3151
    goto rxscan1334_scan3150
  rxscan1334_loop3149:
    inc rx1333_pos
    gt rx1333_pos, rx1333_eos, rx1333_fail3145
    repr_bind_attr_int rx1333_cur, rx1333_curclass, "$!from", rx1333_pos
  rxscan1334_scan3150:
    nqp_rxmark rx1333_bstack, rxscan1334_loop3149, rx1333_pos, 0
  rxscan1334_done3151:
    repr_bind_attr_int rx1333_cur, rx1333_curclass, "$!pos", rx1333_pos
    $P11 = rx1333_cur."value"()
    repr_get_attr_int $I11, $P11, rx1333_curclass, "$!pos"
    lt $I11, 0, rx1333_fail3145
    nqp_rxmark rx1333_bstack, rxsubrule1335_pass3152, -1, 0
  rxsubrule1335_pass3152:
    rx1333_cstack = rx1333_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1333_pos, $P11, rx1333_curclass, "$!pos"
    rx1333_cur."!cursor_pass"(rx1333_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1333_cur)
  rx1333_restart3144:
    repr_get_attr_obj rx1333_cstack, rx1333_cur, rx1333_curclass, "$!cstack"
  rx1333_fail3145:
    unless rx1333_bstack, rx1333_done3143
    pop $I19, rx1333_bstack
    if_null rx1333_cstack, rx1333_cstack_done3148
    unless rx1333_cstack, rx1333_cstack_done3148
    dec $I19
    set $P11, rx1333_cstack[$I19]
  rx1333_cstack_done3148:
    pop rx1333_rep, rx1333_bstack
    pop rx1333_pos, rx1333_bstack
    pop $I19, rx1333_bstack
    lt rx1333_pos, -1, rx1333_done3143
    lt rx1333_pos, 0, rx1333_fail3145
    eq $I19, 0, rx1333_fail3145
    nqp_islist $I20, rx1333_cstack
    unless $I20, rx1333_jump3146
    elements $I18, rx1333_bstack
    le $I18, 0, rx1333_cut3147
    dec $I18
    set $I18, rx1333_bstack[$I18]
  rx1333_cut3147:
    assign rx1333_cstack, $I18
  rx1333_jump3146:
    jump $I19
  rx1333_done3143:
    rx1333_cur."!cursor_fail"()
    .return (rx1333_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_155_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1285
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1336_start
    .local string rx1336_tgt
    .local int rx1336_pos
    .local int rx1336_off
    .local int rx1336_eos
    .local int rx1336_rep
    .local pmc rx1336_cur
    .local pmc rx1336_curclass
    .local pmc rx1336_bstack
    .local pmc rx1336_cstack
    rx1336_start = self."!cursor_start_all"()
    set rx1336_cur, rx1336_start[0]
    set rx1336_tgt, rx1336_start[1]
    set rx1336_pos, rx1336_start[2]
    set rx1336_curclass, rx1336_start[3]
    set rx1336_bstack, rx1336_start[4]
    set $I19, rx1336_start[5]
    store_lex unicode:"$\x{a2}", rx1336_cur
    length rx1336_eos, rx1336_tgt
    eq $I19, 1, rx1336_restart3155
    gt rx1336_pos, rx1336_eos, rx1336_fail3156
    repr_get_attr_int $I11, self, rx1336_curclass, "$!from"
    ne $I11, -1, rxscan1337_done3162
    goto rxscan1337_scan3161
  rxscan1337_loop3160:
    inc rx1336_pos
    gt rx1336_pos, rx1336_eos, rx1336_fail3156
    repr_bind_attr_int rx1336_cur, rx1336_curclass, "$!from", rx1336_pos
  rxscan1337_scan3161:
    nqp_rxmark rx1336_bstack, rxscan1337_loop3160, rx1336_pos, 0
  rxscan1337_done3162:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1338_03164
    nqp_push_label $P11, alt1338_13166
    nqp_rxmark rx1336_bstack, alt1338_end3163, -1, 0
    rx1336_cur."!alt"(rx1336_pos, "alt_nfa__36_1382484131.52234", $P11)
    goto rx1336_fail3156
  alt1338_03164:
    repr_bind_attr_int rx1336_cur, rx1336_curclass, "$!pos", rx1336_pos
    $P11 = rx1336_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1336_curclass, "$!pos"
    lt $I11, 0, rx1336_fail3156
    nqp_rxmark rx1336_bstack, rxsubrule1339_pass3165, -1, 0
  rxsubrule1339_pass3165:
    rx1336_cstack = rx1336_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1336_pos, $P11, rx1336_curclass, "$!pos"
    goto alt1338_end3163
  alt1338_13166:
    repr_bind_attr_int rx1336_cur, rx1336_curclass, "$!pos", rx1336_pos
    $P11 = rx1336_cur."number"()
    repr_get_attr_int $I11, $P11, rx1336_curclass, "$!pos"
    lt $I11, 0, rx1336_fail3156
    nqp_rxmark rx1336_bstack, rxsubrule1340_pass3167, -1, 0
  rxsubrule1340_pass3167:
    rx1336_cstack = rx1336_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1336_pos, $P11, rx1336_curclass, "$!pos"
    goto alt1338_end3163
  alt1338_end3163:
    rx1336_cur."!cursor_pass"(rx1336_pos, "value", 'backtrack'=>1)
    .return (rx1336_cur)
  rx1336_restart3155:
    repr_get_attr_obj rx1336_cstack, rx1336_cur, rx1336_curclass, "$!cstack"
  rx1336_fail3156:
    unless rx1336_bstack, rx1336_done3154
    pop $I19, rx1336_bstack
    if_null rx1336_cstack, rx1336_cstack_done3159
    unless rx1336_cstack, rx1336_cstack_done3159
    dec $I19
    set $P11, rx1336_cstack[$I19]
  rx1336_cstack_done3159:
    pop rx1336_rep, rx1336_bstack
    pop rx1336_pos, rx1336_bstack
    pop $I19, rx1336_bstack
    lt rx1336_pos, -1, rx1336_done3154
    lt rx1336_pos, 0, rx1336_fail3156
    eq $I19, 0, rx1336_fail3156
    nqp_islist $I20, rx1336_cstack
    unless $I20, rx1336_jump3157
    elements $I18, rx1336_bstack
    le $I18, 0, rx1336_cut3158
    dec $I18
    set $I18, rx1336_bstack[$I18]
  rx1336_cut3158:
    assign rx1336_cstack, $I18
  rx1336_jump3157:
    jump $I19
  rx1336_done3154:
    rx1336_cur."!cursor_fail"()
    .return (rx1336_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_156_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1341_start
    .local string rx1341_tgt
    .local int rx1341_pos
    .local int rx1341_off
    .local int rx1341_eos
    .local int rx1341_rep
    .local pmc rx1341_cur
    .local pmc rx1341_curclass
    .local pmc rx1341_bstack
    .local pmc rx1341_cstack
    rx1341_start = self."!cursor_start_all"()
    set rx1341_cur, rx1341_start[0]
    set rx1341_tgt, rx1341_start[1]
    set rx1341_pos, rx1341_start[2]
    set rx1341_curclass, rx1341_start[3]
    set rx1341_bstack, rx1341_start[4]
    set $I19, rx1341_start[5]
    store_lex unicode:"$\x{a2}", rx1341_cur
    length rx1341_eos, rx1341_tgt
    eq $I19, 1, rx1341_restart3170
    gt rx1341_pos, rx1341_eos, rx1341_fail3171
    repr_get_attr_int $I11, self, rx1341_curclass, "$!from"
    ne $I11, -1, rxscan1342_done3177
    goto rxscan1342_scan3176
  rxscan1342_loop3175:
    inc rx1341_pos
    gt rx1341_pos, rx1341_eos, rx1341_fail3171
    repr_bind_attr_int rx1341_cur, rx1341_curclass, "$!from", rx1341_pos
  rxscan1342_scan3176:
    nqp_rxmark rx1341_bstack, rxscan1342_loop3175, rx1341_pos, 0
  rxscan1342_done3177:
    nqp_rxmark rx1341_bstack, rxcap1343_fail3179, rx1341_pos, 0
    nqp_rxmark rx1341_bstack, rxquantr1344_done3181, rx1341_pos, 0
  rxquantr1344_loop3180:
    ge rx1341_pos, rx1341_eos, rx1341_fail3171
    substr $S11, rx1341_tgt, rx1341_pos, 1
    index $I11, ucs4:"+-", $S11
    lt $I11, 0, rx1341_fail3171
    inc rx1341_pos
    nqp_rxpeek $I19, rx1341_bstack, rxquantr1344_done3181
    inc $I19
    inc $I19
    set rx1341_rep, rx1341_bstack[$I19]
    nqp_rxcommit rx1341_bstack, rxquantr1344_done3181
    inc rx1341_rep
  rxquantr1344_done3181:
    nqp_rxpeek $I19, rx1341_bstack, rxcap1343_fail3179
    inc $I19
    set $I11, rx1341_bstack[$I19]
    repr_bind_attr_int rx1341_cur, rx1341_curclass, "$!pos", rx1341_pos
    $P11 = rx1341_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1341_pos)
    rx1341_cstack = rx1341_cur."!cursor_capture"($P11, "sign")
    goto rxcap1343_done3178
  rxcap1343_fail3179:
    goto rx1341_fail3171
  rxcap1343_done3178:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1345_03183
    nqp_push_label $P11, alt1345_13185
    nqp_rxmark rx1341_bstack, alt1345_end3182, -1, 0
    rx1341_cur."!alt"(rx1341_pos, "alt_nfa__37_1382484131.53648", $P11)
    goto rx1341_fail3171
  alt1345_03183:
    repr_bind_attr_int rx1341_cur, rx1341_curclass, "$!pos", rx1341_pos
    $P11 = rx1341_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1341_curclass, "$!pos"
    lt $I11, 0, rx1341_fail3171
    nqp_rxmark rx1341_bstack, rxsubrule1346_pass3184, -1, 0
  rxsubrule1346_pass3184:
    rx1341_cstack = rx1341_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1341_pos, $P11, rx1341_curclass, "$!pos"
    goto alt1345_end3182
  alt1345_13185:
    repr_bind_attr_int rx1341_cur, rx1341_curclass, "$!pos", rx1341_pos
    $P11 = rx1341_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1341_curclass, "$!pos"
    lt $I11, 0, rx1341_fail3171
    nqp_rxmark rx1341_bstack, rxsubrule1347_pass3186, -1, 0
  rxsubrule1347_pass3186:
    rx1341_cstack = rx1341_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1341_pos, $P11, rx1341_curclass, "$!pos"
    goto alt1345_end3182
  alt1345_end3182:
    nqp_rxcommit rx1341_bstack, alt1345_end3182
    rx1341_cur."!cursor_pass"(rx1341_pos, "number", 'backtrack'=>1)
    .return (rx1341_cur)
  rx1341_restart3170:
    repr_get_attr_obj rx1341_cstack, rx1341_cur, rx1341_curclass, "$!cstack"
  rx1341_fail3171:
    unless rx1341_bstack, rx1341_done3169
    pop $I19, rx1341_bstack
    if_null rx1341_cstack, rx1341_cstack_done3174
    unless rx1341_cstack, rx1341_cstack_done3174
    dec $I19
    set $P11, rx1341_cstack[$I19]
  rx1341_cstack_done3174:
    pop rx1341_rep, rx1341_bstack
    pop rx1341_pos, rx1341_bstack
    pop $I19, rx1341_bstack
    lt rx1341_pos, -1, rx1341_done3169
    lt rx1341_pos, 0, rx1341_fail3171
    eq $I19, 0, rx1341_fail3171
    nqp_islist $I20, rx1341_cstack
    unless $I20, rx1341_jump3172
    elements $I18, rx1341_bstack
    le $I18, 0, rx1341_cut3173
    dec $I18
    set $I18, rx1341_bstack[$I18]
  rx1341_cut3173:
    assign rx1341_cstack, $I18
  rx1341_jump3172:
    jump $I19
  rx1341_done3169:
    rx1341_cur."!cursor_fail"()
    .return (rx1341_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_157_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1295
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_158_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1296
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1348_start
    .local string rx1348_tgt
    .local int rx1348_pos
    .local int rx1348_off
    .local int rx1348_eos
    .local int rx1348_rep
    .local pmc rx1348_cur
    .local pmc rx1348_curclass
    .local pmc rx1348_bstack
    .local pmc rx1348_cstack
    rx1348_start = self."!cursor_start_all"()
    set rx1348_cur, rx1348_start[0]
    set rx1348_tgt, rx1348_start[1]
    set rx1348_pos, rx1348_start[2]
    set rx1348_curclass, rx1348_start[3]
    set rx1348_bstack, rx1348_start[4]
    set $I19, rx1348_start[5]
    store_lex unicode:"$\x{a2}", rx1348_cur
    length rx1348_eos, rx1348_tgt
    eq $I19, 1, rx1348_restart3189
    gt rx1348_pos, rx1348_eos, rx1348_fail3190
    repr_get_attr_int $I11, self, rx1348_curclass, "$!from"
    ne $I11, -1, rxscan1349_done3196
    goto rxscan1349_scan3195
  rxscan1349_loop3194:
    inc rx1348_pos
    gt rx1348_pos, rx1348_eos, rx1348_fail3190
    repr_bind_attr_int rx1348_cur, rx1348_curclass, "$!from", rx1348_pos
  rxscan1349_scan3195:
    nqp_rxmark rx1348_bstack, rxscan1349_loop3194, rx1348_pos, 0
  rxscan1349_done3196:
    ge rx1348_pos, rx1348_eos, rx1348_fail3190
    substr $S11, rx1348_tgt, rx1348_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1348_fail3190
    repr_bind_attr_int rx1348_cur, rx1348_curclass, "$!pos", rx1348_pos
    $P11 = rx1348_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1348_curclass, "$!pos"
    lt $I11, 0, rx1348_fail3190
    nqp_rxmark rx1348_bstack, rxsubrule1350_pass3197, -1, 0
  rxsubrule1350_pass3197:
    rx1348_cstack = rx1348_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1348_pos, $P11, rx1348_curclass, "$!pos"
    rx1348_cur."!cursor_pass"(rx1348_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1348_cur)
  rx1348_restart3189:
    repr_get_attr_obj rx1348_cstack, rx1348_cur, rx1348_curclass, "$!cstack"
  rx1348_fail3190:
    unless rx1348_bstack, rx1348_done3188
    pop $I19, rx1348_bstack
    if_null rx1348_cstack, rx1348_cstack_done3193
    unless rx1348_cstack, rx1348_cstack_done3193
    dec $I19
    set $P11, rx1348_cstack[$I19]
  rx1348_cstack_done3193:
    pop rx1348_rep, rx1348_bstack
    pop rx1348_pos, rx1348_bstack
    pop $I19, rx1348_bstack
    lt rx1348_pos, -1, rx1348_done3188
    lt rx1348_pos, 0, rx1348_fail3190
    eq $I19, 0, rx1348_fail3190
    nqp_islist $I20, rx1348_cstack
    unless $I20, rx1348_jump3191
    elements $I18, rx1348_bstack
    le $I18, 0, rx1348_cut3192
    dec $I18
    set $I18, rx1348_bstack[$I18]
  rx1348_cut3192:
    assign rx1348_cstack, $I18
  rx1348_jump3191:
    jump $I19
  rx1348_done3188:
    rx1348_cur."!cursor_fail"()
    .return (rx1348_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_159_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1297
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1351_start
    .local string rx1351_tgt
    .local int rx1351_pos
    .local int rx1351_off
    .local int rx1351_eos
    .local int rx1351_rep
    .local pmc rx1351_cur
    .local pmc rx1351_curclass
    .local pmc rx1351_bstack
    .local pmc rx1351_cstack
    rx1351_start = self."!cursor_start_all"()
    set rx1351_cur, rx1351_start[0]
    set rx1351_tgt, rx1351_start[1]
    set rx1351_pos, rx1351_start[2]
    set rx1351_curclass, rx1351_start[3]
    set rx1351_bstack, rx1351_start[4]
    set $I19, rx1351_start[5]
    store_lex unicode:"$\x{a2}", rx1351_cur
    length rx1351_eos, rx1351_tgt
    eq $I19, 1, rx1351_restart3200
    gt rx1351_pos, rx1351_eos, rx1351_fail3201
    repr_get_attr_int $I11, self, rx1351_curclass, "$!from"
    ne $I11, -1, rxscan1352_done3207
    goto rxscan1352_scan3206
  rxscan1352_loop3205:
    inc rx1351_pos
    gt rx1351_pos, rx1351_eos, rx1351_fail3201
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!from", rx1351_pos
  rxscan1352_scan3206:
    nqp_rxmark rx1351_bstack, rxscan1352_loop3205, rx1351_pos, 0
  rxscan1352_done3207:
    ge rx1351_pos, rx1351_eos, rx1351_fail3201
    substr $S11, rx1351_tgt, rx1351_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1351_fail3201
    repr_bind_attr_int rx1351_cur, rx1351_curclass, "$!pos", rx1351_pos
    $P11 = rx1351_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1351_curclass, "$!pos"
    lt $I11, 0, rx1351_fail3201
    nqp_rxmark rx1351_bstack, rxsubrule1353_pass3208, -1, 0
  rxsubrule1353_pass3208:
    rx1351_cstack = rx1351_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1351_pos, $P11, rx1351_curclass, "$!pos"
    rx1351_cur."!cursor_pass"(rx1351_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1351_cur)
  rx1351_restart3200:
    repr_get_attr_obj rx1351_cstack, rx1351_cur, rx1351_curclass, "$!cstack"
  rx1351_fail3201:
    unless rx1351_bstack, rx1351_done3199
    pop $I19, rx1351_bstack
    if_null rx1351_cstack, rx1351_cstack_done3204
    unless rx1351_cstack, rx1351_cstack_done3204
    dec $I19
    set $P11, rx1351_cstack[$I19]
  rx1351_cstack_done3204:
    pop rx1351_rep, rx1351_bstack
    pop rx1351_pos, rx1351_bstack
    pop $I19, rx1351_bstack
    lt rx1351_pos, -1, rx1351_done3199
    lt rx1351_pos, 0, rx1351_fail3201
    eq $I19, 0, rx1351_fail3201
    nqp_islist $I20, rx1351_cstack
    unless $I20, rx1351_jump3202
    elements $I18, rx1351_bstack
    le $I18, 0, rx1351_cut3203
    dec $I18
    set $I18, rx1351_bstack[$I18]
  rx1351_cut3203:
    assign rx1351_cstack, $I18
  rx1351_jump3202:
    jump $I19
  rx1351_done3199:
    rx1351_cur."!cursor_fail"()
    .return (rx1351_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_160_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1298
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1354_start
    .local string rx1354_tgt
    .local int rx1354_pos
    .local int rx1354_off
    .local int rx1354_eos
    .local int rx1354_rep
    .local pmc rx1354_cur
    .local pmc rx1354_curclass
    .local pmc rx1354_bstack
    .local pmc rx1354_cstack
    rx1354_start = self."!cursor_start_all"()
    set rx1354_cur, rx1354_start[0]
    set rx1354_tgt, rx1354_start[1]
    set rx1354_pos, rx1354_start[2]
    set rx1354_curclass, rx1354_start[3]
    set rx1354_bstack, rx1354_start[4]
    set $I19, rx1354_start[5]
    store_lex unicode:"$\x{a2}", rx1354_cur
    length rx1354_eos, rx1354_tgt
    eq $I19, 1, rx1354_restart3211
    gt rx1354_pos, rx1354_eos, rx1354_fail3212
    repr_get_attr_int $I11, self, rx1354_curclass, "$!from"
    ne $I11, -1, rxscan1355_done3218
    goto rxscan1355_scan3217
  rxscan1355_loop3216:
    inc rx1354_pos
    gt rx1354_pos, rx1354_eos, rx1354_fail3212
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!from", rx1354_pos
  rxscan1355_scan3217:
    nqp_rxmark rx1354_bstack, rxscan1355_loop3216, rx1354_pos, 0
  rxscan1355_done3218:
    nqp_rxmark rx1354_bstack, rxcap1356_fail3220, rx1354_pos, 0
    add $I11, rx1354_pos, 1
    gt $I11, rx1354_eos, rx1354_fail3212
    substr $S10, rx1354_tgt, rx1354_pos, 1
    ne $S10, ucs4:"q", rx1354_fail3212
    add rx1354_pos, 1
    nqp_rxpeek $I19, rx1354_bstack, rxcap1356_fail3220
    inc $I19
    set $I11, rx1354_bstack[$I19]
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1354_pos)
    rx1354_cstack = rx1354_cur."!cursor_capture"($P11, "sym")
    goto rxcap1356_done3219
  rxcap1356_fail3220:
    goto rx1354_fail3212
  rxcap1356_done3219:
    le rx1354_pos, 0, rx1354_fail3212
    is_cclass $I11, .CCLASS_WORD, rx1354_tgt, rx1354_pos
    if $I11, rx1354_fail3212
    sub $I11, rx1354_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1354_tgt, $I11
    unless $I11, rx1354_fail3212
    ge rx1354_pos, rx1354_eos, rx1354_fail3212
    substr $S11, rx1354_tgt, rx1354_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1354_fail3212
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail3212
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    repr_bind_attr_int rx1354_cur, rx1354_curclass, "$!pos", rx1354_pos
    $P11 = rx1354_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1354_curclass, "$!pos"
    lt $I11, 0, rx1354_fail3212
    nqp_rxmark rx1354_bstack, rxsubrule1359_pass3223, -1, 0
  rxsubrule1359_pass3223:
    rx1354_cstack = rx1354_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1354_pos, $P11, rx1354_curclass, "$!pos"
    rx1354_cur."!cursor_pass"(rx1354_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1354_cur)
  rx1354_restart3211:
    repr_get_attr_obj rx1354_cstack, rx1354_cur, rx1354_curclass, "$!cstack"
  rx1354_fail3212:
    unless rx1354_bstack, rx1354_done3210
    pop $I19, rx1354_bstack
    if_null rx1354_cstack, rx1354_cstack_done3215
    unless rx1354_cstack, rx1354_cstack_done3215
    dec $I19
    set $P11, rx1354_cstack[$I19]
  rx1354_cstack_done3215:
    pop rx1354_rep, rx1354_bstack
    pop rx1354_pos, rx1354_bstack
    pop $I19, rx1354_bstack
    lt rx1354_pos, -1, rx1354_done3210
    lt rx1354_pos, 0, rx1354_fail3212
    eq $I19, 0, rx1354_fail3212
    nqp_islist $I20, rx1354_cstack
    unless $I20, rx1354_jump3213
    elements $I18, rx1354_bstack
    le $I18, 0, rx1354_cut3214
    dec $I18
    set $I18, rx1354_bstack[$I18]
  rx1354_cut3214:
    assign rx1354_cstack, $I18
  rx1354_jump3213:
    jump $I19
  rx1354_done3210:
    rx1354_cur."!cursor_fail"()
    .return (rx1354_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_161_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1299
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1360_start
    .local string rx1360_tgt
    .local int rx1360_pos
    .local int rx1360_off
    .local int rx1360_eos
    .local int rx1360_rep
    .local pmc rx1360_cur
    .local pmc rx1360_curclass
    .local pmc rx1360_bstack
    .local pmc rx1360_cstack
    rx1360_start = self."!cursor_start_all"()
    set rx1360_cur, rx1360_start[0]
    set rx1360_tgt, rx1360_start[1]
    set rx1360_pos, rx1360_start[2]
    set rx1360_curclass, rx1360_start[3]
    set rx1360_bstack, rx1360_start[4]
    set $I19, rx1360_start[5]
    store_lex unicode:"$\x{a2}", rx1360_cur
    length rx1360_eos, rx1360_tgt
    eq $I19, 1, rx1360_restart3226
    gt rx1360_pos, rx1360_eos, rx1360_fail3227
    repr_get_attr_int $I11, self, rx1360_curclass, "$!from"
    ne $I11, -1, rxscan1361_done3233
    goto rxscan1361_scan3232
  rxscan1361_loop3231:
    inc rx1360_pos
    gt rx1360_pos, rx1360_eos, rx1360_fail3227
    repr_bind_attr_int rx1360_cur, rx1360_curclass, "$!from", rx1360_pos
  rxscan1361_scan3232:
    nqp_rxmark rx1360_bstack, rxscan1361_loop3231, rx1360_pos, 0
  rxscan1361_done3233:
    nqp_rxmark rx1360_bstack, rxcap1362_fail3235, rx1360_pos, 0
    add $I11, rx1360_pos, 2
    gt $I11, rx1360_eos, rx1360_fail3227
    substr $S10, rx1360_tgt, rx1360_pos, 2
    ne $S10, ucs4:"qq", rx1360_fail3227
    add rx1360_pos, 2
    nqp_rxpeek $I19, rx1360_bstack, rxcap1362_fail3235
    inc $I19
    set $I11, rx1360_bstack[$I19]
    repr_bind_attr_int rx1360_cur, rx1360_curclass, "$!pos", rx1360_pos
    $P11 = rx1360_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1360_pos)
    rx1360_cstack = rx1360_cur."!cursor_capture"($P11, "sym")
    goto rxcap1362_done3234
  rxcap1362_fail3235:
    goto rx1360_fail3227
  rxcap1362_done3234:
    le rx1360_pos, 0, rx1360_fail3227
    is_cclass $I11, .CCLASS_WORD, rx1360_tgt, rx1360_pos
    if $I11, rx1360_fail3227
    sub $I11, rx1360_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1360_tgt, $I11
    unless $I11, rx1360_fail3227
    ge rx1360_pos, rx1360_eos, rx1360_fail3227
    substr $S11, rx1360_tgt, rx1360_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1360_fail3227
    repr_bind_attr_int rx1360_cur, rx1360_curclass, "$!pos", rx1360_pos
    $P11 = rx1360_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1360_curclass, "$!pos"
    lt $I11, 0, rx1360_fail3227
    repr_get_attr_int rx1360_pos, $P11, rx1360_curclass, "$!pos"
    repr_bind_attr_int rx1360_cur, rx1360_curclass, "$!pos", rx1360_pos
    $P11 = rx1360_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1360_curclass, "$!pos"
    lt $I11, 0, rx1360_fail3227
    nqp_rxmark rx1360_bstack, rxsubrule1365_pass3238, -1, 0
  rxsubrule1365_pass3238:
    rx1360_cstack = rx1360_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1360_pos, $P11, rx1360_curclass, "$!pos"
    rx1360_cur."!cursor_pass"(rx1360_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1360_cur)
  rx1360_restart3226:
    repr_get_attr_obj rx1360_cstack, rx1360_cur, rx1360_curclass, "$!cstack"
  rx1360_fail3227:
    unless rx1360_bstack, rx1360_done3225
    pop $I19, rx1360_bstack
    if_null rx1360_cstack, rx1360_cstack_done3230
    unless rx1360_cstack, rx1360_cstack_done3230
    dec $I19
    set $P11, rx1360_cstack[$I19]
  rx1360_cstack_done3230:
    pop rx1360_rep, rx1360_bstack
    pop rx1360_pos, rx1360_bstack
    pop $I19, rx1360_bstack
    lt rx1360_pos, -1, rx1360_done3225
    lt rx1360_pos, 0, rx1360_fail3227
    eq $I19, 0, rx1360_fail3227
    nqp_islist $I20, rx1360_cstack
    unless $I20, rx1360_jump3228
    elements $I18, rx1360_bstack
    le $I18, 0, rx1360_cut3229
    dec $I18
    set $I18, rx1360_bstack[$I18]
  rx1360_cut3229:
    assign rx1360_cstack, $I18
  rx1360_jump3228:
    jump $I19
  rx1360_done3225:
    rx1360_cur."!cursor_fail"()
    .return (rx1360_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_162_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1300
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1366_start
    .local string rx1366_tgt
    .local int rx1366_pos
    .local int rx1366_off
    .local int rx1366_eos
    .local int rx1366_rep
    .local pmc rx1366_cur
    .local pmc rx1366_curclass
    .local pmc rx1366_bstack
    .local pmc rx1366_cstack
    rx1366_start = self."!cursor_start_all"()
    set rx1366_cur, rx1366_start[0]
    set rx1366_tgt, rx1366_start[1]
    set rx1366_pos, rx1366_start[2]
    set rx1366_curclass, rx1366_start[3]
    set rx1366_bstack, rx1366_start[4]
    set $I19, rx1366_start[5]
    store_lex unicode:"$\x{a2}", rx1366_cur
    length rx1366_eos, rx1366_tgt
    eq $I19, 1, rx1366_restart3241
    gt rx1366_pos, rx1366_eos, rx1366_fail3242
    repr_get_attr_int $I11, self, rx1366_curclass, "$!from"
    ne $I11, -1, rxscan1367_done3248
    goto rxscan1367_scan3247
  rxscan1367_loop3246:
    inc rx1366_pos
    gt rx1366_pos, rx1366_eos, rx1366_fail3242
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!from", rx1366_pos
  rxscan1367_scan3247:
    nqp_rxmark rx1366_bstack, rxscan1367_loop3246, rx1366_pos, 0
  rxscan1367_done3248:
    nqp_rxmark rx1366_bstack, rxcap1368_fail3250, rx1366_pos, 0
    add $I11, rx1366_pos, 1
    gt $I11, rx1366_eos, rx1366_fail3242
    substr $S10, rx1366_tgt, rx1366_pos, 1
    ne $S10, ucs4:"Q", rx1366_fail3242
    add rx1366_pos, 1
    nqp_rxpeek $I19, rx1366_bstack, rxcap1368_fail3250
    inc $I19
    set $I11, rx1366_bstack[$I19]
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1366_pos)
    rx1366_cstack = rx1366_cur."!cursor_capture"($P11, "sym")
    goto rxcap1368_done3249
  rxcap1368_fail3250:
    goto rx1366_fail3242
  rxcap1368_done3249:
    le rx1366_pos, 0, rx1366_fail3242
    is_cclass $I11, .CCLASS_WORD, rx1366_tgt, rx1366_pos
    if $I11, rx1366_fail3242
    sub $I11, rx1366_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1366_tgt, $I11
    unless $I11, rx1366_fail3242
    ge rx1366_pos, rx1366_eos, rx1366_fail3242
    substr $S11, rx1366_tgt, rx1366_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1366_fail3242
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1366_curclass, "$!pos"
    lt $I11, 0, rx1366_fail3242
    repr_get_attr_int rx1366_pos, $P11, rx1366_curclass, "$!pos"
    repr_bind_attr_int rx1366_cur, rx1366_curclass, "$!pos", rx1366_pos
    $P11 = rx1366_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1366_curclass, "$!pos"
    lt $I11, 0, rx1366_fail3242
    nqp_rxmark rx1366_bstack, rxsubrule1371_pass3253, -1, 0
  rxsubrule1371_pass3253:
    rx1366_cstack = rx1366_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1366_pos, $P11, rx1366_curclass, "$!pos"
    rx1366_cur."!cursor_pass"(rx1366_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1366_cur)
  rx1366_restart3241:
    repr_get_attr_obj rx1366_cstack, rx1366_cur, rx1366_curclass, "$!cstack"
  rx1366_fail3242:
    unless rx1366_bstack, rx1366_done3240
    pop $I19, rx1366_bstack
    if_null rx1366_cstack, rx1366_cstack_done3245
    unless rx1366_cstack, rx1366_cstack_done3245
    dec $I19
    set $P11, rx1366_cstack[$I19]
  rx1366_cstack_done3245:
    pop rx1366_rep, rx1366_bstack
    pop rx1366_pos, rx1366_bstack
    pop $I19, rx1366_bstack
    lt rx1366_pos, -1, rx1366_done3240
    lt rx1366_pos, 0, rx1366_fail3242
    eq $I19, 0, rx1366_fail3242
    nqp_islist $I20, rx1366_cstack
    unless $I20, rx1366_jump3243
    elements $I18, rx1366_bstack
    le $I18, 0, rx1366_cut3244
    dec $I18
    set $I18, rx1366_bstack[$I18]
  rx1366_cut3244:
    assign rx1366_cstack, $I18
  rx1366_jump3243:
    jump $I19
  rx1366_done3240:
    rx1366_cur."!cursor_fail"()
    .return (rx1366_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_163_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1301
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1372_start
    .local string rx1372_tgt
    .local int rx1372_pos
    .local int rx1372_off
    .local int rx1372_eos
    .local int rx1372_rep
    .local pmc rx1372_cur
    .local pmc rx1372_curclass
    .local pmc rx1372_bstack
    .local pmc rx1372_cstack
    rx1372_start = self."!cursor_start_all"()
    set rx1372_cur, rx1372_start[0]
    set rx1372_tgt, rx1372_start[1]
    set rx1372_pos, rx1372_start[2]
    set rx1372_curclass, rx1372_start[3]
    set rx1372_bstack, rx1372_start[4]
    set $I19, rx1372_start[5]
    store_lex unicode:"$\x{a2}", rx1372_cur
    length rx1372_eos, rx1372_tgt
    eq $I19, 1, rx1372_restart3256
    gt rx1372_pos, rx1372_eos, rx1372_fail3257
    repr_get_attr_int $I11, self, rx1372_curclass, "$!from"
    ne $I11, -1, rxscan1373_done3263
    goto rxscan1373_scan3262
  rxscan1373_loop3261:
    inc rx1372_pos
    gt rx1372_pos, rx1372_eos, rx1372_fail3257
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!from", rx1372_pos
  rxscan1373_scan3262:
    nqp_rxmark rx1372_bstack, rxscan1373_loop3261, rx1372_pos, 0
  rxscan1373_done3263:
    nqp_rxmark rx1372_bstack, rxcap1374_fail3265, rx1372_pos, 0
    add $I11, rx1372_pos, 5
    gt $I11, rx1372_eos, rx1372_fail3257
    substr $S10, rx1372_tgt, rx1372_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1372_fail3257
    add rx1372_pos, 5
    nqp_rxpeek $I19, rx1372_bstack, rxcap1374_fail3265
    inc $I19
    set $I11, rx1372_bstack[$I19]
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1372_pos)
    rx1372_cstack = rx1372_cur."!cursor_capture"($P11, "sym")
    goto rxcap1374_done3264
  rxcap1374_fail3265:
    goto rx1372_fail3257
  rxcap1374_done3264:
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail3257
    repr_get_attr_int rx1372_pos, $P11, rx1372_curclass, "$!pos"
    repr_bind_attr_int rx1372_cur, rx1372_curclass, "$!pos", rx1372_pos
    $P11 = rx1372_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1372_curclass, "$!pos"
    lt $I11, 0, rx1372_fail3257
    nqp_rxmark rx1372_bstack, rxsubrule1376_pass3267, -1, 0
  rxsubrule1376_pass3267:
    rx1372_cstack = rx1372_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1372_pos, $P11, rx1372_curclass, "$!pos"
    rx1372_cur."!cursor_pass"(rx1372_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1372_cur)
  rx1372_restart3256:
    repr_get_attr_obj rx1372_cstack, rx1372_cur, rx1372_curclass, "$!cstack"
  rx1372_fail3257:
    unless rx1372_bstack, rx1372_done3255
    pop $I19, rx1372_bstack
    if_null rx1372_cstack, rx1372_cstack_done3260
    unless rx1372_cstack, rx1372_cstack_done3260
    dec $I19
    set $P11, rx1372_cstack[$I19]
  rx1372_cstack_done3260:
    pop rx1372_rep, rx1372_bstack
    pop rx1372_pos, rx1372_bstack
    pop $I19, rx1372_bstack
    lt rx1372_pos, -1, rx1372_done3255
    lt rx1372_pos, 0, rx1372_fail3257
    eq $I19, 0, rx1372_fail3257
    nqp_islist $I20, rx1372_cstack
    unless $I20, rx1372_jump3258
    elements $I18, rx1372_bstack
    le $I18, 0, rx1372_cut3259
    dec $I18
    set $I18, rx1372_bstack[$I18]
  rx1372_cut3259:
    assign rx1372_cstack, $I18
  rx1372_jump3258:
    jump $I19
  rx1372_done3255:
    rx1372_cur."!cursor_fail"()
    .return (rx1372_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_164_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1302
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_183 
    .local pmc pkg_viv_tmp_32 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1377_start
    .local string rx1377_tgt
    .local int rx1377_pos
    .local int rx1377_off
    .local int rx1377_eos
    .local int rx1377_rep
    .local pmc rx1377_cur
    .local pmc rx1377_curclass
    .local pmc rx1377_bstack
    .local pmc rx1377_cstack
    rx1377_start = self."!cursor_start_all"()
    set rx1377_cur, rx1377_start[0]
    set rx1377_tgt, rx1377_start[1]
    set rx1377_pos, rx1377_start[2]
    set rx1377_curclass, rx1377_start[3]
    set rx1377_bstack, rx1377_start[4]
    set $I19, rx1377_start[5]
    store_lex unicode:"$\x{a2}", rx1377_cur
    length rx1377_eos, rx1377_tgt
    eq $I19, 1, rx1377_restart3270
    gt rx1377_pos, rx1377_eos, rx1377_fail3271
    repr_get_attr_int $I11, self, rx1377_curclass, "$!from"
    ne $I11, -1, rxscan1378_done3277
    goto rxscan1378_scan3276
  rxscan1378_loop3275:
    inc rx1377_pos
    index rx1377_pos, rx1377_tgt, ucs4:"/", rx1377_pos
    eq rx1377_pos, -1, rx1377_fail3271
    gt rx1377_pos, rx1377_eos, rx1377_fail3271
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!from", rx1377_pos
  rxscan1378_scan3276:
    nqp_rxmark rx1377_bstack, rxscan1378_loop3275, rx1377_pos, 0
  rxscan1378_done3277:
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3271
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:"/", rx1377_fail3271
    add rx1377_pos, 1
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3271
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    store_lex unicode:"$\x{a2}", rx1377_cur
    unless_null $P101, fallback3279
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_32, $P5002
    set fb_tmp_183, pkg_viv_tmp_32
    repr_defined $I5001, fb_tmp_183
    unless $I5001 goto if1380_else3280 
    set $P5004, fb_tmp_183["%RX"]
    set $P5006, $P5004
    goto if1380_end3281
  if1380_else3280:
    null $P5005
    set $P5006, $P5005
  if1380_end3281:
    unless_null $P5006, vivi_13813282
    new $P5007, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5007
    set $P5006, $P5007
  vivi_13813282:
    unless_null $P5006, vivi_13823283
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_13823283:
    set $P101, $P5006
  fallback3279:
    repr_bind_attr_int rx1377_cur, rx1377_curclass, "$!pos", rx1377_pos
    $P11 = rx1377_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1377_curclass, "$!pos"
    lt $I11, 0, rx1377_fail3271
    nqp_rxmark rx1377_bstack, rxsubrule1383_pass3284, -1, 0
  rxsubrule1383_pass3284:
    rx1377_cstack = rx1377_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1377_pos, $P11, rx1377_curclass, "$!pos"
    add $I11, rx1377_pos, 1
    gt $I11, rx1377_eos, rx1377_fail3271
    substr $S10, rx1377_tgt, rx1377_pos, 1
    ne $S10, ucs4:"/", rx1377_fail3271
    add rx1377_pos, 1
    rx1377_cur."!cursor_pass"(rx1377_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1377_cur)
  rx1377_restart3270:
    repr_get_attr_obj rx1377_cstack, rx1377_cur, rx1377_curclass, "$!cstack"
  rx1377_fail3271:
    unless rx1377_bstack, rx1377_done3269
    pop $I19, rx1377_bstack
    if_null rx1377_cstack, rx1377_cstack_done3274
    unless rx1377_cstack, rx1377_cstack_done3274
    dec $I19
    set $P11, rx1377_cstack[$I19]
  rx1377_cstack_done3274:
    pop rx1377_rep, rx1377_bstack
    pop rx1377_pos, rx1377_bstack
    pop $I19, rx1377_bstack
    lt rx1377_pos, -1, rx1377_done3269
    lt rx1377_pos, 0, rx1377_fail3271
    eq $I19, 0, rx1377_fail3271
    nqp_islist $I20, rx1377_cstack
    unless $I20, rx1377_jump3272
    elements $I18, rx1377_bstack
    le $I18, 0, rx1377_cut3273
    dec $I18
    set $I18, rx1377_bstack[$I18]
  rx1377_cut3273:
    assign rx1377_cstack, $I18
  rx1377_jump3272:
    jump $I19
  rx1377_done3269:
    rx1377_cur."!cursor_fail"()
    .return (rx1377_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_165_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1310
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1384_start
    .local string rx1384_tgt
    .local int rx1384_pos
    .local int rx1384_off
    .local int rx1384_eos
    .local int rx1384_rep
    .local pmc rx1384_cur
    .local pmc rx1384_curclass
    .local pmc rx1384_bstack
    .local pmc rx1384_cstack
    rx1384_start = self."!cursor_start_all"()
    set rx1384_cur, rx1384_start[0]
    set rx1384_tgt, rx1384_start[1]
    set rx1384_pos, rx1384_start[2]
    set rx1384_curclass, rx1384_start[3]
    set rx1384_bstack, rx1384_start[4]
    set $I19, rx1384_start[5]
    store_lex unicode:"$\x{a2}", rx1384_cur
    length rx1384_eos, rx1384_tgt
    eq $I19, 1, rx1384_restart3287
    gt rx1384_pos, rx1384_eos, rx1384_fail3288
    repr_get_attr_int $I11, self, rx1384_curclass, "$!from"
    ne $I11, -1, rxscan1385_done3294
    goto rxscan1385_scan3293
  rxscan1385_loop3292:
    inc rx1384_pos
    gt rx1384_pos, rx1384_eos, rx1384_fail3288
    repr_bind_attr_int rx1384_cur, rx1384_curclass, "$!from", rx1384_pos
  rxscan1385_scan3293:
    nqp_rxmark rx1384_bstack, rxscan1385_loop3292, rx1384_pos, 0
  rxscan1385_done3294:
    ge rx1384_pos, rx1384_eos, rx1384_fail3288
    substr $S11, rx1384_tgt, rx1384_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1384_fail3288
    repr_bind_attr_int rx1384_cur, rx1384_curclass, "$!pos", rx1384_pos
    $P11 = rx1384_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1384_curclass, "$!pos"
    lt $I11, 0, rx1384_fail3288
    repr_bind_attr_int rx1384_cur, rx1384_curclass, "$!pos", rx1384_pos
    $P11 = rx1384_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1384_curclass, "$!pos"
    lt $I11, 0, rx1384_fail3288
    nqp_rxmark rx1384_bstack, rxsubrule1386_pass3295, -1, 0
  rxsubrule1386_pass3295:
    rx1384_cstack = rx1384_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1384_pos, $P11, rx1384_curclass, "$!pos"
    rx1384_cur."!cursor_pass"(rx1384_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1384_cur)
  rx1384_restart3287:
    repr_get_attr_obj rx1384_cstack, rx1384_cur, rx1384_curclass, "$!cstack"
  rx1384_fail3288:
    unless rx1384_bstack, rx1384_done3286
    pop $I19, rx1384_bstack
    if_null rx1384_cstack, rx1384_cstack_done3291
    unless rx1384_cstack, rx1384_cstack_done3291
    dec $I19
    set $P11, rx1384_cstack[$I19]
  rx1384_cstack_done3291:
    pop rx1384_rep, rx1384_bstack
    pop rx1384_pos, rx1384_bstack
    pop $I19, rx1384_bstack
    lt rx1384_pos, -1, rx1384_done3286
    lt rx1384_pos, 0, rx1384_fail3288
    eq $I19, 0, rx1384_fail3288
    nqp_islist $I20, rx1384_cstack
    unless $I20, rx1384_jump3289
    elements $I18, rx1384_bstack
    le $I18, 0, rx1384_cut3290
    dec $I18
    set $I18, rx1384_bstack[$I18]
  rx1384_cut3290:
    assign rx1384_cstack, $I18
  rx1384_jump3289:
    jump $I19
  rx1384_done3286:
    rx1384_cur."!cursor_fail"()
    .return (rx1384_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_166_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1311
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1387_start
    .local string rx1387_tgt
    .local int rx1387_pos
    .local int rx1387_off
    .local int rx1387_eos
    .local int rx1387_rep
    .local pmc rx1387_cur
    .local pmc rx1387_curclass
    .local pmc rx1387_bstack
    .local pmc rx1387_cstack
    rx1387_start = self."!cursor_start_all"()
    set rx1387_cur, rx1387_start[0]
    set rx1387_tgt, rx1387_start[1]
    set rx1387_pos, rx1387_start[2]
    set rx1387_curclass, rx1387_start[3]
    set rx1387_bstack, rx1387_start[4]
    set $I19, rx1387_start[5]
    store_lex unicode:"$\x{a2}", rx1387_cur
    length rx1387_eos, rx1387_tgt
    eq $I19, 1, rx1387_restart3298
    gt rx1387_pos, rx1387_eos, rx1387_fail3299
    repr_get_attr_int $I11, self, rx1387_curclass, "$!from"
    ne $I11, -1, rxscan1388_done3305
    goto rxscan1388_scan3304
  rxscan1388_loop3303:
    inc rx1387_pos
    gt rx1387_pos, rx1387_eos, rx1387_fail3299
    repr_bind_attr_int rx1387_cur, rx1387_curclass, "$!from", rx1387_pos
  rxscan1388_scan3304:
    nqp_rxmark rx1387_bstack, rxscan1388_loop3303, rx1387_pos, 0
  rxscan1388_done3305:
    ge rx1387_pos, rx1387_eos, rx1387_fail3299
    substr $S11, rx1387_tgt, rx1387_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1387_fail3299
    repr_bind_attr_int rx1387_cur, rx1387_curclass, "$!pos", rx1387_pos
    $P11 = rx1387_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1387_curclass, "$!pos"
    lt $I11, 0, rx1387_fail3299
    repr_bind_attr_int rx1387_cur, rx1387_curclass, "$!pos", rx1387_pos
    $P11 = rx1387_cur."block"()
    repr_get_attr_int $I11, $P11, rx1387_curclass, "$!pos"
    lt $I11, 0, rx1387_fail3299
    nqp_rxmark rx1387_bstack, rxsubrule1389_pass3306, -1, 0
  rxsubrule1389_pass3306:
    rx1387_cstack = rx1387_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1387_pos, $P11, rx1387_curclass, "$!pos"
    rx1387_cur."!cursor_pass"(rx1387_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1387_cur)
  rx1387_restart3298:
    repr_get_attr_obj rx1387_cstack, rx1387_cur, rx1387_curclass, "$!cstack"
  rx1387_fail3299:
    unless rx1387_bstack, rx1387_done3297
    pop $I19, rx1387_bstack
    if_null rx1387_cstack, rx1387_cstack_done3302
    unless rx1387_cstack, rx1387_cstack_done3302
    dec $I19
    set $P11, rx1387_cstack[$I19]
  rx1387_cstack_done3302:
    pop rx1387_rep, rx1387_bstack
    pop rx1387_pos, rx1387_bstack
    pop $I19, rx1387_bstack
    lt rx1387_pos, -1, rx1387_done3297
    lt rx1387_pos, 0, rx1387_fail3299
    eq $I19, 0, rx1387_fail3299
    nqp_islist $I20, rx1387_cstack
    unless $I20, rx1387_jump3300
    elements $I18, rx1387_bstack
    le $I18, 0, rx1387_cut3301
    dec $I18
    set $I18, rx1387_bstack[$I18]
  rx1387_cut3301:
    assign rx1387_cstack, $I18
  rx1387_jump3300:
    jump $I19
  rx1387_done3297:
    rx1387_cur."!cursor_fail"()
    .return (rx1387_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_167_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1390_start
    .local string rx1390_tgt
    .local int rx1390_pos
    .local int rx1390_off
    .local int rx1390_eos
    .local int rx1390_rep
    .local pmc rx1390_cur
    .local pmc rx1390_curclass
    .local pmc rx1390_bstack
    .local pmc rx1390_cstack
    rx1390_start = self."!cursor_start_all"()
    set rx1390_cur, rx1390_start[0]
    set rx1390_tgt, rx1390_start[1]
    set rx1390_pos, rx1390_start[2]
    set rx1390_curclass, rx1390_start[3]
    set rx1390_bstack, rx1390_start[4]
    set $I19, rx1390_start[5]
    store_lex unicode:"$\x{a2}", rx1390_cur
    length rx1390_eos, rx1390_tgt
    eq $I19, 1, rx1390_restart3309
    gt rx1390_pos, rx1390_eos, rx1390_fail3310
    repr_get_attr_int $I11, self, rx1390_curclass, "$!from"
    ne $I11, -1, rxscan1391_done3316
    goto rxscan1391_scan3315
  rxscan1391_loop3314:
    inc rx1390_pos
    gt rx1390_pos, rx1390_eos, rx1390_fail3310
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!from", rx1390_pos
  rxscan1391_scan3315:
    nqp_rxmark rx1390_bstack, rxscan1391_loop3314, rx1390_pos, 0
  rxscan1391_done3316:
    ge rx1390_pos, rx1390_eos, rx1390_fail3310
    substr $S11, rx1390_tgt, rx1390_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx1390_fail3310
    inc rx1390_pos
    add $I11, rx1390_pos, 1
    gt $I11, rx1390_eos, rx1390_fail3310
    substr $S10, rx1390_tgt, rx1390_pos, 1
    ne $S10, ucs4:"e", rx1390_fail3310
    add rx1390_pos, 1
    repr_bind_attr_int rx1390_cur, rx1390_curclass, "$!pos", rx1390_pos
    $P11 = rx1390_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1390_curclass, "$!pos"
    lt $I11, 0, rx1390_fail3310
    rx1390_cur."!cursor_pass"(rx1390_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1390_cur)
  rx1390_restart3309:
    repr_get_attr_obj rx1390_cstack, rx1390_cur, rx1390_curclass, "$!cstack"
  rx1390_fail3310:
    unless rx1390_bstack, rx1390_done3308
    pop $I19, rx1390_bstack
    if_null rx1390_cstack, rx1390_cstack_done3313
    unless rx1390_cstack, rx1390_cstack_done3313
    dec $I19
    set $P11, rx1390_cstack[$I19]
  rx1390_cstack_done3313:
    pop rx1390_rep, rx1390_bstack
    pop rx1390_pos, rx1390_bstack
    pop $I19, rx1390_bstack
    lt rx1390_pos, -1, rx1390_done3308
    lt rx1390_pos, 0, rx1390_fail3310
    eq $I19, 0, rx1390_fail3310
    nqp_islist $I20, rx1390_cstack
    unless $I20, rx1390_jump3311
    elements $I18, rx1390_bstack
    le $I18, 0, rx1390_cut3312
    dec $I18
    set $I18, rx1390_bstack[$I18]
  rx1390_cut3312:
    assign rx1390_cstack, $I18
  rx1390_jump3311:
    jump $I19
  rx1390_done3308:
    rx1390_cur."!cursor_fail"()
    .return (rx1390_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_168_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1314
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1392_start
    .local string rx1392_tgt
    .local int rx1392_pos
    .local int rx1392_off
    .local int rx1392_eos
    .local int rx1392_rep
    .local pmc rx1392_cur
    .local pmc rx1392_curclass
    .local pmc rx1392_bstack
    .local pmc rx1392_cstack
    rx1392_start = self."!cursor_start_all"()
    set rx1392_cur, rx1392_start[0]
    set rx1392_tgt, rx1392_start[1]
    set rx1392_pos, rx1392_start[2]
    set rx1392_curclass, rx1392_start[3]
    set rx1392_bstack, rx1392_start[4]
    set $I19, rx1392_start[5]
    store_lex unicode:"$\x{a2}", rx1392_cur
    length rx1392_eos, rx1392_tgt
    eq $I19, 1, rx1392_restart3319
    gt rx1392_pos, rx1392_eos, rx1392_fail3320
    repr_get_attr_int $I11, self, rx1392_curclass, "$!from"
    ne $I11, -1, rxscan1393_done3326
    goto rxscan1393_scan3325
  rxscan1393_loop3324:
    inc rx1392_pos
    index rx1392_pos, rx1392_tgt, ucs4:"(", rx1392_pos
    eq rx1392_pos, -1, rx1392_fail3320
    gt rx1392_pos, rx1392_eos, rx1392_fail3320
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!from", rx1392_pos
  rxscan1393_scan3325:
    nqp_rxmark rx1392_bstack, rxscan1393_loop3324, rx1392_pos, 0
  rxscan1393_done3326:
    add $I11, rx1392_pos, 1
    gt $I11, rx1392_eos, rx1392_fail3320
    substr $S10, rx1392_tgt, rx1392_pos, 1
    ne $S10, ucs4:"(", rx1392_fail3320
    add rx1392_pos, 1
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!pos", rx1392_pos
    $P11 = rx1392_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1392_curclass, "$!pos"
    lt $I11, 0, rx1392_fail3320
    repr_get_attr_int rx1392_pos, $P11, rx1392_curclass, "$!pos"
    nqp_rxmark rx1392_bstack, rxquantr1395_done3329, rx1392_pos, 0
  rxquantr1395_loop3328:
    repr_bind_attr_int rx1392_cur, rx1392_curclass, "$!pos", rx1392_pos
    $P11 = rx1392_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1392_curclass, "$!pos"
    lt $I11, 0, rx1392_fail3320
    goto rxsubrule1396_pass3330
  rxsubrule1396_back3331:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1392_curclass, "$!pos"
    lt $I11, 0, rx1392_fail3320
  rxsubrule1396_pass3330:
    rx1392_cstack = rx1392_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1396_back3331
    push rx1392_bstack, $I11
    push rx1392_bstack, 0
    push rx1392_bstack, rx1392_pos
    elements $I11, rx1392_cstack
    push rx1392_bstack, $I11
    repr_get_attr_int rx1392_pos, $P11, rx1392_curclass, "$!pos"
    nqp_rxpeek $I19, rx1392_bstack, rxquantr1395_done3329
    inc $I19
    inc $I19
    set rx1392_rep, rx1392_bstack[$I19]
    nqp_rxcommit rx1392_bstack, rxquantr1395_done3329
    inc rx1392_rep
  rxquantr1395_done3329:
    add $I11, rx1392_pos, 1
    gt $I11, rx1392_eos, rx1392_fail3320
    substr $S10, rx1392_tgt, rx1392_pos, 1
    ne $S10, ucs4:")", rx1392_fail3320
    add rx1392_pos, 1
    rx1392_cur."!cursor_pass"(rx1392_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1392_cur)
  rx1392_restart3319:
    repr_get_attr_obj rx1392_cstack, rx1392_cur, rx1392_curclass, "$!cstack"
  rx1392_fail3320:
    unless rx1392_bstack, rx1392_done3318
    pop $I19, rx1392_bstack
    if_null rx1392_cstack, rx1392_cstack_done3323
    unless rx1392_cstack, rx1392_cstack_done3323
    dec $I19
    set $P11, rx1392_cstack[$I19]
  rx1392_cstack_done3323:
    pop rx1392_rep, rx1392_bstack
    pop rx1392_pos, rx1392_bstack
    pop $I19, rx1392_bstack
    lt rx1392_pos, -1, rx1392_done3318
    lt rx1392_pos, 0, rx1392_fail3320
    eq $I19, 0, rx1392_fail3320
    nqp_islist $I20, rx1392_cstack
    unless $I20, rx1392_jump3321
    elements $I18, rx1392_bstack
    le $I18, 0, rx1392_cut3322
    dec $I18
    set $I18, rx1392_bstack[$I18]
  rx1392_cut3322:
    assign rx1392_cstack, $I18
  rx1392_jump3321:
    jump $I19
  rx1392_done3318:
    rx1392_cur."!cursor_fail"()
    .return (rx1392_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_169_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1315
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1397_start
    .local string rx1397_tgt
    .local int rx1397_pos
    .local int rx1397_off
    .local int rx1397_eos
    .local int rx1397_rep
    .local pmc rx1397_cur
    .local pmc rx1397_curclass
    .local pmc rx1397_bstack
    .local pmc rx1397_cstack
    rx1397_start = self."!cursor_start_all"()
    set rx1397_cur, rx1397_start[0]
    set rx1397_tgt, rx1397_start[1]
    set rx1397_pos, rx1397_start[2]
    set rx1397_curclass, rx1397_start[3]
    set rx1397_bstack, rx1397_start[4]
    set $I19, rx1397_start[5]
    store_lex unicode:"$\x{a2}", rx1397_cur
    length rx1397_eos, rx1397_tgt
    eq $I19, 1, rx1397_restart3334
    gt rx1397_pos, rx1397_eos, rx1397_fail3335
    repr_get_attr_int $I11, self, rx1397_curclass, "$!from"
    ne $I11, -1, rxscan1398_done3341
    goto rxscan1398_scan3340
  rxscan1398_loop3339:
    inc rx1397_pos
    index rx1397_pos, rx1397_tgt, ucs4:"[", rx1397_pos
    eq rx1397_pos, -1, rx1397_fail3335
    gt rx1397_pos, rx1397_eos, rx1397_fail3335
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!from", rx1397_pos
  rxscan1398_scan3340:
    nqp_rxmark rx1397_bstack, rxscan1398_loop3339, rx1397_pos, 0
  rxscan1398_done3341:
    add $I11, rx1397_pos, 1
    gt $I11, rx1397_eos, rx1397_fail3335
    substr $S10, rx1397_tgt, rx1397_pos, 1
    ne $S10, ucs4:"[", rx1397_fail3335
    add rx1397_pos, 1
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3335
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    nqp_rxmark rx1397_bstack, rxquantr1400_done3344, rx1397_pos, 0
  rxquantr1400_loop3343:
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3335
    goto rxsubrule1401_pass3345
  rxsubrule1401_back3346:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail3335
  rxsubrule1401_pass3345:
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1401_back3346
    push rx1397_bstack, $I11
    push rx1397_bstack, 0
    push rx1397_bstack, rx1397_pos
    elements $I11, rx1397_cstack
    push rx1397_bstack, $I11
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    nqp_rxpeek $I19, rx1397_bstack, rxquantr1400_done3344
    inc $I19
    inc $I19
    set rx1397_rep, rx1397_bstack[$I19]
    nqp_rxcommit rx1397_bstack, rxquantr1400_done3344
    inc rx1397_rep
  rxquantr1400_done3344:
    add $I11, rx1397_pos, 1
    gt $I11, rx1397_eos, rx1397_fail3335
    substr $S10, rx1397_tgt, rx1397_pos, 1
    ne $S10, ucs4:"]", rx1397_fail3335
    add rx1397_pos, 1
    rx1397_cur."!cursor_pass"(rx1397_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1397_cur)
  rx1397_restart3334:
    repr_get_attr_obj rx1397_cstack, rx1397_cur, rx1397_curclass, "$!cstack"
  rx1397_fail3335:
    unless rx1397_bstack, rx1397_done3333
    pop $I19, rx1397_bstack
    if_null rx1397_cstack, rx1397_cstack_done3338
    unless rx1397_cstack, rx1397_cstack_done3338
    dec $I19
    set $P11, rx1397_cstack[$I19]
  rx1397_cstack_done3338:
    pop rx1397_rep, rx1397_bstack
    pop rx1397_pos, rx1397_bstack
    pop $I19, rx1397_bstack
    lt rx1397_pos, -1, rx1397_done3333
    lt rx1397_pos, 0, rx1397_fail3335
    eq $I19, 0, rx1397_fail3335
    nqp_islist $I20, rx1397_cstack
    unless $I20, rx1397_jump3336
    elements $I18, rx1397_bstack
    le $I18, 0, rx1397_cut3337
    dec $I18
    set $I18, rx1397_bstack[$I18]
  rx1397_cut3337:
    assign rx1397_cstack, $I18
  rx1397_jump3336:
    jump $I19
  rx1397_done3333:
    rx1397_cur."!cursor_fail"()
    .return (rx1397_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_170_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1316
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1402_start
    .local string rx1402_tgt
    .local int rx1402_pos
    .local int rx1402_off
    .local int rx1402_eos
    .local int rx1402_rep
    .local pmc rx1402_cur
    .local pmc rx1402_curclass
    .local pmc rx1402_bstack
    .local pmc rx1402_cstack
    rx1402_start = self."!cursor_start_all"()
    set rx1402_cur, rx1402_start[0]
    set rx1402_tgt, rx1402_start[1]
    set rx1402_pos, rx1402_start[2]
    set rx1402_curclass, rx1402_start[3]
    set rx1402_bstack, rx1402_start[4]
    set $I19, rx1402_start[5]
    store_lex unicode:"$\x{a2}", rx1402_cur
    length rx1402_eos, rx1402_tgt
    eq $I19, 1, rx1402_restart3349
    gt rx1402_pos, rx1402_eos, rx1402_fail3350
    repr_get_attr_int $I11, self, rx1402_curclass, "$!from"
    ne $I11, -1, rxscan1403_done3356
    goto rxscan1403_scan3355
  rxscan1403_loop3354:
    inc rx1402_pos
    gt rx1402_pos, rx1402_eos, rx1402_fail3350
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!from", rx1402_pos
  rxscan1403_scan3355:
    nqp_rxmark rx1402_bstack, rxscan1403_loop3354, rx1402_pos, 0
  rxscan1403_done3356:
    ge rx1402_pos, rx1402_eos, rx1402_fail3350
    substr $S11, rx1402_tgt, rx1402_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1402_fail3350
    repr_bind_attr_int rx1402_cur, rx1402_curclass, "$!pos", rx1402_pos
    $P11 = rx1402_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1402_curclass, "$!pos"
    lt $I11, 0, rx1402_fail3350
    nqp_rxmark rx1402_bstack, rxsubrule1404_pass3357, -1, 0
  rxsubrule1404_pass3357:
    rx1402_cstack = rx1402_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1402_pos, $P11, rx1402_curclass, "$!pos"
    rx1402_cur."!cursor_pass"(rx1402_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1402_cur)
  rx1402_restart3349:
    repr_get_attr_obj rx1402_cstack, rx1402_cur, rx1402_curclass, "$!cstack"
  rx1402_fail3350:
    unless rx1402_bstack, rx1402_done3348
    pop $I19, rx1402_bstack
    if_null rx1402_cstack, rx1402_cstack_done3353
    unless rx1402_cstack, rx1402_cstack_done3353
    dec $I19
    set $P11, rx1402_cstack[$I19]
  rx1402_cstack_done3353:
    pop rx1402_rep, rx1402_bstack
    pop rx1402_pos, rx1402_bstack
    pop $I19, rx1402_bstack
    lt rx1402_pos, -1, rx1402_done3348
    lt rx1402_pos, 0, rx1402_fail3350
    eq $I19, 0, rx1402_fail3350
    nqp_islist $I20, rx1402_cstack
    unless $I20, rx1402_jump3351
    elements $I18, rx1402_bstack
    le $I18, 0, rx1402_cut3352
    dec $I18
    set $I18, rx1402_bstack[$I18]
  rx1402_cut3352:
    assign rx1402_cstack, $I18
  rx1402_jump3351:
    jump $I19
  rx1402_done3348:
    rx1402_cur."!cursor_fail"()
    .return (rx1402_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_171_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1317
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1405_start
    .local string rx1405_tgt
    .local int rx1405_pos
    .local int rx1405_off
    .local int rx1405_eos
    .local int rx1405_rep
    .local pmc rx1405_cur
    .local pmc rx1405_curclass
    .local pmc rx1405_bstack
    .local pmc rx1405_cstack
    rx1405_start = self."!cursor_start_all"()
    set rx1405_cur, rx1405_start[0]
    set rx1405_tgt, rx1405_start[1]
    set rx1405_pos, rx1405_start[2]
    set rx1405_curclass, rx1405_start[3]
    set rx1405_bstack, rx1405_start[4]
    set $I19, rx1405_start[5]
    store_lex unicode:"$\x{a2}", rx1405_cur
    length rx1405_eos, rx1405_tgt
    eq $I19, 1, rx1405_restart3360
    gt rx1405_pos, rx1405_eos, rx1405_fail3361
    repr_get_attr_int $I11, self, rx1405_curclass, "$!from"
    ne $I11, -1, rxscan1406_done3367
    goto rxscan1406_scan3366
  rxscan1406_loop3365:
    inc rx1405_pos
    gt rx1405_pos, rx1405_eos, rx1405_fail3361
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!from", rx1405_pos
  rxscan1406_scan3366:
    nqp_rxmark rx1405_bstack, rxscan1406_loop3365, rx1405_pos, 0
  rxscan1406_done3367:
    ge rx1405_pos, rx1405_eos, rx1405_fail3361
    substr $S11, rx1405_tgt, rx1405_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1405_fail3361
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!pos", rx1405_pos
    $P11 = rx1405_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1405_curclass, "$!pos"
    lt $I11, 0, rx1405_fail3361
    nqp_rxmark rx1405_bstack, rxsubrule1407_pass3368, -1, 0
  rxsubrule1407_pass3368:
    rx1405_cstack = rx1405_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1405_pos, $P11, rx1405_curclass, "$!pos"
    rx1405_cur."!cursor_pass"(rx1405_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1405_cur)
  rx1405_restart3360:
    repr_get_attr_obj rx1405_cstack, rx1405_cur, rx1405_curclass, "$!cstack"
  rx1405_fail3361:
    unless rx1405_bstack, rx1405_done3359
    pop $I19, rx1405_bstack
    if_null rx1405_cstack, rx1405_cstack_done3364
    unless rx1405_cstack, rx1405_cstack_done3364
    dec $I19
    set $P11, rx1405_cstack[$I19]
  rx1405_cstack_done3364:
    pop rx1405_rep, rx1405_bstack
    pop rx1405_pos, rx1405_bstack
    pop $I19, rx1405_bstack
    lt rx1405_pos, -1, rx1405_done3359
    lt rx1405_pos, 0, rx1405_fail3361
    eq $I19, 0, rx1405_fail3361
    nqp_islist $I20, rx1405_cstack
    unless $I20, rx1405_jump3362
    elements $I18, rx1405_bstack
    le $I18, 0, rx1405_cut3363
    dec $I18
    set $I18, rx1405_bstack[$I18]
  rx1405_cut3363:
    assign rx1405_cstack, $I18
  rx1405_jump3362:
    jump $I19
  rx1405_done3359:
    rx1405_cur."!cursor_fail"()
    .return (rx1405_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_172_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1318
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1408_start
    .local string rx1408_tgt
    .local int rx1408_pos
    .local int rx1408_off
    .local int rx1408_eos
    .local int rx1408_rep
    .local pmc rx1408_cur
    .local pmc rx1408_curclass
    .local pmc rx1408_bstack
    .local pmc rx1408_cstack
    rx1408_start = self."!cursor_start_all"()
    set rx1408_cur, rx1408_start[0]
    set rx1408_tgt, rx1408_start[1]
    set rx1408_pos, rx1408_start[2]
    set rx1408_curclass, rx1408_start[3]
    set rx1408_bstack, rx1408_start[4]
    set $I19, rx1408_start[5]
    store_lex unicode:"$\x{a2}", rx1408_cur
    length rx1408_eos, rx1408_tgt
    eq $I19, 1, rx1408_restart3371
    gt rx1408_pos, rx1408_eos, rx1408_fail3372
    repr_get_attr_int $I11, self, rx1408_curclass, "$!from"
    ne $I11, -1, rxscan1409_done3378
    goto rxscan1409_scan3377
  rxscan1409_loop3376:
    inc rx1408_pos
    gt rx1408_pos, rx1408_eos, rx1408_fail3372
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!from", rx1408_pos
  rxscan1409_scan3377:
    nqp_rxmark rx1408_bstack, rxscan1409_loop3376, rx1408_pos, 0
  rxscan1409_done3378:
    ge rx1408_pos, rx1408_eos, rx1408_fail3372
    substr $S11, rx1408_tgt, rx1408_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1408_fail3372
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail3372
    nqp_rxmark rx1408_bstack, rxsubrule1410_pass3379, -1, 0
  rxsubrule1410_pass3379:
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    rx1408_cur."!cursor_pass"(rx1408_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1408_cur)
  rx1408_restart3371:
    repr_get_attr_obj rx1408_cstack, rx1408_cur, rx1408_curclass, "$!cstack"
  rx1408_fail3372:
    unless rx1408_bstack, rx1408_done3370
    pop $I19, rx1408_bstack
    if_null rx1408_cstack, rx1408_cstack_done3375
    unless rx1408_cstack, rx1408_cstack_done3375
    dec $I19
    set $P11, rx1408_cstack[$I19]
  rx1408_cstack_done3375:
    pop rx1408_rep, rx1408_bstack
    pop rx1408_pos, rx1408_bstack
    pop $I19, rx1408_bstack
    lt rx1408_pos, -1, rx1408_done3370
    lt rx1408_pos, 0, rx1408_fail3372
    eq $I19, 0, rx1408_fail3372
    nqp_islist $I20, rx1408_cstack
    unless $I20, rx1408_jump3373
    elements $I18, rx1408_bstack
    le $I18, 0, rx1408_cut3374
    dec $I18
    set $I18, rx1408_bstack[$I18]
  rx1408_cut3374:
    assign rx1408_cstack, $I18
  rx1408_jump3373:
    jump $I19
  rx1408_done3370:
    rx1408_cur."!cursor_fail"()
    .return (rx1408_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_173_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1320
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1411_start
    .local string rx1411_tgt
    .local int rx1411_pos
    .local int rx1411_off
    .local int rx1411_eos
    .local int rx1411_rep
    .local pmc rx1411_cur
    .local pmc rx1411_curclass
    .local pmc rx1411_bstack
    .local pmc rx1411_cstack
    rx1411_start = self."!cursor_start_all"()
    set rx1411_cur, rx1411_start[0]
    set rx1411_tgt, rx1411_start[1]
    set rx1411_pos, rx1411_start[2]
    set rx1411_curclass, rx1411_start[3]
    set rx1411_bstack, rx1411_start[4]
    set $I19, rx1411_start[5]
    store_lex unicode:"$\x{a2}", rx1411_cur
    length rx1411_eos, rx1411_tgt
    eq $I19, 1, rx1411_restart3382
    gt rx1411_pos, rx1411_eos, rx1411_fail3383
    repr_get_attr_int $I11, self, rx1411_curclass, "$!from"
    ne $I11, -1, rxscan1412_done3389
    goto rxscan1412_scan3388
  rxscan1412_loop3387:
    inc rx1411_pos
    gt rx1411_pos, rx1411_eos, rx1411_fail3383
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!from", rx1411_pos
  rxscan1412_scan3388:
    nqp_rxmark rx1411_bstack, rxscan1412_loop3387, rx1411_pos, 0
  rxscan1412_done3389:
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3383
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3383
    nqp_rxmark rx1411_bstack, rxsubrule1414_pass3391, -1, 0
  rxsubrule1414_pass3391:
    rx1411_cstack = rx1411_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    repr_bind_attr_int rx1411_cur, rx1411_curclass, "$!pos", rx1411_pos
    $P11 = rx1411_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1411_curclass, "$!pos"
    lt $I11, 0, rx1411_fail3383
    repr_get_attr_int rx1411_pos, $P11, rx1411_curclass, "$!pos"
    rx1411_cur."!cursor_pass"(rx1411_pos, "semilist", 'backtrack'=>1)
    .return (rx1411_cur)
  rx1411_restart3382:
    repr_get_attr_obj rx1411_cstack, rx1411_cur, rx1411_curclass, "$!cstack"
  rx1411_fail3383:
    unless rx1411_bstack, rx1411_done3381
    pop $I19, rx1411_bstack
    if_null rx1411_cstack, rx1411_cstack_done3386
    unless rx1411_cstack, rx1411_cstack_done3386
    dec $I19
    set $P11, rx1411_cstack[$I19]
  rx1411_cstack_done3386:
    pop rx1411_rep, rx1411_bstack
    pop rx1411_pos, rx1411_bstack
    pop $I19, rx1411_bstack
    lt rx1411_pos, -1, rx1411_done3381
    lt rx1411_pos, 0, rx1411_fail3383
    eq $I19, 0, rx1411_fail3383
    nqp_islist $I20, rx1411_cstack
    unless $I20, rx1411_jump3384
    elements $I18, rx1411_bstack
    le $I18, 0, rx1411_cut3385
    dec $I18
    set $I18, rx1411_bstack[$I18]
  rx1411_cut3385:
    assign rx1411_cstack, $I18
  rx1411_jump3384:
    jump $I19
  rx1411_done3381:
    rx1411_cur."!cursor_fail"()
    .return (rx1411_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_174_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1343
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1416_start
    .local string rx1416_tgt
    .local int rx1416_pos
    .local int rx1416_off
    .local int rx1416_eos
    .local int rx1416_rep
    .local pmc rx1416_cur
    .local pmc rx1416_curclass
    .local pmc rx1416_bstack
    .local pmc rx1416_cstack
    rx1416_start = self."!cursor_start_all"()
    set rx1416_cur, rx1416_start[0]
    set rx1416_tgt, rx1416_start[1]
    set rx1416_pos, rx1416_start[2]
    set rx1416_curclass, rx1416_start[3]
    set rx1416_bstack, rx1416_start[4]
    set $I19, rx1416_start[5]
    store_lex unicode:"$\x{a2}", rx1416_cur
    length rx1416_eos, rx1416_tgt
    eq $I19, 1, rx1416_restart3395
    gt rx1416_pos, rx1416_eos, rx1416_fail3396
    repr_get_attr_int $I11, self, rx1416_curclass, "$!from"
    ne $I11, -1, rxscan1417_done3402
    goto rxscan1417_scan3401
  rxscan1417_loop3400:
    inc rx1416_pos
    gt rx1416_pos, rx1416_eos, rx1416_fail3396
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!from", rx1416_pos
  rxscan1417_scan3401:
    nqp_rxmark rx1416_bstack, rxscan1417_loop3400, rx1416_pos, 0
  rxscan1417_done3402:
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!pos", rx1416_pos
    $P11 = rx1416_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1416_curclass, "$!pos"
    ge $I11, 0, rx1416_fail3396
    repr_bind_attr_int rx1416_cur, rx1416_curclass, "$!pos", rx1416_pos
    $P11 = rx1416_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1416_curclass, "$!pos"
    lt $I11, 0, rx1416_fail3396
    nqp_rxmark rx1416_bstack, rxsubrule1418_pass3403, -1, 0
  rxsubrule1418_pass3403:
    rx1416_cstack = rx1416_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1416_pos, $P11, rx1416_curclass, "$!pos"
    rx1416_cur."!cursor_pass"(rx1416_pos, "infixish", 'backtrack'=>1)
    .return (rx1416_cur)
  rx1416_restart3395:
    repr_get_attr_obj rx1416_cstack, rx1416_cur, rx1416_curclass, "$!cstack"
  rx1416_fail3396:
    unless rx1416_bstack, rx1416_done3394
    pop $I19, rx1416_bstack
    if_null rx1416_cstack, rx1416_cstack_done3399
    unless rx1416_cstack, rx1416_cstack_done3399
    dec $I19
    set $P11, rx1416_cstack[$I19]
  rx1416_cstack_done3399:
    pop rx1416_rep, rx1416_bstack
    pop rx1416_pos, rx1416_bstack
    pop $I19, rx1416_bstack
    lt rx1416_pos, -1, rx1416_done3394
    lt rx1416_pos, 0, rx1416_fail3396
    eq $I19, 0, rx1416_fail3396
    nqp_islist $I20, rx1416_cstack
    unless $I20, rx1416_jump3397
    elements $I18, rx1416_bstack
    le $I18, 0, rx1416_cut3398
    dec $I18
    set $I18, rx1416_bstack[$I18]
  rx1416_cut3398:
    assign rx1416_cstack, $I18
  rx1416_jump3397:
    jump $I19
  rx1416_done3394:
    rx1416_cur."!cursor_fail"()
    .return (rx1416_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_175_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1344
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1419_start
    .local string rx1419_tgt
    .local int rx1419_pos
    .local int rx1419_off
    .local int rx1419_eos
    .local int rx1419_rep
    .local pmc rx1419_cur
    .local pmc rx1419_curclass
    .local pmc rx1419_bstack
    .local pmc rx1419_cstack
    rx1419_start = self."!cursor_start_all"()
    set rx1419_cur, rx1419_start[0]
    set rx1419_tgt, rx1419_start[1]
    set rx1419_pos, rx1419_start[2]
    set rx1419_curclass, rx1419_start[3]
    set rx1419_bstack, rx1419_start[4]
    set $I19, rx1419_start[5]
    store_lex unicode:"$\x{a2}", rx1419_cur
    length rx1419_eos, rx1419_tgt
    eq $I19, 1, rx1419_restart3406
    gt rx1419_pos, rx1419_eos, rx1419_fail3407
    repr_get_attr_int $I11, self, rx1419_curclass, "$!from"
    ne $I11, -1, rxscan1420_done3413
    goto rxscan1420_scan3412
  rxscan1420_loop3411:
    inc rx1419_pos
    gt rx1419_pos, rx1419_eos, rx1419_fail3407
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!from", rx1419_pos
  rxscan1420_scan3412:
    nqp_rxmark rx1419_bstack, rxscan1420_loop3411, rx1419_pos, 0
  rxscan1420_done3413:
    repr_bind_attr_int rx1419_cur, rx1419_curclass, "$!pos", rx1419_pos
    $P11 = rx1419_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1419_curclass, "$!pos"
    lt $I11, 0, rx1419_fail3407
    rx1419_cur."!cursor_pass"(rx1419_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1419_cur)
  rx1419_restart3406:
    repr_get_attr_obj rx1419_cstack, rx1419_cur, rx1419_curclass, "$!cstack"
  rx1419_fail3407:
    unless rx1419_bstack, rx1419_done3405
    pop $I19, rx1419_bstack
    if_null rx1419_cstack, rx1419_cstack_done3410
    unless rx1419_cstack, rx1419_cstack_done3410
    dec $I19
    set $P11, rx1419_cstack[$I19]
  rx1419_cstack_done3410:
    pop rx1419_rep, rx1419_bstack
    pop rx1419_pos, rx1419_bstack
    pop $I19, rx1419_bstack
    lt rx1419_pos, -1, rx1419_done3405
    lt rx1419_pos, 0, rx1419_fail3407
    eq $I19, 0, rx1419_fail3407
    nqp_islist $I20, rx1419_cstack
    unless $I20, rx1419_jump3408
    elements $I18, rx1419_bstack
    le $I18, 0, rx1419_cut3409
    dec $I18
    set $I18, rx1419_bstack[$I18]
  rx1419_cut3409:
    assign rx1419_cstack, $I18
  rx1419_jump3408:
    jump $I19
  rx1419_done3405:
    rx1419_cur."!cursor_fail"()
    .return (rx1419_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_176_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1346
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1421_start
    .local string rx1421_tgt
    .local int rx1421_pos
    .local int rx1421_off
    .local int rx1421_eos
    .local int rx1421_rep
    .local pmc rx1421_cur
    .local pmc rx1421_curclass
    .local pmc rx1421_bstack
    .local pmc rx1421_cstack
    rx1421_start = self."!cursor_start_all"()
    set rx1421_cur, rx1421_start[0]
    set rx1421_tgt, rx1421_start[1]
    set rx1421_pos, rx1421_start[2]
    set rx1421_curclass, rx1421_start[3]
    set rx1421_bstack, rx1421_start[4]
    set $I19, rx1421_start[5]
    store_lex unicode:"$\x{a2}", rx1421_cur
    length rx1421_eos, rx1421_tgt
    eq $I19, 1, rx1421_restart3416
    gt rx1421_pos, rx1421_eos, rx1421_fail3417
    repr_get_attr_int $I11, self, rx1421_curclass, "$!from"
    ne $I11, -1, rxscan1422_done3423
    goto rxscan1422_scan3422
  rxscan1422_loop3421:
    inc rx1421_pos
    index rx1421_pos, rx1421_tgt, ucs4:"[", rx1421_pos
    eq rx1421_pos, -1, rx1421_fail3417
    gt rx1421_pos, rx1421_eos, rx1421_fail3417
    repr_bind_attr_int rx1421_cur, rx1421_curclass, "$!from", rx1421_pos
  rxscan1422_scan3422:
    nqp_rxmark rx1421_bstack, rxscan1422_loop3421, rx1421_pos, 0
  rxscan1422_done3423:
    add $I11, rx1421_pos, 1
    gt $I11, rx1421_eos, rx1421_fail3417
    substr $S10, rx1421_tgt, rx1421_pos, 1
    ne $S10, ucs4:"[", rx1421_fail3417
    add rx1421_pos, 1
    repr_bind_attr_int rx1421_cur, rx1421_curclass, "$!pos", rx1421_pos
    $P11 = rx1421_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1421_curclass, "$!pos"
    lt $I11, 0, rx1421_fail3417
    repr_get_attr_int rx1421_pos, $P11, rx1421_curclass, "$!pos"
    repr_bind_attr_int rx1421_cur, rx1421_curclass, "$!pos", rx1421_pos
    $P11 = rx1421_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1421_curclass, "$!pos"
    lt $I11, 0, rx1421_fail3417
    nqp_rxmark rx1421_bstack, rxsubrule1424_pass3425, -1, 0
  rxsubrule1424_pass3425:
    rx1421_cstack = rx1421_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1421_pos, $P11, rx1421_curclass, "$!pos"
    add $I11, rx1421_pos, 1
    gt $I11, rx1421_eos, rx1421_fail3417
    substr $S10, rx1421_tgt, rx1421_pos, 1
    ne $S10, ucs4:"]", rx1421_fail3417
    add rx1421_pos, 1
    repr_bind_attr_int rx1421_cur, rx1421_curclass, "$!pos", rx1421_pos
    $P11 = rx1421_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1421_curclass, "$!pos"
    lt $I11, 0, rx1421_fail3417
    nqp_rxmark rx1421_bstack, rxsubrule1425_pass3426, -1, 0
  rxsubrule1425_pass3426:
    rx1421_cstack = rx1421_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1421_pos, $P11, rx1421_curclass, "$!pos"
    rx1421_cur."!cursor_pass"(rx1421_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1421_cur)
  rx1421_restart3416:
    repr_get_attr_obj rx1421_cstack, rx1421_cur, rx1421_curclass, "$!cstack"
  rx1421_fail3417:
    unless rx1421_bstack, rx1421_done3415
    pop $I19, rx1421_bstack
    if_null rx1421_cstack, rx1421_cstack_done3420
    unless rx1421_cstack, rx1421_cstack_done3420
    dec $I19
    set $P11, rx1421_cstack[$I19]
  rx1421_cstack_done3420:
    pop rx1421_rep, rx1421_bstack
    pop rx1421_pos, rx1421_bstack
    pop $I19, rx1421_bstack
    lt rx1421_pos, -1, rx1421_done3415
    lt rx1421_pos, 0, rx1421_fail3417
    eq $I19, 0, rx1421_fail3417
    nqp_islist $I20, rx1421_cstack
    unless $I20, rx1421_jump3418
    elements $I18, rx1421_bstack
    le $I18, 0, rx1421_cut3419
    dec $I18
    set $I18, rx1421_bstack[$I18]
  rx1421_cut3419:
    assign rx1421_cstack, $I18
  rx1421_jump3418:
    jump $I19
  rx1421_done3415:
    rx1421_cur."!cursor_fail"()
    .return (rx1421_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_177_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1351
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1426_start
    .local string rx1426_tgt
    .local int rx1426_pos
    .local int rx1426_off
    .local int rx1426_eos
    .local int rx1426_rep
    .local pmc rx1426_cur
    .local pmc rx1426_curclass
    .local pmc rx1426_bstack
    .local pmc rx1426_cstack
    rx1426_start = self."!cursor_start_all"()
    set rx1426_cur, rx1426_start[0]
    set rx1426_tgt, rx1426_start[1]
    set rx1426_pos, rx1426_start[2]
    set rx1426_curclass, rx1426_start[3]
    set rx1426_bstack, rx1426_start[4]
    set $I19, rx1426_start[5]
    store_lex unicode:"$\x{a2}", rx1426_cur
    length rx1426_eos, rx1426_tgt
    eq $I19, 1, rx1426_restart3429
    gt rx1426_pos, rx1426_eos, rx1426_fail3430
    repr_get_attr_int $I11, self, rx1426_curclass, "$!from"
    ne $I11, -1, rxscan1427_done3436
    goto rxscan1427_scan3435
  rxscan1427_loop3434:
    inc rx1426_pos
    index rx1426_pos, rx1426_tgt, ucs4:"{", rx1426_pos
    eq rx1426_pos, -1, rx1426_fail3430
    gt rx1426_pos, rx1426_eos, rx1426_fail3430
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!from", rx1426_pos
  rxscan1427_scan3435:
    nqp_rxmark rx1426_bstack, rxscan1427_loop3434, rx1426_pos, 0
  rxscan1427_done3436:
    add $I11, rx1426_pos, 1
    gt $I11, rx1426_eos, rx1426_fail3430
    substr $S10, rx1426_tgt, rx1426_pos, 1
    ne $S10, ucs4:"{", rx1426_fail3430
    add rx1426_pos, 1
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!pos", rx1426_pos
    $P11 = rx1426_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1426_curclass, "$!pos"
    lt $I11, 0, rx1426_fail3430
    repr_get_attr_int rx1426_pos, $P11, rx1426_curclass, "$!pos"
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!pos", rx1426_pos
    $P11 = rx1426_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1426_curclass, "$!pos"
    lt $I11, 0, rx1426_fail3430
    nqp_rxmark rx1426_bstack, rxsubrule1429_pass3438, -1, 0
  rxsubrule1429_pass3438:
    rx1426_cstack = rx1426_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1426_pos, $P11, rx1426_curclass, "$!pos"
    add $I11, rx1426_pos, 1
    gt $I11, rx1426_eos, rx1426_fail3430
    substr $S10, rx1426_tgt, rx1426_pos, 1
    ne $S10, ucs4:"}", rx1426_fail3430
    add rx1426_pos, 1
    repr_bind_attr_int rx1426_cur, rx1426_curclass, "$!pos", rx1426_pos
    $P11 = rx1426_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1426_curclass, "$!pos"
    lt $I11, 0, rx1426_fail3430
    nqp_rxmark rx1426_bstack, rxsubrule1430_pass3439, -1, 0
  rxsubrule1430_pass3439:
    rx1426_cstack = rx1426_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1426_pos, $P11, rx1426_curclass, "$!pos"
    rx1426_cur."!cursor_pass"(rx1426_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1426_cur)
  rx1426_restart3429:
    repr_get_attr_obj rx1426_cstack, rx1426_cur, rx1426_curclass, "$!cstack"
  rx1426_fail3430:
    unless rx1426_bstack, rx1426_done3428
    pop $I19, rx1426_bstack
    if_null rx1426_cstack, rx1426_cstack_done3433
    unless rx1426_cstack, rx1426_cstack_done3433
    dec $I19
    set $P11, rx1426_cstack[$I19]
  rx1426_cstack_done3433:
    pop rx1426_rep, rx1426_bstack
    pop rx1426_pos, rx1426_bstack
    pop $I19, rx1426_bstack
    lt rx1426_pos, -1, rx1426_done3428
    lt rx1426_pos, 0, rx1426_fail3430
    eq $I19, 0, rx1426_fail3430
    nqp_islist $I20, rx1426_cstack
    unless $I20, rx1426_jump3431
    elements $I18, rx1426_bstack
    le $I18, 0, rx1426_cut3432
    dec $I18
    set $I18, rx1426_bstack[$I18]
  rx1426_cut3432:
    assign rx1426_cstack, $I18
  rx1426_jump3431:
    jump $I19
  rx1426_done3428:
    rx1426_cur."!cursor_fail"()
    .return (rx1426_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_178_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1356
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1431_start
    .local string rx1431_tgt
    .local int rx1431_pos
    .local int rx1431_off
    .local int rx1431_eos
    .local int rx1431_rep
    .local pmc rx1431_cur
    .local pmc rx1431_curclass
    .local pmc rx1431_bstack
    .local pmc rx1431_cstack
    rx1431_start = self."!cursor_start_all"()
    set rx1431_cur, rx1431_start[0]
    set rx1431_tgt, rx1431_start[1]
    set rx1431_pos, rx1431_start[2]
    set rx1431_curclass, rx1431_start[3]
    set rx1431_bstack, rx1431_start[4]
    set $I19, rx1431_start[5]
    store_lex unicode:"$\x{a2}", rx1431_cur
    length rx1431_eos, rx1431_tgt
    eq $I19, 1, rx1431_restart3442
    gt rx1431_pos, rx1431_eos, rx1431_fail3443
    repr_get_attr_int $I11, self, rx1431_curclass, "$!from"
    ne $I11, -1, rxscan1432_done3449
    goto rxscan1432_scan3448
  rxscan1432_loop3447:
    inc rx1431_pos
    gt rx1431_pos, rx1431_eos, rx1431_fail3443
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!from", rx1431_pos
  rxscan1432_scan3448:
    nqp_rxmark rx1431_bstack, rxscan1432_loop3447, rx1431_pos, 0
  rxscan1432_done3449:
    ge rx1431_pos, rx1431_eos, rx1431_fail3443
    substr $S11, rx1431_tgt, rx1431_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1431_fail3443
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!pos", rx1431_pos
    $P11 = rx1431_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1431_curclass, "$!pos"
    lt $I11, 0, rx1431_fail3443
    nqp_rxmark rx1431_bstack, rxsubrule1433_pass3450, -1, 0
  rxsubrule1433_pass3450:
    rx1431_cstack = rx1431_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1431_pos, $P11, rx1431_curclass, "$!pos"
    repr_bind_attr_int rx1431_cur, rx1431_curclass, "$!pos", rx1431_pos
    $P11 = rx1431_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1431_curclass, "$!pos"
    lt $I11, 0, rx1431_fail3443
    nqp_rxmark rx1431_bstack, rxsubrule1434_pass3451, -1, 0
  rxsubrule1434_pass3451:
    rx1431_cstack = rx1431_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1431_pos, $P11, rx1431_curclass, "$!pos"
    rx1431_cur."!cursor_pass"(rx1431_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1431_cur)
  rx1431_restart3442:
    repr_get_attr_obj rx1431_cstack, rx1431_cur, rx1431_curclass, "$!cstack"
  rx1431_fail3443:
    unless rx1431_bstack, rx1431_done3441
    pop $I19, rx1431_bstack
    if_null rx1431_cstack, rx1431_cstack_done3446
    unless rx1431_cstack, rx1431_cstack_done3446
    dec $I19
    set $P11, rx1431_cstack[$I19]
  rx1431_cstack_done3446:
    pop rx1431_rep, rx1431_bstack
    pop rx1431_pos, rx1431_bstack
    pop $I19, rx1431_bstack
    lt rx1431_pos, -1, rx1431_done3441
    lt rx1431_pos, 0, rx1431_fail3443
    eq $I19, 0, rx1431_fail3443
    nqp_islist $I20, rx1431_cstack
    unless $I20, rx1431_jump3444
    elements $I18, rx1431_bstack
    le $I18, 0, rx1431_cut3445
    dec $I18
    set $I18, rx1431_bstack[$I18]
  rx1431_cut3445:
    assign rx1431_cstack, $I18
  rx1431_jump3444:
    jump $I19
  rx1431_done3441:
    rx1431_cur."!cursor_fail"()
    .return (rx1431_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_179_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1435_start
    .local string rx1435_tgt
    .local int rx1435_pos
    .local int rx1435_off
    .local int rx1435_eos
    .local int rx1435_rep
    .local pmc rx1435_cur
    .local pmc rx1435_curclass
    .local pmc rx1435_bstack
    .local pmc rx1435_cstack
    rx1435_start = self."!cursor_start_all"()
    set rx1435_cur, rx1435_start[0]
    set rx1435_tgt, rx1435_start[1]
    set rx1435_pos, rx1435_start[2]
    set rx1435_curclass, rx1435_start[3]
    set rx1435_bstack, rx1435_start[4]
    set $I19, rx1435_start[5]
    store_lex unicode:"$\x{a2}", rx1435_cur
    length rx1435_eos, rx1435_tgt
    eq $I19, 1, rx1435_restart3454
    gt rx1435_pos, rx1435_eos, rx1435_fail3455
    repr_get_attr_int $I11, self, rx1435_curclass, "$!from"
    ne $I11, -1, rxscan1436_done3461
    goto rxscan1436_scan3460
  rxscan1436_loop3459:
    inc rx1435_pos
    index rx1435_pos, rx1435_tgt, ucs4:"(", rx1435_pos
    eq rx1435_pos, -1, rx1435_fail3455
    gt rx1435_pos, rx1435_eos, rx1435_fail3455
    repr_bind_attr_int rx1435_cur, rx1435_curclass, "$!from", rx1435_pos
  rxscan1436_scan3460:
    nqp_rxmark rx1435_bstack, rxscan1436_loop3459, rx1435_pos, 0
  rxscan1436_done3461:
    add $I11, rx1435_pos, 1
    gt $I11, rx1435_eos, rx1435_fail3455
    substr $S10, rx1435_tgt, rx1435_pos, 1
    ne $S10, ucs4:"(", rx1435_fail3455
    add rx1435_pos, 1
    repr_bind_attr_int rx1435_cur, rx1435_curclass, "$!pos", rx1435_pos
    $P11 = rx1435_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1435_curclass, "$!pos"
    lt $I11, 0, rx1435_fail3455
    repr_get_attr_int rx1435_pos, $P11, rx1435_curclass, "$!pos"
    repr_bind_attr_int rx1435_cur, rx1435_curclass, "$!pos", rx1435_pos
    $P11 = rx1435_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1435_curclass, "$!pos"
    lt $I11, 0, rx1435_fail3455
    nqp_rxmark rx1435_bstack, rxsubrule1438_pass3463, -1, 0
  rxsubrule1438_pass3463:
    rx1435_cstack = rx1435_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1435_pos, $P11, rx1435_curclass, "$!pos"
    add $I11, rx1435_pos, 1
    gt $I11, rx1435_eos, rx1435_fail3455
    substr $S10, rx1435_tgt, rx1435_pos, 1
    ne $S10, ucs4:")", rx1435_fail3455
    add rx1435_pos, 1
    repr_bind_attr_int rx1435_cur, rx1435_curclass, "$!pos", rx1435_pos
    $P11 = rx1435_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1435_curclass, "$!pos"
    lt $I11, 0, rx1435_fail3455
    nqp_rxmark rx1435_bstack, rxsubrule1439_pass3464, -1, 0
  rxsubrule1439_pass3464:
    rx1435_cstack = rx1435_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1435_pos, $P11, rx1435_curclass, "$!pos"
    rx1435_cur."!cursor_pass"(rx1435_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1435_cur)
  rx1435_restart3454:
    repr_get_attr_obj rx1435_cstack, rx1435_cur, rx1435_curclass, "$!cstack"
  rx1435_fail3455:
    unless rx1435_bstack, rx1435_done3453
    pop $I19, rx1435_bstack
    if_null rx1435_cstack, rx1435_cstack_done3458
    unless rx1435_cstack, rx1435_cstack_done3458
    dec $I19
    set $P11, rx1435_cstack[$I19]
  rx1435_cstack_done3458:
    pop rx1435_rep, rx1435_bstack
    pop rx1435_pos, rx1435_bstack
    pop $I19, rx1435_bstack
    lt rx1435_pos, -1, rx1435_done3453
    lt rx1435_pos, 0, rx1435_fail3455
    eq $I19, 0, rx1435_fail3455
    nqp_islist $I20, rx1435_cstack
    unless $I20, rx1435_jump3456
    elements $I18, rx1435_bstack
    le $I18, 0, rx1435_cut3457
    dec $I18
    set $I18, rx1435_bstack[$I18]
  rx1435_cut3457:
    assign rx1435_cstack, $I18
  rx1435_jump3456:
    jump $I19
  rx1435_done3453:
    rx1435_cur."!cursor_fail"()
    .return (rx1435_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_180_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1440_start
    .local string rx1440_tgt
    .local int rx1440_pos
    .local int rx1440_off
    .local int rx1440_eos
    .local int rx1440_rep
    .local pmc rx1440_cur
    .local pmc rx1440_curclass
    .local pmc rx1440_bstack
    .local pmc rx1440_cstack
    rx1440_start = self."!cursor_start_all"()
    set rx1440_cur, rx1440_start[0]
    set rx1440_tgt, rx1440_start[1]
    set rx1440_pos, rx1440_start[2]
    set rx1440_curclass, rx1440_start[3]
    set rx1440_bstack, rx1440_start[4]
    set $I19, rx1440_start[5]
    store_lex unicode:"$\x{a2}", rx1440_cur
    length rx1440_eos, rx1440_tgt
    eq $I19, 1, rx1440_restart3467
    gt rx1440_pos, rx1440_eos, rx1440_fail3468
    repr_get_attr_int $I11, self, rx1440_curclass, "$!from"
    ne $I11, -1, rxscan1441_done3474
    goto rxscan1441_scan3473
  rxscan1441_loop3472:
    inc rx1440_pos
    gt rx1440_pos, rx1440_eos, rx1440_fail3468
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!from", rx1440_pos
  rxscan1441_scan3473:
    nqp_rxmark rx1440_bstack, rxscan1441_loop3472, rx1440_pos, 0
  rxscan1441_done3474:
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!pos", rx1440_pos
    $P11 = rx1440_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1440_curclass, "$!pos"
    lt $I11, 0, rx1440_fail3468
    nqp_rxmark rx1440_bstack, rxsubrule1442_pass3475, -1, 0
  rxsubrule1442_pass3475:
    rx1440_cstack = rx1440_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1440_pos, $P11, rx1440_curclass, "$!pos"
    repr_bind_attr_int rx1440_cur, rx1440_curclass, "$!pos", rx1440_pos
    $P11 = rx1440_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1440_curclass, "$!pos"
    lt $I11, 0, rx1440_fail3468
    nqp_rxmark rx1440_bstack, rxsubrule1443_pass3476, -1, 0
  rxsubrule1443_pass3476:
    rx1440_cstack = rx1440_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1440_pos, $P11, rx1440_curclass, "$!pos"
    rx1440_cur."!cursor_pass"(rx1440_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1440_cur)
  rx1440_restart3467:
    repr_get_attr_obj rx1440_cstack, rx1440_cur, rx1440_curclass, "$!cstack"
  rx1440_fail3468:
    unless rx1440_bstack, rx1440_done3466
    pop $I19, rx1440_bstack
    if_null rx1440_cstack, rx1440_cstack_done3471
    unless rx1440_cstack, rx1440_cstack_done3471
    dec $I19
    set $P11, rx1440_cstack[$I19]
  rx1440_cstack_done3471:
    pop rx1440_rep, rx1440_bstack
    pop rx1440_pos, rx1440_bstack
    pop $I19, rx1440_bstack
    lt rx1440_pos, -1, rx1440_done3466
    lt rx1440_pos, 0, rx1440_fail3468
    eq $I19, 0, rx1440_fail3468
    nqp_islist $I20, rx1440_cstack
    unless $I20, rx1440_jump3469
    elements $I18, rx1440_bstack
    le $I18, 0, rx1440_cut3470
    dec $I18
    set $I18, rx1440_bstack[$I18]
  rx1440_cut3470:
    assign rx1440_cstack, $I18
  rx1440_jump3469:
    jump $I19
  rx1440_done3466:
    rx1440_cur."!cursor_fail"()
    .return (rx1440_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_181_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1444_start
    .local string rx1444_tgt
    .local int rx1444_pos
    .local int rx1444_off
    .local int rx1444_eos
    .local int rx1444_rep
    .local pmc rx1444_cur
    .local pmc rx1444_curclass
    .local pmc rx1444_bstack
    .local pmc rx1444_cstack
    rx1444_start = self."!cursor_start_all"()
    set rx1444_cur, rx1444_start[0]
    set rx1444_tgt, rx1444_start[1]
    set rx1444_pos, rx1444_start[2]
    set rx1444_curclass, rx1444_start[3]
    set rx1444_bstack, rx1444_start[4]
    set $I19, rx1444_start[5]
    store_lex unicode:"$\x{a2}", rx1444_cur
    length rx1444_eos, rx1444_tgt
    eq $I19, 1, rx1444_restart3479
    gt rx1444_pos, rx1444_eos, rx1444_fail3480
    repr_get_attr_int $I11, self, rx1444_curclass, "$!from"
    ne $I11, -1, rxscan1445_done3486
    goto rxscan1445_scan3485
  rxscan1445_loop3484:
    inc rx1444_pos
    gt rx1444_pos, rx1444_eos, rx1444_fail3480
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!from", rx1444_pos
  rxscan1445_scan3485:
    nqp_rxmark rx1444_bstack, rxscan1445_loop3484, rx1444_pos, 0
  rxscan1445_done3486:
    nqp_rxmark rx1444_bstack, rxcap1446_fail3488, rx1444_pos, 0
    add $I11, rx1444_pos, 2
    gt $I11, rx1444_eos, rx1444_fail3480
    substr $S10, rx1444_tgt, rx1444_pos, 2
    ne $S10, ucs4:"++", rx1444_fail3480
    add rx1444_pos, 2
    nqp_rxpeek $I19, rx1444_bstack, rxcap1446_fail3488
    inc $I19
    set $I11, rx1444_bstack[$I19]
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!pos", rx1444_pos
    $P11 = rx1444_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1444_pos)
    rx1444_cstack = rx1444_cur."!cursor_capture"($P11, "sym")
    goto rxcap1446_done3487
  rxcap1446_fail3488:
    goto rx1444_fail3480
  rxcap1446_done3487:
    repr_bind_attr_int rx1444_cur, rx1444_curclass, "$!pos", rx1444_pos
    $P11 = rx1444_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1444_curclass, "$!pos"
    lt $I11, 0, rx1444_fail3480
    nqp_rxmark rx1444_bstack, rxsubrule1447_pass3489, -1, 0
  rxsubrule1447_pass3489:
    rx1444_cstack = rx1444_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1444_pos, $P11, rx1444_curclass, "$!pos"
    rx1444_cur."!cursor_pass"(rx1444_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1444_cur)
  rx1444_restart3479:
    repr_get_attr_obj rx1444_cstack, rx1444_cur, rx1444_curclass, "$!cstack"
  rx1444_fail3480:
    unless rx1444_bstack, rx1444_done3478
    pop $I19, rx1444_bstack
    if_null rx1444_cstack, rx1444_cstack_done3483
    unless rx1444_cstack, rx1444_cstack_done3483
    dec $I19
    set $P11, rx1444_cstack[$I19]
  rx1444_cstack_done3483:
    pop rx1444_rep, rx1444_bstack
    pop rx1444_pos, rx1444_bstack
    pop $I19, rx1444_bstack
    lt rx1444_pos, -1, rx1444_done3478
    lt rx1444_pos, 0, rx1444_fail3480
    eq $I19, 0, rx1444_fail3480
    nqp_islist $I20, rx1444_cstack
    unless $I20, rx1444_jump3481
    elements $I18, rx1444_bstack
    le $I18, 0, rx1444_cut3482
    dec $I18
    set $I18, rx1444_bstack[$I18]
  rx1444_cut3482:
    assign rx1444_cstack, $I18
  rx1444_jump3481:
    jump $I19
  rx1444_done3478:
    rx1444_cur."!cursor_fail"()
    .return (rx1444_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_182_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1448_start
    .local string rx1448_tgt
    .local int rx1448_pos
    .local int rx1448_off
    .local int rx1448_eos
    .local int rx1448_rep
    .local pmc rx1448_cur
    .local pmc rx1448_curclass
    .local pmc rx1448_bstack
    .local pmc rx1448_cstack
    rx1448_start = self."!cursor_start_all"()
    set rx1448_cur, rx1448_start[0]
    set rx1448_tgt, rx1448_start[1]
    set rx1448_pos, rx1448_start[2]
    set rx1448_curclass, rx1448_start[3]
    set rx1448_bstack, rx1448_start[4]
    set $I19, rx1448_start[5]
    store_lex unicode:"$\x{a2}", rx1448_cur
    length rx1448_eos, rx1448_tgt
    eq $I19, 1, rx1448_restart3492
    gt rx1448_pos, rx1448_eos, rx1448_fail3493
    repr_get_attr_int $I11, self, rx1448_curclass, "$!from"
    ne $I11, -1, rxscan1449_done3499
    goto rxscan1449_scan3498
  rxscan1449_loop3497:
    inc rx1448_pos
    gt rx1448_pos, rx1448_eos, rx1448_fail3493
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!from", rx1448_pos
  rxscan1449_scan3498:
    nqp_rxmark rx1448_bstack, rxscan1449_loop3497, rx1448_pos, 0
  rxscan1449_done3499:
    nqp_rxmark rx1448_bstack, rxcap1450_fail3501, rx1448_pos, 0
    add $I11, rx1448_pos, 2
    gt $I11, rx1448_eos, rx1448_fail3493
    substr $S10, rx1448_tgt, rx1448_pos, 2
    ne $S10, ucs4:"--", rx1448_fail3493
    add rx1448_pos, 2
    nqp_rxpeek $I19, rx1448_bstack, rxcap1450_fail3501
    inc $I19
    set $I11, rx1448_bstack[$I19]
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!pos", rx1448_pos
    $P11 = rx1448_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1448_pos)
    rx1448_cstack = rx1448_cur."!cursor_capture"($P11, "sym")
    goto rxcap1450_done3500
  rxcap1450_fail3501:
    goto rx1448_fail3493
  rxcap1450_done3500:
    repr_bind_attr_int rx1448_cur, rx1448_curclass, "$!pos", rx1448_pos
    $P11 = rx1448_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1448_curclass, "$!pos"
    lt $I11, 0, rx1448_fail3493
    nqp_rxmark rx1448_bstack, rxsubrule1451_pass3502, -1, 0
  rxsubrule1451_pass3502:
    rx1448_cstack = rx1448_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1448_pos, $P11, rx1448_curclass, "$!pos"
    rx1448_cur."!cursor_pass"(rx1448_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1448_cur)
  rx1448_restart3492:
    repr_get_attr_obj rx1448_cstack, rx1448_cur, rx1448_curclass, "$!cstack"
  rx1448_fail3493:
    unless rx1448_bstack, rx1448_done3491
    pop $I19, rx1448_bstack
    if_null rx1448_cstack, rx1448_cstack_done3496
    unless rx1448_cstack, rx1448_cstack_done3496
    dec $I19
    set $P11, rx1448_cstack[$I19]
  rx1448_cstack_done3496:
    pop rx1448_rep, rx1448_bstack
    pop rx1448_pos, rx1448_bstack
    pop $I19, rx1448_bstack
    lt rx1448_pos, -1, rx1448_done3491
    lt rx1448_pos, 0, rx1448_fail3493
    eq $I19, 0, rx1448_fail3493
    nqp_islist $I20, rx1448_cstack
    unless $I20, rx1448_jump3494
    elements $I18, rx1448_bstack
    le $I18, 0, rx1448_cut3495
    dec $I18
    set $I18, rx1448_bstack[$I18]
  rx1448_cut3495:
    assign rx1448_cstack, $I18
  rx1448_jump3494:
    jump $I19
  rx1448_done3491:
    rx1448_cur."!cursor_fail"()
    .return (rx1448_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_183_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1371
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1452_start
    .local string rx1452_tgt
    .local int rx1452_pos
    .local int rx1452_off
    .local int rx1452_eos
    .local int rx1452_rep
    .local pmc rx1452_cur
    .local pmc rx1452_curclass
    .local pmc rx1452_bstack
    .local pmc rx1452_cstack
    rx1452_start = self."!cursor_start_all"()
    set rx1452_cur, rx1452_start[0]
    set rx1452_tgt, rx1452_start[1]
    set rx1452_pos, rx1452_start[2]
    set rx1452_curclass, rx1452_start[3]
    set rx1452_bstack, rx1452_start[4]
    set $I19, rx1452_start[5]
    store_lex unicode:"$\x{a2}", rx1452_cur
    length rx1452_eos, rx1452_tgt
    eq $I19, 1, rx1452_restart3505
    gt rx1452_pos, rx1452_eos, rx1452_fail3506
    repr_get_attr_int $I11, self, rx1452_curclass, "$!from"
    ne $I11, -1, rxscan1453_done3512
    goto rxscan1453_scan3511
  rxscan1453_loop3510:
    inc rx1452_pos
    gt rx1452_pos, rx1452_eos, rx1452_fail3506
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!from", rx1452_pos
  rxscan1453_scan3511:
    nqp_rxmark rx1452_bstack, rxscan1453_loop3510, rx1452_pos, 0
  rxscan1453_done3512:
    nqp_rxmark rx1452_bstack, rxcap1454_fail3514, rx1452_pos, 0
    add $I11, rx1452_pos, 2
    gt $I11, rx1452_eos, rx1452_fail3506
    substr $S10, rx1452_tgt, rx1452_pos, 2
    ne $S10, ucs4:"++", rx1452_fail3506
    add rx1452_pos, 2
    nqp_rxpeek $I19, rx1452_bstack, rxcap1454_fail3514
    inc $I19
    set $I11, rx1452_bstack[$I19]
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1452_pos)
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "sym")
    goto rxcap1454_done3513
  rxcap1454_fail3514:
    goto rx1452_fail3506
  rxcap1454_done3513:
    repr_bind_attr_int rx1452_cur, rx1452_curclass, "$!pos", rx1452_pos
    $P11 = rx1452_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1452_curclass, "$!pos"
    lt $I11, 0, rx1452_fail3506
    nqp_rxmark rx1452_bstack, rxsubrule1455_pass3515, -1, 0
  rxsubrule1455_pass3515:
    rx1452_cstack = rx1452_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1452_pos, $P11, rx1452_curclass, "$!pos"
    rx1452_cur."!cursor_pass"(rx1452_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1452_cur)
  rx1452_restart3505:
    repr_get_attr_obj rx1452_cstack, rx1452_cur, rx1452_curclass, "$!cstack"
  rx1452_fail3506:
    unless rx1452_bstack, rx1452_done3504
    pop $I19, rx1452_bstack
    if_null rx1452_cstack, rx1452_cstack_done3509
    unless rx1452_cstack, rx1452_cstack_done3509
    dec $I19
    set $P11, rx1452_cstack[$I19]
  rx1452_cstack_done3509:
    pop rx1452_rep, rx1452_bstack
    pop rx1452_pos, rx1452_bstack
    pop $I19, rx1452_bstack
    lt rx1452_pos, -1, rx1452_done3504
    lt rx1452_pos, 0, rx1452_fail3506
    eq $I19, 0, rx1452_fail3506
    nqp_islist $I20, rx1452_cstack
    unless $I20, rx1452_jump3507
    elements $I18, rx1452_bstack
    le $I18, 0, rx1452_cut3508
    dec $I18
    set $I18, rx1452_bstack[$I18]
  rx1452_cut3508:
    assign rx1452_cstack, $I18
  rx1452_jump3507:
    jump $I19
  rx1452_done3504:
    rx1452_cur."!cursor_fail"()
    .return (rx1452_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_184_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1456_start
    .local string rx1456_tgt
    .local int rx1456_pos
    .local int rx1456_off
    .local int rx1456_eos
    .local int rx1456_rep
    .local pmc rx1456_cur
    .local pmc rx1456_curclass
    .local pmc rx1456_bstack
    .local pmc rx1456_cstack
    rx1456_start = self."!cursor_start_all"()
    set rx1456_cur, rx1456_start[0]
    set rx1456_tgt, rx1456_start[1]
    set rx1456_pos, rx1456_start[2]
    set rx1456_curclass, rx1456_start[3]
    set rx1456_bstack, rx1456_start[4]
    set $I19, rx1456_start[5]
    store_lex unicode:"$\x{a2}", rx1456_cur
    length rx1456_eos, rx1456_tgt
    eq $I19, 1, rx1456_restart3518
    gt rx1456_pos, rx1456_eos, rx1456_fail3519
    repr_get_attr_int $I11, self, rx1456_curclass, "$!from"
    ne $I11, -1, rxscan1457_done3525
    goto rxscan1457_scan3524
  rxscan1457_loop3523:
    inc rx1456_pos
    gt rx1456_pos, rx1456_eos, rx1456_fail3519
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!from", rx1456_pos
  rxscan1457_scan3524:
    nqp_rxmark rx1456_bstack, rxscan1457_loop3523, rx1456_pos, 0
  rxscan1457_done3525:
    nqp_rxmark rx1456_bstack, rxcap1458_fail3527, rx1456_pos, 0
    add $I11, rx1456_pos, 2
    gt $I11, rx1456_eos, rx1456_fail3519
    substr $S10, rx1456_tgt, rx1456_pos, 2
    ne $S10, ucs4:"--", rx1456_fail3519
    add rx1456_pos, 2
    nqp_rxpeek $I19, rx1456_bstack, rxcap1458_fail3527
    inc $I19
    set $I11, rx1456_bstack[$I19]
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1456_pos)
    rx1456_cstack = rx1456_cur."!cursor_capture"($P11, "sym")
    goto rxcap1458_done3526
  rxcap1458_fail3527:
    goto rx1456_fail3519
  rxcap1458_done3526:
    repr_bind_attr_int rx1456_cur, rx1456_curclass, "$!pos", rx1456_pos
    $P11 = rx1456_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1456_curclass, "$!pos"
    lt $I11, 0, rx1456_fail3519
    nqp_rxmark rx1456_bstack, rxsubrule1459_pass3528, -1, 0
  rxsubrule1459_pass3528:
    rx1456_cstack = rx1456_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1456_pos, $P11, rx1456_curclass, "$!pos"
    rx1456_cur."!cursor_pass"(rx1456_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1456_cur)
  rx1456_restart3518:
    repr_get_attr_obj rx1456_cstack, rx1456_cur, rx1456_curclass, "$!cstack"
  rx1456_fail3519:
    unless rx1456_bstack, rx1456_done3517
    pop $I19, rx1456_bstack
    if_null rx1456_cstack, rx1456_cstack_done3522
    unless rx1456_cstack, rx1456_cstack_done3522
    dec $I19
    set $P11, rx1456_cstack[$I19]
  rx1456_cstack_done3522:
    pop rx1456_rep, rx1456_bstack
    pop rx1456_pos, rx1456_bstack
    pop $I19, rx1456_bstack
    lt rx1456_pos, -1, rx1456_done3517
    lt rx1456_pos, 0, rx1456_fail3519
    eq $I19, 0, rx1456_fail3519
    nqp_islist $I20, rx1456_cstack
    unless $I20, rx1456_jump3520
    elements $I18, rx1456_bstack
    le $I18, 0, rx1456_cut3521
    dec $I18
    set $I18, rx1456_bstack[$I18]
  rx1456_cut3521:
    assign rx1456_cstack, $I18
  rx1456_jump3520:
    jump $I19
  rx1456_done3517:
    rx1456_cur."!cursor_fail"()
    .return (rx1456_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_185_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1460_start
    .local string rx1460_tgt
    .local int rx1460_pos
    .local int rx1460_off
    .local int rx1460_eos
    .local int rx1460_rep
    .local pmc rx1460_cur
    .local pmc rx1460_curclass
    .local pmc rx1460_bstack
    .local pmc rx1460_cstack
    rx1460_start = self."!cursor_start_all"()
    set rx1460_cur, rx1460_start[0]
    set rx1460_tgt, rx1460_start[1]
    set rx1460_pos, rx1460_start[2]
    set rx1460_curclass, rx1460_start[3]
    set rx1460_bstack, rx1460_start[4]
    set $I19, rx1460_start[5]
    store_lex unicode:"$\x{a2}", rx1460_cur
    length rx1460_eos, rx1460_tgt
    eq $I19, 1, rx1460_restart3531
    gt rx1460_pos, rx1460_eos, rx1460_fail3532
    repr_get_attr_int $I11, self, rx1460_curclass, "$!from"
    ne $I11, -1, rxscan1461_done3538
    goto rxscan1461_scan3537
  rxscan1461_loop3536:
    inc rx1460_pos
    gt rx1460_pos, rx1460_eos, rx1460_fail3532
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!from", rx1460_pos
  rxscan1461_scan3537:
    nqp_rxmark rx1460_bstack, rxscan1461_loop3536, rx1460_pos, 0
  rxscan1461_done3538:
    nqp_rxmark rx1460_bstack, rxcap1462_fail3540, rx1460_pos, 0
    add $I11, rx1460_pos, 2
    gt $I11, rx1460_eos, rx1460_fail3532
    substr $S10, rx1460_tgt, rx1460_pos, 2
    ne $S10, ucs4:"**", rx1460_fail3532
    add rx1460_pos, 2
    nqp_rxpeek $I19, rx1460_bstack, rxcap1462_fail3540
    inc $I19
    set $I11, rx1460_bstack[$I19]
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!pos", rx1460_pos
    $P11 = rx1460_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1460_pos)
    rx1460_cstack = rx1460_cur."!cursor_capture"($P11, "sym")
    goto rxcap1462_done3539
  rxcap1462_fail3540:
    goto rx1460_fail3532
  rxcap1462_done3539:
    repr_bind_attr_int rx1460_cur, rx1460_curclass, "$!pos", rx1460_pos
    $P11 = rx1460_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1460_curclass, "$!pos"
    lt $I11, 0, rx1460_fail3532
    nqp_rxmark rx1460_bstack, rxsubrule1463_pass3541, -1, 0
  rxsubrule1463_pass3541:
    rx1460_cstack = rx1460_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1460_pos, $P11, rx1460_curclass, "$!pos"
    rx1460_cur."!cursor_pass"(rx1460_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1460_cur)
  rx1460_restart3531:
    repr_get_attr_obj rx1460_cstack, rx1460_cur, rx1460_curclass, "$!cstack"
  rx1460_fail3532:
    unless rx1460_bstack, rx1460_done3530
    pop $I19, rx1460_bstack
    if_null rx1460_cstack, rx1460_cstack_done3535
    unless rx1460_cstack, rx1460_cstack_done3535
    dec $I19
    set $P11, rx1460_cstack[$I19]
  rx1460_cstack_done3535:
    pop rx1460_rep, rx1460_bstack
    pop rx1460_pos, rx1460_bstack
    pop $I19, rx1460_bstack
    lt rx1460_pos, -1, rx1460_done3530
    lt rx1460_pos, 0, rx1460_fail3532
    eq $I19, 0, rx1460_fail3532
    nqp_islist $I20, rx1460_cstack
    unless $I20, rx1460_jump3533
    elements $I18, rx1460_bstack
    le $I18, 0, rx1460_cut3534
    dec $I18
    set $I18, rx1460_bstack[$I18]
  rx1460_cut3534:
    assign rx1460_cstack, $I18
  rx1460_jump3533:
    jump $I19
  rx1460_done3530:
    rx1460_cur."!cursor_fail"()
    .return (rx1460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_186_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1376
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1464_start
    .local string rx1464_tgt
    .local int rx1464_pos
    .local int rx1464_off
    .local int rx1464_eos
    .local int rx1464_rep
    .local pmc rx1464_cur
    .local pmc rx1464_curclass
    .local pmc rx1464_bstack
    .local pmc rx1464_cstack
    rx1464_start = self."!cursor_start_all"()
    set rx1464_cur, rx1464_start[0]
    set rx1464_tgt, rx1464_start[1]
    set rx1464_pos, rx1464_start[2]
    set rx1464_curclass, rx1464_start[3]
    set rx1464_bstack, rx1464_start[4]
    set $I19, rx1464_start[5]
    store_lex unicode:"$\x{a2}", rx1464_cur
    length rx1464_eos, rx1464_tgt
    eq $I19, 1, rx1464_restart3544
    gt rx1464_pos, rx1464_eos, rx1464_fail3545
    repr_get_attr_int $I11, self, rx1464_curclass, "$!from"
    ne $I11, -1, rxscan1465_done3551
    goto rxscan1465_scan3550
  rxscan1465_loop3549:
    inc rx1464_pos
    gt rx1464_pos, rx1464_eos, rx1464_fail3545
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!from", rx1464_pos
  rxscan1465_scan3550:
    nqp_rxmark rx1464_bstack, rxscan1465_loop3549, rx1464_pos, 0
  rxscan1465_done3551:
    nqp_rxmark rx1464_bstack, rxcap1466_fail3553, rx1464_pos, 0
    add $I11, rx1464_pos, 1
    gt $I11, rx1464_eos, rx1464_fail3545
    substr $S10, rx1464_tgt, rx1464_pos, 1
    ne $S10, ucs4:"+", rx1464_fail3545
    add rx1464_pos, 1
    nqp_rxpeek $I19, rx1464_bstack, rxcap1466_fail3553
    inc $I19
    set $I11, rx1464_bstack[$I19]
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1464_pos)
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "sym")
    goto rxcap1466_done3552
  rxcap1466_fail3553:
    goto rx1464_fail3545
  rxcap1466_done3552:
    repr_bind_attr_int rx1464_cur, rx1464_curclass, "$!pos", rx1464_pos
    $P11 = rx1464_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1464_curclass, "$!pos"
    lt $I11, 0, rx1464_fail3545
    nqp_rxmark rx1464_bstack, rxsubrule1467_pass3554, -1, 0
  rxsubrule1467_pass3554:
    rx1464_cstack = rx1464_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1464_pos, $P11, rx1464_curclass, "$!pos"
    rx1464_cur."!cursor_pass"(rx1464_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1464_cur)
  rx1464_restart3544:
    repr_get_attr_obj rx1464_cstack, rx1464_cur, rx1464_curclass, "$!cstack"
  rx1464_fail3545:
    unless rx1464_bstack, rx1464_done3543
    pop $I19, rx1464_bstack
    if_null rx1464_cstack, rx1464_cstack_done3548
    unless rx1464_cstack, rx1464_cstack_done3548
    dec $I19
    set $P11, rx1464_cstack[$I19]
  rx1464_cstack_done3548:
    pop rx1464_rep, rx1464_bstack
    pop rx1464_pos, rx1464_bstack
    pop $I19, rx1464_bstack
    lt rx1464_pos, -1, rx1464_done3543
    lt rx1464_pos, 0, rx1464_fail3545
    eq $I19, 0, rx1464_fail3545
    nqp_islist $I20, rx1464_cstack
    unless $I20, rx1464_jump3546
    elements $I18, rx1464_bstack
    le $I18, 0, rx1464_cut3547
    dec $I18
    set $I18, rx1464_bstack[$I18]
  rx1464_cut3547:
    assign rx1464_cstack, $I18
  rx1464_jump3546:
    jump $I19
  rx1464_done3543:
    rx1464_cur."!cursor_fail"()
    .return (rx1464_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_187_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1468_start
    .local string rx1468_tgt
    .local int rx1468_pos
    .local int rx1468_off
    .local int rx1468_eos
    .local int rx1468_rep
    .local pmc rx1468_cur
    .local pmc rx1468_curclass
    .local pmc rx1468_bstack
    .local pmc rx1468_cstack
    rx1468_start = self."!cursor_start_all"()
    set rx1468_cur, rx1468_start[0]
    set rx1468_tgt, rx1468_start[1]
    set rx1468_pos, rx1468_start[2]
    set rx1468_curclass, rx1468_start[3]
    set rx1468_bstack, rx1468_start[4]
    set $I19, rx1468_start[5]
    store_lex unicode:"$\x{a2}", rx1468_cur
    length rx1468_eos, rx1468_tgt
    eq $I19, 1, rx1468_restart3557
    gt rx1468_pos, rx1468_eos, rx1468_fail3558
    repr_get_attr_int $I11, self, rx1468_curclass, "$!from"
    ne $I11, -1, rxscan1469_done3564
    goto rxscan1469_scan3563
  rxscan1469_loop3562:
    inc rx1468_pos
    gt rx1468_pos, rx1468_eos, rx1468_fail3558
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!from", rx1468_pos
  rxscan1469_scan3563:
    nqp_rxmark rx1468_bstack, rxscan1469_loop3562, rx1468_pos, 0
  rxscan1469_done3564:
    nqp_rxmark rx1468_bstack, rxcap1470_fail3566, rx1468_pos, 0
    add $I11, rx1468_pos, 1
    gt $I11, rx1468_eos, rx1468_fail3558
    substr $S10, rx1468_tgt, rx1468_pos, 1
    ne $S10, ucs4:"~", rx1468_fail3558
    add rx1468_pos, 1
    nqp_rxpeek $I19, rx1468_bstack, rxcap1470_fail3566
    inc $I19
    set $I11, rx1468_bstack[$I19]
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1468_pos)
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "sym")
    goto rxcap1470_done3565
  rxcap1470_fail3566:
    goto rx1468_fail3558
  rxcap1470_done3565:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3558
    nqp_rxmark rx1468_bstack, rxsubrule1471_pass3567, -1, 0
  rxsubrule1471_pass3567:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    rx1468_cur."!cursor_pass"(rx1468_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1468_cur)
  rx1468_restart3557:
    repr_get_attr_obj rx1468_cstack, rx1468_cur, rx1468_curclass, "$!cstack"
  rx1468_fail3558:
    unless rx1468_bstack, rx1468_done3556
    pop $I19, rx1468_bstack
    if_null rx1468_cstack, rx1468_cstack_done3561
    unless rx1468_cstack, rx1468_cstack_done3561
    dec $I19
    set $P11, rx1468_cstack[$I19]
  rx1468_cstack_done3561:
    pop rx1468_rep, rx1468_bstack
    pop rx1468_pos, rx1468_bstack
    pop $I19, rx1468_bstack
    lt rx1468_pos, -1, rx1468_done3556
    lt rx1468_pos, 0, rx1468_fail3558
    eq $I19, 0, rx1468_fail3558
    nqp_islist $I20, rx1468_cstack
    unless $I20, rx1468_jump3559
    elements $I18, rx1468_bstack
    le $I18, 0, rx1468_cut3560
    dec $I18
    set $I18, rx1468_bstack[$I18]
  rx1468_cut3560:
    assign rx1468_cstack, $I18
  rx1468_jump3559:
    jump $I19
  rx1468_done3556:
    rx1468_cur."!cursor_fail"()
    .return (rx1468_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_188_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1472_start
    .local string rx1472_tgt
    .local int rx1472_pos
    .local int rx1472_off
    .local int rx1472_eos
    .local int rx1472_rep
    .local pmc rx1472_cur
    .local pmc rx1472_curclass
    .local pmc rx1472_bstack
    .local pmc rx1472_cstack
    rx1472_start = self."!cursor_start_all"()
    set rx1472_cur, rx1472_start[0]
    set rx1472_tgt, rx1472_start[1]
    set rx1472_pos, rx1472_start[2]
    set rx1472_curclass, rx1472_start[3]
    set rx1472_bstack, rx1472_start[4]
    set $I19, rx1472_start[5]
    store_lex unicode:"$\x{a2}", rx1472_cur
    length rx1472_eos, rx1472_tgt
    eq $I19, 1, rx1472_restart3570
    gt rx1472_pos, rx1472_eos, rx1472_fail3571
    repr_get_attr_int $I11, self, rx1472_curclass, "$!from"
    ne $I11, -1, rxscan1473_done3577
    goto rxscan1473_scan3576
  rxscan1473_loop3575:
    inc rx1472_pos
    gt rx1472_pos, rx1472_eos, rx1472_fail3571
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!from", rx1472_pos
  rxscan1473_scan3576:
    nqp_rxmark rx1472_bstack, rxscan1473_loop3575, rx1472_pos, 0
  rxscan1473_done3577:
    nqp_rxmark rx1472_bstack, rxcap1474_fail3579, rx1472_pos, 0
    add $I11, rx1472_pos, 1
    gt $I11, rx1472_eos, rx1472_fail3571
    substr $S10, rx1472_tgt, rx1472_pos, 1
    ne $S10, ucs4:"-", rx1472_fail3571
    add rx1472_pos, 1
    nqp_rxpeek $I19, rx1472_bstack, rxcap1474_fail3579
    inc $I19
    set $I11, rx1472_bstack[$I19]
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1472_pos)
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "sym")
    goto rxcap1474_done3578
  rxcap1474_fail3579:
    goto rx1472_fail3571
  rxcap1474_done3578:
    ge rx1472_pos, rx1472_eos, rx1472_fail3571
    substr $S11, rx1472_tgt, rx1472_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1472_fail3571
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."number"()
    repr_get_attr_int $I11, $P11, rx1472_curclass, "$!pos"
    ge $I11, 0, rx1472_fail3571
    repr_bind_attr_int rx1472_cur, rx1472_curclass, "$!pos", rx1472_pos
    $P11 = rx1472_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1472_curclass, "$!pos"
    lt $I11, 0, rx1472_fail3571
    nqp_rxmark rx1472_bstack, rxsubrule1475_pass3580, -1, 0
  rxsubrule1475_pass3580:
    rx1472_cstack = rx1472_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1472_pos, $P11, rx1472_curclass, "$!pos"
    rx1472_cur."!cursor_pass"(rx1472_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1472_cur)
  rx1472_restart3570:
    repr_get_attr_obj rx1472_cstack, rx1472_cur, rx1472_curclass, "$!cstack"
  rx1472_fail3571:
    unless rx1472_bstack, rx1472_done3569
    pop $I19, rx1472_bstack
    if_null rx1472_cstack, rx1472_cstack_done3574
    unless rx1472_cstack, rx1472_cstack_done3574
    dec $I19
    set $P11, rx1472_cstack[$I19]
  rx1472_cstack_done3574:
    pop rx1472_rep, rx1472_bstack
    pop rx1472_pos, rx1472_bstack
    pop $I19, rx1472_bstack
    lt rx1472_pos, -1, rx1472_done3569
    lt rx1472_pos, 0, rx1472_fail3571
    eq $I19, 0, rx1472_fail3571
    nqp_islist $I20, rx1472_cstack
    unless $I20, rx1472_jump3572
    elements $I18, rx1472_bstack
    le $I18, 0, rx1472_cut3573
    dec $I18
    set $I18, rx1472_bstack[$I18]
  rx1472_cut3573:
    assign rx1472_cstack, $I18
  rx1472_jump3572:
    jump $I19
  rx1472_done3569:
    rx1472_cur."!cursor_fail"()
    .return (rx1472_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_189_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1476_start
    .local string rx1476_tgt
    .local int rx1476_pos
    .local int rx1476_off
    .local int rx1476_eos
    .local int rx1476_rep
    .local pmc rx1476_cur
    .local pmc rx1476_curclass
    .local pmc rx1476_bstack
    .local pmc rx1476_cstack
    rx1476_start = self."!cursor_start_all"()
    set rx1476_cur, rx1476_start[0]
    set rx1476_tgt, rx1476_start[1]
    set rx1476_pos, rx1476_start[2]
    set rx1476_curclass, rx1476_start[3]
    set rx1476_bstack, rx1476_start[4]
    set $I19, rx1476_start[5]
    store_lex unicode:"$\x{a2}", rx1476_cur
    length rx1476_eos, rx1476_tgt
    eq $I19, 1, rx1476_restart3583
    gt rx1476_pos, rx1476_eos, rx1476_fail3584
    repr_get_attr_int $I11, self, rx1476_curclass, "$!from"
    ne $I11, -1, rxscan1477_done3590
    goto rxscan1477_scan3589
  rxscan1477_loop3588:
    inc rx1476_pos
    gt rx1476_pos, rx1476_eos, rx1476_fail3584
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!from", rx1476_pos
  rxscan1477_scan3589:
    nqp_rxmark rx1476_bstack, rxscan1477_loop3588, rx1476_pos, 0
  rxscan1477_done3590:
    nqp_rxmark rx1476_bstack, rxcap1478_fail3592, rx1476_pos, 0
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3584
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"?", rx1476_fail3584
    add rx1476_pos, 1
    nqp_rxpeek $I19, rx1476_bstack, rxcap1478_fail3592
    inc $I19
    set $I11, rx1476_bstack[$I19]
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1476_pos)
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "sym")
    goto rxcap1478_done3591
  rxcap1478_fail3592:
    goto rx1476_fail3584
  rxcap1478_done3591:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3584
    nqp_rxmark rx1476_bstack, rxsubrule1479_pass3593, -1, 0
  rxsubrule1479_pass3593:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    rx1476_cur."!cursor_pass"(rx1476_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1476_cur)
  rx1476_restart3583:
    repr_get_attr_obj rx1476_cstack, rx1476_cur, rx1476_curclass, "$!cstack"
  rx1476_fail3584:
    unless rx1476_bstack, rx1476_done3582
    pop $I19, rx1476_bstack
    if_null rx1476_cstack, rx1476_cstack_done3587
    unless rx1476_cstack, rx1476_cstack_done3587
    dec $I19
    set $P11, rx1476_cstack[$I19]
  rx1476_cstack_done3587:
    pop rx1476_rep, rx1476_bstack
    pop rx1476_pos, rx1476_bstack
    pop $I19, rx1476_bstack
    lt rx1476_pos, -1, rx1476_done3582
    lt rx1476_pos, 0, rx1476_fail3584
    eq $I19, 0, rx1476_fail3584
    nqp_islist $I20, rx1476_cstack
    unless $I20, rx1476_jump3585
    elements $I18, rx1476_bstack
    le $I18, 0, rx1476_cut3586
    dec $I18
    set $I18, rx1476_bstack[$I18]
  rx1476_cut3586:
    assign rx1476_cstack, $I18
  rx1476_jump3585:
    jump $I19
  rx1476_done3582:
    rx1476_cur."!cursor_fail"()
    .return (rx1476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_190_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1480_start
    .local string rx1480_tgt
    .local int rx1480_pos
    .local int rx1480_off
    .local int rx1480_eos
    .local int rx1480_rep
    .local pmc rx1480_cur
    .local pmc rx1480_curclass
    .local pmc rx1480_bstack
    .local pmc rx1480_cstack
    rx1480_start = self."!cursor_start_all"()
    set rx1480_cur, rx1480_start[0]
    set rx1480_tgt, rx1480_start[1]
    set rx1480_pos, rx1480_start[2]
    set rx1480_curclass, rx1480_start[3]
    set rx1480_bstack, rx1480_start[4]
    set $I19, rx1480_start[5]
    store_lex unicode:"$\x{a2}", rx1480_cur
    length rx1480_eos, rx1480_tgt
    eq $I19, 1, rx1480_restart3596
    gt rx1480_pos, rx1480_eos, rx1480_fail3597
    repr_get_attr_int $I11, self, rx1480_curclass, "$!from"
    ne $I11, -1, rxscan1481_done3603
    goto rxscan1481_scan3602
  rxscan1481_loop3601:
    inc rx1480_pos
    gt rx1480_pos, rx1480_eos, rx1480_fail3597
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!from", rx1480_pos
  rxscan1481_scan3602:
    nqp_rxmark rx1480_bstack, rxscan1481_loop3601, rx1480_pos, 0
  rxscan1481_done3603:
    nqp_rxmark rx1480_bstack, rxcap1482_fail3605, rx1480_pos, 0
    add $I11, rx1480_pos, 1
    gt $I11, rx1480_eos, rx1480_fail3597
    substr $S10, rx1480_tgt, rx1480_pos, 1
    ne $S10, ucs4:"!", rx1480_fail3597
    add rx1480_pos, 1
    nqp_rxpeek $I19, rx1480_bstack, rxcap1482_fail3605
    inc $I19
    set $I11, rx1480_bstack[$I19]
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1480_pos)
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "sym")
    goto rxcap1482_done3604
  rxcap1482_fail3605:
    goto rx1480_fail3597
  rxcap1482_done3604:
    repr_bind_attr_int rx1480_cur, rx1480_curclass, "$!pos", rx1480_pos
    $P11 = rx1480_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1480_curclass, "$!pos"
    lt $I11, 0, rx1480_fail3597
    nqp_rxmark rx1480_bstack, rxsubrule1483_pass3606, -1, 0
  rxsubrule1483_pass3606:
    rx1480_cstack = rx1480_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1480_pos, $P11, rx1480_curclass, "$!pos"
    rx1480_cur."!cursor_pass"(rx1480_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1480_cur)
  rx1480_restart3596:
    repr_get_attr_obj rx1480_cstack, rx1480_cur, rx1480_curclass, "$!cstack"
  rx1480_fail3597:
    unless rx1480_bstack, rx1480_done3595
    pop $I19, rx1480_bstack
    if_null rx1480_cstack, rx1480_cstack_done3600
    unless rx1480_cstack, rx1480_cstack_done3600
    dec $I19
    set $P11, rx1480_cstack[$I19]
  rx1480_cstack_done3600:
    pop rx1480_rep, rx1480_bstack
    pop rx1480_pos, rx1480_bstack
    pop $I19, rx1480_bstack
    lt rx1480_pos, -1, rx1480_done3595
    lt rx1480_pos, 0, rx1480_fail3597
    eq $I19, 0, rx1480_fail3597
    nqp_islist $I20, rx1480_cstack
    unless $I20, rx1480_jump3598
    elements $I18, rx1480_bstack
    le $I18, 0, rx1480_cut3599
    dec $I18
    set $I18, rx1480_bstack[$I18]
  rx1480_cut3599:
    assign rx1480_cstack, $I18
  rx1480_jump3598:
    jump $I19
  rx1480_done3595:
    rx1480_cur."!cursor_fail"()
    .return (rx1480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_191_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1381
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1484_start
    .local string rx1484_tgt
    .local int rx1484_pos
    .local int rx1484_off
    .local int rx1484_eos
    .local int rx1484_rep
    .local pmc rx1484_cur
    .local pmc rx1484_curclass
    .local pmc rx1484_bstack
    .local pmc rx1484_cstack
    rx1484_start = self."!cursor_start_all"()
    set rx1484_cur, rx1484_start[0]
    set rx1484_tgt, rx1484_start[1]
    set rx1484_pos, rx1484_start[2]
    set rx1484_curclass, rx1484_start[3]
    set rx1484_bstack, rx1484_start[4]
    set $I19, rx1484_start[5]
    store_lex unicode:"$\x{a2}", rx1484_cur
    length rx1484_eos, rx1484_tgt
    eq $I19, 1, rx1484_restart3609
    gt rx1484_pos, rx1484_eos, rx1484_fail3610
    repr_get_attr_int $I11, self, rx1484_curclass, "$!from"
    ne $I11, -1, rxscan1485_done3616
    goto rxscan1485_scan3615
  rxscan1485_loop3614:
    inc rx1484_pos
    gt rx1484_pos, rx1484_eos, rx1484_fail3610
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!from", rx1484_pos
  rxscan1485_scan3615:
    nqp_rxmark rx1484_bstack, rxscan1485_loop3614, rx1484_pos, 0
  rxscan1485_done3616:
    nqp_rxmark rx1484_bstack, rxcap1486_fail3618, rx1484_pos, 0
    add $I11, rx1484_pos, 1
    gt $I11, rx1484_eos, rx1484_fail3610
    substr $S10, rx1484_tgt, rx1484_pos, 1
    ne $S10, ucs4:"|", rx1484_fail3610
    add rx1484_pos, 1
    nqp_rxpeek $I19, rx1484_bstack, rxcap1486_fail3618
    inc $I19
    set $I11, rx1484_bstack[$I19]
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1484_pos)
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "sym")
    goto rxcap1486_done3617
  rxcap1486_fail3618:
    goto rx1484_fail3610
  rxcap1486_done3617:
    repr_bind_attr_int rx1484_cur, rx1484_curclass, "$!pos", rx1484_pos
    $P11 = rx1484_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1484_curclass, "$!pos"
    lt $I11, 0, rx1484_fail3610
    nqp_rxmark rx1484_bstack, rxsubrule1487_pass3619, -1, 0
  rxsubrule1487_pass3619:
    rx1484_cstack = rx1484_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1484_pos, $P11, rx1484_curclass, "$!pos"
    rx1484_cur."!cursor_pass"(rx1484_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1484_cur)
  rx1484_restart3609:
    repr_get_attr_obj rx1484_cstack, rx1484_cur, rx1484_curclass, "$!cstack"
  rx1484_fail3610:
    unless rx1484_bstack, rx1484_done3608
    pop $I19, rx1484_bstack
    if_null rx1484_cstack, rx1484_cstack_done3613
    unless rx1484_cstack, rx1484_cstack_done3613
    dec $I19
    set $P11, rx1484_cstack[$I19]
  rx1484_cstack_done3613:
    pop rx1484_rep, rx1484_bstack
    pop rx1484_pos, rx1484_bstack
    pop $I19, rx1484_bstack
    lt rx1484_pos, -1, rx1484_done3608
    lt rx1484_pos, 0, rx1484_fail3610
    eq $I19, 0, rx1484_fail3610
    nqp_islist $I20, rx1484_cstack
    unless $I20, rx1484_jump3611
    elements $I18, rx1484_bstack
    le $I18, 0, rx1484_cut3612
    dec $I18
    set $I18, rx1484_bstack[$I18]
  rx1484_cut3612:
    assign rx1484_cstack, $I18
  rx1484_jump3611:
    jump $I19
  rx1484_done3608:
    rx1484_cur."!cursor_fail"()
    .return (rx1484_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_192_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1383
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1488_start
    .local string rx1488_tgt
    .local int rx1488_pos
    .local int rx1488_off
    .local int rx1488_eos
    .local int rx1488_rep
    .local pmc rx1488_cur
    .local pmc rx1488_curclass
    .local pmc rx1488_bstack
    .local pmc rx1488_cstack
    rx1488_start = self."!cursor_start_all"()
    set rx1488_cur, rx1488_start[0]
    set rx1488_tgt, rx1488_start[1]
    set rx1488_pos, rx1488_start[2]
    set rx1488_curclass, rx1488_start[3]
    set rx1488_bstack, rx1488_start[4]
    set $I19, rx1488_start[5]
    store_lex unicode:"$\x{a2}", rx1488_cur
    length rx1488_eos, rx1488_tgt
    eq $I19, 1, rx1488_restart3622
    gt rx1488_pos, rx1488_eos, rx1488_fail3623
    repr_get_attr_int $I11, self, rx1488_curclass, "$!from"
    ne $I11, -1, rxscan1489_done3629
    goto rxscan1489_scan3628
  rxscan1489_loop3627:
    inc rx1488_pos
    gt rx1488_pos, rx1488_eos, rx1488_fail3623
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!from", rx1488_pos
  rxscan1489_scan3628:
    nqp_rxmark rx1488_bstack, rxscan1489_loop3627, rx1488_pos, 0
  rxscan1489_done3629:
    nqp_rxmark rx1488_bstack, rxcap1490_fail3631, rx1488_pos, 0
    add $I11, rx1488_pos, 1
    gt $I11, rx1488_eos, rx1488_fail3623
    substr $S10, rx1488_tgt, rx1488_pos, 1
    ne $S10, ucs4:"*", rx1488_fail3623
    add rx1488_pos, 1
    nqp_rxpeek $I19, rx1488_bstack, rxcap1490_fail3631
    inc $I19
    set $I11, rx1488_bstack[$I19]
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1488_pos)
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "sym")
    goto rxcap1490_done3630
  rxcap1490_fail3631:
    goto rx1488_fail3623
  rxcap1490_done3630:
    repr_bind_attr_int rx1488_cur, rx1488_curclass, "$!pos", rx1488_pos
    $P11 = rx1488_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1488_curclass, "$!pos"
    lt $I11, 0, rx1488_fail3623
    nqp_rxmark rx1488_bstack, rxsubrule1491_pass3632, -1, 0
  rxsubrule1491_pass3632:
    rx1488_cstack = rx1488_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1488_pos, $P11, rx1488_curclass, "$!pos"
    rx1488_cur."!cursor_pass"(rx1488_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1488_cur)
  rx1488_restart3622:
    repr_get_attr_obj rx1488_cstack, rx1488_cur, rx1488_curclass, "$!cstack"
  rx1488_fail3623:
    unless rx1488_bstack, rx1488_done3621
    pop $I19, rx1488_bstack
    if_null rx1488_cstack, rx1488_cstack_done3626
    unless rx1488_cstack, rx1488_cstack_done3626
    dec $I19
    set $P11, rx1488_cstack[$I19]
  rx1488_cstack_done3626:
    pop rx1488_rep, rx1488_bstack
    pop rx1488_pos, rx1488_bstack
    pop $I19, rx1488_bstack
    lt rx1488_pos, -1, rx1488_done3621
    lt rx1488_pos, 0, rx1488_fail3623
    eq $I19, 0, rx1488_fail3623
    nqp_islist $I20, rx1488_cstack
    unless $I20, rx1488_jump3624
    elements $I18, rx1488_bstack
    le $I18, 0, rx1488_cut3625
    dec $I18
    set $I18, rx1488_bstack[$I18]
  rx1488_cut3625:
    assign rx1488_cstack, $I18
  rx1488_jump3624:
    jump $I19
  rx1488_done3621:
    rx1488_cur."!cursor_fail"()
    .return (rx1488_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_193_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1492_start
    .local string rx1492_tgt
    .local int rx1492_pos
    .local int rx1492_off
    .local int rx1492_eos
    .local int rx1492_rep
    .local pmc rx1492_cur
    .local pmc rx1492_curclass
    .local pmc rx1492_bstack
    .local pmc rx1492_cstack
    rx1492_start = self."!cursor_start_all"()
    set rx1492_cur, rx1492_start[0]
    set rx1492_tgt, rx1492_start[1]
    set rx1492_pos, rx1492_start[2]
    set rx1492_curclass, rx1492_start[3]
    set rx1492_bstack, rx1492_start[4]
    set $I19, rx1492_start[5]
    store_lex unicode:"$\x{a2}", rx1492_cur
    length rx1492_eos, rx1492_tgt
    eq $I19, 1, rx1492_restart3635
    gt rx1492_pos, rx1492_eos, rx1492_fail3636
    repr_get_attr_int $I11, self, rx1492_curclass, "$!from"
    ne $I11, -1, rxscan1493_done3642
    goto rxscan1493_scan3641
  rxscan1493_loop3640:
    inc rx1492_pos
    gt rx1492_pos, rx1492_eos, rx1492_fail3636
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!from", rx1492_pos
  rxscan1493_scan3641:
    nqp_rxmark rx1492_bstack, rxscan1493_loop3640, rx1492_pos, 0
  rxscan1493_done3642:
    nqp_rxmark rx1492_bstack, rxcap1494_fail3644, rx1492_pos, 0
    add $I11, rx1492_pos, 1
    gt $I11, rx1492_eos, rx1492_fail3636
    substr $S10, rx1492_tgt, rx1492_pos, 1
    ne $S10, ucs4:"/", rx1492_fail3636
    add rx1492_pos, 1
    nqp_rxpeek $I19, rx1492_bstack, rxcap1494_fail3644
    inc $I19
    set $I11, rx1492_bstack[$I19]
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1492_pos)
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "sym")
    goto rxcap1494_done3643
  rxcap1494_fail3644:
    goto rx1492_fail3636
  rxcap1494_done3643:
    repr_bind_attr_int rx1492_cur, rx1492_curclass, "$!pos", rx1492_pos
    $P11 = rx1492_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1492_curclass, "$!pos"
    lt $I11, 0, rx1492_fail3636
    nqp_rxmark rx1492_bstack, rxsubrule1495_pass3645, -1, 0
  rxsubrule1495_pass3645:
    rx1492_cstack = rx1492_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1492_pos, $P11, rx1492_curclass, "$!pos"
    rx1492_cur."!cursor_pass"(rx1492_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1492_cur)
  rx1492_restart3635:
    repr_get_attr_obj rx1492_cstack, rx1492_cur, rx1492_curclass, "$!cstack"
  rx1492_fail3636:
    unless rx1492_bstack, rx1492_done3634
    pop $I19, rx1492_bstack
    if_null rx1492_cstack, rx1492_cstack_done3639
    unless rx1492_cstack, rx1492_cstack_done3639
    dec $I19
    set $P11, rx1492_cstack[$I19]
  rx1492_cstack_done3639:
    pop rx1492_rep, rx1492_bstack
    pop rx1492_pos, rx1492_bstack
    pop $I19, rx1492_bstack
    lt rx1492_pos, -1, rx1492_done3634
    lt rx1492_pos, 0, rx1492_fail3636
    eq $I19, 0, rx1492_fail3636
    nqp_islist $I20, rx1492_cstack
    unless $I20, rx1492_jump3637
    elements $I18, rx1492_bstack
    le $I18, 0, rx1492_cut3638
    dec $I18
    set $I18, rx1492_bstack[$I18]
  rx1492_cut3638:
    assign rx1492_cstack, $I18
  rx1492_jump3637:
    jump $I19
  rx1492_done3634:
    rx1492_cur."!cursor_fail"()
    .return (rx1492_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_194_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1496_start
    .local string rx1496_tgt
    .local int rx1496_pos
    .local int rx1496_off
    .local int rx1496_eos
    .local int rx1496_rep
    .local pmc rx1496_cur
    .local pmc rx1496_curclass
    .local pmc rx1496_bstack
    .local pmc rx1496_cstack
    rx1496_start = self."!cursor_start_all"()
    set rx1496_cur, rx1496_start[0]
    set rx1496_tgt, rx1496_start[1]
    set rx1496_pos, rx1496_start[2]
    set rx1496_curclass, rx1496_start[3]
    set rx1496_bstack, rx1496_start[4]
    set $I19, rx1496_start[5]
    store_lex unicode:"$\x{a2}", rx1496_cur
    length rx1496_eos, rx1496_tgt
    eq $I19, 1, rx1496_restart3648
    gt rx1496_pos, rx1496_eos, rx1496_fail3649
    repr_get_attr_int $I11, self, rx1496_curclass, "$!from"
    ne $I11, -1, rxscan1497_done3655
    goto rxscan1497_scan3654
  rxscan1497_loop3653:
    inc rx1496_pos
    gt rx1496_pos, rx1496_eos, rx1496_fail3649
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!from", rx1496_pos
  rxscan1497_scan3654:
    nqp_rxmark rx1496_bstack, rxscan1497_loop3653, rx1496_pos, 0
  rxscan1497_done3655:
    nqp_rxmark rx1496_bstack, rxcap1498_fail3657, rx1496_pos, 0
    add $I11, rx1496_pos, 1
    gt $I11, rx1496_eos, rx1496_fail3649
    substr $S10, rx1496_tgt, rx1496_pos, 1
    ne $S10, ucs4:"%", rx1496_fail3649
    add rx1496_pos, 1
    nqp_rxpeek $I19, rx1496_bstack, rxcap1498_fail3657
    inc $I19
    set $I11, rx1496_bstack[$I19]
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1496_pos)
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "sym")
    goto rxcap1498_done3656
  rxcap1498_fail3657:
    goto rx1496_fail3649
  rxcap1498_done3656:
    repr_bind_attr_int rx1496_cur, rx1496_curclass, "$!pos", rx1496_pos
    $P11 = rx1496_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1496_curclass, "$!pos"
    lt $I11, 0, rx1496_fail3649
    nqp_rxmark rx1496_bstack, rxsubrule1499_pass3658, -1, 0
  rxsubrule1499_pass3658:
    rx1496_cstack = rx1496_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1496_pos, $P11, rx1496_curclass, "$!pos"
    rx1496_cur."!cursor_pass"(rx1496_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1496_cur)
  rx1496_restart3648:
    repr_get_attr_obj rx1496_cstack, rx1496_cur, rx1496_curclass, "$!cstack"
  rx1496_fail3649:
    unless rx1496_bstack, rx1496_done3647
    pop $I19, rx1496_bstack
    if_null rx1496_cstack, rx1496_cstack_done3652
    unless rx1496_cstack, rx1496_cstack_done3652
    dec $I19
    set $P11, rx1496_cstack[$I19]
  rx1496_cstack_done3652:
    pop rx1496_rep, rx1496_bstack
    pop rx1496_pos, rx1496_bstack
    pop $I19, rx1496_bstack
    lt rx1496_pos, -1, rx1496_done3647
    lt rx1496_pos, 0, rx1496_fail3649
    eq $I19, 0, rx1496_fail3649
    nqp_islist $I20, rx1496_cstack
    unless $I20, rx1496_jump3650
    elements $I18, rx1496_bstack
    le $I18, 0, rx1496_cut3651
    dec $I18
    set $I18, rx1496_bstack[$I18]
  rx1496_cut3651:
    assign rx1496_cstack, $I18
  rx1496_jump3650:
    jump $I19
  rx1496_done3647:
    rx1496_cur."!cursor_fail"()
    .return (rx1496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_195_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1500_start
    .local string rx1500_tgt
    .local int rx1500_pos
    .local int rx1500_off
    .local int rx1500_eos
    .local int rx1500_rep
    .local pmc rx1500_cur
    .local pmc rx1500_curclass
    .local pmc rx1500_bstack
    .local pmc rx1500_cstack
    rx1500_start = self."!cursor_start_all"()
    set rx1500_cur, rx1500_start[0]
    set rx1500_tgt, rx1500_start[1]
    set rx1500_pos, rx1500_start[2]
    set rx1500_curclass, rx1500_start[3]
    set rx1500_bstack, rx1500_start[4]
    set $I19, rx1500_start[5]
    store_lex unicode:"$\x{a2}", rx1500_cur
    length rx1500_eos, rx1500_tgt
    eq $I19, 1, rx1500_restart3661
    gt rx1500_pos, rx1500_eos, rx1500_fail3662
    repr_get_attr_int $I11, self, rx1500_curclass, "$!from"
    ne $I11, -1, rxscan1501_done3668
    goto rxscan1501_scan3667
  rxscan1501_loop3666:
    inc rx1500_pos
    gt rx1500_pos, rx1500_eos, rx1500_fail3662
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!from", rx1500_pos
  rxscan1501_scan3667:
    nqp_rxmark rx1500_bstack, rxscan1501_loop3666, rx1500_pos, 0
  rxscan1501_done3668:
    nqp_rxmark rx1500_bstack, rxcap1502_fail3670, rx1500_pos, 0
    add $I11, rx1500_pos, 2
    gt $I11, rx1500_eos, rx1500_fail3662
    substr $S10, rx1500_tgt, rx1500_pos, 2
    ne $S10, ucs4:"+&", rx1500_fail3662
    add rx1500_pos, 2
    nqp_rxpeek $I19, rx1500_bstack, rxcap1502_fail3670
    inc $I19
    set $I11, rx1500_bstack[$I19]
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1500_pos)
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "sym")
    goto rxcap1502_done3669
  rxcap1502_fail3670:
    goto rx1500_fail3662
  rxcap1502_done3669:
    repr_bind_attr_int rx1500_cur, rx1500_curclass, "$!pos", rx1500_pos
    $P11 = rx1500_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1500_curclass, "$!pos"
    lt $I11, 0, rx1500_fail3662
    nqp_rxmark rx1500_bstack, rxsubrule1503_pass3671, -1, 0
  rxsubrule1503_pass3671:
    rx1500_cstack = rx1500_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1500_pos, $P11, rx1500_curclass, "$!pos"
    rx1500_cur."!cursor_pass"(rx1500_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1500_cur)
  rx1500_restart3661:
    repr_get_attr_obj rx1500_cstack, rx1500_cur, rx1500_curclass, "$!cstack"
  rx1500_fail3662:
    unless rx1500_bstack, rx1500_done3660
    pop $I19, rx1500_bstack
    if_null rx1500_cstack, rx1500_cstack_done3665
    unless rx1500_cstack, rx1500_cstack_done3665
    dec $I19
    set $P11, rx1500_cstack[$I19]
  rx1500_cstack_done3665:
    pop rx1500_rep, rx1500_bstack
    pop rx1500_pos, rx1500_bstack
    pop $I19, rx1500_bstack
    lt rx1500_pos, -1, rx1500_done3660
    lt rx1500_pos, 0, rx1500_fail3662
    eq $I19, 0, rx1500_fail3662
    nqp_islist $I20, rx1500_cstack
    unless $I20, rx1500_jump3663
    elements $I18, rx1500_bstack
    le $I18, 0, rx1500_cut3664
    dec $I18
    set $I18, rx1500_bstack[$I18]
  rx1500_cut3664:
    assign rx1500_cstack, $I18
  rx1500_jump3663:
    jump $I19
  rx1500_done3660:
    rx1500_cur."!cursor_fail"()
    .return (rx1500_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_196_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1388
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1504_start
    .local string rx1504_tgt
    .local int rx1504_pos
    .local int rx1504_off
    .local int rx1504_eos
    .local int rx1504_rep
    .local pmc rx1504_cur
    .local pmc rx1504_curclass
    .local pmc rx1504_bstack
    .local pmc rx1504_cstack
    rx1504_start = self."!cursor_start_all"()
    set rx1504_cur, rx1504_start[0]
    set rx1504_tgt, rx1504_start[1]
    set rx1504_pos, rx1504_start[2]
    set rx1504_curclass, rx1504_start[3]
    set rx1504_bstack, rx1504_start[4]
    set $I19, rx1504_start[5]
    store_lex unicode:"$\x{a2}", rx1504_cur
    length rx1504_eos, rx1504_tgt
    eq $I19, 1, rx1504_restart3674
    gt rx1504_pos, rx1504_eos, rx1504_fail3675
    repr_get_attr_int $I11, self, rx1504_curclass, "$!from"
    ne $I11, -1, rxscan1505_done3681
    goto rxscan1505_scan3680
  rxscan1505_loop3679:
    inc rx1504_pos
    gt rx1504_pos, rx1504_eos, rx1504_fail3675
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!from", rx1504_pos
  rxscan1505_scan3680:
    nqp_rxmark rx1504_bstack, rxscan1505_loop3679, rx1504_pos, 0
  rxscan1505_done3681:
    nqp_rxmark rx1504_bstack, rxcap1506_fail3683, rx1504_pos, 0
    add $I11, rx1504_pos, 1
    gt $I11, rx1504_eos, rx1504_fail3675
    substr $S10, rx1504_tgt, rx1504_pos, 1
    ne $S10, ucs4:"+", rx1504_fail3675
    add rx1504_pos, 1
    nqp_rxpeek $I19, rx1504_bstack, rxcap1506_fail3683
    inc $I19
    set $I11, rx1504_bstack[$I19]
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1504_pos)
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "sym")
    goto rxcap1506_done3682
  rxcap1506_fail3683:
    goto rx1504_fail3675
  rxcap1506_done3682:
    repr_bind_attr_int rx1504_cur, rx1504_curclass, "$!pos", rx1504_pos
    $P11 = rx1504_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1504_curclass, "$!pos"
    lt $I11, 0, rx1504_fail3675
    nqp_rxmark rx1504_bstack, rxsubrule1507_pass3684, -1, 0
  rxsubrule1507_pass3684:
    rx1504_cstack = rx1504_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1504_pos, $P11, rx1504_curclass, "$!pos"
    rx1504_cur."!cursor_pass"(rx1504_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1504_cur)
  rx1504_restart3674:
    repr_get_attr_obj rx1504_cstack, rx1504_cur, rx1504_curclass, "$!cstack"
  rx1504_fail3675:
    unless rx1504_bstack, rx1504_done3673
    pop $I19, rx1504_bstack
    if_null rx1504_cstack, rx1504_cstack_done3678
    unless rx1504_cstack, rx1504_cstack_done3678
    dec $I19
    set $P11, rx1504_cstack[$I19]
  rx1504_cstack_done3678:
    pop rx1504_rep, rx1504_bstack
    pop rx1504_pos, rx1504_bstack
    pop $I19, rx1504_bstack
    lt rx1504_pos, -1, rx1504_done3673
    lt rx1504_pos, 0, rx1504_fail3675
    eq $I19, 0, rx1504_fail3675
    nqp_islist $I20, rx1504_cstack
    unless $I20, rx1504_jump3676
    elements $I18, rx1504_bstack
    le $I18, 0, rx1504_cut3677
    dec $I18
    set $I18, rx1504_bstack[$I18]
  rx1504_cut3677:
    assign rx1504_cstack, $I18
  rx1504_jump3676:
    jump $I19
  rx1504_done3673:
    rx1504_cur."!cursor_fail"()
    .return (rx1504_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_197_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1389
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1508_start
    .local string rx1508_tgt
    .local int rx1508_pos
    .local int rx1508_off
    .local int rx1508_eos
    .local int rx1508_rep
    .local pmc rx1508_cur
    .local pmc rx1508_curclass
    .local pmc rx1508_bstack
    .local pmc rx1508_cstack
    rx1508_start = self."!cursor_start_all"()
    set rx1508_cur, rx1508_start[0]
    set rx1508_tgt, rx1508_start[1]
    set rx1508_pos, rx1508_start[2]
    set rx1508_curclass, rx1508_start[3]
    set rx1508_bstack, rx1508_start[4]
    set $I19, rx1508_start[5]
    store_lex unicode:"$\x{a2}", rx1508_cur
    length rx1508_eos, rx1508_tgt
    eq $I19, 1, rx1508_restart3687
    gt rx1508_pos, rx1508_eos, rx1508_fail3688
    repr_get_attr_int $I11, self, rx1508_curclass, "$!from"
    ne $I11, -1, rxscan1509_done3694
    goto rxscan1509_scan3693
  rxscan1509_loop3692:
    inc rx1508_pos
    gt rx1508_pos, rx1508_eos, rx1508_fail3688
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!from", rx1508_pos
  rxscan1509_scan3693:
    nqp_rxmark rx1508_bstack, rxscan1509_loop3692, rx1508_pos, 0
  rxscan1509_done3694:
    nqp_rxmark rx1508_bstack, rxcap1510_fail3696, rx1508_pos, 0
    add $I11, rx1508_pos, 1
    gt $I11, rx1508_eos, rx1508_fail3688
    substr $S10, rx1508_tgt, rx1508_pos, 1
    ne $S10, ucs4:"-", rx1508_fail3688
    add rx1508_pos, 1
    nqp_rxpeek $I19, rx1508_bstack, rxcap1510_fail3696
    inc $I19
    set $I11, rx1508_bstack[$I19]
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1508_pos)
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "sym")
    goto rxcap1510_done3695
  rxcap1510_fail3696:
    goto rx1508_fail3688
  rxcap1510_done3695:
    repr_bind_attr_int rx1508_cur, rx1508_curclass, "$!pos", rx1508_pos
    $P11 = rx1508_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1508_curclass, "$!pos"
    lt $I11, 0, rx1508_fail3688
    nqp_rxmark rx1508_bstack, rxsubrule1511_pass3697, -1, 0
  rxsubrule1511_pass3697:
    rx1508_cstack = rx1508_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1508_pos, $P11, rx1508_curclass, "$!pos"
    rx1508_cur."!cursor_pass"(rx1508_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1508_cur)
  rx1508_restart3687:
    repr_get_attr_obj rx1508_cstack, rx1508_cur, rx1508_curclass, "$!cstack"
  rx1508_fail3688:
    unless rx1508_bstack, rx1508_done3686
    pop $I19, rx1508_bstack
    if_null rx1508_cstack, rx1508_cstack_done3691
    unless rx1508_cstack, rx1508_cstack_done3691
    dec $I19
    set $P11, rx1508_cstack[$I19]
  rx1508_cstack_done3691:
    pop rx1508_rep, rx1508_bstack
    pop rx1508_pos, rx1508_bstack
    pop $I19, rx1508_bstack
    lt rx1508_pos, -1, rx1508_done3686
    lt rx1508_pos, 0, rx1508_fail3688
    eq $I19, 0, rx1508_fail3688
    nqp_islist $I20, rx1508_cstack
    unless $I20, rx1508_jump3689
    elements $I18, rx1508_bstack
    le $I18, 0, rx1508_cut3690
    dec $I18
    set $I18, rx1508_bstack[$I18]
  rx1508_cut3690:
    assign rx1508_cstack, $I18
  rx1508_jump3689:
    jump $I19
  rx1508_done3686:
    rx1508_cur."!cursor_fail"()
    .return (rx1508_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_198_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1390
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1512_start
    .local string rx1512_tgt
    .local int rx1512_pos
    .local int rx1512_off
    .local int rx1512_eos
    .local int rx1512_rep
    .local pmc rx1512_cur
    .local pmc rx1512_curclass
    .local pmc rx1512_bstack
    .local pmc rx1512_cstack
    rx1512_start = self."!cursor_start_all"()
    set rx1512_cur, rx1512_start[0]
    set rx1512_tgt, rx1512_start[1]
    set rx1512_pos, rx1512_start[2]
    set rx1512_curclass, rx1512_start[3]
    set rx1512_bstack, rx1512_start[4]
    set $I19, rx1512_start[5]
    store_lex unicode:"$\x{a2}", rx1512_cur
    length rx1512_eos, rx1512_tgt
    eq $I19, 1, rx1512_restart3700
    gt rx1512_pos, rx1512_eos, rx1512_fail3701
    repr_get_attr_int $I11, self, rx1512_curclass, "$!from"
    ne $I11, -1, rxscan1513_done3707
    goto rxscan1513_scan3706
  rxscan1513_loop3705:
    inc rx1512_pos
    gt rx1512_pos, rx1512_eos, rx1512_fail3701
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!from", rx1512_pos
  rxscan1513_scan3706:
    nqp_rxmark rx1512_bstack, rxscan1513_loop3705, rx1512_pos, 0
  rxscan1513_done3707:
    nqp_rxmark rx1512_bstack, rxcap1514_fail3709, rx1512_pos, 0
    add $I11, rx1512_pos, 2
    gt $I11, rx1512_eos, rx1512_fail3701
    substr $S10, rx1512_tgt, rx1512_pos, 2
    ne $S10, ucs4:"+|", rx1512_fail3701
    add rx1512_pos, 2
    nqp_rxpeek $I19, rx1512_bstack, rxcap1514_fail3709
    inc $I19
    set $I11, rx1512_bstack[$I19]
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1512_pos)
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "sym")
    goto rxcap1514_done3708
  rxcap1514_fail3709:
    goto rx1512_fail3701
  rxcap1514_done3708:
    repr_bind_attr_int rx1512_cur, rx1512_curclass, "$!pos", rx1512_pos
    $P11 = rx1512_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1512_curclass, "$!pos"
    lt $I11, 0, rx1512_fail3701
    nqp_rxmark rx1512_bstack, rxsubrule1515_pass3710, -1, 0
  rxsubrule1515_pass3710:
    rx1512_cstack = rx1512_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1512_pos, $P11, rx1512_curclass, "$!pos"
    rx1512_cur."!cursor_pass"(rx1512_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1512_cur)
  rx1512_restart3700:
    repr_get_attr_obj rx1512_cstack, rx1512_cur, rx1512_curclass, "$!cstack"
  rx1512_fail3701:
    unless rx1512_bstack, rx1512_done3699
    pop $I19, rx1512_bstack
    if_null rx1512_cstack, rx1512_cstack_done3704
    unless rx1512_cstack, rx1512_cstack_done3704
    dec $I19
    set $P11, rx1512_cstack[$I19]
  rx1512_cstack_done3704:
    pop rx1512_rep, rx1512_bstack
    pop rx1512_pos, rx1512_bstack
    pop $I19, rx1512_bstack
    lt rx1512_pos, -1, rx1512_done3699
    lt rx1512_pos, 0, rx1512_fail3701
    eq $I19, 0, rx1512_fail3701
    nqp_islist $I20, rx1512_cstack
    unless $I20, rx1512_jump3702
    elements $I18, rx1512_bstack
    le $I18, 0, rx1512_cut3703
    dec $I18
    set $I18, rx1512_bstack[$I18]
  rx1512_cut3703:
    assign rx1512_cstack, $I18
  rx1512_jump3702:
    jump $I19
  rx1512_done3699:
    rx1512_cur."!cursor_fail"()
    .return (rx1512_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_199_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1391
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1516_start
    .local string rx1516_tgt
    .local int rx1516_pos
    .local int rx1516_off
    .local int rx1516_eos
    .local int rx1516_rep
    .local pmc rx1516_cur
    .local pmc rx1516_curclass
    .local pmc rx1516_bstack
    .local pmc rx1516_cstack
    rx1516_start = self."!cursor_start_all"()
    set rx1516_cur, rx1516_start[0]
    set rx1516_tgt, rx1516_start[1]
    set rx1516_pos, rx1516_start[2]
    set rx1516_curclass, rx1516_start[3]
    set rx1516_bstack, rx1516_start[4]
    set $I19, rx1516_start[5]
    store_lex unicode:"$\x{a2}", rx1516_cur
    length rx1516_eos, rx1516_tgt
    eq $I19, 1, rx1516_restart3713
    gt rx1516_pos, rx1516_eos, rx1516_fail3714
    repr_get_attr_int $I11, self, rx1516_curclass, "$!from"
    ne $I11, -1, rxscan1517_done3720
    goto rxscan1517_scan3719
  rxscan1517_loop3718:
    inc rx1516_pos
    gt rx1516_pos, rx1516_eos, rx1516_fail3714
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!from", rx1516_pos
  rxscan1517_scan3719:
    nqp_rxmark rx1516_bstack, rxscan1517_loop3718, rx1516_pos, 0
  rxscan1517_done3720:
    nqp_rxmark rx1516_bstack, rxcap1518_fail3722, rx1516_pos, 0
    add $I11, rx1516_pos, 2
    gt $I11, rx1516_eos, rx1516_fail3714
    substr $S10, rx1516_tgt, rx1516_pos, 2
    ne $S10, ucs4:"+^", rx1516_fail3714
    add rx1516_pos, 2
    nqp_rxpeek $I19, rx1516_bstack, rxcap1518_fail3722
    inc $I19
    set $I11, rx1516_bstack[$I19]
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1516_pos)
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "sym")
    goto rxcap1518_done3721
  rxcap1518_fail3722:
    goto rx1516_fail3714
  rxcap1518_done3721:
    repr_bind_attr_int rx1516_cur, rx1516_curclass, "$!pos", rx1516_pos
    $P11 = rx1516_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1516_curclass, "$!pos"
    lt $I11, 0, rx1516_fail3714
    nqp_rxmark rx1516_bstack, rxsubrule1519_pass3723, -1, 0
  rxsubrule1519_pass3723:
    rx1516_cstack = rx1516_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1516_pos, $P11, rx1516_curclass, "$!pos"
    rx1516_cur."!cursor_pass"(rx1516_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1516_cur)
  rx1516_restart3713:
    repr_get_attr_obj rx1516_cstack, rx1516_cur, rx1516_curclass, "$!cstack"
  rx1516_fail3714:
    unless rx1516_bstack, rx1516_done3712
    pop $I19, rx1516_bstack
    if_null rx1516_cstack, rx1516_cstack_done3717
    unless rx1516_cstack, rx1516_cstack_done3717
    dec $I19
    set $P11, rx1516_cstack[$I19]
  rx1516_cstack_done3717:
    pop rx1516_rep, rx1516_bstack
    pop rx1516_pos, rx1516_bstack
    pop $I19, rx1516_bstack
    lt rx1516_pos, -1, rx1516_done3712
    lt rx1516_pos, 0, rx1516_fail3714
    eq $I19, 0, rx1516_fail3714
    nqp_islist $I20, rx1516_cstack
    unless $I20, rx1516_jump3715
    elements $I18, rx1516_bstack
    le $I18, 0, rx1516_cut3716
    dec $I18
    set $I18, rx1516_bstack[$I18]
  rx1516_cut3716:
    assign rx1516_cstack, $I18
  rx1516_jump3715:
    jump $I19
  rx1516_done3712:
    rx1516_cur."!cursor_fail"()
    .return (rx1516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_200_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1520_start
    .local string rx1520_tgt
    .local int rx1520_pos
    .local int rx1520_off
    .local int rx1520_eos
    .local int rx1520_rep
    .local pmc rx1520_cur
    .local pmc rx1520_curclass
    .local pmc rx1520_bstack
    .local pmc rx1520_cstack
    rx1520_start = self."!cursor_start_all"()
    set rx1520_cur, rx1520_start[0]
    set rx1520_tgt, rx1520_start[1]
    set rx1520_pos, rx1520_start[2]
    set rx1520_curclass, rx1520_start[3]
    set rx1520_bstack, rx1520_start[4]
    set $I19, rx1520_start[5]
    store_lex unicode:"$\x{a2}", rx1520_cur
    length rx1520_eos, rx1520_tgt
    eq $I19, 1, rx1520_restart3726
    gt rx1520_pos, rx1520_eos, rx1520_fail3727
    repr_get_attr_int $I11, self, rx1520_curclass, "$!from"
    ne $I11, -1, rxscan1521_done3733
    goto rxscan1521_scan3732
  rxscan1521_loop3731:
    inc rx1520_pos
    gt rx1520_pos, rx1520_eos, rx1520_fail3727
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!from", rx1520_pos
  rxscan1521_scan3732:
    nqp_rxmark rx1520_bstack, rxscan1521_loop3731, rx1520_pos, 0
  rxscan1521_done3733:
    nqp_rxmark rx1520_bstack, rxcap1522_fail3735, rx1520_pos, 0
    add $I11, rx1520_pos, 1
    gt $I11, rx1520_eos, rx1520_fail3727
    substr $S10, rx1520_tgt, rx1520_pos, 1
    ne $S10, ucs4:"~", rx1520_fail3727
    add rx1520_pos, 1
    nqp_rxpeek $I19, rx1520_bstack, rxcap1522_fail3735
    inc $I19
    set $I11, rx1520_bstack[$I19]
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1520_pos)
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "sym")
    goto rxcap1522_done3734
  rxcap1522_fail3735:
    goto rx1520_fail3727
  rxcap1522_done3734:
    repr_bind_attr_int rx1520_cur, rx1520_curclass, "$!pos", rx1520_pos
    $P11 = rx1520_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1520_curclass, "$!pos"
    lt $I11, 0, rx1520_fail3727
    nqp_rxmark rx1520_bstack, rxsubrule1523_pass3736, -1, 0
  rxsubrule1523_pass3736:
    rx1520_cstack = rx1520_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1520_pos, $P11, rx1520_curclass, "$!pos"
    rx1520_cur."!cursor_pass"(rx1520_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1520_cur)
  rx1520_restart3726:
    repr_get_attr_obj rx1520_cstack, rx1520_cur, rx1520_curclass, "$!cstack"
  rx1520_fail3727:
    unless rx1520_bstack, rx1520_done3725
    pop $I19, rx1520_bstack
    if_null rx1520_cstack, rx1520_cstack_done3730
    unless rx1520_cstack, rx1520_cstack_done3730
    dec $I19
    set $P11, rx1520_cstack[$I19]
  rx1520_cstack_done3730:
    pop rx1520_rep, rx1520_bstack
    pop rx1520_pos, rx1520_bstack
    pop $I19, rx1520_bstack
    lt rx1520_pos, -1, rx1520_done3725
    lt rx1520_pos, 0, rx1520_fail3727
    eq $I19, 0, rx1520_fail3727
    nqp_islist $I20, rx1520_cstack
    unless $I20, rx1520_jump3728
    elements $I18, rx1520_bstack
    le $I18, 0, rx1520_cut3729
    dec $I18
    set $I18, rx1520_bstack[$I18]
  rx1520_cut3729:
    assign rx1520_cstack, $I18
  rx1520_jump3728:
    jump $I19
  rx1520_done3725:
    rx1520_cur."!cursor_fail"()
    .return (rx1520_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_201_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1524_start
    .local string rx1524_tgt
    .local int rx1524_pos
    .local int rx1524_off
    .local int rx1524_eos
    .local int rx1524_rep
    .local pmc rx1524_cur
    .local pmc rx1524_curclass
    .local pmc rx1524_bstack
    .local pmc rx1524_cstack
    rx1524_start = self."!cursor_start_all"()
    set rx1524_cur, rx1524_start[0]
    set rx1524_tgt, rx1524_start[1]
    set rx1524_pos, rx1524_start[2]
    set rx1524_curclass, rx1524_start[3]
    set rx1524_bstack, rx1524_start[4]
    set $I19, rx1524_start[5]
    store_lex unicode:"$\x{a2}", rx1524_cur
    length rx1524_eos, rx1524_tgt
    eq $I19, 1, rx1524_restart3739
    gt rx1524_pos, rx1524_eos, rx1524_fail3740
    repr_get_attr_int $I11, self, rx1524_curclass, "$!from"
    ne $I11, -1, rxscan1525_done3746
    goto rxscan1525_scan3745
  rxscan1525_loop3744:
    inc rx1524_pos
    gt rx1524_pos, rx1524_eos, rx1524_fail3740
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!from", rx1524_pos
  rxscan1525_scan3745:
    nqp_rxmark rx1524_bstack, rxscan1525_loop3744, rx1524_pos, 0
  rxscan1525_done3746:
    nqp_rxmark rx1524_bstack, rxcap1526_fail3748, rx1524_pos, 0
    add $I11, rx1524_pos, 2
    gt $I11, rx1524_eos, rx1524_fail3740
    substr $S10, rx1524_tgt, rx1524_pos, 2
    ne $S10, ucs4:"==", rx1524_fail3740
    add rx1524_pos, 2
    nqp_rxpeek $I19, rx1524_bstack, rxcap1526_fail3748
    inc $I19
    set $I11, rx1524_bstack[$I19]
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1524_pos)
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "sym")
    goto rxcap1526_done3747
  rxcap1526_fail3748:
    goto rx1524_fail3740
  rxcap1526_done3747:
    repr_bind_attr_int rx1524_cur, rx1524_curclass, "$!pos", rx1524_pos
    $P11 = rx1524_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1524_curclass, "$!pos"
    lt $I11, 0, rx1524_fail3740
    nqp_rxmark rx1524_bstack, rxsubrule1527_pass3749, -1, 0
  rxsubrule1527_pass3749:
    rx1524_cstack = rx1524_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1524_pos, $P11, rx1524_curclass, "$!pos"
    rx1524_cur."!cursor_pass"(rx1524_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1524_cur)
  rx1524_restart3739:
    repr_get_attr_obj rx1524_cstack, rx1524_cur, rx1524_curclass, "$!cstack"
  rx1524_fail3740:
    unless rx1524_bstack, rx1524_done3738
    pop $I19, rx1524_bstack
    if_null rx1524_cstack, rx1524_cstack_done3743
    unless rx1524_cstack, rx1524_cstack_done3743
    dec $I19
    set $P11, rx1524_cstack[$I19]
  rx1524_cstack_done3743:
    pop rx1524_rep, rx1524_bstack
    pop rx1524_pos, rx1524_bstack
    pop $I19, rx1524_bstack
    lt rx1524_pos, -1, rx1524_done3738
    lt rx1524_pos, 0, rx1524_fail3740
    eq $I19, 0, rx1524_fail3740
    nqp_islist $I20, rx1524_cstack
    unless $I20, rx1524_jump3741
    elements $I18, rx1524_bstack
    le $I18, 0, rx1524_cut3742
    dec $I18
    set $I18, rx1524_bstack[$I18]
  rx1524_cut3742:
    assign rx1524_cstack, $I18
  rx1524_jump3741:
    jump $I19
  rx1524_done3738:
    rx1524_cur."!cursor_fail"()
    .return (rx1524_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_202_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1396
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1528_start
    .local string rx1528_tgt
    .local int rx1528_pos
    .local int rx1528_off
    .local int rx1528_eos
    .local int rx1528_rep
    .local pmc rx1528_cur
    .local pmc rx1528_curclass
    .local pmc rx1528_bstack
    .local pmc rx1528_cstack
    rx1528_start = self."!cursor_start_all"()
    set rx1528_cur, rx1528_start[0]
    set rx1528_tgt, rx1528_start[1]
    set rx1528_pos, rx1528_start[2]
    set rx1528_curclass, rx1528_start[3]
    set rx1528_bstack, rx1528_start[4]
    set $I19, rx1528_start[5]
    store_lex unicode:"$\x{a2}", rx1528_cur
    length rx1528_eos, rx1528_tgt
    eq $I19, 1, rx1528_restart3752
    gt rx1528_pos, rx1528_eos, rx1528_fail3753
    repr_get_attr_int $I11, self, rx1528_curclass, "$!from"
    ne $I11, -1, rxscan1529_done3759
    goto rxscan1529_scan3758
  rxscan1529_loop3757:
    inc rx1528_pos
    gt rx1528_pos, rx1528_eos, rx1528_fail3753
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!from", rx1528_pos
  rxscan1529_scan3758:
    nqp_rxmark rx1528_bstack, rxscan1529_loop3757, rx1528_pos, 0
  rxscan1529_done3759:
    nqp_rxmark rx1528_bstack, rxcap1530_fail3761, rx1528_pos, 0
    add $I11, rx1528_pos, 2
    gt $I11, rx1528_eos, rx1528_fail3753
    substr $S10, rx1528_tgt, rx1528_pos, 2
    ne $S10, ucs4:"!=", rx1528_fail3753
    add rx1528_pos, 2
    nqp_rxpeek $I19, rx1528_bstack, rxcap1530_fail3761
    inc $I19
    set $I11, rx1528_bstack[$I19]
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1528_pos)
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "sym")
    goto rxcap1530_done3760
  rxcap1530_fail3761:
    goto rx1528_fail3753
  rxcap1530_done3760:
    repr_bind_attr_int rx1528_cur, rx1528_curclass, "$!pos", rx1528_pos
    $P11 = rx1528_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1528_curclass, "$!pos"
    lt $I11, 0, rx1528_fail3753
    nqp_rxmark rx1528_bstack, rxsubrule1531_pass3762, -1, 0
  rxsubrule1531_pass3762:
    rx1528_cstack = rx1528_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1528_pos, $P11, rx1528_curclass, "$!pos"
    rx1528_cur."!cursor_pass"(rx1528_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1528_cur)
  rx1528_restart3752:
    repr_get_attr_obj rx1528_cstack, rx1528_cur, rx1528_curclass, "$!cstack"
  rx1528_fail3753:
    unless rx1528_bstack, rx1528_done3751
    pop $I19, rx1528_bstack
    if_null rx1528_cstack, rx1528_cstack_done3756
    unless rx1528_cstack, rx1528_cstack_done3756
    dec $I19
    set $P11, rx1528_cstack[$I19]
  rx1528_cstack_done3756:
    pop rx1528_rep, rx1528_bstack
    pop rx1528_pos, rx1528_bstack
    pop $I19, rx1528_bstack
    lt rx1528_pos, -1, rx1528_done3751
    lt rx1528_pos, 0, rx1528_fail3753
    eq $I19, 0, rx1528_fail3753
    nqp_islist $I20, rx1528_cstack
    unless $I20, rx1528_jump3754
    elements $I18, rx1528_bstack
    le $I18, 0, rx1528_cut3755
    dec $I18
    set $I18, rx1528_bstack[$I18]
  rx1528_cut3755:
    assign rx1528_cstack, $I18
  rx1528_jump3754:
    jump $I19
  rx1528_done3751:
    rx1528_cur."!cursor_fail"()
    .return (rx1528_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_203_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1532_start
    .local string rx1532_tgt
    .local int rx1532_pos
    .local int rx1532_off
    .local int rx1532_eos
    .local int rx1532_rep
    .local pmc rx1532_cur
    .local pmc rx1532_curclass
    .local pmc rx1532_bstack
    .local pmc rx1532_cstack
    rx1532_start = self."!cursor_start_all"()
    set rx1532_cur, rx1532_start[0]
    set rx1532_tgt, rx1532_start[1]
    set rx1532_pos, rx1532_start[2]
    set rx1532_curclass, rx1532_start[3]
    set rx1532_bstack, rx1532_start[4]
    set $I19, rx1532_start[5]
    store_lex unicode:"$\x{a2}", rx1532_cur
    length rx1532_eos, rx1532_tgt
    eq $I19, 1, rx1532_restart3765
    gt rx1532_pos, rx1532_eos, rx1532_fail3766
    repr_get_attr_int $I11, self, rx1532_curclass, "$!from"
    ne $I11, -1, rxscan1533_done3772
    goto rxscan1533_scan3771
  rxscan1533_loop3770:
    inc rx1532_pos
    gt rx1532_pos, rx1532_eos, rx1532_fail3766
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!from", rx1532_pos
  rxscan1533_scan3771:
    nqp_rxmark rx1532_bstack, rxscan1533_loop3770, rx1532_pos, 0
  rxscan1533_done3772:
    nqp_rxmark rx1532_bstack, rxcap1534_fail3774, rx1532_pos, 0
    add $I11, rx1532_pos, 2
    gt $I11, rx1532_eos, rx1532_fail3766
    substr $S10, rx1532_tgt, rx1532_pos, 2
    ne $S10, ucs4:"<=", rx1532_fail3766
    add rx1532_pos, 2
    nqp_rxpeek $I19, rx1532_bstack, rxcap1534_fail3774
    inc $I19
    set $I11, rx1532_bstack[$I19]
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1532_pos)
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "sym")
    goto rxcap1534_done3773
  rxcap1534_fail3774:
    goto rx1532_fail3766
  rxcap1534_done3773:
    repr_bind_attr_int rx1532_cur, rx1532_curclass, "$!pos", rx1532_pos
    $P11 = rx1532_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1532_curclass, "$!pos"
    lt $I11, 0, rx1532_fail3766
    nqp_rxmark rx1532_bstack, rxsubrule1535_pass3775, -1, 0
  rxsubrule1535_pass3775:
    rx1532_cstack = rx1532_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1532_pos, $P11, rx1532_curclass, "$!pos"
    rx1532_cur."!cursor_pass"(rx1532_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1532_cur)
  rx1532_restart3765:
    repr_get_attr_obj rx1532_cstack, rx1532_cur, rx1532_curclass, "$!cstack"
  rx1532_fail3766:
    unless rx1532_bstack, rx1532_done3764
    pop $I19, rx1532_bstack
    if_null rx1532_cstack, rx1532_cstack_done3769
    unless rx1532_cstack, rx1532_cstack_done3769
    dec $I19
    set $P11, rx1532_cstack[$I19]
  rx1532_cstack_done3769:
    pop rx1532_rep, rx1532_bstack
    pop rx1532_pos, rx1532_bstack
    pop $I19, rx1532_bstack
    lt rx1532_pos, -1, rx1532_done3764
    lt rx1532_pos, 0, rx1532_fail3766
    eq $I19, 0, rx1532_fail3766
    nqp_islist $I20, rx1532_cstack
    unless $I20, rx1532_jump3767
    elements $I18, rx1532_bstack
    le $I18, 0, rx1532_cut3768
    dec $I18
    set $I18, rx1532_bstack[$I18]
  rx1532_cut3768:
    assign rx1532_cstack, $I18
  rx1532_jump3767:
    jump $I19
  rx1532_done3764:
    rx1532_cur."!cursor_fail"()
    .return (rx1532_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_204_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1398
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1536_start
    .local string rx1536_tgt
    .local int rx1536_pos
    .local int rx1536_off
    .local int rx1536_eos
    .local int rx1536_rep
    .local pmc rx1536_cur
    .local pmc rx1536_curclass
    .local pmc rx1536_bstack
    .local pmc rx1536_cstack
    rx1536_start = self."!cursor_start_all"()
    set rx1536_cur, rx1536_start[0]
    set rx1536_tgt, rx1536_start[1]
    set rx1536_pos, rx1536_start[2]
    set rx1536_curclass, rx1536_start[3]
    set rx1536_bstack, rx1536_start[4]
    set $I19, rx1536_start[5]
    store_lex unicode:"$\x{a2}", rx1536_cur
    length rx1536_eos, rx1536_tgt
    eq $I19, 1, rx1536_restart3778
    gt rx1536_pos, rx1536_eos, rx1536_fail3779
    repr_get_attr_int $I11, self, rx1536_curclass, "$!from"
    ne $I11, -1, rxscan1537_done3785
    goto rxscan1537_scan3784
  rxscan1537_loop3783:
    inc rx1536_pos
    gt rx1536_pos, rx1536_eos, rx1536_fail3779
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!from", rx1536_pos
  rxscan1537_scan3784:
    nqp_rxmark rx1536_bstack, rxscan1537_loop3783, rx1536_pos, 0
  rxscan1537_done3785:
    nqp_rxmark rx1536_bstack, rxcap1538_fail3787, rx1536_pos, 0
    add $I11, rx1536_pos, 2
    gt $I11, rx1536_eos, rx1536_fail3779
    substr $S10, rx1536_tgt, rx1536_pos, 2
    ne $S10, ucs4:">=", rx1536_fail3779
    add rx1536_pos, 2
    nqp_rxpeek $I19, rx1536_bstack, rxcap1538_fail3787
    inc $I19
    set $I11, rx1536_bstack[$I19]
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1536_pos)
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "sym")
    goto rxcap1538_done3786
  rxcap1538_fail3787:
    goto rx1536_fail3779
  rxcap1538_done3786:
    repr_bind_attr_int rx1536_cur, rx1536_curclass, "$!pos", rx1536_pos
    $P11 = rx1536_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1536_curclass, "$!pos"
    lt $I11, 0, rx1536_fail3779
    nqp_rxmark rx1536_bstack, rxsubrule1539_pass3788, -1, 0
  rxsubrule1539_pass3788:
    rx1536_cstack = rx1536_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1536_pos, $P11, rx1536_curclass, "$!pos"
    rx1536_cur."!cursor_pass"(rx1536_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1536_cur)
  rx1536_restart3778:
    repr_get_attr_obj rx1536_cstack, rx1536_cur, rx1536_curclass, "$!cstack"
  rx1536_fail3779:
    unless rx1536_bstack, rx1536_done3777
    pop $I19, rx1536_bstack
    if_null rx1536_cstack, rx1536_cstack_done3782
    unless rx1536_cstack, rx1536_cstack_done3782
    dec $I19
    set $P11, rx1536_cstack[$I19]
  rx1536_cstack_done3782:
    pop rx1536_rep, rx1536_bstack
    pop rx1536_pos, rx1536_bstack
    pop $I19, rx1536_bstack
    lt rx1536_pos, -1, rx1536_done3777
    lt rx1536_pos, 0, rx1536_fail3779
    eq $I19, 0, rx1536_fail3779
    nqp_islist $I20, rx1536_cstack
    unless $I20, rx1536_jump3780
    elements $I18, rx1536_bstack
    le $I18, 0, rx1536_cut3781
    dec $I18
    set $I18, rx1536_bstack[$I18]
  rx1536_cut3781:
    assign rx1536_cstack, $I18
  rx1536_jump3780:
    jump $I19
  rx1536_done3777:
    rx1536_cur."!cursor_fail"()
    .return (rx1536_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_205_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1399
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1540_start
    .local string rx1540_tgt
    .local int rx1540_pos
    .local int rx1540_off
    .local int rx1540_eos
    .local int rx1540_rep
    .local pmc rx1540_cur
    .local pmc rx1540_curclass
    .local pmc rx1540_bstack
    .local pmc rx1540_cstack
    rx1540_start = self."!cursor_start_all"()
    set rx1540_cur, rx1540_start[0]
    set rx1540_tgt, rx1540_start[1]
    set rx1540_pos, rx1540_start[2]
    set rx1540_curclass, rx1540_start[3]
    set rx1540_bstack, rx1540_start[4]
    set $I19, rx1540_start[5]
    store_lex unicode:"$\x{a2}", rx1540_cur
    length rx1540_eos, rx1540_tgt
    eq $I19, 1, rx1540_restart3791
    gt rx1540_pos, rx1540_eos, rx1540_fail3792
    repr_get_attr_int $I11, self, rx1540_curclass, "$!from"
    ne $I11, -1, rxscan1541_done3798
    goto rxscan1541_scan3797
  rxscan1541_loop3796:
    inc rx1540_pos
    gt rx1540_pos, rx1540_eos, rx1540_fail3792
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!from", rx1540_pos
  rxscan1541_scan3797:
    nqp_rxmark rx1540_bstack, rxscan1541_loop3796, rx1540_pos, 0
  rxscan1541_done3798:
    nqp_rxmark rx1540_bstack, rxcap1542_fail3800, rx1540_pos, 0
    add $I11, rx1540_pos, 1
    gt $I11, rx1540_eos, rx1540_fail3792
    substr $S10, rx1540_tgt, rx1540_pos, 1
    ne $S10, ucs4:"<", rx1540_fail3792
    add rx1540_pos, 1
    nqp_rxpeek $I19, rx1540_bstack, rxcap1542_fail3800
    inc $I19
    set $I11, rx1540_bstack[$I19]
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1540_pos)
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "sym")
    goto rxcap1542_done3799
  rxcap1542_fail3800:
    goto rx1540_fail3792
  rxcap1542_done3799:
    repr_bind_attr_int rx1540_cur, rx1540_curclass, "$!pos", rx1540_pos
    $P11 = rx1540_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1540_curclass, "$!pos"
    lt $I11, 0, rx1540_fail3792
    nqp_rxmark rx1540_bstack, rxsubrule1543_pass3801, -1, 0
  rxsubrule1543_pass3801:
    rx1540_cstack = rx1540_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1540_pos, $P11, rx1540_curclass, "$!pos"
    rx1540_cur."!cursor_pass"(rx1540_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1540_cur)
  rx1540_restart3791:
    repr_get_attr_obj rx1540_cstack, rx1540_cur, rx1540_curclass, "$!cstack"
  rx1540_fail3792:
    unless rx1540_bstack, rx1540_done3790
    pop $I19, rx1540_bstack
    if_null rx1540_cstack, rx1540_cstack_done3795
    unless rx1540_cstack, rx1540_cstack_done3795
    dec $I19
    set $P11, rx1540_cstack[$I19]
  rx1540_cstack_done3795:
    pop rx1540_rep, rx1540_bstack
    pop rx1540_pos, rx1540_bstack
    pop $I19, rx1540_bstack
    lt rx1540_pos, -1, rx1540_done3790
    lt rx1540_pos, 0, rx1540_fail3792
    eq $I19, 0, rx1540_fail3792
    nqp_islist $I20, rx1540_cstack
    unless $I20, rx1540_jump3793
    elements $I18, rx1540_bstack
    le $I18, 0, rx1540_cut3794
    dec $I18
    set $I18, rx1540_bstack[$I18]
  rx1540_cut3794:
    assign rx1540_cstack, $I18
  rx1540_jump3793:
    jump $I19
  rx1540_done3790:
    rx1540_cur."!cursor_fail"()
    .return (rx1540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_206_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1400
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1544_start
    .local string rx1544_tgt
    .local int rx1544_pos
    .local int rx1544_off
    .local int rx1544_eos
    .local int rx1544_rep
    .local pmc rx1544_cur
    .local pmc rx1544_curclass
    .local pmc rx1544_bstack
    .local pmc rx1544_cstack
    rx1544_start = self."!cursor_start_all"()
    set rx1544_cur, rx1544_start[0]
    set rx1544_tgt, rx1544_start[1]
    set rx1544_pos, rx1544_start[2]
    set rx1544_curclass, rx1544_start[3]
    set rx1544_bstack, rx1544_start[4]
    set $I19, rx1544_start[5]
    store_lex unicode:"$\x{a2}", rx1544_cur
    length rx1544_eos, rx1544_tgt
    eq $I19, 1, rx1544_restart3804
    gt rx1544_pos, rx1544_eos, rx1544_fail3805
    repr_get_attr_int $I11, self, rx1544_curclass, "$!from"
    ne $I11, -1, rxscan1545_done3811
    goto rxscan1545_scan3810
  rxscan1545_loop3809:
    inc rx1544_pos
    gt rx1544_pos, rx1544_eos, rx1544_fail3805
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!from", rx1544_pos
  rxscan1545_scan3810:
    nqp_rxmark rx1544_bstack, rxscan1545_loop3809, rx1544_pos, 0
  rxscan1545_done3811:
    nqp_rxmark rx1544_bstack, rxcap1546_fail3813, rx1544_pos, 0
    add $I11, rx1544_pos, 1
    gt $I11, rx1544_eos, rx1544_fail3805
    substr $S10, rx1544_tgt, rx1544_pos, 1
    ne $S10, ucs4:">", rx1544_fail3805
    add rx1544_pos, 1
    nqp_rxpeek $I19, rx1544_bstack, rxcap1546_fail3813
    inc $I19
    set $I11, rx1544_bstack[$I19]
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1544_pos)
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "sym")
    goto rxcap1546_done3812
  rxcap1546_fail3813:
    goto rx1544_fail3805
  rxcap1546_done3812:
    repr_bind_attr_int rx1544_cur, rx1544_curclass, "$!pos", rx1544_pos
    $P11 = rx1544_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1544_curclass, "$!pos"
    lt $I11, 0, rx1544_fail3805
    nqp_rxmark rx1544_bstack, rxsubrule1547_pass3814, -1, 0
  rxsubrule1547_pass3814:
    rx1544_cstack = rx1544_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1544_pos, $P11, rx1544_curclass, "$!pos"
    rx1544_cur."!cursor_pass"(rx1544_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1544_cur)
  rx1544_restart3804:
    repr_get_attr_obj rx1544_cstack, rx1544_cur, rx1544_curclass, "$!cstack"
  rx1544_fail3805:
    unless rx1544_bstack, rx1544_done3803
    pop $I19, rx1544_bstack
    if_null rx1544_cstack, rx1544_cstack_done3808
    unless rx1544_cstack, rx1544_cstack_done3808
    dec $I19
    set $P11, rx1544_cstack[$I19]
  rx1544_cstack_done3808:
    pop rx1544_rep, rx1544_bstack
    pop rx1544_pos, rx1544_bstack
    pop $I19, rx1544_bstack
    lt rx1544_pos, -1, rx1544_done3803
    lt rx1544_pos, 0, rx1544_fail3805
    eq $I19, 0, rx1544_fail3805
    nqp_islist $I20, rx1544_cstack
    unless $I20, rx1544_jump3806
    elements $I18, rx1544_bstack
    le $I18, 0, rx1544_cut3807
    dec $I18
    set $I18, rx1544_bstack[$I18]
  rx1544_cut3807:
    assign rx1544_cstack, $I18
  rx1544_jump3806:
    jump $I19
  rx1544_done3803:
    rx1544_cur."!cursor_fail"()
    .return (rx1544_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_207_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1548_start
    .local string rx1548_tgt
    .local int rx1548_pos
    .local int rx1548_off
    .local int rx1548_eos
    .local int rx1548_rep
    .local pmc rx1548_cur
    .local pmc rx1548_curclass
    .local pmc rx1548_bstack
    .local pmc rx1548_cstack
    rx1548_start = self."!cursor_start_all"()
    set rx1548_cur, rx1548_start[0]
    set rx1548_tgt, rx1548_start[1]
    set rx1548_pos, rx1548_start[2]
    set rx1548_curclass, rx1548_start[3]
    set rx1548_bstack, rx1548_start[4]
    set $I19, rx1548_start[5]
    store_lex unicode:"$\x{a2}", rx1548_cur
    length rx1548_eos, rx1548_tgt
    eq $I19, 1, rx1548_restart3817
    gt rx1548_pos, rx1548_eos, rx1548_fail3818
    repr_get_attr_int $I11, self, rx1548_curclass, "$!from"
    ne $I11, -1, rxscan1549_done3824
    goto rxscan1549_scan3823
  rxscan1549_loop3822:
    inc rx1548_pos
    gt rx1548_pos, rx1548_eos, rx1548_fail3818
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!from", rx1548_pos
  rxscan1549_scan3823:
    nqp_rxmark rx1548_bstack, rxscan1549_loop3822, rx1548_pos, 0
  rxscan1549_done3824:
    nqp_rxmark rx1548_bstack, rxcap1550_fail3826, rx1548_pos, 0
    add $I11, rx1548_pos, 2
    gt $I11, rx1548_eos, rx1548_fail3818
    substr $S10, rx1548_tgt, rx1548_pos, 2
    ne $S10, ucs4:"eq", rx1548_fail3818
    add rx1548_pos, 2
    nqp_rxpeek $I19, rx1548_bstack, rxcap1550_fail3826
    inc $I19
    set $I11, rx1548_bstack[$I19]
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1548_pos)
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "sym")
    goto rxcap1550_done3825
  rxcap1550_fail3826:
    goto rx1548_fail3818
  rxcap1550_done3825:
    repr_bind_attr_int rx1548_cur, rx1548_curclass, "$!pos", rx1548_pos
    $P11 = rx1548_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1548_curclass, "$!pos"
    lt $I11, 0, rx1548_fail3818
    nqp_rxmark rx1548_bstack, rxsubrule1551_pass3827, -1, 0
  rxsubrule1551_pass3827:
    rx1548_cstack = rx1548_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1548_pos, $P11, rx1548_curclass, "$!pos"
    rx1548_cur."!cursor_pass"(rx1548_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1548_cur)
  rx1548_restart3817:
    repr_get_attr_obj rx1548_cstack, rx1548_cur, rx1548_curclass, "$!cstack"
  rx1548_fail3818:
    unless rx1548_bstack, rx1548_done3816
    pop $I19, rx1548_bstack
    if_null rx1548_cstack, rx1548_cstack_done3821
    unless rx1548_cstack, rx1548_cstack_done3821
    dec $I19
    set $P11, rx1548_cstack[$I19]
  rx1548_cstack_done3821:
    pop rx1548_rep, rx1548_bstack
    pop rx1548_pos, rx1548_bstack
    pop $I19, rx1548_bstack
    lt rx1548_pos, -1, rx1548_done3816
    lt rx1548_pos, 0, rx1548_fail3818
    eq $I19, 0, rx1548_fail3818
    nqp_islist $I20, rx1548_cstack
    unless $I20, rx1548_jump3819
    elements $I18, rx1548_bstack
    le $I18, 0, rx1548_cut3820
    dec $I18
    set $I18, rx1548_bstack[$I18]
  rx1548_cut3820:
    assign rx1548_cstack, $I18
  rx1548_jump3819:
    jump $I19
  rx1548_done3816:
    rx1548_cur."!cursor_fail"()
    .return (rx1548_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_208_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1552_start
    .local string rx1552_tgt
    .local int rx1552_pos
    .local int rx1552_off
    .local int rx1552_eos
    .local int rx1552_rep
    .local pmc rx1552_cur
    .local pmc rx1552_curclass
    .local pmc rx1552_bstack
    .local pmc rx1552_cstack
    rx1552_start = self."!cursor_start_all"()
    set rx1552_cur, rx1552_start[0]
    set rx1552_tgt, rx1552_start[1]
    set rx1552_pos, rx1552_start[2]
    set rx1552_curclass, rx1552_start[3]
    set rx1552_bstack, rx1552_start[4]
    set $I19, rx1552_start[5]
    store_lex unicode:"$\x{a2}", rx1552_cur
    length rx1552_eos, rx1552_tgt
    eq $I19, 1, rx1552_restart3830
    gt rx1552_pos, rx1552_eos, rx1552_fail3831
    repr_get_attr_int $I11, self, rx1552_curclass, "$!from"
    ne $I11, -1, rxscan1553_done3837
    goto rxscan1553_scan3836
  rxscan1553_loop3835:
    inc rx1552_pos
    gt rx1552_pos, rx1552_eos, rx1552_fail3831
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!from", rx1552_pos
  rxscan1553_scan3836:
    nqp_rxmark rx1552_bstack, rxscan1553_loop3835, rx1552_pos, 0
  rxscan1553_done3837:
    nqp_rxmark rx1552_bstack, rxcap1554_fail3839, rx1552_pos, 0
    add $I11, rx1552_pos, 2
    gt $I11, rx1552_eos, rx1552_fail3831
    substr $S10, rx1552_tgt, rx1552_pos, 2
    ne $S10, ucs4:"ne", rx1552_fail3831
    add rx1552_pos, 2
    nqp_rxpeek $I19, rx1552_bstack, rxcap1554_fail3839
    inc $I19
    set $I11, rx1552_bstack[$I19]
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1552_pos)
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "sym")
    goto rxcap1554_done3838
  rxcap1554_fail3839:
    goto rx1552_fail3831
  rxcap1554_done3838:
    repr_bind_attr_int rx1552_cur, rx1552_curclass, "$!pos", rx1552_pos
    $P11 = rx1552_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1552_curclass, "$!pos"
    lt $I11, 0, rx1552_fail3831
    nqp_rxmark rx1552_bstack, rxsubrule1555_pass3840, -1, 0
  rxsubrule1555_pass3840:
    rx1552_cstack = rx1552_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1552_pos, $P11, rx1552_curclass, "$!pos"
    rx1552_cur."!cursor_pass"(rx1552_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1552_cur)
  rx1552_restart3830:
    repr_get_attr_obj rx1552_cstack, rx1552_cur, rx1552_curclass, "$!cstack"
  rx1552_fail3831:
    unless rx1552_bstack, rx1552_done3829
    pop $I19, rx1552_bstack
    if_null rx1552_cstack, rx1552_cstack_done3834
    unless rx1552_cstack, rx1552_cstack_done3834
    dec $I19
    set $P11, rx1552_cstack[$I19]
  rx1552_cstack_done3834:
    pop rx1552_rep, rx1552_bstack
    pop rx1552_pos, rx1552_bstack
    pop $I19, rx1552_bstack
    lt rx1552_pos, -1, rx1552_done3829
    lt rx1552_pos, 0, rx1552_fail3831
    eq $I19, 0, rx1552_fail3831
    nqp_islist $I20, rx1552_cstack
    unless $I20, rx1552_jump3832
    elements $I18, rx1552_bstack
    le $I18, 0, rx1552_cut3833
    dec $I18
    set $I18, rx1552_bstack[$I18]
  rx1552_cut3833:
    assign rx1552_cstack, $I18
  rx1552_jump3832:
    jump $I19
  rx1552_done3829:
    rx1552_cur."!cursor_fail"()
    .return (rx1552_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_209_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1403
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1556_start
    .local string rx1556_tgt
    .local int rx1556_pos
    .local int rx1556_off
    .local int rx1556_eos
    .local int rx1556_rep
    .local pmc rx1556_cur
    .local pmc rx1556_curclass
    .local pmc rx1556_bstack
    .local pmc rx1556_cstack
    rx1556_start = self."!cursor_start_all"()
    set rx1556_cur, rx1556_start[0]
    set rx1556_tgt, rx1556_start[1]
    set rx1556_pos, rx1556_start[2]
    set rx1556_curclass, rx1556_start[3]
    set rx1556_bstack, rx1556_start[4]
    set $I19, rx1556_start[5]
    store_lex unicode:"$\x{a2}", rx1556_cur
    length rx1556_eos, rx1556_tgt
    eq $I19, 1, rx1556_restart3843
    gt rx1556_pos, rx1556_eos, rx1556_fail3844
    repr_get_attr_int $I11, self, rx1556_curclass, "$!from"
    ne $I11, -1, rxscan1557_done3850
    goto rxscan1557_scan3849
  rxscan1557_loop3848:
    inc rx1556_pos
    gt rx1556_pos, rx1556_eos, rx1556_fail3844
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!from", rx1556_pos
  rxscan1557_scan3849:
    nqp_rxmark rx1556_bstack, rxscan1557_loop3848, rx1556_pos, 0
  rxscan1557_done3850:
    nqp_rxmark rx1556_bstack, rxcap1558_fail3852, rx1556_pos, 0
    add $I11, rx1556_pos, 2
    gt $I11, rx1556_eos, rx1556_fail3844
    substr $S10, rx1556_tgt, rx1556_pos, 2
    ne $S10, ucs4:"le", rx1556_fail3844
    add rx1556_pos, 2
    nqp_rxpeek $I19, rx1556_bstack, rxcap1558_fail3852
    inc $I19
    set $I11, rx1556_bstack[$I19]
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1556_pos)
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "sym")
    goto rxcap1558_done3851
  rxcap1558_fail3852:
    goto rx1556_fail3844
  rxcap1558_done3851:
    repr_bind_attr_int rx1556_cur, rx1556_curclass, "$!pos", rx1556_pos
    $P11 = rx1556_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1556_curclass, "$!pos"
    lt $I11, 0, rx1556_fail3844
    nqp_rxmark rx1556_bstack, rxsubrule1559_pass3853, -1, 0
  rxsubrule1559_pass3853:
    rx1556_cstack = rx1556_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1556_pos, $P11, rx1556_curclass, "$!pos"
    rx1556_cur."!cursor_pass"(rx1556_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1556_cur)
  rx1556_restart3843:
    repr_get_attr_obj rx1556_cstack, rx1556_cur, rx1556_curclass, "$!cstack"
  rx1556_fail3844:
    unless rx1556_bstack, rx1556_done3842
    pop $I19, rx1556_bstack
    if_null rx1556_cstack, rx1556_cstack_done3847
    unless rx1556_cstack, rx1556_cstack_done3847
    dec $I19
    set $P11, rx1556_cstack[$I19]
  rx1556_cstack_done3847:
    pop rx1556_rep, rx1556_bstack
    pop rx1556_pos, rx1556_bstack
    pop $I19, rx1556_bstack
    lt rx1556_pos, -1, rx1556_done3842
    lt rx1556_pos, 0, rx1556_fail3844
    eq $I19, 0, rx1556_fail3844
    nqp_islist $I20, rx1556_cstack
    unless $I20, rx1556_jump3845
    elements $I18, rx1556_bstack
    le $I18, 0, rx1556_cut3846
    dec $I18
    set $I18, rx1556_bstack[$I18]
  rx1556_cut3846:
    assign rx1556_cstack, $I18
  rx1556_jump3845:
    jump $I19
  rx1556_done3842:
    rx1556_cur."!cursor_fail"()
    .return (rx1556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_210_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1404
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1560_start
    .local string rx1560_tgt
    .local int rx1560_pos
    .local int rx1560_off
    .local int rx1560_eos
    .local int rx1560_rep
    .local pmc rx1560_cur
    .local pmc rx1560_curclass
    .local pmc rx1560_bstack
    .local pmc rx1560_cstack
    rx1560_start = self."!cursor_start_all"()
    set rx1560_cur, rx1560_start[0]
    set rx1560_tgt, rx1560_start[1]
    set rx1560_pos, rx1560_start[2]
    set rx1560_curclass, rx1560_start[3]
    set rx1560_bstack, rx1560_start[4]
    set $I19, rx1560_start[5]
    store_lex unicode:"$\x{a2}", rx1560_cur
    length rx1560_eos, rx1560_tgt
    eq $I19, 1, rx1560_restart3856
    gt rx1560_pos, rx1560_eos, rx1560_fail3857
    repr_get_attr_int $I11, self, rx1560_curclass, "$!from"
    ne $I11, -1, rxscan1561_done3863
    goto rxscan1561_scan3862
  rxscan1561_loop3861:
    inc rx1560_pos
    gt rx1560_pos, rx1560_eos, rx1560_fail3857
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!from", rx1560_pos
  rxscan1561_scan3862:
    nqp_rxmark rx1560_bstack, rxscan1561_loop3861, rx1560_pos, 0
  rxscan1561_done3863:
    nqp_rxmark rx1560_bstack, rxcap1562_fail3865, rx1560_pos, 0
    add $I11, rx1560_pos, 2
    gt $I11, rx1560_eos, rx1560_fail3857
    substr $S10, rx1560_tgt, rx1560_pos, 2
    ne $S10, ucs4:"ge", rx1560_fail3857
    add rx1560_pos, 2
    nqp_rxpeek $I19, rx1560_bstack, rxcap1562_fail3865
    inc $I19
    set $I11, rx1560_bstack[$I19]
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1560_pos)
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "sym")
    goto rxcap1562_done3864
  rxcap1562_fail3865:
    goto rx1560_fail3857
  rxcap1562_done3864:
    repr_bind_attr_int rx1560_cur, rx1560_curclass, "$!pos", rx1560_pos
    $P11 = rx1560_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1560_curclass, "$!pos"
    lt $I11, 0, rx1560_fail3857
    nqp_rxmark rx1560_bstack, rxsubrule1563_pass3866, -1, 0
  rxsubrule1563_pass3866:
    rx1560_cstack = rx1560_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1560_pos, $P11, rx1560_curclass, "$!pos"
    rx1560_cur."!cursor_pass"(rx1560_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1560_cur)
  rx1560_restart3856:
    repr_get_attr_obj rx1560_cstack, rx1560_cur, rx1560_curclass, "$!cstack"
  rx1560_fail3857:
    unless rx1560_bstack, rx1560_done3855
    pop $I19, rx1560_bstack
    if_null rx1560_cstack, rx1560_cstack_done3860
    unless rx1560_cstack, rx1560_cstack_done3860
    dec $I19
    set $P11, rx1560_cstack[$I19]
  rx1560_cstack_done3860:
    pop rx1560_rep, rx1560_bstack
    pop rx1560_pos, rx1560_bstack
    pop $I19, rx1560_bstack
    lt rx1560_pos, -1, rx1560_done3855
    lt rx1560_pos, 0, rx1560_fail3857
    eq $I19, 0, rx1560_fail3857
    nqp_islist $I20, rx1560_cstack
    unless $I20, rx1560_jump3858
    elements $I18, rx1560_bstack
    le $I18, 0, rx1560_cut3859
    dec $I18
    set $I18, rx1560_bstack[$I18]
  rx1560_cut3859:
    assign rx1560_cstack, $I18
  rx1560_jump3858:
    jump $I19
  rx1560_done3855:
    rx1560_cur."!cursor_fail"()
    .return (rx1560_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_211_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1405
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1564_start
    .local string rx1564_tgt
    .local int rx1564_pos
    .local int rx1564_off
    .local int rx1564_eos
    .local int rx1564_rep
    .local pmc rx1564_cur
    .local pmc rx1564_curclass
    .local pmc rx1564_bstack
    .local pmc rx1564_cstack
    rx1564_start = self."!cursor_start_all"()
    set rx1564_cur, rx1564_start[0]
    set rx1564_tgt, rx1564_start[1]
    set rx1564_pos, rx1564_start[2]
    set rx1564_curclass, rx1564_start[3]
    set rx1564_bstack, rx1564_start[4]
    set $I19, rx1564_start[5]
    store_lex unicode:"$\x{a2}", rx1564_cur
    length rx1564_eos, rx1564_tgt
    eq $I19, 1, rx1564_restart3869
    gt rx1564_pos, rx1564_eos, rx1564_fail3870
    repr_get_attr_int $I11, self, rx1564_curclass, "$!from"
    ne $I11, -1, rxscan1565_done3876
    goto rxscan1565_scan3875
  rxscan1565_loop3874:
    inc rx1564_pos
    gt rx1564_pos, rx1564_eos, rx1564_fail3870
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!from", rx1564_pos
  rxscan1565_scan3875:
    nqp_rxmark rx1564_bstack, rxscan1565_loop3874, rx1564_pos, 0
  rxscan1565_done3876:
    nqp_rxmark rx1564_bstack, rxcap1566_fail3878, rx1564_pos, 0
    add $I11, rx1564_pos, 2
    gt $I11, rx1564_eos, rx1564_fail3870
    substr $S10, rx1564_tgt, rx1564_pos, 2
    ne $S10, ucs4:"lt", rx1564_fail3870
    add rx1564_pos, 2
    nqp_rxpeek $I19, rx1564_bstack, rxcap1566_fail3878
    inc $I19
    set $I11, rx1564_bstack[$I19]
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1564_pos)
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "sym")
    goto rxcap1566_done3877
  rxcap1566_fail3878:
    goto rx1564_fail3870
  rxcap1566_done3877:
    repr_bind_attr_int rx1564_cur, rx1564_curclass, "$!pos", rx1564_pos
    $P11 = rx1564_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1564_curclass, "$!pos"
    lt $I11, 0, rx1564_fail3870
    nqp_rxmark rx1564_bstack, rxsubrule1567_pass3879, -1, 0
  rxsubrule1567_pass3879:
    rx1564_cstack = rx1564_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1564_pos, $P11, rx1564_curclass, "$!pos"
    rx1564_cur."!cursor_pass"(rx1564_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1564_cur)
  rx1564_restart3869:
    repr_get_attr_obj rx1564_cstack, rx1564_cur, rx1564_curclass, "$!cstack"
  rx1564_fail3870:
    unless rx1564_bstack, rx1564_done3868
    pop $I19, rx1564_bstack
    if_null rx1564_cstack, rx1564_cstack_done3873
    unless rx1564_cstack, rx1564_cstack_done3873
    dec $I19
    set $P11, rx1564_cstack[$I19]
  rx1564_cstack_done3873:
    pop rx1564_rep, rx1564_bstack
    pop rx1564_pos, rx1564_bstack
    pop $I19, rx1564_bstack
    lt rx1564_pos, -1, rx1564_done3868
    lt rx1564_pos, 0, rx1564_fail3870
    eq $I19, 0, rx1564_fail3870
    nqp_islist $I20, rx1564_cstack
    unless $I20, rx1564_jump3871
    elements $I18, rx1564_bstack
    le $I18, 0, rx1564_cut3872
    dec $I18
    set $I18, rx1564_bstack[$I18]
  rx1564_cut3872:
    assign rx1564_cstack, $I18
  rx1564_jump3871:
    jump $I19
  rx1564_done3868:
    rx1564_cur."!cursor_fail"()
    .return (rx1564_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_212_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1406
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1568_start
    .local string rx1568_tgt
    .local int rx1568_pos
    .local int rx1568_off
    .local int rx1568_eos
    .local int rx1568_rep
    .local pmc rx1568_cur
    .local pmc rx1568_curclass
    .local pmc rx1568_bstack
    .local pmc rx1568_cstack
    rx1568_start = self."!cursor_start_all"()
    set rx1568_cur, rx1568_start[0]
    set rx1568_tgt, rx1568_start[1]
    set rx1568_pos, rx1568_start[2]
    set rx1568_curclass, rx1568_start[3]
    set rx1568_bstack, rx1568_start[4]
    set $I19, rx1568_start[5]
    store_lex unicode:"$\x{a2}", rx1568_cur
    length rx1568_eos, rx1568_tgt
    eq $I19, 1, rx1568_restart3882
    gt rx1568_pos, rx1568_eos, rx1568_fail3883
    repr_get_attr_int $I11, self, rx1568_curclass, "$!from"
    ne $I11, -1, rxscan1569_done3889
    goto rxscan1569_scan3888
  rxscan1569_loop3887:
    inc rx1568_pos
    gt rx1568_pos, rx1568_eos, rx1568_fail3883
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!from", rx1568_pos
  rxscan1569_scan3888:
    nqp_rxmark rx1568_bstack, rxscan1569_loop3887, rx1568_pos, 0
  rxscan1569_done3889:
    nqp_rxmark rx1568_bstack, rxcap1570_fail3891, rx1568_pos, 0
    add $I11, rx1568_pos, 2
    gt $I11, rx1568_eos, rx1568_fail3883
    substr $S10, rx1568_tgt, rx1568_pos, 2
    ne $S10, ucs4:"gt", rx1568_fail3883
    add rx1568_pos, 2
    nqp_rxpeek $I19, rx1568_bstack, rxcap1570_fail3891
    inc $I19
    set $I11, rx1568_bstack[$I19]
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1568_pos)
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "sym")
    goto rxcap1570_done3890
  rxcap1570_fail3891:
    goto rx1568_fail3883
  rxcap1570_done3890:
    repr_bind_attr_int rx1568_cur, rx1568_curclass, "$!pos", rx1568_pos
    $P11 = rx1568_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1568_curclass, "$!pos"
    lt $I11, 0, rx1568_fail3883
    nqp_rxmark rx1568_bstack, rxsubrule1571_pass3892, -1, 0
  rxsubrule1571_pass3892:
    rx1568_cstack = rx1568_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1568_pos, $P11, rx1568_curclass, "$!pos"
    rx1568_cur."!cursor_pass"(rx1568_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1568_cur)
  rx1568_restart3882:
    repr_get_attr_obj rx1568_cstack, rx1568_cur, rx1568_curclass, "$!cstack"
  rx1568_fail3883:
    unless rx1568_bstack, rx1568_done3881
    pop $I19, rx1568_bstack
    if_null rx1568_cstack, rx1568_cstack_done3886
    unless rx1568_cstack, rx1568_cstack_done3886
    dec $I19
    set $P11, rx1568_cstack[$I19]
  rx1568_cstack_done3886:
    pop rx1568_rep, rx1568_bstack
    pop rx1568_pos, rx1568_bstack
    pop $I19, rx1568_bstack
    lt rx1568_pos, -1, rx1568_done3881
    lt rx1568_pos, 0, rx1568_fail3883
    eq $I19, 0, rx1568_fail3883
    nqp_islist $I20, rx1568_cstack
    unless $I20, rx1568_jump3884
    elements $I18, rx1568_bstack
    le $I18, 0, rx1568_cut3885
    dec $I18
    set $I18, rx1568_bstack[$I18]
  rx1568_cut3885:
    assign rx1568_cstack, $I18
  rx1568_jump3884:
    jump $I19
  rx1568_done3881:
    rx1568_cur."!cursor_fail"()
    .return (rx1568_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_213_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1407
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1572_start
    .local string rx1572_tgt
    .local int rx1572_pos
    .local int rx1572_off
    .local int rx1572_eos
    .local int rx1572_rep
    .local pmc rx1572_cur
    .local pmc rx1572_curclass
    .local pmc rx1572_bstack
    .local pmc rx1572_cstack
    rx1572_start = self."!cursor_start_all"()
    set rx1572_cur, rx1572_start[0]
    set rx1572_tgt, rx1572_start[1]
    set rx1572_pos, rx1572_start[2]
    set rx1572_curclass, rx1572_start[3]
    set rx1572_bstack, rx1572_start[4]
    set $I19, rx1572_start[5]
    store_lex unicode:"$\x{a2}", rx1572_cur
    length rx1572_eos, rx1572_tgt
    eq $I19, 1, rx1572_restart3895
    gt rx1572_pos, rx1572_eos, rx1572_fail3896
    repr_get_attr_int $I11, self, rx1572_curclass, "$!from"
    ne $I11, -1, rxscan1573_done3902
    goto rxscan1573_scan3901
  rxscan1573_loop3900:
    inc rx1572_pos
    gt rx1572_pos, rx1572_eos, rx1572_fail3896
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!from", rx1572_pos
  rxscan1573_scan3901:
    nqp_rxmark rx1572_bstack, rxscan1573_loop3900, rx1572_pos, 0
  rxscan1573_done3902:
    nqp_rxmark rx1572_bstack, rxcap1574_fail3904, rx1572_pos, 0
    add $I11, rx1572_pos, 3
    gt $I11, rx1572_eos, rx1572_fail3896
    substr $S10, rx1572_tgt, rx1572_pos, 3
    ne $S10, ucs4:"=:=", rx1572_fail3896
    add rx1572_pos, 3
    nqp_rxpeek $I19, rx1572_bstack, rxcap1574_fail3904
    inc $I19
    set $I11, rx1572_bstack[$I19]
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1572_pos)
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "sym")
    goto rxcap1574_done3903
  rxcap1574_fail3904:
    goto rx1572_fail3896
  rxcap1574_done3903:
    repr_bind_attr_int rx1572_cur, rx1572_curclass, "$!pos", rx1572_pos
    $P11 = rx1572_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1572_curclass, "$!pos"
    lt $I11, 0, rx1572_fail3896
    nqp_rxmark rx1572_bstack, rxsubrule1575_pass3905, -1, 0
  rxsubrule1575_pass3905:
    rx1572_cstack = rx1572_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1572_pos, $P11, rx1572_curclass, "$!pos"
    rx1572_cur."!cursor_pass"(rx1572_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1572_cur)
  rx1572_restart3895:
    repr_get_attr_obj rx1572_cstack, rx1572_cur, rx1572_curclass, "$!cstack"
  rx1572_fail3896:
    unless rx1572_bstack, rx1572_done3894
    pop $I19, rx1572_bstack
    if_null rx1572_cstack, rx1572_cstack_done3899
    unless rx1572_cstack, rx1572_cstack_done3899
    dec $I19
    set $P11, rx1572_cstack[$I19]
  rx1572_cstack_done3899:
    pop rx1572_rep, rx1572_bstack
    pop rx1572_pos, rx1572_bstack
    pop $I19, rx1572_bstack
    lt rx1572_pos, -1, rx1572_done3894
    lt rx1572_pos, 0, rx1572_fail3896
    eq $I19, 0, rx1572_fail3896
    nqp_islist $I20, rx1572_cstack
    unless $I20, rx1572_jump3897
    elements $I18, rx1572_bstack
    le $I18, 0, rx1572_cut3898
    dec $I18
    set $I18, rx1572_bstack[$I18]
  rx1572_cut3898:
    assign rx1572_cstack, $I18
  rx1572_jump3897:
    jump $I19
  rx1572_done3894:
    rx1572_cur."!cursor_fail"()
    .return (rx1572_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_214_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1408
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1576_start
    .local string rx1576_tgt
    .local int rx1576_pos
    .local int rx1576_off
    .local int rx1576_eos
    .local int rx1576_rep
    .local pmc rx1576_cur
    .local pmc rx1576_curclass
    .local pmc rx1576_bstack
    .local pmc rx1576_cstack
    rx1576_start = self."!cursor_start_all"()
    set rx1576_cur, rx1576_start[0]
    set rx1576_tgt, rx1576_start[1]
    set rx1576_pos, rx1576_start[2]
    set rx1576_curclass, rx1576_start[3]
    set rx1576_bstack, rx1576_start[4]
    set $I19, rx1576_start[5]
    store_lex unicode:"$\x{a2}", rx1576_cur
    length rx1576_eos, rx1576_tgt
    eq $I19, 1, rx1576_restart3908
    gt rx1576_pos, rx1576_eos, rx1576_fail3909
    repr_get_attr_int $I11, self, rx1576_curclass, "$!from"
    ne $I11, -1, rxscan1577_done3915
    goto rxscan1577_scan3914
  rxscan1577_loop3913:
    inc rx1576_pos
    gt rx1576_pos, rx1576_eos, rx1576_fail3909
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!from", rx1576_pos
  rxscan1577_scan3914:
    nqp_rxmark rx1576_bstack, rxscan1577_loop3913, rx1576_pos, 0
  rxscan1577_done3915:
    nqp_rxmark rx1576_bstack, rxcap1578_fail3917, rx1576_pos, 0
    add $I11, rx1576_pos, 2
    gt $I11, rx1576_eos, rx1576_fail3909
    substr $S10, rx1576_tgt, rx1576_pos, 2
    ne $S10, ucs4:"~~", rx1576_fail3909
    add rx1576_pos, 2
    nqp_rxpeek $I19, rx1576_bstack, rxcap1578_fail3917
    inc $I19
    set $I11, rx1576_bstack[$I19]
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1576_pos)
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "sym")
    goto rxcap1578_done3916
  rxcap1578_fail3917:
    goto rx1576_fail3909
  rxcap1578_done3916:
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3909
    nqp_rxmark rx1576_bstack, rxsubrule1579_pass3918, -1, 0
  rxsubrule1579_pass3918:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    rx1576_cur."!cursor_pass"(rx1576_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1576_cur)
  rx1576_restart3908:
    repr_get_attr_obj rx1576_cstack, rx1576_cur, rx1576_curclass, "$!cstack"
  rx1576_fail3909:
    unless rx1576_bstack, rx1576_done3907
    pop $I19, rx1576_bstack
    if_null rx1576_cstack, rx1576_cstack_done3912
    unless rx1576_cstack, rx1576_cstack_done3912
    dec $I19
    set $P11, rx1576_cstack[$I19]
  rx1576_cstack_done3912:
    pop rx1576_rep, rx1576_bstack
    pop rx1576_pos, rx1576_bstack
    pop $I19, rx1576_bstack
    lt rx1576_pos, -1, rx1576_done3907
    lt rx1576_pos, 0, rx1576_fail3909
    eq $I19, 0, rx1576_fail3909
    nqp_islist $I20, rx1576_cstack
    unless $I20, rx1576_jump3910
    elements $I18, rx1576_bstack
    le $I18, 0, rx1576_cut3911
    dec $I18
    set $I18, rx1576_bstack[$I18]
  rx1576_cut3911:
    assign rx1576_cstack, $I18
  rx1576_jump3910:
    jump $I19
  rx1576_done3907:
    rx1576_cur."!cursor_fail"()
    .return (rx1576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_215_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1410
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1580_start
    .local string rx1580_tgt
    .local int rx1580_pos
    .local int rx1580_off
    .local int rx1580_eos
    .local int rx1580_rep
    .local pmc rx1580_cur
    .local pmc rx1580_curclass
    .local pmc rx1580_bstack
    .local pmc rx1580_cstack
    rx1580_start = self."!cursor_start_all"()
    set rx1580_cur, rx1580_start[0]
    set rx1580_tgt, rx1580_start[1]
    set rx1580_pos, rx1580_start[2]
    set rx1580_curclass, rx1580_start[3]
    set rx1580_bstack, rx1580_start[4]
    set $I19, rx1580_start[5]
    store_lex unicode:"$\x{a2}", rx1580_cur
    length rx1580_eos, rx1580_tgt
    eq $I19, 1, rx1580_restart3921
    gt rx1580_pos, rx1580_eos, rx1580_fail3922
    repr_get_attr_int $I11, self, rx1580_curclass, "$!from"
    ne $I11, -1, rxscan1581_done3928
    goto rxscan1581_scan3927
  rxscan1581_loop3926:
    inc rx1580_pos
    gt rx1580_pos, rx1580_eos, rx1580_fail3922
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!from", rx1580_pos
  rxscan1581_scan3927:
    nqp_rxmark rx1580_bstack, rxscan1581_loop3926, rx1580_pos, 0
  rxscan1581_done3928:
    nqp_rxmark rx1580_bstack, rxcap1582_fail3930, rx1580_pos, 0
    add $I11, rx1580_pos, 2
    gt $I11, rx1580_eos, rx1580_fail3922
    substr $S10, rx1580_tgt, rx1580_pos, 2
    ne $S10, ucs4:"&&", rx1580_fail3922
    add rx1580_pos, 2
    nqp_rxpeek $I19, rx1580_bstack, rxcap1582_fail3930
    inc $I19
    set $I11, rx1580_bstack[$I19]
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1580_pos)
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "sym")
    goto rxcap1582_done3929
  rxcap1582_fail3930:
    goto rx1580_fail3922
  rxcap1582_done3929:
    repr_bind_attr_int rx1580_cur, rx1580_curclass, "$!pos", rx1580_pos
    $P11 = rx1580_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1580_curclass, "$!pos"
    lt $I11, 0, rx1580_fail3922
    nqp_rxmark rx1580_bstack, rxsubrule1583_pass3931, -1, 0
  rxsubrule1583_pass3931:
    rx1580_cstack = rx1580_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1580_pos, $P11, rx1580_curclass, "$!pos"
    rx1580_cur."!cursor_pass"(rx1580_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1580_cur)
  rx1580_restart3921:
    repr_get_attr_obj rx1580_cstack, rx1580_cur, rx1580_curclass, "$!cstack"
  rx1580_fail3922:
    unless rx1580_bstack, rx1580_done3920
    pop $I19, rx1580_bstack
    if_null rx1580_cstack, rx1580_cstack_done3925
    unless rx1580_cstack, rx1580_cstack_done3925
    dec $I19
    set $P11, rx1580_cstack[$I19]
  rx1580_cstack_done3925:
    pop rx1580_rep, rx1580_bstack
    pop rx1580_pos, rx1580_bstack
    pop $I19, rx1580_bstack
    lt rx1580_pos, -1, rx1580_done3920
    lt rx1580_pos, 0, rx1580_fail3922
    eq $I19, 0, rx1580_fail3922
    nqp_islist $I20, rx1580_cstack
    unless $I20, rx1580_jump3923
    elements $I18, rx1580_bstack
    le $I18, 0, rx1580_cut3924
    dec $I18
    set $I18, rx1580_bstack[$I18]
  rx1580_cut3924:
    assign rx1580_cstack, $I18
  rx1580_jump3923:
    jump $I19
  rx1580_done3920:
    rx1580_cur."!cursor_fail"()
    .return (rx1580_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_216_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1584_start
    .local string rx1584_tgt
    .local int rx1584_pos
    .local int rx1584_off
    .local int rx1584_eos
    .local int rx1584_rep
    .local pmc rx1584_cur
    .local pmc rx1584_curclass
    .local pmc rx1584_bstack
    .local pmc rx1584_cstack
    rx1584_start = self."!cursor_start_all"()
    set rx1584_cur, rx1584_start[0]
    set rx1584_tgt, rx1584_start[1]
    set rx1584_pos, rx1584_start[2]
    set rx1584_curclass, rx1584_start[3]
    set rx1584_bstack, rx1584_start[4]
    set $I19, rx1584_start[5]
    store_lex unicode:"$\x{a2}", rx1584_cur
    length rx1584_eos, rx1584_tgt
    eq $I19, 1, rx1584_restart3934
    gt rx1584_pos, rx1584_eos, rx1584_fail3935
    repr_get_attr_int $I11, self, rx1584_curclass, "$!from"
    ne $I11, -1, rxscan1585_done3941
    goto rxscan1585_scan3940
  rxscan1585_loop3939:
    inc rx1584_pos
    gt rx1584_pos, rx1584_eos, rx1584_fail3935
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!from", rx1584_pos
  rxscan1585_scan3940:
    nqp_rxmark rx1584_bstack, rxscan1585_loop3939, rx1584_pos, 0
  rxscan1585_done3941:
    nqp_rxmark rx1584_bstack, rxcap1586_fail3943, rx1584_pos, 0
    add $I11, rx1584_pos, 2
    gt $I11, rx1584_eos, rx1584_fail3935
    substr $S10, rx1584_tgt, rx1584_pos, 2
    ne $S10, ucs4:"||", rx1584_fail3935
    add rx1584_pos, 2
    nqp_rxpeek $I19, rx1584_bstack, rxcap1586_fail3943
    inc $I19
    set $I11, rx1584_bstack[$I19]
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1584_pos)
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "sym")
    goto rxcap1586_done3942
  rxcap1586_fail3943:
    goto rx1584_fail3935
  rxcap1586_done3942:
    repr_bind_attr_int rx1584_cur, rx1584_curclass, "$!pos", rx1584_pos
    $P11 = rx1584_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1584_curclass, "$!pos"
    lt $I11, 0, rx1584_fail3935
    nqp_rxmark rx1584_bstack, rxsubrule1587_pass3944, -1, 0
  rxsubrule1587_pass3944:
    rx1584_cstack = rx1584_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1584_pos, $P11, rx1584_curclass, "$!pos"
    rx1584_cur."!cursor_pass"(rx1584_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1584_cur)
  rx1584_restart3934:
    repr_get_attr_obj rx1584_cstack, rx1584_cur, rx1584_curclass, "$!cstack"
  rx1584_fail3935:
    unless rx1584_bstack, rx1584_done3933
    pop $I19, rx1584_bstack
    if_null rx1584_cstack, rx1584_cstack_done3938
    unless rx1584_cstack, rx1584_cstack_done3938
    dec $I19
    set $P11, rx1584_cstack[$I19]
  rx1584_cstack_done3938:
    pop rx1584_rep, rx1584_bstack
    pop rx1584_pos, rx1584_bstack
    pop $I19, rx1584_bstack
    lt rx1584_pos, -1, rx1584_done3933
    lt rx1584_pos, 0, rx1584_fail3935
    eq $I19, 0, rx1584_fail3935
    nqp_islist $I20, rx1584_cstack
    unless $I20, rx1584_jump3936
    elements $I18, rx1584_bstack
    le $I18, 0, rx1584_cut3937
    dec $I18
    set $I18, rx1584_bstack[$I18]
  rx1584_cut3937:
    assign rx1584_cstack, $I18
  rx1584_jump3936:
    jump $I19
  rx1584_done3933:
    rx1584_cur."!cursor_fail"()
    .return (rx1584_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_217_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1413
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1588_start
    .local string rx1588_tgt
    .local int rx1588_pos
    .local int rx1588_off
    .local int rx1588_eos
    .local int rx1588_rep
    .local pmc rx1588_cur
    .local pmc rx1588_curclass
    .local pmc rx1588_bstack
    .local pmc rx1588_cstack
    rx1588_start = self."!cursor_start_all"()
    set rx1588_cur, rx1588_start[0]
    set rx1588_tgt, rx1588_start[1]
    set rx1588_pos, rx1588_start[2]
    set rx1588_curclass, rx1588_start[3]
    set rx1588_bstack, rx1588_start[4]
    set $I19, rx1588_start[5]
    store_lex unicode:"$\x{a2}", rx1588_cur
    length rx1588_eos, rx1588_tgt
    eq $I19, 1, rx1588_restart3947
    gt rx1588_pos, rx1588_eos, rx1588_fail3948
    repr_get_attr_int $I11, self, rx1588_curclass, "$!from"
    ne $I11, -1, rxscan1589_done3954
    goto rxscan1589_scan3953
  rxscan1589_loop3952:
    inc rx1588_pos
    gt rx1588_pos, rx1588_eos, rx1588_fail3948
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!from", rx1588_pos
  rxscan1589_scan3953:
    nqp_rxmark rx1588_bstack, rxscan1589_loop3952, rx1588_pos, 0
  rxscan1589_done3954:
    nqp_rxmark rx1588_bstack, rxcap1590_fail3956, rx1588_pos, 0
    add $I11, rx1588_pos, 2
    gt $I11, rx1588_eos, rx1588_fail3948
    substr $S10, rx1588_tgt, rx1588_pos, 2
    ne $S10, ucs4:"//", rx1588_fail3948
    add rx1588_pos, 2
    nqp_rxpeek $I19, rx1588_bstack, rxcap1590_fail3956
    inc $I19
    set $I11, rx1588_bstack[$I19]
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1588_pos)
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "sym")
    goto rxcap1590_done3955
  rxcap1590_fail3956:
    goto rx1588_fail3948
  rxcap1590_done3955:
    repr_bind_attr_int rx1588_cur, rx1588_curclass, "$!pos", rx1588_pos
    $P11 = rx1588_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1588_curclass, "$!pos"
    lt $I11, 0, rx1588_fail3948
    nqp_rxmark rx1588_bstack, rxsubrule1591_pass3957, -1, 0
  rxsubrule1591_pass3957:
    rx1588_cstack = rx1588_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1588_pos, $P11, rx1588_curclass, "$!pos"
    rx1588_cur."!cursor_pass"(rx1588_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1588_cur)
  rx1588_restart3947:
    repr_get_attr_obj rx1588_cstack, rx1588_cur, rx1588_curclass, "$!cstack"
  rx1588_fail3948:
    unless rx1588_bstack, rx1588_done3946
    pop $I19, rx1588_bstack
    if_null rx1588_cstack, rx1588_cstack_done3951
    unless rx1588_cstack, rx1588_cstack_done3951
    dec $I19
    set $P11, rx1588_cstack[$I19]
  rx1588_cstack_done3951:
    pop rx1588_rep, rx1588_bstack
    pop rx1588_pos, rx1588_bstack
    pop $I19, rx1588_bstack
    lt rx1588_pos, -1, rx1588_done3946
    lt rx1588_pos, 0, rx1588_fail3948
    eq $I19, 0, rx1588_fail3948
    nqp_islist $I20, rx1588_cstack
    unless $I20, rx1588_jump3949
    elements $I18, rx1588_bstack
    le $I18, 0, rx1588_cut3950
    dec $I18
    set $I18, rx1588_bstack[$I18]
  rx1588_cut3950:
    assign rx1588_cstack, $I18
  rx1588_jump3949:
    jump $I19
  rx1588_done3946:
    rx1588_cur."!cursor_fail"()
    .return (rx1588_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_218_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1415
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1592_start
    .local string rx1592_tgt
    .local int rx1592_pos
    .local int rx1592_off
    .local int rx1592_eos
    .local int rx1592_rep
    .local pmc rx1592_cur
    .local pmc rx1592_curclass
    .local pmc rx1592_bstack
    .local pmc rx1592_cstack
    rx1592_start = self."!cursor_start_all"()
    set rx1592_cur, rx1592_start[0]
    set rx1592_tgt, rx1592_start[1]
    set rx1592_pos, rx1592_start[2]
    set rx1592_curclass, rx1592_start[3]
    set rx1592_bstack, rx1592_start[4]
    set $I19, rx1592_start[5]
    store_lex unicode:"$\x{a2}", rx1592_cur
    length rx1592_eos, rx1592_tgt
    eq $I19, 1, rx1592_restart3960
    gt rx1592_pos, rx1592_eos, rx1592_fail3961
    repr_get_attr_int $I11, self, rx1592_curclass, "$!from"
    ne $I11, -1, rxscan1593_done3967
    goto rxscan1593_scan3966
  rxscan1593_loop3965:
    inc rx1592_pos
    index rx1592_pos, rx1592_tgt, ucs4:"??", rx1592_pos
    eq rx1592_pos, -1, rx1592_fail3961
    gt rx1592_pos, rx1592_eos, rx1592_fail3961
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!from", rx1592_pos
  rxscan1593_scan3966:
    nqp_rxmark rx1592_bstack, rxscan1593_loop3965, rx1592_pos, 0
  rxscan1593_done3967:
    add $I11, rx1592_pos, 2
    gt $I11, rx1592_eos, rx1592_fail3961
    substr $S10, rx1592_tgt, rx1592_pos, 2
    ne $S10, ucs4:"??", rx1592_fail3961
    add rx1592_pos, 2
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1592_curclass, "$!pos"
    lt $I11, 0, rx1592_fail3961
    repr_get_attr_int rx1592_pos, $P11, rx1592_curclass, "$!pos"
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1592_curclass, "$!pos"
    lt $I11, 0, rx1592_fail3961
    nqp_rxmark rx1592_bstack, rxsubrule1595_pass3969, -1, 0
  rxsubrule1595_pass3969:
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1592_pos, $P11, rx1592_curclass, "$!pos"
    add $I11, rx1592_pos, 2
    gt $I11, rx1592_eos, rx1592_fail3961
    substr $S10, rx1592_tgt, rx1592_pos, 2
    ne $S10, ucs4:"!!", rx1592_fail3961
    add rx1592_pos, 2
    repr_bind_attr_int rx1592_cur, rx1592_curclass, "$!pos", rx1592_pos
    $P11 = rx1592_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1592_curclass, "$!pos"
    lt $I11, 0, rx1592_fail3961
    nqp_rxmark rx1592_bstack, rxsubrule1596_pass3970, -1, 0
  rxsubrule1596_pass3970:
    rx1592_cstack = rx1592_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1592_pos, $P11, rx1592_curclass, "$!pos"
    rx1592_cur."!cursor_pass"(rx1592_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1592_cur)
  rx1592_restart3960:
    repr_get_attr_obj rx1592_cstack, rx1592_cur, rx1592_curclass, "$!cstack"
  rx1592_fail3961:
    unless rx1592_bstack, rx1592_done3959
    pop $I19, rx1592_bstack
    if_null rx1592_cstack, rx1592_cstack_done3964
    unless rx1592_cstack, rx1592_cstack_done3964
    dec $I19
    set $P11, rx1592_cstack[$I19]
  rx1592_cstack_done3964:
    pop rx1592_rep, rx1592_bstack
    pop rx1592_pos, rx1592_bstack
    pop $I19, rx1592_bstack
    lt rx1592_pos, -1, rx1592_done3959
    lt rx1592_pos, 0, rx1592_fail3961
    eq $I19, 0, rx1592_fail3961
    nqp_islist $I20, rx1592_cstack
    unless $I20, rx1592_jump3962
    elements $I18, rx1592_bstack
    le $I18, 0, rx1592_cut3963
    dec $I18
    set $I18, rx1592_bstack[$I18]
  rx1592_cut3963:
    assign rx1592_cstack, $I18
  rx1592_jump3962:
    jump $I19
  rx1592_done3959:
    rx1592_cur."!cursor_fail"()
    .return (rx1592_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_219_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1597_start
    .local string rx1597_tgt
    .local int rx1597_pos
    .local int rx1597_off
    .local int rx1597_eos
    .local int rx1597_rep
    .local pmc rx1597_cur
    .local pmc rx1597_curclass
    .local pmc rx1597_bstack
    .local pmc rx1597_cstack
    rx1597_start = self."!cursor_start_all"()
    set rx1597_cur, rx1597_start[0]
    set rx1597_tgt, rx1597_start[1]
    set rx1597_pos, rx1597_start[2]
    set rx1597_curclass, rx1597_start[3]
    set rx1597_bstack, rx1597_start[4]
    set $I19, rx1597_start[5]
    store_lex unicode:"$\x{a2}", rx1597_cur
    length rx1597_eos, rx1597_tgt
    eq $I19, 1, rx1597_restart3973
    gt rx1597_pos, rx1597_eos, rx1597_fail3974
    repr_get_attr_int $I11, self, rx1597_curclass, "$!from"
    ne $I11, -1, rxscan1598_done3980
    goto rxscan1598_scan3979
  rxscan1598_loop3978:
    inc rx1597_pos
    gt rx1597_pos, rx1597_eos, rx1597_fail3974
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!from", rx1597_pos
  rxscan1598_scan3979:
    nqp_rxmark rx1597_bstack, rxscan1598_loop3978, rx1597_pos, 0
  rxscan1598_done3980:
    nqp_rxmark rx1597_bstack, rxcap1599_fail3982, rx1597_pos, 0
    add $I11, rx1597_pos, 1
    gt $I11, rx1597_eos, rx1597_fail3974
    substr $S10, rx1597_tgt, rx1597_pos, 1
    ne $S10, ucs4:"=", rx1597_fail3974
    add rx1597_pos, 1
    nqp_rxpeek $I19, rx1597_bstack, rxcap1599_fail3982
    inc $I19
    set $I11, rx1597_bstack[$I19]
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1597_pos)
    rx1597_cstack = rx1597_cur."!cursor_capture"($P11, "sym")
    goto rxcap1599_done3981
  rxcap1599_fail3982:
    goto rx1597_fail3974
  rxcap1599_done3981:
    repr_bind_attr_int rx1597_cur, rx1597_curclass, "$!pos", rx1597_pos
    $P11 = rx1597_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1597_curclass, "$!pos"
    lt $I11, 0, rx1597_fail3974
    repr_get_attr_int rx1597_pos, $P11, rx1597_curclass, "$!pos"
    rx1597_cur."!cursor_pass"(rx1597_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1597_cur)
  rx1597_restart3973:
    repr_get_attr_obj rx1597_cstack, rx1597_cur, rx1597_curclass, "$!cstack"
  rx1597_fail3974:
    unless rx1597_bstack, rx1597_done3972
    pop $I19, rx1597_bstack
    if_null rx1597_cstack, rx1597_cstack_done3977
    unless rx1597_cstack, rx1597_cstack_done3977
    dec $I19
    set $P11, rx1597_cstack[$I19]
  rx1597_cstack_done3977:
    pop rx1597_rep, rx1597_bstack
    pop rx1597_pos, rx1597_bstack
    pop $I19, rx1597_bstack
    lt rx1597_pos, -1, rx1597_done3972
    lt rx1597_pos, 0, rx1597_fail3974
    eq $I19, 0, rx1597_fail3974
    nqp_islist $I20, rx1597_cstack
    unless $I20, rx1597_jump3975
    elements $I18, rx1597_bstack
    le $I18, 0, rx1597_cut3976
    dec $I18
    set $I18, rx1597_bstack[$I18]
  rx1597_cut3976:
    assign rx1597_cstack, $I18
  rx1597_jump3975:
    jump $I19
  rx1597_done3972:
    rx1597_cur."!cursor_fail"()
    .return (rx1597_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_220_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1601_start
    .local string rx1601_tgt
    .local int rx1601_pos
    .local int rx1601_off
    .local int rx1601_eos
    .local int rx1601_rep
    .local pmc rx1601_cur
    .local pmc rx1601_curclass
    .local pmc rx1601_bstack
    .local pmc rx1601_cstack
    rx1601_start = self."!cursor_start_all"()
    set rx1601_cur, rx1601_start[0]
    set rx1601_tgt, rx1601_start[1]
    set rx1601_pos, rx1601_start[2]
    set rx1601_curclass, rx1601_start[3]
    set rx1601_bstack, rx1601_start[4]
    set $I19, rx1601_start[5]
    store_lex unicode:"$\x{a2}", rx1601_cur
    length rx1601_eos, rx1601_tgt
    eq $I19, 1, rx1601_restart3986
    gt rx1601_pos, rx1601_eos, rx1601_fail3987
    repr_get_attr_int $I11, self, rx1601_curclass, "$!from"
    ne $I11, -1, rxscan1602_done3993
    goto rxscan1602_scan3992
  rxscan1602_loop3991:
    inc rx1601_pos
    gt rx1601_pos, rx1601_eos, rx1601_fail3987
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!from", rx1601_pos
  rxscan1602_scan3992:
    nqp_rxmark rx1601_bstack, rxscan1602_loop3991, rx1601_pos, 0
  rxscan1602_done3993:
    nqp_rxmark rx1601_bstack, rxcap1603_fail3995, rx1601_pos, 0
    add $I11, rx1601_pos, 2
    gt $I11, rx1601_eos, rx1601_fail3987
    substr $S10, rx1601_tgt, rx1601_pos, 2
    ne $S10, ucs4:":=", rx1601_fail3987
    add rx1601_pos, 2
    nqp_rxpeek $I19, rx1601_bstack, rxcap1603_fail3995
    inc $I19
    set $I11, rx1601_bstack[$I19]
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!pos", rx1601_pos
    $P11 = rx1601_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1601_pos)
    rx1601_cstack = rx1601_cur."!cursor_capture"($P11, "sym")
    goto rxcap1603_done3994
  rxcap1603_fail3995:
    goto rx1601_fail3987
  rxcap1603_done3994:
    repr_bind_attr_int rx1601_cur, rx1601_curclass, "$!pos", rx1601_pos
    $P11 = rx1601_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1601_curclass, "$!pos"
    lt $I11, 0, rx1601_fail3987
    nqp_rxmark rx1601_bstack, rxsubrule1604_pass3996, -1, 0
  rxsubrule1604_pass3996:
    rx1601_cstack = rx1601_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1601_pos, $P11, rx1601_curclass, "$!pos"
    rx1601_cur."!cursor_pass"(rx1601_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1601_cur)
  rx1601_restart3986:
    repr_get_attr_obj rx1601_cstack, rx1601_cur, rx1601_curclass, "$!cstack"
  rx1601_fail3987:
    unless rx1601_bstack, rx1601_done3985
    pop $I19, rx1601_bstack
    if_null rx1601_cstack, rx1601_cstack_done3990
    unless rx1601_cstack, rx1601_cstack_done3990
    dec $I19
    set $P11, rx1601_cstack[$I19]
  rx1601_cstack_done3990:
    pop rx1601_rep, rx1601_bstack
    pop rx1601_pos, rx1601_bstack
    pop $I19, rx1601_bstack
    lt rx1601_pos, -1, rx1601_done3985
    lt rx1601_pos, 0, rx1601_fail3987
    eq $I19, 0, rx1601_fail3987
    nqp_islist $I20, rx1601_cstack
    unless $I20, rx1601_jump3988
    elements $I18, rx1601_bstack
    le $I18, 0, rx1601_cut3989
    dec $I18
    set $I18, rx1601_bstack[$I18]
  rx1601_cut3989:
    assign rx1601_cstack, $I18
  rx1601_jump3988:
    jump $I19
  rx1601_done3985:
    rx1601_cur."!cursor_fail"()
    .return (rx1601_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_221_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1427
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1605_start
    .local string rx1605_tgt
    .local int rx1605_pos
    .local int rx1605_off
    .local int rx1605_eos
    .local int rx1605_rep
    .local pmc rx1605_cur
    .local pmc rx1605_curclass
    .local pmc rx1605_bstack
    .local pmc rx1605_cstack
    rx1605_start = self."!cursor_start_all"()
    set rx1605_cur, rx1605_start[0]
    set rx1605_tgt, rx1605_start[1]
    set rx1605_pos, rx1605_start[2]
    set rx1605_curclass, rx1605_start[3]
    set rx1605_bstack, rx1605_start[4]
    set $I19, rx1605_start[5]
    store_lex unicode:"$\x{a2}", rx1605_cur
    length rx1605_eos, rx1605_tgt
    eq $I19, 1, rx1605_restart3999
    gt rx1605_pos, rx1605_eos, rx1605_fail4000
    repr_get_attr_int $I11, self, rx1605_curclass, "$!from"
    ne $I11, -1, rxscan1606_done4006
    goto rxscan1606_scan4005
  rxscan1606_loop4004:
    inc rx1605_pos
    gt rx1605_pos, rx1605_eos, rx1605_fail4000
    repr_bind_attr_int rx1605_cur, rx1605_curclass, "$!from", rx1605_pos
  rxscan1606_scan4005:
    nqp_rxmark rx1605_bstack, rxscan1606_loop4004, rx1605_pos, 0
  rxscan1606_done4006:
    nqp_rxmark rx1605_bstack, rxcap1607_fail4008, rx1605_pos, 0
    add $I11, rx1605_pos, 3
    gt $I11, rx1605_eos, rx1605_fail4000
    substr $S10, rx1605_tgt, rx1605_pos, 3
    ne $S10, ucs4:"::=", rx1605_fail4000
    add rx1605_pos, 3
    nqp_rxpeek $I19, rx1605_bstack, rxcap1607_fail4008
    inc $I19
    set $I11, rx1605_bstack[$I19]
    repr_bind_attr_int rx1605_cur, rx1605_curclass, "$!pos", rx1605_pos
    $P11 = rx1605_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1605_pos)
    rx1605_cstack = rx1605_cur."!cursor_capture"($P11, "sym")
    goto rxcap1607_done4007
  rxcap1607_fail4008:
    goto rx1605_fail4000
  rxcap1607_done4007:
    repr_bind_attr_int rx1605_cur, rx1605_curclass, "$!pos", rx1605_pos
    $P11 = rx1605_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1605_curclass, "$!pos"
    lt $I11, 0, rx1605_fail4000
    nqp_rxmark rx1605_bstack, rxsubrule1608_pass4009, -1, 0
  rxsubrule1608_pass4009:
    rx1605_cstack = rx1605_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1605_pos, $P11, rx1605_curclass, "$!pos"
    rx1605_cur."!cursor_pass"(rx1605_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1605_cur)
  rx1605_restart3999:
    repr_get_attr_obj rx1605_cstack, rx1605_cur, rx1605_curclass, "$!cstack"
  rx1605_fail4000:
    unless rx1605_bstack, rx1605_done3998
    pop $I19, rx1605_bstack
    if_null rx1605_cstack, rx1605_cstack_done4003
    unless rx1605_cstack, rx1605_cstack_done4003
    dec $I19
    set $P11, rx1605_cstack[$I19]
  rx1605_cstack_done4003:
    pop rx1605_rep, rx1605_bstack
    pop rx1605_pos, rx1605_bstack
    pop $I19, rx1605_bstack
    lt rx1605_pos, -1, rx1605_done3998
    lt rx1605_pos, 0, rx1605_fail4000
    eq $I19, 0, rx1605_fail4000
    nqp_islist $I20, rx1605_cstack
    unless $I20, rx1605_jump4001
    elements $I18, rx1605_bstack
    le $I18, 0, rx1605_cut4002
    dec $I18
    set $I18, rx1605_bstack[$I18]
  rx1605_cut4002:
    assign rx1605_cstack, $I18
  rx1605_jump4001:
    jump $I19
  rx1605_done3998:
    rx1605_cur."!cursor_fail"()
    .return (rx1605_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_222_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1429
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1609_start
    .local string rx1609_tgt
    .local int rx1609_pos
    .local int rx1609_off
    .local int rx1609_eos
    .local int rx1609_rep
    .local pmc rx1609_cur
    .local pmc rx1609_curclass
    .local pmc rx1609_bstack
    .local pmc rx1609_cstack
    rx1609_start = self."!cursor_start_all"()
    set rx1609_cur, rx1609_start[0]
    set rx1609_tgt, rx1609_start[1]
    set rx1609_pos, rx1609_start[2]
    set rx1609_curclass, rx1609_start[3]
    set rx1609_bstack, rx1609_start[4]
    set $I19, rx1609_start[5]
    store_lex unicode:"$\x{a2}", rx1609_cur
    length rx1609_eos, rx1609_tgt
    eq $I19, 1, rx1609_restart4012
    gt rx1609_pos, rx1609_eos, rx1609_fail4013
    repr_get_attr_int $I11, self, rx1609_curclass, "$!from"
    ne $I11, -1, rxscan1610_done4019
    goto rxscan1610_scan4018
  rxscan1610_loop4017:
    inc rx1609_pos
    gt rx1609_pos, rx1609_eos, rx1609_fail4013
    repr_bind_attr_int rx1609_cur, rx1609_curclass, "$!from", rx1609_pos
  rxscan1610_scan4018:
    nqp_rxmark rx1609_bstack, rxscan1610_loop4017, rx1609_pos, 0
  rxscan1610_done4019:
    nqp_rxmark rx1609_bstack, rxcap1611_fail4021, rx1609_pos, 0
    add $I11, rx1609_pos, 1
    gt $I11, rx1609_eos, rx1609_fail4013
    substr $S10, rx1609_tgt, rx1609_pos, 1
    ne $S10, ucs4:",", rx1609_fail4013
    add rx1609_pos, 1
    nqp_rxpeek $I19, rx1609_bstack, rxcap1611_fail4021
    inc $I19
    set $I11, rx1609_bstack[$I19]
    repr_bind_attr_int rx1609_cur, rx1609_curclass, "$!pos", rx1609_pos
    $P11 = rx1609_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1609_pos)
    rx1609_cstack = rx1609_cur."!cursor_capture"($P11, "sym")
    goto rxcap1611_done4020
  rxcap1611_fail4021:
    goto rx1609_fail4013
  rxcap1611_done4020:
    repr_bind_attr_int rx1609_cur, rx1609_curclass, "$!pos", rx1609_pos
    $P11 = rx1609_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1609_curclass, "$!pos"
    lt $I11, 0, rx1609_fail4013
    nqp_rxmark rx1609_bstack, rxsubrule1612_pass4022, -1, 0
  rxsubrule1612_pass4022:
    rx1609_cstack = rx1609_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1609_pos, $P11, rx1609_curclass, "$!pos"
    rx1609_cur."!cursor_pass"(rx1609_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1609_cur)
  rx1609_restart4012:
    repr_get_attr_obj rx1609_cstack, rx1609_cur, rx1609_curclass, "$!cstack"
  rx1609_fail4013:
    unless rx1609_bstack, rx1609_done4011
    pop $I19, rx1609_bstack
    if_null rx1609_cstack, rx1609_cstack_done4016
    unless rx1609_cstack, rx1609_cstack_done4016
    dec $I19
    set $P11, rx1609_cstack[$I19]
  rx1609_cstack_done4016:
    pop rx1609_rep, rx1609_bstack
    pop rx1609_pos, rx1609_bstack
    pop $I19, rx1609_bstack
    lt rx1609_pos, -1, rx1609_done4011
    lt rx1609_pos, 0, rx1609_fail4013
    eq $I19, 0, rx1609_fail4013
    nqp_islist $I20, rx1609_cstack
    unless $I20, rx1609_jump4014
    elements $I18, rx1609_bstack
    le $I18, 0, rx1609_cut4015
    dec $I18
    set $I18, rx1609_bstack[$I18]
  rx1609_cut4015:
    assign rx1609_cstack, $I18
  rx1609_jump4014:
    jump $I19
  rx1609_done4011:
    rx1609_cur."!cursor_fail"()
    .return (rx1609_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_223_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1431
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_424_1382484127.52628' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1613_start
    .local string rx1613_tgt
    .local int rx1613_pos
    .local int rx1613_off
    .local int rx1613_eos
    .local int rx1613_rep
    .local pmc rx1613_cur
    .local pmc rx1613_curclass
    .local pmc rx1613_bstack
    .local pmc rx1613_cstack
    rx1613_start = self."!cursor_start_all"()
    set rx1613_cur, rx1613_start[0]
    set rx1613_tgt, rx1613_start[1]
    set rx1613_pos, rx1613_start[2]
    set rx1613_curclass, rx1613_start[3]
    set rx1613_bstack, rx1613_start[4]
    set $I19, rx1613_start[5]
    store_lex unicode:"$\x{a2}", rx1613_cur
    length rx1613_eos, rx1613_tgt
    eq $I19, 1, rx1613_restart4025
    gt rx1613_pos, rx1613_eos, rx1613_fail4026
    repr_get_attr_int $I11, self, rx1613_curclass, "$!from"
    ne $I11, -1, rxscan1614_done4032
    goto rxscan1614_scan4031
  rxscan1614_loop4030:
    inc rx1613_pos
    gt rx1613_pos, rx1613_eos, rx1613_fail4026
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!from", rx1613_pos
  rxscan1614_scan4031:
    nqp_rxmark rx1613_bstack, rxscan1614_loop4030, rx1613_pos, 0
  rxscan1614_done4032:
    nqp_rxmark rx1613_bstack, rxcap1615_fail4034, rx1613_pos, 0
    add $I11, rx1613_pos, 6
    gt $I11, rx1613_eos, rx1613_fail4026
    substr $S10, rx1613_tgt, rx1613_pos, 6
    ne $S10, ucs4:"return", rx1613_fail4026
    add rx1613_pos, 6
    nqp_rxpeek $I19, rx1613_bstack, rxcap1615_fail4034
    inc $I19
    set $I11, rx1613_bstack[$I19]
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    $P11 = rx1613_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1613_pos)
    rx1613_cstack = rx1613_cur."!cursor_capture"($P11, "sym")
    goto rxcap1615_done4033
  rxcap1615_fail4034:
    goto rx1613_fail4026
  rxcap1615_done4033:
    ge rx1613_pos, rx1613_eos, rx1613_fail4026
    is_cclass $I11, .CCLASS_WHITESPACE, rx1613_tgt, rx1613_pos
    unless $I11, rx1613_fail4026
    add rx1613_pos, 1
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    $P11 = rx1613_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1613_curclass, "$!pos"
    lt $I11, 0, rx1613_fail4026
    nqp_rxmark rx1613_bstack, rxsubrule1616_pass4035, -1, 0
  rxsubrule1616_pass4035:
    rx1613_cstack = rx1613_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1613_pos, $P11, rx1613_curclass, "$!pos"
    repr_bind_attr_int rx1613_cur, rx1613_curclass, "$!pos", rx1613_pos
    store_lex unicode:"$\x{a2}", rx1613_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_424_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1613_cur."!cursor_pass"(rx1613_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1613_cur)
  rx1613_restart4025:
    repr_get_attr_obj rx1613_cstack, rx1613_cur, rx1613_curclass, "$!cstack"
  rx1613_fail4026:
    unless rx1613_bstack, rx1613_done4024
    pop $I19, rx1613_bstack
    if_null rx1613_cstack, rx1613_cstack_done4029
    unless rx1613_cstack, rx1613_cstack_done4029
    dec $I19
    set $P11, rx1613_cstack[$I19]
  rx1613_cstack_done4029:
    pop rx1613_rep, rx1613_bstack
    pop rx1613_pos, rx1613_bstack
    pop $I19, rx1613_bstack
    lt rx1613_pos, -1, rx1613_done4024
    lt rx1613_pos, 0, rx1613_fail4026
    eq $I19, 0, rx1613_fail4026
    nqp_islist $I20, rx1613_cstack
    unless $I20, rx1613_jump4027
    elements $I18, rx1613_bstack
    le $I18, 0, rx1613_cut4028
    dec $I18
    set $I18, rx1613_bstack[$I18]
  rx1613_cut4028:
    assign rx1613_cstack, $I18
  rx1613_jump4027:
    jump $I19
  rx1613_done4024:
    rx1613_cur."!cursor_fail"()
    .return (rx1613_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1382484127.52628") :anon :lex :outer("cuid_223_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1431

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_224_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1432
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1617_start
    .local string rx1617_tgt
    .local int rx1617_pos
    .local int rx1617_off
    .local int rx1617_eos
    .local int rx1617_rep
    .local pmc rx1617_cur
    .local pmc rx1617_curclass
    .local pmc rx1617_bstack
    .local pmc rx1617_cstack
    rx1617_start = self."!cursor_start_all"()
    set rx1617_cur, rx1617_start[0]
    set rx1617_tgt, rx1617_start[1]
    set rx1617_pos, rx1617_start[2]
    set rx1617_curclass, rx1617_start[3]
    set rx1617_bstack, rx1617_start[4]
    set $I19, rx1617_start[5]
    store_lex unicode:"$\x{a2}", rx1617_cur
    length rx1617_eos, rx1617_tgt
    eq $I19, 1, rx1617_restart4038
    gt rx1617_pos, rx1617_eos, rx1617_fail4039
    repr_get_attr_int $I11, self, rx1617_curclass, "$!from"
    ne $I11, -1, rxscan1618_done4045
    goto rxscan1618_scan4044
  rxscan1618_loop4043:
    inc rx1617_pos
    gt rx1617_pos, rx1617_eos, rx1617_fail4039
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!from", rx1617_pos
  rxscan1618_scan4044:
    nqp_rxmark rx1617_bstack, rxscan1618_loop4043, rx1617_pos, 0
  rxscan1618_done4045:
    nqp_rxmark rx1617_bstack, rxcap1619_fail4047, rx1617_pos, 0
    add $I11, rx1617_pos, 4
    gt $I11, rx1617_eos, rx1617_fail4039
    substr $S10, rx1617_tgt, rx1617_pos, 4
    ne $S10, ucs4:"make", rx1617_fail4039
    add rx1617_pos, 4
    nqp_rxpeek $I19, rx1617_bstack, rxcap1619_fail4047
    inc $I19
    set $I11, rx1617_bstack[$I19]
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!pos", rx1617_pos
    $P11 = rx1617_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1617_pos)
    rx1617_cstack = rx1617_cur."!cursor_capture"($P11, "sym")
    goto rxcap1619_done4046
  rxcap1619_fail4047:
    goto rx1617_fail4039
  rxcap1619_done4046:
    ge rx1617_pos, rx1617_eos, rx1617_fail4039
    is_cclass $I11, .CCLASS_WHITESPACE, rx1617_tgt, rx1617_pos
    unless $I11, rx1617_fail4039
    add rx1617_pos, 1
    repr_bind_attr_int rx1617_cur, rx1617_curclass, "$!pos", rx1617_pos
    $P11 = rx1617_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1617_curclass, "$!pos"
    lt $I11, 0, rx1617_fail4039
    nqp_rxmark rx1617_bstack, rxsubrule1620_pass4048, -1, 0
  rxsubrule1620_pass4048:
    rx1617_cstack = rx1617_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1617_pos, $P11, rx1617_curclass, "$!pos"
    rx1617_cur."!cursor_pass"(rx1617_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1617_cur)
  rx1617_restart4038:
    repr_get_attr_obj rx1617_cstack, rx1617_cur, rx1617_curclass, "$!cstack"
  rx1617_fail4039:
    unless rx1617_bstack, rx1617_done4037
    pop $I19, rx1617_bstack
    if_null rx1617_cstack, rx1617_cstack_done4042
    unless rx1617_cstack, rx1617_cstack_done4042
    dec $I19
    set $P11, rx1617_cstack[$I19]
  rx1617_cstack_done4042:
    pop rx1617_rep, rx1617_bstack
    pop rx1617_pos, rx1617_bstack
    pop $I19, rx1617_bstack
    lt rx1617_pos, -1, rx1617_done4037
    lt rx1617_pos, 0, rx1617_fail4039
    eq $I19, 0, rx1617_fail4039
    nqp_islist $I20, rx1617_cstack
    unless $I20, rx1617_jump4040
    elements $I18, rx1617_bstack
    le $I18, 0, rx1617_cut4041
    dec $I18
    set $I18, rx1617_bstack[$I18]
  rx1617_cut4041:
    assign rx1617_cstack, $I18
  rx1617_jump4040:
    jump $I19
  rx1617_done4037:
    rx1617_cur."!cursor_fail"()
    .return (rx1617_cur) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_225_1382484127.52628") :anon :lex :outer("cuid_400_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1434
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set fb_tmp_184, _lex_param_1
    repr_defined $I5001, fb_tmp_184
    unless $I5001 goto if1621_else4049 
    set $P5002, fb_tmp_184[0]
    set $P5004, $P5002
    goto if1621_end4050
  if1621_else4049:
    null $P5003
    set $P5004, $P5003
  if1621_end4050:
    unless_null $P5004, vivi_16224051
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_16224051:
    set $P101, $P5004
    set fb_tmp_185, _lex_param_1
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if1623_else4052 
    set $P5006, fb_tmp_185[1]
    set $P5008, $P5006
    goto if1623_end4053
  if1623_else4052:
    null $P5007
    set $P5008, $P5007
  if1623_end4053:
    unless_null $P5008, vivi_16244054
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_16244054:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1440
    .const 'Sub' $P5013 = 'cuid_226_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_227_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_230_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_233_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_236_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_237_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1382484127.52628' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_239_1382484127.52628' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_226_1382484127.52628' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_227_1382484127.52628' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_229_1382484127.52628' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_230_1382484127.52628' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_232_1382484127.52628' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_233_1382484127.52628' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_234_1382484127.52628' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_235_1382484127.52628' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_236_1382484127.52628' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_237_1382484127.52628' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_238_1382484127.52628' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_239_1382484127.52628' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_226_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1441
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1625_start
    .local string rx1625_tgt
    .local int rx1625_pos
    .local int rx1625_off
    .local int rx1625_eos
    .local int rx1625_rep
    .local pmc rx1625_cur
    .local pmc rx1625_curclass
    .local pmc rx1625_bstack
    .local pmc rx1625_cstack
    rx1625_start = self."!cursor_start_all"()
    set rx1625_cur, rx1625_start[0]
    set rx1625_tgt, rx1625_start[1]
    set rx1625_pos, rx1625_start[2]
    set rx1625_curclass, rx1625_start[3]
    set rx1625_bstack, rx1625_start[4]
    set $I19, rx1625_start[5]
    store_lex unicode:"$\x{a2}", rx1625_cur
    length rx1625_eos, rx1625_tgt
    eq $I19, 1, rx1625_restart4057
    gt rx1625_pos, rx1625_eos, rx1625_fail4058
    repr_get_attr_int $I11, self, rx1625_curclass, "$!from"
    ne $I11, -1, rxscan1626_done4064
    goto rxscan1626_scan4063
  rxscan1626_loop4062:
    inc rx1625_pos
    gt rx1625_pos, rx1625_eos, rx1625_fail4058
    repr_bind_attr_int rx1625_cur, rx1625_curclass, "$!from", rx1625_pos
  rxscan1626_scan4063:
    nqp_rxmark rx1625_bstack, rxscan1626_loop4062, rx1625_pos, 0
  rxscan1626_done4064:
    ge rx1625_pos, rx1625_eos, rx1625_fail4058
    substr $S11, rx1625_tgt, rx1625_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1625_fail4058
    inc rx1625_pos
    rx1625_cur."!cursor_pass"(rx1625_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1625_cur)
  rx1625_restart4057:
    repr_get_attr_obj rx1625_cstack, rx1625_cur, rx1625_curclass, "$!cstack"
  rx1625_fail4058:
    unless rx1625_bstack, rx1625_done4056
    pop $I19, rx1625_bstack
    if_null rx1625_cstack, rx1625_cstack_done4061
    unless rx1625_cstack, rx1625_cstack_done4061
    dec $I19
    set $P11, rx1625_cstack[$I19]
  rx1625_cstack_done4061:
    pop rx1625_rep, rx1625_bstack
    pop rx1625_pos, rx1625_bstack
    pop $I19, rx1625_bstack
    lt rx1625_pos, -1, rx1625_done4056
    lt rx1625_pos, 0, rx1625_fail4058
    eq $I19, 0, rx1625_fail4058
    nqp_islist $I20, rx1625_cstack
    unless $I20, rx1625_jump4059
    elements $I18, rx1625_bstack
    le $I18, 0, rx1625_cut4060
    dec $I18
    set $I18, rx1625_bstack[$I18]
  rx1625_cut4060:
    assign rx1625_cstack, $I18
  rx1625_jump4059:
    jump $I19
  rx1625_done4056:
    rx1625_cur."!cursor_fail"()
    .return (rx1625_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_227_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1445
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_228_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1627_start
    .local string rx1627_tgt
    .local int rx1627_pos
    .local int rx1627_off
    .local int rx1627_eos
    .local int rx1627_rep
    .local pmc rx1627_cur
    .local pmc rx1627_curclass
    .local pmc rx1627_bstack
    .local pmc rx1627_cstack
    rx1627_start = self."!cursor_start_all"()
    set rx1627_cur, rx1627_start[0]
    set rx1627_tgt, rx1627_start[1]
    set rx1627_pos, rx1627_start[2]
    set rx1627_curclass, rx1627_start[3]
    set rx1627_bstack, rx1627_start[4]
    set $I19, rx1627_start[5]
    store_lex unicode:"$\x{a2}", rx1627_cur
    length rx1627_eos, rx1627_tgt
    eq $I19, 1, rx1627_restart4067
    gt rx1627_pos, rx1627_eos, rx1627_fail4068
    repr_get_attr_int $I11, self, rx1627_curclass, "$!from"
    ne $I11, -1, rxscan1628_done4074
    goto rxscan1628_scan4073
  rxscan1628_loop4072:
    inc rx1627_pos
    index rx1627_pos, rx1627_tgt, ucs4:":", rx1627_pos
    eq rx1627_pos, -1, rx1627_fail4068
    gt rx1627_pos, rx1627_eos, rx1627_fail4068
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!from", rx1627_pos
  rxscan1628_scan4073:
    nqp_rxmark rx1627_bstack, rxscan1628_loop4072, rx1627_pos, 0
  rxscan1628_done4074:
    add $I11, rx1627_pos, 1
    gt $I11, rx1627_eos, rx1627_fail4068
    substr $S10, rx1627_tgt, rx1627_pos, 1
    ne $S10, ucs4:":", rx1627_fail4068
    add rx1627_pos, 1
    .const 'Sub' $P5001 = 'cuid_228_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1627_curclass, "$!pos"
    lt $I11, 0, rx1627_fail4068
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1627_curclass, "$!pos"
    lt $I11, 0, rx1627_fail4068
    nqp_rxmark rx1627_bstack, rxsubrule1631_pass4085, -1, 0
  rxsubrule1631_pass4085:
    rx1627_cstack = rx1627_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1627_pos, $P11, rx1627_curclass, "$!pos"
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1627_curclass, "$!pos"
    lt $I11, 0, rx1627_fail4068
    repr_get_attr_int rx1627_pos, $P11, rx1627_curclass, "$!pos"
    add $I11, rx1627_pos, 1
    gt $I11, rx1627_eos, rx1627_fail4068
    substr $S10, rx1627_tgt, rx1627_pos, 1
    ne $S10, ucs4:";", rx1627_fail4068
    add rx1627_pos, 1
    rx1627_cur."!cursor_pass"(rx1627_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1627_cur)
  rx1627_restart4067:
    repr_get_attr_obj rx1627_cstack, rx1627_cur, rx1627_curclass, "$!cstack"
  rx1627_fail4068:
    unless rx1627_bstack, rx1627_done4066
    pop $I19, rx1627_bstack
    if_null rx1627_cstack, rx1627_cstack_done4071
    unless rx1627_cstack, rx1627_cstack_done4071
    dec $I19
    set $P11, rx1627_cstack[$I19]
  rx1627_cstack_done4071:
    pop rx1627_rep, rx1627_bstack
    pop rx1627_pos, rx1627_bstack
    pop $I19, rx1627_bstack
    lt rx1627_pos, -1, rx1627_done4066
    lt rx1627_pos, 0, rx1627_fail4068
    eq $I19, 0, rx1627_fail4068
    nqp_islist $I20, rx1627_cstack
    unless $I20, rx1627_jump4069
    elements $I18, rx1627_bstack
    le $I18, 0, rx1627_cut4070
    dec $I18
    set $I18, rx1627_bstack[$I18]
  rx1627_cut4070:
    assign rx1627_cstack, $I18
  rx1627_jump4069:
    jump $I19
  rx1627_done4066:
    rx1627_cur."!cursor_fail"()
    .return (rx1627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1382484127.52628") :anon :lex :outer("cuid_227_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1629_start
    .local string rx1629_tgt
    .local int rx1629_pos
    .local int rx1629_off
    .local int rx1629_eos
    .local int rx1629_rep
    .local pmc rx1629_cur
    .local pmc rx1629_curclass
    .local pmc rx1629_bstack
    .local pmc rx1629_cstack
    rx1629_start = self."!cursor_start_all"()
    set rx1629_cur, rx1629_start[0]
    set rx1629_tgt, rx1629_start[1]
    set rx1629_pos, rx1629_start[2]
    set rx1629_curclass, rx1629_start[3]
    set rx1629_bstack, rx1629_start[4]
    set $I19, rx1629_start[5]
    store_lex unicode:"$\x{a2}", rx1629_cur
    length rx1629_eos, rx1629_tgt
    eq $I19, 1, rx1629_restart4077
    gt rx1629_pos, rx1629_eos, rx1629_fail4078
    repr_get_attr_int $I11, self, rx1629_curclass, "$!from"
    ne $I11, -1, rxscan1630_done4084
    goto rxscan1630_scan4083
  rxscan1630_loop4082:
    inc rx1629_pos
    index rx1629_pos, rx1629_tgt, ucs4:"my", rx1629_pos
    eq rx1629_pos, -1, rx1629_fail4078
    gt rx1629_pos, rx1629_eos, rx1629_fail4078
    repr_bind_attr_int rx1629_cur, rx1629_curclass, "$!from", rx1629_pos
  rxscan1630_scan4083:
    nqp_rxmark rx1629_bstack, rxscan1630_loop4082, rx1629_pos, 0
  rxscan1630_done4084:
    add $I11, rx1629_pos, 2
    gt $I11, rx1629_eos, rx1629_fail4078
    substr $S10, rx1629_tgt, rx1629_pos, 2
    ne $S10, ucs4:"my", rx1629_fail4078
    add rx1629_pos, 2
    rx1629_cur."!cursor_pass"(rx1629_pos, 'backtrack'=>1)
    .return (rx1629_cur)
  rx1629_restart4077:
    repr_get_attr_obj rx1629_cstack, rx1629_cur, rx1629_curclass, "$!cstack"
  rx1629_fail4078:
    unless rx1629_bstack, rx1629_done4076
    pop $I19, rx1629_bstack
    if_null rx1629_cstack, rx1629_cstack_done4081
    unless rx1629_cstack, rx1629_cstack_done4081
    dec $I19
    set $P11, rx1629_cstack[$I19]
  rx1629_cstack_done4081:
    pop rx1629_rep, rx1629_bstack
    pop rx1629_pos, rx1629_bstack
    pop $I19, rx1629_bstack
    lt rx1629_pos, -1, rx1629_done4076
    lt rx1629_pos, 0, rx1629_fail4078
    eq $I19, 0, rx1629_fail4078
    nqp_islist $I20, rx1629_cstack
    unless $I20, rx1629_jump4079
    elements $I18, rx1629_bstack
    le $I18, 0, rx1629_cut4080
    dec $I18
    set $I18, rx1629_bstack[$I18]
  rx1629_cut4080:
    assign rx1629_cstack, $I18
  rx1629_jump4079:
    jump $I19
  rx1629_done4076:
    rx1629_cur."!cursor_fail"()
    .return (rx1629_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_229_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1449
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1633_start
    .local string rx1633_tgt
    .local int rx1633_pos
    .local int rx1633_off
    .local int rx1633_eos
    .local int rx1633_rep
    .local pmc rx1633_cur
    .local pmc rx1633_curclass
    .local pmc rx1633_bstack
    .local pmc rx1633_cstack
    rx1633_start = self."!cursor_start_all"()
    set rx1633_cur, rx1633_start[0]
    set rx1633_tgt, rx1633_start[1]
    set rx1633_pos, rx1633_start[2]
    set rx1633_curclass, rx1633_start[3]
    set rx1633_bstack, rx1633_start[4]
    set $I19, rx1633_start[5]
    store_lex unicode:"$\x{a2}", rx1633_cur
    length rx1633_eos, rx1633_tgt
    eq $I19, 1, rx1633_restart4089
    gt rx1633_pos, rx1633_eos, rx1633_fail4090
    repr_get_attr_int $I11, self, rx1633_curclass, "$!from"
    ne $I11, -1, rxscan1634_done4096
    goto rxscan1634_scan4095
  rxscan1634_loop4094:
    inc rx1633_pos
    gt rx1633_pos, rx1633_eos, rx1633_fail4090
    repr_bind_attr_int rx1633_cur, rx1633_curclass, "$!from", rx1633_pos
  rxscan1634_scan4095:
    nqp_rxmark rx1633_bstack, rxscan1634_loop4094, rx1633_pos, 0
  rxscan1634_done4096:
    ge rx1633_pos, rx1633_eos, rx1633_fail4090
    substr $S11, rx1633_tgt, rx1633_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1633_fail4090
    repr_bind_attr_int rx1633_cur, rx1633_curclass, "$!pos", rx1633_pos
    $P11 = rx1633_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1633_curclass, "$!pos"
    lt $I11, 0, rx1633_fail4090
    nqp_rxmark rx1633_bstack, rxsubrule1635_pass4097, -1, 0
  rxsubrule1635_pass4097:
    rx1633_cstack = rx1633_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1633_pos, $P11, rx1633_curclass, "$!pos"
    rx1633_cur."!cursor_pass"(rx1633_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1633_cur)
  rx1633_restart4089:
    repr_get_attr_obj rx1633_cstack, rx1633_cur, rx1633_curclass, "$!cstack"
  rx1633_fail4090:
    unless rx1633_bstack, rx1633_done4088
    pop $I19, rx1633_bstack
    if_null rx1633_cstack, rx1633_cstack_done4093
    unless rx1633_cstack, rx1633_cstack_done4093
    dec $I19
    set $P11, rx1633_cstack[$I19]
  rx1633_cstack_done4093:
    pop rx1633_rep, rx1633_bstack
    pop rx1633_pos, rx1633_bstack
    pop $I19, rx1633_bstack
    lt rx1633_pos, -1, rx1633_done4088
    lt rx1633_pos, 0, rx1633_fail4090
    eq $I19, 0, rx1633_fail4090
    nqp_islist $I20, rx1633_cstack
    unless $I20, rx1633_jump4091
    elements $I18, rx1633_bstack
    le $I18, 0, rx1633_cut4092
    dec $I18
    set $I18, rx1633_bstack[$I18]
  rx1633_cut4092:
    assign rx1633_cstack, $I18
  rx1633_jump4091:
    jump $I19
  rx1633_done4088:
    rx1633_cur."!cursor_fail"()
    .return (rx1633_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_230_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1453
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_231_1382484127.52628' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1636_start
    .local string rx1636_tgt
    .local int rx1636_pos
    .local int rx1636_off
    .local int rx1636_eos
    .local int rx1636_rep
    .local pmc rx1636_cur
    .local pmc rx1636_curclass
    .local pmc rx1636_bstack
    .local pmc rx1636_cstack
    rx1636_start = self."!cursor_start_all"()
    set rx1636_cur, rx1636_start[0]
    set rx1636_tgt, rx1636_start[1]
    set rx1636_pos, rx1636_start[2]
    set rx1636_curclass, rx1636_start[3]
    set rx1636_bstack, rx1636_start[4]
    set $I19, rx1636_start[5]
    store_lex unicode:"$\x{a2}", rx1636_cur
    length rx1636_eos, rx1636_tgt
    eq $I19, 1, rx1636_restart4100
    gt rx1636_pos, rx1636_eos, rx1636_fail4101
    repr_get_attr_int $I11, self, rx1636_curclass, "$!from"
    ne $I11, -1, rxscan1637_done4107
    goto rxscan1637_scan4106
  rxscan1637_loop4105:
    inc rx1636_pos
    gt rx1636_pos, rx1636_eos, rx1636_fail4101
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!from", rx1636_pos
  rxscan1637_scan4106:
    nqp_rxmark rx1636_bstack, rxscan1637_loop4105, rx1636_pos, 0
  rxscan1637_done4107:
    .const 'Sub' $P5001 = 'cuid_231_1382484127.52628' 
    capture_lex $P5001
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail4101
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail4101
    nqp_rxmark rx1636_bstack, rxsubrule1642_pass4122, -1, 0
  rxsubrule1642_pass4122:
    rx1636_cstack = rx1636_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1636_pos, $P11, rx1636_curclass, "$!pos"
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail4101
    repr_get_attr_int rx1636_pos, $P11, rx1636_curclass, "$!pos"
    rx1636_cur."!cursor_pass"(rx1636_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1636_cur)
  rx1636_restart4100:
    repr_get_attr_obj rx1636_cstack, rx1636_cur, rx1636_curclass, "$!cstack"
  rx1636_fail4101:
    unless rx1636_bstack, rx1636_done4099
    pop $I19, rx1636_bstack
    if_null rx1636_cstack, rx1636_cstack_done4104
    unless rx1636_cstack, rx1636_cstack_done4104
    dec $I19
    set $P11, rx1636_cstack[$I19]
  rx1636_cstack_done4104:
    pop rx1636_rep, rx1636_bstack
    pop rx1636_pos, rx1636_bstack
    pop $I19, rx1636_bstack
    lt rx1636_pos, -1, rx1636_done4099
    lt rx1636_pos, 0, rx1636_fail4101
    eq $I19, 0, rx1636_fail4101
    nqp_islist $I20, rx1636_cstack
    unless $I20, rx1636_jump4102
    elements $I18, rx1636_bstack
    le $I18, 0, rx1636_cut4103
    dec $I18
    set $I18, rx1636_bstack[$I18]
  rx1636_cut4103:
    assign rx1636_cstack, $I18
  rx1636_jump4102:
    jump $I19
  rx1636_done4099:
    rx1636_cur."!cursor_fail"()
    .return (rx1636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1382484127.52628") :anon :lex :outer("cuid_230_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1638_start
    .local string rx1638_tgt
    .local int rx1638_pos
    .local int rx1638_off
    .local int rx1638_eos
    .local int rx1638_rep
    .local pmc rx1638_cur
    .local pmc rx1638_curclass
    .local pmc rx1638_bstack
    .local pmc rx1638_cstack
    rx1638_start = self."!cursor_start_all"()
    set rx1638_cur, rx1638_start[0]
    set rx1638_tgt, rx1638_start[1]
    set rx1638_pos, rx1638_start[2]
    set rx1638_curclass, rx1638_start[3]
    set rx1638_bstack, rx1638_start[4]
    set $I19, rx1638_start[5]
    store_lex unicode:"$\x{a2}", rx1638_cur
    length rx1638_eos, rx1638_tgt
    eq $I19, 1, rx1638_restart4110
    gt rx1638_pos, rx1638_eos, rx1638_fail4111
    repr_get_attr_int $I11, self, rx1638_curclass, "$!from"
    ne $I11, -1, rxscan1639_done4117
    goto rxscan1639_scan4116
  rxscan1639_loop4115:
    inc rx1638_pos
    gt rx1638_pos, rx1638_eos, rx1638_fail4111
    repr_bind_attr_int rx1638_cur, rx1638_curclass, "$!from", rx1638_pos
  rxscan1639_scan4116:
    nqp_rxmark rx1638_bstack, rxscan1639_loop4115, rx1638_pos, 0
  rxscan1639_done4117:
    repr_bind_attr_int rx1638_cur, rx1638_curclass, "$!pos", rx1638_pos
    $P11 = rx1638_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1638_curclass, "$!pos"
    lt $I11, 0, rx1638_fail4111
    nqp_rxmark rx1638_bstack, rxsubrule1640_pass4118, -1, 0
  rxsubrule1640_pass4118:
    rx1638_cstack = rx1638_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1638_pos, $P11, rx1638_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1641_04120
    nqp_push_label $P11, alt1641_14121
    nqp_rxmark rx1638_bstack, alt1641_end4119, -1, 0
    rx1638_cur."!alt"(rx1638_pos, "alt_nfa__38_1382484132.8458", $P11)
    goto rx1638_fail4111
  alt1641_04120:
    ge rx1638_pos, rx1638_eos, rx1638_fail4111
    is_cclass $I11, .CCLASS_WORD, rx1638_tgt, rx1638_pos
    if $I11, rx1638_fail4111
    add rx1638_pos, 1
    ge rx1638_pos, rx1638_eos, rx1638_fail4111
    is_cclass $I11, .CCLASS_WORD, rx1638_tgt, rx1638_pos
    unless $I11, rx1638_fail4111
    add rx1638_pos, 1
    goto alt1641_end4119
  alt1641_14121:
    ge rx1638_pos, rx1638_eos, rx1638_fail4111
    is_cclass $I11, .CCLASS_WORD, rx1638_tgt, rx1638_pos
    unless $I11, rx1638_fail4111
    add rx1638_pos, 1
    goto alt1641_end4119
  alt1641_end4119:
    nqp_rxcommit rx1638_bstack, alt1641_end4119
    rx1638_cur."!cursor_pass"(rx1638_pos, 'backtrack'=>1)
    .return (rx1638_cur)
  rx1638_restart4110:
    repr_get_attr_obj rx1638_cstack, rx1638_cur, rx1638_curclass, "$!cstack"
  rx1638_fail4111:
    unless rx1638_bstack, rx1638_done4109
    pop $I19, rx1638_bstack
    if_null rx1638_cstack, rx1638_cstack_done4114
    unless rx1638_cstack, rx1638_cstack_done4114
    dec $I19
    set $P11, rx1638_cstack[$I19]
  rx1638_cstack_done4114:
    pop rx1638_rep, rx1638_bstack
    pop rx1638_pos, rx1638_bstack
    pop $I19, rx1638_bstack
    lt rx1638_pos, -1, rx1638_done4109
    lt rx1638_pos, 0, rx1638_fail4111
    eq $I19, 0, rx1638_fail4111
    nqp_islist $I20, rx1638_cstack
    unless $I20, rx1638_jump4112
    elements $I18, rx1638_bstack
    le $I18, 0, rx1638_cut4113
    dec $I18
    set $I18, rx1638_bstack[$I18]
  rx1638_cut4113:
    assign rx1638_cstack, $I18
  rx1638_jump4112:
    jump $I19
  rx1638_done4109:
    rx1638_cur."!cursor_fail"()
    .return (rx1638_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_232_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1457
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1644_start
    .local string rx1644_tgt
    .local int rx1644_pos
    .local int rx1644_off
    .local int rx1644_eos
    .local int rx1644_rep
    .local pmc rx1644_cur
    .local pmc rx1644_curclass
    .local pmc rx1644_bstack
    .local pmc rx1644_cstack
    rx1644_start = self."!cursor_start_all"()
    set rx1644_cur, rx1644_start[0]
    set rx1644_tgt, rx1644_start[1]
    set rx1644_pos, rx1644_start[2]
    set rx1644_curclass, rx1644_start[3]
    set rx1644_bstack, rx1644_start[4]
    set $I19, rx1644_start[5]
    store_lex unicode:"$\x{a2}", rx1644_cur
    length rx1644_eos, rx1644_tgt
    eq $I19, 1, rx1644_restart4126
    gt rx1644_pos, rx1644_eos, rx1644_fail4127
    repr_get_attr_int $I11, self, rx1644_curclass, "$!from"
    ne $I11, -1, rxscan1645_done4133
    goto rxscan1645_scan4132
  rxscan1645_loop4131:
    inc rx1644_pos
    gt rx1644_pos, rx1644_eos, rx1644_fail4127
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!from", rx1644_pos
  rxscan1645_scan4132:
    nqp_rxmark rx1644_bstack, rxscan1645_loop4131, rx1644_pos, 0
  rxscan1645_done4133:
    ge rx1644_pos, rx1644_eos, rx1644_fail4127
    substr $S11, rx1644_tgt, rx1644_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1644_fail4127
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    lt $I11, 0, rx1644_fail4127
    nqp_rxmark rx1644_bstack, rxsubrule1646_pass4134, -1, 0
  rxsubrule1646_pass4134:
    rx1644_cstack = rx1644_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1644_pos, $P11, rx1644_curclass, "$!pos"
    rx1644_cur."!cursor_pass"(rx1644_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1644_cur)
  rx1644_restart4126:
    repr_get_attr_obj rx1644_cstack, rx1644_cur, rx1644_curclass, "$!cstack"
  rx1644_fail4127:
    unless rx1644_bstack, rx1644_done4125
    pop $I19, rx1644_bstack
    if_null rx1644_cstack, rx1644_cstack_done4130
    unless rx1644_cstack, rx1644_cstack_done4130
    dec $I19
    set $P11, rx1644_cstack[$I19]
  rx1644_cstack_done4130:
    pop rx1644_rep, rx1644_bstack
    pop rx1644_pos, rx1644_bstack
    pop $I19, rx1644_bstack
    lt rx1644_pos, -1, rx1644_done4125
    lt rx1644_pos, 0, rx1644_fail4127
    eq $I19, 0, rx1644_fail4127
    nqp_islist $I20, rx1644_cstack
    unless $I20, rx1644_jump4128
    elements $I18, rx1644_bstack
    le $I18, 0, rx1644_cut4129
    dec $I18
    set $I18, rx1644_bstack[$I18]
  rx1644_cut4129:
    assign rx1644_cstack, $I18
  rx1644_jump4128:
    jump $I19
  rx1644_done4125:
    rx1644_cur."!cursor_fail"()
    .return (rx1644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_233_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1461
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1647_start
    .local string rx1647_tgt
    .local int rx1647_pos
    .local int rx1647_off
    .local int rx1647_eos
    .local int rx1647_rep
    .local pmc rx1647_cur
    .local pmc rx1647_curclass
    .local pmc rx1647_bstack
    .local pmc rx1647_cstack
    rx1647_start = self."!cursor_start_all"()
    set rx1647_cur, rx1647_start[0]
    set rx1647_tgt, rx1647_start[1]
    set rx1647_pos, rx1647_start[2]
    set rx1647_curclass, rx1647_start[3]
    set rx1647_bstack, rx1647_start[4]
    set $I19, rx1647_start[5]
    store_lex unicode:"$\x{a2}", rx1647_cur
    length rx1647_eos, rx1647_tgt
    eq $I19, 1, rx1647_restart4137
    gt rx1647_pos, rx1647_eos, rx1647_fail4138
    repr_get_attr_int $I11, self, rx1647_curclass, "$!from"
    ne $I11, -1, rxscan1648_done4144
    goto rxscan1648_scan4143
  rxscan1648_loop4142:
    inc rx1647_pos
    index rx1647_pos, rx1647_tgt, ucs4:"?", rx1647_pos
    eq rx1647_pos, -1, rx1647_fail4138
    gt rx1647_pos, rx1647_eos, rx1647_fail4138
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!from", rx1647_pos
  rxscan1648_scan4143:
    nqp_rxmark rx1647_bstack, rxscan1648_loop4142, rx1647_pos, 0
  rxscan1648_done4144:
    add $I11, rx1647_pos, 1
    gt $I11, rx1647_eos, rx1647_fail4138
    substr $S10, rx1647_tgt, rx1647_pos, 1
    ne $S10, ucs4:"?", rx1647_fail4138
    add rx1647_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1649_04146
    nqp_push_label $P11, alt1649_14147
    nqp_rxmark rx1647_bstack, alt1649_end4145, -1, 0
    rx1647_cur."!alt"(rx1647_pos, "alt_nfa__39_1382484132.87402", $P11)
    goto rx1647_fail4138
  alt1649_04146:
    ge rx1647_pos, rx1647_eos, rx1647_fail4138
    substr $S11, rx1647_tgt, rx1647_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1647_fail4138
    goto alt1649_end4145
  alt1649_14147:
    ge rx1647_pos, rx1647_eos, rx1647_fail4138
    substr $S11, rx1647_tgt, rx1647_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1647_fail4138
    repr_bind_attr_int rx1647_cur, rx1647_curclass, "$!pos", rx1647_pos
    $P11 = rx1647_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1647_curclass, "$!pos"
    lt $I11, 0, rx1647_fail4138
    nqp_rxmark rx1647_bstack, rxsubrule1650_pass4148, -1, 0
  rxsubrule1650_pass4148:
    rx1647_cstack = rx1647_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1647_pos, $P11, rx1647_curclass, "$!pos"
    goto alt1649_end4145
  alt1649_end4145:
    nqp_rxcommit rx1647_bstack, alt1649_end4145
    rx1647_cur."!cursor_pass"(rx1647_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1647_cur)
  rx1647_restart4137:
    repr_get_attr_obj rx1647_cstack, rx1647_cur, rx1647_curclass, "$!cstack"
  rx1647_fail4138:
    unless rx1647_bstack, rx1647_done4136
    pop $I19, rx1647_bstack
    if_null rx1647_cstack, rx1647_cstack_done4141
    unless rx1647_cstack, rx1647_cstack_done4141
    dec $I19
    set $P11, rx1647_cstack[$I19]
  rx1647_cstack_done4141:
    pop rx1647_rep, rx1647_bstack
    pop rx1647_pos, rx1647_bstack
    pop $I19, rx1647_bstack
    lt rx1647_pos, -1, rx1647_done4136
    lt rx1647_pos, 0, rx1647_fail4138
    eq $I19, 0, rx1647_fail4138
    nqp_islist $I20, rx1647_cstack
    unless $I20, rx1647_jump4139
    elements $I18, rx1647_bstack
    le $I18, 0, rx1647_cut4140
    dec $I18
    set $I18, rx1647_bstack[$I18]
  rx1647_cut4140:
    assign rx1647_cstack, $I18
  rx1647_jump4139:
    jump $I19
  rx1647_done4136:
    rx1647_cur."!cursor_fail"()
    .return (rx1647_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_234_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1462
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1651_start
    .local string rx1651_tgt
    .local int rx1651_pos
    .local int rx1651_off
    .local int rx1651_eos
    .local int rx1651_rep
    .local pmc rx1651_cur
    .local pmc rx1651_curclass
    .local pmc rx1651_bstack
    .local pmc rx1651_cstack
    rx1651_start = self."!cursor_start_all"()
    set rx1651_cur, rx1651_start[0]
    set rx1651_tgt, rx1651_start[1]
    set rx1651_pos, rx1651_start[2]
    set rx1651_curclass, rx1651_start[3]
    set rx1651_bstack, rx1651_start[4]
    set $I19, rx1651_start[5]
    store_lex unicode:"$\x{a2}", rx1651_cur
    length rx1651_eos, rx1651_tgt
    eq $I19, 1, rx1651_restart4151
    gt rx1651_pos, rx1651_eos, rx1651_fail4152
    repr_get_attr_int $I11, self, rx1651_curclass, "$!from"
    ne $I11, -1, rxscan1652_done4158
    goto rxscan1652_scan4157
  rxscan1652_loop4156:
    inc rx1651_pos
    index rx1651_pos, rx1651_tgt, ucs4:"!", rx1651_pos
    eq rx1651_pos, -1, rx1651_fail4152
    gt rx1651_pos, rx1651_eos, rx1651_fail4152
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!from", rx1651_pos
  rxscan1652_scan4157:
    nqp_rxmark rx1651_bstack, rxscan1652_loop4156, rx1651_pos, 0
  rxscan1652_done4158:
    add $I11, rx1651_pos, 1
    gt $I11, rx1651_eos, rx1651_fail4152
    substr $S10, rx1651_tgt, rx1651_pos, 1
    ne $S10, ucs4:"!", rx1651_fail4152
    add rx1651_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1653_04160
    nqp_push_label $P11, alt1653_14161
    nqp_rxmark rx1651_bstack, alt1653_end4159, -1, 0
    rx1651_cur."!alt"(rx1651_pos, "alt_nfa__40_1382484132.88646", $P11)
    goto rx1651_fail4152
  alt1653_04160:
    ge rx1651_pos, rx1651_eos, rx1651_fail4152
    substr $S11, rx1651_tgt, rx1651_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1651_fail4152
    goto alt1653_end4159
  alt1653_14161:
    ge rx1651_pos, rx1651_eos, rx1651_fail4152
    substr $S11, rx1651_tgt, rx1651_pos, 1
    index $I11, ucs4:"{", $S11
    ge $I11, 0, rx1651_fail4152
    repr_bind_attr_int rx1651_cur, rx1651_curclass, "$!pos", rx1651_pos
    $P11 = rx1651_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1651_curclass, "$!pos"
    lt $I11, 0, rx1651_fail4152
    nqp_rxmark rx1651_bstack, rxsubrule1654_pass4162, -1, 0
  rxsubrule1654_pass4162:
    rx1651_cstack = rx1651_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1651_pos, $P11, rx1651_curclass, "$!pos"
    goto alt1653_end4159
  alt1653_end4159:
    nqp_rxcommit rx1651_bstack, alt1653_end4159
    rx1651_cur."!cursor_pass"(rx1651_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1651_cur)
  rx1651_restart4151:
    repr_get_attr_obj rx1651_cstack, rx1651_cur, rx1651_curclass, "$!cstack"
  rx1651_fail4152:
    unless rx1651_bstack, rx1651_done4150
    pop $I19, rx1651_bstack
    if_null rx1651_cstack, rx1651_cstack_done4155
    unless rx1651_cstack, rx1651_cstack_done4155
    dec $I19
    set $P11, rx1651_cstack[$I19]
  rx1651_cstack_done4155:
    pop rx1651_rep, rx1651_bstack
    pop rx1651_pos, rx1651_bstack
    pop $I19, rx1651_bstack
    lt rx1651_pos, -1, rx1651_done4150
    lt rx1651_pos, 0, rx1651_fail4152
    eq $I19, 0, rx1651_fail4152
    nqp_islist $I20, rx1651_cstack
    unless $I20, rx1651_jump4153
    elements $I18, rx1651_bstack
    le $I18, 0, rx1651_cut4154
    dec $I18
    set $I18, rx1651_bstack[$I18]
  rx1651_cut4154:
    assign rx1651_cstack, $I18
  rx1651_jump4153:
    jump $I19
  rx1651_done4150:
    rx1651_cur."!cursor_fail"()
    .return (rx1651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_235_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1464
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1655_start
    .local string rx1655_tgt
    .local int rx1655_pos
    .local int rx1655_off
    .local int rx1655_eos
    .local int rx1655_rep
    .local pmc rx1655_cur
    .local pmc rx1655_curclass
    .local pmc rx1655_bstack
    .local pmc rx1655_cstack
    rx1655_start = self."!cursor_start_all"()
    set rx1655_cur, rx1655_start[0]
    set rx1655_tgt, rx1655_start[1]
    set rx1655_pos, rx1655_start[2]
    set rx1655_curclass, rx1655_start[3]
    set rx1655_bstack, rx1655_start[4]
    set $I19, rx1655_start[5]
    store_lex unicode:"$\x{a2}", rx1655_cur
    length rx1655_eos, rx1655_tgt
    eq $I19, 1, rx1655_restart4165
    gt rx1655_pos, rx1655_eos, rx1655_fail4166
    repr_get_attr_int $I11, self, rx1655_curclass, "$!from"
    ne $I11, -1, rxscan1656_done4172
    goto rxscan1656_scan4171
  rxscan1656_loop4170:
    inc rx1655_pos
    gt rx1655_pos, rx1655_eos, rx1655_fail4166
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!from", rx1655_pos
  rxscan1656_scan4171:
    nqp_rxmark rx1655_bstack, rxscan1656_loop4170, rx1655_pos, 0
  rxscan1656_done4172:
    nqp_rxmark rx1655_bstack, rxcap1657_fail4174, rx1655_pos, 0
    ge rx1655_pos, rx1655_eos, rx1655_fail4166
    substr $S11, rx1655_tgt, rx1655_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1655_fail4166
    inc rx1655_pos
    ge rx1655_pos, rx1655_eos, rx1655_fail4166
    substr $S11, rx1655_tgt, rx1655_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1655_fail4166
    nqp_rxpeek $I19, rx1655_bstack, rxcap1657_fail4174
    inc $I19
    set $I11, rx1655_bstack[$I19]
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    $P11 = rx1655_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1655_pos)
    rx1655_cstack = rx1655_cur."!cursor_capture"($P11, "zw")
    goto rxcap1657_done4173
  rxcap1657_fail4174:
    goto rx1655_fail4166
  rxcap1657_done4173:
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    $P11 = rx1655_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1655_curclass, "$!pos"
    lt $I11, 0, rx1655_fail4166
    nqp_rxmark rx1655_bstack, rxsubrule1658_pass4175, -1, 0
  rxsubrule1658_pass4175:
    rx1655_cstack = rx1655_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1655_pos, $P11, rx1655_curclass, "$!pos"
    rx1655_cur."!cursor_pass"(rx1655_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1655_cur)
  rx1655_restart4165:
    repr_get_attr_obj rx1655_cstack, rx1655_cur, rx1655_curclass, "$!cstack"
  rx1655_fail4166:
    unless rx1655_bstack, rx1655_done4164
    pop $I19, rx1655_bstack
    if_null rx1655_cstack, rx1655_cstack_done4169
    unless rx1655_cstack, rx1655_cstack_done4169
    dec $I19
    set $P11, rx1655_cstack[$I19]
  rx1655_cstack_done4169:
    pop rx1655_rep, rx1655_bstack
    pop rx1655_pos, rx1655_bstack
    pop $I19, rx1655_bstack
    lt rx1655_pos, -1, rx1655_done4164
    lt rx1655_pos, 0, rx1655_fail4166
    eq $I19, 0, rx1655_fail4166
    nqp_islist $I20, rx1655_cstack
    unless $I20, rx1655_jump4167
    elements $I18, rx1655_bstack
    le $I18, 0, rx1655_cut4168
    dec $I18
    set $I18, rx1655_bstack[$I18]
  rx1655_cut4168:
    assign rx1655_cstack, $I18
  rx1655_jump4167:
    jump $I19
  rx1655_done4164:
    rx1655_cur."!cursor_fail"()
    .return (rx1655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_236_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1468
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1659_start
    .local string rx1659_tgt
    .local int rx1659_pos
    .local int rx1659_off
    .local int rx1659_eos
    .local int rx1659_rep
    .local pmc rx1659_cur
    .local pmc rx1659_curclass
    .local pmc rx1659_bstack
    .local pmc rx1659_cstack
    rx1659_start = self."!cursor_start_all"()
    set rx1659_cur, rx1659_start[0]
    set rx1659_tgt, rx1659_start[1]
    set rx1659_pos, rx1659_start[2]
    set rx1659_curclass, rx1659_start[3]
    set rx1659_bstack, rx1659_start[4]
    set $I19, rx1659_start[5]
    store_lex unicode:"$\x{a2}", rx1659_cur
    length rx1659_eos, rx1659_tgt
    eq $I19, 1, rx1659_restart4178
    gt rx1659_pos, rx1659_eos, rx1659_fail4179
    repr_get_attr_int $I11, self, rx1659_curclass, "$!from"
    ne $I11, -1, rxscan1660_done4185
    goto rxscan1660_scan4184
  rxscan1660_loop4183:
    inc rx1659_pos
    gt rx1659_pos, rx1659_eos, rx1659_fail4179
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!from", rx1659_pos
  rxscan1660_scan4184:
    nqp_rxmark rx1659_bstack, rxscan1660_loop4183, rx1659_pos, 0
  rxscan1660_done4185:
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    nqp_rxmark rx1659_bstack, rxsubrule1661_pass4186, -1, 0
  rxsubrule1661_pass4186:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    nqp_rxmark rx1659_bstack, rxquantr1662_done4188, rx1659_pos, 0
  rxquantr1662_loop4187:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1663_04190
    nqp_push_label $P11, alt1663_14191
    nqp_push_label $P11, alt1663_24193
    nqp_push_label $P11, alt1663_34195
    nqp_push_label $P11, alt1663_44197
    nqp_rxmark rx1659_bstack, alt1663_end4189, -1, 0
    rx1659_cur."!alt"(rx1659_pos, "alt_nfa__41_1382484132.92343", $P11)
    goto rx1659_fail4179
  alt1663_04190:
    ge rx1659_pos, rx1659_eos, rx1659_fail4179
    substr $S11, rx1659_tgt, rx1659_pos, 1
    index $I11, ucs4:">", $S11
    lt $I11, 0, rx1659_fail4179
    goto alt1663_end4189
  alt1663_14191:
    add $I11, rx1659_pos, 1
    gt $I11, rx1659_eos, rx1659_fail4179
    substr $S10, rx1659_tgt, rx1659_pos, 1
    ne $S10, ucs4:"=", rx1659_fail4179
    add rx1659_pos, 1
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    nqp_rxmark rx1659_bstack, rxsubrule1664_pass4192, -1, 0
  rxsubrule1664_pass4192:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    goto alt1663_end4189
  alt1663_24193:
    add $I11, rx1659_pos, 1
    gt $I11, rx1659_eos, rx1659_fail4179
    substr $S10, rx1659_tgt, rx1659_pos, 1
    ne $S10, ucs4:":", rx1659_fail4179
    add rx1659_pos, 1
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    nqp_rxmark rx1659_bstack, rxsubrule1665_pass4194, -1, 0
  rxsubrule1665_pass4194:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    goto alt1663_end4189
  alt1663_34195:
    add $I11, rx1659_pos, 1
    gt $I11, rx1659_eos, rx1659_fail4179
    substr $S10, rx1659_tgt, rx1659_pos, 1
    ne $S10, ucs4:"(", rx1659_fail4179
    add rx1659_pos, 1
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    nqp_rxmark rx1659_bstack, rxsubrule1666_pass4196, -1, 0
  rxsubrule1666_pass4196:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    add $I11, rx1659_pos, 1
    gt $I11, rx1659_eos, rx1659_fail4179
    substr $S10, rx1659_tgt, rx1659_pos, 1
    ne $S10, ucs4:")", rx1659_fail4179
    add rx1659_pos, 1
    goto alt1663_end4189
  alt1663_44197:
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    repr_bind_attr_int rx1659_cur, rx1659_curclass, "$!pos", rx1659_pos
    $P11 = rx1659_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1659_curclass, "$!pos"
    lt $I11, 0, rx1659_fail4179
    nqp_rxmark rx1659_bstack, rxsubrule1668_pass4199, -1, 0
  rxsubrule1668_pass4199:
    rx1659_cstack = rx1659_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1659_pos, $P11, rx1659_curclass, "$!pos"
    goto alt1663_end4189
  alt1663_end4189:
    nqp_rxpeek $I19, rx1659_bstack, rxquantr1662_done4188
    inc $I19
    inc $I19
    set rx1659_rep, rx1659_bstack[$I19]
    nqp_rxcommit rx1659_bstack, rxquantr1662_done4188
    inc rx1659_rep
  rxquantr1662_done4188:
    rx1659_cur."!cursor_pass"(rx1659_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1659_cur)
  rx1659_restart4178:
    repr_get_attr_obj rx1659_cstack, rx1659_cur, rx1659_curclass, "$!cstack"
  rx1659_fail4179:
    unless rx1659_bstack, rx1659_done4177
    pop $I19, rx1659_bstack
    if_null rx1659_cstack, rx1659_cstack_done4182
    unless rx1659_cstack, rx1659_cstack_done4182
    dec $I19
    set $P11, rx1659_cstack[$I19]
  rx1659_cstack_done4182:
    pop rx1659_rep, rx1659_bstack
    pop rx1659_pos, rx1659_bstack
    pop $I19, rx1659_bstack
    lt rx1659_pos, -1, rx1659_done4177
    lt rx1659_pos, 0, rx1659_fail4179
    eq $I19, 0, rx1659_fail4179
    nqp_islist $I20, rx1659_cstack
    unless $I20, rx1659_jump4180
    elements $I18, rx1659_bstack
    le $I18, 0, rx1659_cut4181
    dec $I18
    set $I18, rx1659_bstack[$I18]
  rx1659_cut4181:
    assign rx1659_cstack, $I18
  rx1659_jump4180:
    jump $I19
  rx1659_done4177:
    rx1659_cur."!cursor_fail"()
    .return (rx1659_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_237_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1479
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1669_start
    .local string rx1669_tgt
    .local int rx1669_pos
    .local int rx1669_off
    .local int rx1669_eos
    .local int rx1669_rep
    .local pmc rx1669_cur
    .local pmc rx1669_curclass
    .local pmc rx1669_bstack
    .local pmc rx1669_cstack
    rx1669_start = self."!cursor_start_all"()
    set rx1669_cur, rx1669_start[0]
    set rx1669_tgt, rx1669_start[1]
    set rx1669_pos, rx1669_start[2]
    set rx1669_curclass, rx1669_start[3]
    set rx1669_bstack, rx1669_start[4]
    set $I19, rx1669_start[5]
    store_lex unicode:"$\x{a2}", rx1669_cur
    length rx1669_eos, rx1669_tgt
    eq $I19, 1, rx1669_restart4202
    gt rx1669_pos, rx1669_eos, rx1669_fail4203
    repr_get_attr_int $I11, self, rx1669_curclass, "$!from"
    ne $I11, -1, rxscan1670_done4209
    goto rxscan1670_scan4208
  rxscan1670_loop4207:
    inc rx1669_pos
    gt rx1669_pos, rx1669_eos, rx1669_fail4203
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!from", rx1669_pos
  rxscan1670_scan4208:
    nqp_rxmark rx1669_bstack, rxscan1670_loop4207, rx1669_pos, 0
  rxscan1670_done4209:
    ge rx1669_pos, rx1669_eos, rx1669_fail4203
    substr $S11, rx1669_tgt, rx1669_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx1669_fail4203
    repr_bind_attr_int rx1669_cur, rx1669_curclass, "$!pos", rx1669_pos
    $P11 = rx1669_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1669_curclass, "$!pos"
    lt $I11, 0, rx1669_fail4203
    nqp_rxmark rx1669_bstack, rxsubrule1671_pass4210, -1, 0
  rxsubrule1671_pass4210:
    rx1669_cstack = rx1669_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1669_pos, $P11, rx1669_curclass, "$!pos"
    rx1669_cur."!cursor_pass"(rx1669_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx1669_cur)
  rx1669_restart4202:
    repr_get_attr_obj rx1669_cstack, rx1669_cur, rx1669_curclass, "$!cstack"
  rx1669_fail4203:
    unless rx1669_bstack, rx1669_done4201
    pop $I19, rx1669_bstack
    if_null rx1669_cstack, rx1669_cstack_done4206
    unless rx1669_cstack, rx1669_cstack_done4206
    dec $I19
    set $P11, rx1669_cstack[$I19]
  rx1669_cstack_done4206:
    pop rx1669_rep, rx1669_bstack
    pop rx1669_pos, rx1669_bstack
    pop $I19, rx1669_bstack
    lt rx1669_pos, -1, rx1669_done4201
    lt rx1669_pos, 0, rx1669_fail4203
    eq $I19, 0, rx1669_fail4203
    nqp_islist $I20, rx1669_cstack
    unless $I20, rx1669_jump4204
    elements $I18, rx1669_bstack
    le $I18, 0, rx1669_cut4205
    dec $I18
    set $I18, rx1669_bstack[$I18]
  rx1669_cut4205:
    assign rx1669_cstack, $I18
  rx1669_jump4204:
    jump $I19
  rx1669_done4201:
    rx1669_cur."!cursor_fail"()
    .return (rx1669_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_238_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1483
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1672_start
    .local string rx1672_tgt
    .local int rx1672_pos
    .local int rx1672_off
    .local int rx1672_eos
    .local int rx1672_rep
    .local pmc rx1672_cur
    .local pmc rx1672_curclass
    .local pmc rx1672_bstack
    .local pmc rx1672_cstack
    rx1672_start = self."!cursor_start_all"()
    set rx1672_cur, rx1672_start[0]
    set rx1672_tgt, rx1672_start[1]
    set rx1672_pos, rx1672_start[2]
    set rx1672_curclass, rx1672_start[3]
    set rx1672_bstack, rx1672_start[4]
    set $I19, rx1672_start[5]
    store_lex unicode:"$\x{a2}", rx1672_cur
    length rx1672_eos, rx1672_tgt
    eq $I19, 1, rx1672_restart4213
    gt rx1672_pos, rx1672_eos, rx1672_fail4214
    repr_get_attr_int $I11, self, rx1672_curclass, "$!from"
    ne $I11, -1, rxscan1673_done4220
    goto rxscan1673_scan4219
  rxscan1673_loop4218:
    inc rx1672_pos
    gt rx1672_pos, rx1672_eos, rx1672_fail4214
    repr_bind_attr_int rx1672_cur, rx1672_curclass, "$!from", rx1672_pos
  rxscan1673_scan4219:
    nqp_rxmark rx1672_bstack, rxscan1673_loop4218, rx1672_pos, 0
  rxscan1673_done4220:
    repr_bind_attr_int rx1672_cur, rx1672_curclass, "$!pos", rx1672_pos
    $P11 = rx1672_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx1672_curclass, "$!pos"
    lt $I11, 0, rx1672_fail4214
    nqp_rxmark rx1672_bstack, rxsubrule1674_pass4221, -1, 0
  rxsubrule1674_pass4221:
    rx1672_cstack = rx1672_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1672_pos, $P11, rx1672_curclass, "$!pos"
    rx1672_cur."!cursor_pass"(rx1672_pos, "codeblock", 'backtrack'=>1)
    .return (rx1672_cur)
  rx1672_restart4213:
    repr_get_attr_obj rx1672_cstack, rx1672_cur, rx1672_curclass, "$!cstack"
  rx1672_fail4214:
    unless rx1672_bstack, rx1672_done4212
    pop $I19, rx1672_bstack
    if_null rx1672_cstack, rx1672_cstack_done4217
    unless rx1672_cstack, rx1672_cstack_done4217
    dec $I19
    set $P11, rx1672_cstack[$I19]
  rx1672_cstack_done4217:
    pop rx1672_rep, rx1672_bstack
    pop rx1672_pos, rx1672_bstack
    pop $I19, rx1672_bstack
    lt rx1672_pos, -1, rx1672_done4212
    lt rx1672_pos, 0, rx1672_fail4214
    eq $I19, 0, rx1672_fail4214
    nqp_islist $I20, rx1672_cstack
    unless $I20, rx1672_jump4215
    elements $I18, rx1672_bstack
    le $I18, 0, rx1672_cut4216
    dec $I18
    set $I18, rx1672_bstack[$I18]
  rx1672_cut4216:
    assign rx1672_cstack, $I18
  rx1672_jump4215:
    jump $I19
  rx1672_done4212:
    rx1672_cur."!cursor_fail"()
    .return (rx1672_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_239_1382484127.52628") :anon :lex :outer("cuid_425_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1487
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1675_start
    .local string rx1675_tgt
    .local int rx1675_pos
    .local int rx1675_off
    .local int rx1675_eos
    .local int rx1675_rep
    .local pmc rx1675_cur
    .local pmc rx1675_curclass
    .local pmc rx1675_bstack
    .local pmc rx1675_cstack
    rx1675_start = self."!cursor_start_all"()
    set rx1675_cur, rx1675_start[0]
    set rx1675_tgt, rx1675_start[1]
    set rx1675_pos, rx1675_start[2]
    set rx1675_curclass, rx1675_start[3]
    set rx1675_bstack, rx1675_start[4]
    set $I19, rx1675_start[5]
    store_lex unicode:"$\x{a2}", rx1675_cur
    length rx1675_eos, rx1675_tgt
    eq $I19, 1, rx1675_restart4224
    gt rx1675_pos, rx1675_eos, rx1675_fail4225
    repr_get_attr_int $I11, self, rx1675_curclass, "$!from"
    ne $I11, -1, rxscan1676_done4231
    goto rxscan1676_scan4230
  rxscan1676_loop4229:
    inc rx1675_pos
    gt rx1675_pos, rx1675_eos, rx1675_fail4225
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!from", rx1675_pos
  rxscan1676_scan4230:
    nqp_rxmark rx1675_bstack, rxscan1676_loop4229, rx1675_pos, 0
  rxscan1676_done4231:
    repr_bind_attr_int rx1675_cur, rx1675_curclass, "$!pos", rx1675_pos
    $P11 = rx1675_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx1675_curclass, "$!pos"
    lt $I11, 0, rx1675_fail4225
    nqp_rxmark rx1675_bstack, rxsubrule1677_pass4232, -1, 0
  rxsubrule1677_pass4232:
    rx1675_cstack = rx1675_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1675_pos, $P11, rx1675_curclass, "$!pos"
    rx1675_cur."!cursor_pass"(rx1675_pos, "arg", 'backtrack'=>1)
    .return (rx1675_cur)
  rx1675_restart4224:
    repr_get_attr_obj rx1675_cstack, rx1675_cur, rx1675_curclass, "$!cstack"
  rx1675_fail4225:
    unless rx1675_bstack, rx1675_done4223
    pop $I19, rx1675_bstack
    if_null rx1675_cstack, rx1675_cstack_done4228
    unless rx1675_cstack, rx1675_cstack_done4228
    dec $I19
    set $P11, rx1675_cstack[$I19]
  rx1675_cstack_done4228:
    pop rx1675_rep, rx1675_bstack
    pop rx1675_pos, rx1675_bstack
    pop $I19, rx1675_bstack
    lt rx1675_pos, -1, rx1675_done4223
    lt rx1675_pos, 0, rx1675_fail4225
    eq $I19, 0, rx1675_fail4225
    nqp_islist $I20, rx1675_cstack
    unless $I20, rx1675_jump4226
    elements $I18, rx1675_bstack
    le $I18, 0, rx1675_cut4227
    dec $I18
    set $I18, rx1675_bstack[$I18]
  rx1675_cut4227:
    assign rx1675_cstack, $I18
  rx1675_jump4226:
    jump $I19
  rx1675_done4223:
    rx1675_cur."!cursor_fail"()
    .return (rx1675_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_426_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1496
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_186 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set fb_tmp_186, _lex_param_1
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if1678_else4233 
    set $P5002, fb_tmp_186[0]
    set $P5004, $P5002
    goto if1678_end4234
  if1678_else4233:
    null $P5003
    set $P5004, $P5003
  if1678_end4234:
    unless_null $P5004, vivi_16794235
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_16794235:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1680_end4237 
.annotate 'line', 1498
    box $P5007, "Pre-increment can only work on a variable"
    die $P5007
  unless1680_end4237:
.annotate 'line', 1501
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1504
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1507
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "add_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1511
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    set fb_tmp_187, _lex_param_1
    repr_defined $I5001, fb_tmp_187
    unless $I5001 goto if1681_else4238 
    set $P5002, fb_tmp_187[0]
    set $P5004, $P5002
    goto if1681_end4239
  if1681_else4238:
    null $P5003
    set $P5004, $P5003
  if1681_end4239:
    unless_null $P5004, vivi_16824240
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_16824240:
    set $P101, $P5004
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5002, $P101, $P5006
    if $I5002 goto unless1683_end4242 
.annotate 'line', 1513
    box $P5007, "Pre-decrement can only work on a variable"
    die $P5007
  unless1683_end4242:
.annotate 'line', 1516
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1519
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1522
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5011 = $P5010."new"(1 :named("value"))
    $P5012 = $P5009."new"($P101, $P5011, "sub_n" :named("op"))
    $P5013 = $P5008."new"($P101, $P5012, "bind" :named("op"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1526
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_188 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set fb_tmp_188, _lex_param_1
    repr_defined $I5001, fb_tmp_188
    unless $I5001 goto if1684_else4243 
    set $P5003, fb_tmp_188[0]
    set $P5005, $P5003
    goto if1684_end4244
  if1684_else4243:
    null $P5004
    set $P5005, $P5004
  if1684_end4244:
    unless_null $P5005, vivi_16854245
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_16854245:
    set $P101, $P5005
.annotate 'line', 1528
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1686_end4247 
.annotate 'line', 1529
    box $P5010, "Post-increment can only work on a variable"
    die $P5010
  unless1686_end4247:
.annotate 'line', 1532
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 103
.annotate 'line', 1534
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1536
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5014 = $P101."returns"()
    $P5015 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5014 :named("returns"))
    $P5016 = $P5012."new"($P5015, $P101, "bind" :named("op"))
.annotate 'line', 1539
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1542
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1544
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5020 = $P101."returns"()
    $P5021 = $P5019."new"($P102 :named("name"), "local" :named("scope"), $P5020 :named("returns"))
.annotate 'line', 1545
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5023 = $P5022."new"(1 :named("value"))
    $P5024 = $P5018."new"($P5021, $P5023, "add_n" :named("op"))
    $P5025 = $P5017."new"($P101, $P5024, "bind" :named("op"))
    $P5026 = $P5011."new"($P5016, $P5025, 0 :named("resultchild"))
    $P5027 = _lex_param_0."as_post"($P5026)
    .return ($P5027) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1550
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set fb_tmp_189, _lex_param_1
    repr_defined $I5001, fb_tmp_189
    unless $I5001 goto if1687_else4248 
    set $P5003, fb_tmp_189[0]
    set $P5005, $P5003
    goto if1687_end4249
  if1687_else4248:
    null $P5004
    set $P5005, $P5004
  if1687_end4249:
    unless_null $P5005, vivi_16884250
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_16884250:
    set $P101, $P5005
.annotate 'line', 1552
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5008 = $P5007."unique"("tmp")
    set $P102, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5002, $P101, $P5009
    if $I5002 goto unless1689_end4252 
.annotate 'line', 1553
    box $P5010, "Post-decrement can only work on a variable"
    die $P5010
  unless1689_end4252:
.annotate 'line', 1556
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 103
.annotate 'line', 1558
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1560
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5014 = $P5013."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5015 = $P5012."new"($P5014, $P101, "bind" :named("op"))
.annotate 'line', 1563
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1566
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1568
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5019 = $P5018."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1569
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5021 = $P5020."new"(1 :named("value"))
    $P5022 = $P5017."new"($P5019, $P5021, "sub_n" :named("op"))
    $P5023 = $P5016."new"($P101, $P5022, "bind" :named("op"))
    $P5024 = $P5011."new"($P5015, $P5023, 0 :named("resultchild"))
    $P5025 = _lex_param_0."as_post"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_430_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1574
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_190 
.annotate 'line', 1575
    set fb_tmp_190, _lex_param_1
    repr_defined $I5001, fb_tmp_190
    unless $I5001 goto if1690_else4253 
    set $P5001, fb_tmp_190[0]
    set $P5003, $P5001
    goto if1690_end4254
  if1690_else4253:
    null $P5002
    set $P5003, $P5002
  if1690_end4254:
    unless_null $P5003, vivi_16914255
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  vivi_16914255:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1578
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_191 
.annotate 'line', 1579
    set fb_tmp_191, _lex_param_1
    repr_defined $I5001, fb_tmp_191
    unless $I5001 goto if1692_else4256 
    set $P5001, fb_tmp_191[0]
    set $P5003, $P5001
    goto if1692_end4257
  if1692_else4256:
    null $P5002
    set $P5003, $P5002
  if1692_end4257:
    unless_null $P5003, vivi_16934258
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  vivi_16934258:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1582
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_192 
    .local pmc fb_tmp_193 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 1583
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4259
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5005, $P5006
    set fb_tmp_192, $P5005
    repr_defined $I5001, fb_tmp_192
    unless $I5001 goto if1694_else4260 
    set $P5007, fb_tmp_192["$REGALLOC"]
    set $P5009, $P5007
    goto if1694_end4261
  if1694_else4260:
    null $P5008
    set $P5009, $P5008
  if1694_end4261:
    unless_null $P5009, vivi_16954262
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_16954262:
    unless_null $P5009, vivi_16964263
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_16964263:
    set $P5004, $P5009
  fallback4259:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1584
    nqp_get_sc_object $P5013, "0B0C72E2184996CA924631B8722E3D0303B59EA5-1382484096.05537", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 1585
    set fb_tmp_193, _lex_param_1
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if1697_else4264 
    set $P5015, fb_tmp_193[0]
    set $P5017, $P5015
    goto if1697_end4265
  if1697_else4264:
    null $P5016
    set $P5017, $P5016
  if1697_end4265:
    unless_null $P5017, vivi_16984266
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_16984266:
    $P5019 = _lex_param_0."as_post"($P5017)
    set $P103, $P5019
.annotate 'line', 1586
    $P5020 = $P103."result"()
    $P5021 = _lex_param_0."infer_type"($P5020)
    set $S5002, $P5021
    downcase $S5001, $S5002
    iseq $I5003, $S5001, "i"
    unless $I5003 goto if1699_else4267 
.annotate 'line', 1587
    $P102."push"($P103)
.annotate 'line', 1588
    $P5022 = $P102."push_pirop"("not", $P101, $P103)
    goto if1699_end4268
  if1699_else4267:
.annotate 'line', 1590
.annotate 'line', 1591
    $P5023 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5023
.annotate 'line', 1592
    $P102."push"($P103)
.annotate 'line', 1593
    $P5024 = $P102."push_pirop"("isfalse", $P101, $P103)
  if1699_end4268:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_433_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1599
    .const 'Sub' $P5124 = 'cuid_434_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_437_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_441_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_444_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_446_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_447_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_448_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_450_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_451_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_457_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_240_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_241_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_242_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_243_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_244_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_245_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_246_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_247_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1382484127.52628' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1382484127.52628' 
    capture_lex $P5124 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&xblock_immediate", $P103 
    .lex "&block_immediate", $P104 
    .lex "&default_for", $P105 
    .lex "&default_value_for_prim", $P106 
    .lex "&colonpair_str", $P107 
    .lex "&import_HOW_exports", $P108 
    .lex "&set_block_handler", $P109 
    .lex "&only_star_block", $P110 
    .lex "&attach_multi_signature", $P111 
    .lex "&wrap_return_handler", $P112 
    .lex "&lexical_package_lookup", $P113 
    .const 'Sub' $P5001 = 'cuid_434_1382484127.52628' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_437_1382484127.52628' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_440_1382484127.52628' 
    capture_lex $P5003
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_441_1382484127.52628' 
    capture_lex $P5004
    set $P106, $P5004
    .const 'Sub' $P5005 = 'cuid_444_1382484127.52628' 
    capture_lex $P5005
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_446_1382484127.52628' 
    capture_lex $P5006
    set $P108, $P5006
    .const 'Sub' $P5007 = 'cuid_447_1382484127.52628' 
    capture_lex $P5007
    set $P109, $P5007
    .const 'Sub' $P5008 = 'cuid_448_1382484127.52628' 
    capture_lex $P5008
    set $P110, $P5008
    .const 'Sub' $P5009 = 'cuid_450_1382484127.52628' 
    capture_lex $P5009
    set $P111, $P5009
    .const 'Sub' $P5010 = 'cuid_451_1382484127.52628' 
    capture_lex $P5010
    set $P112, $P5010
    .const 'Sub' $P5011 = 'cuid_457_1382484127.52628' 
    capture_lex $P5011
    set $P113, $P5011
    .const 'Sub' $P5012 = 'cuid_240_1382484127.52628' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_241_1382484127.52628' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_242_1382484127.52628' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_243_1382484127.52628' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_244_1382484127.52628' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_245_1382484127.52628' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_246_1382484127.52628' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_247_1382484127.52628' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_248_1382484127.52628' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_249_1382484127.52628' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_250_1382484127.52628' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_251_1382484127.52628' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_252_1382484127.52628' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_253_1382484127.52628' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_254_1382484127.52628' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_255_1382484127.52628' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_256_1382484127.52628' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_257_1382484127.52628' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_258_1382484127.52628' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_259_1382484127.52628' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_260_1382484127.52628' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_261_1382484127.52628' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_262_1382484127.52628' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_263_1382484127.52628' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_264_1382484127.52628' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_265_1382484127.52628' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_266_1382484127.52628' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_267_1382484127.52628' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_268_1382484127.52628' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_269_1382484127.52628' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_270_1382484127.52628' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_271_1382484127.52628' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_272_1382484127.52628' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_273_1382484127.52628' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_274_1382484127.52628' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_275_1382484127.52628' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_276_1382484127.52628' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_277_1382484127.52628' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_278_1382484127.52628' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_279_1382484127.52628' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_280_1382484127.52628' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_281_1382484127.52628' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_282_1382484127.52628' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_283_1382484127.52628' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_284_1382484127.52628' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_285_1382484127.52628' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_286_1382484127.52628' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_287_1382484127.52628' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_288_1382484127.52628' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_289_1382484127.52628' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_290_1382484127.52628' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_291_1382484127.52628' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_292_1382484127.52628' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_293_1382484127.52628' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_294_1382484127.52628' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_295_1382484127.52628' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_296_1382484127.52628' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_297_1382484127.52628' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_298_1382484127.52628' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_299_1382484127.52628' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_300_1382484127.52628' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_301_1382484127.52628' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_302_1382484127.52628' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_303_1382484127.52628' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_304_1382484127.52628' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_305_1382484127.52628' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_306_1382484127.52628' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_307_1382484127.52628' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_308_1382484127.52628' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_309_1382484127.52628' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_310_1382484127.52628' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_311_1382484127.52628' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_312_1382484127.52628' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_313_1382484127.52628' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_314_1382484127.52628' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_315_1382484127.52628' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_316_1382484127.52628' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_317_1382484127.52628' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_318_1382484127.52628' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_319_1382484127.52628' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_320_1382484127.52628' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_321_1382484127.52628' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_322_1382484127.52628' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_323_1382484127.52628' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_324_1382484127.52628' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_325_1382484127.52628' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_326_1382484127.52628' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_327_1382484127.52628' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_328_1382484127.52628' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_329_1382484127.52628' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_330_1382484127.52628' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_331_1382484127.52628' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_332_1382484127.52628' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_333_1382484127.52628' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_334_1382484127.52628' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_335_1382484127.52628' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_336_1382484127.52628' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_337_1382484127.52628' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_338_1382484127.52628' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_339_1382484127.52628' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_340_1382484127.52628' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_341_1382484127.52628' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_342_1382484127.52628' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_343_1382484127.52628' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_344_1382484127.52628' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_345_1382484127.52628' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_346_1382484127.52628' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_347_1382484127.52628' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_348_1382484127.52628' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_349_1382484127.52628' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_350_1382484127.52628' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_351_1382484127.52628' 
    capture_lex $P5123
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_434_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1600
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_194 
.annotate 'line', 1601
    set fb_tmp_194, _lex_param_0
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if1700_else4269 
    set $P5001, fb_tmp_194[1]
    set $P5003, $P5001
    goto if1700_end4270
  if1700_else4269:
    null $P5002
    set $P5003, $P5002
  if1700_end4270:
    unless_null $P5003, vivi_17014271
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  vivi_17014271:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_437_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1605
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_436_1382484127.52628' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1606
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1607
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless1702_end4273 
    .const 'Sub' $P5002 = 'cuid_436_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless1702_end4273:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1382484127.52628") :anon :lex :outer("cuid_437_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1607
    .const 'Sub' $P5013 = 'cuid_435_1382484127.52628' 
    capture_lex $P5013 
    .lex "$stmts", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1608
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    find_lex $P5003, "$block"
    $P5004 = $P5003."node"()
    $P5005 = $P5002."new"($P5004 :named("node"))
    set $P101, $P5005
.annotate 'line', 1609
    find_lex $P5009, "$block"
    $P5010 = $P5009."list"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next4274:
    unless $P5008, for_done4276
    shift $P5012, $P5008
  for_redo4275:
    .const 'Sub' $P5011 = 'cuid_435_1382484127.52628' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next4274
  for_done4276:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1382484127.52628") :anon :lex :outer("cuid_436_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1609
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_440_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1615
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_439_1382484127.52628' 
    capture_lex $P5009 
    .lex "$sigil", _lex_param_0 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if1703_else4277 
.annotate 'line', 1616
.annotate 'line', 1617
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("list" :named("op"))
    set $P5008, $P5002
    goto if1703_end4278
  if1703_else4277:
    set $S5002, _lex_param_0
    iseq $I5002, $S5002, "%"
    unless $I5002 goto if1704_else4279 
.annotate 'line', 1619
.annotate 'line', 1620
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5004 = $P5003."new"("hash" :named("op"))
    set $P5007, $P5004
    goto if1704_end4280
  if1704_else4279:
    .const 'Sub' $P5005 = 'cuid_439_1382484127.52628' 
    capture_lex $P5005
    $P5006 = $P5005()
    set $P5007, $P5006
  if1704_end4280:
    set $P5008, $P5007
  if1703_end4278:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_439_1382484127.52628") :anon :lex :outer("cuid_440_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1622
    .const 'Sub' $P5020 = 'cuid_438_1382484127.52628' 
    capture_lex $P5020 
    .lex "$default", $P101 
    .local pmc fb_tmp_195 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_17114289
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 1624
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_17094287
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 1625
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4281
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_195, $P5004
    repr_defined $I5001, fb_tmp_195
    unless $I5001 goto if1705_else4282 
    set $P5006, fb_tmp_195["$W"]
    set $P5008, $P5006
    goto if1705_end4283
  if1705_else4282:
    null $P5007
    set $P5008, $P5007
  if1705_end4283:
    unless_null $P5008, vivi_17064284
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_17064284:
    unless_null $P5008, vivi_17074285
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17074285:
    set $P5003, $P5008
  fallback4281:
    new $P5011, 'ResizablePMCArray'
    box $P5012, "NQPMu"
    push $P5011, $P5012
    $P5013 = $P5003."find_sym"($P5011)
    $P5014 = $P5002."new"($P5013 :named("value"))
    set $P101, $P5014
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_17084286
  catch_handler_17094287:
    .get_results ($P5016) 
    .const 'Sub' $P10001 = 'cuid_438_1382484127.52628' 
    capture_lex $P10001
    $P10001($P5016)
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10002
    goto skip_handler_17084286
  skip_handler_17084286:
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_17104288
  catch_handler_17114289:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_17104288
  skip_handler_17104288:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1382484127.52628") :anon :lex :outer("cuid_439_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1626
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("null" :named("op"))
    store_lex "$default", $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_441_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1632
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1712_else4290 
.annotate 'line', 1633
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5002 = $P5001."new"(0 :named("value"))
    set $P5008, $P5002
    goto if1712_end4291
  if1712_else4290:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1713_else4292 
.annotate 'line', 1634
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 49
    $P5004 = $P5003."new"(0.0 :named("value"))
    set $P5007, $P5004
    goto if1713_end4293
  if1713_else4292:
.annotate 'line', 1635
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5006 = $P5005."new"("" :named("value"))
    set $P5007, $P5006
  if1713_end4293:
    set $P5008, $P5007
  if1712_end4291:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_444_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1647
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_443_1382484127.52628' 
    capture_lex $P5006 
    .lex "$ast", _lex_param_0 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5001, _lex_param_0, $P5001
    unless $I5001 goto if1714_else4294 
    .const 'Sub' $P5002 = 'cuid_443_1382484127.52628' 
    capture_lex $P5002
    $P5003 = $P5002()
    set $P5005, $P5003
    goto if1714_end4295
  if1714_else4294:
.annotate 'line', 1652
.annotate 'line', 1653
    $P5004 = _lex_param_0."value"()
    set $P5005, $P5004
  if1714_end4295:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_443_1382484127.52628") :anon :lex :outer("cuid_444_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1648
    .const 'Sub' $P5010 = 'cuid_442_1382484127.52628' 
    capture_lex $P5010 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1650
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4296:
    unless $P5004, for_done4298
    shift $P5008, $P5004
  for_redo4297:
    .const 'Sub' $P5007 = 'cuid_442_1382484127.52628' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4296
  for_done4298:
.annotate 'line', 1651
    $P5009 = "&join"(" ", $P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1382484127.52628") :anon :lex :outer("cuid_443_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1650
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_446_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1839
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_445_1382484127.52628' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_196 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if1715_end4300 
.annotate 'line', 1841
    set fb_tmp_196, _lex_param_0
    repr_defined $I5002, fb_tmp_196
    unless $I5002 goto if1716_else4301 
    set $P5005, fb_tmp_196["EXPORTHOW"]
    set $P5007, $P5005
    goto if1716_end4302
  if1716_else4301:
    null $P5006
    set $P5007, $P5006
  if1716_end4302:
    unless_null $P5007, vivi_17174303
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_17174303:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4309:
    unless $P5003, for_done4311
    shift $P5010, $P5003
  for_redo4310:
    .const 'Sub' $P5009 = 'cuid_445_1382484127.52628' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4309
  for_done4311:
    set $P5011, $P5001
  if1715_end4300:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1382484127.52628") :anon :lex :outer("cuid_446_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1842
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_197 
    .local pmc pkg_viv_tmp_42 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4304
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_197, pkg_viv_tmp_42
    repr_defined $I5001, fb_tmp_197
    unless $I5001 goto if1718_else4305 
    set $P5004, fb_tmp_197["%HOW"]
    set $P5006, $P5004
    goto if1718_end4306
  if1718_else4305:
    null $P5005
    set $P5006, $P5005
  if1718_end4306:
    unless_null $P5006, vivi_17194307
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HOW"], $P5007
    set $P5006, $P5007
  vivi_17194307:
    unless_null $P5006, vivi_17204308
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_17204308:
    set $P5001, $P5006
  fallback4304:
.annotate 'line', 1843
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_447_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1941
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_198 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_199 
    .local pmc pkg_viv_tmp_44 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4314
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_43, $P5002
    set fb_tmp_198, pkg_viv_tmp_43
    repr_defined $I5002, fb_tmp_198
    unless $I5002 goto if1722_else4315 
    set $P5004, fb_tmp_198["%HANDLERS"]
    set $P5006, $P5004
    goto if1722_end4316
  if1722_else4315:
    null $P5005
    set $P5006, $P5005
  if1722_end4316:
    unless_null $P5006, vivi_17234317
    new $P5007, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_17234317:
    unless_null $P5006, vivi_17244318
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_17244318:
    set $P5001, $P5006
  fallback4314:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if1721_end4313 
.annotate 'line', 1942
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if1721_end4313:
.annotate 'line', 1945
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless1725_end4320 
.annotate 'line', 1946
.annotate 'line', 1947
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1948
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5013 = $P5012."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1949
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5015 = $P5014."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5016 = $P5011."new"($P5013, $P5015, "bind" :named("op"))
    _lex_param_1."unshift"($P5016)
.annotate 'line', 1952
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5018 = $P5017."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5018)
.annotate 'line', 1953
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1954
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1955
    $P5019 = _lex_param_1."arity"(1)
  unless1725_end4320:
.annotate 'line', 1957
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5020, "%*HANDLERS"
    unless_null $P5020, fallback4321
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_44, $P5021
    set fb_tmp_199, pkg_viv_tmp_44
    repr_defined $I5003, fb_tmp_199
    unless $I5003 goto if1726_else4322 
    set $P5023, fb_tmp_199["%HANDLERS"]
    set $P5025, $P5023
    goto if1726_end4323
  if1726_else4322:
    null $P5024
    set $P5025, $P5024
  if1726_end4323:
    unless_null $P5025, vivi_17274324
    new $P5026, 'Hash'
    set pkg_viv_tmp_44["%HANDLERS"], $P5026
    set $P5025, $P5026
  vivi_17274324:
    unless_null $P5025, vivi_17284325
    die "Contextual %*HANDLERS not found"
    box $P5027, "Contextual %*HANDLERS not found"
    set $P5025, $P5027
  vivi_17284325:
    set $P5020, $P5025
  fallback4321:
    set $S5005, _lex_param_2
.annotate 'line', 1958
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 1959
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1961
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5031 = $P5030."new"("exception" :named("op"))
    $P5032 = $P5029."new"(_lex_param_1, $P5031, "call" :named("op"))
.annotate 'line', 1963
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 1964
    nqp_get_sc_object $P5034, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1966
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5036 = $P5035."new"("exception" :named("op"))
.annotate 'line', 1967
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5038 = $P5037."new"("handled" :named("value"))
.annotate 'line', 1968
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5040 = $P5039."new"(1 :named("value"))
    $P5041 = $P5034."new"($P5036, $P5038, $P5040, "bindkey_i" :named("op"))
.annotate 'line', 1970
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5043 = $P5042."new"("null" :named("op"))
.annotate 'line', 1971
    nqp_get_sc_object $P5044, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5045 = $P5044."new"("null" :named("op"))
    $P5046 = $P5033."new"($P5041 :named("parrot"), $P5043 :named("jvm"), $P5045 :named("moar"))
.annotate 'line', 1973
    $P5047 = "&default_for"("$")
    $P5048 = $P5028."new"($P5032, $P5046, $P5047)
    set $P5020[$S5005], $P5048
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_448_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2622
    .lex "$past", $P101 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2623
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4326
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_200, $P5003
    repr_defined $I5001, fb_tmp_200
    unless $I5001 goto if1729_else4327 
    set $P5005, fb_tmp_200["$W"]
    set $P5007, $P5005
    goto if1729_end4328
  if1729_else4327:
    null $P5006
    set $P5007, $P5006
  if1729_end4328:
    unless_null $P5007, vivi_17304329
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_17304329:
    unless_null $P5007, vivi_17314330
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_17314330:
    set $P5002, $P5007
  fallback4326:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2624
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2626
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2628
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2630
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
.annotate 'line', 2632
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5017 = $P5016."new"("curcode" :named("op"))
    $P5018 = $P5015."new"($P5017, "getcodeobj" :named("op"))
.annotate 'line', 2633
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4331
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set fb_tmp_201, $P5021
    repr_defined $I5002, fb_tmp_201
    unless $I5002 goto if1732_else4332 
    set $P5023, fb_tmp_201["$W"]
    set $P5025, $P5023
    goto if1732_end4333
  if1732_else4332:
    null $P5024
    set $P5025, $P5024
  if1732_end4333:
    unless_null $P5025, vivi_17334334
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_17334334:
    unless_null $P5025, vivi_17344335
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_17344335:
    set $P5020, $P5025
  fallback4331:
    new $P5028, 'ResizablePMCArray'
    box $P5029, "NQPRoutine"
    push $P5028, $P5029
    $P5030 = $P5020."find_sym"($P5028)
    $P5031 = $P5019."new"($P5030 :named("value"))
    $P5032 = $P5014."new"($P5018, $P5031, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2635
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5034 = $P5033."new"("usecapture" :named("op"))
    $P5035 = $P5013."new"($P5032, $P5034, "multicachefind" :named("op"))
.annotate 'line', 2637
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2639
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5039 = $P5038."new"("curcode" :named("op"))
    $P5040 = $P5037."new"($P5039, "getcodeobj" :named("op"))
.annotate 'line', 2640
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5042 = $P5041."new"("savecapture" :named("op"))
    $P5043 = $P5036."new"($P5040, $P5042, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5044 = $P5012."new"($P5035, $P5043, "ifnull" :named("op"))
.annotate 'line', 2643
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5046 = $P5045."new"("usecapture" :named("op"))
    $P5047 = $P5011."new"($P5044, $P5046, "invokewithcapture" :named("op"))
    $P101."push"($P5047)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_450_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2648
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_449_1382484127.52628' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_205 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_202, _lex_param_1
    repr_defined $I5001, fb_tmp_202
    unless $I5001 goto if1735_else4336 
    set $P5008, fb_tmp_202[0]
    set $P5010, $P5008
    goto if1735_end4337
  if1735_else4336:
    null $P5009
    set $P5010, $P5009
  if1735_end4337:
    unless_null $P5010, vivi_17364338
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_17364338:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next4357:
    unless $P5007, for_done4359
    shift $P5014, $P5007
  for_redo4358:
    .const 'Sub' $P5013 = 'cuid_449_1382484127.52628' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next4357
  for_done4359:
.annotate 'line', 2660
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback4360
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_205, $P5016
    repr_defined $I5002, fb_tmp_205
    unless $I5002 goto if1747_else4361 
    set $P5018, fb_tmp_205["$W"]
    set $P5020, $P5018
    goto if1747_end4362
  if1747_else4361:
    null $P5019
    set $P5020, $P5019
  if1747_end4362:
    unless_null $P5020, vivi_17484363
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_17484363:
    unless_null $P5020, vivi_17494364
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_17494364:
    set $P5015, $P5020
  fallback4360:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1382484127.52628") :anon :lex :outer("cuid_450_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2651
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5001, _lex_param_0, $P5001
    set $I5003, $I5001
    unless $I5001 goto if1739_end4344 
.annotate 'line', 2652
    $P5002 = _lex_param_0."decl"()
    set $S5001, $P5002
    iseq $I5002, $S5001, "param"
    set $I5003, $I5002
  if1739_end4344:
    set $I5005, $I5003
    unless $I5003 goto if1738_end4342 
    $P5003 = _lex_param_0."named"()
    isfalse $I5004, $P5003
    set $I5005, $I5004
  if1738_end4342:
    box $P5021, $I5005
    set $P5020, $P5021
    unless $I5005 goto if1737_end4340 
.annotate 'line', 2653
    find_lex $P5004, "$types"
    $P5005 = _lex_param_0."returns"()
    get_id $I5007, $P5005
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    get_id $I5008, $P5006
    iseq $I5006, $I5007, $I5008
    unless $I5006 goto if1740_else4345 
    null $P5007
    set $P5009, $P5007
    goto if1740_end4346
  if1740_else4345:
.annotate 'line', 2655
    $P5008 = _lex_param_0."returns"()
    set $P5009, $P5008
  if1740_end4346:
    $P5004."push"($P5009)
.annotate 'line', 2656
    find_lex $P5010, "$definednesses"
    set fb_tmp_203, _lex_param_0
    repr_defined $I5010, fb_tmp_203
    unless $I5010 goto if1742_else4349 
    set $P5011, fb_tmp_203["definedness"]
    set $P5013, $P5011
    goto if1742_end4350
  if1742_else4349:
    null $P5012
    set $P5013, $P5012
  if1742_end4350:
    unless_null $P5013, vivi_17434351
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_17434351:
    set $S5002, $P5013
    iseq $I5009, $S5002, "D"
    unless $I5009 goto if1741_else4347 
    set $I5014, 1
    goto if1741_end4348
  if1741_else4347:
    set fb_tmp_204, _lex_param_0
    repr_defined $I5012, fb_tmp_204
    unless $I5012 goto if1745_else4354 
    set $P5015, fb_tmp_204["definedness"]
    set $P5017, $P5015
    goto if1745_end4355
  if1745_else4354:
    null $P5016
    set $P5017, $P5016
  if1745_end4355:
    unless_null $P5017, vivi_17464356
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_17464356:
    set $S5003, $P5017
    iseq $I5011, $S5003, "U"
    unless $I5011 goto if1744_else4352 
    set $I5013, 2
    goto if1744_end4353
  if1744_else4352:
    set $I5013, 0
  if1744_end4353:
    set $I5014, $I5013
  if1741_end4348:
    $P5019 = $P5010."push"($I5014)
    set $P5020, $P5019
  if1737_end4340:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_451_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2663
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
.annotate 'line', 2664
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_457_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3183
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_454_1382484127.52628' 
    capture_lex $P5037 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_206 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_4365
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if1750_end4368 
.annotate 'line', 3185
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if1750_end4368:
.annotate 'line', 3189
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3190
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
.annotate 'line', 3192
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    set $S5001, $P101
    $P5008 = $P5007."new"($S5001 :named("value"))
    $P5009 = $P5006."new"($P5008, "associative" :named("scope"))
    set $P102, $P5009
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5002, $N5003, $N5004
    unless $I5002 goto if1751_else4369 
.annotate 'line', 3197
.annotate 'line', 3198
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3200
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5012 = $P5011."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5013 = $P5010."new"($P5012, "who" :named("op"))
    $P102."unshift"($P5013)
.annotate 'line', 3202
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3204
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3206
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3208
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5018, "$*GLOBALish"
    unless_null $P5018, fallback4371
    nqp_get_sc_object $P5020, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5019, $P5020
    set fb_tmp_206, $P5019
    repr_defined $I5003, fb_tmp_206
    unless $I5003 goto if1752_else4372 
    set $P5021, fb_tmp_206["$GLOBALish"]
    set $P5023, $P5021
    goto if1752_end4373
  if1752_else4372:
    null $P5022
    set $P5023, $P5022
  if1752_end4373:
    unless_null $P5023, vivi_17534374
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_17534374:
    unless_null $P5023, vivi_17544375
    die "Contextual $*GLOBALish not found"
    box $P5025, "Contextual $*GLOBALish not found"
    set $P5023, $P5025
  vivi_17544375:
    set $P5018, $P5023
  fallback4371:
    $P5026 = $P5017."new"($P5018 :named("value"))
    $P5027 = $P5016."new"($P5026, "who" :named("op"))
.annotate 'line', 3210
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    set $S5002, $P101
    $P5029 = $P5028."new"($S5002 :named("value"))
    $P5030 = $P5015."new"($P5027, $P5029, "atkey" :named("op"))
.annotate 'line', 3212
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5031 = "&default_for"($S5003)
    $P5032 = $P5014."new"($P5030, $P5031, "ifnull" :named("op"))
    $P5033 = $P102."fallback"($P5032)
    goto if1751_end4370
  if1751_else4369:
    .const 'Sub' $P5034 = 'cuid_454_1382484127.52628' 
    capture_lex $P5034
    $P5035 = $P5034()
  if1751_end4370:
    $P5036 = "RETURN"($P102)
    goto lexotic_4366
  lexotic_4365:
    .get_results ($P5036)
  lexotic_4366:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1382484127.52628") :anon :lex :outer("cuid_457_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3218
    .const 'Sub' $P5053 = 'cuid_453_1382484127.52628' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_455_1382484127.52628' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_456_1382484127.52628' 
    capture_lex $P5053 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 3220
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback4378
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_207, $P5004
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if1756_else4379 
    set $P5006, fb_tmp_207["$W"]
    set $P5008, $P5006
    goto if1756_end4380
  if1756_else4379:
    null $P5007
    set $P5008, $P5007
  if1756_end4380:
    unless_null $P5008, vivi_17574381
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_17574381:
    unless_null $P5008, vivi_17584382
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_17584382:
    set $P5003, $P5008
  fallback4378:
    find_lex $P5011, "@name"
    set fb_tmp_208, $P5011
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if1759_else4383 
    set $P5012, fb_tmp_208[0]
    set $P5014, $P5012
    goto if1759_end4384
  if1759_else4383:
    null $P5013
    set $P5014, $P5013
  if1759_end4384:
    unless_null $P5014, vivi_17604385
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_17604385:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if1755_else4376 
    .const 'Sub' $P5017 = 'cuid_453_1382484127.52628' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if1755_end4377
  if1755_else4376:
.annotate 'line', 3229
.annotate 'line', 3230
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5020, "$*GLOBALish"
    unless_null $P5020, fallback4393
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set fb_tmp_210, $P5021
    repr_defined $I5003, fb_tmp_210
    unless $I5003 goto if1766_else4394 
    set $P5023, fb_tmp_210["$GLOBALish"]
    set $P5025, $P5023
    goto if1766_end4395
  if1766_else4394:
    null $P5024
    set $P5025, $P5024
  if1766_end4395:
    unless_null $P5025, vivi_17674396
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_17674396:
    unless_null $P5025, vivi_17684397
    die "Contextual $*GLOBALish not found"
    box $P5027, "Contextual $*GLOBALish not found"
    set $P5025, $P5027
  vivi_17684397:
    set $P5020, $P5025
  fallback4393:
    $P5028 = $P5019."new"($P5020 :named("value"))
    set $P101, $P5028
  if1755_end4377:
    find_lex $P5029, "@name"
    set fb_tmp_211, $P5029
    repr_defined $I5005, fb_tmp_211
    unless $I5005 goto if1770_else4400 
    set $P5030, fb_tmp_211[0]
    set $P5032, $P5030
    goto if1770_end4401
  if1770_else4400:
    null $P5031
    set $P5032, $P5031
  if1770_end4401:
    unless_null $P5032, vivi_17714402
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_17714402:
    set $S5001, $P5032
    iseq $I5004, $S5001, "GLOBAL"
    unless $I5004 goto if1769_end4399 
.annotate 'line', 3232
.annotate 'line', 3233
    find_lex $P5034, "@name"
    $P5035 = $P5034."shift"()
  if1769_end4399:
    find_lex $P5039, "@name"
    set $P5036, $P5039
    iter $P5038, $P5039
  for_next4403:
    unless $P5038, for_done4405
    shift $P5041, $P5038
  for_redo4404:
    .const 'Sub' $P5040 = 'cuid_455_1382484127.52628' 
    capture_lex $P5040
    $P5036 = $P5040($P5041)
    goto for_next4403
  for_done4405:
.annotate 'line', 3259
    find_lex $P5042, "$lookup"
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5044 = $P5043."new"($P101, "who" :named("op"))
    $P5042."unshift"($P5044)
    find_lex $P5045, "$final_name"
    set $S5003, $P5045
    substr $S5002, $S5003, 0, 1
    box $P5046, $S5002
    set $P102, $P5046
    set $S5004, $P102
    iseq $I5006, $S5004, "@"
    set $I5008, $I5006
    if $I5006 goto unless1773_end4409 
    set $S5005, $P102
    iseq $I5007, $S5005, "%"
    set $I5008, $I5007
  unless1773_end4409:
    unless $I5008 goto if1772_else4406 
    .const 'Sub' $P5047 = 'cuid_456_1382484127.52628' 
    capture_lex $P5047
    $P5048 = $P5047()
    set $P5052, $P5048
    goto if1772_end4407
  if1772_else4406:
.annotate 'line', 3274
.annotate 'line', 3275
    find_lex $P5049, "$lookup"
    $P5050 = "&default_for"($P102)
    $P5051 = $P5049."fallback"($P5050)
    set $P5052, $P5051
  if1772_end4407:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1382484127.52628") :anon :lex :outer("cuid_454_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3221
    .const 'Sub' $P5019 = 'cuid_452_1382484127.52628' 
    capture_lex $P5019 
    .lex "$first", $P101 
    .local pmc fb_tmp_209 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5017, 'ExceptionHandler'
    set_label $P5017, catch_handler_17654392
    $P5017.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5017
.annotate 'line', 3222
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3223
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback4386
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5006, $P5007
    set fb_tmp_209, $P5006
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if1761_else4387 
    set $P5008, fb_tmp_209["$W"]
    set $P5010, $P5008
    goto if1761_end4388
  if1761_else4387:
    null $P5009
    set $P5010, $P5009
  if1761_end4388:
    unless_null $P5010, vivi_17624389
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_17624389:
    unless_null $P5010, vivi_17634390
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_17634390:
    set $P5005, $P5010
  fallback4386:
    new $P5013, 'ResizablePMCArray'
    push $P5013, $P101
    $P5014 = $P5005."find_sym"($P5013)
    $P5015 = $P5004."new"($P5014 :named("value"))
    store_lex "$path", $P5015
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5016
    pop_eh 
    goto skip_handler_17644391
  catch_handler_17654392:
    .get_results ($P5017) 
    .const 'Sub' $P10001 = 'cuid_452_1382484127.52628' 
    capture_lex $P10001
    $P10001($P5017)
    set $I10001, 1
    set $P5017["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5017
    pop_upto_eh $P5017
    pop_eh 
    set $P5018, $P10002
    goto skip_handler_17644391
  skip_handler_17644391:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1382484127.52628") :anon :lex :outer("cuid_453_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3224
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
.annotate 'line', 3225
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5002, "$first"
    $P5003 = $P5001."new"($P5002 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1382484127.52628") :anon :lex :outer("cuid_454_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3235
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3236
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
    $P5003 = $P5002."unique"("pkg_lookup_tmp")
    set $P101, $P5003
.annotate 'line', 3237
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 3238
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3240
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$path"
    $P5009 = $P5005."new"($P5007, $P5008, "bind" :named("op"))
.annotate 'line', 3243
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3245
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3247
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5014 = $P5013."new"($P101 :named("name"), "local" :named("scope"))
    $P5015 = $P5012."new"($P5014, "who" :named("op"))
.annotate 'line', 3248
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    set $S5001, _lex_param_0
    $P5017 = $P5016."new"($S5001 :named("value"))
    $P5018 = $P5011."new"($P5015, $P5017, "existskey" :named("op"))
.annotate 'line', 3250
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3252
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5022 = $P5021."new"($P101 :named("name"), "local" :named("scope"))
    $P5023 = $P5020."new"($P5022, "who" :named("op"))
.annotate 'line', 3253
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    set $S5002, _lex_param_0
    $P5025 = $P5024."new"($S5002 :named("value"))
    $P5026 = $P5019."new"($P5023, $P5025, "atkey" :named("op"))
.annotate 'line', 3255
    $P5027 = "&default_for"("$")
    $P5028 = $P5010."new"($P5018, $P5026, $P5027, "if" :named("op"))
    $P5029 = $P5004."new"($P5009, $P5028)
    store_lex "$path", $P5029
.annotate 'line', 3257
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    find_lex $P5031, "$path"
    $P5032 = $P5030."new"($P5031, $P101, "locallifetime" :named("op"))
    store_lex "$path", $P5032
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1382484127.52628") :anon :lex :outer("cuid_454_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3261
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3262
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
    $P5003 = $P5002."unique"("pkg_viv_tmp")
    set $P101, $P5003
    find_lex $P5004, "$lookup"
.annotate 'line', 3263
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3265
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5007 = $P5006."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5008, "$lookup"
    set fb_tmp_212, $P5008
    repr_defined $I5001, fb_tmp_212
    unless $I5001 goto if1774_else4410 
    set $P5009, fb_tmp_212[0]
    set $P5011, $P5009
    goto if1774_end4411
  if1774_else4410:
    null $P5010
    set $P5011, $P5010
  if1774_end4411:
    unless_null $P5011, vivi_17754412
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_17754412:
    $P5013 = $P5005."new"($P5007, $P5011, "bind" :named("op"))
    set $P5004[0], $P5013
.annotate 'line', 3267
    find_lex $P5014, "$lookup"
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3269
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5017 = $P5016."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5018, "$lookup"
    set fb_tmp_213, $P5018
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if1776_else4413 
    set $P5019, fb_tmp_213[1]
    set $P5021, $P5019
    goto if1776_end4414
  if1776_else4413:
    null $P5020
    set $P5021, $P5020
  if1776_end4414:
    unless_null $P5021, vivi_17774415
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_17774415:
.annotate 'line', 3271
    find_lex $P5023, "$sigil"
    $P5024 = "&default_for"($P5023)
    $P5025 = $P5015."new"($P5017, $P5021, $P5024, "bindkey" :named("op"))
    $P5026 = $P5014."fallback"($P5025)
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_240_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1638
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_214 
    unless_null _lex_param_1, fallback4418
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4418:
    set fb_tmp_214, _lex_param_1
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if1778_else4416 
    set $P5002, fb_tmp_214["comp_unit"]
    set $P5004, $P5002
    goto if1778_end4417
  if1778_else4416:
    null $P5003
    set $P5004, $P5003
  if1778_end4417:
    unless_null $P5004, vivi_17794419
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_17794419:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_241_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1640
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
.annotate 'line', 1641
    unless_null _lex_param_1, fallback4424
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4424:
    set fb_tmp_215, _lex_param_1
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if1781_else4422 
    set $P5002, fb_tmp_215["colonpair"]
    set $P5004, $P5002
    goto if1781_end4423
  if1781_else4422:
    null $P5003
    set $P5004, $P5003
  if1781_end4423:
    unless_null $P5004, vivi_17824425
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_17824425:
    unless $P5004 goto if1780_else4420 
    unless_null _lex_param_1, fallback4428
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback4428:
    set fb_tmp_216, _lex_param_1
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1783_else4426 
    set $P5007, fb_tmp_216["identifier"]
    set $P5009, $P5007
    goto if1783_end4427
  if1783_else4426:
    null $P5008
    set $P5009, $P5008
  if1783_end4427:
    unless_null $P5009, vivi_17844429
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_17844429:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1642
    unless_null _lex_param_1, fallback4432
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5011
  fallback4432:
    set fb_tmp_217, _lex_param_1
    repr_defined $I5003, fb_tmp_217
    unless $I5003 goto if1785_else4430 
    set $P5012, fb_tmp_217["colonpair"]
    set $P5014, $P5012
    goto if1785_end4431
  if1785_else4430:
    null $P5013
    set $P5014, $P5013
  if1785_end4431:
    unless_null $P5014, vivi_17864433
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_17864433:
    $P5016 = $P5014."ast"()
    $P5017 = $P5016."named"()
    set $S5007, $P5017
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1643
    unless_null _lex_param_1, fallback4436
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5018
  fallback4436:
    set fb_tmp_218, _lex_param_1
    repr_defined $I5004, fb_tmp_218
    unless $I5004 goto if1787_else4434 
    set $P5019, fb_tmp_218["colonpair"]
    set $P5021, $P5019
    goto if1787_end4435
  if1787_else4434:
    null $P5020
    set $P5021, $P5020
  if1787_end4435:
    unless_null $P5021, vivi_17884437
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_17884437:
    $P5023 = $P5021."ast"()
    $P5024 = "&colonpair_str"($P5023)
    set $S5008, $P5024
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if1780_end4421
  if1780_else4420:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if1780_end4421:
    $P5025 = _lex_param_1."!make"($S5010)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_242_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1657
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 1658
    unless_null _lex_param_1, fallback4440
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback4440:
    set fb_tmp_219, _lex_param_1
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if1789_else4438 
    set $P5005, fb_tmp_219["statementlist"]
    set $P5007, $P5005
    goto if1789_end4439
  if1789_else4438:
    null $P5006
    set $P5007, $P5006
  if1789_end4439:
    unless_null $P5007, vivi_17904441
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_17904441:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1659
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback4442
    nqp_get_sc_object $P5012, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5011, $P5012
    set fb_tmp_220, $P5011
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if1791_else4443 
    set $P5013, fb_tmp_220["$W"]
    set $P5015, $P5013
    goto if1791_end4444
  if1791_else4443:
    null $P5014
    set $P5015, $P5014
  if1791_end4444:
    unless_null $P5015, vivi_17924445
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_17924445:
    unless_null $P5015, vivi_17934446
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_17934446:
    set $P5010, $P5015
  fallback4442:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback4449
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set fb_tmp_221, $P5020
    repr_defined $I5003, fb_tmp_221
    unless $I5003 goto if1795_else4450 
    set $P5022, fb_tmp_221["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if1795_end4451
  if1795_else4450:
    null $P5023
    set $P5024, $P5023
  if1795_end4451:
    unless_null $P5024, vivi_17964452
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_17964452:
    unless_null $P5024, vivi_17974453
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_17974453:
    set $P5019, $P5024
  fallback4449:
    if $P5019 goto unless1794_end4448 
.annotate 'line', 1664
.annotate 'line', 1665
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless1794_end4448:
.annotate 'line', 1672
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5031 = $P5030."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5031)
    find_dynamic_lex $P5032, "$*MAIN_SUB"
    unless_null $P5032, fallback4456
    nqp_get_sc_object $P5034, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5033, $P5034
    set fb_tmp_222, $P5033
    repr_defined $I5004, fb_tmp_222
    unless $I5004 goto if1799_else4457 
    set $P5035, fb_tmp_222["$MAIN_SUB"]
    set $P5037, $P5035
    goto if1799_end4458
  if1799_else4457:
    null $P5036
    set $P5037, $P5036
  if1799_end4458:
    unless_null $P5037, vivi_18004459
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_18004459:
    unless_null $P5037, vivi_18014460
    die "Contextual $*MAIN_SUB not found"
    box $P5039, "Contextual $*MAIN_SUB not found"
    set $P5037, $P5039
  vivi_18014460:
    set $P5032, $P5037
  fallback4456:
    unless $P5032 goto if1798_end4455 
.annotate 'line', 1673
.annotate 'line', 1674
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1676
    nqp_get_sc_object $P5041, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5042 = $P5041."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1677
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1678
    find_dynamic_lex $P5044, "$*MAIN_SUB"
    unless_null $P5044, fallback4461
    nqp_get_sc_object $P5046, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5045, $P5046
    set fb_tmp_223, $P5045
    repr_defined $I5005, fb_tmp_223
    unless $I5005 goto if1802_else4462 
    set $P5047, fb_tmp_223["$MAIN_SUB"]
    set $P5049, $P5047
    goto if1802_end4463
  if1802_else4462:
    null $P5048
    set $P5049, $P5048
  if1802_end4463:
    unless_null $P5049, vivi_18034464
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_18034464:
    unless_null $P5049, vivi_18044465
    die "Contextual $*MAIN_SUB not found"
    box $P5051, "Contextual $*MAIN_SUB not found"
    set $P5049, $P5051
  vivi_18044465:
    set $P5044, $P5049
  fallback4461:
    $P5052 = $P5044."name"()
    set $S5002, $P5052
    concat $S5001, "&", $S5002
.annotate 'line', 1679
    nqp_get_sc_object $P5053, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5054 = $P5053."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5055 = $P5043."new"($P5054, "call" :named("op"), $S5001 :named("name"))
    $P5056 = $P5040."new"($P5042, $P5055, "if" :named("op"))
    $P5057 = $P101."push"($P5056)
  if1798_end4455:
.annotate 'line', 1685
    $P102."push"($P101)
.annotate 'line', 1688
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback4466
    nqp_get_sc_object $P5060, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5059, $P5060
    set fb_tmp_224, $P5059
    repr_defined $I5006, fb_tmp_224
    unless $I5006 goto if1805_else4467 
    set $P5061, fb_tmp_224["$W"]
    set $P5063, $P5061
    goto if1805_end4468
  if1805_else4467:
    null $P5062
    set $P5063, $P5062
  if1805_end4468:
    unless_null $P5063, vivi_18064469
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5063, $P5064
  vivi_18064469:
    unless_null $P5063, vivi_18074470
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_18074470:
    set $P5058, $P5063
  fallback4466:
    $P5066 = $P5058."libs"()
    $P102."push"($P5066)
.annotate 'line', 1691
    nqp_get_sc_object $P5067, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 120
.annotate 'line', 1695
    find_dynamic_lex $P5068, "$*W"
    unless_null $P5068, fallback4471
    nqp_get_sc_object $P5070, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5069, $P5070
    set fb_tmp_225, $P5069
    repr_defined $I5007, fb_tmp_225
    unless $I5007 goto if1808_else4472 
    set $P5071, fb_tmp_225["$W"]
    set $P5073, $P5071
    goto if1808_end4473
  if1808_else4472:
    null $P5072
    set $P5073, $P5072
  if1808_end4473:
    unless_null $P5073, vivi_18094474
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5073, $P5074
  vivi_18094474:
    unless_null $P5073, vivi_18104475
    die "Contextual $*W not found"
    box $P5075, "Contextual $*W not found"
    set $P5073, $P5075
  vivi_18104475:
    set $P5068, $P5073
  fallback4471:
    $P5076 = $P5068."sc"()
.annotate 'line', 1696
    find_dynamic_lex $P5077, "$*W"
    unless_null $P5077, fallback4476
    nqp_get_sc_object $P5079, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5078, $P5079
    set fb_tmp_226, $P5078
    repr_defined $I5008, fb_tmp_226
    unless $I5008 goto if1811_else4477 
    set $P5080, fb_tmp_226["$W"]
    set $P5082, $P5080
    goto if1811_end4478
  if1811_else4477:
    null $P5081
    set $P5082, $P5081
  if1811_end4478:
    unless_null $P5082, vivi_18124479
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_18124479:
    unless_null $P5082, vivi_18134480
    die "Contextual $*W not found"
    box $P5084, "Contextual $*W not found"
    set $P5082, $P5084
  vivi_18134480:
    set $P5077, $P5082
  fallback4476:
    $P5085 = $P5077."code_ref_blocks"()
.annotate 'line', 1697
    find_dynamic_lex $P5086, "$*W"
    unless_null $P5086, fallback4481
    nqp_get_sc_object $P5088, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5087, $P5088
    set fb_tmp_227, $P5087
    repr_defined $I5009, fb_tmp_227
    unless $I5009 goto if1814_else4482 
    set $P5089, fb_tmp_227["$W"]
    set $P5091, $P5089
    goto if1814_end4483
  if1814_else4482:
    null $P5090
    set $P5091, $P5090
  if1814_end4483:
    unless_null $P5091, vivi_18154484
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5091, $P5092
  vivi_18154484:
    unless_null $P5091, vivi_18164485
    die "Contextual $*W not found"
    box $P5093, "Contextual $*W not found"
    set $P5091, $P5093
  vivi_18164485:
    set $P5086, $P5091
  fallback4481:
    $P5094 = $P5086."is_precompilation_mode"()
.annotate 'line', 1698
    find_dynamic_lex $P5095, "$*W"
    unless_null $P5095, fallback4486
    nqp_get_sc_object $P5097, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5096, $P5097
    set fb_tmp_228, $P5096
    repr_defined $I5010, fb_tmp_228
    unless $I5010 goto if1817_else4487 
    set $P5098, fb_tmp_228["$W"]
    set $P5100, $P5098
    goto if1817_end4488
  if1817_else4487:
    null $P5099
    set $P5100, $P5099
  if1817_end4488:
    unless_null $P5100, vivi_18184489
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5100, $P5101
  vivi_18184489:
    unless_null $P5100, vivi_18194490
    die "Contextual $*W not found"
    box $P5102, "Contextual $*W not found"
    set $P5100, $P5102
  vivi_18194490:
    set $P5095, $P5100
  fallback4486:
    $P5103 = $P5095."load_dependency_tasks"()
.annotate 'line', 1699
    find_dynamic_lex $P5104, "$*W"
    unless_null $P5104, fallback4491
    nqp_get_sc_object $P5106, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5105, $P5106
    set fb_tmp_229, $P5105
    repr_defined $I5011, fb_tmp_229
    unless $I5011 goto if1820_else4492 
    set $P5107, fb_tmp_229["$W"]
    set $P5109, $P5107
    goto if1820_end4493
  if1820_else4492:
    null $P5108
    set $P5109, $P5108
  if1820_end4493:
    unless_null $P5109, vivi_18214494
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5109, $P5110
  vivi_18214494:
    unless_null $P5109, vivi_18224495
    die "Contextual $*W not found"
    box $P5111, "Contextual $*W not found"
    set $P5109, $P5111
  vivi_18224495:
    set $P5104, $P5109
  fallback4491:
    $P5112 = $P5104."fixup_tasks"()
.annotate 'line', 1704
    nqp_get_sc_object $P5113, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1706
    nqp_get_sc_object $P5114, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    $P5115 = $P5114."new"($P102 :named("value"))
    $P5116 = $P5113."new"($P5115, "call" :named("op"))
.annotate 'line', 1711
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 1712
    nqp_get_sc_object $P5118, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 1714
    nqp_get_sc_object $P5119, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 60
    $P5120 = $P5119."new"($P102 :named("value"))
.annotate 'line', 1715
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5122 = $P5121."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5123 = $P5118."new"($P5120, $P5122, "call" :named("op"))
    $P5124 = $P5117."new"($P5123)
    $P5125 = $P5067."new"($P102, "nqp" :named("hll"), $P5076 :named("sc"), $P5085 :named("code_ref_blocks"), $P5094 :named("compilation_mode"), $P5103 :named("pre_deserialize"), $P5112 :named("post_deserialize"), $P5116 :named("load"), $P5124 :named("main"))
    set $P103, $P5125
.annotate 'line', 1724
    find_dynamic_lex $P5126, "$*W"
    unless_null $P5126, fallback4496
    nqp_get_sc_object $P5128, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5127, $P5128
    set fb_tmp_230, $P5127
    repr_defined $I5012, fb_tmp_230
    unless $I5012 goto if1823_else4497 
    set $P5129, fb_tmp_230["$W"]
    set $P5131, $P5129
    goto if1823_end4498
  if1823_else4497:
    null $P5130
    set $P5131, $P5130
  if1823_end4498:
    unless_null $P5131, vivi_18244499
    nqp_get_sc_object $P5132, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5131, $P5132
  vivi_18244499:
    unless_null $P5131, vivi_18254500
    die "Contextual $*W not found"
    box $P5133, "Contextual $*W not found"
    set $P5131, $P5133
  vivi_18254500:
    set $P5126, $P5131
  fallback4496:
    $P5126."cleanup"()
.annotate 'line', 1726
    $P5134 = _lex_param_1."!make"($P103)
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_243_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1729
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_458_1382484127.52628' 
    capture_lex $P5022 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1730
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5003 = $P5002."new"(_lex_param_1 :named("node"))
    set $P101, $P5003
    unless_null _lex_param_1, fallback4505
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback4505:
    set fb_tmp_231, _lex_param_1
    repr_defined $I5001, fb_tmp_231
    unless $I5001 goto if1827_else4503 
    set $P5005, fb_tmp_231["statement"]
    set $P5007, $P5005
    goto if1827_end4504
  if1827_else4503:
    null $P5006
    set $P5007, $P5006
  if1827_end4504:
    unless_null $P5007, vivi_18284506
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_18284506:
    unless $P5007 goto if1826_else4501 
.annotate 'line', 1731
    unless_null _lex_param_1, fallback4509
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback4509:
    set fb_tmp_232, _lex_param_1
    repr_defined $I5002, fb_tmp_232
    unless $I5002 goto if1829_else4507 
    set $P5013, fb_tmp_232["statement"]
    set $P5015, $P5013
    goto if1829_end4508
  if1829_else4507:
    null $P5014
    set $P5015, $P5014
  if1829_end4508:
    unless_null $P5015, vivi_18304510
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_18304510:
    set $P5009, $P5015
    iter $P5011, $P5015
  for_next4529:
    unless $P5011, for_done4531
    shift $P5018, $P5011
  for_redo4530:
    .const 'Sub' $P5017 = 'cuid_458_1382484127.52628' 
    capture_lex $P5017
    $P5009 = $P5017($P5018)
    goto for_next4529
  for_done4531:
    goto if1826_end4502
  if1826_else4501:
.annotate 'line', 1740
.annotate 'line', 1741
    $P5019 = "&default_for"("$")
    $P5020 = $P101."push"($P5019)
  if1826_end4502:
.annotate 'line', 1743
    $P5021 = _lex_param_1."!make"($P101)
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1382484127.52628") :anon :lex :outer("cuid_243_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1732
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1733
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_233, $P101
    repr_defined $I5002, fb_tmp_233
    unless $I5002 goto if1832_else4513 
    set $P5003, fb_tmp_233["sink"]
    set $P5005, $P5003
    goto if1832_end4514
  if1832_else4513:
    null $P5004
    set $P5005, $P5004
  if1832_end4514:
    unless_null $P5005, vivi_18334515
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_18334515:
    defined $I5001, $P5005
    unless $I5001 goto if1831_end4512 
    set fb_tmp_234, $P101
    repr_defined $I5003, fb_tmp_234
    unless $I5003 goto if1834_else4516 
    set $P5007, fb_tmp_234["sink"]
    set $P5009, $P5007
    goto if1834_end4517
  if1834_else4516:
    null $P5008
    set $P5009, $P5008
  if1834_end4517:
    unless_null $P5009, vivi_18354518
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_18354518:
    set $P101, $P5009
  if1831_end4512:
    set fb_tmp_235, $P101
    repr_defined $I5004, fb_tmp_235
    unless $I5004 goto if1837_else4521 
    set $P5011, fb_tmp_235["bareblock"]
    set $P5013, $P5011
    goto if1837_end4522
  if1837_else4521:
    null $P5012
    set $P5013, $P5012
  if1837_end4522:
    unless_null $P5013, vivi_18384523
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_18384523:
    unless $P5013 goto if1836_end4520 
.annotate 'line', 1735
    set fb_tmp_236, $P101
    repr_defined $I5005, fb_tmp_236
    unless $I5005 goto if1839_else4524 
    set $P5015, fb_tmp_236[0]
    set $P5017, $P5015
    goto if1839_end4525
  if1839_else4524:
    null $P5016
    set $P5017, $P5016
  if1839_end4525:
    unless_null $P5017, vivi_18404526
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_18404526:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if1836_end4520:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
    type_check $I5006, $P101, $P5020
    unless $I5006 goto if1841_end4528 
.annotate 'line', 1736
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5022 = $P5021."new"($P101)
    set $P101, $P5022
  if1841_end4528:
.annotate 'line', 1737
    find_lex $P5023, "$past"
    $P5024 = $P5023."push"($P101)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_244_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1746
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_459_1382484127.52628' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    if haz_param_5, default4587
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_2, $P5023
  default4587:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback4536
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4536:
    set fb_tmp_237, _lex_param_1
    repr_defined $I5001, fb_tmp_237
    unless $I5001 goto if1843_else4534 
    set $P5003, fb_tmp_237["EXPR"]
    set $P5005, $P5003
    goto if1843_end4535
  if1843_else4534:
    null $P5004
    set $P5005, $P5004
  if1843_end4535:
    unless_null $P5005, vivi_18444537
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_18444537:
    unless $P5005 goto if1842_else4532 
    .const 'Sub' $P5007 = 'cuid_459_1382484127.52628' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if1842_end4533
  if1842_else4532:
    unless_null _lex_param_1, fallback4581
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback4581:
    set fb_tmp_248, _lex_param_1
    repr_defined $I5002, fb_tmp_248
    unless $I5002 goto if1869_else4579 
    set $P5010, fb_tmp_248["statement_control"]
    set $P5012, $P5010
    goto if1869_end4580
  if1869_else4579:
    null $P5011
    set $P5012, $P5011
  if1869_end4580:
    unless_null $P5012, vivi_18704582
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_18704582:
    unless $P5012 goto if1868_else4577 
.annotate 'line', 1769
    unless_null _lex_param_1, fallback4585
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5014
  fallback4585:
    set fb_tmp_249, _lex_param_1
    repr_defined $I5003, fb_tmp_249
    unless $I5003 goto if1871_else4583 
    set $P5015, fb_tmp_249["statement_control"]
    set $P5017, $P5015
    goto if1871_end4584
  if1871_else4583:
    null $P5016
    set $P5017, $P5016
  if1871_end4584:
    unless_null $P5017, vivi_18724586
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_18724586:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if1868_end4578
  if1868_else4577:
.annotate 'line', 1770
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if1868_end4578:
  if1842_end4533:
.annotate 'line', 1771
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1382484127.52628") :anon :lex :outer("cuid_244_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1748
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4540
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  fallback4540:
    set fb_tmp_238, $P5003
    repr_defined $I5001, fb_tmp_238
    unless $I5001 goto if1845_else4538 
    set $P5005, fb_tmp_238["statement_mod_cond"]
    set $P5007, $P5005
    goto if1845_end4539
  if1845_else4538:
    null $P5006
    set $P5007, $P5006
  if1845_end4539:
    unless_null $P5007, vivi_18464541
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_18464541:
    set $P101, $P5007
    find_lex $P5009, "$/"
    unless_null $P5009, fallback4544
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  fallback4544:
    set fb_tmp_239, $P5009
    repr_defined $I5002, fb_tmp_239
    unless $I5002 goto if1847_else4542 
    set $P5011, fb_tmp_239["statement_mod_loop"]
    set $P5013, $P5011
    goto if1847_end4543
  if1847_else4542:
    null $P5012
    set $P5013, $P5012
  if1847_end4543:
    unless_null $P5013, vivi_18484545
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_18484545:
    set $P102, $P5013
.annotate 'line', 1751
    find_lex $P5015, "$/"
    unless_null $P5015, fallback4548
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  fallback4548:
    set fb_tmp_240, $P5015
    repr_defined $I5003, fb_tmp_240
    unless $I5003 goto if1849_else4546 
    set $P5017, fb_tmp_240["EXPR"]
    set $P5019, $P5017
    goto if1849_end4547
  if1849_else4546:
    null $P5018
    set $P5019, $P5018
  if1849_end4547:
    unless_null $P5019, vivi_18504549
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_18504549:
    $P5021 = $P5019."ast"()
    store_lex "$past", $P5021
    unless $P101 goto if1851_end4551 
.annotate 'line', 1752
.annotate 'line', 1753
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    set fb_tmp_241, $P101
    repr_defined $I5004, fb_tmp_241
    unless $I5004 goto if1852_else4552 
    set $P5023, fb_tmp_241["cond"]
    set $P5025, $P5023
    goto if1852_end4553
  if1852_else4552:
    null $P5024
    set $P5025, $P5024
  if1852_end4553:
    unless_null $P5025, vivi_18534554
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_18534554:
    $P5027 = $P5025."ast"()
    find_lex $P5028, "$past"
    set fb_tmp_242, $P101
    repr_defined $I5005, fb_tmp_242
    unless $I5005 goto if1854_else4555 
    set $P5029, fb_tmp_242["sym"]
    set $P5031, $P5029
    goto if1854_end4556
  if1854_else4555:
    null $P5030
    set $P5031, $P5030
  if1854_end4556:
    unless_null $P5031, vivi_18554557
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_18554557:
    set $S5001, $P5031
    find_lex $P5033, "$/"
    $P5034 = $P5022."new"($P5027, $P5028, $S5001 :named("op"), $P5033 :named("node"))
    store_lex "$past", $P5034
  if1851_end4551:
    set $P5073, $P102
    unless $P102 goto if1856_end4559 
.annotate 'line', 1755
    set fb_tmp_243, $P102
    repr_defined $I5007, fb_tmp_243
    unless $I5007 goto if1858_else4562 
    set $P5035, fb_tmp_243["sym"]
    set $P5037, $P5035
    goto if1858_end4563
  if1858_else4562:
    null $P5036
    set $P5037, $P5036
  if1858_end4563:
    unless_null $P5037, vivi_18594564
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_18594564:
    set $S5002, $P5037
    iseq $I5006, $S5002, "for"
    unless $I5006 goto if1857_else4560 
.annotate 'line', 1756
.annotate 'line', 1757
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
.annotate 'line', 1758
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5041 = $P5040."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5042, "$past"
    $P5043 = $P5039."new"($P5041, $P5042, "immediate" :named("blocktype"))
    store_lex "$past", $P5043
.annotate 'line', 1760
    find_lex $P5044, "$past"
    $P5044."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1761
    find_lex $P5045, "$past"
    $P5045."arity"(1)
.annotate 'line', 1762
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    set fb_tmp_244, $P102
    repr_defined $I5008, fb_tmp_244
    unless $I5008 goto if1860_else4565 
    set $P5047, fb_tmp_244["cond"]
    set $P5049, $P5047
    goto if1860_end4566
  if1860_else4565:
    null $P5048
    set $P5049, $P5048
  if1860_end4566:
    unless_null $P5049, vivi_18614567
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_18614567:
    $P5051 = $P5049."ast"()
    find_lex $P5052, "$past"
    set fb_tmp_245, $P102
    repr_defined $I5009, fb_tmp_245
    unless $I5009 goto if1862_else4568 
    set $P5053, fb_tmp_245["sym"]
    set $P5055, $P5053
    goto if1862_end4569
  if1862_else4568:
    null $P5054
    set $P5055, $P5054
  if1862_end4569:
    unless_null $P5055, vivi_18634570
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5055, $P5056
  vivi_18634570:
    set $S5003, $P5055
    find_lex $P5057, "$/"
    $P5058 = $P5046."new"($P5051, $P5052, $S5003 :named("op"), $P5057 :named("node"))
    store_lex "$past", $P5058
    set $P5072, $P5058
    goto if1857_end4561
  if1857_else4560:
.annotate 'line', 1764
.annotate 'line', 1765
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    set fb_tmp_246, $P102
    repr_defined $I5010, fb_tmp_246
    unless $I5010 goto if1864_else4571 
    set $P5060, fb_tmp_246["cond"]
    set $P5062, $P5060
    goto if1864_end4572
  if1864_else4571:
    null $P5061
    set $P5062, $P5061
  if1864_end4572:
    unless_null $P5062, vivi_18654573
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5062, $P5063
  vivi_18654573:
    $P5064 = $P5062."ast"()
    find_lex $P5065, "$past"
    set fb_tmp_247, $P102
    repr_defined $I5011, fb_tmp_247
    unless $I5011 goto if1866_else4574 
    set $P5066, fb_tmp_247["sym"]
    set $P5068, $P5066
    goto if1866_end4575
  if1866_else4574:
    null $P5067
    set $P5068, $P5067
  if1866_end4575:
    unless_null $P5068, vivi_18674576
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5068, $P5069
  vivi_18674576:
    set $S5004, $P5068
    find_lex $P5070, "$/"
    $P5071 = $P5059."new"($P5064, $P5065, $S5004 :named("op"), $P5070 :named("node"))
    store_lex "$past", $P5071
    set $P5072, $P5071
  if1857_end4561:
    set $P5073, $P5072
  if1856_end4559:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_245_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
.annotate 'line', 1775
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    unless_null _lex_param_1, fallback4590
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4590:
    set fb_tmp_250, _lex_param_1
    repr_defined $I5001, fb_tmp_250
    unless $I5001 goto if1873_else4588 
    set $P5003, fb_tmp_250["EXPR"]
    set $P5005, $P5003
    goto if1873_end4589
  if1873_else4588:
    null $P5004
    set $P5005, $P5004
  if1873_end4589:
    unless_null $P5005, vivi_18744591
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_18744591:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback4594
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback4594:
    set fb_tmp_251, _lex_param_1
    repr_defined $I5002, fb_tmp_251
    unless $I5002 goto if1875_else4592 
    set $P5009, fb_tmp_251["pblock"]
    set $P5011, $P5009
    goto if1875_end4593
  if1875_else4592:
    null $P5010
    set $P5011, $P5010
  if1875_end4593:
    unless_null $P5011, vivi_18764595
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_18764595:
    $P5013 = $P5011."ast"()
    $P5014 = $P5001."new"($P5007, $P5013, "if" :named("op"), _lex_param_1 :named("node"))
    $P5015 = _lex_param_1."!make"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_246_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1778
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_252 
.annotate 'line', 1779
    unless_null _lex_param_1, fallback4598
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4598:
    set fb_tmp_252, _lex_param_1
    repr_defined $I5001, fb_tmp_252
    unless $I5001 goto if1877_else4596 
    set $P5002, fb_tmp_252["blockoid"]
    set $P5004, $P5002
    goto if1877_end4597
  if1877_else4596:
    null $P5003
    set $P5004, $P5003
  if1877_end4597:
    unless_null $P5004, vivi_18784599
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_18784599:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_247_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1782
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_253 
.annotate 'line', 1783
    unless_null _lex_param_1, fallback4602
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4602:
    set fb_tmp_253, _lex_param_1
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1879_else4600 
    set $P5002, fb_tmp_253["blockoid"]
    set $P5004, $P5002
    goto if1879_end4601
  if1879_else4600:
    null $P5003
    set $P5004, $P5003
  if1879_end4601:
    unless_null $P5004, vivi_18804603
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_18804603:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_248_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_461_1382484127.52628' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1787
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4604
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_254, $P5003
    repr_defined $I5001, fb_tmp_254
    unless $I5001 goto if1881_else4605 
    set $P5005, fb_tmp_254["$W"]
    set $P5007, $P5005
    goto if1881_end4606
  if1881_else4605:
    null $P5006
    set $P5007, $P5006
  if1881_end4606:
    unless_null $P5007, vivi_18824607
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_18824607:
    unless_null $P5007, vivi_18834608
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_18834608:
    set $P5002, $P5007
  fallback4604:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback4613
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5011
  fallback4613:
    set fb_tmp_255, _lex_param_1
    repr_defined $I5002, fb_tmp_255
    unless $I5002 goto if1885_else4611 
    set $P5012, fb_tmp_255["statementlist"]
    set $P5014, $P5012
    goto if1885_end4612
  if1885_else4611:
    null $P5013
    set $P5014, $P5013
  if1885_end4612:
    unless_null $P5014, vivi_18864614
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_18864614:
    unless $P5014 goto if1884_else4609 
    .const 'Sub' $P5016 = 'cuid_461_1382484127.52628' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if1884_end4610
  if1884_else4609:
.annotate 'line', 1802
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback4648
    nqp_get_sc_object $P5020, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5019, $P5020
    set fb_tmp_261, $P5019
    repr_defined $I5003, fb_tmp_261
    unless $I5003 goto if1904_else4649 
    set $P5021, fb_tmp_261["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if1904_end4650
  if1904_else4649:
    null $P5022
    set $P5023, $P5022
  if1904_end4650:
    unless_null $P5023, vivi_19054651
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_19054651:
    unless_null $P5023, vivi_19064652
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_19064652:
    set $P5018, $P5023
  fallback4648:
    unless $P5018 goto if1903_end4647 
.annotate 'line', 1803
.annotate 'line', 1804
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if1903_end4647:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1807
    unless_null _lex_param_1, fallback4655
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5029
  fallback4655:
    set fb_tmp_262, _lex_param_1
    repr_defined $I5004, fb_tmp_262
    unless $I5004 goto if1907_else4653 
    set $P5030, fb_tmp_262["you_are_here"]
    set $P5032, $P5030
    goto if1907_end4654
  if1907_else4653:
    null $P5031
    set $P5032, $P5031
  if1907_end4654:
    unless_null $P5032, vivi_19084656
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_19084656:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if1884_end4610:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1382484127.52628") :anon :lex :outer("cuid_248_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1788
    .const 'Sub' $P5055 = 'cuid_460_1382484127.52628' 
    capture_lex $P5055 
    .lex "$past", $P101 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_257 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_258 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_259 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_260 
    .local pmc pkg_viv_tmp_35 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1789
    find_lex $P5002, "$/"
    unless_null $P5002, fallback4617
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback4617:
    set fb_tmp_256, $P5002
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1887_else4615 
    set $P5004, fb_tmp_256["statementlist"]
    set $P5006, $P5004
    goto if1887_end4616
  if1887_else4615:
    null $P5005
    set $P5006, $P5005
  if1887_end4616:
    unless_null $P5006, vivi_18884618
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_18884618:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback4621
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_33, $P5010
    set fb_tmp_257, pkg_viv_tmp_33
    repr_defined $I5002, fb_tmp_257
    unless $I5002 goto if1890_else4622 
    set $P5012, fb_tmp_257["%HANDLERS"]
    set $P5014, $P5012
    goto if1890_end4623
  if1890_else4622:
    null $P5013
    set $P5014, $P5013
  if1890_end4623:
    unless_null $P5014, vivi_18914624
    new $P5015, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_18914624:
    unless_null $P5014, vivi_18924625
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_18924625:
    set $P5009, $P5014
  fallback4621:
    unless $P5009 goto if1889_end4620 
.annotate 'line', 1790
.annotate 'line', 1791
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5018 = $P5017."new"($P101, "handle" :named("op"))
    set $P101, $P5018
    find_dynamic_lex $P5022, "%*HANDLERS"
    unless_null $P5022, fallback4626
    nqp_get_sc_object $P5024, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5023, $P5024
    set pkg_viv_tmp_34, $P5023
    set fb_tmp_258, pkg_viv_tmp_34
    repr_defined $I5003, fb_tmp_258
    unless $I5003 goto if1893_else4627 
    set $P5025, fb_tmp_258["%HANDLERS"]
    set $P5027, $P5025
    goto if1893_end4628
  if1893_else4627:
    null $P5026
    set $P5027, $P5026
  if1893_end4628:
    unless_null $P5027, vivi_18944629
    new $P5028, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5028
    set $P5027, $P5028
  vivi_18944629:
    unless_null $P5027, vivi_18954630
    die "Contextual %*HANDLERS not found"
    box $P5029, "Contextual %*HANDLERS not found"
    set $P5027, $P5029
  vivi_18954630:
    set $P5022, $P5027
  fallback4626:
    set $P5019, $P5022
    iter $P5021, $P5022
  for_next4631:
    unless $P5021, for_done4633
    shift $P5031, $P5021
  for_redo4632:
    .const 'Sub' $P5030 = 'cuid_460_1382484127.52628' 
    capture_lex $P5030
    $P5019 = $P5030($P5031)
    goto for_next4631
  for_done4633:
  if1889_end4620:
.annotate 'line', 1797
    find_lex $P5032, "$BLOCK"
    $P5032."push"($P101)
.annotate 'line', 1798
    find_lex $P5033, "$BLOCK"
    find_lex $P5034, "$/"
    $P5033."node"($P5034)
    find_dynamic_lex $P5035, "%*HANDLERS"
    unless_null $P5035, fallback4636
    nqp_get_sc_object $P5037, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_36, $P5036
    set fb_tmp_259, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_259
    unless $I5004 goto if1897_else4637 
    set $P5038, fb_tmp_259["%HANDLERS"]
    set $P5040, $P5038
    goto if1897_end4638
  if1897_else4637:
    null $P5039
    set $P5040, $P5039
  if1897_end4638:
    unless_null $P5040, vivi_18984639
    new $P5041, 'Hash'
    set pkg_viv_tmp_36["%HANDLERS"], $P5041
    set $P5040, $P5041
  vivi_18984639:
    unless_null $P5040, vivi_18994640
    die "Contextual %*HANDLERS not found"
    box $P5042, "Contextual %*HANDLERS not found"
    set $P5040, $P5042
  vivi_18994640:
    set $P5035, $P5040
  fallback4636:
    unless $P5035 goto if1896_end4635 
    find_lex $P5043, "$BLOCK"
    find_dynamic_lex $P5044, "%*HANDLERS"
    unless_null $P5044, fallback4641
    nqp_get_sc_object $P5046, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_35, $P5045
    set fb_tmp_260, pkg_viv_tmp_35
    repr_defined $I5005, fb_tmp_260
    unless $I5005 goto if1900_else4642 
    set $P5047, fb_tmp_260["%HANDLERS"]
    set $P5049, $P5047
    goto if1900_end4643
  if1900_else4642:
    null $P5048
    set $P5049, $P5048
  if1900_end4643:
    unless_null $P5049, vivi_19014644
    new $P5050, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5050
    set $P5049, $P5050
  vivi_19014644:
    unless_null $P5049, vivi_19024645
    die "Contextual %*HANDLERS not found"
    box $P5051, "Contextual %*HANDLERS not found"
    set $P5049, $P5051
  vivi_19024645:
    set $P5044, $P5049
  fallback4641:
    set $P5043["handlers"], $P5044
  if1896_end4635:
.annotate 'line', 1800
    find_dynamic_lex $P5052, "$/"
    find_lex $P5053, "$BLOCK"
    $P5054 = $P5052."!make"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1382484127.52628") :anon :lex :outer("cuid_461_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1792
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1793
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1794
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_249_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1811
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_263 
.annotate 'line', 1812
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4657
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_263, $P5002
    repr_defined $I5001, fb_tmp_263
    unless $I5001 goto if1909_else4658 
    set $P5004, fb_tmp_263["$W"]
    set $P5006, $P5004
    goto if1909_end4659
  if1909_else4658:
    null $P5005
    set $P5006, $P5005
  if1909_end4659:
    unless_null $P5006, vivi_19104660
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_19104660:
    unless_null $P5006, vivi_19114661
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19114661:
    set $P5001, $P5006
  fallback4657:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_250_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1815
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_463_1382484127.52628' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_284 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback4668
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_37, $P5002
    set fb_tmp_266, pkg_viv_tmp_37
    repr_defined $I5004, fb_tmp_266
    unless $I5004 goto if1915_else4669 
    set $P5004, fb_tmp_266["%COMPILING"]
    set $P5006, $P5004
    goto if1915_end4670
  if1915_else4669:
    null $P5005
    set $P5006, $P5005
  if1915_end4670:
    unless_null $P5006, vivi_19164671
    new $P5007, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_19164671:
    unless_null $P5006, vivi_19174672
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_19174672:
    set $P5001, $P5006
  fallback4668:
    set fb_tmp_265, $P5001
    repr_defined $I5003, fb_tmp_265
    unless $I5003 goto if1914_else4666 
    set $P5009, fb_tmp_265["%?OPTIONS"]
    set $P5011, $P5009
    goto if1914_end4667
  if1914_else4666:
    null $P5010
    set $P5011, $P5010
  if1914_end4667:
    unless_null $P5011, vivi_19184673
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_19184673:
    set fb_tmp_264, $P5011
    repr_defined $I5002, fb_tmp_264
    unless $I5002 goto if1913_else4664 
    set $P5013, fb_tmp_264["outer_ctx"]
    set $P5015, $P5013
    goto if1913_end4665
  if1913_else4664:
    null $P5014
    set $P5015, $P5014
  if1913_end4665:
    unless_null $P5015, vivi_19194674
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_19194674:
    defined $I5001, $P5015
    if $I5001 goto unless1912_end4663 
    .const 'Sub' $P5017 = 'cuid_463_1382484127.52628' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless1912_end4663:
.annotate 'line', 1836
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback4751
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set fb_tmp_284, $P5021
    repr_defined $I5005, fb_tmp_284
    unless $I5005 goto if1966_else4752 
    set $P5023, fb_tmp_284["$W"]
    set $P5025, $P5023
    goto if1966_end4753
  if1966_else4752:
    null $P5024
    set $P5025, $P5024
  if1966_end4753:
    unless_null $P5025, vivi_19674754
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_19674754:
    unless_null $P5025, vivi_19684755
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_19684755:
    set $P5020, $P5025
  fallback4751:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1382484127.52628") :anon :lex :outer("cuid_250_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1816
    .const 'Sub' $P5100 = 'cuid_462_1382484127.52628' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_271 
    .local pmc fb_tmp_272 
    .local pmc fb_tmp_273 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1819
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4675
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_267, $P5003
    repr_defined $I5001, fb_tmp_267
    unless $I5001 goto if1920_else4676 
    set $P5005, fb_tmp_267["$W"]
    set $P5007, $P5005
    goto if1920_end4677
  if1920_else4676:
    null $P5006
    set $P5007, $P5006
  if1920_end4677:
    unless_null $P5007, vivi_19214678
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_19214678:
    unless_null $P5007, vivi_19224679
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19224679:
    set $P5002, $P5007
  fallback4675:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback4685
    nqp_get_sc_object $P5013, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_38, $P5012
    set fb_tmp_270, pkg_viv_tmp_38
    repr_defined $I5005, fb_tmp_270
    unless $I5005 goto if1925_else4686 
    set $P5014, fb_tmp_270["%COMPILING"]
    set $P5016, $P5014
    goto if1925_end4687
  if1925_else4686:
    null $P5015
    set $P5016, $P5015
  if1925_end4687:
    unless_null $P5016, vivi_19264688
    new $P5017, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_19264688:
    unless_null $P5016, vivi_19274689
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_19274689:
    set $P5011, $P5016
  fallback4685:
    set fb_tmp_269, $P5011
    repr_defined $I5004, fb_tmp_269
    unless $I5004 goto if1924_else4683 
    set $P5019, fb_tmp_269["%?OPTIONS"]
    set $P5021, $P5019
    goto if1924_end4684
  if1924_else4683:
    null $P5020
    set $P5021, $P5020
  if1924_end4684:
    unless_null $P5021, vivi_19284690
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_19284690:
    set fb_tmp_268, $P5021
    repr_defined $I5003, fb_tmp_268
    unless $I5003 goto if1923_else4681 
    set $P5023, fb_tmp_268["setting"]
    set $P5025, $P5023
    goto if1923_end4682
  if1923_else4681:
    null $P5024
    set $P5025, $P5024
  if1923_end4682:
    unless_null $P5025, vivi_19294691
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_19294691:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor4680
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor4680:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback4698
    nqp_get_sc_object $P5031, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_39, $P5030
    set fb_tmp_273, pkg_viv_tmp_39
    repr_defined $I5009, fb_tmp_273
    unless $I5009 goto if1933_else4699 
    set $P5032, fb_tmp_273["%COMPILING"]
    set $P5034, $P5032
    goto if1933_end4700
  if1933_else4699:
    null $P5033
    set $P5034, $P5033
  if1933_end4700:
    unless_null $P5034, vivi_19344701
    new $P5035, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_19344701:
    unless_null $P5034, vivi_19354702
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_19354702:
    set $P5029, $P5034
  fallback4698:
    set fb_tmp_272, $P5029
    repr_defined $I5008, fb_tmp_272
    unless $I5008 goto if1932_else4696 
    set $P5037, fb_tmp_272["%?OPTIONS"]
    set $P5039, $P5037
    goto if1932_end4697
  if1932_else4696:
    null $P5038
    set $P5039, $P5038
  if1932_end4697:
    unless_null $P5039, vivi_19364703
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5039, $P5040
  vivi_19364703:
    set fb_tmp_271, $P5039
    repr_defined $I5007, fb_tmp_271
    unless $I5007 goto if1931_else4694 
    set $P5041, fb_tmp_271["setting"]
    set $P5043, $P5041
    goto if1931_end4695
  if1931_else4694:
    null $P5042
    set $P5043, $P5042
  if1931_end4695:
    unless_null $P5043, vivi_19374704
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5043, $P5044
  vivi_19374704:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless1930_end4693 
.annotate 'line', 1824
.annotate 'line', 1825
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback4711
    nqp_get_sc_object $P5047, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_40, $P5046
    set fb_tmp_276, pkg_viv_tmp_40
    repr_defined $I5012, fb_tmp_276
    unless $I5012 goto if1941_else4712 
    set $P5048, fb_tmp_276["%COMPILING"]
    set $P5050, $P5048
    goto if1941_end4713
  if1941_else4712:
    null $P5049
    set $P5050, $P5049
  if1941_end4713:
    unless_null $P5050, vivi_19424714
    new $P5051, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_19424714:
    unless_null $P5050, vivi_19434715
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_19434715:
    set $P5045, $P5050
  fallback4711:
    set fb_tmp_275, $P5045
    repr_defined $I5011, fb_tmp_275
    unless $I5011 goto if1940_else4709 
    set $P5053, fb_tmp_275["%?OPTIONS"]
    set $P5055, $P5053
    goto if1940_end4710
  if1940_else4709:
    null $P5054
    set $P5055, $P5054
  if1940_end4710:
    unless_null $P5055, vivi_19444716
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5055, $P5056
  vivi_19444716:
    set fb_tmp_274, $P5055
    repr_defined $I5010, fb_tmp_274
    unless $I5010 goto if1939_else4707 
    set $P5057, fb_tmp_274["no-regex-lib"]
    set $P5059, $P5057
    goto if1939_end4708
  if1939_else4707:
    null $P5058
    set $P5059, $P5058
  if1939_end4708:
    unless_null $P5059, vivi_19454717
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5059, $P5060
  vivi_19454717:
    set $P5097, $P5059
    if $P5059 goto unless1938_end4706 
.annotate 'line', 1826
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback4724
    nqp_get_sc_object $P5063, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_41, $P5062
    set fb_tmp_279, pkg_viv_tmp_41
    repr_defined $I5015, fb_tmp_279
    unless $I5015 goto if1949_else4725 
    set $P5064, fb_tmp_279["%COMPILING"]
    set $P5066, $P5064
    goto if1949_end4726
  if1949_else4725:
    null $P5065
    set $P5066, $P5065
  if1949_end4726:
    unless_null $P5066, vivi_19504727
    new $P5067, 'Hash'
    set pkg_viv_tmp_41["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_19504727:
    unless_null $P5066, vivi_19514728
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_19514728:
    set $P5061, $P5066
  fallback4724:
    set fb_tmp_278, $P5061
    repr_defined $I5014, fb_tmp_278
    unless $I5014 goto if1948_else4722 
    set $P5069, fb_tmp_278["%?OPTIONS"]
    set $P5071, $P5069
    goto if1948_end4723
  if1948_else4722:
    null $P5070
    set $P5071, $P5070
  if1948_end4723:
    unless_null $P5071, vivi_19524729
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5071, $P5072
  vivi_19524729:
    set fb_tmp_277, $P5071
    repr_defined $I5013, fb_tmp_277
    unless $I5013 goto if1947_else4720 
    set $P5073, fb_tmp_277["custom-regex-lib"]
    set $P5075, $P5073
    goto if1947_end4721
  if1947_else4720:
    null $P5074
    set $P5075, $P5074
  if1947_end4721:
    unless_null $P5075, vivi_19534730
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5075, $P5076
  vivi_19534730:
    unless $P5075 goto if1946_else4718 
    .const 'Sub' $P5077 = 'cuid_462_1382484127.52628' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if1946_end4719
  if1946_else4718:
.annotate 'line', 1830
.annotate 'line', 1831
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback4741
    nqp_get_sc_object $P5081, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5080, $P5081
    set fb_tmp_282, $P5080
    repr_defined $I5016, fb_tmp_282
    unless $I5016 goto if1960_else4742 
    set $P5082, fb_tmp_282["$W"]
    set $P5084, $P5082
    goto if1960_end4743
  if1960_else4742:
    null $P5083
    set $P5084, $P5083
  if1960_end4743:
    unless_null $P5084, vivi_19614744
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5084, $P5085
  vivi_19614744:
    unless_null $P5084, vivi_19624745
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_19624745:
    set $P5079, $P5084
  fallback4741:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback4746
    nqp_get_sc_object $P5089, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5088, $P5089
    set fb_tmp_283, $P5088
    repr_defined $I5017, fb_tmp_283
    unless $I5017 goto if1963_else4747 
    set $P5090, fb_tmp_283["$GLOBALish"]
    set $P5092, $P5090
    goto if1963_end4748
  if1963_else4747:
    null $P5091
    set $P5092, $P5091
  if1963_end4748:
    unless_null $P5092, vivi_19644749
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5092, $P5093
  vivi_19644749:
    unless_null $P5092, vivi_19654750
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_19654750:
    set $P5087, $P5092
  fallback4746:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if1946_end4719:
    set $P5097, $P5096
  unless1938_end4706:
    set $P5098, $P5097
  unless1930_end4693:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1382484127.52628") :anon :lex :outer("cuid_463_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1827
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
.annotate 'line', 1828
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4731
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_280, $P5002
    repr_defined $I5001, fb_tmp_280
    unless $I5001 goto if1954_else4732 
    set $P5004, fb_tmp_280["$W"]
    set $P5006, $P5004
    goto if1954_end4733
  if1954_else4732:
    null $P5005
    set $P5006, $P5005
  if1954_end4733:
    unless_null $P5006, vivi_19554734
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_19554734:
    unless_null $P5006, vivi_19564735
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_19564735:
    set $P5001, $P5006
  fallback4731:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback4736
    nqp_get_sc_object $P5011, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5010, $P5011
    set fb_tmp_281, $P5010
    repr_defined $I5002, fb_tmp_281
    unless $I5002 goto if1957_else4737 
    set $P5012, fb_tmp_281["$GLOBALish"]
    set $P5014, $P5012
    goto if1957_end4738
  if1957_else4737:
    null $P5013
    set $P5014, $P5013
  if1957_end4738:
    unless_null $P5014, vivi_19584739
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_19584739:
    unless_null $P5014, vivi_19594740
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_19594740:
    set $P5009, $P5014
  fallback4736:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_251_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1848
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1849
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_252_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1854
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1855
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4756
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_285, $P5003
    repr_defined $I5001, fb_tmp_285
    unless $I5001 goto if1969_else4757 
    set $P5005, fb_tmp_285["$W"]
    set $P5007, $P5005
    goto if1969_end4758
  if1969_else4757:
    null $P5006
    set $P5007, $P5006
  if1969_end4758:
    unless_null $P5007, vivi_19704759
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_19704759:
    unless_null $P5007, vivi_19714760
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_19714760:
    set $P5002, $P5007
  fallback4756:
    unless_null _lex_param_1, fallback4763
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5010
  fallback4763:
    set fb_tmp_286, _lex_param_1
    repr_defined $I5002, fb_tmp_286
    unless $I5002 goto if1972_else4761 
    set $P5011, fb_tmp_286["name"]
    set $P5013, $P5011
    goto if1972_end4762
  if1972_else4761:
    null $P5012
    set $P5013, $P5012
  if1972_end4762:
    unless_null $P5013, vivi_19734764
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_19734764:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback4765
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_287, $P5016
    repr_defined $I5003, fb_tmp_287
    unless $I5003 goto if1974_else4766 
    set $P5018, fb_tmp_287["$GLOBALish"]
    set $P5020, $P5018
    goto if1974_end4767
  if1974_else4766:
    null $P5019
    set $P5020, $P5019
  if1974_end4767:
    unless_null $P5020, vivi_19754768
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_19754768:
    unless_null $P5020, vivi_19764769
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_19764769:
    set $P5015, $P5020
  fallback4765:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if1977_end4771 
.annotate 'line', 1856
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if1979_end4775 
    set fb_tmp_288, $P101
    repr_defined $I5007, fb_tmp_288
    unless $I5007 goto if1980_else4776 
    set $P5025, fb_tmp_288["EXPORT"]
    set $P5027, $P5025
    goto if1980_end4777
  if1980_else4776:
    null $P5026
    set $P5027, $P5026
  if1980_end4777:
    unless_null $P5027, vivi_19814778
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_19814778:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if1979_end4775:
    unless $I5008 goto if1978_end4773 
.annotate 'line', 1857
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback4779
    nqp_get_sc_object $P5031, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5030, $P5031
    set fb_tmp_289, $P5030
    repr_defined $I5009, fb_tmp_289
    unless $I5009 goto if1982_else4780 
    set $P5032, fb_tmp_289["$W"]
    set $P5034, $P5032
    goto if1982_end4781
  if1982_else4780:
    null $P5033
    set $P5034, $P5033
  if1982_end4781:
    unless_null $P5034, vivi_19834782
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_19834782:
    unless_null $P5034, vivi_19844783
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_19844783:
    set $P5029, $P5034
  fallback4779:
    set fb_tmp_291, $P101
    repr_defined $I5011, fb_tmp_291
    unless $I5011 goto if1986_else4786 
    set $P5039, fb_tmp_291["EXPORT"]
    set $P5041, $P5039
    goto if1986_end4787
  if1986_else4786:
    null $P5040
    set $P5041, $P5040
  if1986_end4787:
    unless_null $P5041, vivi_19874788
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5041, $P5042
  vivi_19874788:
    get_who $P5038, $P5041
    set fb_tmp_290, $P5038
    repr_defined $I5010, fb_tmp_290
    unless $I5010 goto if1985_else4784 
    set $P5043, fb_tmp_290["DEFAULT"]
    set $P5045, $P5043
    goto if1985_end4785
  if1985_else4784:
    null $P5044
    set $P5045, $P5044
  if1985_end4785:
    unless_null $P5045, vivi_19884789
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_19884789:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if1978_end4773:
.annotate 'line', 1860
    $P5048 = "&import_HOW_exports"($P101)
  if1977_end4771:
.annotate 'line', 1862
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5050 = $P5049."new"()
    $P5051 = _lex_param_1."!make"($P5050)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_253_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1865
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5038 = 'cuid_464_1382484127.52628' 
    capture_lex $P5038 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4792
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback4792:
    set fb_tmp_292, _lex_param_1
    repr_defined $I5001, fb_tmp_292
    unless $I5001 goto if1989_else4790 
    set $P5004, fb_tmp_292["xblock"]
    set $P5006, $P5004
    goto if1989_end4791
  if1989_else4790:
    null $P5005
    set $P5006, $P5005
  if1989_end4791:
    unless_null $P5006, vivi_19904793
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_19904793:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1867
    unless_null _lex_param_1, fallback4798
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback4798:
    set fb_tmp_294, _lex_param_1
    repr_defined $I5003, fb_tmp_294
    unless $I5003 goto if1992_else4796 
    set $P5010, fb_tmp_294["xblock"]
    set $P5012, $P5010
    goto if1992_end4797
  if1992_else4796:
    null $P5011
    set $P5012, $P5011
  if1992_end4797:
    unless_null $P5012, vivi_19934799
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_19934799:
    set fb_tmp_293, $P5012
    repr_defined $I5002, fb_tmp_293
    unless $I5002 goto if1991_else4794 
    set $I5004, $P101
    set $P5014, fb_tmp_293[$I5004]
    set $P5016, $P5014
    goto if1991_end4795
  if1991_else4794:
    null $P5015
    set $P5016, $P5015
  if1991_end4795:
    unless_null $P5016, vivi_19944800
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_19944800:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback4805
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5020
  fallback4805:
    set fb_tmp_295, _lex_param_1
    repr_defined $I5005, fb_tmp_295
    unless $I5005 goto if1996_else4803 
    set $P5021, fb_tmp_295["else"]
    set $P5023, $P5021
    goto if1996_end4804
  if1996_else4803:
    null $P5022
    set $P5023, $P5022
  if1996_end4804:
    unless_null $P5023, vivi_19974806
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_19974806:
    unless $P5023 goto if1995_end4802 
.annotate 'line', 1868
.annotate 'line', 1869
    unless_null _lex_param_1, fallback4809
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5025
  fallback4809:
    set fb_tmp_296, _lex_param_1
    repr_defined $I5006, fb_tmp_296
    unless $I5006 goto if1998_else4807 
    set $P5026, fb_tmp_296["else"]
    set $P5028, $P5026
    goto if1998_end4808
  if1998_else4807:
    null $P5027
    set $P5028, $P5027
  if1998_end4808:
    unless_null $P5028, vivi_19994810
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_19994810:
    $P5030 = $P5028."ast"()
    $P5031 = "&block_immediate"($P5030)
    $P5032 = $P102."push"($P5031)
  if1995_end4802:
  while2000_test4811:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5007, $N5004, $N5005
    box $P5036, $I5007
    set $P5035, $P5036
    unless $I5007 goto while2000_done4815 
  while2000_redo4813:
    .const 'Sub' $P5033 = 'cuid_464_1382484127.52628' 
    capture_lex $P5033
    $P5034 = $P5033()
    set $P5035, $P5034
    goto while2000_test4811 
  while2000_done4815:
.annotate 'line', 1878
    $P5037 = _lex_param_1."!make"($P102)
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1382484127.52628") :anon :lex :outer("cuid_253_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1872
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1875
    find_lex $P5003, "$/"
    unless_null $P5003, fallback4820
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  fallback4820:
    set fb_tmp_298, $P5003
    repr_defined $I5002, fb_tmp_298
    unless $I5002 goto if2002_else4818 
    set $P5005, fb_tmp_298["xblock"]
    set $P5007, $P5005
    goto if2002_end4819
  if2002_else4818:
    null $P5006
    set $P5007, $P5006
  if2002_end4819:
    unless_null $P5007, vivi_20034821
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_20034821:
    set fb_tmp_297, $P5007
    repr_defined $I5001, fb_tmp_297
    unless $I5001 goto if2001_else4816 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_297[$I5003]
    set $P5012, $P5009
    goto if2001_end4817
  if2001_else4816:
    null $P5011
    set $P5012, $P5011
  if2001_end4817:
    unless_null $P5012, vivi_20044822
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_20044822:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1876
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_254_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1881
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_299 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1882
    unless_null _lex_param_1, fallback4825
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4825:
    set fb_tmp_299, _lex_param_1
    repr_defined $I5001, fb_tmp_299
    unless $I5001 goto if2005_else4823 
    set $P5003, fb_tmp_299["xblock"]
    set $P5005, $P5003
    goto if2005_end4824
  if2005_else4823:
    null $P5004
    set $P5005, $P5004
  if2005_end4824:
    unless_null $P5005, vivi_20064826
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20064826:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1883
    $P101."op"("unless")
.annotate 'line', 1884
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_255_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1887
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_300 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1888
    unless_null _lex_param_1, fallback4829
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4829:
    set fb_tmp_300, _lex_param_1
    repr_defined $I5001, fb_tmp_300
    unless $I5001 goto if2007_else4827 
    set $P5003, fb_tmp_300["xblock"]
    set $P5005, $P5003
    goto if2007_end4828
  if2007_else4827:
    null $P5004
    set $P5005, $P5004
  if2007_end4828:
    unless_null $P5005, vivi_20084830
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20084830:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1889
    unless_null _lex_param_1, fallback4833
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback4833:
    set fb_tmp_301, _lex_param_1
    repr_defined $I5002, fb_tmp_301
    unless $I5002 goto if2009_else4831 
    set $P5010, fb_tmp_301["sym"]
    set $P5012, $P5010
    goto if2009_end4832
  if2009_else4831:
    null $P5011
    set $P5012, $P5011
  if2009_end4832:
    unless_null $P5012, vivi_20104834
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_20104834:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback4837
    nqp_get_sc_object $P5016, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5015, $P5016
    set fb_tmp_302, $P5015
    repr_defined $I5003, fb_tmp_302
    unless $I5003 goto if2012_else4838 
    set $P5017, fb_tmp_302["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2012_end4839
  if2012_else4838:
    null $P5018
    set $P5019, $P5018
  if2012_end4839:
    unless_null $P5019, vivi_20134840
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_20134840:
    unless_null $P5019, vivi_20144841
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_20144841:
    set $P5014, $P5019
  fallback4837:
    if $P5014 goto unless2011_end4836 
.annotate 'line', 1890
.annotate 'line', 1891
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5023 = $P5022."new"(1 :named("value"), "nohandler" :named("named"))
    $P5024 = $P101."push"($P5023)
  unless2011_end4836:
.annotate 'line', 1893
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_256_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1896
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback4844
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback4844:
    set fb_tmp_303, _lex_param_1
    repr_defined $I5001, fb_tmp_303
    unless $I5001 goto if2015_else4842 
    set $P5004, fb_tmp_303["wu"]
    set $P5006, $P5004
    goto if2015_end4843
  if2015_else4842:
    null $P5005
    set $P5006, $P5005
  if2015_end4843:
    unless_null $P5006, vivi_20164845
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_20164845:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback4850
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback4850:
    set fb_tmp_304, _lex_param_1
    repr_defined $I5002, fb_tmp_304
    unless $I5002 goto if2018_else4848 
    set $P5010, fb_tmp_304["xblock"]
    set $P5012, $P5010
    goto if2018_end4849
  if2018_else4848:
    null $P5011
    set $P5012, $P5011
  if2018_end4849:
    unless_null $P5012, vivi_20194851
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_20194851:
    unless $P5012 goto if2017_else4846 
.annotate 'line', 1899
.annotate 'line', 1900
    unless_null _lex_param_1, fallback4854
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5014
  fallback4854:
    set fb_tmp_305, _lex_param_1
    repr_defined $I5003, fb_tmp_305
    unless $I5003 goto if2020_else4852 
    set $P5015, fb_tmp_305["xblock"]
    set $P5017, $P5015
    goto if2020_end4853
  if2020_else4852:
    null $P5016
    set $P5017, $P5016
  if2020_end4853:
    unless_null $P5017, vivi_20214855
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_20214855:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1901
    $P5021 = $P102."op"($P101)
    goto if2017_end4847
  if2017_else4846:
.annotate 'line', 1903
.annotate 'line', 1904
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    unless_null _lex_param_1, fallback4858
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5023
  fallback4858:
    set fb_tmp_306, _lex_param_1
    repr_defined $I5004, fb_tmp_306
    unless $I5004 goto if2022_else4856 
    set $P5024, fb_tmp_306["EXPR"]
    set $P5026, $P5024
    goto if2022_end4857
  if2022_else4856:
    null $P5025
    set $P5026, $P5025
  if2022_end4857:
    unless_null $P5026, vivi_20234859
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_20234859:
    $P5028 = $P5026."ast"()
    unless_null _lex_param_1, fallback4862
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5029
  fallback4862:
    set fb_tmp_307, _lex_param_1
    repr_defined $I5005, fb_tmp_307
    unless $I5005 goto if2024_else4860 
    set $P5030, fb_tmp_307["pblock"]
    set $P5032, $P5030
    goto if2024_end4861
  if2024_else4860:
    null $P5031
    set $P5032, $P5031
  if2024_end4861:
    unless_null $P5032, vivi_20254863
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_20254863:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P5022."new"($P5028, $P5035, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5036
  if2017_end4847:
    find_dynamic_lex $P5037, "$*CONTROL_USED"
    unless_null $P5037, fallback4866
    nqp_get_sc_object $P5039, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5038, $P5039
    set fb_tmp_308, $P5038
    repr_defined $I5006, fb_tmp_308
    unless $I5006 goto if2027_else4867 
    set $P5040, fb_tmp_308["$CONTROL_USED"]
    set $P5042, $P5040
    goto if2027_end4868
  if2027_else4867:
    null $P5041
    set $P5042, $P5041
  if2027_end4868:
    unless_null $P5042, vivi_20284869
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5042, $P5043
  vivi_20284869:
    unless_null $P5042, vivi_20294870
    die "Contextual $*CONTROL_USED not found"
    box $P5044, "Contextual $*CONTROL_USED not found"
    set $P5042, $P5044
  vivi_20294870:
    set $P5037, $P5042
  fallback4866:
    if $P5037 goto unless2026_end4865 
.annotate 'line', 1907
.annotate 'line', 1908
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5046 = $P5045."new"(1 :named("value"), "nohandler" :named("named"))
    $P5047 = $P102."push"($P5046)
  unless2026_end4865:
.annotate 'line', 1910
    $P5048 = _lex_param_1."!make"($P102)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_257_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1913
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 1914
    unless_null _lex_param_1, fallback4873
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback4873:
    set fb_tmp_309, _lex_param_1
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2030_else4871 
    set $P5004, fb_tmp_309["xblock"]
    set $P5006, $P5004
    goto if2030_end4872
  if2030_else4871:
    null $P5005
    set $P5006, $P5005
  if2030_end4872:
    unless_null $P5006, vivi_20314874
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_20314874:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1915
    $P101."op"("for")
    set fb_tmp_310, $P101
    repr_defined $I5002, fb_tmp_310
    unless $I5002 goto if2032_else4875 
    set $P5009, fb_tmp_310[1]
    set $P5011, $P5009
    goto if2032_end4876
  if2032_else4875:
    null $P5010
    set $P5011, $P5010
  if2032_end4876:
    unless_null $P5011, vivi_20334877
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_20334877:
    set $P102, $P5011
.annotate 'line', 1917
    $P5013 = $P102."arity"()
    if $P5013 goto unless2034_end4879 
.annotate 'line', 1918
    set fb_tmp_311, $P102
    repr_defined $I5003, fb_tmp_311
    unless $I5003 goto if2035_else4880 
    set $P5014, fb_tmp_311[0]
    set $P5016, $P5014
    goto if2035_end4881
  if2035_else4880:
    null $P5015
    set $P5016, $P5015
  if2035_end4881:
    unless_null $P5016, vivi_20364882
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_20364882:
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5019 = $P5018."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5019)
.annotate 'line', 1919
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1920
    $P5020 = $P102."arity"(1)
  unless2034_end4879:
.annotate 'line', 1922
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5021, "$*CONTROL_USED"
    unless_null $P5021, fallback4885
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_312, $P5022
    repr_defined $I5004, fb_tmp_312
    unless $I5004 goto if2038_else4886 
    set $P5024, fb_tmp_312["$CONTROL_USED"]
    set $P5026, $P5024
    goto if2038_end4887
  if2038_else4886:
    null $P5025
    set $P5026, $P5025
  if2038_end4887:
    unless_null $P5026, vivi_20394888
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_20394888:
    unless_null $P5026, vivi_20404889
    die "Contextual $*CONTROL_USED not found"
    box $P5028, "Contextual $*CONTROL_USED not found"
    set $P5026, $P5028
  vivi_20404889:
    set $P5021, $P5026
  fallback4885:
    if $P5021 goto unless2037_end4884 
.annotate 'line', 1923
.annotate 'line', 1924
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5030 = $P5029."new"(1 :named("value"), "nohandler" :named("named"))
    $P5031 = $P101."push"($P5030)
  unless2037_end4884:
.annotate 'line', 1926
    $P5032 = _lex_param_1."!make"($P101)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_258_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1929
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_313 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1930
    unless_null _lex_param_1, fallback4892
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4892:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5001, fb_tmp_313
    unless $I5001 goto if2041_else4890 
    set $P5003, fb_tmp_313["block"]
    set $P5005, $P5003
    goto if2041_end4891
  if2041_else4890:
    null $P5004
    set $P5005, $P5004
  if2041_end4891:
    unless_null $P5005, vivi_20424893
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20424893:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1931
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1932
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_259_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1935
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_314 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 1936
    unless_null _lex_param_1, fallback4896
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4896:
    set fb_tmp_314, _lex_param_1
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2043_else4894 
    set $P5003, fb_tmp_314["block"]
    set $P5005, $P5003
    goto if2043_end4895
  if2043_else4894:
    null $P5004
    set $P5005, $P5004
  if2043_end4895:
    unless_null $P5005, vivi_20444897
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20444897:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1937
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1938
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_260_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1976
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
.annotate 'line', 1977
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4898
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_315, $P5002
    repr_defined $I5001, fb_tmp_315
    unless $I5001 goto if2045_else4899 
    set $P5004, fb_tmp_315["$W"]
    set $P5006, $P5004
    goto if2045_end4900
  if2045_else4899:
    null $P5005
    set $P5006, $P5005
  if2045_end4900:
    unless_null $P5006, vivi_20464901
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_20464901:
    unless_null $P5006, vivi_20474902
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20474902:
    set $P5001, $P5006
  fallback4898:
    unless_null _lex_param_1, fallback4905
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback4905:
    set fb_tmp_316, _lex_param_1
    repr_defined $I5002, fb_tmp_316
    unless $I5002 goto if2048_else4903 
    set $P5010, fb_tmp_316["blorst"]
    set $P5012, $P5010
    goto if2048_end4904
  if2048_else4903:
    null $P5011
    set $P5012, $P5011
  if2048_end4904:
    unless_null $P5012, vivi_20494906
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_20494906:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_261_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1980
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
.annotate 'line', 1981
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback4907
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_317, $P5002
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2050_else4908 
    set $P5004, fb_tmp_317["$W"]
    set $P5006, $P5004
    goto if2050_end4909
  if2050_else4908:
    null $P5005
    set $P5006, $P5005
  if2050_end4909:
    unless_null $P5006, vivi_20514910
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_20514910:
    unless_null $P5006, vivi_20524911
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_20524911:
    set $P5001, $P5006
  fallback4907:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback4914
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5010
  fallback4914:
    set fb_tmp_318, _lex_param_1
    repr_defined $I5002, fb_tmp_318
    unless $I5002 goto if2053_else4912 
    set $P5011, fb_tmp_318["blorst"]
    set $P5013, $P5011
    goto if2053_end4913
  if2053_else4912:
    null $P5012
    set $P5013, $P5012
  if2053_end4913:
    unless_null $P5013, vivi_20544915
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_20544915:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1982
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5017 = $P5016."new"()
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_262_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 1985
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_319 
    .local pmc fb_tmp_320 
    .local pmc fb_tmp_321 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_4916
    .lex "RETURN", $P102
.annotate 'line', 1986
    unless_null _lex_param_1, fallback4920
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4920:
    set fb_tmp_319, _lex_param_1
    repr_defined $I5001, fb_tmp_319
    unless $I5001 goto if2055_else4918 
    set $P5003, fb_tmp_319["blorst"]
    set $P5005, $P5003
    goto if2055_end4919
  if2055_else4918:
    null $P5004
    set $P5005, $P5004
  if2055_end4919:
    unless_null $P5005, vivi_20564921
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20564921:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
    type_check $I5002, $P101, $P5008
    unless $I5002 goto if2057_end4923 
.annotate 'line', 1987
    set fb_tmp_320, $P101
    repr_defined $I5003, fb_tmp_320
    unless $I5003 goto if2060_else4928 
    set $P5009, fb_tmp_320["handlers"]
    set $P5011, $P5009
    goto if2060_end4929
  if2060_else4928:
    null $P5010
    set $P5011, $P5010
  if2060_end4929:
    unless_null $P5011, vivi_20614930
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_20614930:
    set $P5017, $P5011
    unless $P5011 goto if2059_end4927 
    set fb_tmp_321, $P101
    repr_defined $I5005, fb_tmp_321
    unless $I5005 goto if2062_else4931 
    set $P5013, fb_tmp_321["handlers"]
    set $P5015, $P5013
    goto if2062_end4932
  if2062_else4931:
    null $P5014
    set $P5015, $P5014
  if2062_end4932:
    unless_null $P5015, vivi_20634933
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_20634933:
    exists $I5004, $P5015["CATCH"]
    box $P5018, $I5004
    set $P5017, $P5018
  if2059_end4927:
    unless $P5017 goto if2058_else4924 
.annotate 'line', 1988
.annotate 'line', 1989
    _lex_param_1."!make"($P101)
    $P5019 = "RETURN"(1)
    set $P5021, $P5019
    goto if2058_end4925
  if2058_else4924:
.annotate 'line', 1992
.annotate 'line', 1993
    $P5020 = $P101."blocktype"("immediate")
    set $P5021, $P5020
  if2058_end4925:
  if2057_end4923:
.annotate 'line', 1996
    nqp_get_sc_object $P5022, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2000
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 2001
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
.annotate 'line', 2002
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2004
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5027 = $P5026."new"("exception" :named("op"))
.annotate 'line', 2005
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5029 = $P5028."new"("handled" :named("value"))
.annotate 'line', 2006
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5031 = $P5030."new"(1 :named("value"))
    $P5032 = $P5025."new"($P5027, $P5029, $P5031, "bindkey_i" :named("op"))
.annotate 'line', 2008
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5034 = $P5033."new"("null" :named("op"))
.annotate 'line', 2009
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5036 = $P5035."new"("null" :named("op"))
    $P5037 = $P5024."new"($P5032 :named("parrot"), $P5034 :named("jvm"), $P5036 :named("moar"))
.annotate 'line', 2011
    $P5038 = "&default_for"("$")
    $P5039 = $P5023."new"($P5037, $P5038)
    $P5040 = $P5022."new"($P101, "CATCH", $P5039, "handle" :named("op"))
    $P5041 = _lex_param_1."!make"($P5040)
    goto lexotic_4917
  lexotic_4916:
    .get_results ($P5041)
  lexotic_4917:
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_263_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
.annotate 'line', 2016
    unless_null _lex_param_1, fallback4938
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4938:
    set fb_tmp_322, _lex_param_1
    repr_defined $I5001, fb_tmp_322
    unless $I5001 goto if2065_else4936 
    set $P5002, fb_tmp_322["block"]
    set $P5004, $P5002
    goto if2065_end4937
  if2065_else4936:
    null $P5003
    set $P5004, $P5003
  if2065_end4937:
    unless_null $P5004, vivi_20664939
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20664939:
    unless $P5004 goto if2064_else4934 
.annotate 'line', 2017
    unless_null _lex_param_1, fallback4942
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback4942:
    set fb_tmp_323, _lex_param_1
    repr_defined $I5002, fb_tmp_323
    unless $I5002 goto if2067_else4940 
    set $P5007, fb_tmp_323["block"]
    set $P5009, $P5007
    goto if2067_end4941
  if2067_else4940:
    null $P5008
    set $P5009, $P5008
  if2067_end4941:
    unless_null $P5009, vivi_20684943
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_20684943:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2064_end4935
  if2064_else4934:
.annotate 'line', 2018
    unless_null _lex_param_1, fallback4946
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5013
  fallback4946:
    set fb_tmp_324, _lex_param_1
    repr_defined $I5003, fb_tmp_324
    unless $I5003 goto if2069_else4944 
    set $P5014, fb_tmp_324["statement"]
    set $P5016, $P5014
    goto if2069_end4945
  if2069_else4944:
    null $P5015
    set $P5016, $P5015
  if2069_end4945:
    unless_null $P5016, vivi_20704947
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_20704947:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2064_end4935:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_264_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_325 
    unless_null _lex_param_1, fallback4950
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4950:
    set fb_tmp_325, _lex_param_1
    repr_defined $I5001, fb_tmp_325
    unless $I5001 goto if2071_else4948 
    set $P5002, fb_tmp_325["cond"]
    set $P5004, $P5002
    goto if2071_end4949
  if2071_else4948:
    null $P5003
    set $P5004, $P5003
  if2071_end4949:
    unless_null $P5004, vivi_20724951
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20724951:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_265_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_326 
    unless_null _lex_param_1, fallback4954
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4954:
    set fb_tmp_326, _lex_param_1
    repr_defined $I5001, fb_tmp_326
    unless $I5001 goto if2073_else4952 
    set $P5002, fb_tmp_326["cond"]
    set $P5004, $P5002
    goto if2073_end4953
  if2073_else4952:
    null $P5003
    set $P5004, $P5003
  if2073_end4953:
    unless_null $P5004, vivi_20744955
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20744955:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_266_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2026
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_327 
    unless_null _lex_param_1, fallback4958
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4958:
    set fb_tmp_327, _lex_param_1
    repr_defined $I5001, fb_tmp_327
    unless $I5001 goto if2075_else4956 
    set $P5002, fb_tmp_327["cond"]
    set $P5004, $P5002
    goto if2075_end4957
  if2075_else4956:
    null $P5003
    set $P5004, $P5003
  if2075_end4957:
    unless_null $P5004, vivi_20764959
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20764959:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_267_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_328 
    unless_null _lex_param_1, fallback4962
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4962:
    set fb_tmp_328, _lex_param_1
    repr_defined $I5001, fb_tmp_328
    unless $I5001 goto if2077_else4960 
    set $P5002, fb_tmp_328["cond"]
    set $P5004, $P5002
    goto if2077_end4961
  if2077_else4960:
    null $P5003
    set $P5004, $P5003
  if2077_end4961:
    unless_null $P5004, vivi_20784963
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20784963:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_268_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_329 
    unless_null _lex_param_1, fallback4966
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4966:
    set fb_tmp_329, _lex_param_1
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2079_else4964 
    set $P5002, fb_tmp_329["fatarrow"]
    set $P5004, $P5002
    goto if2079_end4965
  if2079_else4964:
    null $P5003
    set $P5004, $P5003
  if2079_end4965:
    unless_null $P5004, vivi_20804967
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20804967:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_269_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2032
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_330 
    unless_null _lex_param_1, fallback4970
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4970:
    set fb_tmp_330, _lex_param_1
    repr_defined $I5001, fb_tmp_330
    unless $I5001 goto if2081_else4968 
    set $P5002, fb_tmp_330["colonpair"]
    set $P5004, $P5002
    goto if2081_end4969
  if2081_else4968:
    null $P5003
    set $P5004, $P5003
  if2081_end4969:
    unless_null $P5004, vivi_20824971
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20824971:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_270_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2033
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_331 
    unless_null _lex_param_1, fallback4974
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4974:
    set fb_tmp_331, _lex_param_1
    repr_defined $I5001, fb_tmp_331
    unless $I5001 goto if2083_else4972 
    set $P5002, fb_tmp_331["variable"]
    set $P5004, $P5002
    goto if2083_end4973
  if2083_else4972:
    null $P5003
    set $P5004, $P5003
  if2083_end4973:
    unless_null $P5004, vivi_20844975
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20844975:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_271_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2034
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_332 
    unless_null _lex_param_1, fallback4978
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4978:
    set fb_tmp_332, _lex_param_1
    repr_defined $I5001, fb_tmp_332
    unless $I5001 goto if2085_else4976 
    set $P5002, fb_tmp_332["package_declarator"]
    set $P5004, $P5002
    goto if2085_end4977
  if2085_else4976:
    null $P5003
    set $P5004, $P5003
  if2085_end4977:
    unless_null $P5004, vivi_20864979
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20864979:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_272_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_333 
    unless_null _lex_param_1, fallback4982
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4982:
    set fb_tmp_333, _lex_param_1
    repr_defined $I5001, fb_tmp_333
    unless $I5001 goto if2087_else4980 
    set $P5002, fb_tmp_333["scope_declarator"]
    set $P5004, $P5002
    goto if2087_end4981
  if2087_else4980:
    null $P5003
    set $P5004, $P5003
  if2087_end4981:
    unless_null $P5004, vivi_20884983
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20884983:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_273_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2036
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_334 
    unless_null _lex_param_1, fallback4986
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4986:
    set fb_tmp_334, _lex_param_1
    repr_defined $I5001, fb_tmp_334
    unless $I5001 goto if2089_else4984 
    set $P5002, fb_tmp_334["routine_declarator"]
    set $P5004, $P5002
    goto if2089_end4985
  if2089_else4984:
    null $P5003
    set $P5004, $P5003
  if2089_end4985:
    unless_null $P5004, vivi_20904987
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20904987:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_274_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2037
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_335 
    unless_null _lex_param_1, fallback4990
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4990:
    set fb_tmp_335, _lex_param_1
    repr_defined $I5001, fb_tmp_335
    unless $I5001 goto if2091_else4988 
    set $P5002, fb_tmp_335["regex_declarator"]
    set $P5004, $P5002
    goto if2091_end4989
  if2091_else4988:
    null $P5003
    set $P5004, $P5003
  if2091_end4989:
    unless_null $P5004, vivi_20924991
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20924991:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_275_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2038
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_336 
    unless_null _lex_param_1, fallback4994
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback4994:
    set fb_tmp_336, _lex_param_1
    repr_defined $I5001, fb_tmp_336
    unless $I5001 goto if2093_else4992 
    set $P5002, fb_tmp_336["statement_prefix"]
    set $P5004, $P5002
    goto if2093_end4993
  if2093_else4992:
    null $P5003
    set $P5004, $P5003
  if2093_end4993:
    unless_null $P5004, vivi_20944995
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_20944995:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_276_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2039
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_337 
.annotate 'line', 2040
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    unless_null _lex_param_1, fallback4998
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback4998:
    set fb_tmp_337, _lex_param_1
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if2095_else4996 
    set $P5003, fb_tmp_337["pblock"]
    set $P5005, $P5003
    goto if2095_end4997
  if2095_else4996:
    null $P5004
    set $P5005, $P5004
  if2095_end4997:
    unless_null $P5005, vivi_20964999
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20964999:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "takeclosure" :named("op"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_277_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2043
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2044
    unless_null _lex_param_1, fallback5002
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback5002:
    set fb_tmp_338, _lex_param_1
    repr_defined $I5001, fb_tmp_338
    unless $I5001 goto if2097_else5000 
    set $P5003, fb_tmp_338["val"]
    set $P5005, $P5003
    goto if2097_end5001
  if2097_else5000:
    null $P5004
    set $P5005, $P5004
  if2097_end5001:
    unless_null $P5005, vivi_20985003
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_20985003:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2045
    unless_null _lex_param_1, fallback5006
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback5006:
    set fb_tmp_339, _lex_param_1
    repr_defined $I5002, fb_tmp_339
    unless $I5002 goto if2099_else5004 
    set $P5009, fb_tmp_339["key"]
    set $P5011, $P5009
    goto if2099_end5005
  if2099_else5004:
    null $P5010
    set $P5011, $P5010
  if2099_end5005:
    unless_null $P5011, vivi_21005007
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_21005007:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2046
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_278_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2049
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_465_1382484127.52628' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    unless_null _lex_param_1, fallback5012
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5012:
    set fb_tmp_340, _lex_param_1
    repr_defined $I5001, fb_tmp_340
    unless $I5001 goto if2102_else5010 
    set $P5002, fb_tmp_340["variable"]
    set $P5004, $P5002
    goto if2102_end5011
  if2102_else5010:
    null $P5003
    set $P5004, $P5003
  if2102_end5011:
    unless_null $P5004, vivi_21035013
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_21035013:
    unless $P5004 goto if2101_else5008 
.annotate 'line', 2050
.annotate 'line', 2051
    unless_null _lex_param_1, fallback5016
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5016:
    set fb_tmp_341, _lex_param_1
    repr_defined $I5002, fb_tmp_341
    unless $I5002 goto if2104_else5014 
    set $P5007, fb_tmp_341["variable"]
    set $P5009, $P5007
    goto if2104_end5015
  if2104_else5014:
    null $P5008
    set $P5009, $P5008
  if2104_end5015:
    unless_null $P5009, vivi_21055017
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_21055017:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback5022
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5022:
    set fb_tmp_343, _lex_param_1
    repr_defined $I5004, fb_tmp_343
    unless $I5004 goto if2107_else5020 
    set $P5013, fb_tmp_343["variable"]
    set $P5015, $P5013
    goto if2107_end5021
  if2107_else5020:
    null $P5014
    set $P5015, $P5014
  if2107_end5021:
    unless_null $P5015, vivi_21085023
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_21085023:
    set fb_tmp_342, $P5015
    repr_defined $I5003, fb_tmp_342
    unless $I5003 goto if2106_else5018 
    set $P5017, fb_tmp_342["desigilname"]
    set $P5019, $P5017
    goto if2106_end5019
  if2106_else5018:
    null $P5018
    set $P5019, $P5018
  if2106_end5019:
    unless_null $P5019, vivi_21095024
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_21095024:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2052
    unless_null _lex_param_1, fallback5027
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5021
  fallback5027:
    set fb_tmp_344, _lex_param_1
    repr_defined $I5005, fb_tmp_344
    unless $I5005 goto if2110_else5025 
    set $P5022, fb_tmp_344["variable"]
    set $P5024, $P5022
    goto if2110_end5026
  if2110_else5025:
    null $P5023
    set $P5024, $P5023
  if2110_end5026:
    unless_null $P5024, vivi_21115028
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_21115028:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2101_end5009
  if2101_else5008:
    .const 'Sub' $P5028 = 'cuid_465_1382484127.52628' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2101_end5009:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1382484127.52628") :anon :lex :outer("cuid_278_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2053
    .lex "$past", $P101 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5033
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback5033:
    set fb_tmp_345, $P5002
    repr_defined $I5001, fb_tmp_345
    unless $I5001 goto if2113_else5031 
    set $P5004, fb_tmp_345["circumfix"]
    set $P5006, $P5004
    goto if2113_end5032
  if2113_else5031:
    null $P5005
    set $P5006, $P5005
  if2113_end5032:
    unless_null $P5006, vivi_21145034
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_21145034:
    unless $P5006 goto if2112_else5029 
.annotate 'line', 2055
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5037
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  fallback5037:
    set fb_tmp_346, $P5008
    repr_defined $I5002, fb_tmp_346
    unless $I5002 goto if2115_else5035 
    set $P5010, fb_tmp_346["circumfix"]
    set $P5012, $P5010
    goto if2115_end5036
  if2115_else5035:
    null $P5011
    set $P5012, $P5011
  if2115_end5036:
    unless_null $P5012, vivi_21165038
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_21165038:
    $P5014 = $P5012."ast"()
    set $P5023, $P5014
    goto if2112_end5030
  if2112_else5029:
.annotate 'line', 2056
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5041
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  fallback5041:
    set fb_tmp_347, $P5016
    repr_defined $I5004, fb_tmp_347
    unless $I5004 goto if2117_else5039 
    set $P5018, fb_tmp_347["not"]
    set $P5020, $P5018
    goto if2117_end5040
  if2117_else5039:
    null $P5019
    set $P5020, $P5019
  if2117_end5040:
    unless_null $P5020, vivi_21185042
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_21185042:
    isfalse $I5003, $P5020
    $P5022 = $P5015."new"($I5003 :named("value"))
    set $P5023, $P5022
  if2112_end5030:
    set $P101, $P5023
.annotate 'line', 2057
    find_lex $P5024, "$/"
    unless_null $P5024, fallback5045
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  fallback5045:
    set fb_tmp_348, $P5024
    repr_defined $I5005, fb_tmp_348
    unless $I5005 goto if2119_else5043 
    set $P5026, fb_tmp_348["identifier"]
    set $P5028, $P5026
    goto if2119_end5044
  if2119_else5043:
    null $P5027
    set $P5028, $P5027
  if2119_end5044:
    unless_null $P5028, vivi_21205046
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_21205046:
    set $S5001, $P5028
    $P101."named"($S5001)
.annotate 'line', 2058
    find_dynamic_lex $P5030, "$/"
    $P5031 = $P5030."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_279_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2062
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_467_1382484127.52628' 
    capture_lex $P5020 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback5051
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback5051:
    set fb_tmp_349, _lex_param_1
    repr_defined $I5001, fb_tmp_349
    unless $I5001 goto if2122_else5049 
    set $P5003, fb_tmp_349["postcircumfix"]
    set $P5005, $P5003
    goto if2122_end5050
  if2122_else5049:
    null $P5004
    set $P5005, $P5004
  if2122_end5050:
    unless_null $P5005, vivi_21235052
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_21235052:
    unless $P5005 goto if2121_else5047 
.annotate 'line', 2064
.annotate 'line', 2065
    unless_null _lex_param_1, fallback5055
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5007
  fallback5055:
    set fb_tmp_350, _lex_param_1
    repr_defined $I5002, fb_tmp_350
    unless $I5002 goto if2124_else5053 
    set $P5008, fb_tmp_350["postcircumfix"]
    set $P5010, $P5008
    goto if2124_end5054
  if2124_else5053:
    null $P5009
    set $P5010, $P5009
  if2124_end5054:
    unless_null $P5010, vivi_21255056
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_21255056:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2066
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
.annotate 'line', 2067
    $P5014 = "&default_for"("$")
    $P5015 = $P5013."new"("$/" :named("name"), "lexical" :named("scope"), $P5014 :named("fallback"))
    $P5016 = $P101."unshift"($P5015)
    goto if2121_end5048
  if2121_else5047:
    .const 'Sub' $P5017 = 'cuid_467_1382484127.52628' 
    capture_lex $P5017
    $P5018 = $P5017()
  if2121_end5048:
.annotate 'line', 2148
    $P5019 = _lex_param_1."!make"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1382484127.52628") :anon :lex :outer("cuid_279_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2070
    .const 'Sub' $P5081 = 'cuid_466_1382484127.52628' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_470_1382484127.52628' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_471_1382484127.52628' 
    capture_lex $P5081 
    .const 'Sub' $P5081 = 'cuid_472_1382484127.52628' 
    capture_lex $P5081 
    .lex "@name", $P101 
    .local pmc fb_tmp_351 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_352 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2071
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    set pkg_lookup_tmp_4, $P5003
    get_who $P5004, pkg_lookup_tmp_4
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2127_else5059 
    get_who $P5006, pkg_lookup_tmp_4
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2127_end5060
  if2127_else5059:
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5007
  if2127_end5060:
    get_who $P5002, $P5008
    set fb_tmp_351, $P5002
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if2126_else5057 
    set $P5009, fb_tmp_351["Compiler"]
    set $P5011, $P5009
    goto if2126_end5058
  if2126_else5057:
    null $P5010
    set $P5011, $P5010
  if2126_end5058:
    unless_null $P5011, vivi_21285061
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_21285061:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2129_else5062 
.annotate 'line', 2072
    find_lex $P5015, "$/"
    unless_null $P5015, fallback5068
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  fallback5068:
    set fb_tmp_352, $P5015
    repr_defined $I5004, fb_tmp_352
    unless $I5004 goto if2131_else5066 
    set $P5017, fb_tmp_352["twigil"]
    set $P5019, $P5017
    goto if2131_end5067
  if2131_else5066:
    null $P5018
    set $P5019, $P5018
  if2131_end5067:
    unless_null $P5019, vivi_21325069
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_21325069:
    unless $P5019 goto if2130_end5065 
.annotate 'line', 2073
.annotate 'line', 2074
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2130_end5065:
.annotate 'line', 2076
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5080, $P5025
    goto if2129_end5063
  if2129_else5062:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback5074
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  fallback5074:
    set fb_tmp_353, $P5026
    repr_defined $I5006, fb_tmp_353
    unless $I5006 goto if2134_else5072 
    set $P5028, fb_tmp_353["twigil"]
    set $P5030, $P5028
    goto if2134_end5073
  if2134_else5072:
    null $P5029
    set $P5030, $P5029
  if2134_end5073:
    unless_null $P5030, vivi_21355075
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  vivi_21355075:
    set $S5002, $P5030
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2133_else5070 
    .const 'Sub' $P5032 = 'cuid_466_1382484127.52628' 
    capture_lex $P5032
    $P5033 = $P5032()
    set $P5079, $P5033
    goto if2133_end5071
  if2133_else5070:
    find_lex $P5034, "$/"
    unless_null $P5034, fallback5088
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  fallback5088:
    set fb_tmp_356, $P5034
    repr_defined $I5008, fb_tmp_356
    unless $I5008 goto if2141_else5086 
    set $P5036, fb_tmp_356["twigil"]
    set $P5038, $P5036
    goto if2141_end5087
  if2141_else5086:
    null $P5037
    set $P5038, $P5037
  if2141_end5087:
    unless_null $P5038, vivi_21425089
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5038, $P5039
  vivi_21425089:
    set $S5003, $P5038
    iseq $I5007, $S5003, "!"
    unless $I5007 goto if2140_else5084 
    .const 'Sub' $P5040 = 'cuid_470_1382484127.52628' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5078, $P5041
    goto if2140_end5085
  if2140_else5084:
    find_lex $P5042, "$/"
    unless_null $P5042, fallback5138
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5042, $P5043
  fallback5138:
    set fb_tmp_363, $P5042
    repr_defined $I5009, fb_tmp_363
    unless $I5009 goto if2167_else5136 
    set $P5044, fb_tmp_363["semilist"]
    set $P5046, $P5044
    goto if2167_end5137
  if2167_else5136:
    null $P5045
    set $P5046, $P5045
  if2167_end5137:
    unless_null $P5046, vivi_21685139
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  vivi_21685139:
    unless $P5046 goto if2166_else5134 
    .const 'Sub' $P5048 = 'cuid_471_1382484127.52628' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5077, $P5049
    goto if2166_end5135
  if2166_else5134:
.annotate 'line', 2133
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback5158
    nqp_get_sc_object $P5052, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5051, $P5052
    set fb_tmp_367, $P5051
    repr_defined $I5010, fb_tmp_367
    unless $I5010 goto if2178_else5159 
    set $P5053, fb_tmp_367["$W"]
    set $P5055, $P5053
    goto if2178_end5160
  if2178_else5159:
    null $P5054
    set $P5055, $P5054
  if2178_end5160:
    unless_null $P5055, vivi_21795161
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5055, $P5056
  vivi_21795161:
    unless_null $P5055, vivi_21805162
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_21805162:
    set $P5050, $P5055
  fallback5158:
    set fb_tmp_368, $P101
    repr_defined $I5011, fb_tmp_368
    unless $I5011 goto if2181_else5163 
    set $P5058, fb_tmp_368[0]
    set $P5060, $P5058
    goto if2181_end5164
  if2181_else5163:
    null $P5059
    set $P5060, $P5059
  if2181_end5164:
    unless_null $P5060, vivi_21825165
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5060, $P5061
  vivi_21825165:
    set $S5004, $P5060
    $P5062 = $P5050."is_package"($S5004)
    unless $P5062 goto if2177_else5156 
.annotate 'line', 2134
    find_lex $P5063, "$/"
    $P5064 = "&lexical_package_lookup"($P101, $P5063)
    store_lex "$past", $P5064
.annotate 'line', 2135
    find_lex $P5065, "$past"
    find_lex $P5066, "$/"
    unless_null $P5066, fallback5168
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5066, $P5067
  fallback5168:
    set fb_tmp_369, $P5066
    repr_defined $I5012, fb_tmp_369
    unless $I5012 goto if2183_else5166 
    set $P5068, fb_tmp_369["sigil"]
    set $P5070, $P5068
    goto if2183_end5167
  if2183_else5166:
    null $P5069
    set $P5070, $P5069
  if2183_end5167:
    unless_null $P5070, vivi_21845169
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5070, $P5071
  vivi_21845169:
    $P5072 = "&default_for"($P5070)
    $P5073 = $P5065."fallback"($P5072)
    set $P5076, $P5073
    goto if2177_end5157
  if2177_else5156:
    .const 'Sub' $P5074 = 'cuid_472_1382484127.52628' 
    capture_lex $P5074
    $P5075 = $P5074()
    set $P5076, $P5075
  if2177_end5157:
    set $P5077, $P5076
  if2166_end5135:
    set $P5078, $P5077
  if2140_end5085:
    set $P5079, $P5078
  if2133_end5071:
    set $P5080, $P5079
  if2129_end5063:
    .return ($P5080) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1382484127.52628") :anon :lex :outer("cuid_467_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2078
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2079
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2081
    new $P5003, 'ResizablePMCArray'
    box $P5004, "GLOBAL"
    push $P5003, $P5004
    find_lex $P5005, "$/"
    unless_null $P5005, fallback5078
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  fallback5078:
    set fb_tmp_354, $P5005
    repr_defined $I5001, fb_tmp_354
    unless $I5001 goto if2136_else5076 
    set $P5007, fb_tmp_354["sigil"]
    set $P5009, $P5007
    goto if2136_end5077
  if2136_else5076:
    null $P5008
    set $P5009, $P5008
  if2136_end5077:
    unless_null $P5009, vivi_21375079
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_21375079:
    set $S5002, $P5009
    find_lex $P5011, "$/"
    unless_null $P5011, fallback5082
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  fallback5082:
    set fb_tmp_355, $P5011
    repr_defined $I5002, fb_tmp_355
    unless $I5002 goto if2138_else5080 
    set $P5013, fb_tmp_355["desigilname"]
    set $P5015, $P5013
    goto if2138_end5081
  if2138_else5080:
    null $P5014
    set $P5015, $P5014
  if2138_end5081:
    unless_null $P5015, vivi_21395083
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_21395083:
    set $S5003, $P5015
    concat $S5001, $S5002, $S5003
    box $P5017, $S5001
    push $P5003, $P5017
    find_lex $P5018, "$/"
    $P5019 = "&lexical_package_lookup"($P5003, $P5018)
.annotate 'line', 2082
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2084
    nqp_get_sc_object $P5021, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    find_lex $P5022, "$/"
    set $S5006, $P5022
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5023 = $P5021."new"($S5004 :named("value"))
    $P5024 = $P5020."new"($P5023, "die_s" :named("op"))
    $P5025 = $P5002."new"($P5019, $P5024, "ifnull" :named("op"))
    set $P101, $P5025
.annotate 'line', 2086
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
.annotate 'line', 2087
    find_lex $P5027, "@name"
    $P5028 = $P5027."pop"()
    set $S5007, $P5028
    $P5029 = $P5026."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5029
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1382484127.52628") :anon :lex :outer("cuid_467_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2091
    .const 'Sub' $P5052 = 'cuid_469_1382484127.52628' 
    capture_lex $P5052 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2092
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback5092
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5007, $P5008
    set fb_tmp_357, $P5007
    repr_defined $I5002, fb_tmp_357
    unless $I5002 goto if2144_else5093 
    set $P5009, fb_tmp_357["$PKGDECL"]
    set $P5011, $P5009
    goto if2144_end5094
  if2144_else5093:
    null $P5010
    set $P5011, $P5010
  if2144_end5094:
    unless_null $P5011, vivi_21455095
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_21455095:
    unless_null $P5011, vivi_21465096
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_21465096:
    set $P5006, $P5011
  fallback5092:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2143_else5090 
.annotate 'line', 2094
.annotate 'line', 2095
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5015 = $P5014."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5015
.annotate 'line', 2096
    find_dynamic_lex $P5016, "$*PACKAGE"
    unless_null $P5016, fallback5097
    nqp_get_sc_object $P5018, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5017, $P5018
    set fb_tmp_358, $P5017
    repr_defined $I5003, fb_tmp_358
    unless $I5003 goto if2147_else5098 
    set $P5019, fb_tmp_358["$PACKAGE"]
    set $P5021, $P5019
    goto if2147_end5099
  if2147_else5098:
    null $P5020
    set $P5021, $P5020
  if2147_end5099:
    unless_null $P5021, vivi_21485100
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_21485100:
    unless_null $P5021, vivi_21495101
    die "Contextual $*PACKAGE not found"
    box $P5023, "Contextual $*PACKAGE not found"
    set $P5021, $P5023
  vivi_21495101:
    set $P5016, $P5021
  fallback5097:
    $P5024 = $P102."set_compile_time_value"($P5016)
    goto if2143_end5091
  if2143_else5090:
.annotate 'line', 2098
.annotate 'line', 2099
    nqp_get_sc_object $P5025, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback5102
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5027, $P5028
    set fb_tmp_359, $P5027
    repr_defined $I5004, fb_tmp_359
    unless $I5004 goto if2150_else5103 
    set $P5029, fb_tmp_359["$PACKAGE"]
    set $P5031, $P5029
    goto if2150_end5104
  if2150_else5103:
    null $P5030
    set $P5031, $P5030
  if2150_end5104:
    unless_null $P5031, vivi_21515105
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_21515105:
    unless_null $P5031, vivi_21525106
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_21525106:
    set $P5026, $P5031
  fallback5102:
    $P5034 = $P5025."new"($P5026 :named("value"))
    set $P102, $P5034
  if2143_end5091:
.annotate 'line', 2101
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
.annotate 'line', 2103
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2104
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5038 = $P5037."new"("self" :named("name"), "lexical" :named("scope"))
    $P5039 = $P5036."new"($P5038, "decont" :named("op"))
    $P5040 = $P5035."new"($P5039, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5040
    find_dynamic_lex $P5041, "$*IN_DECL"
    unless_null $P5041, fallback5109
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5042, $P5043
    set fb_tmp_360, $P5042
    repr_defined $I5005, fb_tmp_360
    unless $I5005 goto if2154_else5110 
    set $P5044, fb_tmp_360["$IN_DECL"]
    set $P5046, $P5044
    goto if2154_end5111
  if2154_else5110:
    null $P5045
    set $P5046, $P5045
  if2154_end5111:
    unless_null $P5046, vivi_21555112
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  vivi_21555112:
    unless_null $P5046, vivi_21565113
    die "Contextual $*IN_DECL not found"
    box $P5048, "Contextual $*IN_DECL not found"
    set $P5046, $P5048
  vivi_21565113:
    set $P5041, $P5046
  fallback5109:
    set $P5051, $P5041
    if $P5041 goto unless2153_end5108 
    .const 'Sub' $P5049 = 'cuid_469_1382484127.52628' 
    capture_lex $P5049
    $P5050 = $P5049()
    set $P5051, $P5050
  unless2153_end5108:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1382484127.52628") :anon :lex :outer("cuid_470_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2109
    .const 'Sub' $P5036 = 'cuid_468_1382484127.52628' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2111
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback5114
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5007, $P5008
    set fb_tmp_361, $P5007
    repr_defined $I5001, fb_tmp_361
    unless $I5001 goto if2157_else5115 
    set $P5009, fb_tmp_361["$PACKAGE"]
    set $P5011, $P5009
    goto if2157_end5116
  if2157_else5115:
    null $P5010
    set $P5011, $P5010
  if2157_end5116:
    unless_null $P5011, vivi_21585117
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_21585117:
    unless_null $P5011, vivi_21595118
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_21595118:
    set $P5006, $P5011
  fallback5114:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback5119
    nqp_get_sc_object $P5016, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5015, $P5016
    set fb_tmp_362, $P5015
    repr_defined $I5002, fb_tmp_362
    unless $I5002 goto if2160_else5120 
    set $P5017, fb_tmp_362["$PACKAGE"]
    set $P5019, $P5017
    goto if2160_end5121
  if2160_else5120:
    null $P5018
    set $P5019, $P5018
  if2160_end5121:
    unless_null $P5019, vivi_21615122
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_21615122:
    unless_null $P5019, vivi_21625123
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_21625123:
    set $P5014, $P5019
  fallback5119:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers5126
    push_eh $P5024
  for_next5127:
    unless $P5004, for_done5129
    shift $P5025, $P5004
  for_redo5128:
    .const 'Sub' $P5023 = 'cuid_468_1382484127.52628' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next5127
  for_handlers5126:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next5127
    eq $P5024, .CONTROL_LOOP_REDO, for_redo5128
  for_done5129:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2164_else5130 
.annotate 'line', 2117
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2165_end5133 
.annotate 'line', 2118
.annotate 'line', 2119
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2165_end5133:
    set $P5035, $P5029
    goto if2164_end5131
  if2164_else5130:
.annotate 'line', 2122
.annotate 'line', 2123
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2164_end5131:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1382484127.52628") :anon :lex :outer("cuid_469_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2111
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2112
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2163_end5125 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2163_end5125:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1382484127.52628") :anon :lex :outer("cuid_467_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2127
    .lex "$name", $P101 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5144
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback5144:
    set fb_tmp_364, $P5002
    repr_defined $I5002, fb_tmp_364
    unless $I5002 goto if2170_else5142 
    set $P5004, fb_tmp_364["sigil"]
    set $P5006, $P5004
    goto if2170_end5143
  if2170_else5142:
    null $P5005
    set $P5006, $P5005
  if2170_end5143:
    unless_null $P5006, vivi_21715145
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_21715145:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2169_else5140 
    set $S5004, "list"
    goto if2169_end5141
  if2169_else5140:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5150
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  fallback5150:
    set fb_tmp_365, $P5008
    repr_defined $I5004, fb_tmp_365
    unless $I5004 goto if2173_else5148 
    set $P5010, fb_tmp_365["sigil"]
    set $P5012, $P5010
    goto if2173_end5149
  if2173_else5148:
    null $P5011
    set $P5012, $P5011
  if2173_end5149:
    unless_null $P5012, vivi_21745151
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_21745151:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2172_else5146 
    set $S5003, "hash"
    goto if2172_end5147
  if2172_else5146:
    set $S5003, "item"
  if2172_end5147:
    set $S5004, $S5003
  if2169_end5141:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2131
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5154
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  fallback5154:
    set fb_tmp_366, $P5016
    repr_defined $I5005, fb_tmp_366
    unless $I5005 goto if2175_else5152 
    set $P5018, fb_tmp_366["semilist"]
    set $P5020, $P5018
    goto if2175_end5153
  if2175_else5152:
    null $P5019
    set $P5020, $P5019
  if2175_end5153:
    unless_null $P5020, vivi_21765155
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_21765155:
    $P5022 = $P5020."ast"()
    $P5023 = $P5015."new"($P5022, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1382484127.52628") :anon :lex :outer("cuid_467_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2137
    .lex "$name", $P101 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2138
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback5182
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5006, $P5007
    set fb_tmp_370, $P5006
    repr_defined $I5002, fb_tmp_370
    unless $I5002 goto if2191_else5183 
    set $P5008, fb_tmp_370["$IN_DECL"]
    set $P5010, $P5008
    goto if2191_end5184
  if2191_else5183:
    null $P5009
    set $P5010, $P5009
  if2191_end5184:
    unless_null $P5010, vivi_21925185
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_21925185:
    unless_null $P5010, vivi_21935186
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_21935186:
    set $P5005, $P5010
  fallback5182:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2190_end5181 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2190_end5181:
    set $I5006, $I5004
    if $I5004 goto unless2189_end5179 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2189_end5179:
    set $I5008, $I5006
    if $I5006 goto unless2188_end5177 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2188_end5177:
    set $I5011, $I5008
    if $I5008 goto unless2187_end5175 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5189
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  fallback5189:
    set fb_tmp_371, $P5013
    repr_defined $I5010, fb_tmp_371
    unless $I5010 goto if2194_else5187 
    set $P5015, fb_tmp_371["twigil"]
    set $P5017, $P5015
    goto if2194_end5188
  if2194_else5187:
    null $P5016
    set $P5017, $P5016
  if2194_end5188:
    unless_null $P5017, vivi_21955190
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_21955190:
    set $S5006, $P5017
    iseq $I5009, $S5006, "?"
    set $I5011, $I5009
  unless2187_end5175:
    box $P5029, $I5011
    set $P5028, $P5029
    if $I5011 goto unless2186_end5173 
.annotate 'line', 2140
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback5191
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set fb_tmp_372, $P5020
    repr_defined $I5012, fb_tmp_372
    unless $I5012 goto if2196_else5192 
    set $P5022, fb_tmp_372["$W"]
    set $P5024, $P5022
    goto if2196_end5193
  if2196_else5192:
    null $P5023
    set $P5024, $P5023
  if2196_end5193:
    unless_null $P5024, vivi_21975194
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_21975194:
    unless_null $P5024, vivi_21985195
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_21985195:
    set $P5019, $P5024
  fallback5191:
    $P5027 = $P5019."is_lexical"($P101)
    set $P5028, $P5027
  unless2186_end5173:
    unless $P5028 goto if2185_else5170 
.annotate 'line', 2141
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5031 = $P5030."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5031
    set $P5035, $P5031
    goto if2185_end5171
  if2185_else5170:
.annotate 'line', 2143
.annotate 'line', 2144
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5034 = $P5033."panic"($S5007)
    set $P5035, $P5034
  if2185_end5171:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_280_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2151
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_373 
    unless_null _lex_param_1, fallback5198
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5198:
    set fb_tmp_373, _lex_param_1
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if2199_else5196 
    set $P5002, fb_tmp_373["package_def"]
    set $P5004, $P5002
    goto if2199_end5197
  if2199_else5196:
    null $P5003
    set $P5004, $P5003
  if2199_end5197:
    unless_null $P5004, vivi_22005199
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22005199:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_281_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_374 
    unless_null _lex_param_1, fallback5202
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5202:
    set fb_tmp_374, _lex_param_1
    repr_defined $I5001, fb_tmp_374
    unless $I5001 goto if2201_else5200 
    set $P5002, fb_tmp_374["package_def"]
    set $P5004, $P5002
    goto if2201_end5201
  if2201_else5200:
    null $P5003
    set $P5004, $P5003
  if2201_end5201:
    unless_null $P5004, vivi_22025203
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22025203:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_282_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2153
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_375 
    unless_null _lex_param_1, fallback5206
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5206:
    set fb_tmp_375, _lex_param_1
    repr_defined $I5001, fb_tmp_375
    unless $I5001 goto if2203_else5204 
    set $P5002, fb_tmp_375["package_def"]
    set $P5004, $P5002
    goto if2203_end5205
  if2203_else5204:
    null $P5003
    set $P5004, $P5003
  if2203_end5205:
    unless_null $P5004, vivi_22045207
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22045207:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_283_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_376 
    unless_null _lex_param_1, fallback5210
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5210:
    set fb_tmp_376, _lex_param_1
    repr_defined $I5001, fb_tmp_376
    unless $I5001 goto if2205_else5208 
    set $P5002, fb_tmp_376["package_def"]
    set $P5004, $P5002
    goto if2205_end5209
  if2205_else5208:
    null $P5003
    set $P5004, $P5003
  if2205_end5209:
    unless_null $P5004, vivi_22065211
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22065211:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_284_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2155
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_377 
    unless_null _lex_param_1, fallback5214
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5214:
    set fb_tmp_377, _lex_param_1
    repr_defined $I5001, fb_tmp_377
    unless $I5001 goto if2207_else5212 
    set $P5002, fb_tmp_377["package_def"]
    set $P5004, $P5002
    goto if2207_end5213
  if2207_else5212:
    null $P5003
    set $P5004, $P5003
  if2207_end5213:
    unless_null $P5004, vivi_22085215
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22085215:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_285_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_378 
    unless_null _lex_param_1, fallback5218
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5218:
    set fb_tmp_378, _lex_param_1
    repr_defined $I5001, fb_tmp_378
    unless $I5001 goto if2209_else5216 
    set $P5002, fb_tmp_378["package_def"]
    set $P5004, $P5002
    goto if2209_end5217
  if2209_else5216:
    null $P5003
    set $P5004, $P5003
  if2209_end5217:
    unless_null $P5004, vivi_22105219
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_22105219:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_286_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2158
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2161
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5220
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_379, $P5004
    repr_defined $I5001, fb_tmp_379
    unless $I5001 goto if2211_else5221 
    set $P5006, fb_tmp_379["$W"]
    set $P5008, $P5006
    goto if2211_end5222
  if2211_else5221:
    null $P5007
    set $P5008, $P5007
  if2211_end5222:
    unless_null $P5008, vivi_22125223
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_22125223:
    unless_null $P5008, vivi_22135224
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_22135224:
    set $P5003, $P5008
  fallback5220:
    unless_null _lex_param_1, fallback5229
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5011
  fallback5229:
    set fb_tmp_381, _lex_param_1
    repr_defined $I5003, fb_tmp_381
    unless $I5003 goto if2215_else5227 
    set $P5012, fb_tmp_381["metaclass"]
    set $P5014, $P5012
    goto if2215_end5228
  if2215_else5227:
    null $P5013
    set $P5014, $P5013
  if2215_end5228:
    unless_null $P5014, vivi_22165230
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_22165230:
    set fb_tmp_380, $P5014
    repr_defined $I5002, fb_tmp_380
    unless $I5002 goto if2214_else5225 
    set $P5016, fb_tmp_380["identifier"]
    set $P5018, $P5016
    goto if2214_end5226
  if2214_else5225:
    null $P5017
    set $P5018, $P5017
  if2214_end5226:
    unless_null $P5018, vivi_22175231
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_22175231:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2162
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback5232
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_382, $P5022
    repr_defined $I5004, fb_tmp_382
    unless $I5004 goto if2218_else5233 
    set $P5024, fb_tmp_382["$W"]
    set $P5026, $P5024
    goto if2218_end5234
  if2218_else5233:
    null $P5025
    set $P5026, $P5025
  if2218_end5234:
    unless_null $P5026, vivi_22195235
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_22195235:
    unless_null $P5026, vivi_22205236
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_22205236:
    set $P5021, $P5026
  fallback5232:
    unless_null _lex_param_1, fallback5239
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5029
  fallback5239:
    set fb_tmp_383, _lex_param_1
    repr_defined $I5005, fb_tmp_383
    unless $I5005 goto if2221_else5237 
    set $P5030, fb_tmp_383["name"]
    set $P5032, $P5030
    goto if2221_end5238
  if2221_else5237:
    null $P5031
    set $P5032, $P5031
  if2221_end5238:
    unless_null $P5032, vivi_22225240
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_22225240:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback5245
    nqp_get_sc_object $P5037, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5036, $P5037
    set fb_tmp_384, $P5036
    repr_defined $I5007, fb_tmp_384
    unless $I5007 goto if2225_else5246 
    set $P5038, fb_tmp_384["$SCOPE"]
    set $P5040, $P5038
    goto if2225_end5247
  if2225_else5246:
    null $P5039
    set $P5040, $P5039
  if2225_end5247:
    unless_null $P5040, vivi_22265248
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_22265248:
    unless_null $P5040, vivi_22275249
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_22275249:
    set $P5035, $P5040
  fallback5245:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless2224_end5244 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback5250
    nqp_get_sc_object $P5045, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5044, $P5045
    set fb_tmp_385, $P5044
    repr_defined $I5009, fb_tmp_385
    unless $I5009 goto if2228_else5251 
    set $P5046, fb_tmp_385["$SCOPE"]
    set $P5048, $P5046
    goto if2228_end5252
  if2228_else5251:
    null $P5047
    set $P5048, $P5047
  if2228_end5252:
    unless_null $P5048, vivi_22295253
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5048, $P5049
  vivi_22295253:
    unless_null $P5048, vivi_22305254
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_22305254:
    set $P5043, $P5048
  fallback5250:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless2224_end5244:
    unless $I5010 goto if2223_else5241 
.annotate 'line', 2165
.annotate 'line', 2166
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback5255
    nqp_get_sc_object $P5053, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5052, $P5053
    set fb_tmp_386, $P5052
    repr_defined $I5011, fb_tmp_386
    unless $I5011 goto if2231_else5256 
    set $P5054, fb_tmp_386["$W"]
    set $P5056, $P5054
    goto if2231_end5257
  if2231_else5256:
    null $P5055
    set $P5056, $P5055
  if2231_end5257:
    unless_null $P5056, vivi_22325258
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5056, $P5057
  vivi_22325258:
    unless_null $P5056, vivi_22335259
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_22335259:
    set $P5051, $P5056
  fallback5255:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback5260
    nqp_get_sc_object $P5061, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5060, $P5061
    set fb_tmp_387, $P5060
    repr_defined $I5012, fb_tmp_387
    unless $I5012 goto if2234_else5261 
    set $P5062, fb_tmp_387["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if2234_end5262
  if2234_else5261:
    null $P5063
    set $P5064, $P5063
  if2234_end5262:
    unless_null $P5064, vivi_22355263
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5064, $P5065
  vivi_22355263:
    unless_null $P5064, vivi_22365264
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_22365264:
    set $P5059, $P5064
  fallback5260:
    unless_null _lex_param_1, fallback5269
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5067
  fallback5269:
    set fb_tmp_389, _lex_param_1
    repr_defined $I5014, fb_tmp_389
    unless $I5014 goto if2238_else5267 
    set $P5068, fb_tmp_389["name"]
    set $P5070, $P5068
    goto if2238_end5268
  if2238_else5267:
    null $P5069
    set $P5070, $P5069
  if2238_end5268:
    unless_null $P5070, vivi_22395270
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5070, $P5071
  vivi_22395270:
    set fb_tmp_388, $P5070
    repr_defined $I5013, fb_tmp_388
    unless $I5013 goto if2237_else5265 
    set $P5072, fb_tmp_388["identifier"]
    set $P5074, $P5072
    goto if2237_end5266
  if2237_else5265:
    null $P5073
    set $P5074, $P5073
  if2237_end5266:
    unless_null $P5074, vivi_22405271
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5074, $P5075
  vivi_22405271:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback5278
    nqp_get_sc_object $P5076, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5076
  fallback5278:
    set fb_tmp_391, _lex_param_1
    repr_defined $I5017, fb_tmp_391
    unless $I5017 goto if2243_else5276 
    set $P5077, fb_tmp_391["name"]
    set $P5079, $P5077
    goto if2243_end5277
  if2243_else5276:
    null $P5078
    set $P5079, $P5078
  if2243_end5277:
    unless_null $P5079, vivi_22445279
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5079, $P5080
  vivi_22445279:
    set fb_tmp_390, $P5079
    repr_defined $I5016, fb_tmp_390
    unless $I5016 goto if2242_else5274 
    set $P5081, fb_tmp_390["identifier"]
    set $P5083, $P5081
    goto if2242_end5275
  if2242_else5274:
    null $P5082
    set $P5083, $P5082
  if2242_end5275:
    unless_null $P5083, vivi_22455280
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5083, $P5084
  vivi_22455280:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if2241_end5273 
.annotate 'line', 2167
.annotate 'line', 2168
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback5281
    nqp_get_sc_object $P5087, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5086, $P5087
    set fb_tmp_392, $P5086
    repr_defined $I5018, fb_tmp_392
    unless $I5018 goto if2246_else5282 
    set $P5088, fb_tmp_392["$W"]
    set $P5090, $P5088
    goto if2246_end5283
  if2246_else5282:
    null $P5089
    set $P5090, $P5089
  if2246_end5283:
    unless_null $P5090, vivi_22475284
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5090, $P5091
  vivi_22475284:
    unless_null $P5090, vivi_22485285
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_22485285:
    set $P5085, $P5090
  fallback5281:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback5286
    nqp_get_sc_object $P5095, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5094, $P5095
    set fb_tmp_393, $P5094
    repr_defined $I5019, fb_tmp_393
    unless $I5019 goto if2249_else5287 
    set $P5096, fb_tmp_393["$W"]
    set $P5098, $P5096
    goto if2249_end5288
  if2249_else5287:
    null $P5097
    set $P5098, $P5097
  if2249_end5288:
    unless_null $P5098, vivi_22505289
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5098, $P5099
  vivi_22505289:
    unless_null $P5098, vivi_22515290
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_22515290:
    set $P5093, $P5098
  fallback5286:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback5297
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5102
  fallback5297:
    set fb_tmp_396, _lex_param_1
    repr_defined $I5022, fb_tmp_396
    unless $I5022 goto if2254_else5295 
    set $P5103, fb_tmp_396["name"]
    set $P5105, $P5103
    goto if2254_end5296
  if2254_else5295:
    null $P5104
    set $P5105, $P5104
  if2254_end5296:
    unless_null $P5105, vivi_22555298
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5105, $P5106
  vivi_22555298:
    set fb_tmp_395, $P5105
    repr_defined $I5021, fb_tmp_395
    unless $I5021 goto if2253_else5293 
    set $P5107, fb_tmp_395["identifier"]
    set $P5109, $P5107
    goto if2253_end5294
  if2253_else5293:
    null $P5108
    set $P5109, $P5108
  if2253_end5294:
    unless_null $P5109, vivi_22565299
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5109, $P5110
  vivi_22565299:
    set fb_tmp_394, $P5109
    repr_defined $I5020, fb_tmp_394
    unless $I5020 goto if2252_else5291 
    set $P5111, fb_tmp_394[0]
    set $P5113, $P5111
    goto if2252_end5292
  if2252_else5291:
    null $P5112
    set $P5113, $P5112
  if2252_end5292:
    unless_null $P5113, vivi_22575300
    nqp_get_sc_object $P5114, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5113, $P5114
  vivi_22575300:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if2241_end5273:
    goto if2223_end5242
  if2223_else5241:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback5303
    nqp_get_sc_object $P5120, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5119, $P5120
    set fb_tmp_397, $P5119
    repr_defined $I5024, fb_tmp_397
    unless $I5024 goto if2259_else5304 
    set $P5121, fb_tmp_397["$SCOPE"]
    set $P5123, $P5121
    goto if2259_end5305
  if2259_else5304:
    null $P5122
    set $P5123, $P5122
  if2259_end5305:
    unless_null $P5123, vivi_22605306
    nqp_get_sc_object $P5124, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5123, $P5124
  vivi_22605306:
    unless_null $P5123, vivi_22615307
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_22615307:
    set $P5118, $P5123
  fallback5303:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if2258_else5301 
.annotate 'line', 2171
    unless_null _lex_param_1, fallback5314
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5126
  fallback5314:
    set fb_tmp_399, _lex_param_1
    repr_defined $I5027, fb_tmp_399
    unless $I5027 goto if2264_else5312 
    set $P5127, fb_tmp_399["name"]
    set $P5129, $P5127
    goto if2264_end5313
  if2264_else5312:
    null $P5128
    set $P5129, $P5128
  if2264_end5313:
    unless_null $P5129, vivi_22655315
    nqp_get_sc_object $P5130, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5129, $P5130
  vivi_22655315:
    set fb_tmp_398, $P5129
    repr_defined $I5026, fb_tmp_398
    unless $I5026 goto if2263_else5310 
    set $P5131, fb_tmp_398["identifier"]
    set $P5133, $P5131
    goto if2263_end5311
  if2263_else5310:
    null $P5132
    set $P5133, $P5132
  if2263_end5311:
    unless_null $P5133, vivi_22665316
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5133, $P5134
  vivi_22665316:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if2262_end5309 
.annotate 'line', 2172
.annotate 'line', 2173
    unless_null _lex_param_1, fallback5319
    nqp_get_sc_object $P5135, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5135
  fallback5319:
    set fb_tmp_400, _lex_param_1
    repr_defined $I5028, fb_tmp_400
    unless $I5028 goto if2267_else5317 
    set $P5136, fb_tmp_400["name"]
    set $P5138, $P5136
    goto if2267_end5318
  if2267_else5317:
    null $P5137
    set $P5138, $P5137
  if2267_end5318:
    unless_null $P5138, vivi_22685320
    nqp_get_sc_object $P5139, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5138, $P5139
  vivi_22685320:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if2262_end5309:
.annotate 'line', 2175
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback5321
    nqp_get_sc_object $P5144, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5143, $P5144
    set fb_tmp_401, $P5143
    repr_defined $I5029, fb_tmp_401
    unless $I5029 goto if2269_else5322 
    set $P5145, fb_tmp_401["$W"]
    set $P5147, $P5145
    goto if2269_end5323
  if2269_else5322:
    null $P5146
    set $P5147, $P5146
  if2269_end5323:
    unless_null $P5147, vivi_22705324
    nqp_get_sc_object $P5148, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5147, $P5148
  vivi_22705324:
    unless_null $P5147, vivi_22715325
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_22715325:
    set $P5142, $P5147
  fallback5321:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback5326
    nqp_get_sc_object $P5152, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5151, $P5152
    set fb_tmp_402, $P5151
    repr_defined $I5030, fb_tmp_402
    unless $I5030 goto if2272_else5327 
    set $P5153, fb_tmp_402["$W"]
    set $P5155, $P5153
    goto if2272_end5328
  if2272_else5327:
    null $P5154
    set $P5155, $P5154
  if2272_end5328:
    unless_null $P5155, vivi_22735329
    nqp_get_sc_object $P5156, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5155, $P5156
  vivi_22735329:
    unless_null $P5155, vivi_22745330
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_22745330:
    set $P5150, $P5155
  fallback5326:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback5337
    nqp_get_sc_object $P5159, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5159
  fallback5337:
    set fb_tmp_405, _lex_param_1
    repr_defined $I5033, fb_tmp_405
    unless $I5033 goto if2277_else5335 
    set $P5160, fb_tmp_405["name"]
    set $P5162, $P5160
    goto if2277_end5336
  if2277_else5335:
    null $P5161
    set $P5162, $P5161
  if2277_end5336:
    unless_null $P5162, vivi_22785338
    nqp_get_sc_object $P5163, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5162, $P5163
  vivi_22785338:
    set fb_tmp_404, $P5162
    repr_defined $I5032, fb_tmp_404
    unless $I5032 goto if2276_else5333 
    set $P5164, fb_tmp_404["identifier"]
    set $P5166, $P5164
    goto if2276_end5334
  if2276_else5333:
    null $P5165
    set $P5166, $P5165
  if2276_end5334:
    unless_null $P5166, vivi_22795339
    nqp_get_sc_object $P5167, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5166, $P5167
  vivi_22795339:
    set fb_tmp_403, $P5166
    repr_defined $I5031, fb_tmp_403
    unless $I5031 goto if2275_else5331 
    set $P5168, fb_tmp_403[0]
    set $P5170, $P5168
    goto if2275_end5332
  if2275_else5331:
    null $P5169
    set $P5170, $P5169
  if2275_end5332:
    unless_null $P5170, vivi_22805340
    nqp_get_sc_object $P5171, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5170, $P5171
  vivi_22805340:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if2258_end5302
  if2258_else5301:
.annotate 'line', 2177
.annotate 'line', 2178
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback5341
    nqp_get_sc_object $P5176, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5175, $P5176
    set fb_tmp_406, $P5175
    repr_defined $I5034, fb_tmp_406
    unless $I5034 goto if2281_else5342 
    set $P5177, fb_tmp_406["$SCOPE"]
    set $P5179, $P5177
    goto if2281_end5343
  if2281_else5342:
    null $P5178
    set $P5179, $P5178
  if2281_end5343:
    unless_null $P5179, vivi_22825344
    nqp_get_sc_object $P5180, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5179, $P5180
  vivi_22825344:
    unless_null $P5179, vivi_22835345
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_22835345:
    set $P5174, $P5179
  fallback5341:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if2258_end5302:
  if2223_end5242:
.annotate 'line', 2181
    nqp_get_sc_object $P5184, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5185 = $P5184."new"()
    $P5186 = _lex_param_1."!make"($P5185)
    .return ($P5186) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_287_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2184
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5165 = 'cuid_474_1382484127.52628' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_475_1382484127.52628' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_476_1382484127.52628' 
    capture_lex $P5165 
    .const 'Sub' $P5165 = 'cuid_477_1382484127.52628' 
    capture_lex $P5165 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_432 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    unless_null _lex_param_1, fallback5350
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5350:
    set fb_tmp_408, _lex_param_1
    repr_defined $I5002, fb_tmp_408
    unless $I5002 goto if2285_else5348 
    set $P5007, fb_tmp_408["name"]
    set $P5009, $P5007
    goto if2285_end5349
  if2285_else5348:
    null $P5008
    set $P5009, $P5008
  if2285_end5349:
    unless_null $P5009, vivi_22865351
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_22865351:
    set fb_tmp_407, $P5009
    repr_defined $I5001, fb_tmp_407
    unless $I5001 goto if2284_else5346 
    set $P5011, fb_tmp_407["identifier"]
    set $P5013, $P5011
    goto if2284_end5347
  if2284_else5346:
    null $P5012
    set $P5013, $P5012
  if2284_end5347:
    unless_null $P5013, vivi_22875352
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_22875352:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2187
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback5355
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_45, $P5018
    set fb_tmp_410, pkg_viv_tmp_45
    repr_defined $I5004, fb_tmp_410
    unless $I5004 goto if2289_else5356 
    set $P5020, fb_tmp_410["%HOW"]
    set $P5022, $P5020
    goto if2289_end5357
  if2289_else5356:
    null $P5021
    set $P5022, $P5021
  if2289_end5357:
    unless_null $P5022, vivi_22905358
    new $P5023, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5023
    set $P5022, $P5023
  vivi_22905358:
    unless_null $P5022, vivi_22915359
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_22915359:
    set $P5017, $P5022
  fallback5355:
    set fb_tmp_409, $P5017
    repr_defined $I5003, fb_tmp_409
    unless $I5003 goto if2288_else5353 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback5360
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5027, $P5028
    set fb_tmp_411, $P5027
    repr_defined $I5005, fb_tmp_411
    unless $I5005 goto if2292_else5361 
    set $P5029, fb_tmp_411["$PKGDECL"]
    set $P5031, $P5029
    goto if2292_end5362
  if2292_else5361:
    null $P5030
    set $P5031, $P5030
  if2292_end5362:
    unless_null $P5031, vivi_22935363
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_22935363:
    unless_null $P5031, vivi_22945364
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_22945364:
    set $P5026, $P5031
  fallback5360:
    set $S5002, $P5026
    set $P5025, fb_tmp_409[$S5002]
    set $P5035, $P5025
    goto if2288_end5354
  if2288_else5353:
    null $P5034
    set $P5035, $P5034
  if2288_end5354:
    unless_null $P5035, vivi_22955365
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_22955365:
    set $P103, $P5035
    unless_null _lex_param_1, fallback5370
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5037
  fallback5370:
    set fb_tmp_412, _lex_param_1
    repr_defined $I5006, fb_tmp_412
    unless $I5006 goto if2297_else5368 
    set $P5038, fb_tmp_412["blockoid"]
    set $P5040, $P5038
    goto if2297_end5369
  if2297_else5368:
    null $P5039
    set $P5040, $P5039
  if2297_end5369:
    unless_null $P5040, vivi_22985371
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_22985371:
    unless $P5040 goto if2296_else5366 
.annotate 'line', 2192
.annotate 'line', 2193
    unless_null _lex_param_1, fallback5374
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5042
  fallback5374:
    set fb_tmp_413, _lex_param_1
    repr_defined $I5007, fb_tmp_413
    unless $I5007 goto if2299_else5372 
    set $P5043, fb_tmp_413["blockoid"]
    set $P5045, $P5043
    goto if2299_end5373
  if2299_else5372:
    null $P5044
    set $P5045, $P5044
  if2299_end5373:
    unless_null $P5045, vivi_23005375
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_23005375:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if2296_end5367
  if2296_else5366:
.annotate 'line', 2195
.annotate 'line', 2196
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5376
    nqp_get_sc_object $P5050, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5049, $P5050
    set fb_tmp_414, $P5049
    repr_defined $I5008, fb_tmp_414
    unless $I5008 goto if2301_else5377 
    set $P5051, fb_tmp_414["$W"]
    set $P5053, $P5051
    goto if2301_end5378
  if2301_else5377:
    null $P5052
    set $P5053, $P5052
  if2301_end5378:
    unless_null $P5053, vivi_23025379
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5053, $P5054
  vivi_23025379:
    unless_null $P5053, vivi_23035380
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_23035380:
    set $P5048, $P5053
  fallback5376:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2197
    unless_null _lex_param_1, fallback5383
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5057
  fallback5383:
    set fb_tmp_415, _lex_param_1
    repr_defined $I5009, fb_tmp_415
    unless $I5009 goto if2304_else5381 
    set $P5058, fb_tmp_415["statementlist"]
    set $P5060, $P5058
    goto if2304_end5382
  if2304_else5381:
    null $P5059
    set $P5060, $P5059
  if2304_end5382:
    unless_null $P5060, vivi_23055384
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5060, $P5061
  vivi_23055384:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if2296_end5367:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if2307_end5388 
.annotate 'line', 2204
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if2307_end5388:
    unless $P5065 goto if2306_else5385 
    .const 'Sub' $P5067 = 'cuid_474_1382484127.52628' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if2306_end5386
  if2306_else5385:
.annotate 'line', 2219
.annotate 'line', 2220
    $P5069 = $P104."blocktype"("immediate")
  if2306_end5386:
    unless_null _lex_param_1, fallback5419
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5070
  fallback5419:
    set fb_tmp_421, _lex_param_1
    repr_defined $I5011, fb_tmp_421
    unless $I5011 goto if2322_else5417 
    set $P5071, fb_tmp_421["parent"]
    set $P5073, $P5071
    goto if2322_end5418
  if2322_else5417:
    null $P5072
    set $P5073, $P5072
  if2322_end5418:
    unless_null $P5073, vivi_23235420
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5073, $P5074
  vivi_23235420:
    unless $P5073 goto if2321_else5415 
    .const 'Sub' $P5075 = 'cuid_475_1382484127.52628' 
    capture_lex $P5075
    $P5076 = $P5075()
    goto if2321_end5416
  if2321_else5415:
    can $I5012, $P103, "set_default_parent"
    box $P5080, $I5012
    set $P5079, $P5080
    unless $I5012 goto if2342_end5452 
    .const 'Sub' $P5077 = 'cuid_476_1382484127.52628' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
  if2342_end5452:
  if2321_end5416:
    unless_null _lex_param_1, fallback5479
    nqp_get_sc_object $P5081, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5081
  fallback5479:
    set fb_tmp_432, _lex_param_1
    repr_defined $I5013, fb_tmp_432
    unless $I5013 goto if2357_else5477 
    set $P5082, fb_tmp_432["role"]
    set $P5084, $P5082
    goto if2357_end5478
  if2357_else5477:
    null $P5083
    set $P5084, $P5083
  if2357_end5478:
    unless_null $P5084, vivi_23585480
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5084, $P5085
  vivi_23585480:
    unless $P5084 goto if2356_end5476 
.annotate 'line', 2245
    unless_null _lex_param_1, fallback5483
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5089
  fallback5483:
    set fb_tmp_433, _lex_param_1
    repr_defined $I5014, fb_tmp_433
    unless $I5014 goto if2359_else5481 
    set $P5090, fb_tmp_433["role"]
    set $P5092, $P5090
    goto if2359_end5482
  if2359_else5481:
    null $P5091
    set $P5092, $P5091
  if2359_end5482:
    unless_null $P5092, vivi_23605484
    nqp_get_sc_object $P5093, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5092, $P5093
  vivi_23605484:
    set $P5086, $P5092
    iter $P5088, $P5092
  for_next5507:
    unless $P5088, for_done5509
    shift $P5095, $P5088
  for_redo5508:
    .const 'Sub' $P5094 = 'cuid_477_1382484127.52628' 
    capture_lex $P5094
    $P5086 = $P5094($P5095)
    goto for_next5507
  for_done5509:
  if2356_end5476:
.annotate 'line', 2263
    find_dynamic_lex $P5096, "$*W"
    unless_null $P5096, fallback5510
    nqp_get_sc_object $P5098, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5097, $P5098
    set fb_tmp_438, $P5097
    repr_defined $I5015, fb_tmp_438
    unless $I5015 goto if2375_else5511 
    set $P5099, fb_tmp_438["$W"]
    set $P5101, $P5099
    goto if2375_end5512
  if2375_else5511:
    null $P5100
    set $P5101, $P5100
  if2375_end5512:
    unless_null $P5101, vivi_23765513
    nqp_get_sc_object $P5102, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5101, $P5102
  vivi_23765513:
    unless_null $P5101, vivi_23775514
    die "Contextual $*W not found"
    box $P5103, "Contextual $*W not found"
    set $P5101, $P5103
  vivi_23775514:
    set $P5096, $P5101
  fallback5510:
    find_dynamic_lex $P5104, "$*PACKAGE"
    unless_null $P5104, fallback5515
    nqp_get_sc_object $P5106, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5105, $P5106
    set fb_tmp_439, $P5105
    repr_defined $I5016, fb_tmp_439
    unless $I5016 goto if2378_else5516 
    set $P5107, fb_tmp_439["$PACKAGE"]
    set $P5109, $P5107
    goto if2378_end5517
  if2378_else5516:
    null $P5108
    set $P5109, $P5108
  if2378_end5517:
    unless_null $P5109, vivi_23795518
    nqp_get_sc_object $P5110, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5109, $P5110
  vivi_23795518:
    unless_null $P5109, vivi_23805519
    die "Contextual $*PACKAGE not found"
    box $P5111, "Contextual $*PACKAGE not found"
    set $P5109, $P5111
  vivi_23805519:
    set $P5104, $P5109
  fallback5515:
    $P5096."pkg_compose"($P5104)
    find_dynamic_lex $P5112, "$*PKGDECL"
    unless_null $P5112, fallback5524
    nqp_get_sc_object $P5114, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5113, $P5114
    set fb_tmp_440, $P5113
    repr_defined $I5018, fb_tmp_440
    unless $I5018 goto if2383_else5525 
    set $P5115, fb_tmp_440["$PKGDECL"]
    set $P5117, $P5115
    goto if2383_end5526
  if2383_else5525:
    null $P5116
    set $P5117, $P5116
  if2383_end5526:
    unless_null $P5117, vivi_23845527
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5117, $P5118
  vivi_23845527:
    unless_null $P5117, vivi_23855528
    die "Contextual $*PKGDECL not found"
    box $P5119, "Contextual $*PKGDECL not found"
    set $P5117, $P5119
  vivi_23855528:
    set $P5112, $P5117
  fallback5524:
    set $S5003, $P5112
    iseq $I5017, $S5003, "grammar"
    set $I5021, $I5017
    unless $I5017 goto if2382_end5523 
    find_dynamic_lex $P5120, "$*PACKAGE"
    unless_null $P5120, fallback5529
    nqp_get_sc_object $P5122, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5121, $P5122
    set fb_tmp_441, $P5121
    repr_defined $I5020, fb_tmp_441
    unless $I5020 goto if2386_else5530 
    set $P5123, fb_tmp_441["$PACKAGE"]
    set $P5125, $P5123
    goto if2386_end5531
  if2386_else5530:
    null $P5124
    set $P5125, $P5124
  if2386_end5531:
    unless_null $P5125, vivi_23875532
    nqp_get_sc_object $P5126, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5125, $P5126
  vivi_23875532:
    unless_null $P5125, vivi_23885533
    die "Contextual $*PACKAGE not found"
    box $P5127, "Contextual $*PACKAGE not found"
    set $P5125, $P5127
  vivi_23885533:
    set $P5120, $P5125
  fallback5529:
    can $I5019, $P5120, "!precompute_nfas"
    set $I5021, $I5019
  if2382_end5523:
    unless $I5021 goto if2381_end5521 
.annotate 'line', 2266
.annotate 'line', 2267
    find_dynamic_lex $P5128, "$*PACKAGE"
    unless_null $P5128, fallback5534
    nqp_get_sc_object $P5130, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5129, $P5130
    set fb_tmp_442, $P5129
    repr_defined $I5022, fb_tmp_442
    unless $I5022 goto if2389_else5535 
    set $P5131, fb_tmp_442["$PACKAGE"]
    set $P5133, $P5131
    goto if2389_end5536
  if2389_else5535:
    null $P5132
    set $P5133, $P5132
  if2389_end5536:
    unless_null $P5133, vivi_23905537
    nqp_get_sc_object $P5134, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5133, $P5134
  vivi_23905537:
    unless_null $P5133, vivi_23915538
    die "Contextual $*PACKAGE not found"
    box $P5135, "Contextual $*PACKAGE not found"
    set $P5133, $P5135
  vivi_23915538:
    set $P5128, $P5133
  fallback5534:
    $P5136 = $P5128."!precompute_nfas"()
  if2381_end5521:
    unless_null _lex_param_1, fallback5543
    nqp_get_sc_object $P5137, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5137
  fallback5543:
    set fb_tmp_443, _lex_param_1
    repr_defined $I5023, fb_tmp_443
    unless $I5023 goto if2393_else5541 
    set $P5138, fb_tmp_443["export"]
    set $P5140, $P5138
    goto if2393_end5542
  if2393_else5541:
    null $P5139
    set $P5140, $P5139
  if2393_end5542:
    unless_null $P5140, vivi_23945544
    nqp_get_sc_object $P5141, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5140, $P5141
  vivi_23945544:
    unless $P5140 goto if2392_end5540 
.annotate 'line', 2271
    find_dynamic_lex $P5144, "$*EXPORT"
    unless_null $P5144, fallback5547
    nqp_get_sc_object $P5146, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5145, $P5146
    set fb_tmp_445, $P5145
    repr_defined $I5025, fb_tmp_445
    unless $I5025 goto if2396_else5548 
    set $P5147, fb_tmp_445["$EXPORT"]
    set $P5149, $P5147
    goto if2396_end5549
  if2396_else5548:
    null $P5148
    set $P5149, $P5148
  if2396_end5549:
    unless_null $P5149, vivi_23975550
    nqp_get_sc_object $P5150, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5149, $P5150
  vivi_23975550:
    unless_null $P5149, vivi_23985551
    die "Contextual $*EXPORT not found"
    box $P5151, "Contextual $*EXPORT not found"
    set $P5149, $P5151
  vivi_23985551:
    set $P5144, $P5149
  fallback5547:
    get_who $P5143, $P5144
    set fb_tmp_444, $P5143
    repr_defined $I5024, fb_tmp_444
    unless $I5024 goto if2395_else5545 
    set $P5152, fb_tmp_444["DEFAULT"]
    set $P5154, $P5152
    goto if2395_end5546
  if2395_else5545:
    null $P5153
    set $P5154, $P5153
  if2395_end5546:
    unless_null $P5154, vivi_23995552
    nqp_get_sc_object $P5155, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5154, $P5155
  vivi_23995552:
    get_who $P5142, $P5154
    set $S5004, $P102
    find_dynamic_lex $P5156, "$*PACKAGE"
    unless_null $P5156, fallback5553
    nqp_get_sc_object $P5158, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5157, $P5158
    set fb_tmp_446, $P5157
    repr_defined $I5026, fb_tmp_446
    unless $I5026 goto if2400_else5554 
    set $P5159, fb_tmp_446["$PACKAGE"]
    set $P5161, $P5159
    goto if2400_end5555
  if2400_else5554:
    null $P5160
    set $P5161, $P5160
  if2400_end5555:
    unless_null $P5161, vivi_24015556
    nqp_get_sc_object $P5162, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5161, $P5162
  vivi_24015556:
    unless_null $P5161, vivi_24025557
    die "Contextual $*PACKAGE not found"
    box $P5163, "Contextual $*PACKAGE not found"
    set $P5161, $P5163
  vivi_24025557:
    set $P5156, $P5161
  fallback5553:
    set $P5142[$S5004], $P5156
  if2392_end5540:
.annotate 'line', 2275
    $P5164 = _lex_param_1."!make"($P104)
    .return ($P5164) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1382484127.52628") :anon :lex :outer("cuid_287_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2204
    .const 'Sub' $P5051 = 'cuid_473_1382484127.52628' 
    capture_lex $P5051 
    .lex "$params", $P101 
    .local pmc fb_tmp_416 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2205
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration_static")
.annotate 'line', 2206
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 2207
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5005 = $P5004."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5006 = $P5003."new"($P5005)
    set $P101, $P5006
    find_lex $P5007, "$/"
    unless_null $P5007, fallback5393
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  fallback5393:
    set fb_tmp_416, $P5007
    repr_defined $I5001, fb_tmp_416
    unless $I5001 goto if2309_else5391 
    set $P5009, fb_tmp_416["role_params"]
    set $P5011, $P5009
    goto if2309_end5392
  if2309_else5391:
    null $P5010
    set $P5011, $P5010
  if2309_end5392:
    unless_null $P5011, vivi_23105394
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_23105394:
    unless $P5011 goto if2308_end5390 
.annotate 'line', 2209
    find_lex $P5016, "$/"
    unless_null $P5016, fallback5399
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  fallback5399:
    set fb_tmp_418, $P5016
    repr_defined $I5003, fb_tmp_418
    unless $I5003 goto if2312_else5397 
    set $P5018, fb_tmp_418["role_params"]
    set $P5020, $P5018
    goto if2312_end5398
  if2312_else5397:
    null $P5019
    set $P5020, $P5019
  if2312_end5398:
    unless_null $P5020, vivi_23135400
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_23135400:
    set fb_tmp_417, $P5020
    repr_defined $I5002, fb_tmp_417
    unless $I5002 goto if2311_else5395 
    set $P5022, fb_tmp_417["variable"]
    set $P5024, $P5022
    goto if2311_end5396
  if2311_else5395:
    null $P5023
    set $P5024, $P5023
  if2311_end5396:
    unless_null $P5024, vivi_23145401
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_23145401:
    set $P5013, $P5024
    iter $P5015, $P5024
  for_next5402:
    unless $P5015, for_done5404
    shift $P5027, $P5015
  for_redo5403:
    .const 'Sub' $P5026 = 'cuid_473_1382484127.52628' 
    capture_lex $P5026
    $P5013 = $P5026($P5027)
    goto for_next5402
  for_done5404:
  if2308_end5390:
.annotate 'line', 2214
    find_lex $P5028, "$past"
    $P5028."unshift"($P101)
.annotate 'line', 2215
    find_lex $P5029, "$past"
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5031 = $P5030."new"("curlexpad" :named("op"))
    $P5029."push"($P5031)
.annotate 'line', 2216
    find_lex $P5032, "$past"
    $P5032."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2217
    find_dynamic_lex $P5033, "$*W"
    unless_null $P5033, fallback5405
    nqp_get_sc_object $P5035, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5034, $P5035
    set fb_tmp_419, $P5034
    repr_defined $I5004, fb_tmp_419
    unless $I5004 goto if2315_else5406 
    set $P5036, fb_tmp_419["$W"]
    set $P5038, $P5036
    goto if2315_end5407
  if2315_else5406:
    null $P5037
    set $P5038, $P5037
  if2315_end5407:
    unless_null $P5038, vivi_23165408
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5038, $P5039
  vivi_23165408:
    unless_null $P5038, vivi_23175409
    die "Contextual $*W not found"
    box $P5040, "Contextual $*W not found"
    set $P5038, $P5040
  vivi_23175409:
    set $P5033, $P5038
  fallback5405:
    find_dynamic_lex $P5041, "$*PACKAGE"
    unless_null $P5041, fallback5410
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5042, $P5043
    set fb_tmp_420, $P5042
    repr_defined $I5005, fb_tmp_420
    unless $I5005 goto if2318_else5411 
    set $P5044, fb_tmp_420["$PACKAGE"]
    set $P5046, $P5044
    goto if2318_end5412
  if2318_else5411:
    null $P5045
    set $P5046, $P5045
  if2318_end5412:
    unless_null $P5046, vivi_23195413
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  vivi_23195413:
    unless_null $P5046, vivi_23205414
    die "Contextual $*PACKAGE not found"
    box $P5048, "Contextual $*PACKAGE not found"
    set $P5046, $P5048
  vivi_23205414:
    set $P5041, $P5046
  fallback5410:
    find_lex $P5049, "$past"
    $P5050 = $P5033."pkg_set_body_block"($P5041, $P5049)
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1382484127.52628") :anon :lex :outer("cuid_474_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2210
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2211
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1382484127.52628") :anon :lex :outer("cuid_287_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2224
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_422 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_23325434
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2227
.annotate 'line', 2228
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5421
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_422, $P5004
    repr_defined $I5001, fb_tmp_422
    unless $I5001 goto if2324_else5422 
    set $P5006, fb_tmp_422["$W"]
    set $P5008, $P5006
    goto if2324_end5423
  if2324_else5422:
    null $P5007
    set $P5008, $P5007
  if2324_end5423:
    unless_null $P5008, vivi_23255424
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_23255424:
    unless_null $P5008, vivi_23265425
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23265425:
    set $P5003, $P5008
  fallback5421:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback5430
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  fallback5430:
    set fb_tmp_424, $P5012
    repr_defined $I5003, fb_tmp_424
    unless $I5003 goto if2328_else5428 
    set $P5014, fb_tmp_424["parent"]
    set $P5016, $P5014
    goto if2328_end5429
  if2328_else5428:
    null $P5015
    set $P5016, $P5015
  if2328_end5429:
    unless_null $P5016, vivi_23295431
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_23295431:
    set fb_tmp_423, $P5016
    repr_defined $I5002, fb_tmp_423
    unless $I5002 goto if2327_else5426 
    set $P5018, fb_tmp_423["identifier"]
    set $P5020, $P5018
    goto if2327_end5427
  if2327_else5426:
    null $P5019
    set $P5020, $P5019
  if2327_end5427:
    unless_null $P5020, vivi_23305432
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_23305432:
    repr_clone $P5011, $P5020
    $P5022 = $P5003."find_sym"($P5011)
    set $P101, $P5022
    box $P5023, 1
    set $P102, $P5023
    set $P5025, $P102
    pop_eh 
    goto skip_handler_23315433
  catch_handler_23325434:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_23315433
  skip_handler_23315433:
    unless $P102 goto if2333_else5435 
.annotate 'line', 2231
.annotate 'line', 2232
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback5437
    nqp_get_sc_object $P5028, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5027, $P5028
    set fb_tmp_425, $P5027
    repr_defined $I5004, fb_tmp_425
    unless $I5004 goto if2334_else5438 
    set $P5029, fb_tmp_425["$W"]
    set $P5031, $P5029
    goto if2334_end5439
  if2334_else5438:
    null $P5030
    set $P5031, $P5030
  if2334_end5439:
    unless_null $P5031, vivi_23355440
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_23355440:
    unless_null $P5031, vivi_23365441
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_23365441:
    set $P5026, $P5031
  fallback5437:
    find_dynamic_lex $P5034, "$*PACKAGE"
    unless_null $P5034, fallback5442
    nqp_get_sc_object $P5036, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5035, $P5036
    set fb_tmp_426, $P5035
    repr_defined $I5005, fb_tmp_426
    unless $I5005 goto if2337_else5443 
    set $P5037, fb_tmp_426["$PACKAGE"]
    set $P5039, $P5037
    goto if2337_end5444
  if2337_else5443:
    null $P5038
    set $P5039, $P5038
  if2337_end5444:
    unless_null $P5039, vivi_23385445
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5039, $P5040
  vivi_23385445:
    unless_null $P5039, vivi_23395446
    die "Contextual $*PACKAGE not found"
    box $P5041, "Contextual $*PACKAGE not found"
    set $P5039, $P5041
  vivi_23395446:
    set $P5034, $P5039
  fallback5442:
    $P5042 = $P5026."pkg_add_parent_or_role"($P5034, "add_parent", $P101)
    set $P5052, $P5042
    goto if2333_end5436
  if2333_else5435:
.annotate 'line', 2234
.annotate 'line', 2235
    find_lex $P5043, "$/"
    $P5044 = $P5043."CURSOR"()
    find_lex $P5045, "$/"
    unless_null $P5045, fallback5449
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  fallback5449:
    set fb_tmp_427, $P5045
    repr_defined $I5006, fb_tmp_427
    unless $I5006 goto if2340_else5447 
    set $P5047, fb_tmp_427["parent"]
    set $P5049, $P5047
    goto if2340_end5448
  if2340_else5447:
    null $P5048
    set $P5049, $P5048
  if2340_end5448:
    unless_null $P5049, vivi_23415450
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_23415450:
    set $S5003, $P5049
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5051 = $P5044."panic"($S5001)
    set $P5052, $P5051
  if2333_end5436:
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1382484127.52628") :anon :lex :outer("cuid_287_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2238
    .lex "$default", $P101 
    .local pmc fb_tmp_428 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc fb_tmp_431 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback5455
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_428, $P5003
    repr_defined $I5002, fb_tmp_428
    unless $I5002 goto if2344_else5456 
    set $P5005, fb_tmp_428["$PKGDECL"]
    set $P5007, $P5005
    goto if2344_end5457
  if2344_else5456:
    null $P5006
    set $P5007, $P5006
  if2344_end5457:
    unless_null $P5007, vivi_23455458
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_23455458:
    unless_null $P5007, vivi_23465459
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_23465459:
    set $P5002, $P5007
  fallback5455:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if2343_else5453 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if2343_end5454
  if2343_else5453:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if2343_end5454:
    set $P101, $P5014
.annotate 'line', 2240
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5460
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_429, $P5016
    repr_defined $I5003, fb_tmp_429
    unless $I5003 goto if2347_else5461 
    set $P5018, fb_tmp_429["$W"]
    set $P5020, $P5018
    goto if2347_end5462
  if2347_else5461:
    null $P5019
    set $P5020, $P5019
  if2347_end5462:
    unless_null $P5020, vivi_23485463
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_23485463:
    unless_null $P5020, vivi_23495464
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_23495464:
    set $P5015, $P5020
  fallback5460:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback5465
    nqp_get_sc_object $P5025, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5024, $P5025
    set fb_tmp_430, $P5024
    repr_defined $I5004, fb_tmp_430
    unless $I5004 goto if2350_else5466 
    set $P5026, fb_tmp_430["$PACKAGE"]
    set $P5028, $P5026
    goto if2350_end5467
  if2350_else5466:
    null $P5027
    set $P5028, $P5027
  if2350_end5467:
    unless_null $P5028, vivi_23515468
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_23515468:
    unless_null $P5028, vivi_23525469
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_23525469:
    set $P5023, $P5028
  fallback5465:
.annotate 'line', 2241
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback5470
    nqp_get_sc_object $P5033, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5032, $P5033
    set fb_tmp_431, $P5032
    repr_defined $I5005, fb_tmp_431
    unless $I5005 goto if2353_else5471 
    set $P5034, fb_tmp_431["$W"]
    set $P5036, $P5034
    goto if2353_end5472
  if2353_else5471:
    null $P5035
    set $P5036, $P5035
  if2353_end5472:
    unless_null $P5036, vivi_23545473
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5036, $P5037
  vivi_23545473:
    unless_null $P5036, vivi_23555474
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_23555474:
    set $P5031, $P5036
  fallback5470:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1382484127.52628") :anon :lex :outer("cuid_287_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2246
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_434 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_23675494
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2249
.annotate 'line', 2250
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5485
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_434, $P5004
    repr_defined $I5001, fb_tmp_434
    unless $I5001 goto if2361_else5486 
    set $P5006, fb_tmp_434["$W"]
    set $P5008, $P5006
    goto if2361_end5487
  if2361_else5486:
    null $P5007
    set $P5008, $P5007
  if2361_end5487:
    unless_null $P5008, vivi_23625488
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_23625488:
    unless_null $P5008, vivi_23635489
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23635489:
    set $P5003, $P5008
  fallback5485:
    set fb_tmp_435, _lex_param_0
    repr_defined $I5002, fb_tmp_435
    unless $I5002 goto if2364_else5490 
    set $P5012, fb_tmp_435["identifier"]
    set $P5014, $P5012
    goto if2364_end5491
  if2364_else5490:
    null $P5013
    set $P5014, $P5013
  if2364_end5491:
    unless_null $P5014, vivi_23655492
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_23655492:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_23665493
  catch_handler_23675494:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_23665493
  skip_handler_23665493:
    unless $P102 goto if2368_else5495 
.annotate 'line', 2253
.annotate 'line', 2254
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5497
    nqp_get_sc_object $P5022, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5021, $P5022
    set fb_tmp_436, $P5021
    repr_defined $I5003, fb_tmp_436
    unless $I5003 goto if2369_else5498 
    set $P5023, fb_tmp_436["$W"]
    set $P5025, $P5023
    goto if2369_end5499
  if2369_else5498:
    null $P5024
    set $P5025, $P5024
  if2369_end5499:
    unless_null $P5025, vivi_23705500
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5025, $P5026
  vivi_23705500:
    unless_null $P5025, vivi_23715501
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_23715501:
    set $P5020, $P5025
  fallback5497:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback5502
    nqp_get_sc_object $P5030, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5029, $P5030
    set fb_tmp_437, $P5029
    repr_defined $I5004, fb_tmp_437
    unless $I5004 goto if2372_else5503 
    set $P5031, fb_tmp_437["$PACKAGE"]
    set $P5033, $P5031
    goto if2372_end5504
  if2372_else5503:
    null $P5032
    set $P5033, $P5032
  if2372_end5504:
    unless_null $P5033, vivi_23735505
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_23735505:
    unless_null $P5033, vivi_23745506
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_23745506:
    set $P5028, $P5033
  fallback5502:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if2368_end5496
  if2368_else5495:
.annotate 'line', 2256
.annotate 'line', 2257
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if2368_end5496:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_288_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2278
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_478_1382484127.52628' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_447 
    unless_null _lex_param_1, fallback5560
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback5560:
    set fb_tmp_447, _lex_param_1
    repr_defined $I5001, fb_tmp_447
    unless $I5001 goto if2403_else5558 
    set $P5005, fb_tmp_447["variable"]
    set $P5007, $P5005
    goto if2403_end5559
  if2403_else5558:
    null $P5006
    set $P5007, $P5006
  if2403_end5559:
    unless_null $P5007, vivi_24045561
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_24045561:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next5567:
    unless $P5003, for_done5569
    shift $P5010, $P5003
  for_redo5568:
    .const 'Sub' $P5009 = 'cuid_478_1382484127.52628' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next5567
  for_done5569:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1382484127.52628") :anon :lex :outer("cuid_288_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2279
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_448 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2280
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2281
    $P101."scope"("lexical")
.annotate 'line', 2282
    $P101."decl"("param")
.annotate 'line', 2283
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5562
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_448, $P5004
    repr_defined $I5001, fb_tmp_448
    unless $I5001 goto if2405_else5563 
    set $P5006, fb_tmp_448["$W"]
    set $P5008, $P5006
    goto if2405_end5564
  if2405_else5563:
    null $P5007
    set $P5008, $P5007
  if2405_end5564:
    unless_null $P5008, vivi_24065565
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_24065565:
    unless_null $P5008, vivi_24075566
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_24075566:
    set $P5003, $P5008
  fallback5562:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_289_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_449 
    unless_null _lex_param_1, fallback5572
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5572:
    set fb_tmp_449, _lex_param_1
    repr_defined $I5001, fb_tmp_449
    unless $I5001 goto if2408_else5570 
    set $P5002, fb_tmp_449["scoped"]
    set $P5004, $P5002
    goto if2408_end5571
  if2408_else5570:
    null $P5003
    set $P5004, $P5003
  if2408_end5571:
    unless_null $P5004, vivi_24095573
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24095573:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_290_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_450 
    unless_null _lex_param_1, fallback5576
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5576:
    set fb_tmp_450, _lex_param_1
    repr_defined $I5001, fb_tmp_450
    unless $I5001 goto if2410_else5574 
    set $P5002, fb_tmp_450["scoped"]
    set $P5004, $P5002
    goto if2410_end5575
  if2410_else5574:
    null $P5003
    set $P5004, $P5003
  if2410_end5575:
    unless_null $P5004, vivi_24115577
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24115577:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_291_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2289
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_451 
    unless_null _lex_param_1, fallback5580
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5580:
    set fb_tmp_451, _lex_param_1
    repr_defined $I5001, fb_tmp_451
    unless $I5001 goto if2412_else5578 
    set $P5002, fb_tmp_451["scoped"]
    set $P5004, $P5002
    goto if2412_end5579
  if2412_else5578:
    null $P5003
    set $P5004, $P5003
  if2412_end5579:
    unless_null $P5004, vivi_24135581
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24135581:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_292_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2291
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
.annotate 'line', 2292
    unless_null _lex_param_1, fallback5586
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5586:
    set fb_tmp_452, _lex_param_1
    repr_defined $I5001, fb_tmp_452
    unless $I5001 goto if2415_else5584 
    set $P5002, fb_tmp_452["declarator"]
    set $P5004, $P5002
    goto if2415_end5585
  if2415_else5584:
    null $P5003
    set $P5004, $P5003
  if2415_end5585:
    unless_null $P5004, vivi_24165587
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24165587:
    unless $P5004 goto if2414_else5582 
    unless_null _lex_param_1, fallback5590
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5590:
    set fb_tmp_453, _lex_param_1
    repr_defined $I5002, fb_tmp_453
    unless $I5002 goto if2417_else5588 
    set $P5007, fb_tmp_453["declarator"]
    set $P5009, $P5007
    goto if2417_end5589
  if2417_else5588:
    null $P5008
    set $P5009, $P5008
  if2417_end5589:
    unless_null $P5009, vivi_24185591
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_24185591:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if2414_end5583
  if2414_else5582:
    unless_null _lex_param_1, fallback5596
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5596:
    set fb_tmp_454, _lex_param_1
    repr_defined $I5003, fb_tmp_454
    unless $I5003 goto if2420_else5594 
    set $P5013, fb_tmp_454["multi_declarator"]
    set $P5015, $P5013
    goto if2420_end5595
  if2420_else5594:
    null $P5014
    set $P5015, $P5014
  if2420_end5595:
    unless_null $P5015, vivi_24215597
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_24215597:
    unless $P5015 goto if2419_else5592 
.annotate 'line', 2293
    unless_null _lex_param_1, fallback5600
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5017
  fallback5600:
    set fb_tmp_455, _lex_param_1
    repr_defined $I5004, fb_tmp_455
    unless $I5004 goto if2422_else5598 
    set $P5018, fb_tmp_455["multi_declarator"]
    set $P5020, $P5018
    goto if2422_end5599
  if2422_else5598:
    null $P5019
    set $P5020, $P5019
  if2422_end5599:
    unless_null $P5020, vivi_24235601
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_24235601:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if2419_end5593
  if2419_else5592:
.annotate 'line', 2294
    unless_null _lex_param_1, fallback5604
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5023
  fallback5604:
    set fb_tmp_456, _lex_param_1
    repr_defined $I5005, fb_tmp_456
    unless $I5005 goto if2424_else5602 
    set $P5024, fb_tmp_456["package_declarator"]
    set $P5026, $P5024
    goto if2424_end5603
  if2424_else5602:
    null $P5025
    set $P5026, $P5025
  if2424_end5603:
    unless_null $P5026, vivi_24255605
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_24255605:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if2419_end5593:
    set $P5030, $P5029
  if2414_end5583:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_293_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2297
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
.annotate 'line', 2298
    unless_null _lex_param_1, fallback5610
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5610:
    set fb_tmp_457, _lex_param_1
    repr_defined $I5001, fb_tmp_457
    unless $I5001 goto if2427_else5608 
    set $P5002, fb_tmp_457["routine_declarator"]
    set $P5004, $P5002
    goto if2427_end5609
  if2427_else5608:
    null $P5003
    set $P5004, $P5003
  if2427_end5609:
    unless_null $P5004, vivi_24285611
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24285611:
    unless $P5004 goto if2426_else5606 
.annotate 'line', 2299
    unless_null _lex_param_1, fallback5614
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5614:
    set fb_tmp_458, _lex_param_1
    repr_defined $I5002, fb_tmp_458
    unless $I5002 goto if2429_else5612 
    set $P5007, fb_tmp_458["routine_declarator"]
    set $P5009, $P5007
    goto if2429_end5613
  if2429_else5612:
    null $P5008
    set $P5009, $P5008
  if2429_end5613:
    unless_null $P5009, vivi_24305615
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_24305615:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2426_end5607
  if2426_else5606:
.annotate 'line', 2300
    unless_null _lex_param_1, fallback5618
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5618:
    set fb_tmp_459, _lex_param_1
    repr_defined $I5003, fb_tmp_459
    unless $I5003 goto if2431_else5616 
    set $P5013, fb_tmp_459["variable_declarator"]
    set $P5015, $P5013
    goto if2431_end5617
  if2431_else5616:
    null $P5014
    set $P5015, $P5014
  if2431_end5617:
    unless_null $P5015, vivi_24325619
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_24325619:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2426_end5607:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_294_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2303
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    unless_null _lex_param_1, fallback5624
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5624:
    set fb_tmp_460, _lex_param_1
    repr_defined $I5001, fb_tmp_460
    unless $I5001 goto if2434_else5622 
    set $P5002, fb_tmp_460["declarator"]
    set $P5004, $P5002
    goto if2434_end5623
  if2434_else5622:
    null $P5003
    set $P5004, $P5003
  if2434_end5623:
    unless_null $P5004, vivi_24355625
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24355625:
    unless $P5004 goto if2433_else5620 
    unless_null _lex_param_1, fallback5628
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5628:
    set fb_tmp_461, _lex_param_1
    repr_defined $I5002, fb_tmp_461
    unless $I5002 goto if2436_else5626 
    set $P5007, fb_tmp_461["declarator"]
    set $P5009, $P5007
    goto if2436_end5627
  if2436_else5626:
    null $P5008
    set $P5009, $P5008
  if2436_end5627:
    unless_null $P5009, vivi_24375629
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_24375629:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2433_end5621
  if2433_else5620:
    unless_null _lex_param_1, fallback5632
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5632:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5003, fb_tmp_462
    unless $I5003 goto if2438_else5630 
    set $P5013, fb_tmp_462["routine_def"]
    set $P5015, $P5013
    goto if2438_end5631
  if2438_else5630:
    null $P5014
    set $P5015, $P5014
  if2438_end5631:
    unless_null $P5015, vivi_24395633
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_24395633:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2433_end5621:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_295_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc fb_tmp_465 
    unless_null _lex_param_1, fallback5638
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5638:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5001, fb_tmp_463
    unless $I5001 goto if2441_else5636 
    set $P5002, fb_tmp_463["declarator"]
    set $P5004, $P5002
    goto if2441_end5637
  if2441_else5636:
    null $P5003
    set $P5004, $P5003
  if2441_end5637:
    unless_null $P5004, vivi_24425639
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24425639:
    unless $P5004 goto if2440_else5634 
    unless_null _lex_param_1, fallback5642
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5642:
    set fb_tmp_464, _lex_param_1
    repr_defined $I5002, fb_tmp_464
    unless $I5002 goto if2443_else5640 
    set $P5007, fb_tmp_464["declarator"]
    set $P5009, $P5007
    goto if2443_end5641
  if2443_else5640:
    null $P5008
    set $P5009, $P5008
  if2443_end5641:
    unless_null $P5009, vivi_24445643
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_24445643:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if2440_end5635
  if2440_else5634:
    unless_null _lex_param_1, fallback5646
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5646:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5003, fb_tmp_465
    unless $I5003 goto if2445_else5644 
    set $P5013, fb_tmp_465["routine_def"]
    set $P5015, $P5013
    goto if2445_end5645
  if2445_else5644:
    null $P5014
    set $P5015, $P5014
  if2445_end5645:
    unless_null $P5015, vivi_24465647
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_24465647:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if2440_end5635:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_296_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2305
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_466 
    unless_null _lex_param_1, fallback5650
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5650:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5001, fb_tmp_466
    unless $I5001 goto if2447_else5648 
    set $P5002, fb_tmp_466["declarator"]
    set $P5004, $P5002
    goto if2447_end5649
  if2447_else5648:
    null $P5003
    set $P5004, $P5003
  if2447_end5649:
    unless_null $P5004, vivi_24485651
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_24485651:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_297_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_479_1382484127.52628' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_481_1382484127.52628' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_482_1382484127.52628' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P105, $P5005
.annotate 'line', 2309
    unless_null _lex_param_1, fallback5654
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback5654:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2449_else5652 
    set $P5007, fb_tmp_467["variable"]
    set $P5009, $P5007
    goto if2449_end5653
  if2449_else5652:
    null $P5008
    set $P5009, $P5008
  if2449_end5653:
    unless_null $P5009, vivi_24505655
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_24505655:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback5660
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback5660:
    set fb_tmp_469, _lex_param_1
    repr_defined $I5003, fb_tmp_469
    unless $I5003 goto if2452_else5658 
    set $P5013, fb_tmp_469["variable"]
    set $P5015, $P5013
    goto if2452_end5659
  if2452_else5658:
    null $P5014
    set $P5015, $P5014
  if2452_end5659:
    unless_null $P5015, vivi_24535661
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_24535661:
    set fb_tmp_468, $P5015
    repr_defined $I5002, fb_tmp_468
    unless $I5002 goto if2451_else5656 
    set $P5017, fb_tmp_468["sigil"]
    set $P5019, $P5017
    goto if2451_end5657
  if2451_else5656:
    null $P5018
    set $P5019, $P5018
  if2451_end5657:
    unless_null $P5019, vivi_24545662
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_24545662:
    set $P102, $P5019
.annotate 'line', 2311
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2312
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback5663
    nqp_get_sc_object $P5024, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5023, $P5024
    set fb_tmp_470, $P5023
    repr_defined $I5004, fb_tmp_470
    unless $I5004 goto if2455_else5664 
    set $P5025, fb_tmp_470["$W"]
    set $P5027, $P5025
    goto if2455_end5665
  if2455_else5664:
    null $P5026
    set $P5027, $P5026
  if2455_end5665:
    unless_null $P5027, vivi_24565666
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_24565666:
    unless_null $P5027, vivi_24575667
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_24575667:
    set $P5022, $P5027
  fallback5663:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if2462_end5676 
.annotate 'line', 2314
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if2462_end5676:
    unless $P5039 goto if2461_end5674 
.annotate 'line', 2315
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if2461_end5674:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback5679
    nqp_get_sc_object $P5044, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5043, $P5044
    set fb_tmp_472, $P5043
    repr_defined $I5007, fb_tmp_472
    unless $I5007 goto if2464_else5680 
    set $P5045, fb_tmp_472["$SCOPE"]
    set $P5047, $P5045
    goto if2464_end5681
  if2464_else5680:
    null $P5046
    set $P5047, $P5046
  if2464_end5681:
    unless_null $P5047, vivi_24655682
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5047, $P5048
  vivi_24655682:
    unless_null $P5047, vivi_24665683
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_24665683:
    set $P5042, $P5047
  fallback5679:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if2463_else5677 
    .const 'Sub' $P5050 = 'cuid_479_1382484127.52628' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if2463_end5678
  if2463_else5677:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback5761
    nqp_get_sc_object $P5054, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5053, $P5054
    set fb_tmp_487, $P5053
    repr_defined $I5009, fb_tmp_487
    unless $I5009 goto if2512_else5762 
    set $P5055, fb_tmp_487["$SCOPE"]
    set $P5057, $P5055
    goto if2512_end5763
  if2512_else5762:
    null $P5056
    set $P5057, $P5056
  if2512_end5763:
    unless_null $P5057, vivi_25135764
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5057, $P5058
  vivi_25135764:
    unless_null $P5057, vivi_25145765
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_25145765:
    set $P5052, $P5057
  fallback5761:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if2511_else5759 
.annotate 'line', 2345
    unless_null _lex_param_1, fallback5770
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5060
  fallback5770:
    set fb_tmp_488, _lex_param_1
    repr_defined $I5010, fb_tmp_488
    unless $I5010 goto if2516_else5768 
    set $P5061, fb_tmp_488["typename"]
    set $P5063, $P5061
    goto if2516_end5769
  if2516_else5768:
    null $P5062
    set $P5063, $P5062
  if2516_end5769:
    unless_null $P5063, vivi_25175771
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5063, $P5064
  vivi_25175771:
    unless $P5063 goto if2515_end5767 
.annotate 'line', 2349
.annotate 'line', 2350
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if2515_end5767:
    unless_null _lex_param_1, fallback5774
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5067
  fallback5774:
    set fb_tmp_489, _lex_param_1
    repr_defined $I5011, fb_tmp_489
    unless $I5011 goto if2518_else5772 
    set $P5068, fb_tmp_489["variable"]
    set $P5070, $P5068
    goto if2518_end5773
  if2518_else5772:
    null $P5069
    set $P5070, $P5069
  if2518_end5773:
    unless_null $P5070, vivi_25195775
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5070, $P5071
  vivi_25195775:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2353
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2354
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if2511_end5760
  if2511_else5759:
    .const 'Sub' $P5076 = 'cuid_481_1382484127.52628' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if2511_end5760:
  if2463_end5678:
    unless_null _lex_param_1, fallback5802
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5079
  fallback5802:
    set fb_tmp_494, _lex_param_1
    repr_defined $I5012, fb_tmp_494
    unless $I5012 goto if2533_else5800 
    set $P5080, fb_tmp_494["trait"]
    set $P5082, $P5080
    goto if2533_end5801
  if2533_else5800:
    null $P5081
    set $P5082, $P5081
  if2533_end5801:
    unless_null $P5082, vivi_25345803
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_25345803:
    unless $P5082 goto if2532_end5799 
.annotate 'line', 2383
    unless_null _lex_param_1, fallback5806
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5087
  fallback5806:
    set fb_tmp_495, _lex_param_1
    repr_defined $I5013, fb_tmp_495
    unless $I5013 goto if2535_else5804 
    set $P5088, fb_tmp_495["trait"]
    set $P5090, $P5088
    goto if2535_end5805
  if2535_else5804:
    null $P5089
    set $P5090, $P5089
  if2535_end5805:
    unless_null $P5090, vivi_25365807
    nqp_get_sc_object $P5091, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5090, $P5091
  vivi_25365807:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next5808:
    unless $P5086, for_done5810
    shift $P5093, $P5086
  for_redo5809:
    .const 'Sub' $P5092 = 'cuid_482_1382484127.52628' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next5808
  for_done5810:
  if2532_end5799:
.annotate 'line', 2387
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1382484127.52628") :anon :lex :outer("cuid_297_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2317
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_473 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_474 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_486 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback5686
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_46, $P5004
    set fb_tmp_473, pkg_viv_tmp_46
    repr_defined $I5002, fb_tmp_473
    unless $I5002 goto if2468_else5687 
    set $P5006, fb_tmp_473["%HOW"]
    set $P5008, $P5006
    goto if2468_end5688
  if2468_else5687:
    null $P5007
    set $P5008, $P5007
  if2468_end5688:
    unless_null $P5008, vivi_24695689
    new $P5009, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5009
    set $P5008, $P5009
  vivi_24695689:
    unless_null $P5008, vivi_24705690
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_24705690:
    set $P5003, $P5008
  fallback5686:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback5691
    nqp_get_sc_object $P5013, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5012, $P5013
    set fb_tmp_474, $P5012
    repr_defined $I5003, fb_tmp_474
    unless $I5003 goto if2471_else5692 
    set $P5014, fb_tmp_474["$PKGDECL"]
    set $P5016, $P5014
    goto if2471_end5693
  if2471_else5692:
    null $P5015
    set $P5016, $P5015
  if2471_end5693:
    unless_null $P5016, vivi_24725694
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_24725694:
    unless_null $P5016, vivi_24735695
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_24735695:
    set $P5011, $P5016
  fallback5691:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless2467_end5685 
.annotate 'line', 2319
.annotate 'line', 2320
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback5696
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_475, $P5022
    repr_defined $I5004, fb_tmp_475
    unless $I5004 goto if2474_else5697 
    set $P5024, fb_tmp_475["$PKGDECL"]
    set $P5026, $P5024
    goto if2474_end5698
  if2474_else5697:
    null $P5025
    set $P5026, $P5025
  if2474_end5698:
    unless_null $P5026, vivi_24755699
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_24755699:
    unless_null $P5026, vivi_24765700
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_24765700:
    set $P5021, $P5026
  fallback5696:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless2467_end5685:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback5705
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  fallback5705:
    set fb_tmp_476, $P5031
    repr_defined $I5005, fb_tmp_476
    unless $I5005 goto if2478_else5703 
    set $P5033, fb_tmp_476["typename"]
    set $P5035, $P5033
    goto if2478_end5704
  if2478_else5703:
    null $P5034
    set $P5035, $P5034
  if2478_end5704:
    unless_null $P5035, vivi_24795706
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_24795706:
    unless $P5035 goto if2477_end5702 
.annotate 'line', 2327
.annotate 'line', 2328
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback5707
    nqp_get_sc_object $P5039, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5038, $P5039
    set fb_tmp_477, $P5038
    repr_defined $I5006, fb_tmp_477
    unless $I5006 goto if2480_else5708 
    set $P5040, fb_tmp_477["$W"]
    set $P5042, $P5040
    goto if2480_end5709
  if2480_else5708:
    null $P5041
    set $P5042, $P5041
  if2480_end5709:
    unless_null $P5042, vivi_24815710
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5042, $P5043
  vivi_24815710:
    unless_null $P5042, vivi_24825711
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_24825711:
    set $P5037, $P5042
  fallback5707:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback5714
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  fallback5714:
    set fb_tmp_478, $P5046
    repr_defined $I5007, fb_tmp_478
    unless $I5007 goto if2483_else5712 
    set $P5048, fb_tmp_478["typename"]
    set $P5050, $P5048
    goto if2483_end5713
  if2483_else5712:
    null $P5049
    set $P5050, $P5049
  if2483_end5713:
    unless_null $P5050, vivi_24845715
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5050, $P5051
  vivi_24845715:
    set $S5005, $P5050
    box $P5052, $S5005
    push $P5045, $P5052
    $P5053 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5053
  if2477_end5702:
    find_lex $P5054, "$sigil"
    set $S5006, $P5054
    iseq $I5008, $S5006, "$"
    set $I5010, $I5008
    if $I5008 goto unless2486_end5719 
    find_lex $P5055, "$sigil"
    set $S5007, $P5055
    iseq $I5009, $S5007, "&"
    set $I5010, $I5009
  unless2486_end5719:
    unless $I5010 goto if2485_end5717 
.annotate 'line', 2330
    find_lex $P5056, "$/"
    unless_null $P5056, fallback5724
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5056, $P5057
  fallback5724:
    set fb_tmp_479, $P5056
    repr_defined $I5011, fb_tmp_479
    unless $I5011 goto if2488_else5722 
    set $P5058, fb_tmp_479["typename"]
    set $P5060, $P5058
    goto if2488_end5723
  if2488_else5722:
    null $P5059
    set $P5060, $P5059
  if2488_end5723:
    unless_null $P5060, vivi_24895725
    nqp_get_sc_object $P5061, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5060, $P5061
  vivi_24895725:
    unless $P5060 goto if2487_else5720 
.annotate 'line', 2331
    set fb_tmp_480, $P102
    repr_defined $I5012, fb_tmp_480
    unless $I5012 goto if2490_else5726 
    set $P5062, fb_tmp_480["type"]
    set $P5064, $P5062
    goto if2490_end5727
  if2490_else5726:
    null $P5063
    set $P5064, $P5063
  if2490_end5727:
    unless_null $P5064, vivi_24915728
    nqp_get_sc_object $P5065, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5064, $P5065
  vivi_24915728:
    set $P102["default"], $P5064
    set $P5079, $P5064
    goto if2487_end5721
  if2487_else5720:
.annotate 'line', 2334
    new $P5077, 'ExceptionHandler'
    set_label $P5077, catch_handler_24965735
    $P5077.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5077
.annotate 'line', 2335
    find_dynamic_lex $P5066, "$*W"
    unless_null $P5066, fallback5729
    nqp_get_sc_object $P5068, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5067, $P5068
    set fb_tmp_481, $P5067
    repr_defined $I5013, fb_tmp_481
    unless $I5013 goto if2492_else5730 
    set $P5069, fb_tmp_481["$W"]
    set $P5071, $P5069
    goto if2492_end5731
  if2492_else5730:
    null $P5070
    set $P5071, $P5070
  if2492_end5731:
    unless_null $P5071, vivi_24935732
    nqp_get_sc_object $P5072, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5071, $P5072
  vivi_24935732:
    unless_null $P5071, vivi_24945733
    die "Contextual $*W not found"
    box $P5073, "Contextual $*W not found"
    set $P5071, $P5073
  vivi_24945733:
    set $P5066, $P5071
  fallback5729:
    new $P5074, 'ResizablePMCArray'
    box $P5075, "NQPMu"
    push $P5074, $P5075
    $P5076 = $P5066."find_sym"($P5074)
    set $P102["default"], $P5076
    set $P5078, $P5076
    pop_eh 
    goto skip_handler_24955734
  catch_handler_24965735:
    .get_results ($P5077) 
    set $I10001, 1
    set $P5077["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5077
    pop_upto_eh $P5077
    pop_eh 
    set $P5078, $P10001
    goto skip_handler_24955734
  skip_handler_24955734:
    set $P5079, $P5078
  if2487_end5721:
  if2485_end5717:
.annotate 'line', 2340
    find_dynamic_lex $P5080, "$*W"
    unless_null $P5080, fallback5736
    nqp_get_sc_object $P5082, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5081, $P5082
    set fb_tmp_482, $P5081
    repr_defined $I5014, fb_tmp_482
    unless $I5014 goto if2497_else5737 
    set $P5083, fb_tmp_482["$W"]
    set $P5085, $P5083
    goto if2497_end5738
  if2497_else5737:
    null $P5084
    set $P5085, $P5084
  if2497_end5738:
    unless_null $P5085, vivi_24985739
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5085, $P5086
  vivi_24985739:
    unless_null $P5085, vivi_24995740
    die "Contextual $*W not found"
    box $P5087, "Contextual $*W not found"
    set $P5085, $P5087
  vivi_24995740:
    set $P5080, $P5085
  fallback5736:
    find_dynamic_lex $P5088, "$*PACKAGE"
    unless_null $P5088, fallback5741
    nqp_get_sc_object $P5090, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5089, $P5090
    set fb_tmp_483, $P5089
    repr_defined $I5015, fb_tmp_483
    unless $I5015 goto if2500_else5742 
    set $P5091, fb_tmp_483["$PACKAGE"]
    set $P5093, $P5091
    goto if2500_end5743
  if2500_else5742:
    null $P5092
    set $P5093, $P5092
  if2500_end5743:
    unless_null $P5093, vivi_25015744
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5093, $P5094
  vivi_25015744:
    unless_null $P5093, vivi_25025745
    die "Contextual $*PACKAGE not found"
    box $P5095, "Contextual $*PACKAGE not found"
    set $P5093, $P5095
  vivi_25025745:
    set $P5088, $P5093
  fallback5741:
    find_dynamic_lex $P5096, "%*HOW"
    unless_null $P5096, fallback5748
    nqp_get_sc_object $P5098, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_47, $P5097
    set fb_tmp_485, pkg_viv_tmp_47
    repr_defined $I5017, fb_tmp_485
    unless $I5017 goto if2504_else5749 
    set $P5099, fb_tmp_485["%HOW"]
    set $P5101, $P5099
    goto if2504_end5750
  if2504_else5749:
    null $P5100
    set $P5101, $P5100
  if2504_end5750:
    unless_null $P5101, vivi_25055751
    new $P5102, 'Hash'
    set pkg_viv_tmp_47["%HOW"], $P5102
    set $P5101, $P5102
  vivi_25055751:
    unless_null $P5101, vivi_25065752
    die "Contextual %*HOW not found"
    box $P5103, "Contextual %*HOW not found"
    set $P5101, $P5103
  vivi_25065752:
    set $P5096, $P5101
  fallback5748:
    set fb_tmp_484, $P5096
    repr_defined $I5016, fb_tmp_484
    unless $I5016 goto if2503_else5746 
    find_dynamic_lex $P5105, "$*PKGDECL"
    unless_null $P5105, fallback5753
    nqp_get_sc_object $P5107, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5106, $P5107
    set fb_tmp_486, $P5106
    repr_defined $I5018, fb_tmp_486
    unless $I5018 goto if2507_else5754 
    set $P5108, fb_tmp_486["$PKGDECL"]
    set $P5110, $P5108
    goto if2507_end5755
  if2507_else5754:
    null $P5109
    set $P5110, $P5109
  if2507_end5755:
    unless_null $P5110, vivi_25085756
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5110, $P5111
  vivi_25085756:
    unless_null $P5110, vivi_25095757
    die "Contextual $*PKGDECL not found"
    box $P5112, "Contextual $*PKGDECL not found"
    set $P5110, $P5112
  vivi_25095757:
    set $P5105, $P5110
  fallback5753:
    set $S5009, $P5105
    concat $S5008, $S5009, "-attr"
    set $P5104, fb_tmp_484[$S5008]
    set $P5114, $P5104
    goto if2503_end5747
  if2503_else5746:
    null $P5113
    set $P5114, $P5113
  if2503_end5747:
    unless_null $P5114, vivi_25105758
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5114, $P5115
  vivi_25105758:
    $P5116 = $P5080."pkg_add_attribute"($P5088, $P5114, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5116
.annotate 'line', 2343
    nqp_get_sc_object $P5117, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
    $P5118 = $P5117."new"()
    store_lex "$past", $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1382484127.52628") :anon :lex :outer("cuid_297_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2356
    .const 'Sub' $P5052 = 'cuid_480_1382484127.52628' 
    capture_lex $P5052 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5780
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  fallback5780:
    set fb_tmp_490, $P5003
    repr_defined $I5001, fb_tmp_490
    unless $I5001 goto if2521_else5778 
    set $P5005, fb_tmp_490["typename"]
    set $P5007, $P5005
    goto if2521_end5779
  if2521_else5778:
    null $P5006
    set $P5007, $P5006
  if2521_end5779:
    unless_null $P5007, vivi_25225781
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_25225781:
    unless $P5007 goto if2520_else5776 
.annotate 'line', 2359
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless2523_end5783 
.annotate 'line', 2360
.annotate 'line', 2361
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless2523_end5783:
.annotate 'line', 2363
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback5784
    nqp_get_sc_object $P5015, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5014, $P5015
    set fb_tmp_491, $P5014
    repr_defined $I5003, fb_tmp_491
    unless $I5003 goto if2524_else5785 
    set $P5016, fb_tmp_491["$W"]
    set $P5018, $P5016
    goto if2524_end5786
  if2524_else5785:
    null $P5017
    set $P5018, $P5017
  if2524_end5786:
    unless_null $P5018, vivi_25255787
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_25255787:
    unless_null $P5018, vivi_25265788
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_25265788:
    set $P5013, $P5018
  fallback5784:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback5791
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  fallback5791:
    set fb_tmp_492, $P5022
    repr_defined $I5004, fb_tmp_492
    unless $I5004 goto if2527_else5789 
    set $P5024, fb_tmp_492["typename"]
    set $P5026, $P5024
    goto if2527_end5790
  if2527_else5789:
    null $P5025
    set $P5026, $P5025
  if2527_end5790:
    unless_null $P5026, vivi_25285792
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_25285792:
    set $S5002, $P5026
    box $P5028, $S5002
    push $P5021, $P5028
    $P5029 = $P5013."find_sym"($P5021)
    set $P101, $P5029
    repr_get_primitive_type_spec $I5005, $P101
    unless $I5005 goto if2529_else5793 
    .const 'Sub' $P5030 = 'cuid_480_1382484127.52628' 
    capture_lex $P5030
    $P5031 = $P5030($I5005)
    set $P5035, $P5031
    goto if2529_end5794
  if2529_else5793:
.annotate 'line', 2367
.annotate 'line', 2368
    find_lex $P5032, "$/"
    $P5033 = $P5032."CURSOR"()
    $P5034 = $P5033."panic"("Only native types are currently supported/checked")
    set $P5035, $P5034
  if2529_end5794:
    goto if2520_end5777
  if2520_else5776:
.annotate 'line', 2371
.annotate 'line', 2372
    find_lex $P5036, "$sigil"
    $P5037 = "&default_for"($P5036)
    set $P102, $P5037
  if2520_end5777:
.annotate 'line', 2374
    find_lex $P5038, "$BLOCK"
    set fb_tmp_493, $P5038
    repr_defined $I5006, fb_tmp_493
    unless $I5006 goto if2530_else5795 
    set $P5039, fb_tmp_493[0]
    set $P5041, $P5039
    goto if2530_end5796
  if2530_else5795:
    null $P5040
    set $P5041, $P5040
  if2530_end5796:
    unless_null $P5041, vivi_25315797
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5041, $P5042
  vivi_25315797:
    nqp_get_sc_object $P5043, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    find_lex $P5044, "$/"
.annotate 'line', 2376
    nqp_get_sc_object $P5045, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5046, "$name"
    $P5047 = $P5045."new"($P5046 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5048 = $P5043."new"($P5047, $P102, "bind" :named("op"), $P5044 :named("node"))
    $P5041."push"($P5048)
.annotate 'line', 2379
    find_lex $P5049, "$BLOCK"
    find_lex $P5050, "$name"
    $P5051 = $P5049."symbol"($P5050, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1382484127.52628") :anon :lex :outer("cuid_481_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2364
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2365
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1382484127.52628") :anon :lex :outer("cuid_297_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2384
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_298_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2390
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_496 
    unless_null _lex_param_1, fallback5813
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5813:
    set fb_tmp_496, _lex_param_1
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2537_else5811 
    set $P5002, fb_tmp_496["routine_def"]
    set $P5004, $P5002
    goto if2537_end5812
  if2537_else5811:
    null $P5003
    set $P5004, $P5003
  if2537_end5812:
    unless_null $P5004, vivi_25385814
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_25385814:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_299_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2391
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_497 
    unless_null _lex_param_1, fallback5817
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback5817:
    set fb_tmp_497, _lex_param_1
    repr_defined $I5001, fb_tmp_497
    unless $I5001 goto if2539_else5815 
    set $P5002, fb_tmp_497["method_def"]
    set $P5004, $P5002
    goto if2539_end5816
  if2539_else5815:
    null $P5003
    set $P5004, $P5003
  if2539_end5816:
    unless_null $P5004, vivi_25405818
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_25405818:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_300_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2393
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5074 = 'cuid_486_1382484127.52628' 
    capture_lex $P5074 
    .const 'Sub' $P5074 = 'cuid_489_1382484127.52628' 
    capture_lex $P5074 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_535 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc fb_tmp_538 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback5823
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback5823:
    set fb_tmp_498, _lex_param_1
    repr_defined $I5001, fb_tmp_498
    unless $I5001 goto if2542_else5821 
    set $P5005, fb_tmp_498["onlystar"]
    set $P5007, $P5005
    goto if2542_end5822
  if2542_else5821:
    null $P5006
    set $P5007, $P5006
  if2542_end5822:
    unless_null $P5007, vivi_25435824
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_25435824:
    unless $P5007 goto if2541_else5819 
.annotate 'line', 2397
.annotate 'line', 2398
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2541_end5820
  if2541_else5819:
.annotate 'line', 2400
.annotate 'line', 2401
    unless_null _lex_param_1, fallback5827
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5010
  fallback5827:
    set fb_tmp_499, _lex_param_1
    repr_defined $I5002, fb_tmp_499
    unless $I5002 goto if2544_else5825 
    set $P5011, fb_tmp_499["blockoid"]
    set $P5013, $P5011
    goto if2544_end5826
  if2544_else5825:
    null $P5012
    set $P5013, $P5012
  if2544_end5826:
    unless_null $P5013, vivi_25455828
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_25455828:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback5831
    nqp_get_sc_object $P5018, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5017, $P5018
    set fb_tmp_500, $P5017
    repr_defined $I5003, fb_tmp_500
    unless $I5003 goto if2547_else5832 
    set $P5019, fb_tmp_500["$RETURN_USED"]
    set $P5021, $P5019
    goto if2547_end5833
  if2547_else5832:
    null $P5020
    set $P5021, $P5020
  if2547_end5833:
    unless_null $P5021, vivi_25485834
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_25485834:
    unless_null $P5021, vivi_25495835
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_25495835:
    set $P5016, $P5021
  fallback5831:
    set $P5029, $P5016
    unless $P5016 goto if2546_end5830 
.annotate 'line', 2402
.annotate 'line', 2403
    set fb_tmp_501, $P101
    repr_defined $I5004, fb_tmp_501
    unless $I5004 goto if2550_else5836 
    set $P5024, fb_tmp_501[1]
    set $P5026, $P5024
    goto if2550_end5837
  if2550_else5836:
    null $P5025
    set $P5026, $P5025
  if2550_end5837:
    unless_null $P5026, vivi_25515838
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_25515838:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2546_end5830:
  if2541_end5820:
.annotate 'line', 2406
    $P101."blocktype"("declaration")
    set $P102, $P101
    unless_null _lex_param_1, fallback5843
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5030
  fallback5843:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5005, fb_tmp_502
    unless $I5005 goto if2553_else5841 
    set $P5031, fb_tmp_502["deflongname"]
    set $P5033, $P5031
    goto if2553_end5842
  if2553_else5841:
    null $P5032
    set $P5033, $P5032
  if2553_end5842:
    unless_null $P5033, vivi_25545844
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_25545844:
    unless $P5033 goto if2552_else5839 
    .const 'Sub' $P5035 = 'cuid_486_1382484127.52628' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if2552_end5840
  if2552_else5839:
.annotate 'line', 2526
.annotate 'line', 2527
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback6016
    nqp_get_sc_object $P5039, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5038, $P5039
    set fb_tmp_535, $P5038
    repr_defined $I5006, fb_tmp_535
    unless $I5006 goto if2654_else6017 
    set $P5040, fb_tmp_535["$W"]
    set $P5042, $P5040
    goto if2654_end6018
  if2654_else6017:
    null $P5041
    set $P5042, $P5041
  if2654_end6018:
    unless_null $P5042, vivi_26556019
    nqp_get_sc_object $P5043, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5042, $P5043
  vivi_26556019:
    unless_null $P5042, vivi_26566020
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_26566020:
    set $P5037, $P5042
  fallback6016:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if2653_end6015 
.annotate 'line', 2528
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback6021
    nqp_get_sc_object $P5048, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5047, $P5048
    set fb_tmp_536, $P5047
    repr_defined $I5007, fb_tmp_536
    unless $I5007 goto if2657_else6022 
    set $P5049, fb_tmp_536["$W"]
    set $P5051, $P5049
    goto if2657_end6023
  if2657_else6022:
    null $P5050
    set $P5051, $P5050
  if2657_end6023:
    unless_null $P5051, vivi_26586024
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5051, $P5052
  vivi_26586024:
    unless_null $P5051, vivi_26596025
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_26596025:
    set $P5046, $P5051
  fallback6021:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if2653_end6015:
  if2552_end5840:
.annotate 'line', 2532
    nqp_get_sc_object $P5056, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5057 = $P5056."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5057
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2535
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6030
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5058
  fallback6030:
    set fb_tmp_537, _lex_param_1
    repr_defined $I5008, fb_tmp_537
    unless $I5008 goto if2661_else6028 
    set $P5059, fb_tmp_537["trait"]
    set $P5061, $P5059
    goto if2661_end6029
  if2661_else6028:
    null $P5060
    set $P5061, $P5060
  if2661_end6029:
    unless_null $P5061, vivi_26626031
    nqp_get_sc_object $P5062, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5061, $P5062
  vivi_26626031:
    set $P5073, $P5061
    unless $P5061 goto if2660_end6027 
.annotate 'line', 2538
    unless_null _lex_param_1, fallback6034
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5066
  fallback6034:
    set fb_tmp_538, _lex_param_1
    repr_defined $I5009, fb_tmp_538
    unless $I5009 goto if2663_else6032 
    set $P5067, fb_tmp_538["trait"]
    set $P5069, $P5067
    goto if2663_end6033
  if2663_else6032:
    null $P5068
    set $P5069, $P5068
  if2663_end6033:
    unless_null $P5069, vivi_26646035
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5069, $P5070
  vivi_26646035:
    set $P5063, $P5069
    iter $P5065, $P5069
  for_next6036:
    unless $P5065, for_done6038
    shift $P5072, $P5065
  for_redo6037:
    .const 'Sub' $P5071 = 'cuid_489_1382484127.52628' 
    capture_lex $P5071
    $P5063 = $P5071($P5072)
    goto for_next6036
  for_done6038:
    set $P5073, $P5063
  if2660_end6027:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1382484127.52628") :anon :lex :outer("cuid_300_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2409
    .const 'Sub' $P5088 = 'cuid_485_1382484127.52628' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_487_1382484127.52628' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_488_1382484127.52628' 
    capture_lex $P5088 
    .lex "$name", $P101 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_533 
    .local pmc fb_tmp_534 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5847
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback5847:
    set fb_tmp_503, $P5002
    repr_defined $I5001, fb_tmp_503
    unless $I5001 goto if2555_else5845 
    set $P5004, fb_tmp_503["sigil"]
    set $P5006, $P5004
    goto if2555_end5846
  if2555_else5845:
    null $P5005
    set $P5006, $P5005
  if2555_end5846:
    unless_null $P5006, vivi_25565848
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_25565848:
    set $S5002, $P5006
.annotate 'line', 2410
    find_lex $P5008, "$/"
    unless_null $P5008, fallback5851
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  fallback5851:
    set fb_tmp_504, $P5008
    repr_defined $I5002, fb_tmp_504
    unless $I5002 goto if2557_else5849 
    set $P5010, fb_tmp_504["deflongname"]
    set $P5012, $P5010
    goto if2557_end5850
  if2557_else5849:
    null $P5011
    set $P5012, $P5011
  if2557_end5850:
    unless_null $P5012, vivi_25585852
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_25585852:
    $P5014 = $P5012."ast"()
    set $S5003, $P5014
    concat $S5001, $S5002, $S5003
    box $P5015, $S5001
    set $P101, $P5015
.annotate 'line', 2411
    find_lex $P5016, "$past"
    $P5016."name"($P101)
    find_dynamic_lex $P5017, "$*SCOPE"
    unless_null $P5017, fallback5859
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5018, $P5019
    set fb_tmp_505, $P5018
    repr_defined $I5004, fb_tmp_505
    unless $I5004 goto if2562_else5860 
    set $P5020, fb_tmp_505["$SCOPE"]
    set $P5022, $P5020
    goto if2562_end5861
  if2562_else5860:
    null $P5021
    set $P5022, $P5021
  if2562_end5861:
    unless_null $P5022, vivi_25635862
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_25635862:
    unless_null $P5022, vivi_25645863
    die "Contextual $*SCOPE not found"
    box $P5024, "Contextual $*SCOPE not found"
    set $P5022, $P5024
  vivi_25645863:
    set $P5017, $P5022
  fallback5859:
    set $S5004, $P5017
    iseq $I5003, $S5004, ""
    set $I5007, $I5003
    if $I5003 goto unless2561_end5858 
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback5864
    nqp_get_sc_object $P5027, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5026, $P5027
    set fb_tmp_506, $P5026
    repr_defined $I5006, fb_tmp_506
    unless $I5006 goto if2565_else5865 
    set $P5028, fb_tmp_506["$SCOPE"]
    set $P5030, $P5028
    goto if2565_end5866
  if2565_else5865:
    null $P5029
    set $P5030, $P5029
  if2565_end5866:
    unless_null $P5030, vivi_25665867
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  vivi_25665867:
    unless_null $P5030, vivi_25675868
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_25675868:
    set $P5025, $P5030
  fallback5864:
    set $S5005, $P5025
    iseq $I5005, $S5005, "my"
    set $I5007, $I5005
  unless2561_end5858:
    set $I5010, $I5007
    if $I5007 goto unless2560_end5856 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback5869
    nqp_get_sc_object $P5035, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5034, $P5035
    set fb_tmp_507, $P5034
    repr_defined $I5009, fb_tmp_507
    unless $I5009 goto if2568_else5870 
    set $P5036, fb_tmp_507["$SCOPE"]
    set $P5038, $P5036
    goto if2568_end5871
  if2568_else5870:
    null $P5037
    set $P5038, $P5037
  if2568_end5871:
    unless_null $P5038, vivi_25695872
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5038, $P5039
  vivi_25695872:
    unless_null $P5038, vivi_25705873
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_25705873:
    set $P5033, $P5038
  fallback5869:
    set $S5006, $P5033
    iseq $I5008, $S5006, "our"
    set $I5010, $I5008
  unless2560_end5856:
    unless $I5010 goto if2559_else5853 
.annotate 'line', 2412
    find_dynamic_lex $P5041, "$*MULTINESS"
    unless_null $P5041, fallback5876
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5042, $P5043
    set fb_tmp_508, $P5042
    repr_defined $I5012, fb_tmp_508
    unless $I5012 goto if2572_else5877 
    set $P5044, fb_tmp_508["$MULTINESS"]
    set $P5046, $P5044
    goto if2572_end5878
  if2572_else5877:
    null $P5045
    set $P5046, $P5045
  if2572_end5878:
    unless_null $P5046, vivi_25735879
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  vivi_25735879:
    unless_null $P5046, vivi_25745880
    die "Contextual $*MULTINESS not found"
    box $P5048, "Contextual $*MULTINESS not found"
    set $P5046, $P5048
  vivi_25745880:
    set $P5041, $P5046
  fallback5876:
    set $S5007, $P5041
    iseq $I5011, $S5007, "multi"
    unless $I5011 goto if2571_else5874 
    .const 'Sub' $P5049 = 'cuid_485_1382484127.52628' 
    capture_lex $P5049
    $P5050 = $P5049()
    goto if2571_end5875
  if2571_else5874:
    find_dynamic_lex $P5051, "$*MULTINESS"
    unless_null $P5051, fallback5936
    nqp_get_sc_object $P5053, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5052, $P5053
    set fb_tmp_519, $P5052
    repr_defined $I5014, fb_tmp_519
    unless $I5014 goto if2606_else5937 
    set $P5054, fb_tmp_519["$MULTINESS"]
    set $P5056, $P5054
    goto if2606_end5938
  if2606_else5937:
    null $P5055
    set $P5056, $P5055
  if2606_end5938:
    unless_null $P5056, vivi_26075939
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5056, $P5057
  vivi_26075939:
    unless_null $P5056, vivi_26085940
    die "Contextual $*MULTINESS not found"
    box $P5058, "Contextual $*MULTINESS not found"
    set $P5056, $P5058
  vivi_26085940:
    set $P5051, $P5056
  fallback5936:
    set $S5008, $P5051
    iseq $I5013, $S5008, "proto"
    unless $I5013 goto if2605_else5934 
    .const 'Sub' $P5059 = 'cuid_487_1382484127.52628' 
    capture_lex $P5059
    $P5060 = $P5059()
    set $P5063, $P5060
    goto if2605_end5935
  if2605_else5934:
    .const 'Sub' $P5061 = 'cuid_488_1382484127.52628' 
    capture_lex $P5061
    $P5062 = $P5061()
    set $P5063, $P5062
  if2605_end5935:
  if2571_end5875:
.annotate 'line', 2515
    nqp_get_sc_object $P5064, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5065 = $P5064."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5065
    goto if2559_end5854
  if2559_else5853:
.annotate 'line', 2517
.annotate 'line', 2518
    find_lex $P5066, "$/"
    $P5067 = $P5066."CURSOR"()
    find_dynamic_lex $P5068, "$*SCOPE"
    unless_null $P5068, fallback6000
    nqp_get_sc_object $P5070, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5069, $P5070
    set fb_tmp_533, $P5069
    repr_defined $I5015, fb_tmp_533
    unless $I5015 goto if2645_else6001 
    set $P5071, fb_tmp_533["$SCOPE"]
    set $P5073, $P5071
    goto if2645_end6002
  if2645_else6001:
    null $P5072
    set $P5073, $P5072
  if2645_end6002:
    unless_null $P5073, vivi_26466003
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5073, $P5074
  vivi_26466003:
    unless_null $P5073, vivi_26476004
    die "Contextual $*SCOPE not found"
    box $P5075, "Contextual $*SCOPE not found"
    set $P5073, $P5075
  vivi_26476004:
    set $P5068, $P5073
  fallback6000:
    set $S5012, $P5068
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5076 = $P5067."panic"($S5011)
  if2559_end5854:
    set $S5013, $P101
    iseq $I5016, $S5013, "MAIN"
    set $I5019, $I5016
    unless $I5016 goto if2649_end6008 
    find_dynamic_lex $P5077, "$*MULTINESS"
    unless_null $P5077, fallback6009
    nqp_get_sc_object $P5079, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5078, $P5079
    set fb_tmp_534, $P5078
    repr_defined $I5018, fb_tmp_534
    unless $I5018 goto if2650_else6010 
    set $P5080, fb_tmp_534["$MULTINESS"]
    set $P5082, $P5080
    goto if2650_end6011
  if2650_else6010:
    null $P5081
    set $P5082, $P5081
  if2650_end6011:
    unless_null $P5082, vivi_26516012
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_26516012:
    unless_null $P5082, vivi_26526013
    die "Contextual $*MULTINESS not found"
    box $P5084, "Contextual $*MULTINESS not found"
    set $P5082, $P5084
  vivi_26526013:
    set $P5077, $P5082
  fallback6009:
    set $S5014, $P5077
    isne $I5017, $S5014, "multi"
    set $I5019, $I5017
  if2649_end6008:
    box $P5087, $I5019
    set $P5086, $P5087
    unless $I5019 goto if2648_end6006 
.annotate 'line', 2522
    find_lex $P5085, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5085
    set $P5086, $P5085
  if2648_end6006:
    .return ($P5086) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1382484127.52628") :anon :lex :outer("cuid_486_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2413
    .const 'Sub' $P5063 = 'cuid_484_1382484127.52628' 
    capture_lex $P5063 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_516 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback5883
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5006, $P5007
    set fb_tmp_509, $P5006
    repr_defined $I5002, fb_tmp_509
    unless $I5002 goto if2576_else5884 
    set $P5008, fb_tmp_509["$SCOPE"]
    set $P5010, $P5008
    goto if2576_end5885
  if2576_else5884:
    null $P5009
    set $P5010, $P5009
  if2576_end5885:
    unless_null $P5010, vivi_25775886
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_25775886:
    unless_null $P5010, vivi_25785887
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_25785887:
    set $P5005, $P5010
  fallback5883:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2575_end5882 
.annotate 'line', 2415
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if2575_end5882:
.annotate 'line', 2417
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback5888
    nqp_get_sc_object $P5016, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5015, $P5016
    set fb_tmp_510, $P5015
    repr_defined $I5003, fb_tmp_510
    unless $I5003 goto if2579_else5889 
    set $P5017, fb_tmp_510["$W"]
    set $P5019, $P5017
    goto if2579_end5890
  if2579_else5889:
    null $P5018
    set $P5019, $P5018
  if2579_end5890:
    unless_null $P5019, vivi_25805891
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_25805891:
    unless_null $P5019, vivi_25815892
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_25815892:
    set $P5014, $P5019
  fallback5888:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_511, $P102
    repr_defined $I5004, fb_tmp_511
    unless $I5004 goto if2583_else5895 
    set $P5025, fb_tmp_511["proto"]
    set $P5027, $P5025
    goto if2583_end5896
  if2583_else5895:
    null $P5026
    set $P5027, $P5026
  if2583_end5896:
    unless_null $P5027, vivi_25845897
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_25845897:
    unless $P5027 goto if2582_else5893 
.annotate 'line', 2418
    set fb_tmp_512, $P102
    repr_defined $I5005, fb_tmp_512
    unless $I5005 goto if2585_else5898 
    set $P5029, fb_tmp_512["value"]
    set $P5031, $P5029
    goto if2585_end5899
  if2585_else5898:
    null $P5030
    set $P5031, $P5030
  if2585_end5899:
    unless_null $P5031, vivi_25865900
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_25865900:
    set $P101, $P5031
    goto if2582_end5894
  if2582_else5893:
    .const 'Sub' $P5033 = 'cuid_484_1382484127.52628' 
    capture_lex $P5033
    $P5034 = $P5033()
  if2582_end5894:
.annotate 'line', 2447
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback5921
    nqp_get_sc_object $P5037, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5036, $P5037
    set fb_tmp_516, $P5036
    repr_defined $I5006, fb_tmp_516
    unless $I5006 goto if2597_else5922 
    set $P5038, fb_tmp_516["$W"]
    set $P5040, $P5038
    goto if2597_end5923
  if2597_else5922:
    null $P5039
    set $P5040, $P5039
  if2597_end5923:
    unless_null $P5040, vivi_25985924
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_25985924:
    unless_null $P5040, vivi_25995925
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_25995925:
    set $P5035, $P5040
  fallback5921:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2448
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2451
    $P101."add_dispatchee"($P103)
.annotate 'line', 2457
    find_lex $P5047, "$past"
    $P5047."blocktype"("declaration_static")
.annotate 'line', 2458
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback5926
    nqp_get_sc_object $P5050, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5049, $P5050
    set fb_tmp_517, $P5049
    repr_defined $I5007, fb_tmp_517
    unless $I5007 goto if2600_else5927 
    set $P5051, fb_tmp_517["$W"]
    set $P5053, $P5051
    goto if2600_end5928
  if2600_else5927:
    null $P5052
    set $P5053, $P5052
  if2600_end5928:
    unless_null $P5053, vivi_26015929
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5053, $P5054
  vivi_26015929:
    unless_null $P5053, vivi_26025930
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_26025930:
    set $P5048, $P5053
  fallback5926:
    $P5056 = $P5048."cur_lexpad"()
    set $P104, $P5056
.annotate 'line', 2459
    set fb_tmp_518, $P104
    repr_defined $I5008, fb_tmp_518
    unless $I5008 goto if2603_else5931 
    set $P5057, fb_tmp_518[0]
    set $P5059, $P5057
    goto if2603_end5932
  if2603_else5931:
    null $P5058
    set $P5059, $P5058
  if2603_end5932:
    unless_null $P5059, vivi_26045933
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5059, $P5060
  vivi_26045933:
    find_lex $P5061, "$past"
    $P5062 = $P5059."push"($P5061)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1382484127.52628") :anon :lex :outer("cuid_485_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2423
    .const 'Sub' $P5020 = 'cuid_483_1382484127.52628' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_513 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2426
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback5901
    nqp_get_sc_object $P5007, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5006, $P5007
    set fb_tmp_513, $P5006
    repr_defined $I5001, fb_tmp_513
    unless $I5001 goto if2587_else5902 
    set $P5008, fb_tmp_513["$W"]
    set $P5010, $P5008
    goto if2587_end5903
  if2587_else5902:
    null $P5009
    set $P5010, $P5009
  if2587_end5903:
    unless_null $P5010, vivi_25885904
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_25885904:
    unless_null $P5010, vivi_25895905
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_25895905:
    set $P5005, $P5010
  fallback5901:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next5916:
    unless $P5004, for_done5918
    shift $P5015, $P5004
  for_redo5917:
    .const 'Sub' $P5014 = 'cuid_483_1382484127.52628' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next5916
  for_done5918:
    if $P101 goto unless2596_end5920 
.annotate 'line', 2438
.annotate 'line', 2439
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless2596_end5920:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1382484127.52628") :anon :lex :outer("cuid_484_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2426
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2427
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_514, $P101
    repr_defined $I5001, fb_tmp_514
    unless $I5001 goto if2591_else5908 
    set $P5004, fb_tmp_514["proto"]
    set $P5006, $P5004
    goto if2591_end5909
  if2591_else5908:
    null $P5005
    set $P5006, $P5005
  if2591_end5909:
    unless_null $P5006, vivi_25925910
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_25925910:
    unless $P5006 goto if2590_else5906 
.annotate 'line', 2428
    set fb_tmp_515, $P101
    repr_defined $I5002, fb_tmp_515
    unless $I5002 goto if2593_else5911 
    set $P5008, fb_tmp_515["value"]
    set $P5010, $P5008
    goto if2593_end5912
  if2593_else5911:
    null $P5009
    set $P5010, $P5009
  if2593_end5912:
    unless_null $P5010, vivi_25945913
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_25945913:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if2590_end5907
  if2590_else5906:
    set $P5016, $P101
    unless $P101 goto if2595_end5915 
.annotate 'line', 2432
.annotate 'line', 2433
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if2595_end5915:
    set $P5017, $P5016
  if2590_end5907:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1382484127.52628") :anon :lex :outer("cuid_486_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2461
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback5943
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_520, $P5004
    repr_defined $I5002, fb_tmp_520
    unless $I5002 goto if2610_else5944 
    set $P5006, fb_tmp_520["$SCOPE"]
    set $P5008, $P5006
    goto if2610_end5945
  if2610_else5944:
    null $P5007
    set $P5008, $P5007
  if2610_end5945:
    unless_null $P5008, vivi_26115946
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_26115946:
    unless_null $P5008, vivi_26125947
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_26125947:
    set $P5003, $P5008
  fallback5943:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if2609_end5942 
.annotate 'line', 2465
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if2609_end5942:
.annotate 'line', 2466
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback5948
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5013, $P5014
    set fb_tmp_521, $P5013
    repr_defined $I5003, fb_tmp_521
    unless $I5003 goto if2613_else5949 
    set $P5015, fb_tmp_521["$W"]
    set $P5017, $P5015
    goto if2613_end5950
  if2613_else5949:
    null $P5016
    set $P5017, $P5016
  if2613_end5950:
    unless_null $P5017, vivi_26145951
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_26145951:
    unless_null $P5017, vivi_26155952
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_26155952:
    set $P5012, $P5017
  fallback5948:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2467
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback5953
    nqp_get_sc_object $P5025, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5024, $P5025
    set fb_tmp_522, $P5024
    repr_defined $I5004, fb_tmp_522
    unless $I5004 goto if2616_else5954 
    set $P5026, fb_tmp_522["$W"]
    set $P5028, $P5026
    goto if2616_end5955
  if2616_else5954:
    null $P5027
    set $P5028, $P5027
  if2616_end5955:
    unless_null $P5028, vivi_26175956
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_26175956:
    unless_null $P5028, vivi_26185957
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_26185957:
    set $P5023, $P5028
  fallback5953:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2468
    set fb_tmp_523, $P102
    repr_defined $I5005, fb_tmp_523
    unless $I5005 goto if2619_else5958 
    set $P5032, fb_tmp_523[0]
    set $P5034, $P5032
    goto if2619_end5959
  if2619_else5958:
    null $P5033
    set $P5034, $P5033
  if2619_end5959:
    unless_null $P5034, vivi_26205960
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_26205960:
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2470
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5038, "$name"
    set $S5003, $P5038
    concat $S5002, "&", $S5003
    $P5039 = $P5037."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5040, "$past"
    $P5041 = $P5036."new"($P5039, $P5040, "bind" :named("op"))
    $P5034."push"($P5041)
.annotate 'line', 2473
    find_lex $P5042, "$name"
    set $S5005, $P5042
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2477
    find_lex $P5043, "$block"
    set fb_tmp_524, $P5043
    repr_defined $I5006, fb_tmp_524
    unless $I5006 goto if2621_else5961 
    set $P5044, fb_tmp_524[0]
    set $P5046, $P5044
    goto if2621_end5962
  if2621_else5961:
    null $P5045
    set $P5046, $P5045
  if2621_end5962:
    unless_null $P5046, vivi_26225963
    nqp_get_sc_object $P5047, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5046, $P5047
  vivi_26225963:
    nqp_get_sc_object $P5048, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2479
    nqp_get_sc_object $P5049, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5050 = $P5049."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2480
    nqp_get_sc_object $P5051, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5052 = $P5051."new"("savecapture" :named("op"))
    $P5053 = $P5048."new"($P5050, $P5052, "bind" :named("op"))
    $P5046."push"($P5053)
.annotate 'line', 2482
    find_lex $P5054, "$block"
    set fb_tmp_525, $P5054
    repr_defined $I5007, fb_tmp_525
    unless $I5007 goto if2623_else5964 
    set $P5055, fb_tmp_525[0]
    set $P5057, $P5055
    goto if2623_end5965
  if2623_else5964:
    null $P5056
    set $P5057, $P5056
  if2623_end5965:
    unless_null $P5057, vivi_26245966
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5057, $P5058
  vivi_26245966:
    nqp_get_sc_object $P5059, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2484
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5061 = $P5060."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2485
    nqp_get_sc_object $P5062, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5063, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5064 = $P5063."new"("curcode" :named("op"))
    $P5065 = $P5062."new"($P5064, "getcodeobj" :named("op"))
    $P5066 = $P5059."new"($P5061, $P5065, "bind" :named("op"))
    $P5067 = $P5057."push"($P5066)
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1382484127.52628") :anon :lex :outer("cuid_486_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2488
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2489
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5967
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_526, $P5003
    repr_defined $I5001, fb_tmp_526
    unless $I5001 goto if2625_else5968 
    set $P5005, fb_tmp_526["$W"]
    set $P5007, $P5005
    goto if2625_end5969
  if2625_else5968:
    null $P5006
    set $P5007, $P5006
  if2625_end5969:
    unless_null $P5007, vivi_26265970
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_26265970:
    unless_null $P5007, vivi_26275971
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26275971:
    set $P5002, $P5007
  fallback5967:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2490
    set fb_tmp_527, $P101
    repr_defined $I5002, fb_tmp_527
    unless $I5002 goto if2628_else5972 
    set $P5011, fb_tmp_527[0]
    set $P5013, $P5011
    goto if2628_end5973
  if2628_else5972:
    null $P5012
    set $P5013, $P5012
  if2628_end5973:
    unless_null $P5013, vivi_26295974
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_26295974:
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2492
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5017, "$name"
    set $S5002, $P5017
    concat $S5001, "&", $S5002
    $P5018 = $P5016."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5019, "$past"
    $P5020 = $P5015."new"($P5018, $P5019, "bind" :named("op"))
    $P5013."push"($P5020)
.annotate 'line', 2495
    find_lex $P5021, "$name"
    set $S5004, $P5021
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5022, "$*SCOPE"
    unless_null $P5022, fallback5977
    nqp_get_sc_object $P5024, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5023, $P5024
    set fb_tmp_528, $P5023
    repr_defined $I5004, fb_tmp_528
    unless $I5004 goto if2631_else5978 
    set $P5025, fb_tmp_528["$SCOPE"]
    set $P5027, $P5025
    goto if2631_end5979
  if2631_else5978:
    null $P5026
    set $P5027, $P5026
  if2631_end5979:
    unless_null $P5027, vivi_26325980
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_26325980:
    unless_null $P5027, vivi_26335981
    die "Contextual $*SCOPE not found"
    box $P5029, "Contextual $*SCOPE not found"
    set $P5027, $P5029
  vivi_26335981:
    set $P5022, $P5027
  fallback5977:
    set $S5005, $P5022
    iseq $I5003, $S5005, "our"
    box $P5074, $I5003
    set $P5073, $P5074
    unless $I5003 goto if2630_end5976 
.annotate 'line', 2496
.annotate 'line', 2499
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback5982
    nqp_get_sc_object $P5032, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5031, $P5032
    set fb_tmp_529, $P5031
    repr_defined $I5005, fb_tmp_529
    unless $I5005 goto if2634_else5983 
    set $P5033, fb_tmp_529["$W"]
    set $P5035, $P5033
    goto if2634_end5984
  if2634_else5983:
    null $P5034
    set $P5035, $P5034
  if2634_end5984:
    unless_null $P5035, vivi_26355985
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_26355985:
    unless_null $P5035, vivi_26365986
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_26365986:
    set $P5030, $P5035
  fallback5982:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback5987
    nqp_get_sc_object $P5040, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5039, $P5040
    set fb_tmp_530, $P5039
    repr_defined $I5006, fb_tmp_530
    unless $I5006 goto if2637_else5988 
    set $P5041, fb_tmp_530["$PACKAGE"]
    set $P5043, $P5041
    goto if2637_end5989
  if2637_else5988:
    null $P5042
    set $P5043, $P5042
  if2637_end5989:
    unless_null $P5043, vivi_26385990
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5043, $P5044
  vivi_26385990:
    unless_null $P5043, vivi_26395991
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_26395991:
    set $P5038, $P5043
  fallback5987:
    find_lex $P5046, "$name"
    find_lex $P5047, "$past"
    $P5030."install_package_routine"($P5038, $P5046, $P5047)
.annotate 'line', 2500
    set fb_tmp_531, $P101
    repr_defined $I5007, fb_tmp_531
    unless $I5007 goto if2640_else5992 
    set $P5048, fb_tmp_531[0]
    set $P5050, $P5048
    goto if2640_end5993
  if2640_else5992:
    null $P5049
    set $P5050, $P5049
  if2640_end5993:
    unless_null $P5050, vivi_26415994
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5050, $P5051
  vivi_26415994:
    nqp_get_sc_object $P5052, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2502
    new $P5053, 'ResizablePMCArray'
    find_lex $P5054, "$name"
    push $P5053, $P5054
    find_lex $P5055, "$/"
    $P5056 = "&lexical_package_lookup"($P5053, $P5055)
.annotate 'line', 2503
    nqp_get_sc_object $P5057, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_lex $P5058, "$name"
    set $S5007, $P5058
    concat $S5006, "&", $S5007
    $P5059 = $P5057."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5060 = $P5052."new"($P5056, $P5059, "bind" :named("op"))
    $P5050."push"($P5060)
.annotate 'line', 2508
    find_lex $P5061, "$past"
    $P5061."blocktype"("declaration_static")
.annotate 'line', 2512
    find_dynamic_lex $P5062, "$*W"
    unless_null $P5062, fallback5995
    nqp_get_sc_object $P5064, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5063, $P5064
    set fb_tmp_532, $P5063
    repr_defined $I5008, fb_tmp_532
    unless $I5008 goto if2642_else5996 
    set $P5065, fb_tmp_532["$W"]
    set $P5067, $P5065
    goto if2642_end5997
  if2642_else5996:
    null $P5066
    set $P5067, $P5066
  if2642_end5997:
    unless_null $P5067, vivi_26435998
    nqp_get_sc_object $P5068, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5067, $P5068
  vivi_26435998:
    unless_null $P5067, vivi_26445999
    die "Contextual $*W not found"
    box $P5069, "Contextual $*W not found"
    set $P5067, $P5069
  vivi_26445999:
    set $P5062, $P5067
  fallback5995:
    find_lex $P5070, "$past"
    find_lex $P5071, "$name"
    $P5072 = $P5062."create_code"($P5070, $P5071, 0)
    set $P5073, $P5072
  if2630_end5976:
    .return ($P5073) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1382484127.52628") :anon :lex :outer("cuid_300_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2539
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_301_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2543
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5113 = 'cuid_490_1382484127.52628' 
    capture_lex $P5113 
    .const 'Sub' $P5113 = 'cuid_491_1382484127.52628' 
    capture_lex $P5113 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_539 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc fb_tmp_565 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6043
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback6043:
    set fb_tmp_539, _lex_param_1
    repr_defined $I5001, fb_tmp_539
    unless $I5001 goto if2666_else6041 
    set $P5005, fb_tmp_539["onlystar"]
    set $P5007, $P5005
    goto if2666_end6042
  if2666_else6041:
    null $P5006
    set $P5007, $P5006
  if2666_end6042:
    unless_null $P5007, vivi_26676044
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_26676044:
    unless $P5007 goto if2665_else6039 
.annotate 'line', 2547
.annotate 'line', 2548
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if2665_end6040
  if2665_else6039:
.annotate 'line', 2550
.annotate 'line', 2551
    unless_null _lex_param_1, fallback6047
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5010
  fallback6047:
    set fb_tmp_540, _lex_param_1
    repr_defined $I5002, fb_tmp_540
    unless $I5002 goto if2668_else6045 
    set $P5011, fb_tmp_540["blockoid"]
    set $P5013, $P5011
    goto if2668_end6046
  if2668_else6045:
    null $P5012
    set $P5013, $P5012
  if2668_end6046:
    unless_null $P5013, vivi_26696048
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_26696048:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback6051
    nqp_get_sc_object $P5018, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5017, $P5018
    set fb_tmp_541, $P5017
    repr_defined $I5003, fb_tmp_541
    unless $I5003 goto if2671_else6052 
    set $P5019, fb_tmp_541["$RETURN_USED"]
    set $P5021, $P5019
    goto if2671_end6053
  if2671_else6052:
    null $P5020
    set $P5021, $P5020
  if2671_end6053:
    unless_null $P5021, vivi_26726054
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_26726054:
    unless_null $P5021, vivi_26736055
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_26736055:
    set $P5016, $P5021
  fallback6051:
    set $P5029, $P5016
    unless $P5016 goto if2670_end6050 
.annotate 'line', 2552
.annotate 'line', 2553
    set fb_tmp_542, $P101
    repr_defined $I5004, fb_tmp_542
    unless $I5004 goto if2674_else6056 
    set $P5024, fb_tmp_542[1]
    set $P5026, $P5024
    goto if2674_end6057
  if2674_else6056:
    null $P5025
    set $P5026, $P5025
  if2674_end6057:
    unless_null $P5026, vivi_26756058
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_26756058:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if2670_end6050:
  if2665_end6040:
.annotate 'line', 2556
    $P101."blocktype"("declaration_static")
    set fb_tmp_543, $P101
    repr_defined $I5005, fb_tmp_543
    unless $I5005 goto if2677_else6061 
    set $P5030, fb_tmp_543["signature_has_invocant"]
    set $P5032, $P5030
    goto if2677_end6062
  if2677_else6061:
    null $P5031
    set $P5032, $P5031
  if2677_end6062:
    unless_null $P5032, vivi_26786063
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_26786063:
    if $P5032 goto unless2676_end6060 
.annotate 'line', 2559
.annotate 'line', 2560
    set fb_tmp_544, $P101
    repr_defined $I5006, fb_tmp_544
    unless $I5006 goto if2679_else6064 
    set $P5034, fb_tmp_544[0]
    set $P5036, $P5034
    goto if2679_end6065
  if2679_else6064:
    null $P5035
    set $P5036, $P5035
  if2679_end6065:
    unless_null $P5036, vivi_26806066
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5036, $P5037
  vivi_26806066:
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    find_dynamic_lex $P5039, "$*PACKAGE"
    unless_null $P5039, fallback6067
    nqp_get_sc_object $P5041, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5040, $P5041
    set fb_tmp_545, $P5040
    repr_defined $I5007, fb_tmp_545
    unless $I5007 goto if2681_else6068 
    set $P5042, fb_tmp_545["$PACKAGE"]
    set $P5044, $P5042
    goto if2681_end6069
  if2681_else6068:
    null $P5043
    set $P5044, $P5043
  if2681_end6069:
    unless_null $P5044, vivi_26826070
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5044, $P5045
  vivi_26826070:
    unless_null $P5044, vivi_26836071
    die "Contextual $*PACKAGE not found"
    box $P5046, "Contextual $*PACKAGE not found"
    set $P5044, $P5046
  vivi_26836071:
    set $P5039, $P5044
  fallback6067:
    $P5047 = $P5038."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5039 :named("returns"))
    $P5048 = $P5036."unshift"($P5047)
  unless2676_end6060:
.annotate 'line', 2565
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5049, ""
    set $P102, $P5049
    unless_null _lex_param_1, fallback6076
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5050
  fallback6076:
    set fb_tmp_546, _lex_param_1
    repr_defined $I5008, fb_tmp_546
    unless $I5008 goto if2685_else6074 
    set $P5051, fb_tmp_546["deflongname"]
    set $P5053, $P5051
    goto if2685_end6075
  if2685_else6074:
    null $P5052
    set $P5053, $P5052
  if2685_end6075:
    unless_null $P5053, vivi_26866077
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5053, $P5054
  vivi_26866077:
    unless $P5053 goto if2684_else6072 
.annotate 'line', 2569
    unless_null _lex_param_1, fallback6080
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5055
  fallback6080:
    set fb_tmp_547, _lex_param_1
    repr_defined $I5009, fb_tmp_547
    unless $I5009 goto if2687_else6078 
    set $P5056, fb_tmp_547["private"]
    set $P5058, $P5056
    goto if2687_end6079
  if2687_else6078:
    null $P5057
    set $P5058, $P5057
  if2687_end6079:
    unless_null $P5058, vivi_26886081
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5058, $P5059
  vivi_26886081:
    set $S5002, $P5058
.annotate 'line', 2570
    unless_null _lex_param_1, fallback6084
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5060
  fallback6084:
    set fb_tmp_548, _lex_param_1
    repr_defined $I5010, fb_tmp_548
    unless $I5010 goto if2689_else6082 
    set $P5061, fb_tmp_548["deflongname"]
    set $P5063, $P5061
    goto if2689_end6083
  if2689_else6082:
    null $P5062
    set $P5063, $P5062
  if2689_end6083:
    unless_null $P5063, vivi_26906085
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5063, $P5064
  vivi_26906085:
    $P5065 = $P5063."ast"()
    set $S5003, $P5065
    concat $S5001, $S5002, $S5003
    box $P5066, $S5001
    set $P102, $P5066
    goto if2684_end6073
  if2684_else6072:
    unless_null _lex_param_1, fallback6090
    nqp_get_sc_object $P5067, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5067
  fallback6090:
    set fb_tmp_549, _lex_param_1
    repr_defined $I5011, fb_tmp_549
    unless $I5011 goto if2692_else6088 
    set $P5068, fb_tmp_549["latename"]
    set $P5070, $P5068
    goto if2692_end6089
  if2692_else6088:
    null $P5069
    set $P5070, $P5069
  if2692_end6089:
    unless_null $P5070, vivi_26936091
    nqp_get_sc_object $P5071, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5070, $P5071
  vivi_26936091:
    set $P5088, $P5070
    unless $P5070 goto if2691_end6087 
.annotate 'line', 2572
    find_dynamic_lex $P5072, "$*PKGDECL"
    unless_null $P5072, fallback6094
    nqp_get_sc_object $P5074, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5073, $P5074
    set fb_tmp_550, $P5073
    repr_defined $I5013, fb_tmp_550
    unless $I5013 goto if2695_else6095 
    set $P5075, fb_tmp_550["$PKGDECL"]
    set $P5077, $P5075
    goto if2695_end6096
  if2695_else6095:
    null $P5076
    set $P5077, $P5076
  if2695_end6096:
    unless_null $P5077, vivi_26966097
    nqp_get_sc_object $P5078, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5077, $P5078
  vivi_26966097:
    unless_null $P5077, vivi_26976098
    die "Contextual $*PKGDECL not found"
    box $P5079, "Contextual $*PKGDECL not found"
    set $P5077, $P5079
  vivi_26976098:
    set $P5072, $P5077
  fallback6094:
    set $S5004, $P5072
    isne $I5012, $S5004, "role"
    unless $I5012 goto if2694_end6093 
.annotate 'line', 2573
.annotate 'line', 2574
    $P5080 = _lex_param_1."CURSOR"()
    $P5081 = $P5080."panic"("Late-bound method name only valid in role")
  if2694_end6093:
    unless_null _lex_param_1, fallback6101
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5082
  fallback6101:
    set fb_tmp_551, _lex_param_1
    repr_defined $I5014, fb_tmp_551
    unless $I5014 goto if2698_else6099 
    set $P5083, fb_tmp_551["latename"]
    set $P5085, $P5083
    goto if2698_end6100
  if2698_else6099:
    null $P5084
    set $P5085, $P5084
  if2698_end6100:
    unless_null $P5085, vivi_26996102
    nqp_get_sc_object $P5086, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5085, $P5086
  vivi_26996102:
    set $S5006, $P5085
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5087, $S5005
    set $P102, $P5087
    set $P5088, $P102
  if2691_end6087:
  if2684_end6073:
    set $S5007, $P102
    isne $I5015, $S5007, ""
    unless $I5015 goto if2700_end6104 
    .const 'Sub' $P5089 = 'cuid_490_1382484127.52628' 
    capture_lex $P5089
    $P5090 = $P5089()
  if2700_end6104:
.annotate 'line', 2612
    nqp_get_sc_object $P5091, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5092 = $P5091."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5092
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_563, $P101
    repr_defined $I5016, fb_tmp_563
    unless $I5016 goto if2736_else6164 
    set $P5093, fb_tmp_563["code_obj"]
    set $P5095, $P5093
    goto if2736_end6165
  if2736_else6164:
    null $P5094
    set $P5095, $P5094
  if2736_end6165:
    unless_null $P5095, vivi_27376166
    nqp_get_sc_object $P5096, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5095, $P5096
  vivi_27376166:
    set $P103["code_obj"], $P5095
.annotate 'line', 2616
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback6171
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5097
  fallback6171:
    set fb_tmp_564, _lex_param_1
    repr_defined $I5017, fb_tmp_564
    unless $I5017 goto if2739_else6169 
    set $P5098, fb_tmp_564["trait"]
    set $P5100, $P5098
    goto if2739_end6170
  if2739_else6169:
    null $P5099
    set $P5100, $P5099
  if2739_end6170:
    unless_null $P5100, vivi_27406172
    nqp_get_sc_object $P5101, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5100, $P5101
  vivi_27406172:
    set $P5112, $P5100
    unless $P5100 goto if2738_end6168 
.annotate 'line', 2617
    unless_null _lex_param_1, fallback6175
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5105
  fallback6175:
    set fb_tmp_565, _lex_param_1
    repr_defined $I5018, fb_tmp_565
    unless $I5018 goto if2741_else6173 
    set $P5106, fb_tmp_565["trait"]
    set $P5108, $P5106
    goto if2741_end6174
  if2741_else6173:
    null $P5107
    set $P5108, $P5107
  if2741_end6174:
    unless_null $P5108, vivi_27426176
    nqp_get_sc_object $P5109, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5108, $P5109
  vivi_27426176:
    set $P5102, $P5108
    iter $P5104, $P5108
  for_next6177:
    unless $P5104, for_done6179
    shift $P5111, $P5104
  for_redo6178:
    .const 'Sub' $P5110 = 'cuid_491_1382484127.52628' 
    capture_lex $P5110
    $P5102 = $P5110($P5111)
    goto for_next6177
  for_done6179:
    set $P5112, $P5102
  if2738_end6168:
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1382484127.52628") :anon :lex :outer("cuid_301_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2578
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_552 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 2580
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback6107
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5007, $P5008
    set fb_tmp_552, $P5007
    repr_defined $I5002, fb_tmp_552
    unless $I5002 goto if2702_else6108 
    set $P5009, fb_tmp_552["$MULTINESS"]
    set $P5011, $P5009
    goto if2702_end6109
  if2702_else6108:
    null $P5010
    set $P5011, $P5010
  if2702_end6109:
    unless_null $P5011, vivi_27036110
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_27036110:
    unless_null $P5011, vivi_27046111
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_27046111:
    set $P5006, $P5011
  fallback6107:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if2701_else6105 
    set $S5002, "add_multi_method"
    goto if2701_end6106
  if2701_else6105:
    set $S5002, "add_method"
  if2701_end6106:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback6112
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_553, $P5016
    repr_defined $I5004, fb_tmp_553
    unless $I5004 goto if2705_else6113 
    set $P5018, fb_tmp_553["$MULTINESS"]
    set $P5020, $P5018
    goto if2705_end6114
  if2705_else6113:
    null $P5019
    set $P5020, $P5019
  if2705_end6114:
    unless_null $P5020, vivi_27066115
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_27066115:
    unless_null $P5020, vivi_27076116
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_27076116:
    set $P5015, $P5020
  fallback6112:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2585
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback6117
    nqp_get_sc_object $P5026, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5025, $P5026
    set fb_tmp_554, $P5025
    repr_defined $I5005, fb_tmp_554
    unless $I5005 goto if2708_else6118 
    set $P5027, fb_tmp_554["$W"]
    set $P5029, $P5027
    goto if2708_end6119
  if2708_else6118:
    null $P5028
    set $P5029, $P5028
  if2708_end6119:
    unless_null $P5029, vivi_27096120
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_27096120:
    unless_null $P5029, vivi_27106121
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_27106121:
    set $P5024, $P5029
  fallback6117:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback6124
    nqp_get_sc_object $P5037, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5036, $P5037
    set fb_tmp_555, $P5036
    repr_defined $I5007, fb_tmp_555
    unless $I5007 goto if2712_else6125 
    set $P5038, fb_tmp_555["$MULTINESS"]
    set $P5040, $P5038
    goto if2712_end6126
  if2712_else6125:
    null $P5039
    set $P5040, $P5039
  if2712_end6126:
    unless_null $P5040, vivi_27136127
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_27136127:
    unless_null $P5040, vivi_27146128
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_27146128:
    set $P5035, $P5040
  fallback6124:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if2711_end6123 
.annotate 'line', 2586
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if2711_end6123:
.annotate 'line', 2587
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback6129
    nqp_get_sc_object $P5047, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5046, $P5047
    set fb_tmp_556, $P5046
    repr_defined $I5008, fb_tmp_556
    unless $I5008 goto if2715_else6130 
    set $P5048, fb_tmp_556["$W"]
    set $P5050, $P5048
    goto if2715_end6131
  if2715_else6130:
    null $P5049
    set $P5050, $P5049
  if2715_end6131:
    unless_null $P5050, vivi_27166132
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5050, $P5051
  vivi_27166132:
    unless_null $P5050, vivi_27176133
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_27176133:
    set $P5045, $P5050
  fallback6129:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback6134
    nqp_get_sc_object $P5055, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5054, $P5055
    set fb_tmp_557, $P5054
    repr_defined $I5009, fb_tmp_557
    unless $I5009 goto if2718_else6135 
    set $P5056, fb_tmp_557["$PACKAGE"]
    set $P5058, $P5056
    goto if2718_end6136
  if2718_else6135:
    null $P5057
    set $P5058, $P5057
  if2718_end6136:
    unless_null $P5058, vivi_27196137
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5058, $P5059
  vivi_27196137:
    unless_null $P5058, vivi_27206138
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_27206138:
    set $P5053, $P5058
  fallback6134:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback6141
    nqp_get_sc_object $P5065, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5064, $P5065
    set fb_tmp_558, $P5064
    repr_defined $I5011, fb_tmp_558
    unless $I5011 goto if2722_else6142 
    set $P5066, fb_tmp_558["$SCOPE"]
    set $P5068, $P5066
    goto if2722_end6143
  if2722_else6142:
    null $P5067
    set $P5068, $P5067
  if2722_end6143:
    unless_null $P5068, vivi_27236144
    nqp_get_sc_object $P5069, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5068, $P5069
  vivi_27236144:
    unless_null $P5068, vivi_27246145
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_27246145:
    set $P5063, $P5068
  fallback6141:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if2721_end6140 
.annotate 'line', 2591
.annotate 'line', 2592
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback6146
    nqp_get_sc_object $P5073, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5072, $P5073
    set fb_tmp_559, $P5072
    repr_defined $I5012, fb_tmp_559
    unless $I5012 goto if2725_else6147 
    set $P5074, fb_tmp_559["$W"]
    set $P5076, $P5074
    goto if2725_end6148
  if2725_else6147:
    null $P5075
    set $P5076, $P5075
  if2725_end6148:
    unless_null $P5076, vivi_27266149
    nqp_get_sc_object $P5077, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5076, $P5077
  vivi_27266149:
    unless_null $P5076, vivi_27276150
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_27276150:
    set $P5071, $P5076
  fallback6146:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback6151
    nqp_get_sc_object $P5081, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5080, $P5081
    set fb_tmp_560, $P5080
    repr_defined $I5013, fb_tmp_560
    unless $I5013 goto if2728_else6152 
    set $P5082, fb_tmp_560["$PACKAGE"]
    set $P5084, $P5082
    goto if2728_end6153
  if2728_else6152:
    null $P5083
    set $P5084, $P5083
  if2728_end6153:
    unless_null $P5084, vivi_27296154
    nqp_get_sc_object $P5085, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5084, $P5085
  vivi_27296154:
    unless_null $P5084, vivi_27306155
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_27306155:
    set $P5079, $P5084
  fallback6151:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if2721_end6140:
    set $P5115, $P102
    unless $P102 goto if2731_end6157 
.annotate 'line', 2597
.annotate 'line', 2598
    find_lex $P5090, "$past"
    set fb_tmp_561, $P5090
    repr_defined $I5014, fb_tmp_561
    unless $I5014 goto if2732_else6158 
    set $P5091, fb_tmp_561[0]
    set $P5093, $P5091
    goto if2732_end6159
  if2732_else6158:
    null $P5092
    set $P5093, $P5092
  if2732_end6159:
    unless_null $P5093, vivi_27336160
    nqp_get_sc_object $P5094, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5093, $P5094
  vivi_27336160:
    nqp_get_sc_object $P5095, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2600
    nqp_get_sc_object $P5096, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5097 = $P5096."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2601
    nqp_get_sc_object $P5098, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5099 = $P5098."new"("savecapture" :named("op"))
    $P5100 = $P5095."new"($P5097, $P5099, "bind" :named("op"))
    $P5093."push"($P5100)
.annotate 'line', 2603
    find_lex $P5101, "$past"
    set fb_tmp_562, $P5101
    repr_defined $I5015, fb_tmp_562
    unless $I5015 goto if2734_else6161 
    set $P5102, fb_tmp_562[0]
    set $P5104, $P5102
    goto if2734_end6162
  if2734_else6161:
    null $P5103
    set $P5104, $P5103
  if2734_end6162:
    unless_null $P5104, vivi_27356163
    nqp_get_sc_object $P5105, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5104, $P5105
  vivi_27356163:
    nqp_get_sc_object $P5106, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2605
    nqp_get_sc_object $P5107, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5108 = $P5107."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2606
    nqp_get_sc_object $P5109, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    nqp_get_sc_object $P5110, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5111 = $P5110."new"("curcode" :named("op"))
    $P5112 = $P5109."new"($P5111, "getcodeobj" :named("op"))
    $P5113 = $P5106."new"($P5108, $P5112, "bind" :named("op"))
    $P5114 = $P5104."push"($P5113)
    set $P5115, $P5114
  if2731_end6157:
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1382484127.52628") :anon :lex :outer("cuid_301_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2618
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_302_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2670
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_492_1382484127.52628' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_493_1382484127.52628' 
    capture_lex $P5039 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_566 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2671
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6180
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_566, $P5004
    repr_defined $I5001, fb_tmp_566
    unless $I5001 goto if2743_else6181 
    set $P5006, fb_tmp_566["$W"]
    set $P5008, $P5006
    goto if2743_end6182
  if2743_else6181:
    null $P5007
    set $P5008, $P5007
  if2743_end6182:
    unless_null $P5008, vivi_27446183
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_27446183:
    unless_null $P5008, vivi_27456184
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_27456184:
    set $P5003, $P5008
  fallback6180:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_567, $P101
    repr_defined $I5002, fb_tmp_567
    unless $I5002 goto if2746_else6185 
    set $P5012, fb_tmp_567[0]
    set $P5014, $P5012
    goto if2746_end6186
  if2746_else6185:
    null $P5013
    set $P5014, $P5013
  if2746_end6186:
    unless_null $P5014, vivi_27476187
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_27476187:
    set $P102, $P5014
    unless_null _lex_param_1, fallback6192
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5016
  fallback6192:
    set fb_tmp_568, _lex_param_1
    repr_defined $I5003, fb_tmp_568
    unless $I5003 goto if2749_else6190 
    set $P5017, fb_tmp_568["invocant"]
    set $P5019, $P5017
    goto if2749_end6191
  if2749_else6190:
    null $P5018
    set $P5019, $P5018
  if2749_end6191:
    unless_null $P5019, vivi_27506193
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_27506193:
    unless $P5019 goto if2748_end6189 
    .const 'Sub' $P5021 = 'cuid_492_1382484127.52628' 
    capture_lex $P5021
    $P5022 = $P5021()
  if2748_end6189:
    unless_null _lex_param_1, fallback6202
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5023
  fallback6202:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5004, fb_tmp_570
    unless $I5004 goto if2754_else6200 
    set $P5024, fb_tmp_570["parameter"]
    set $P5026, $P5024
    goto if2754_end6201
  if2754_else6200:
    null $P5025
    set $P5026, $P5025
  if2754_end6201:
    unless_null $P5026, vivi_27556203
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_27556203:
    set $P5038, $P5026
    unless $P5026 goto if2753_end6199 
.annotate 'line', 2683
    unless_null _lex_param_1, fallback6206
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5031
  fallback6206:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5005, fb_tmp_571
    unless $I5005 goto if2756_else6204 
    set $P5032, fb_tmp_571["parameter"]
    set $P5034, $P5032
    goto if2756_end6205
  if2756_else6204:
    null $P5033
    set $P5034, $P5033
  if2756_end6205:
    unless_null $P5034, vivi_27576207
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_27576207:
    set $P5028, $P5034
    iter $P5030, $P5034
  for_next6208:
    unless $P5030, for_done6210
    shift $P5037, $P5030
  for_redo6209:
    .const 'Sub' $P5036 = 'cuid_493_1382484127.52628' 
    capture_lex $P5036
    $P5028 = $P5036($P5037)
    goto for_next6208
  for_done6210:
    set $P5038, $P5028
  if2753_end6199:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1382484127.52628") :anon :lex :outer("cuid_302_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2673
    .lex "$inv", $P101 
    .local pmc fb_tmp_569 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2674
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6196
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback6196:
    set fb_tmp_569, $P5002
    repr_defined $I5001, fb_tmp_569
    unless $I5001 goto if2751_else6194 
    set $P5004, fb_tmp_569["invocant"]
    set $P5006, $P5004
    goto if2751_end6195
  if2751_else6194:
    null $P5005
    set $P5006, $P5005
  if2751_end6195:
    unless_null $P5006, vivi_27526197
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_27526197:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 2675
    find_lex $P5009, "$BLOCKINIT"
    $P5009."push"($P101)
.annotate 'line', 2676
    find_lex $P5010, "$BLOCKINIT"
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2678
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5013 = $P5012."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2679
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5015 = $P101."name"()
    $P5016 = $P5014."new"("lexical" :named("scope"), $P5015 :named("name"))
    $P5017 = $P5011."new"($P5013, $P5016, "bind" :named("op"))
    $P5010."push"($P5017)
    find_lex $P5018, "$BLOCK"
    box $P5019, 1
    set $P5018["signature_has_invocant"], $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1382484127.52628") :anon :lex :outer("cuid_302_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2684
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_303_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2688
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_495_1382484127.52628' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc fb_tmp_596 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6213
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback6213:
    set fb_tmp_572, _lex_param_1
    repr_defined $I5001, fb_tmp_572
    unless $I5001 goto if2758_else6211 
    set $P5004, fb_tmp_572["quant"]
    set $P5006, $P5004
    goto if2758_end6212
  if2758_else6211:
    null $P5005
    set $P5006, $P5005
  if2758_end6212:
    unless_null $P5006, vivi_27596214
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_27596214:
    set $P101, $P5006
    unless_null _lex_param_1, fallback6219
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6219:
    set fb_tmp_573, _lex_param_1
    repr_defined $I5002, fb_tmp_573
    unless $I5002 goto if2761_else6217 
    set $P5009, fb_tmp_573["named_param"]
    set $P5011, $P5009
    goto if2761_end6218
  if2761_else6217:
    null $P5010
    set $P5011, $P5010
  if2761_end6218:
    unless_null $P5011, vivi_27626220
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_27626220:
    unless $P5011 goto if2760_else6215 
.annotate 'line', 2691
.annotate 'line', 2692
    unless_null _lex_param_1, fallback6223
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5013
  fallback6223:
    set fb_tmp_574, _lex_param_1
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2763_else6221 
    set $P5014, fb_tmp_574["named_param"]
    set $P5016, $P5014
    goto if2763_end6222
  if2763_else6221:
    null $P5015
    set $P5016, $P5015
  if2763_end6222:
    unless_null $P5016, vivi_27646224
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_27646224:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if2765_end6226 
.annotate 'line', 2693
.annotate 'line', 2694
    unless_null _lex_param_1, fallback6233
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5019
  fallback6233:
    set fb_tmp_577, _lex_param_1
    repr_defined $I5007, fb_tmp_577
    unless $I5007 goto if2768_else6231 
    set $P5020, fb_tmp_577["named_param"]
    set $P5022, $P5020
    goto if2768_end6232
  if2768_else6231:
    null $P5021
    set $P5022, $P5021
  if2768_end6232:
    unless_null $P5022, vivi_27696234
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_27696234:
    set fb_tmp_576, $P5022
    repr_defined $I5006, fb_tmp_576
    unless $I5006 goto if2767_else6229 
    set $P5024, fb_tmp_576["param_var"]
    set $P5026, $P5024
    goto if2767_end6230
  if2767_else6229:
    null $P5025
    set $P5026, $P5025
  if2767_end6230:
    unless_null $P5026, vivi_27706235
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_27706235:
    set fb_tmp_575, $P5026
    repr_defined $I5005, fb_tmp_575
    unless $I5005 goto if2766_else6227 
    set $P5028, fb_tmp_575["sigil"]
    set $P5030, $P5028
    goto if2766_end6228
  if2766_else6227:
    null $P5029
    set $P5030, $P5029
  if2766_end6228:
    unless_null $P5030, vivi_27716236
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  vivi_27716236:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if2765_end6226:
    goto if2760_end6216
  if2760_else6215:
.annotate 'line', 2697
.annotate 'line', 2698
    unless_null _lex_param_1, fallback6239
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5036
  fallback6239:
    set fb_tmp_578, _lex_param_1
    repr_defined $I5008, fb_tmp_578
    unless $I5008 goto if2772_else6237 
    set $P5037, fb_tmp_578["param_var"]
    set $P5039, $P5037
    goto if2772_end6238
  if2772_else6237:
    null $P5038
    set $P5039, $P5038
  if2772_end6238:
    unless_null $P5039, vivi_27736240
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5039, $P5040
  vivi_27736240:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if2774_else6241 
.annotate 'line', 2699
.annotate 'line', 2700
    $P102."slurpy"(1)
.annotate 'line', 2701
    unless_null _lex_param_1, fallback6247
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5042
  fallback6247:
    set fb_tmp_580, _lex_param_1
    repr_defined $I5012, fb_tmp_580
    unless $I5012 goto if2776_else6245 
    set $P5043, fb_tmp_580["param_var"]
    set $P5045, $P5043
    goto if2776_end6246
  if2776_else6245:
    null $P5044
    set $P5045, $P5044
  if2776_end6246:
    unless_null $P5045, vivi_27776248
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_27776248:
    set fb_tmp_579, $P5045
    repr_defined $I5011, fb_tmp_579
    unless $I5011 goto if2775_else6243 
    set $P5047, fb_tmp_579["sigil"]
    set $P5049, $P5047
    goto if2775_end6244
  if2775_else6243:
    null $P5048
    set $P5049, $P5048
  if2775_end6244:
    unless_null $P5049, vivi_27786249
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_27786249:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if2774_end6242
  if2774_else6241:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if2779_end6251 
.annotate 'line', 2703
.annotate 'line', 2704
    unless_null _lex_param_1, fallback6256
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5052
  fallback6256:
    set fb_tmp_582, _lex_param_1
    repr_defined $I5015, fb_tmp_582
    unless $I5015 goto if2781_else6254 
    set $P5053, fb_tmp_582["param_var"]
    set $P5055, $P5053
    goto if2781_end6255
  if2781_else6254:
    null $P5054
    set $P5055, $P5054
  if2781_end6255:
    unless_null $P5055, vivi_27826257
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5055, $P5056
  vivi_27826257:
    set fb_tmp_581, $P5055
    repr_defined $I5014, fb_tmp_581
    unless $I5014 goto if2780_else6252 
    set $P5057, fb_tmp_581["sigil"]
    set $P5059, $P5057
    goto if2780_end6253
  if2780_else6252:
    null $P5058
    set $P5059, $P5058
  if2780_end6253:
    unless_null $P5059, vivi_27836258
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5059, $P5060
  vivi_27836258:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if2779_end6251:
    set $P5065, $P5063
  if2774_end6242:
  if2760_end6216:
    unless_null _lex_param_1, fallback6263
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5066
  fallback6263:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5016, fb_tmp_583
    unless $I5016 goto if2785_else6261 
    set $P5067, fb_tmp_583["default_value"]
    set $P5069, $P5067
    goto if2785_end6262
  if2785_else6261:
    null $P5068
    set $P5069, $P5068
  if2785_end6262:
    unless_null $P5069, vivi_27866264
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5069, $P5070
  vivi_27866264:
    unless $P5069 goto if2784_end6260 
.annotate 'line', 2707
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if2787_end6266 
.annotate 'line', 2708
.annotate 'line', 2709
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if2787_end6266:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if2788_end6268 
.annotate 'line', 2711
.annotate 'line', 2712
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if2788_end6268:
.annotate 'line', 2714
    unless_null _lex_param_1, fallback6275
    nqp_get_sc_object $P5075, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5075
  fallback6275:
    set fb_tmp_586, _lex_param_1
    repr_defined $I5021, fb_tmp_586
    unless $I5021 goto if2791_else6273 
    set $P5076, fb_tmp_586["default_value"]
    set $P5078, $P5076
    goto if2791_end6274
  if2791_else6273:
    null $P5077
    set $P5078, $P5077
  if2791_end6274:
    unless_null $P5078, vivi_27926276
    nqp_get_sc_object $P5079, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5078, $P5079
  vivi_27926276:
    set fb_tmp_585, $P5078
    repr_defined $I5020, fb_tmp_585
    unless $I5020 goto if2790_else6271 
    set $P5080, fb_tmp_585[0]
    set $P5082, $P5080
    goto if2790_end6272
  if2790_else6271:
    null $P5081
    set $P5082, $P5081
  if2790_end6272:
    unless_null $P5082, vivi_27936277
    nqp_get_sc_object $P5083, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5082, $P5083
  vivi_27936277:
    set fb_tmp_584, $P5082
    repr_defined $I5019, fb_tmp_584
    unless $I5019 goto if2789_else6269 
    set $P5084, fb_tmp_584["EXPR"]
    set $P5086, $P5084
    goto if2789_end6270
  if2789_else6269:
    null $P5085
    set $P5086, $P5085
  if2789_end6270:
    unless_null $P5086, vivi_27946278
    nqp_get_sc_object $P5087, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5086, $P5087
  vivi_27946278:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if2784_end6260:
.annotate 'line', 2716
    $P5090 = $P102."default"()
    if $P5090 goto unless2795_end6280 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback6281
    nqp_get_sc_object $P5093, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5092, $P5093
    set fb_tmp_587, $P5092
    repr_defined $I5022, fb_tmp_587
    unless $I5022 goto if2796_else6282 
    set $P5094, fb_tmp_587["$W"]
    set $P5096, $P5094
    goto if2796_end6283
  if2796_else6282:
    null $P5095
    set $P5096, $P5095
  if2796_end6283:
    unless_null $P5096, vivi_27976284
    nqp_get_sc_object $P5097, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5096, $P5097
  vivi_27976284:
    unless_null $P5096, vivi_27986285
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_27986285:
    set $P5091, $P5096
  fallback6281:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback6286
    nqp_get_sc_object $P5102, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5101, $P5102
    set fb_tmp_588, $P5101
    repr_defined $I5023, fb_tmp_588
    unless $I5023 goto if2799_else6287 
    set $P5103, fb_tmp_588["$W"]
    set $P5105, $P5103
    goto if2799_end6288
  if2799_else6287:
    null $P5104
    set $P5105, $P5104
  if2799_end6288:
    unless_null $P5105, vivi_28006289
    nqp_get_sc_object $P5106, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5105, $P5106
  vivi_28006289:
    unless_null $P5105, vivi_28016290
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_28016290:
    set $P5100, $P5105
  fallback6286:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless2795_end6280:
    unless_null _lex_param_1, fallback6295
    nqp_get_sc_object $P5111, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5111
  fallback6295:
    set fb_tmp_589, _lex_param_1
    repr_defined $I5024, fb_tmp_589
    unless $I5024 goto if2803_else6293 
    set $P5112, fb_tmp_589["typename"]
    set $P5114, $P5112
    goto if2803_end6294
  if2803_else6293:
    null $P5113
    set $P5114, $P5113
  if2803_end6294:
    unless_null $P5114, vivi_28046296
    nqp_get_sc_object $P5115, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5114, $P5115
  vivi_28046296:
    unless $P5114 goto if2802_end6292 
    .const 'Sub' $P5116 = 'cuid_495_1382484127.52628' 
    capture_lex $P5116
    $P5117 = $P5116()
  if2802_end6292:
    unless_null _lex_param_1, fallback6323
    nqp_get_sc_object $P5118, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5118
  fallback6323:
    set fb_tmp_594, _lex_param_1
    repr_defined $I5025, fb_tmp_594
    unless $I5025 goto if2818_else6321 
    set $P5119, fb_tmp_594["definedness"]
    set $P5121, $P5119
    goto if2818_end6322
  if2818_else6321:
    null $P5120
    set $P5121, $P5120
  if2818_end6322:
    unless_null $P5121, vivi_28196324
    nqp_get_sc_object $P5122, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5121, $P5122
  vivi_28196324:
    unless $P5121 goto if2817_end6320 
.annotate 'line', 2731
    unless_null _lex_param_1, fallback6329
    nqp_get_sc_object $P5123, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5123
  fallback6329:
    set fb_tmp_596, _lex_param_1
    repr_defined $I5027, fb_tmp_596
    unless $I5027 goto if2821_else6327 
    set $P5124, fb_tmp_596["definedness"]
    set $P5126, $P5124
    goto if2821_end6328
  if2821_else6327:
    null $P5125
    set $P5126, $P5125
  if2821_end6328:
    unless_null $P5126, vivi_28226330
    nqp_get_sc_object $P5127, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5126, $P5127
  vivi_28226330:
    set fb_tmp_595, $P5126
    repr_defined $I5026, fb_tmp_595
    unless $I5026 goto if2820_else6325 
    set $P5128, fb_tmp_595[0]
    set $P5130, $P5128
    goto if2820_end6326
  if2820_else6325:
    null $P5129
    set $P5130, $P5129
  if2820_end6326:
    unless_null $P5130, vivi_28236331
    nqp_get_sc_object $P5131, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5130, $P5131
  vivi_28236331:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if2817_end6320:
.annotate 'line', 2735
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1382484127.52628") :anon :lex :outer("cuid_303_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2719
    .const 'Sub' $P5019 = 'cuid_494_1382484127.52628' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2720
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6301
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback6301:
    set fb_tmp_591, $P5002
    repr_defined $I5002, fb_tmp_591
    unless $I5002 goto if2806_else6299 
    set $P5004, fb_tmp_591["typename"]
    set $P5006, $P5004
    goto if2806_end6300
  if2806_else6299:
    null $P5005
    set $P5006, $P5005
  if2806_end6300:
    unless_null $P5006, vivi_28076302
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28076302:
    set fb_tmp_590, $P5006
    repr_defined $I5001, fb_tmp_590
    unless $I5001 goto if2805_else6297 
    set $P5008, fb_tmp_590[0]
    set $P5010, $P5008
    goto if2805_end6298
  if2805_else6297:
    null $P5009
    set $P5010, $P5009
  if2805_end6298:
    unless_null $P5010, vivi_28086303
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_28086303:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2721
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if2809_end6305 
    .const 'Sub' $P5015 = 'cuid_494_1382484127.52628' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if2809_end6305:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1382484127.52628") :anon :lex :outer("cuid_495_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2722
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
.annotate 'line', 2723
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6306
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_592, $P5002
    repr_defined $I5001, fb_tmp_592
    unless $I5001 goto if2810_else6307 
    set $P5004, fb_tmp_592["$W"]
    set $P5006, $P5004
    goto if2810_end6308
  if2810_else6307:
    null $P5005
    set $P5006, $P5005
  if2810_end6308:
    unless_null $P5006, vivi_28116309
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28116309:
    unless_null $P5006, vivi_28126310
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28126310:
    set $P5001, $P5006
  fallback6306:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2724
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if2814_end6314 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6317
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  fallback6317:
    set fb_tmp_593, $P5015
    repr_defined $I5003, fb_tmp_593
    unless $I5003 goto if2815_else6315 
    set $P5017, fb_tmp_593["default_value"]
    set $P5019, $P5017
    goto if2815_end6316
  if2815_else6315:
    null $P5018
    set $P5019, $P5018
  if2815_end6316:
    unless_null $P5019, vivi_28166318
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5019, $P5020
  vivi_28166318:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if2814_end6314:
    set $P5026, $P5021
    unless $P5021 goto if2813_end6312 
.annotate 'line', 2725
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if2813_end6312:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_304_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2738
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_597 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2740
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5005 = $P5004."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5005
.annotate 'line', 2742
    find_dynamic_lex $P5006, "$*W"
    unless_null $P5006, fallback6332
    nqp_get_sc_object $P5008, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5007, $P5008
    set fb_tmp_597, $P5007
    repr_defined $I5001, fb_tmp_597
    unless $I5001 goto if2824_else6333 
    set $P5009, fb_tmp_597["$W"]
    set $P5011, $P5009
    goto if2824_end6334
  if2824_else6333:
    null $P5010
    set $P5011, $P5010
  if2824_end6334:
    unless_null $P5011, vivi_28256335
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_28256335:
    unless_null $P5011, vivi_28266336
    die "Contextual $*W not found"
    box $P5013, "Contextual $*W not found"
    set $P5011, $P5013
  vivi_28266336:
    set $P5006, $P5011
  fallback6332:
    $P5014 = $P5006."cur_lexpad"()
    $P5014."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2743
    $P5015 = _lex_param_1."!make"($P102)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_305_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2746
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc fb_tmp_600 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2747
    unless_null _lex_param_1, fallback6339
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6339:
    set fb_tmp_598, _lex_param_1
    repr_defined $I5001, fb_tmp_598
    unless $I5001 goto if2827_else6337 
    set $P5003, fb_tmp_598["param_var"]
    set $P5005, $P5003
    goto if2827_end6338
  if2827_else6337:
    null $P5004
    set $P5005, $P5004
  if2827_end6338:
    unless_null $P5005, vivi_28286340
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_28286340:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2748
    unless_null _lex_param_1, fallback6345
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6345:
    set fb_tmp_600, _lex_param_1
    repr_defined $I5003, fb_tmp_600
    unless $I5003 goto if2830_else6343 
    set $P5009, fb_tmp_600["param_var"]
    set $P5011, $P5009
    goto if2830_end6344
  if2830_else6343:
    null $P5010
    set $P5011, $P5010
  if2830_end6344:
    unless_null $P5011, vivi_28316346
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_28316346:
    set fb_tmp_599, $P5011
    repr_defined $I5002, fb_tmp_599
    unless $I5002 goto if2829_else6341 
    set $P5013, fb_tmp_599["name"]
    set $P5015, $P5013
    goto if2829_end6342
  if2829_else6341:
    null $P5014
    set $P5015, $P5014
  if2829_end6342:
    unless_null $P5015, vivi_28326347
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_28326347:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2749
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_306_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2752
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_496_1382484127.52628' 
    capture_lex $P5013 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2756
    nqp_get_sc_object $P5003, "20A8B78604B6E989C5DC1D669DAFFA35168CF57C-1382484085.68816", 127
    set $S5001, _lex_param_1
    $P5004 = $P5003."parse_name"($S5001)
    set $P101, $P5004
    box $P5005, 0
    set $P102, $P5005
    new $P5008, 'ExceptionHandler'
    set_label $P5008, catch_handler_28376354
    $P5008.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5008
    .const 'Sub' $P5006 = 'cuid_496_1382484127.52628' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5009, $P5007
    pop_eh 
    goto skip_handler_28366353
  catch_handler_28376354:
    .get_results ($P5008) 
    set $I10001, 1
    set $P5008["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5008
    pop_upto_eh $P5008
    pop_eh 
    set $P5009, $P10001
    goto skip_handler_28366353
  skip_handler_28366353:
    set $P5012, $P102
    if $P102 goto unless2838_end6356 
.annotate 'line', 2763
.annotate 'line', 2764
    $P5010 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5011 = $P5010."panic"($S5002)
    set $P5012, $P5011
  unless2838_end6356:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1382484127.52628") :anon :lex :outer("cuid_306_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2758
    .lex "$sym", $P101 
    .local pmc fb_tmp_601 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2759
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6348
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_601, $P5003
    repr_defined $I5001, fb_tmp_601
    unless $I5001 goto if2833_else6349 
    set $P5005, fb_tmp_601["$W"]
    set $P5007, $P5005
    goto if2833_end6350
  if2833_else6349:
    null $P5006
    set $P5007, $P5006
  if2833_end6350:
    unless_null $P5007, vivi_28346351
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_28346351:
    unless_null $P5007, vivi_28356352
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_28356352:
    set $P5002, $P5007
  fallback6348:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2760
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    $P5012."!make"($P5014)
    box $P5015, 1
    store_lex "$found", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_307_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2768
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_602 
.annotate 'line', 2769
    unless_null _lex_param_1, fallback6359
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6359:
    set fb_tmp_602, _lex_param_1
    repr_defined $I5001, fb_tmp_602
    unless $I5001 goto if2839_else6357 
    set $P5002, fb_tmp_602["trait_mod"]
    set $P5004, $P5002
    goto if2839_end6358
  if2839_else6357:
    null $P5003
    set $P5004, $P5003
  if2839_end6358:
    unless_null $P5004, vivi_28406360
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_28406360:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_308_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2772
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_498_1382484127.52628' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_500_1382484127.52628' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_501_1382484127.52628' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_502_1382484127.52628' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_503_1382484127.52628' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_612 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_622 
    .local pmc fb_tmp_629 
    unless_null _lex_param_1, fallback6365
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6365:
    set fb_tmp_603, _lex_param_1
    repr_defined $I5002, fb_tmp_603
    unless $I5002 goto if2842_else6363 
    set $P5002, fb_tmp_603["longname"]
    set $P5004, $P5002
    goto if2842_end6364
  if2842_else6363:
    null $P5003
    set $P5004, $P5003
  if2842_end6364:
    unless_null $P5004, vivi_28436366
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_28436366:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if2841_else6361 
    .const 'Sub' $P5006 = 'cuid_498_1382484127.52628' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if2841_end6362
  if2841_else6361:
    unless_null _lex_param_1, fallback6407
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6407:
    set fb_tmp_612, _lex_param_1
    repr_defined $I5004, fb_tmp_612
    unless $I5004 goto if2866_else6405 
    set $P5009, fb_tmp_612["longname"]
    set $P5011, $P5009
    goto if2866_end6406
  if2866_else6405:
    null $P5010
    set $P5011, $P5010
  if2866_end6406:
    unless_null $P5011, vivi_28676408
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_28676408:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if2865_else6403 
    .const 'Sub' $P5013 = 'cuid_500_1382484127.52628' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if2865_end6404
  if2865_else6403:
    unless_null _lex_param_1, fallback6435
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5015
  fallback6435:
    set fb_tmp_618, _lex_param_1
    repr_defined $I5006, fb_tmp_618
    unless $I5006 goto if2882_else6433 
    set $P5016, fb_tmp_618["longname"]
    set $P5018, $P5016
    goto if2882_end6434
  if2882_else6433:
    null $P5017
    set $P5018, $P5017
  if2882_end6434:
    unless_null $P5018, vivi_28836436
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_28836436:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if2881_else6431 
.annotate 'line', 2798
.annotate 'line', 2799
    .const 'Sub' $P5021 = 'cuid_501_1382484127.52628' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if2881_end6432
  if2881_else6431:
    unless_null _lex_param_1, fallback6446
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5023
  fallback6446:
    set fb_tmp_620, _lex_param_1
    repr_defined $I5008, fb_tmp_620
    unless $I5008 goto if2888_else6444 
    set $P5024, fb_tmp_620["longname"]
    set $P5026, $P5024
    goto if2888_end6445
  if2888_else6444:
    null $P5025
    set $P5026, $P5025
  if2888_end6445:
    unless_null $P5026, vivi_28896447
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_28896447:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if2887_else6442 
.annotate 'line', 2801
.annotate 'line', 2802
    .const 'Sub' $P5029 = 'cuid_502_1382484127.52628' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if2887_end6443
  if2887_else6442:
    unless_null _lex_param_1, fallback6457
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5031
  fallback6457:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5010, fb_tmp_622
    unless $I5010 goto if2894_else6455 
    set $P5032, fb_tmp_622["longname"]
    set $P5034, $P5032
    goto if2894_end6456
  if2894_else6455:
    null $P5033
    set $P5034, $P5033
  if2894_end6456:
    unless_null $P5034, vivi_28956458
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_28956458:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if2893_else6453 
.annotate 'line', 2804
.annotate 'line', 2805
    .const 'Sub' $P5037 = 'cuid_503_1382484127.52628' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if2893_end6454
  if2893_else6453:
.annotate 'line', 2812
.annotate 'line', 2813
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback6484
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5040
  fallback6484:
    set fb_tmp_629, _lex_param_1
    repr_defined $I5011, fb_tmp_629
    unless $I5011 goto if2910_else6482 
    set $P5041, fb_tmp_629["longname"]
    set $P5043, $P5041
    goto if2910_end6483
  if2910_else6482:
    null $P5042
    set $P5043, $P5042
  if2910_end6483:
    unless_null $P5043, vivi_29116485
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5043, $P5044
  vivi_29116485:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if2893_end6454:
    set $P5047, $P5046
  if2887_end6443:
    set $P5048, $P5047
  if2881_end6432:
    set $P5049, $P5048
  if2865_end6404:
    set $P5050, $P5049
  if2841_end6362:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1382484127.52628") :anon :lex :outer("cuid_308_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2773
    .const 'Sub' $P5043 = 'cuid_497_1382484127.52628' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_604 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc fb_tmp_607 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P104, $P5004
.annotate 'line', 2775
    find_lex $P5005, "$/"
    unless_null $P5005, fallback6371
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  fallback6371:
    set fb_tmp_605, $P5005
    repr_defined $I5002, fb_tmp_605
    unless $I5002 goto if2845_else6369 
    set $P5007, fb_tmp_605["circumfix"]
    set $P5009, $P5007
    goto if2845_end6370
  if2845_else6369:
    null $P5008
    set $P5009, $P5008
  if2845_end6370:
    unless_null $P5009, vivi_28466372
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_28466372:
    set fb_tmp_604, $P5009
    repr_defined $I5001, fb_tmp_604
    unless $I5001 goto if2844_else6367 
    set $P5011, fb_tmp_604[0]
    set $P5013, $P5011
    goto if2844_end6368
  if2844_else6367:
    null $P5012
    set $P5013, $P5012
  if2844_end6368:
    unless_null $P5013, vivi_28476373
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_28476373:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2777
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5017 = $P5016."ACCEPTS"($P101)
    if $P5017 goto unless2848_end6375 
.annotate 'line', 2776
    find_lex $P5018, "$/"
    $P5019 = $P5018."CURSOR"()
    $P5020 = $P5019."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless2848_end6375:
.annotate 'line', 2778
    $P5021 = $P101."value"()
    set $P102, $P5021
    find_dynamic_lex $P5022, "$*PACKAGE"
    unless_null $P5022, fallback6376
    nqp_get_sc_object $P5024, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5023, $P5024
    set fb_tmp_606, $P5023
    repr_defined $I5003, fb_tmp_606
    unless $I5003 goto if2849_else6377 
    set $P5025, fb_tmp_606["$PACKAGE"]
    set $P5027, $P5025
    goto if2849_end6378
  if2849_else6377:
    null $P5026
    set $P5027, $P5026
  if2849_end6378:
    unless_null $P5027, vivi_28506379
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_28506379:
    unless_null $P5027, vivi_28516380
    die "Contextual $*PACKAGE not found"
    box $P5029, "Contextual $*PACKAGE not found"
    set $P5027, $P5029
  vivi_28516380:
    set $P5022, $P5027
  fallback6376:
    set $P103, $P5022
    find_dynamic_lex $P5030, "$*SCOPE"
    unless_null $P5030, fallback6381
    nqp_get_sc_object $P5032, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5031, $P5032
    set fb_tmp_607, $P5031
    repr_defined $I5005, fb_tmp_607
    unless $I5005 goto if2852_else6382 
    set $P5033, fb_tmp_607["$SCOPE"]
    set $P5035, $P5033
    goto if2852_end6383
  if2852_else6382:
    null $P5034
    set $P5035, $P5034
  if2852_end6383:
    unless_null $P5035, vivi_28536384
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_28536384:
    unless_null $P5035, vivi_28546385
    die "Contextual $*SCOPE not found"
    box $P5037, "Contextual $*SCOPE not found"
    set $P5035, $P5037
  vivi_28546385:
    set $P5030, $P5035
  fallback6381:
    set $S5001, $P5030
    iseq $I5004, $S5001, "proto"
    box $P5038, $I5004
    set $P104, $P5038
.annotate 'line', 2781
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_497_1382484127.52628' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1382484127.52628") :anon :lex :outer("cuid_498_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2781
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_608 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
.annotate 'line', 2782
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6386
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_608, $P5002
    repr_defined $I5001, fb_tmp_608
    unless $I5001 goto if2855_else6387 
    set $P5004, fb_tmp_608["$W"]
    set $P5006, $P5004
    goto if2855_end6388
  if2855_else6387:
    null $P5005
    set $P5006, $P5005
  if2855_end6388:
    unless_null $P5006, vivi_28566389
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28566389:
    unless_null $P5006, vivi_28576390
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28576390:
    set $P5001, $P5006
  fallback6386:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2783
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_609, $P5012
    repr_defined $I5003, fb_tmp_609
    unless $I5003 goto if2858_else6392 
    set $P5013, fb_tmp_609["code_obj"]
    set $P5015, $P5013
    goto if2858_end6393
  if2858_else6392:
    null $P5014
    set $P5015, $P5014
  if2858_end6393:
    unless_null $P5015, vivi_28596394
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_28596394:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor6391
.annotate 'line', 2784
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback6395
    nqp_get_sc_object $P5019, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5018, $P5019
    set fb_tmp_610, $P5018
    repr_defined $I5004, fb_tmp_610
    unless $I5004 goto if2860_else6396 
    set $P5020, fb_tmp_610["$W"]
    set $P5022, $P5020
    goto if2860_end6397
  if2860_else6396:
    null $P5021
    set $P5022, $P5021
  if2860_end6397:
    unless_null $P5022, vivi_28616398
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_28616398:
    unless_null $P5022, vivi_28626399
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_28626399:
    set $P5017, $P5022
  fallback6395:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_611, $P5025
    repr_defined $I5005, fb_tmp_611
    unless $I5005 goto if2863_else6400 
    set $P5026, fb_tmp_611["block_past"]
    set $P5028, $P5026
    goto if2863_end6401
  if2863_else6400:
    null $P5027
    set $P5028, $P5027
  if2863_end6401:
    unless_null $P5028, vivi_28646402
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_28646402:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor6391:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1382484127.52628") :anon :lex :outer("cuid_308_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2787
    .const 'Sub' $P5033 = 'cuid_499_1382484127.52628' 
    capture_lex $P5033 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 2789
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6413
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  fallback6413:
    set fb_tmp_614, $P5004
    repr_defined $I5002, fb_tmp_614
    unless $I5002 goto if2869_else6411 
    set $P5006, fb_tmp_614["circumfix"]
    set $P5008, $P5006
    goto if2869_end6412
  if2869_else6411:
    null $P5007
    set $P5008, $P5007
  if2869_end6412:
    unless_null $P5008, vivi_28706414
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_28706414:
    set fb_tmp_613, $P5008
    repr_defined $I5001, fb_tmp_613
    unless $I5001 goto if2868_else6409 
    set $P5010, fb_tmp_613[0]
    set $P5012, $P5010
    goto if2868_end6410
  if2868_else6409:
    null $P5011
    set $P5012, $P5011
  if2868_end6410:
    unless_null $P5012, vivi_28716415
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_28716415:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2791
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5016 = $P5015."ACCEPTS"($P101)
    if $P5016 goto unless2872_end6417 
.annotate 'line', 2790
    find_lex $P5017, "$/"
    $P5018 = $P5017."CURSOR"()
    $P5019 = $P5018."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless2872_end6417:
.annotate 'line', 2792
    $P5020 = $P101."value"()
    set $P102, $P5020
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback6418
    nqp_get_sc_object $P5023, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5022, $P5023
    set fb_tmp_615, $P5022
    repr_defined $I5003, fb_tmp_615
    unless $I5003 goto if2873_else6419 
    set $P5024, fb_tmp_615["$PACKAGE"]
    set $P5026, $P5024
    goto if2873_end6420
  if2873_else6419:
    null $P5025
    set $P5026, $P5025
  if2873_end6420:
    unless_null $P5026, vivi_28746421
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_28746421:
    unless_null $P5026, vivi_28756422
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_28756422:
    set $P5021, $P5026
  fallback6418:
    set $P103, $P5021
.annotate 'line', 2794
    find_dynamic_lex $P5029, "$/"
    .const 'Sub' $P5031 = 'cuid_499_1382484127.52628' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5032 = $P5029."!make"($P5030)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1382484127.52628") :anon :lex :outer("cuid_500_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2794
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_616 
    .local pmc fb_tmp_617 
.annotate 'line', 2795
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback6423
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_616, $P5002
    repr_defined $I5001, fb_tmp_616
    unless $I5001 goto if2876_else6424 
    set $P5004, fb_tmp_616["$W"]
    set $P5006, $P5004
    goto if2876_end6425
  if2876_else6424:
    null $P5005
    set $P5006, $P5005
  if2876_end6425:
    unless_null $P5006, vivi_28776426
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28776426:
    unless_null $P5006, vivi_28786427
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_28786427:
    set $P5001, $P5006
  fallback6423:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_617, _lex_param_0
    repr_defined $I5002, fb_tmp_617
    unless $I5002 goto if2879_else6428 
    set $P5011, fb_tmp_617["variable"]
    set $P5013, $P5011
    goto if2879_end6429
  if2879_else6428:
    null $P5012
    set $P5013, $P5012
  if2879_end6429:
    unless_null $P5013, vivi_28806430
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_28806430:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1382484127.52628") :anon :lex :outer("cuid_308_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_619 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6437
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_619, $P5002
    repr_defined $I5001, fb_tmp_619
    unless $I5001 goto if2884_else6438 
    set $P5004, fb_tmp_619["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2884_end6439
  if2884_else6438:
    null $P5005
    set $P5006, $P5005
  if2884_end6439:
    unless_null $P5006, vivi_28856440
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28856440:
    unless_null $P5006, vivi_28866441
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_28866441:
    set $P5001, $P5006
  fallback6437:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1382484127.52628") :anon :lex :outer("cuid_308_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2802
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_621 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback6448
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set fb_tmp_621, $P5002
    repr_defined $I5001, fb_tmp_621
    unless $I5001 goto if2890_else6449 
    set $P5004, fb_tmp_621["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if2890_end6450
  if2890_else6449:
    null $P5005
    set $P5006, $P5005
  if2890_end6450:
    unless_null $P5006, vivi_28916451
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28916451:
    unless_null $P5006, vivi_28926452
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_28926452:
    set $P5001, $P5006
  fallback6448:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1382484127.52628") :anon :lex :outer("cuid_308_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2805
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2806
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2807
    set fb_tmp_623, $P101
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if2896_else6459 
    set $P5004, fb_tmp_623["block_past"]
    set $P5006, $P5004
    goto if2896_end6460
  if2896_else6459:
    null $P5005
    set $P5006, $P5005
  if2896_end6460:
    unless_null $P5006, vivi_28976461
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_28976461:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback6464
    nqp_get_sc_object $P5013, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5012, $P5013
    set fb_tmp_625, $P5012
    repr_defined $I5003, fb_tmp_625
    unless $I5003 goto if2899_else6465 
    set $P5014, fb_tmp_625["$EXPORT"]
    set $P5016, $P5014
    goto if2899_end6466
  if2899_else6465:
    null $P5015
    set $P5016, $P5015
  if2899_end6466:
    unless_null $P5016, vivi_29006467
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_29006467:
    unless_null $P5016, vivi_29016468
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_29016468:
    set $P5011, $P5016
  fallback6464:
    get_who $P5010, $P5011
    set fb_tmp_624, $P5010
    repr_defined $I5002, fb_tmp_624
    unless $I5002 goto if2898_else6462 
    set $P5019, fb_tmp_624["DEFAULT"]
    set $P5021, $P5019
    goto if2898_end6463
  if2898_else6462:
    null $P5020
    set $P5021, $P5020
  if2898_end6463:
    unless_null $P5021, vivi_29026469
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_29026469:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_626, $P101
    repr_defined $I5005, fb_tmp_626
    unless $I5005 goto if2903_else6471 
    set $P5024, fb_tmp_626["code_obj"]
    set $P5026, $P5024
    goto if2903_end6472
  if2903_else6471:
    null $P5025
    set $P5026, $P5025
  if2903_end6472:
    unless_null $P5026, vivi_29046473
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_29046473:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor6470
.annotate 'line', 2809
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback6474
    nqp_get_sc_object $P5030, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5029, $P5030
    set fb_tmp_627, $P5029
    repr_defined $I5006, fb_tmp_627
    unless $I5006 goto if2905_else6475 
    set $P5031, fb_tmp_627["$W"]
    set $P5033, $P5031
    goto if2905_end6476
  if2905_else6475:
    null $P5032
    set $P5033, $P5032
  if2905_end6476:
    unless_null $P5033, vivi_29066477
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5033, $P5034
  vivi_29066477:
    unless_null $P5033, vivi_29076478
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_29076478:
    set $P5028, $P5033
  fallback6474:
    set fb_tmp_628, $P101
    repr_defined $I5007, fb_tmp_628
    unless $I5007 goto if2908_else6479 
    set $P5036, fb_tmp_628["block_past"]
    set $P5038, $P5036
    goto if2908_end6480
  if2908_else6479:
    null $P5037
    set $P5038, $P5037
  if2908_end6480:
    unless_null $P5038, vivi_29096481
    nqp_get_sc_object $P5039, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5038, $P5039
  vivi_29096481:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor6470:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_309_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2817
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_6 :opt_flag 
    .const 'Sub' $P5074 = 'cuid_505_1382484127.52628' 
    capture_lex $P5074 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    if haz_param_6, default6602
    nqp_get_sc_object $P5073, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_2, $P5073
  default6602:
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6490
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback6490:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5001, fb_tmp_630
    unless $I5001 goto if2913_else6488 
    set $P5004, fb_tmp_630["deflongname"]
    set $P5006, $P5004
    goto if2913_end6489
  if2913_else6488:
    null $P5005
    set $P5006, $P5005
  if2913_end6489:
    unless_null $P5006, vivi_29146491
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_29146491:
    unless $P5006 goto if2912_else6486 
.annotate 'line', 2819
.annotate 'line', 2820
    unless_null _lex_param_1, fallback6494
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6494:
    set fb_tmp_631, _lex_param_1
    repr_defined $I5002, fb_tmp_631
    unless $I5002 goto if2915_else6492 
    set $P5009, fb_tmp_631["deflongname"]
    set $P5011, $P5009
    goto if2915_end6493
  if2915_else6492:
    null $P5010
    set $P5011, $P5010
  if2915_end6493:
    unless_null $P5011, vivi_29166495
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_29166495:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if2912_end6487
  if2912_else6486:
.annotate 'line', 2822
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback6498
    nqp_get_sc_object $P5017, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5016, $P5017
    set fb_tmp_632, $P5016
    repr_defined $I5004, fb_tmp_632
    unless $I5004 goto if2918_else6499 
    set $P5018, fb_tmp_632["$PKGDECL"]
    set $P5020, $P5018
    goto if2918_end6500
  if2918_else6499:
    null $P5019
    set $P5020, $P5019
  if2918_end6500:
    unless_null $P5020, vivi_29196501
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_29196501:
    unless_null $P5020, vivi_29206502
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_29206502:
    set $P5015, $P5020
  fallback6498:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if2917_end6497 
.annotate 'line', 2823
.annotate 'line', 2824
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if2917_end6497:
    unless_null _lex_param_1, fallback6505
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5025
  fallback6505:
    set fb_tmp_633, _lex_param_1
    repr_defined $I5005, fb_tmp_633
    unless $I5005 goto if2921_else6503 
    set $P5026, fb_tmp_633["latename"]
    set $P5028, $P5026
    goto if2921_end6504
  if2921_else6503:
    null $P5027
    set $P5028, $P5027
  if2921_end6504:
    unless_null $P5028, vivi_29226506
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_29226506:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if2912_end6487:
    unless_null _lex_param_1, fallback6511
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5031
  fallback6511:
    set fb_tmp_634, _lex_param_1
    repr_defined $I5006, fb_tmp_634
    unless $I5006 goto if2924_else6509 
    set $P5032, fb_tmp_634["proto"]
    set $P5034, $P5032
    goto if2924_end6510
  if2924_else6509:
    null $P5033
    set $P5034, $P5033
  if2924_end6510:
    unless_null $P5034, vivi_29256512
    nqp_get_sc_object $P5035, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5034, $P5035
  vivi_29256512:
    unless $P5034 goto if2923_else6507 
.annotate 'line', 2829
.annotate 'line', 2830
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
.annotate 'line', 2832
    nqp_get_sc_object $P5037, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2833
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5039 = $P5038."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2834
    nqp_get_sc_object $P5040, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5041 = $P5040."new"($P101 :named("value"))
    $P5042 = $P5037."new"($P5039, $P5041, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5043 = $P5036."new"($P5042, $P101 :named("name"), "declaration_static" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5043
.annotate 'line', 2841
    find_dynamic_lex $P5044, "$*W"
    unless_null $P5044, fallback6513
    nqp_get_sc_object $P5046, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5045, $P5046
    set fb_tmp_635, $P5045
    repr_defined $I5007, fb_tmp_635
    unless $I5007 goto if2926_else6514 
    set $P5047, fb_tmp_635["$W"]
    set $P5049, $P5047
    goto if2926_end6515
  if2926_else6514:
    null $P5048
    set $P5049, $P5048
  if2926_end6515:
    unless_null $P5049, vivi_29276516
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_29276516:
    unless_null $P5049, vivi_29286517
    die "Contextual $*W not found"
    box $P5051, "Contextual $*W not found"
    set $P5049, $P5051
  vivi_29286517:
    set $P5044, $P5049
  fallback6513:
    find_dynamic_lex $P5052, "$*PACKAGE"
    unless_null $P5052, fallback6518
    nqp_get_sc_object $P5054, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5053, $P5054
    set fb_tmp_636, $P5053
    repr_defined $I5008, fb_tmp_636
    unless $I5008 goto if2929_else6519 
    set $P5055, fb_tmp_636["$PACKAGE"]
    set $P5057, $P5055
    goto if2929_end6520
  if2929_else6519:
    null $P5056
    set $P5057, $P5056
  if2929_end6520:
    unless_null $P5057, vivi_29306521
    nqp_get_sc_object $P5058, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5057, $P5058
  vivi_29306521:
    unless_null $P5057, vivi_29316522
    die "Contextual $*PACKAGE not found"
    box $P5059, "Contextual $*PACKAGE not found"
    set $P5057, $P5059
  vivi_29316522:
    set $P5052, $P5057
  fallback6518:
.annotate 'line', 2842
    find_dynamic_lex $P5060, "$*W"
    unless_null $P5060, fallback6523
    nqp_get_sc_object $P5062, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5061, $P5062
    set fb_tmp_637, $P5061
    repr_defined $I5009, fb_tmp_637
    unless $I5009 goto if2932_else6524 
    set $P5063, fb_tmp_637["$W"]
    set $P5065, $P5063
    goto if2932_end6525
  if2932_else6524:
    null $P5064
    set $P5065, $P5064
  if2932_end6525:
    unless_null $P5065, vivi_29336526
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5065, $P5066
  vivi_29336526:
    unless_null $P5065, vivi_29346527
    die "Contextual $*W not found"
    box $P5067, "Contextual $*W not found"
    set $P5065, $P5067
  vivi_29346527:
    set $P5060, $P5065
  fallback6523:
    $P5068 = $P5060."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5069 = $P5044."pkg_add_method"($P5052, "add_method", $P101, $P5068)
    goto if2923_end6508
  if2923_else6507:
    .const 'Sub' $P5070 = 'cuid_505_1382484127.52628' 
    capture_lex $P5070
    $P5071 = $P5070()
  if2923_end6508:
.annotate 'line', 2883
    $P5072 = _lex_param_1."!make"($P102)
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1382484127.52628") :anon :lex :outer("cuid_309_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2844
    .const 'Sub' $P5128 = 'cuid_504_1382484127.52628' 
    capture_lex $P5128 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 2845
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback6528
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5005, $P5006
    set fb_tmp_638, $P5005
    repr_defined $I5001, fb_tmp_638
    unless $I5001 goto if2935_else6529 
    set $P5007, fb_tmp_638["$W"]
    set $P5009, $P5007
    goto if2935_end6530
  if2935_else6529:
    null $P5008
    set $P5009, $P5008
  if2935_end6530:
    unless_null $P5009, vivi_29366531
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_29366531:
    unless_null $P5009, vivi_29376532
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_29376532:
    set $P5004, $P5009
  fallback6528:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2846
    set fb_tmp_639, $P101
    repr_defined $I5002, fb_tmp_639
    unless $I5002 goto if2938_else6533 
    set $P5013, fb_tmp_639[0]
    set $P5015, $P5013
    goto if2938_end6534
  if2938_else6533:
    null $P5014
    set $P5015, $P5014
  if2938_end6534:
    unless_null $P5015, vivi_29396535
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_29396535:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5018)
.annotate 'line', 2847
    set fb_tmp_640, $P101
    repr_defined $I5003, fb_tmp_640
    unless $I5003 goto if2940_else6536 
    set $P5019, fb_tmp_640[0]
    set $P5021, $P5019
    goto if2940_end6537
  if2940_else6536:
    null $P5020
    set $P5021, $P5020
  if2940_end6537:
    unless_null $P5021, vivi_29416538
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_29416538:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2849
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2850
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 2851
    set fb_tmp_641, $P101
    repr_defined $I5004, fb_tmp_641
    unless $I5004 goto if2942_else6539 
    set $P5029, fb_tmp_641[0]
    set $P5031, $P5029
    goto if2942_end6540
  if2942_else6539:
    null $P5030
    set $P5031, $P5030
  if2942_end6540:
    unless_null $P5031, vivi_29436541
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_29436541:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 2852
    set fb_tmp_642, $P101
    repr_defined $I5005, fb_tmp_642
    unless $I5005 goto if2944_else6542 
    set $P5035, fb_tmp_642[0]
    set $P5037, $P5035
    goto if2944_end6543
  if2944_else6542:
    null $P5036
    set $P5037, $P5036
  if2944_end6543:
    unless_null $P5037, vivi_29456544
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_29456544:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 2853
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2854
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback6547
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_48, $P5042
    set fb_tmp_644, pkg_viv_tmp_48
    repr_defined $I5007, fb_tmp_644
    unless $I5007 goto if2947_else6548 
    set $P5044, fb_tmp_644["%RX"]
    set $P5046, $P5044
    goto if2947_end6549
  if2947_else6548:
    null $P5045
    set $P5046, $P5045
  if2947_end6549:
    unless_null $P5046, vivi_29486550
    new $P5047, 'Hash'
    set pkg_viv_tmp_48["%RX"], $P5047
    set $P5046, $P5047
  vivi_29486550:
    unless_null $P5046, vivi_29496551
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_29496551:
    set $P5041, $P5046
  fallback6547:
    set fb_tmp_643, $P5041
    repr_defined $I5006, fb_tmp_643
    unless $I5006 goto if2946_else6545 
    set $P5049, fb_tmp_643["code"]
    set $P5051, $P5049
    goto if2946_end6546
  if2946_else6545:
    null $P5050
    set $P5051, $P5050
  if2946_end6546:
    unless_null $P5051, vivi_29506552
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5051, $P5052
  vivi_29506552:
    set $P102, $P5051
.annotate 'line', 2856
    find_dynamic_lex $P5053, "%*LANG"
    unless_null $P5053, fallback6555
    nqp_get_sc_object $P5055, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_49, $P5054
    set fb_tmp_646, pkg_viv_tmp_49
    repr_defined $I5009, fb_tmp_646
    unless $I5009 goto if2952_else6556 
    set $P5056, fb_tmp_646["%LANG"]
    set $P5058, $P5056
    goto if2952_end6557
  if2952_else6556:
    null $P5057
    set $P5058, $P5057
  if2952_end6557:
    unless_null $P5058, vivi_29536558
    new $P5059, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5059
    set $P5058, $P5059
  vivi_29536558:
    unless_null $P5058, vivi_29546559
    die "Contextual %*LANG not found"
    box $P5060, "Contextual %*LANG not found"
    set $P5058, $P5060
  vivi_29546559:
    set $P5053, $P5058
  fallback6555:
    set fb_tmp_645, $P5053
    repr_defined $I5008, fb_tmp_645
    unless $I5008 goto if2951_else6553 
    set $P5061, fb_tmp_645["Regex-actions"]
    set $P5063, $P5061
    goto if2951_end6554
  if2951_else6553:
    null $P5062
    set $P5063, $P5062
  if2951_end6554:
    unless_null $P5063, vivi_29556560
    nqp_get_sc_object $P5064, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5063, $P5064
  vivi_29556560:
    find_lex $P5065, "$/"
    unless_null $P5065, fallback6563
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5065, $P5066
  fallback6563:
    set fb_tmp_647, $P5065
    repr_defined $I5010, fb_tmp_647
    unless $I5010 goto if2956_else6561 
    set $P5067, fb_tmp_647["p6regex"]
    set $P5069, $P5067
    goto if2956_end6562
  if2956_else6561:
    null $P5068
    set $P5069, $P5068
  if2956_end6562:
    unless_null $P5069, vivi_29576564
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5069, $P5070
  vivi_29576564:
    $P5071 = $P5069."ast"()
    $P5072 = $P5063."qbuildsub"($P5071, $P101, $P102 :named("code_obj"))
    set $P103, $P5072
.annotate 'line', 2857
    find_lex $P5073, "$name"
    $P103."name"($P5073)
    find_dynamic_lex $P5074, "$*PKGDECL"
    unless_null $P5074, fallback6569
    nqp_get_sc_object $P5076, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5075, $P5076
    set fb_tmp_648, $P5075
    repr_defined $I5011, fb_tmp_648
    unless $I5011 goto if2960_else6570 
    set $P5077, fb_tmp_648["$PKGDECL"]
    set $P5079, $P5077
    goto if2960_end6571
  if2960_else6570:
    null $P5078
    set $P5079, $P5078
  if2960_end6571:
    unless_null $P5079, vivi_29616572
    nqp_get_sc_object $P5080, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5079, $P5080
  vivi_29616572:
    unless_null $P5079, vivi_29626573
    die "Contextual $*PKGDECL not found"
    box $P5081, "Contextual $*PKGDECL not found"
    set $P5079, $P5081
  vivi_29626573:
    set $P5074, $P5079
  fallback6569:
    set $P5091, $P5074
    unless $P5074 goto if2959_end6568 
    find_dynamic_lex $P5083, "$*PACKAGE"
    unless_null $P5083, fallback6574
    nqp_get_sc_object $P5085, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5084, $P5085
    set fb_tmp_649, $P5084
    repr_defined $I5013, fb_tmp_649
    unless $I5013 goto if2963_else6575 
    set $P5086, fb_tmp_649["$PACKAGE"]
    set $P5088, $P5086
    goto if2963_end6576
  if2963_else6575:
    null $P5087
    set $P5088, $P5087
  if2963_end6576:
    unless_null $P5088, vivi_29646577
    nqp_get_sc_object $P5089, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5088, $P5089
  vivi_29646577:
    unless_null $P5088, vivi_29656578
    die "Contextual $*PACKAGE not found"
    box $P5090, "Contextual $*PACKAGE not found"
    set $P5088, $P5090
  vivi_29656578:
    set $P5083, $P5088
  fallback6574:
    get_how $P5082, $P5083
    can $I5012, $P5082, "add_method"
    box $P5092, $I5012
    set $P5091, $P5092
  if2959_end6568:
    unless $P5091 goto if2958_end6566 
.annotate 'line', 2859
.annotate 'line', 2862
    $P101."blocktype"("declaration_static")
.annotate 'line', 2863
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6579
    nqp_get_sc_object $P5095, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5094, $P5095
    set fb_tmp_650, $P5094
    repr_defined $I5014, fb_tmp_650
    unless $I5014 goto if2966_else6580 
    set $P5096, fb_tmp_650["$W"]
    set $P5098, $P5096
    goto if2966_end6581
  if2966_else6580:
    null $P5097
    set $P5098, $P5097
  if2966_end6581:
    unless_null $P5098, vivi_29676582
    nqp_get_sc_object $P5099, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5098, $P5099
  vivi_29676582:
    unless_null $P5098, vivi_29686583
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_29686583:
    set $P5093, $P5098
  fallback6579:
    find_dynamic_lex $P5101, "$*PACKAGE"
    unless_null $P5101, fallback6584
    nqp_get_sc_object $P5103, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5102, $P5103
    set fb_tmp_651, $P5102
    repr_defined $I5015, fb_tmp_651
    unless $I5015 goto if2969_else6585 
    set $P5104, fb_tmp_651["$PACKAGE"]
    set $P5106, $P5104
    goto if2969_end6586
  if2969_else6585:
    null $P5105
    set $P5106, $P5105
  if2969_end6586:
    unless_null $P5106, vivi_29706587
    nqp_get_sc_object $P5107, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5106, $P5107
  vivi_29706587:
    unless_null $P5106, vivi_29716588
    die "Contextual $*PACKAGE not found"
    box $P5108, "Contextual $*PACKAGE not found"
    set $P5106, $P5108
  vivi_29716588:
    set $P5101, $P5106
  fallback6584:
    find_lex $P5109, "$name"
    $P5110 = $P5093."pkg_add_method"($P5101, "add_method", $P5109, $P102)
  if2958_end6566:
    find_dynamic_lex $P5111, "$*PKGDECL"
    unless_null $P5111, fallback6591
    nqp_get_sc_object $P5113, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5112, $P5113
    set fb_tmp_652, $P5112
    repr_defined $I5017, fb_tmp_652
    unless $I5017 goto if2973_else6592 
    set $P5114, fb_tmp_652["$PKGDECL"]
    set $P5116, $P5114
    goto if2973_end6593
  if2973_else6592:
    null $P5115
    set $P5116, $P5115
  if2973_end6593:
    unless_null $P5116, vivi_29746594
    nqp_get_sc_object $P5117, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5116, $P5117
  vivi_29746594:
    unless_null $P5116, vivi_29756595
    die "Contextual $*PKGDECL not found"
    box $P5118, "Contextual $*PKGDECL not found"
    set $P5116, $P5118
  vivi_29756595:
    set $P5111, $P5116
  fallback6591:
    set $S5001, $P5111
    iseq $I5016, $S5001, "role"
    unless $I5016 goto if2972_end6590 
    .const 'Sub' $P5119 = 'cuid_504_1382484127.52628' 
    capture_lex $P5119
    $P5120 = $P5119()
  if2972_end6590:
.annotate 'line', 2877
    nqp_get_sc_object $P5121, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2879
    new $P5122, 'ResizablePMCArray'
    box $P5123, "NQPRegexMethod"
    push $P5122, $P5123
    find_lex $P5124, "$/"
    $P5125 = "&lexical_package_lookup"($P5122, $P5124)
    $P5126 = $P5121."new"($P5125, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5126
    find_lex $P5127, "$past"
    set $P5127["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1382484127.52628") :anon :lex :outer("cuid_505_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2868
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_653 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2869
    nqp_get_sc_object $P5002, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1382484078.58099", 3
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2870
    find_lex $P5004, "$/"
    unless_null $P5004, fallback6598
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  fallback6598:
    set fb_tmp_653, $P5004
    repr_defined $I5001, fb_tmp_653
    unless $I5001 goto if2976_else6596 
    set $P5006, fb_tmp_653["p6regex"]
    set $P5008, $P5006
    goto if2976_end6597
  if2976_else6596:
    null $P5007
    set $P5008, $P5007
  if2976_end6597:
    unless_null $P5008, vivi_29776599
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_29776599:
    $P5010 = $P5008."ast"()
    $P101."addnode"($P5010, 1 :named("vars_as_generic"))
.annotate 'line', 2871
    $P5011 = $P101."generic"()
    set $P5014, $P5011
    unless $P5011 goto if2978_end6601 
.annotate 'line', 2872
    find_lex $P5012, "$code"
    $P5013 = $P5012."SET_GENERIC_NFA"($P101)
    set $P5014, $P5013
  if2978_end6601:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_310_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2887
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6607
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6607:
    set fb_tmp_654, _lex_param_1
    repr_defined $I5001, fb_tmp_654
    unless $I5001 goto if2980_else6605 
    set $P5003, fb_tmp_654["args"]
    set $P5005, $P5003
    goto if2980_end6606
  if2980_else6605:
    null $P5004
    set $P5005, $P5004
  if2980_end6606:
    unless_null $P5005, vivi_29816608
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_29816608:
    unless $P5005 goto if2979_else6603 
.annotate 'line', 2888
    unless_null _lex_param_1, fallback6613
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5007
  fallback6613:
    set fb_tmp_656, _lex_param_1
    repr_defined $I5003, fb_tmp_656
    unless $I5003 goto if2983_else6611 
    set $P5008, fb_tmp_656["args"]
    set $P5010, $P5008
    goto if2983_end6612
  if2983_else6611:
    null $P5009
    set $P5010, $P5009
  if2983_end6612:
    unless_null $P5010, vivi_29846614
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_29846614:
    set fb_tmp_655, $P5010
    repr_defined $I5002, fb_tmp_655
    unless $I5002 goto if2982_else6609 
    set $P5012, fb_tmp_655[0]
    set $P5014, $P5012
    goto if2982_end6610
  if2982_else6609:
    null $P5013
    set $P5014, $P5013
  if2982_end6610:
    unless_null $P5014, vivi_29856615
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_29856615:
    $P5016 = $P5014."ast"()
    set $P5019, $P5016
    goto if2979_end6604
  if2979_else6603:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5018 = $P5017."new"(_lex_param_1 :named("node"))
    set $P5019, $P5018
  if2979_end6604:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6620
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5020
  fallback6620:
    set fb_tmp_657, _lex_param_1
    repr_defined $I5004, fb_tmp_657
    unless $I5004 goto if2987_else6618 
    set $P5021, fb_tmp_657["quote"]
    set $P5023, $P5021
    goto if2987_end6619
  if2987_else6618:
    null $P5022
    set $P5023, $P5022
  if2987_end6619:
    unless_null $P5023, vivi_29886621
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_29886621:
    unless $P5023 goto if2986_else6616 
.annotate 'line', 2889
.annotate 'line', 2890
    unless_null _lex_param_1, fallback6624
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5025
  fallback6624:
    set fb_tmp_658, _lex_param_1
    repr_defined $I5005, fb_tmp_658
    unless $I5005 goto if2989_else6622 
    set $P5026, fb_tmp_658["quote"]
    set $P5028, $P5026
    goto if2989_end6623
  if2989_else6622:
    null $P5027
    set $P5028, $P5027
  if2989_end6623:
    unless_null $P5028, vivi_29906625
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_29906625:
    $P5030 = $P5028."ast"()
    $P101."unshift"($P5030)
.annotate 'line', 2891
    $P5031 = $P101."op"("callmethod")
    goto if2986_end6617
  if2986_else6616:
    unless_null _lex_param_1, fallback6630
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5032
  fallback6630:
    set fb_tmp_659, _lex_param_1
    repr_defined $I5007, fb_tmp_659
    unless $I5007 goto if2992_else6628 
    set $P5033, fb_tmp_659["longname"]
    set $P5035, $P5033
    goto if2992_end6629
  if2992_else6628:
    null $P5034
    set $P5035, $P5034
  if2992_end6629:
    unless_null $P5035, vivi_29936631
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5035, $P5036
  vivi_29936631:
    set $S5001, $P5035
    iseq $I5006, $S5001, "HOW"
    unless $I5006 goto if2991_else6626 
.annotate 'line', 2893
.annotate 'line', 2894
    $P5037 = $P101."op"("how")
    set $P5065, $P5037
    goto if2991_end6627
  if2991_else6626:
    unless_null _lex_param_1, fallback6636
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5038
  fallback6636:
    set fb_tmp_660, _lex_param_1
    repr_defined $I5009, fb_tmp_660
    unless $I5009 goto if2995_else6634 
    set $P5039, fb_tmp_660["longname"]
    set $P5041, $P5039
    goto if2995_end6635
  if2995_else6634:
    null $P5040
    set $P5041, $P5040
  if2995_end6635:
    unless_null $P5041, vivi_29966637
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5041, $P5042
  vivi_29966637:
    set $S5002, $P5041
    iseq $I5008, $S5002, "WHAT"
    unless $I5008 goto if2994_else6632 
.annotate 'line', 2896
.annotate 'line', 2897
    $P5043 = $P101."op"("what")
    set $P5064, $P5043
    goto if2994_end6633
  if2994_else6632:
    unless_null _lex_param_1, fallback6642
    nqp_get_sc_object $P5044, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5044
  fallback6642:
    set fb_tmp_661, _lex_param_1
    repr_defined $I5011, fb_tmp_661
    unless $I5011 goto if2998_else6640 
    set $P5045, fb_tmp_661["longname"]
    set $P5047, $P5045
    goto if2998_end6641
  if2998_else6640:
    null $P5046
    set $P5047, $P5046
  if2998_end6641:
    unless_null $P5047, vivi_29996643
    nqp_get_sc_object $P5048, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5047, $P5048
  vivi_29996643:
    set $S5003, $P5047
    iseq $I5010, $S5003, "WHO"
    unless $I5010 goto if2997_else6638 
.annotate 'line', 2899
.annotate 'line', 2900
    $P5049 = $P101."op"("who")
    set $P5063, $P5049
    goto if2997_end6639
  if2997_else6638:
    unless_null _lex_param_1, fallback6648
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5050
  fallback6648:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5013, fb_tmp_662
    unless $I5013 goto if3001_else6646 
    set $P5051, fb_tmp_662["longname"]
    set $P5053, $P5051
    goto if3001_end6647
  if3001_else6646:
    null $P5052
    set $P5053, $P5052
  if3001_end6647:
    unless_null $P5053, vivi_30026649
    nqp_get_sc_object $P5054, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5053, $P5054
  vivi_30026649:
    set $S5004, $P5053
    iseq $I5012, $S5004, "REPR"
    unless $I5012 goto if3000_else6644 
.annotate 'line', 2902
.annotate 'line', 2903
    $P5055 = $P101."op"("reprname")
    set $P5062, $P5055
    goto if3000_end6645
  if3000_else6644:
.annotate 'line', 2905
.annotate 'line', 2906
    unless_null _lex_param_1, fallback6652
    nqp_get_sc_object $P5056, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5056
  fallback6652:
    set fb_tmp_663, _lex_param_1
    repr_defined $I5014, fb_tmp_663
    unless $I5014 goto if3003_else6650 
    set $P5057, fb_tmp_663["longname"]
    set $P5059, $P5057
    goto if3003_end6651
  if3003_else6650:
    null $P5058
    set $P5059, $P5058
  if3003_end6651:
    unless_null $P5059, vivi_30046653
    nqp_get_sc_object $P5060, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5059, $P5060
  vivi_30046653:
    set $S5005, $P5059
    $P101."name"($S5005)
.annotate 'line', 2907
    $P5061 = $P101."op"("callmethod")
    set $P5062, $P5061
  if3000_end6645:
    set $P5063, $P5062
  if2997_end6639:
    set $P5064, $P5063
  if2994_end6633:
    set $P5065, $P5064
  if2991_end6627:
  if2986_end6617:
.annotate 'line', 2909
    $P5066 = _lex_param_1."!make"($P101)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_311_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2914
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 2915
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2916
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5003 = $P5002."new"("self" :named("name"), "lexical" :named("scope"))
    $P5004 = $P5001."new"($P5003, "decont" :named("op"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_312_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2919
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2920
    unless_null _lex_param_1, fallback6656
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6656:
    set fb_tmp_664, _lex_param_1
    repr_defined $I5001, fb_tmp_664
    unless $I5001 goto if3005_else6654 
    set $P5003, fb_tmp_664["args"]
    set $P5005, $P5003
    goto if3005_end6655
  if3005_else6654:
    null $P5004
    set $P5005, $P5004
  if3005_end6655:
    unless_null $P5005, vivi_30066657
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_30066657:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2921
    unless_null _lex_param_1, fallback6660
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6660:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5002, fb_tmp_665
    unless $I5002 goto if3007_else6658 
    set $P5009, fb_tmp_665["deflongname"]
    set $P5011, $P5009
    goto if3007_end6659
  if3007_else6658:
    null $P5010
    set $P5011, $P5010
  if3007_end6659:
    unless_null $P5011, vivi_30086661
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_30086661:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2922
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_313_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2925
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5053 = 'cuid_506_1382484127.52628' 
    capture_lex $P5053 
    .const 'Sub' $P5053 = 'cuid_508_1382484127.52628' 
    capture_lex $P5053 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2928
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6664
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5004, $P5005
    set fb_tmp_666, $P5004
    repr_defined $I5001, fb_tmp_666
    unless $I5001 goto if3010_else6665 
    set $P5006, fb_tmp_666["$W"]
    set $P5008, $P5006
    goto if3010_end6666
  if3010_else6665:
    null $P5007
    set $P5008, $P5007
  if3010_end6666:
    unless_null $P5008, vivi_30116667
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_30116667:
    unless_null $P5008, vivi_30126668
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30126668:
    set $P5003, $P5008
  fallback6664:
    unless_null _lex_param_1, fallback6671
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5011
  fallback6671:
    set fb_tmp_667, _lex_param_1
    repr_defined $I5002, fb_tmp_667
    unless $I5002 goto if3013_else6669 
    set $P5012, fb_tmp_667["name"]
    set $P5014, $P5012
    goto if3013_end6670
  if3013_else6669:
    null $P5013
    set $P5014, $P5013
  if3013_end6670:
    unless_null $P5014, vivi_30146672
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_30146672:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if3009_else6662 
    unless_null _lex_param_1, fallback6677
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5017
  fallback6677:
    set fb_tmp_668, _lex_param_1
    repr_defined $I5003, fb_tmp_668
    unless $I5003 goto if3016_else6675 
    set $P5018, fb_tmp_668["args"]
    set $P5020, $P5018
    goto if3016_end6676
  if3016_else6675:
    null $P5019
    set $P5020, $P5019
  if3016_end6676:
    unless_null $P5020, vivi_30176678
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5020, $P5021
  vivi_30176678:
    if $P5020 goto unless3015_end6674 
.annotate 'line', 2929
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_30256691
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
    .const 'Sub' $P5022 = 'cuid_506_1382484127.52628' 
    capture_lex $P5022
    $P5023 = $P5022()
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_30246690
  catch_handler_30256691:
    .get_results ($P5024) 
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10001
    goto skip_handler_30246690
  skip_handler_30246690:
  unless3015_end6674:
    set $P5033, $P101
    if $P101 goto unless3026_end6693 
.annotate 'line', 2937
.annotate 'line', 2938
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    unless_null _lex_param_1, fallback6696
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5027
  fallback6696:
    set fb_tmp_671, _lex_param_1
    repr_defined $I5004, fb_tmp_671
    unless $I5004 goto if3027_else6694 
    set $P5028, fb_tmp_671["name"]
    set $P5030, $P5028
    goto if3027_end6695
  if3027_else6694:
    null $P5029
    set $P5030, $P5029
  if3027_end6695:
    unless_null $P5030, vivi_30286697
    nqp_get_sc_object $P5031, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5030, $P5031
  vivi_30286697:
    set $S5002, $P5030
    $P5032 = $P5026."new"($S5002 :named("name"), "lexical" :named("scope"))
    set $P101, $P5032
    set $P5033, $P101
  unless3026_end6693:
    goto if3009_end6663
  if3009_else6662:
    .const 'Sub' $P5034 = 'cuid_508_1382484127.52628' 
    capture_lex $P5034
    $P5035 = $P5034()
  if3009_end6663:
    set $P102, $P101
    unless_null _lex_param_1, fallback6726
    nqp_get_sc_object $P5036, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5036
  fallback6726:
    set fb_tmp_676, _lex_param_1
    repr_defined $I5005, fb_tmp_676
    unless $I5005 goto if3044_else6724 
    set $P5037, fb_tmp_676["args"]
    set $P5039, $P5037
    goto if3044_end6725
  if3044_else6724:
    null $P5038
    set $P5039, $P5038
  if3044_end6725:
    unless_null $P5039, vivi_30456727
    nqp_get_sc_object $P5040, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5039, $P5040
  vivi_30456727:
    unless $P5039 goto if3043_end6723 
.annotate 'line', 2958
.annotate 'line', 2959
    unless_null _lex_param_1, fallback6732
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5041
  fallback6732:
    set fb_tmp_678, _lex_param_1
    repr_defined $I5007, fb_tmp_678
    unless $I5007 goto if3047_else6730 
    set $P5042, fb_tmp_678["args"]
    set $P5044, $P5042
    goto if3047_end6731
  if3047_else6730:
    null $P5043
    set $P5044, $P5043
  if3047_end6731:
    unless_null $P5044, vivi_30486733
    nqp_get_sc_object $P5045, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5044, $P5045
  vivi_30486733:
    set fb_tmp_677, $P5044
    repr_defined $I5006, fb_tmp_677
    unless $I5006 goto if3046_else6728 
    set $P5046, fb_tmp_677[0]
    set $P5048, $P5046
    goto if3046_end6729
  if3046_else6728:
    null $P5047
    set $P5048, $P5047
  if3046_end6729:
    unless_null $P5048, vivi_30496734
    nqp_get_sc_object $P5049, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5048, $P5049
  vivi_30496734:
    $P5050 = $P5048."ast"()
    set $P102, $P5050
.annotate 'line', 2960
    $P5051 = $P102."unshift"($P101)
  if3043_end6723:
.annotate 'line', 2962
    $P5052 = _lex_param_1."!make"($P102)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1382484127.52628") :anon :lex :outer("cuid_313_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2930
    .lex "$sym", $P101 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2931
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6679
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_669, $P5003
    repr_defined $I5001, fb_tmp_669
    unless $I5001 goto if3018_else6680 
    set $P5005, fb_tmp_669["$W"]
    set $P5007, $P5005
    goto if3018_end6681
  if3018_else6680:
    null $P5006
    set $P5007, $P5006
  if3018_end6681:
    unless_null $P5007, vivi_30196682
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_30196682:
    unless_null $P5007, vivi_30206683
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30206683:
    set $P5002, $P5007
  fallback6679:
    new $P5010, 'ResizablePMCArray'
    find_lex $P5011, "$/"
    unless_null $P5011, fallback6686
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  fallback6686:
    set fb_tmp_670, $P5011
    repr_defined $I5002, fb_tmp_670
    unless $I5002 goto if3021_else6684 
    set $P5013, fb_tmp_670["name"]
    set $P5015, $P5013
    goto if3021_end6685
  if3021_else6684:
    null $P5014
    set $P5015, $P5014
  if3021_end6685:
    unless_null $P5015, vivi_30226687
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_30226687:
    set $S5001, $P5015
    box $P5017, $S5001
    push $P5010, $P5017
    $P5018 = $P5002."find_sym"($P5010)
    set $P101, $P5018
    nqp_get_sc_for_object $P5019, $P101
    isnull $I5003, $P5019
    box $P5023, $I5003
    set $P5022, $P5023
    if $I5003 goto unless3023_end6689 
.annotate 'line', 2932
.annotate 'line', 2933
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5021 = $P5020."new"($P101 :named("value"))
    store_lex "$var", $P5021
    set $P5022, $P5021
  unless3023_end6689:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1382484127.52628") :anon :lex :outer("cuid_313_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2941
    .const 'Sub' $P5027 = 'cuid_507_1382484127.52628' 
    capture_lex $P5027 
    .lex "@ns", $P101 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6702
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  fallback6702:
    set fb_tmp_673, $P5003
    repr_defined $I5002, fb_tmp_673
    unless $I5002 goto if3030_else6700 
    set $P5005, fb_tmp_673["name"]
    set $P5007, $P5005
    goto if3030_end6701
  if3030_else6700:
    null $P5006
    set $P5007, $P5006
  if3030_end6701:
    unless_null $P5007, vivi_30316703
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_30316703:
    set fb_tmp_672, $P5007
    repr_defined $I5001, fb_tmp_672
    unless $I5001 goto if3029_else6698 
    set $P5009, fb_tmp_672["identifier"]
    set $P5011, $P5009
    goto if3029_end6699
  if3029_else6698:
    null $P5010
    set $P5011, $P5010
  if3029_end6699:
    unless_null $P5011, vivi_30326704
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_30326704:
    repr_clone $P5002, $P5011
    set $P101, $P5002
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6709
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  fallback6709:
    set fb_tmp_674, $P5013
    repr_defined $I5003, fb_tmp_674
    unless $I5003 goto if3034_else6707 
    set $P5015, fb_tmp_674["args"]
    set $P5017, $P5015
    goto if3034_end6708
  if3034_else6707:
    null $P5016
    set $P5017, $P5016
  if3034_end6708:
    unless_null $P5017, vivi_30356710
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_30356710:
    if $P5017 goto unless3033_end6706 
.annotate 'line', 2943
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_30416719
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
    .const 'Sub' $P5019 = 'cuid_507_1382484127.52628' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_30406718
  catch_handler_30416719:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_30406718
  skip_handler_30406718:
  unless3033_end6706:
    find_lex $P5023, "$var"
    set $P5026, $P5023
    if $P5023 goto unless3042_end6721 
.annotate 'line', 2951
.annotate 'line', 2952
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$var", $P5025
    set $P5026, $P5025
  unless3042_end6721:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1382484127.52628") :anon :lex :outer("cuid_508_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2944
    .lex "$sym", $P101 
    .local pmc fb_tmp_675 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 2945
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback6711
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_675, $P5003
    repr_defined $I5001, fb_tmp_675
    unless $I5001 goto if3036_else6712 
    set $P5005, fb_tmp_675["$W"]
    set $P5007, $P5005
    goto if3036_end6713
  if3036_else6712:
    null $P5006
    set $P5007, $P5006
  if3036_end6713:
    unless_null $P5007, vivi_30376714
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_30376714:
    unless_null $P5007, vivi_30386715
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_30386715:
    set $P5002, $P5007
  fallback6711:
    find_lex $P5010, "@ns"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
    nqp_get_sc_for_object $P5012, $P101
    isnull $I5002, $P5012
    box $P5016, $I5002
    set $P5015, $P5016
    if $I5002 goto unless3039_end6717 
.annotate 'line', 2946
.annotate 'line', 2947
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    $P5014 = $P5013."new"($P101 :named("value"))
    store_lex "$var", $P5014
    set $P5015, $P5014
  unless3039_end6717:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_314_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2965
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback6739
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback6739:
    set fb_tmp_679, _lex_param_1
    repr_defined $I5001, fb_tmp_679
    unless $I5001 goto if3051_else6737 
    set $P5004, fb_tmp_679["args"]
    set $P5006, $P5004
    goto if3051_end6738
  if3051_else6737:
    null $P5005
    set $P5006, $P5005
  if3051_end6738:
    unless_null $P5006, vivi_30526740
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_30526740:
    unless $P5006 goto if3050_else6735 
.annotate 'line', 2966
    unless_null _lex_param_1, fallback6745
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback6745:
    set fb_tmp_681, _lex_param_1
    repr_defined $I5003, fb_tmp_681
    unless $I5003 goto if3054_else6743 
    set $P5009, fb_tmp_681["args"]
    set $P5011, $P5009
    goto if3054_end6744
  if3054_else6743:
    null $P5010
    set $P5011, $P5010
  if3054_end6744:
    unless_null $P5011, vivi_30556746
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_30556746:
    set fb_tmp_680, $P5011
    repr_defined $I5002, fb_tmp_680
    unless $I5002 goto if3053_else6741 
    set $P5013, fb_tmp_680[0]
    set $P5015, $P5013
    goto if3053_end6742
  if3053_else6741:
    null $P5014
    set $P5015, $P5014
  if3053_end6742:
    unless_null $P5015, vivi_30566747
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_30566747:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if3050_end6736
  if3050_else6735:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if3050_end6736:
    set $P101, $P5020
    unless_null _lex_param_1, fallback6750
    nqp_get_sc_object $P5021, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5021
  fallback6750:
    set fb_tmp_682, _lex_param_1
    repr_defined $I5004, fb_tmp_682
    unless $I5004 goto if3057_else6748 
    set $P5022, fb_tmp_682["op"]
    set $P5024, $P5022
    goto if3057_end6749
  if3057_else6748:
    null $P5023
    set $P5024, $P5023
  if3057_end6749:
    unless_null $P5024, vivi_30586751
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_30586751:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
.annotate 'line', 2968
    set $S5002, $P102
    split $P5027, "__", $S5002
    $P5028 = "&join"(" ", $P5027)
    set $P102, $P5028
.annotate 'line', 2969
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    $P5030 = $P5029."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_315_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2972
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_683 
.annotate 'line', 2973
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    unless_null _lex_param_1, fallback6754
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6754:
    set fb_tmp_683, _lex_param_1
    repr_defined $I5001, fb_tmp_683
    unless $I5001 goto if3059_else6752 
    set $P5003, fb_tmp_683["const"]
    set $P5005, $P5003
    goto if3059_end6753
  if3059_else6752:
    null $P5004
    set $P5005, $P5004
  if3059_end6753:
    unless_null $P5005, vivi_30606755
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_30606755:
    set $S5001, $P5005
    $P5007 = $P5001."new"($S5001 :named("pirconst"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_316_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2976
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    unless_null _lex_param_1, fallback6758
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5004
  fallback6758:
    set fb_tmp_684, _lex_param_1
    repr_defined $I5001, fb_tmp_684
    unless $I5001 goto if3061_else6756 
    set $P5005, fb_tmp_684["op"]
    set $P5007, $P5005
    goto if3061_end6757
  if3061_else6756:
    null $P5006
    set $P5007, $P5006
  if3061_end6757:
    unless_null $P5007, vivi_30626759
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_30626759:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback6764
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5010
  fallback6764:
    set fb_tmp_685, _lex_param_1
    repr_defined $I5002, fb_tmp_685
    unless $I5002 goto if3064_else6762 
    set $P5011, fb_tmp_685["args"]
    set $P5013, $P5011
    goto if3064_end6763
  if3064_else6762:
    null $P5012
    set $P5013, $P5012
  if3064_end6763:
    unless_null $P5013, vivi_30656765
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_30656765:
    unless $P5013 goto if3063_else6760 
.annotate 'line', 2978
    unless_null _lex_param_1, fallback6770
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5015
  fallback6770:
    set fb_tmp_687, _lex_param_1
    repr_defined $I5004, fb_tmp_687
    unless $I5004 goto if3067_else6768 
    set $P5016, fb_tmp_687["args"]
    set $P5018, $P5016
    goto if3067_end6769
  if3067_else6768:
    null $P5017
    set $P5018, $P5017
  if3067_end6769:
    unless_null $P5018, vivi_30686771
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_30686771:
    set fb_tmp_686, $P5018
    repr_defined $I5003, fb_tmp_686
    unless $I5003 goto if3066_else6766 
    set $P5020, fb_tmp_686[0]
    set $P5022, $P5020
    goto if3066_end6767
  if3066_else6766:
    null $P5021
    set $P5022, $P5021
  if3066_end6767:
    unless_null $P5022, vivi_30696772
    nqp_get_sc_object $P5023, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5022, $P5023
  vivi_30696772:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if3063_end6761
  if3063_else6760:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if3063_end6761:
    set $P102, $P5027
.annotate 'line', 2979
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5029 = $P5028."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5029
.annotate 'line', 2980
    $P5030 = _lex_param_1."!make"($P103)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_317_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2983
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_688 
.annotate 'line', 2984
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    unless_null _lex_param_1, fallback6775
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6775:
    set fb_tmp_688, _lex_param_1
    repr_defined $I5001, fb_tmp_688
    unless $I5001 goto if3070_else6773 
    set $P5003, fb_tmp_688["const"]
    set $P5005, $P5003
    goto if3070_end6774
  if3070_else6773:
    null $P5004
    set $P5005, $P5004
  if3070_end6774:
    unless_null $P5005, vivi_30716776
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_30716776:
    set $S5001, $P5005
    $P5007 = $P5001."new"("const" :named("op"), $S5001 :named("name"))
    $P5008 = _lex_param_1."!make"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_318_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 2987
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "$stmts", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_689 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 2988
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
    $P5004 = $P5003."unique"("dispatch_cap")
    set $P101, $P5004
.annotate 'line', 2989
    nqp_get_sc_object $P5005, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 2990
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2992
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5008 = $P5007."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2993
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5010 = $P5009."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5011 = $P5006."new"($P5008, $P5010, "bind" :named("op"))
.annotate 'line', 2995
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2997
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 2999
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3001
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
.annotate 'line', 3003
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5017 = $P5016."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3004
    nqp_get_sc_object $P5018, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 64
    find_dynamic_lex $P5019, "$*W"
    unless_null $P5019, fallback6777
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set fb_tmp_689, $P5020
    repr_defined $I5001, fb_tmp_689
    unless $I5001 goto if3072_else6778 
    set $P5022, fb_tmp_689["$W"]
    set $P5024, $P5022
    goto if3072_end6779
  if3072_else6778:
    null $P5023
    set $P5024, $P5023
  if3072_end6779:
    unless_null $P5024, vivi_30736780
    nqp_get_sc_object $P5025, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5024, $P5025
  vivi_30736780:
    unless_null $P5024, vivi_30746781
    die "Contextual $*W not found"
    box $P5026, "Contextual $*W not found"
    set $P5024, $P5026
  vivi_30746781:
    set $P5019, $P5024
  fallback6777:
    new $P5027, 'ResizablePMCArray'
    box $P5028, "NQPRoutine"
    push $P5027, $P5028
    $P5029 = $P5019."find_sym"($P5027)
    $P5030 = $P5018."new"($P5029 :named("value"))
    $P5031 = $P5015."new"($P5017, $P5030, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 3006
    nqp_get_sc_object $P5032, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5033 = $P5032."new"($P101 :named("name"), "local" :named("scope"))
    $P5034 = $P5014."new"($P5031, $P5033, "multicachefind" :named("op"))
.annotate 'line', 3008
    nqp_get_sc_object $P5035, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3010
    nqp_get_sc_object $P5036, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5037 = $P5036."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 3011
    nqp_get_sc_object $P5038, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5039 = $P5038."new"($P101 :named("name"), "local" :named("scope"))
    $P5040 = $P5035."new"($P5037, $P5039, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5041 = $P5013."new"($P5034, $P5040, "ifnull" :named("op"))
.annotate 'line', 3014
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5043 = $P5042."new"($P101 :named("name"), "local" :named("scope"))
    $P5044 = $P5012."new"($P5041, $P5043, "invokewithcapture" :named("op"))
    $P5045 = $P5005."new"($P5011, $P5044)
    set $P102, $P5045
.annotate 'line', 3016
    nqp_get_sc_object $P5046, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5047 = $P5046."new"($P102, $P101, "locallifetime" :named("op"))
    $P5048 = _lex_param_1."!make"($P5047)
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_319_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3019
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_690 
    unless_null _lex_param_1, fallback6784
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6784:
    set fb_tmp_690, _lex_param_1
    repr_defined $I5001, fb_tmp_690
    unless $I5001 goto if3075_else6782 
    set $P5002, fb_tmp_690["arglist"]
    set $P5004, $P5002
    goto if3075_end6783
  if3075_else6782:
    null $P5003
    set $P5004, $P5003
  if3075_end6783:
    unless_null $P5004, vivi_30766785
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_30766785:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_320_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3021
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5058 = 'cuid_510_1382484127.52628' 
    capture_lex $P5058 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_691 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 3022
    nqp_get_sc_object $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5005 = $P5004."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5005
    unless_null _lex_param_1, fallback6790
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback6790:
    set fb_tmp_691, _lex_param_1
    repr_defined $I5001, fb_tmp_691
    unless $I5001 goto if3078_else6788 
    set $P5007, fb_tmp_691["EXPR"]
    set $P5009, $P5007
    goto if3078_end6789
  if3078_else6788:
    null $P5008
    set $P5009, $P5008
  if3078_end6789:
    unless_null $P5009, vivi_30796791
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_30796791:
    unless $P5009 goto if3077_end6787 
    .const 'Sub' $P5011 = 'cuid_510_1382484127.52628' 
    capture_lex $P5011
    $P5012 = $P5011()
  if3077_end6787:
    box $P5013, 0
    set $P102, $P5013
.annotate 'line', 3031
    $P5014 = $P101."list"()
    set $N5001, $P5014
    box $P5015, $N5001
    set $P103, $P5015
  while3085_test6805:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5002, $N5002, $N5003
    box $P5056, $I5002
    set $P5055, $P5056
    unless $I5002 goto while3085_done6809 
  while3085_redo6807:
.annotate 'line', 3032
    set fb_tmp_693, $P101
    repr_defined $I5004, fb_tmp_693
    unless $I5004 goto if3088_else6814 
    set $I5005, $P102
    set $P5016, fb_tmp_693[$I5005]
    set $P5018, $P5016
    goto if3088_end6815
  if3088_else6814:
    null $P5017
    set $P5018, $P5017
  if3088_end6815:
    unless_null $P5018, vivi_30896816
    nqp_get_sc_object $P5019, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5018, $P5019
  vivi_30896816:
    nqp_get_sc_object $P5020, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5003, $P5018, $P5020
    set $I5009, $I5003
    unless $I5003 goto if3087_end6813 
.annotate 'line', 3033
    set fb_tmp_694, $P101
    repr_defined $I5007, fb_tmp_694
    unless $I5007 goto if3090_else6817 
    set $I5008, $P102
    set $P5021, fb_tmp_694[$I5008]
    set $P5023, $P5021
    goto if3090_end6818
  if3090_else6817:
    null $P5022
    set $P5023, $P5022
  if3090_end6818:
    unless_null $P5023, vivi_30916819
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_30916819:
    $P5025 = $P5023."name"()
    set $S5001, $P5025
    iseq $I5006, $S5001, "&prefix:<|>"
    set $I5009, $I5006
  if3087_end6813:
    unless $I5009 goto if3086_end6811 
    set $I5010, $P102
    set fb_tmp_696, $P101
    repr_defined $I5012, fb_tmp_696
    unless $I5012 goto if3093_else6822 
    set $I5013, $P102
    set $P5026, fb_tmp_696[$I5013]
    set $P5028, $P5026
    goto if3093_end6823
  if3093_else6822:
    null $P5027
    set $P5028, $P5027
  if3093_end6823:
    unless_null $P5028, vivi_30946824
    nqp_get_sc_object $P5029, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5028, $P5029
  vivi_30946824:
    set fb_tmp_695, $P5028
    repr_defined $I5011, fb_tmp_695
    unless $I5011 goto if3092_else6820 
    set $P5030, fb_tmp_695[0]
    set $P5032, $P5030
    goto if3092_end6821
  if3092_else6820:
    null $P5031
    set $P5032, $P5031
  if3092_end6821:
    unless_null $P5032, vivi_30956825
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5032, $P5033
  vivi_30956825:
    set $P101[$I5010], $P5032
.annotate 'line', 3035
    set fb_tmp_697, $P101
    repr_defined $I5014, fb_tmp_697
    unless $I5014 goto if3096_else6826 
    set $I5015, $P102
    set $P5034, fb_tmp_697[$I5015]
    set $P5036, $P5034
    goto if3096_end6827
  if3096_else6826:
    null $P5035
    set $P5036, $P5035
  if3096_end6827:
    unless_null $P5036, vivi_30976828
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5036, $P5037
  vivi_30976828:
    $P5036."flat"(1)
    set fb_tmp_698, $P101
    repr_defined $I5017, fb_tmp_698
    unless $I5017 goto if3100_else6833 
    set $I5018, $P102
    set $P5038, fb_tmp_698[$I5018]
    set $P5040, $P5038
    goto if3100_end6834
  if3100_else6833:
    null $P5039
    set $P5040, $P5039
  if3100_end6834:
    unless_null $P5040, vivi_31016835
    nqp_get_sc_object $P5041, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5041
  vivi_31016835:
    nqp_get_sc_object $P5042, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5016, $P5040, $P5042
    set $I5022, $I5016
    unless $I5016 goto if3099_end6832 
.annotate 'line', 3037
    set fb_tmp_699, $P101
    repr_defined $I5020, fb_tmp_699
    unless $I5020 goto if3102_else6836 
    set $I5021, $P102
    set $P5043, fb_tmp_699[$I5021]
    set $P5045, $P5043
    goto if3102_end6837
  if3102_else6836:
    null $P5044
    set $P5045, $P5044
  if3102_end6837:
    unless_null $P5045, vivi_31036838
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_31036838:
    $P5047 = $P5045."name"()
    set $S5003, $P5047
    substr $S5002, $S5003, 0, 1
    iseq $I5019, $S5002, "%"
    set $I5022, $I5019
  if3099_end6832:
    box $P5054, $I5022
    set $P5053, $P5054
    unless $I5022 goto if3098_end6830 
.annotate 'line', 3036
    set fb_tmp_700, $P101
    repr_defined $I5023, fb_tmp_700
    unless $I5023 goto if3104_else6839 
    set $I5024, $P102
    set $P5048, fb_tmp_700[$I5024]
    set $P5050, $P5048
    goto if3104_end6840
  if3104_else6839:
    null $P5049
    set $P5050, $P5049
  if3104_end6840:
    unless_null $P5050, vivi_31056841
    nqp_get_sc_object $P5051, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5050, $P5051
  vivi_31056841:
    $P5052 = $P5050."named"(1)
    set $P5053, $P5052
  if3098_end6830:
  if3086_end6811:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5055, $N5004
    set $P102, $P5055
    set $P5055, tmp_2
    goto while3085_test6805 
  while3085_done6809:
.annotate 'line', 3041
    $P5057 = _lex_param_1."!make"($P101)
    .return ($P5057) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1382484127.52628") :anon :lex :outer("cuid_320_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3023
    .const 'Sub' $P5021 = 'cuid_509_1382484127.52628' 
    capture_lex $P5021 
    .lex "$expr", $P101 
    .local pmc fb_tmp_692 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3024
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6794
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5002, $P5003
  fallback6794:
    set fb_tmp_692, $P5002
    repr_defined $I5001, fb_tmp_692
    unless $I5001 goto if3080_else6792 
    set $P5004, fb_tmp_692["EXPR"]
    set $P5006, $P5004
    goto if3080_end6793
  if3080_else6792:
    null $P5005
    set $P5006, $P5005
  if3080_end6793:
    unless_null $P5006, vivi_30816795
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_30816795:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5002, $P101, $P5009
    set $I5004, $I5002
    unless $I5002 goto if3084_end6801 
.annotate 'line', 3025
    $P5010 = $P101."name"()
    set $S5001, $P5010
    iseq $I5003, $S5001, "&infix:<,>"
    set $I5004, $I5003
  if3084_end6801:
    set $I5006, $I5004
    unless $I5004 goto if3083_end6799 
    $P5011 = $P101."named"()
    isfalse $I5005, $P5011
    set $I5006, $I5005
  if3083_end6799:
    unless $I5006 goto if3082_else6796 
.annotate 'line', 3026
    $P5015 = $P101."list"()
    set $P5012, $P5015
    iter $P5014, $P5015
  for_next6802:
    unless $P5014, for_done6804
    shift $P5017, $P5014
  for_redo6803:
    .const 'Sub' $P5016 = 'cuid_509_1382484127.52628' 
    capture_lex $P5016
    $P5012 = $P5016($P5017)
    goto for_next6802
  for_done6804:
    set $P5020, $P5012
    goto if3082_end6797
  if3082_else6796:
.annotate 'line', 3028
    find_lex $P5018, "$past"
    $P5019 = $P5018."push"($P101)
    set $P5020, $P5019
  if3082_end6797:
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1382484127.52628") :anon :lex :outer("cuid_510_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3026
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_321_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3044
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_701 
    unless_null _lex_param_1, fallback6844
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6844:
    set fb_tmp_701, _lex_param_1
    repr_defined $I5001, fb_tmp_701
    unless $I5001 goto if3106_else6842 
    set $P5002, fb_tmp_701["multi_declarator"]
    set $P5004, $P5002
    goto if3106_end6843
  if3106_else6842:
    null $P5003
    set $P5004, $P5003
  if3106_end6843:
    unless_null $P5004, vivi_31076845
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31076845:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_322_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3046
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_702 
    unless_null _lex_param_1, fallback6848
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6848:
    set fb_tmp_702, _lex_param_1
    repr_defined $I5001, fb_tmp_702
    unless $I5001 goto if3108_else6846 
    set $P5002, fb_tmp_702["value"]
    set $P5004, $P5002
    goto if3108_end6847
  if3108_else6846:
    null $P5003
    set $P5004, $P5003
  if3108_end6847:
    unless_null $P5004, vivi_31096849
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31096849:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_323_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3048
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
.annotate 'line', 3049
    unless_null _lex_param_1, fallback6854
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6854:
    set fb_tmp_703, _lex_param_1
    repr_defined $I5001, fb_tmp_703
    unless $I5001 goto if3111_else6852 
    set $P5002, fb_tmp_703["EXPR"]
    set $P5004, $P5002
    goto if3111_end6853
  if3111_else6852:
    null $P5003
    set $P5004, $P5003
  if3111_end6853:
    unless_null $P5004, vivi_31126855
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31126855:
    unless $P5004 goto if3110_else6850 
.annotate 'line', 3050
    unless_null _lex_param_1, fallback6860
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback6860:
    set fb_tmp_705, _lex_param_1
    repr_defined $I5003, fb_tmp_705
    unless $I5003 goto if3114_else6858 
    set $P5007, fb_tmp_705["EXPR"]
    set $P5009, $P5007
    goto if3114_end6859
  if3114_else6858:
    null $P5008
    set $P5009, $P5008
  if3114_end6859:
    unless_null $P5009, vivi_31156861
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_31156861:
    set fb_tmp_704, $P5009
    repr_defined $I5002, fb_tmp_704
    unless $I5002 goto if3113_else6856 
    set $P5011, fb_tmp_704[0]
    set $P5013, $P5011
    goto if3113_end6857
  if3113_else6856:
    null $P5012
    set $P5013, $P5012
  if3113_end6857:
    unless_null $P5013, vivi_31166862
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_31166862:
    $P5015 = $P5013."ast"()
    set $P5018, $P5015
    goto if3110_end6851
  if3110_else6850:
.annotate 'line', 3051
    nqp_get_sc_object $P5016, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5017 = $P5016."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5018, $P5017
  if3110_end6851:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_324_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3054
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6867
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6867:
    set fb_tmp_706, _lex_param_1
    repr_defined $I5001, fb_tmp_706
    unless $I5001 goto if3118_else6865 
    set $P5003, fb_tmp_706["EXPR"]
    set $P5005, $P5003
    goto if3118_end6866
  if3118_else6865:
    null $P5004
    set $P5005, $P5004
  if3118_end6866:
    unless_null $P5005, vivi_31196868
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31196868:
    unless $P5005 goto if3117_else6863 
.annotate 'line', 3056
.annotate 'line', 3057
    unless_null _lex_param_1, fallback6873
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5007
  fallback6873:
    set fb_tmp_708, _lex_param_1
    repr_defined $I5003, fb_tmp_708
    unless $I5003 goto if3121_else6871 
    set $P5008, fb_tmp_708["EXPR"]
    set $P5010, $P5008
    goto if3121_end6872
  if3121_else6871:
    null $P5009
    set $P5010, $P5009
  if3121_end6872:
    unless_null $P5010, vivi_31226874
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_31226874:
    set fb_tmp_707, $P5010
    repr_defined $I5002, fb_tmp_707
    unless $I5002 goto if3120_else6869 
    set $P5012, fb_tmp_707[0]
    set $P5014, $P5012
    goto if3120_end6870
  if3120_else6869:
    null $P5013
    set $P5014, $P5013
  if3120_end6870:
    unless_null $P5014, vivi_31236875
    nqp_get_sc_object $P5015, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5014, $P5015
  vivi_31236875:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5004, $P101, $P5017
    set $I5006, $I5004
    unless $I5004 goto if3125_end6879 
.annotate 'line', 3058
    $P5018 = $P101."name"()
    set $S5001, $P5018
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if3125_end6879:
    box $P5022, $I5006
    set $P5021, $P5022
    if $I5006 goto unless3124_end6877 
.annotate 'line', 3059
    nqp_get_sc_object $P5019, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5020 = $P5019."new"($P101, "list" :named("op"))
    set $P101, $P5020
    set $P5021, $P101
  unless3124_end6877:
    goto if3117_end6864
  if3117_else6863:
.annotate 'line', 3062
.annotate 'line', 3063
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5024 = $P5023."new"("list" :named("op"))
    set $P101, $P5024
  if3117_end6864:
.annotate 'line', 3065
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3066
    $P5025 = _lex_param_1."!make"($P101)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_325_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3069
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_709 
    unless_null _lex_param_1, fallback6882
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6882:
    set fb_tmp_709, _lex_param_1
    repr_defined $I5001, fb_tmp_709
    unless $I5001 goto if3126_else6880 
    set $P5002, fb_tmp_709["quote_EXPR"]
    set $P5004, $P5002
    goto if3126_end6881
  if3126_else6880:
    null $P5003
    set $P5004, $P5003
  if3126_end6881:
    unless_null $P5004, vivi_31276883
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31276883:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_326_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3070
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_710 
    unless_null _lex_param_1, fallback6886
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6886:
    set fb_tmp_710, _lex_param_1
    repr_defined $I5001, fb_tmp_710
    unless $I5001 goto if3128_else6884 
    set $P5002, fb_tmp_710["quote_EXPR"]
    set $P5004, $P5002
    goto if3128_end6885
  if3128_else6884:
    null $P5003
    set $P5004, $P5003
  if3128_end6885:
    unless_null $P5004, vivi_31296887
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31296887:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_327_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3072
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_511_1382484127.52628' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    unless_null _lex_param_1, fallback6898
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6898:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5005, fb_tmp_714
    unless $I5005 goto if3134_else6896 
    set $P5002, fb_tmp_714["pblock"]
    set $P5004, $P5002
    goto if3134_end6897
  if3134_else6896:
    null $P5003
    set $P5004, $P5003
  if3134_end6897:
    unless_null $P5004, vivi_31356899
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31356899:
    set fb_tmp_713, $P5004
    repr_defined $I5004, fb_tmp_713
    unless $I5004 goto if3133_else6894 
    set $P5006, fb_tmp_713["blockoid"]
    set $P5008, $P5006
    goto if3133_end6895
  if3133_else6894:
    null $P5007
    set $P5008, $P5007
  if3133_end6895:
    unless_null $P5008, vivi_31366900
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_31366900:
    set fb_tmp_712, $P5008
    repr_defined $I5003, fb_tmp_712
    unless $I5003 goto if3132_else6892 
    set $P5010, fb_tmp_712["statementlist"]
    set $P5012, $P5010
    goto if3132_end6893
  if3132_else6892:
    null $P5011
    set $P5012, $P5011
  if3132_end6893:
    unless_null $P5012, vivi_31376901
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_31376901:
    set fb_tmp_711, $P5012
    repr_defined $I5002, fb_tmp_711
    unless $I5002 goto if3131_else6890 
    set $P5014, fb_tmp_711["statement"]
    set $P5016, $P5014
    goto if3131_end6891
  if3131_else6890:
    null $P5015
    set $P5016, $P5015
  if3131_end6891:
    unless_null $P5016, vivi_31386902
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_31386902:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if3130_else6888 
    .const 'Sub' $P5018 = 'cuid_511_1382484127.52628' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if3130_end6889
  if3130_else6888:
    unless_null _lex_param_1, fallback6915
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5020
  fallback6915:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5008, fb_tmp_718
    unless $I5008 goto if3144_else6913 
    set $P5021, fb_tmp_718["pblock"]
    set $P5023, $P5021
    goto if3144_end6914
  if3144_else6913:
    null $P5022
    set $P5023, $P5022
  if3144_end6914:
    unless_null $P5023, vivi_31456916
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_31456916:
    set fb_tmp_717, $P5023
    repr_defined $I5007, fb_tmp_717
    unless $I5007 goto if3143_else6911 
    set $P5025, fb_tmp_717["blockoid"]
    set $P5027, $P5025
    goto if3143_end6912
  if3143_else6911:
    null $P5026
    set $P5027, $P5026
  if3143_end6912:
    unless_null $P5027, vivi_31466917
    nqp_get_sc_object $P5028, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5027, $P5028
  vivi_31466917:
    set fb_tmp_716, $P5027
    repr_defined $I5006, fb_tmp_716
    unless $I5006 goto if3142_else6909 
    set $P5029, fb_tmp_716["you_are_here"]
    set $P5031, $P5029
    goto if3142_end6910
  if3142_else6909:
    null $P5030
    set $P5031, $P5030
  if3142_end6910:
    unless_null $P5031, vivi_31476918
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_31476918:
    unless $P5031 goto if3141_else6907 
.annotate 'line', 3078
.annotate 'line', 3079
    unless_null _lex_param_1, fallback6921
    nqp_get_sc_object $P5033, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5033
  fallback6921:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5009, fb_tmp_719
    unless $I5009 goto if3148_else6919 
    set $P5034, fb_tmp_719["pblock"]
    set $P5036, $P5034
    goto if3148_end6920
  if3148_else6919:
    null $P5035
    set $P5036, $P5035
  if3148_end6920:
    unless_null $P5036, vivi_31496922
    nqp_get_sc_object $P5037, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5036, $P5037
  vivi_31496922:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if3141_end6908
  if3141_else6907:
.annotate 'line', 3081
.annotate 'line', 3082
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if3141_end6908:
    set $P5043, $P5042
  if3130_end6889:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1382484127.52628") :anon :lex :outer("cuid_327_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3073
    .lex "$past", $P101 
    .local pmc fb_tmp_715 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3074
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6905
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  fallback6905:
    set fb_tmp_715, $P5003
    repr_defined $I5001, fb_tmp_715
    unless $I5001 goto if3139_else6903 
    set $P5005, fb_tmp_715["pblock"]
    set $P5007, $P5005
    goto if3139_end6904
  if3139_else6903:
    null $P5006
    set $P5007, $P5006
  if3139_end6904:
    unless_null $P5007, vivi_31406906
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_31406906:
    $P5009 = $P5007."ast"()
    $P5010 = $P5002."new"($P5009, "takeclosure" :named("op"))
    set $P101, $P5010
    box $P5011, 1
    set $P101["bareblock"], $P5011
.annotate 'line', 3076
    find_dynamic_lex $P5012, "$/"
    $P5013 = $P5012."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_328_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3086
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_720 
    unless_null _lex_param_1, fallback6925
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6925:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5001, fb_tmp_720
    unless $I5001 goto if3150_else6923 
    set $P5002, fb_tmp_720["statement"]
    set $P5004, $P5002
    goto if3150_end6924
  if3150_else6923:
    null $P5003
    set $P5004, $P5003
  if3150_end6924:
    unless_null $P5004, vivi_31516926
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31516926:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_329_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3088
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
.annotate 'line', 3089
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
    unless_null _lex_param_1, fallback6929
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6929:
    set fb_tmp_721, _lex_param_1
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3152_else6927 
    set $P5003, fb_tmp_721["EXPR"]
    set $P5005, $P5003
    goto if3152_end6928
  if3152_else6927:
    null $P5004
    set $P5005, $P5004
  if3152_end6928:
    unless_null $P5005, vivi_31536930
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31536930:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "positional" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_330_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3092
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_722 
.annotate 'line', 3093
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
    unless_null _lex_param_1, fallback6933
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6933:
    set fb_tmp_722, _lex_param_1
    repr_defined $I5001, fb_tmp_722
    unless $I5001 goto if3154_else6931 
    set $P5003, fb_tmp_722["EXPR"]
    set $P5005, $P5003
    goto if3154_end6932
  if3154_else6931:
    null $P5004
    set $P5005, $P5004
  if3154_end6932:
    unless_null $P5005, vivi_31556934
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31556934:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_331_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3096
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_723 
.annotate 'line', 3097
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 84
    unless_null _lex_param_1, fallback6937
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6937:
    set fb_tmp_723, _lex_param_1
    repr_defined $I5001, fb_tmp_723
    unless $I5001 goto if3156_else6935 
    set $P5003, fb_tmp_723["quote_EXPR"]
    set $P5005, $P5003
    goto if3156_end6936
  if3156_else6935:
    null $P5004
    set $P5005, $P5004
  if3156_end6936:
    unless_null $P5005, vivi_31576938
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31576938:
    $P5007 = $P5005."ast"()
    $P5008 = "&default_for"("$")
    $P5009 = $P5001."new"($P5007, "associative" :named("scope"), $P5008 :named("fallback"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_332_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3100
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_724 
.annotate 'line', 3101
    unless_null _lex_param_1, fallback6941
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6941:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5001, fb_tmp_724
    unless $I5001 goto if3158_else6939 
    set $P5002, fb_tmp_724["arglist"]
    set $P5004, $P5002
    goto if3158_end6940
  if3158_else6939:
    null $P5003
    set $P5004, $P5003
  if3158_end6940:
    unless_null $P5004, vivi_31596942
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31596942:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_333_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3104
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    .local pmc fb_tmp_727 
.annotate 'line', 3105
    unless_null _lex_param_1, fallback6947
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6947:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5001, fb_tmp_725
    unless $I5001 goto if3161_else6945 
    set $P5002, fb_tmp_725["quote"]
    set $P5004, $P5002
    goto if3161_end6946
  if3161_else6945:
    null $P5003
    set $P5004, $P5003
  if3161_end6946:
    unless_null $P5004, vivi_31626948
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31626948:
    unless $P5004 goto if3160_else6943 
    unless_null _lex_param_1, fallback6951
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5006
  fallback6951:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5002, fb_tmp_726
    unless $I5002 goto if3163_else6949 
    set $P5007, fb_tmp_726["quote"]
    set $P5009, $P5007
    goto if3163_end6950
  if3163_else6949:
    null $P5008
    set $P5009, $P5008
  if3163_end6950:
    unless_null $P5009, vivi_31646952
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_31646952:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3160_end6944
  if3160_else6943:
    unless_null _lex_param_1, fallback6955
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5012
  fallback6955:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5003, fb_tmp_727
    unless $I5003 goto if3165_else6953 
    set $P5013, fb_tmp_727["number"]
    set $P5015, $P5013
    goto if3165_end6954
  if3165_else6953:
    null $P5014
    set $P5015, $P5014
  if3165_end6954:
    unless_null $P5015, vivi_31666956
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_31666956:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3160_end6944:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_334_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3108
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    .local pmc fb_tmp_730 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    unless_null _lex_param_1, fallback6961
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback6961:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5001, fb_tmp_728
    unless $I5001 goto if3168_else6959 
    set $P5003, fb_tmp_728["dec_number"]
    set $P5005, $P5003
    goto if3168_end6960
  if3168_else6959:
    null $P5004
    set $P5005, $P5004
  if3168_end6960:
    unless_null $P5005, vivi_31696962
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31696962:
    unless $P5005 goto if3167_else6957 
.annotate 'line', 3109
    unless_null _lex_param_1, fallback6965
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5007
  fallback6965:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5002, fb_tmp_729
    unless $I5002 goto if3170_else6963 
    set $P5008, fb_tmp_729["dec_number"]
    set $P5010, $P5008
    goto if3170_end6964
  if3170_else6963:
    null $P5009
    set $P5010, $P5009
  if3170_end6964:
    unless_null $P5010, vivi_31716966
    nqp_get_sc_object $P5011, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5010, $P5011
  vivi_31716966:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if3167_end6958
  if3167_else6957:
    unless_null _lex_param_1, fallback6969
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5013
  fallback6969:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5003, fb_tmp_730
    unless $I5003 goto if3172_else6967 
    set $P5014, fb_tmp_730["integer"]
    set $P5016, $P5014
    goto if3172_end6968
  if3172_else6967:
    null $P5015
    set $P5016, $P5015
  if3172_end6968:
    unless_null $P5016, vivi_31736970
    nqp_get_sc_object $P5017, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5016, $P5017
  vivi_31736970:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if3167_end6958:
    set $P101, $P5019
    unless_null _lex_param_1, fallback6975
    nqp_get_sc_object $P5020, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5020
  fallback6975:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5005, fb_tmp_731
    unless $I5005 goto if3175_else6973 
    set $P5021, fb_tmp_731["sign"]
    set $P5023, $P5021
    goto if3175_end6974
  if3175_else6973:
    null $P5022
    set $P5023, $P5022
  if3175_end6974:
    unless_null $P5023, vivi_31766976
    nqp_get_sc_object $P5024, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5023, $P5024
  vivi_31766976:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if3174_end6972 
.annotate 'line', 3110
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if3174_end6972:
.annotate 'line', 3111
    unless_null _lex_param_1, fallback6981
    nqp_get_sc_object $P5026, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5026
  fallback6981:
    set fb_tmp_732, _lex_param_1
    repr_defined $I5006, fb_tmp_732
    unless $I5006 goto if3178_else6979 
    set $P5027, fb_tmp_732["dec_number"]
    set $P5029, $P5027
    goto if3178_end6980
  if3178_else6979:
    null $P5028
    set $P5029, $P5028
  if3178_end6980:
    unless_null $P5029, vivi_31796982
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_31796982:
    unless $P5029 goto if3177_else6977 
.annotate 'line', 3112
    nqp_get_sc_object $P5031, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 49
    $P5032 = $P5031."new"($P101 :named("value"))
    set $P5035, $P5032
    goto if3177_end6978
  if3177_else6977:
.annotate 'line', 3113
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    $P5034 = $P5033."new"($P101 :named("value"))
    set $P5035, $P5034
  if3177_end6978:
    $P5036 = _lex_param_1."!make"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_335_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3116
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_733 
    unless_null _lex_param_1, fallback6985
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6985:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5001, fb_tmp_733
    unless $I5001 goto if3180_else6983 
    set $P5002, fb_tmp_733["quote_EXPR"]
    set $P5004, $P5002
    goto if3180_end6984
  if3180_else6983:
    null $P5003
    set $P5004, $P5003
  if3180_end6984:
    unless_null $P5004, vivi_31816986
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31816986:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_336_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3117
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_734 
    unless_null _lex_param_1, fallback6989
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6989:
    set fb_tmp_734, _lex_param_1
    repr_defined $I5001, fb_tmp_734
    unless $I5001 goto if3182_else6987 
    set $P5002, fb_tmp_734["quote_EXPR"]
    set $P5004, $P5002
    goto if3182_end6988
  if3182_else6987:
    null $P5003
    set $P5004, $P5003
  if3182_end6988:
    unless_null $P5004, vivi_31836990
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31836990:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_337_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3118
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_735 
    unless_null _lex_param_1, fallback6993
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6993:
    set fb_tmp_735, _lex_param_1
    repr_defined $I5001, fb_tmp_735
    unless $I5001 goto if3184_else6991 
    set $P5002, fb_tmp_735["quote_EXPR"]
    set $P5004, $P5002
    goto if3184_end6992
  if3184_else6991:
    null $P5003
    set $P5004, $P5003
  if3184_end6992:
    unless_null $P5004, vivi_31856994
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31856994:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_338_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3119
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_736 
    unless_null _lex_param_1, fallback6997
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback6997:
    set fb_tmp_736, _lex_param_1
    repr_defined $I5001, fb_tmp_736
    unless $I5001 goto if3186_else6995 
    set $P5002, fb_tmp_736["quote_EXPR"]
    set $P5004, $P5002
    goto if3186_end6996
  if3186_else6995:
    null $P5003
    set $P5004, $P5003
  if3186_end6996:
    unless_null $P5004, vivi_31876998
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31876998:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_339_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3120
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_737 
    unless_null _lex_param_1, fallback7001
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback7001:
    set fb_tmp_737, _lex_param_1
    repr_defined $I5001, fb_tmp_737
    unless $I5001 goto if3188_else6999 
    set $P5002, fb_tmp_737["quote_EXPR"]
    set $P5004, $P5002
    goto if3188_end7000
  if3188_else6999:
    null $P5003
    set $P5004, $P5003
  if3188_end7000:
    unless_null $P5004, vivi_31897002
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_31897002:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_340_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3121
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_738 
.annotate 'line', 3122
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 93
    unless_null _lex_param_1, fallback7005
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback7005:
    set fb_tmp_738, _lex_param_1
    repr_defined $I5001, fb_tmp_738
    unless $I5001 goto if3190_else7003 
    set $P5003, fb_tmp_738["quote_EXPR"]
    set $P5005, $P5003
    goto if3190_end7004
  if3190_else7003:
    null $P5004
    set $P5005, $P5004
  if3190_end7004:
    unless_null $P5005, vivi_31917006
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_31917006:
    $P5007 = $P5005."ast"()
    $P5008 = $P5007."value"()
    $P5009 = $P5001."new"($P5008 :named("pir"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_341_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3125
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc fb_tmp_745 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_746 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
.annotate 'line', 3126
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7007
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5005, $P5006
    set fb_tmp_739, $P5005
    repr_defined $I5001, fb_tmp_739
    unless $I5001 goto if3192_else7008 
    set $P5007, fb_tmp_739["$W"]
    set $P5009, $P5007
    goto if3192_end7009
  if3192_else7008:
    null $P5008
    set $P5009, $P5008
  if3192_end7009:
    unless_null $P5009, vivi_31937010
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_31937010:
    unless_null $P5009, vivi_31947011
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_31947011:
    set $P5004, $P5009
  fallback7007:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3127
    set fb_tmp_740, $P101
    repr_defined $I5002, fb_tmp_740
    unless $I5002 goto if3195_else7012 
    set $P5013, fb_tmp_740[0]
    set $P5015, $P5013
    goto if3195_end7013
  if3195_else7012:
    null $P5014
    set $P5015, $P5014
  if3195_end7013:
    unless_null $P5015, vivi_31967014
    nqp_get_sc_object $P5016, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5015, $P5016
  vivi_31967014:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5018 = $P5017."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5018)
.annotate 'line', 3128
    set fb_tmp_741, $P101
    repr_defined $I5003, fb_tmp_741
    unless $I5003 goto if3197_else7015 
    set $P5019, fb_tmp_741[0]
    set $P5021, $P5019
    goto if3197_end7016
  if3197_else7015:
    null $P5020
    set $P5021, $P5020
  if3197_end7016:
    unless_null $P5021, vivi_31987017
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_31987017:
    nqp_get_sc_object $P5023, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3130
    nqp_get_sc_object $P5024, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5025 = $P5024."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3131
    nqp_get_sc_object $P5026, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5027 = $P5026."new"("self" :named("name"), "lexical" :named("scope"))
    $P5028 = $P5023."new"($P5025, $P5027, "bind" :named("op"))
    $P5021."push"($P5028)
.annotate 'line', 3132
    set fb_tmp_742, $P101
    repr_defined $I5004, fb_tmp_742
    unless $I5004 goto if3199_else7018 
    set $P5029, fb_tmp_742[0]
    set $P5031, $P5029
    goto if3199_end7019
  if3199_else7018:
    null $P5030
    set $P5031, $P5030
  if3199_end7019:
    unless_null $P5031, vivi_32007020
    nqp_get_sc_object $P5032, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5031, $P5032
  vivi_32007020:
    nqp_get_sc_object $P5033, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5034 = $P5033."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5031."push"($P5034)
.annotate 'line', 3133
    set fb_tmp_743, $P101
    repr_defined $I5005, fb_tmp_743
    unless $I5005 goto if3201_else7021 
    set $P5035, fb_tmp_743[0]
    set $P5037, $P5035
    goto if3201_end7022
  if3201_else7021:
    null $P5036
    set $P5037, $P5036
  if3201_end7022:
    unless_null $P5037, vivi_32027023
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_32027023:
    nqp_get_sc_object $P5039, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5040 = $P5039."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5037."push"($P5040)
.annotate 'line', 3134
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3135
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3137
    find_dynamic_lex $P5041, "%*LANG"
    unless_null $P5041, fallback7026
    nqp_get_sc_object $P5043, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_50, $P5042
    set fb_tmp_745, pkg_viv_tmp_50
    repr_defined $I5007, fb_tmp_745
    unless $I5007 goto if3204_else7027 
    set $P5044, fb_tmp_745["%LANG"]
    set $P5046, $P5044
    goto if3204_end7028
  if3204_else7027:
    null $P5045
    set $P5046, $P5045
  if3204_end7028:
    unless_null $P5046, vivi_32057029
    new $P5047, 'Hash'
    set pkg_viv_tmp_50["%LANG"], $P5047
    set $P5046, $P5047
  vivi_32057029:
    unless_null $P5046, vivi_32067030
    die "Contextual %*LANG not found"
    box $P5048, "Contextual %*LANG not found"
    set $P5046, $P5048
  vivi_32067030:
    set $P5041, $P5046
  fallback7026:
    set fb_tmp_744, $P5041
    repr_defined $I5006, fb_tmp_744
    unless $I5006 goto if3203_else7024 
    set $P5049, fb_tmp_744["Regex-actions"]
    set $P5051, $P5049
    goto if3203_end7025
  if3203_else7024:
    null $P5050
    set $P5051, $P5050
  if3203_end7025:
    unless_null $P5051, vivi_32077031
    nqp_get_sc_object $P5052, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5051, $P5052
  vivi_32077031:
    unless_null _lex_param_1, fallback7034
    nqp_get_sc_object $P5053, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5053
  fallback7034:
    set fb_tmp_746, _lex_param_1
    repr_defined $I5008, fb_tmp_746
    unless $I5008 goto if3208_else7032 
    set $P5054, fb_tmp_746["p6regex"]
    set $P5056, $P5054
    goto if3208_end7033
  if3208_else7032:
    null $P5055
    set $P5056, $P5055
  if3208_end7033:
    unless_null $P5056, vivi_32097035
    nqp_get_sc_object $P5057, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5056, $P5057
  vivi_32097035:
    $P5058 = $P5056."ast"()
    $P5059 = $P5051."qbuildsub"($P5058, $P101)
    set $P102, $P5059
.annotate 'line', 3138
    nqp_get_sc_object $P5060, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3140
    new $P5061, 'ResizablePMCArray'
    box $P5062, "NQPRegex"
    push $P5061, $P5062
    $P5063 = "&lexical_package_lookup"($P5061, _lex_param_1)
    $P5064 = $P5060."new"($P5063, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5064
    set $P103["sink"], $P102
.annotate 'line', 3145
    $P5065 = _lex_param_1."!make"($P103)
    .return ($P5065) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_342_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3148
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_747 
    unless_null _lex_param_1, fallback7038
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback7038:
    set fb_tmp_747, _lex_param_1
    repr_defined $I5001, fb_tmp_747
    unless $I5001 goto if3210_else7036 
    set $P5002, fb_tmp_747["variable"]
    set $P5004, $P5002
    goto if3210_end7037
  if3210_else7036:
    null $P5003
    set $P5004, $P5003
  if3210_end7037:
    unless_null $P5004, vivi_32117039
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_32117039:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_343_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3149
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_748 
.annotate 'line', 3150
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3151
    unless_null _lex_param_1, fallback7042
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback7042:
    set fb_tmp_748, _lex_param_1
    repr_defined $I5001, fb_tmp_748
    unless $I5001 goto if3212_else7040 
    set $P5003, fb_tmp_748["block"]
    set $P5005, $P5003
    goto if3212_end7041
  if3212_else7040:
    null $P5004
    set $P5005, $P5004
  if3212_end7041:
    unless_null $P5005, vivi_32137043
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_32137043:
    $P5007 = $P5005."ast"()
    $P5008 = "&block_immediate"($P5007)
    $P5009 = $P5001."new"($P5008, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_344_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3154
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_345_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3158
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_749 
    unless_null _lex_param_1, fallback7046
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback7046:
    set fb_tmp_749, _lex_param_1
    repr_defined $I5001, fb_tmp_749
    unless $I5001 goto if3214_else7044 
    set $P5002, fb_tmp_749["dotty"]
    set $P5004, $P5002
    goto if3214_end7045
  if3214_else7044:
    null $P5003
    set $P5004, $P5003
  if3214_end7045:
    unless_null $P5004, vivi_32157047
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_32157047:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_346_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3160
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3161
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("call" :named("op"), "RETURN" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_347_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3165
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3166
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5003 = $P5002."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5004 = $P5001."new"($P5003, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5005 = _lex_param_1."!make"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_348_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3173
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("control" :named("op"), "next" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_349_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3174
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("control" :named("op"), "last" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_350_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3175
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("control" :named("op"), "redo" :named("name"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_351_1382484127.52628") :anon :lex :outer("cuid_433_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3177
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 3178
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    $P5002 = $P5001."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3283
    .const 'Sub' $P5014 = 'cuid_352_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_353_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_354_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_355_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_356_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_357_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_358_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_359_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_360_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1382484127.52628' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1382484127.52628' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_352_1382484127.52628' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_353_1382484127.52628' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_354_1382484127.52628' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_355_1382484127.52628' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_356_1382484127.52628' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_357_1382484127.52628' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_358_1382484127.52628' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_359_1382484127.52628' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_360_1382484127.52628' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_361_1382484127.52628' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_362_1382484127.52628' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_363_1382484127.52628' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_364_1382484127.52628' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_352_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_750 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3286
    unless_null _lex_param_1, fallback7050
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback7050:
    set fb_tmp_750, _lex_param_1
    repr_defined $I5001, fb_tmp_750
    unless $I5001 goto if3216_else7048 
    set $P5003, fb_tmp_750["statement"]
    set $P5005, $P5003
    goto if3216_end7049
  if3216_else7048:
    null $P5004
    set $P5005, $P5004
  if3216_end7049:
    unless_null $P5005, vivi_32177051
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_32177051:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3287
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    $P5009 = $P5008."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5010 = _lex_param_1."!make"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_353_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3291
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_751 
.annotate 'line', 3292
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    unless_null _lex_param_1, fallback7054
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback7054:
    set fb_tmp_751, _lex_param_1
    repr_defined $I5001, fb_tmp_751
    unless $I5001 goto if3218_else7052 
    set $P5003, fb_tmp_751["codeblock"]
    set $P5005, $P5003
    goto if3218_end7053
  if3218_else7052:
    null $P5004
    set $P5005, $P5004
  if3218_end7053:
    unless_null $P5005, vivi_32197055
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_32197055:
    $P5007 = $P5005."ast"()
    $P5008 = $P5001."new"($P5007, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_354_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3296
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_752 
    .local pmc fb_tmp_753 
.annotate 'line', 3297
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
.annotate 'line', 3298
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5004 = $P5003."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3299
    unless_null _lex_param_1, fallback7058
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5005
  fallback7058:
    set fb_tmp_752, _lex_param_1
    repr_defined $I5001, fb_tmp_752
    unless $I5001 goto if3220_else7056 
    set $P5006, fb_tmp_752["var"]
    set $P5008, $P5006
    goto if3220_end7057
  if3220_else7056:
    null $P5007
    set $P5008, $P5007
  if3220_end7057:
    unless_null $P5008, vivi_32217059
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_32217059:
    $P5010 = $P5008."ast"()
.annotate 'line', 3300
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    find_dynamic_lex $P5012, "$*SEQ"
    unless_null $P5012, fallback7062
    nqp_get_sc_object $P5014, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5013, $P5014
    set fb_tmp_753, $P5013
    repr_defined $I5002, fb_tmp_753
    unless $I5002 goto if3223_else7063 
    set $P5015, fb_tmp_753["$SEQ"]
    set $P5017, $P5015
    goto if3223_end7064
  if3223_else7063:
    null $P5016
    set $P5017, $P5016
  if3223_end7064:
    unless_null $P5017, vivi_32247065
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_32247065:
    unless_null $P5017, vivi_32257066
    die "Contextual $*SEQ not found"
    box $P5019, "Contextual $*SEQ not found"
    set $P5017, $P5019
  vivi_32257066:
    set $P5012, $P5017
  fallback7062:
    unless $P5012 goto if3222_else7060 
    set $I5003, 1
    goto if3222_end7061
  if3222_else7060:
    set $I5003, 0
  if3222_end7061:
    $P5020 = $P5011."new"($I5003 :named("value"))
    $P5021 = $P5002."new"($P5004, $P5010, $P5020)
    $P5022 = $P5001."new"($P5021, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5023 = _lex_param_1."!make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_355_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_754 
.annotate 'line', 3305
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
.annotate 'line', 3306
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3307
    unless_null _lex_param_1, fallback7069
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5005
  fallback7069:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5001, fb_tmp_754
    unless $I5001 goto if3226_else7067 
    set $P5006, fb_tmp_754["codeblock"]
    set $P5008, $P5006
    goto if3226_end7068
  if3226_else7067:
    null $P5007
    set $P5008, $P5007
  if3226_end7068:
    unless_null $P5008, vivi_32277070
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_32277070:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_356_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3311
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_756 
.annotate 'line', 3312
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    unless_null _lex_param_1, fallback7073
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5002
  fallback7073:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5001, fb_tmp_755
    unless $I5001 goto if3228_else7071 
    set $P5003, fb_tmp_755["codeblock"]
    set $P5005, $P5003
    goto if3228_end7072
  if3228_else7071:
    null $P5004
    set $P5005, $P5004
  if3228_end7072:
    unless_null $P5005, vivi_32297074
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_32297074:
    $P5007 = $P5005."ast"()
    unless_null _lex_param_1, fallback7077
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5008
  fallback7077:
    set fb_tmp_756, _lex_param_1
    repr_defined $I5003, fb_tmp_756
    unless $I5003 goto if3230_else7075 
    set $P5009, fb_tmp_756["zw"]
    set $P5011, $P5009
    goto if3230_end7076
  if3230_else7075:
    null $P5010
    set $P5011, $P5010
  if3230_end7076:
    unless_null $P5011, vivi_32317078
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_32317078:
    set $S5001, $P5011
    iseq $I5002, $S5001, "!"
    $P5013 = $P5001."new"($P5007, "zerowidth" :named("subtype"), $I5002 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5014 = _lex_param_1."!make"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_357_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3317
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_757 
.annotate 'line', 3318
    nqp_get_sc_object $P5001, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    nqp_get_sc_object $P5002, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
.annotate 'line', 3319
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5004 = $P5003."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3320
    unless_null _lex_param_1, fallback7081
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5005
  fallback7081:
    set fb_tmp_757, _lex_param_1
    repr_defined $I5001, fb_tmp_757
    unless $I5001 goto if3232_else7079 
    set $P5006, fb_tmp_757["var"]
    set $P5008, $P5006
    goto if3232_end7080
  if3232_else7079:
    null $P5007
    set $P5008, $P5007
  if3232_end7080:
    unless_null $P5008, vivi_32337082
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_32337082:
    $P5010 = $P5008."ast"()
    $P5011 = $P5002."new"($P5004, $P5010)
    $P5012 = $P5001."new"($P5011, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_358_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3324
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_758 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
.annotate 'line', 3325
    unless_null _lex_param_1, fallback7085
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback7085:
    set fb_tmp_758, _lex_param_1
    repr_defined $I5001, fb_tmp_758
    unless $I5001 goto if3234_else7083 
    set $P5004, fb_tmp_758["block"]
    set $P5006, $P5004
    goto if3234_end7084
  if3234_else7083:
    null $P5005
    set $P5006, $P5005
  if3234_end7084:
    unless_null $P5006, vivi_32357086
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_32357086:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3326
    $P101."blocktype"("immediate")
.annotate 'line', 3328
    nqp_get_sc_object $P5009, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 98
.annotate 'line', 3329
    nqp_get_sc_object $P5010, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3331
    nqp_get_sc_object $P5011, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5012 = $P5011."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3332
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
.annotate 'line', 3333
    nqp_get_sc_object $P5014, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    $P5015 = $P5014."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5016 = $P5013."new"($P5015, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5017 = $P5010."new"($P5012, $P5016, "bind" :named("op"))
    $P5018 = $P5009."new"($P5017, $P101)
    set $P102, $P5018
.annotate 'line', 3340
    $P5019 = _lex_param_1."!make"($P102)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_359_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3343
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5101 = 'cuid_513_1382484127.52628' 
    capture_lex $P5101 
    .const 'Sub' $P5101 = 'cuid_514_1382484127.52628' 
    capture_lex $P5101 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_759 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc fb_tmp_762 
    .local pmc fb_tmp_765 
    .local pmc fb_tmp_766 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    unless_null _lex_param_1, fallback7089
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5003
  fallback7089:
    set fb_tmp_759, _lex_param_1
    repr_defined $I5001, fb_tmp_759
    unless $I5001 goto if3236_else7087 
    set $P5004, fb_tmp_759["longname"]
    set $P5006, $P5004
    goto if3236_end7088
  if3236_else7087:
    null $P5005
    set $P5006, $P5005
  if3236_end7088:
    unless_null $P5006, vivi_32377090
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_32377090:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback7095
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5009
  fallback7095:
    set fb_tmp_760, _lex_param_1
    repr_defined $I5002, fb_tmp_760
    unless $I5002 goto if3239_else7093 
    set $P5010, fb_tmp_760["assertion"]
    set $P5012, $P5010
    goto if3239_end7094
  if3239_else7093:
    null $P5011
    set $P5012, $P5011
  if3239_end7094:
    unless_null $P5012, vivi_32407096
    nqp_get_sc_object $P5013, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5012, $P5013
  vivi_32407096:
    unless $P5012 goto if3238_else7091 
.annotate 'line', 3346
.annotate 'line', 3347
    unless_null _lex_param_1, fallback7101
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5014
  fallback7101:
    set fb_tmp_762, _lex_param_1
    repr_defined $I5004, fb_tmp_762
    unless $I5004 goto if3242_else7099 
    set $P5015, fb_tmp_762["assertion"]
    set $P5017, $P5015
    goto if3242_end7100
  if3242_else7099:
    null $P5016
    set $P5017, $P5016
  if3242_end7100:
    unless_null $P5017, vivi_32437102
    nqp_get_sc_object $P5018, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5017, $P5018
  vivi_32437102:
    set fb_tmp_761, $P5017
    repr_defined $I5003, fb_tmp_761
    unless $I5003 goto if3241_else7097 
    set $P5019, fb_tmp_761[0]
    set $P5021, $P5019
    goto if3241_end7098
  if3241_else7097:
    null $P5020
    set $P5021, $P5020
  if3241_end7098:
    unless_null $P5021, vivi_32447103
    nqp_get_sc_object $P5022, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5021, $P5022
  vivi_32447103:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3348
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if3238_end7092
  if3238_else7091:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if3245_else7104 
    .const 'Sub' $P5026 = 'cuid_513_1382484127.52628' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5099, $P5027
    goto if3245_end7105
  if3245_else7104:
.annotate 'line', 3359
.annotate 'line', 3360
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
.annotate 'line', 3362
    nqp_get_sc_object $P5029, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 12
    nqp_get_sc_object $P5030, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 55
    $P5031 = $P5030."new"($P101 :named("value"))
    $P5032 = $P5029."new"($P5031)
    $P5033 = $P5028."new"($P5032, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5033
    unless_null _lex_param_1, fallback7120
    nqp_get_sc_object $P5034, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5034
  fallback7120:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5006, fb_tmp_765
    unless $I5006 goto if3253_else7118 
    set $P5035, fb_tmp_765["arglist"]
    set $P5037, $P5035
    goto if3253_end7119
  if3253_else7118:
    null $P5036
    set $P5037, $P5036
  if3253_end7119:
    unless_null $P5037, vivi_32547121
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5037, $P5038
  vivi_32547121:
    unless $P5037 goto if3252_else7116 
.annotate 'line', 3363
.annotate 'line', 3364
    unless_null _lex_param_1, fallback7126
    nqp_get_sc_object $P5042, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5042
  fallback7126:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5008, fb_tmp_767
    unless $I5008 goto if3256_else7124 
    set $P5043, fb_tmp_767["arglist"]
    set $P5045, $P5043
    goto if3256_end7125
  if3256_else7124:
    null $P5044
    set $P5045, $P5044
  if3256_end7125:
    unless_null $P5045, vivi_32577127
    nqp_get_sc_object $P5046, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5045, $P5046
  vivi_32577127:
    set fb_tmp_766, $P5045
    repr_defined $I5007, fb_tmp_766
    unless $I5007 goto if3255_else7122 
    set $P5047, fb_tmp_766[0]
    set $P5049, $P5047
    goto if3255_end7123
  if3255_else7122:
    null $P5048
    set $P5049, $P5048
  if3255_end7123:
    unless_null $P5049, vivi_32587128
    nqp_get_sc_object $P5050, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5049, $P5050
  vivi_32587128:
    $P5051 = $P5049."ast"()
    $P5052 = $P5051."list"()
    set $P5039, $P5052
    iter $P5041, $P5052
  for_next7132:
    unless $P5041, for_done7134
    shift $P5054, $P5041
  for_redo7133:
    .const 'Sub' $P5053 = 'cuid_514_1382484127.52628' 
    capture_lex $P5053
    $P5039 = $P5053($P5054)
    goto for_next7132
  for_done7134:
    set $P5098, $P5039
    goto if3252_end7117
  if3252_else7116:
    unless_null _lex_param_1, fallback7139
    nqp_get_sc_object $P5055, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5055
  fallback7139:
    set fb_tmp_769, _lex_param_1
    repr_defined $I5009, fb_tmp_769
    unless $I5009 goto if3262_else7137 
    set $P5056, fb_tmp_769["nibbler"]
    set $P5058, $P5056
    goto if3262_end7138
  if3262_else7137:
    null $P5057
    set $P5058, $P5057
  if3262_end7138:
    unless_null $P5058, vivi_32637140
    nqp_get_sc_object $P5059, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5058, $P5059
  vivi_32637140:
    set $P5097, $P5058
    unless $P5058 goto if3261_end7136 
.annotate 'line', 3366
    set $S5003, $P101
    iseq $I5010, $S5003, "after"
    unless $I5010 goto if3264_else7141 
.annotate 'line', 3368
    set fb_tmp_770, $P102
    repr_defined $I5011, fb_tmp_770
    unless $I5011 goto if3265_else7143 
    set $P5060, fb_tmp_770[0]
    set $P5062, $P5060
    goto if3265_end7144
  if3265_else7143:
    null $P5061
    set $P5062, $P5061
  if3265_end7144:
    unless_null $P5062, vivi_32667145
    nqp_get_sc_object $P5063, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5062, $P5063
  vivi_32667145:
    nqp_decontainerize $P5064, _lex_param_0
    nqp_decontainerize $P5065, _lex_param_0
    unless_null _lex_param_1, fallback7150
    nqp_get_sc_object $P5066, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5066
  fallback7150:
    set fb_tmp_772, _lex_param_1
    repr_defined $I5013, fb_tmp_772
    unless $I5013 goto if3268_else7148 
    set $P5067, fb_tmp_772["nibbler"]
    set $P5069, $P5067
    goto if3268_end7149
  if3268_else7148:
    null $P5068
    set $P5069, $P5068
  if3268_end7149:
    unless_null $P5069, vivi_32697151
    nqp_get_sc_object $P5070, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5069, $P5070
  vivi_32697151:
    set fb_tmp_771, $P5069
    repr_defined $I5012, fb_tmp_771
    unless $I5012 goto if3267_else7146 
    set $P5071, fb_tmp_771[0]
    set $P5073, $P5071
    goto if3267_end7147
  if3267_else7146:
    null $P5072
    set $P5073, $P5072
  if3267_end7147:
    unless_null $P5073, vivi_32707152
    nqp_get_sc_object $P5074, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5073, $P5074
  vivi_32707152:
    $P5075 = $P5073."ast"()
    $P5076 = $P5065."flip_ast"($P5075)
    $P5077 = $P5064."qbuildsub"($P5076, 1 :named("anon"), 1 :named("addself"))
    $P5078 = $P5062."push"($P5077)
    set $P5096, $P5078
    goto if3264_end7142
  if3264_else7141:
.annotate 'line', 3369
    set fb_tmp_773, $P102
    repr_defined $I5014, fb_tmp_773
    unless $I5014 goto if3271_else7153 
    set $P5079, fb_tmp_773[0]
    set $P5081, $P5079
    goto if3271_end7154
  if3271_else7153:
    null $P5080
    set $P5081, $P5080
  if3271_end7154:
    unless_null $P5081, vivi_32727155
    nqp_get_sc_object $P5082, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5081, $P5082
  vivi_32727155:
    nqp_decontainerize $P5083, _lex_param_0
    unless_null _lex_param_1, fallback7160
    nqp_get_sc_object $P5084, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5084
  fallback7160:
    set fb_tmp_775, _lex_param_1
    repr_defined $I5016, fb_tmp_775
    unless $I5016 goto if3274_else7158 
    set $P5085, fb_tmp_775["nibbler"]
    set $P5087, $P5085
    goto if3274_end7159
  if3274_else7158:
    null $P5086
    set $P5087, $P5086
  if3274_end7159:
    unless_null $P5087, vivi_32757161
    nqp_get_sc_object $P5088, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5087, $P5088
  vivi_32757161:
    set fb_tmp_774, $P5087
    repr_defined $I5015, fb_tmp_774
    unless $I5015 goto if3273_else7156 
    set $P5089, fb_tmp_774[0]
    set $P5091, $P5089
    goto if3273_end7157
  if3273_else7156:
    null $P5090
    set $P5091, $P5090
  if3273_end7157:
    unless_null $P5091, vivi_32767162
    nqp_get_sc_object $P5092, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5091, $P5092
  vivi_32767162:
    $P5093 = $P5091."ast"()
    $P5094 = $P5083."qbuildsub"($P5093, 1 :named("anon"), 1 :named("addself"))
    $P5095 = $P5081."push"($P5094)
    set $P5096, $P5095
  if3264_end7142:
    set $P5097, $P5096
  if3261_end7136:
    set $P5098, $P5097
  if3252_end7117:
    set $P5099, $P5098
  if3245_end7105:
  if3238_end7092:
.annotate 'line', 3372
    $P5100 = _lex_param_1."!make"($P102)
    .return ($P5100) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_513_1382484127.52628") :anon :lex :outer("cuid_359_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3350
    .lex "$fullrxname", $S101 
    .lex "$loc", $I101 
    .lex "$rxname", $S102 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
    .local pmc pkg_viv_tmp_51 
    set $S101, ""
    set $I101, 0
    set $S102, ""
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback7108
    nqp_get_sc_object $P5003, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_51, $P5002
    set fb_tmp_764, pkg_viv_tmp_51
    repr_defined $I5002, fb_tmp_764
    unless $I5002 goto if3247_else7109 
    set $P5004, fb_tmp_764["%RX"]
    set $P5006, $P5004
    goto if3247_end7110
  if3247_else7109:
    null $P5005
    set $P5006, $P5005
  if3247_end7110:
    unless_null $P5006, vivi_32487111
    new $P5007, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5007
    set $P5006, $P5007
  vivi_32487111:
    unless_null $P5006, vivi_32497112
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_32497112:
    set $P5001, $P5006
  fallback7108:
    set fb_tmp_763, $P5001
    repr_defined $I5001, fb_tmp_763
    unless $I5001 goto if3246_else7106 
    set $P5009, fb_tmp_763["name"]
    set $P5011, $P5009
    goto if3246_end7107
  if3246_else7106:
    null $P5010
    set $P5011, $P5010
  if3246_end7107:
    unless_null $P5011, vivi_32507113
    nqp_get_sc_object $P5012, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5011, $P5012
  vivi_32507113:
    set $S5001, $P5011
    set $S101, $S5001
    index $I5003, $S101, ":sym<", 0
    set $I101, $I5003
    set $N5001, $I101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if3251_end7115 
    index $I5005, $S101, utf8:":sym\x{ab}", 0
    set $I101, $I5005
  if3251_end7115:
    add $I5006, $I101, 5
    length $I5009, $S101
    sub $I5008, $I5009, $I101
    sub $I5007, $I5008, 6
    substr $S5002, $S101, $I5006, $I5007
    set $S102, $S5002
.annotate 'line', 3356
    nqp_get_sc_object $P5013, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    find_lex $P5014, "$/"
.annotate 'line', 3357
    nqp_get_sc_object $P5015, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 34
    find_lex $P5016, "$/"
    $P5017 = $P5015."new"($S102, "literal" :named("rxtype"), $P5016 :named("node"))
    $P5018 = $P5013."new"($P5017, "sym" :named("name"), "subcapture" :named("rxtype"), $P5014 :named("node"))
    store_lex "$qast", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_514_1382484127.52628") :anon :lex :outer("cuid_359_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3364
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_768 
    find_lex $P5001, "$qast"
    set fb_tmp_768, $P5001
    repr_defined $I5001, fb_tmp_768
    unless $I5001 goto if3259_else7129 
    set $P5002, fb_tmp_768[0]
    set $P5004, $P5002
    goto if3259_end7130
  if3259_else7129:
    null $P5003
    set $P5004, $P5003
  if3259_end7130:
    unless_null $P5004, vivi_32607131
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_32607131:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_360_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3375
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_776 
.annotate 'line', 3376
    unless_null _lex_param_1, fallback7165
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_1, $P5001
  fallback7165:
    set fb_tmp_776, _lex_param_1
    repr_defined $I5001, fb_tmp_776
    unless $I5001 goto if3277_else7163 
    set $P5002, fb_tmp_776["quote_EXPR"]
    set $P5004, $P5002
    goto if3277_end7164
  if3277_else7163:
    null $P5003
    set $P5004, $P5003
  if3277_end7164:
    unless_null $P5004, vivi_32787166
    nqp_get_sc_object $P5005, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5004, $P5005
  vivi_32787166:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_361_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3379
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_780 
    .local pmc pkg_viv_tmp_53 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3380
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7167
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5003, $P5004
    set fb_tmp_777, $P5003
    repr_defined $I5001, fb_tmp_777
    unless $I5001 goto if3279_else7168 
    set $P5005, fb_tmp_777["$W"]
    set $P5007, $P5005
    goto if3279_end7169
  if3279_else7168:
    null $P5006
    set $P5007, $P5006
  if3279_end7169:
    unless_null $P5007, vivi_32807170
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_32807170:
    unless_null $P5007, vivi_32817171
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_32817171:
    set $P5002, $P5007
  fallback7167:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback7174
    nqp_get_sc_object $P5013, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_52, $P5012
    set fb_tmp_778, pkg_viv_tmp_52
    repr_defined $I5003, fb_tmp_778
    unless $I5003 goto if3283_else7175 
    set $P5014, fb_tmp_778["%RX"]
    set $P5016, $P5014
    goto if3283_end7176
  if3283_else7175:
    null $P5015
    set $P5016, $P5015
  if3283_end7176:
    unless_null $P5016, vivi_32847177
    new $P5017, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5017
    set $P5016, $P5017
  vivi_32847177:
    unless_null $P5016, vivi_32857178
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_32857178:
    set $P5011, $P5016
  fallback7174:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if3282_end7173 
.annotate 'line', 3381
.annotate 'line', 3382
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback7181
    nqp_get_sc_object $P5021, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_53, $P5020
    set fb_tmp_780, pkg_viv_tmp_53
    repr_defined $I5005, fb_tmp_780
    unless $I5005 goto if3287_else7182 
    set $P5022, fb_tmp_780["%RX"]
    set $P5024, $P5022
    goto if3287_end7183
  if3287_else7182:
    null $P5023
    set $P5024, $P5023
  if3287_end7183:
    unless_null $P5024, vivi_32887184
    new $P5025, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5025
    set $P5024, $P5025
  vivi_32887184:
    unless_null $P5024, vivi_32897185
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_32897185:
    set $P5019, $P5024
  fallback7181:
    set fb_tmp_779, $P5019
    repr_defined $I5004, fb_tmp_779
    unless $I5004 goto if3286_else7179 
    set $P5027, fb_tmp_779["code"]
    set $P5029, $P5027
    goto if3286_end7180
  if3286_else7179:
    null $P5028
    set $P5029, $P5028
  if3286_end7180:
    unless_null $P5029, vivi_32907186
    nqp_get_sc_object $P5030, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5029, $P5030
  vivi_32907186:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if3282_end7173:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_362_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3387
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3388
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_363_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3391
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3392
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_364_1382484127.52628") :anon :lex :outer("cuid_512_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3395
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_515_1382484127.52628' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next7187:
    unless $P5004, for_done7189
    shift $P5006, $P5004
  for_redo7188:
    .const 'Sub' $P5005 = 'cuid_515_1382484127.52628' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next7187
  for_done7189:
.annotate 'line', 3400
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_515_1382484127.52628") :anon :lex :outer("cuid_364_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3397
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3398
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_516_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3405
    .const 'Sub' $P5008 = 'cuid_365_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_366_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_367_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_368_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_369_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_370_1382484127.52628' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_371_1382484127.52628' 
    capture_lex $P5008 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_365_1382484127.52628' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_366_1382484127.52628' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_367_1382484127.52628' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_368_1382484127.52628' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_369_1382484127.52628' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_370_1382484127.52628' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_371_1382484127.52628' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_365_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3408
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$ast", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_781 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    new $P5003, 'ResizablePMCArray'
    set fb_tmp_781, _lex_param_1
    repr_defined $I5001, fb_tmp_781
    unless $I5001 goto if3291_else7190 
    set $P5004, fb_tmp_781[0]
    set $P5006, $P5004
    goto if3291_end7191
  if3291_else7190:
    null $P5005
    set $P5006, $P5005
  if3291_end7191:
    unless_null $P5006, vivi_32927192
    nqp_get_sc_object $P5007, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5006, $P5007
  vivi_32927192:
    push $P5003, $P5006
    repr_bind_attr_obj $P5001, $P5002, "@!block_stack", 0, $P5003
.annotate 'line', 3410
    nqp_decontainerize $P5008, _lex_param_0
    $P5008."visit_children"(_lex_param_1)
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_block" :subid("cuid_366_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3414
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
.annotate 'line', 3415
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    $P5003."push"(_lex_param_1)
.annotate 'line', 3417
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3419
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!block_stack", 0
    $P5007."pop"()
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "find_lex" :subid("cuid_367_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3424
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_517_1382484127.52628' 
    capture_lex $P5009 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    set $I101, 0
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_7193
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!block_stack", 0
    set $N5001, $P5003
    set $I5001, $N5001
    set $I101, $I5001
  while3293_test7195:
    set $N5002, $I101
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5007, $I5002
    set $P5006, $P5007
    unless $I5002 goto while3293_done7199 
  while3293_redo7197:
    .const 'Sub' $P5004 = 'cuid_517_1382484127.52628' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5006, $P5005
    goto while3293_test7195 
  while3293_done7199:
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    goto lexotic_7194
  lexotic_7193:
    .get_results ($P5008)
  lexotic_7194:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_517_1382484127.52628") :anon :lex :outer("cuid_367_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3426
    .lex "%sym", $P101 
    .local pmc fb_tmp_782 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $I5002, "$i"
    sub $I5001, $I5002, 1
    store_lex "$i", $I5001
.annotate 'line', 3428
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    repr_get_attr_obj $P5005, $P5002, $P5004, "@!block_stack", 0
    set fb_tmp_782, $P5005
    repr_defined $I5003, fb_tmp_782
    unless $I5003 goto if3294_else7200 
    find_lex $I5004, "$i"
    set $P5006, fb_tmp_782[$I5004]
    set $P5008, $P5006
    goto if3294_end7201
  if3294_else7200:
    null $P5007
    set $P5008, $P5007
  if3294_end7201:
    unless_null $P5008, vivi_32957202
    nqp_get_sc_object $P5009, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5008, $P5009
  vivi_32957202:
    find_lex $P5010, "$name"
    $P5011 = $P5008."symbol"($P5010)
    set $P101, $P5011
    set $N5001, $P101
    box $P5014, $N5001
    set $P5013, $P5014
    unless $N5001 goto if3296_end7204 
.annotate 'line', 3429
    $P5012 = "RETURN"($P101)
    set $P5013, $P5012
  if3296_end7204:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_368_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "%sym", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_783 
    new $P5001, 'Hash'
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_7205
    .lex "RETURN", $P102
.annotate 'line', 3437
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."find_lex"(_lex_param_1)
    set $P101, $P5003
    get_id $I5003, $P101
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    get_id $I5004, $P5004
    iseq $I5002, $I5003, $I5004
    not $I5001, $I5002
    set $I5006, $I5001
    unless $I5001 goto if3298_end7210 
    exists $I5005, $P101["value"]
    set $I5006, $I5005
  if3298_end7210:
    unless $I5006 goto if3297_else7207 
.annotate 'line', 3438
    set fb_tmp_783, $P101
    repr_defined $I5007, fb_tmp_783
    unless $I5007 goto if3299_else7211 
    set $P5005, fb_tmp_783["value"]
    set $P5007, $P5005
    goto if3299_end7212
  if3299_else7211:
    null $P5006
    set $P5007, $P5006
  if3299_end7212:
    unless_null $P5007, vivi_33007213
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_33007213:
    $P5009 = "RETURN"($P5007)
    set $P5011, $P5009
    goto if3297_end7208
  if3297_else7207:
.annotate 'line', 3441
    set $S5002, _lex_param_1
    concat $S5001, "No compile-time value for ", $S5002
    box $P5010, $S5001
    die $P5010
    set $P5011, $P5010
  if3297_end7208:
    goto lexotic_7206
  lexotic_7205:
    .get_results ($P5011)
  lexotic_7206:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "visit_op" :subid("cuid_369_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3446
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_519_1382484127.52628' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_522_1382484127.52628' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_523_1382484127.52628' 
    capture_lex $P5043 
    .const 'Sub' $P5043 = 'cuid_524_1382484127.52628' 
    capture_lex $P5043 
    .lex "&returns_int", $P101 
    .lex "$typeinfo", $P102 
    .lex "$asm", $P103 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_787 
    .const 'Sub' $P5001 = 'cuid_519_1382484127.52628' 
    capture_lex $P5001
    set $P101, $P5001
    nqp_get_sc_object $P5002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P102, $P5002
    nqp_get_sc_object $P5003, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_7243
    .lex "RETURN", $P104
.annotate 'line', 3470
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."visit_children"(_lex_param_1)
.annotate 'line', 3472
    $P5005 = _lex_param_1."op"()
    set $S5001, $P5005
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3315_else7245 
.annotate 'line', 3473
    $P5006 = _lex_param_1."op"()
    set $S5003, $P5006
    $P5007 = _lex_param_1."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3315_end7246
  if3315_else7245:
    set $S5005, ""
  if3315_end7246:
    box $P5008, $S5005
    set $P102, $P5008
.annotate 'line', 3475
    $P5009 = _lex_param_1."op"()
    set $S5007, $P5009
    substr $S5006, $S5007, 0, 3
    box $P5010, $S5006
    set $P103, $P5010
    new $P5041, 'ExceptionHandler'
    set_label $P5041, catch_handler_33407288
    $P5041.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5041
.annotate 'line', 3477
    new $P5039, 'ExceptionHandler'
    set_label $P5039, catch_handler_33387286
    $P5039.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5039
    set $S5008, $P102
    iseq $I5005, $S5008, "_n"
    set $I5011, $I5005
    unless $I5005 goto if3317_end7250 
    set $S5009, $P103
    iseq $I5006, $S5009, "add"
    set $I5008, $I5006
    if $I5006 goto unless3319_end7254 
    set $S5010, $P103
    iseq $I5007, $S5010, "sub"
    set $I5008, $I5007
  unless3319_end7254:
    set $I5010, $I5008
    if $I5008 goto unless3318_end7252 
    set $S5011, $P103
    iseq $I5009, $S5011, "mul"
    set $I5010, $I5009
  unless3318_end7252:
    set $I5011, $I5010
  if3317_end7250:
    unless $I5011 goto if3316_else7247 
    .const 'Sub' $P5011 = 'cuid_522_1382484127.52628' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if3316_end7248
  if3316_else7247:
    set $S5012, $P102
    iseq $I5012, $S5012, "_i"
    unless $I5012 goto if3326_else7265 
.annotate 'line', 3487
.annotate 'line', 3488
    nqp_decontainerize $P5013, _lex_param_0
    $P5014 = $P5013."find_sym"("num")
    $P5015 = _lex_param_1."returns"($P5014)
    set $P5037, $P5015
    goto if3326_end7266
  if3326_else7265:
    set $S5013, $P102
    iseq $I5013, $S5013, "_s"
    unless $I5013 goto if3327_else7267 
.annotate 'line', 3489
.annotate 'line', 3490
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5016."find_sym"("str")
    $P5018 = _lex_param_1."returns"($P5017)
    set $P5036, $P5018
    goto if3327_end7268
  if3327_else7267:
.annotate 'line', 3491
    $P5019 = _lex_param_1."op"()
    set $S5014, $P5019
    iseq $I5014, $S5014, "handle"
    unless $I5014 goto if3328_else7269 
.annotate 'line', 3492
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."visit_handle"(_lex_param_1)
    $P5022 = "RETURN"($P5021)
    set $P5035, $P5022
    goto if3328_end7270
  if3328_else7269:
.annotate 'line', 3493
    $P5023 = _lex_param_1."op"()
    set $S5015, $P5023
    iseq $I5015, $S5015, "numify"
    box $P5034, $I5015
    set $P5033, $P5034
    unless $I5015 goto if3329_end7272 
    set fb_tmp_787, _lex_param_1
    repr_defined $I5017, fb_tmp_787
    unless $I5017 goto if3331_else7275 
    set $P5024, fb_tmp_787[0]
    set $P5026, $P5024
    goto if3331_end7276
  if3331_else7275:
    null $P5025
    set $P5026, $P5025
  if3331_end7276:
    unless_null $P5026, vivi_33327277
    nqp_get_sc_object $P5027, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5026, $P5027
  vivi_33327277:
    nqp_get_sc_object $P5028, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5016, $P5026, $P5028
    box $P5032, $I5016
    set $P5031, $P5032
    unless $I5016 goto if3330_end7274 
    .const 'Sub' $P5029 = 'cuid_523_1382484127.52628' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5031, $P5030
  if3330_end7274:
    set $P5033, $P5031
  if3329_end7272:
    set $P5035, $P5033
  if3328_end7270:
    set $P5036, $P5035
  if3327_end7268:
    set $P5037, $P5036
  if3326_end7266:
  if3316_end7248:
    nqp_get_sc_object $P5038, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5040, $P5038
    pop_eh 
    goto skip_handler_33377285
  catch_handler_33387286:
    .get_results ($P5039) 
    .const 'Sub' $P10001 = 'cuid_524_1382484127.52628' 
    capture_lex $P10001
    $P10001($P5039)
    set $I10001, 1
    set $P5039["handled"], $I10001
    nqp_get_sc_object $P10002, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5039
    pop_upto_eh $P5039
    pop_eh 
    set $P5040, $P10002
    goto skip_handler_33377285
  skip_handler_33377285:
    set $P5042, $P5040
    pop_eh 
    goto skip_handler_33397287
  catch_handler_33407288:
    .get_results ($P5041) 
    set $I10001, 1
    set $P5041["handled"], $I10001
    nqp_get_sc_object $P10001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    finalize $P5041
    pop_upto_eh $P5041
    pop_eh 
    set $P5042, $P10001
    goto skip_handler_33397287
  skip_handler_33397287:
    goto lexotic_7244
  lexotic_7243:
    .get_results (_lex_param_1)
  lexotic_7244:
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "returns_int" :subid("cuid_519_1382484127.52628") :anon :lex :outer("cuid_369_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3447
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_518_1382484127.52628' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_520_1382484127.52628' 
    capture_lex $P5016 
    .lex "$node", _lex_param_0 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_7214
    .lex "RETURN", $P101
.annotate 'line', 3448
    $P5001 = _lex_param_0."returns"()
    repr_get_primitive_type_spec $I5002, $P5001
    set $N5001, $I5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if3301_end7217 
    $P5002 = "RETURN"(1)
  if3301_end7217:
    nqp_get_sc_object $P5003, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5003, _lex_param_0, $P5003
    unless $I5003 goto if3302_else7218 
    .const 'Sub' $P5004 = 'cuid_518_1382484127.52628' 
    capture_lex $P5004
    $P5005 = $P5004()
    goto if3302_end7219
  if3302_else7218:
    nqp_get_sc_object $P5006, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 43
    type_check $I5004, _lex_param_0, $P5006
    unless $I5004 goto if3308_else7230 
.annotate 'line', 3460
    $P5007 = "RETURN"(1)
    set $P5014, $P5007
    goto if3308_end7231
  if3308_else7230:
    nqp_get_sc_object $P5008, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 74
    type_check $I5005, _lex_param_0, $P5008
    set $I5007, $I5005
    unless $I5005 goto if3310_end7235 
.annotate 'line', 3462
    $P5009 = _lex_param_0."scope"()
    set $S5001, $P5009
    iseq $I5006, $S5001, "lexical"
    set $I5007, $I5006
  if3310_end7235:
    box $P5013, $I5007
    set $P5012, $P5013
    unless $I5007 goto if3309_end7233 
    .const 'Sub' $P5010 = 'cuid_520_1382484127.52628' 
    capture_lex $P5010
    $P5011 = $P5010()
    set $P5012, $P5011
  if3309_end7233:
    set $P5014, $P5012
  if3308_end7231:
  if3302_end7219:
    $P5015 = "RETURN"(0)
    goto lexotic_7215
  lexotic_7214:
    .get_results ($P5015)
  lexotic_7215:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_518_1382484127.52628") :anon :lex :outer("cuid_519_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3451
    .lex "$typeinfo", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3452
    find_lex $P5002, "$node"
    $P5003 = $P5002."op"()
    set $S5001, $P5003
    length $I5002, $S5001
    set $N5001, $I5002
    set $N5002, 2
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if3303_else7220 
.annotate 'line', 3453
    find_lex $P5004, "$node"
    $P5005 = $P5004."op"()
    set $S5003, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5006."op"()
    set $S5004, $P5007
    length $I5004, $S5004
    sub $I5003, $I5004, 2
    substr $S5002, $S5003, $I5003, 2
    set $S5005, $S5002
    goto if3303_end7221
  if3303_else7220:
    set $S5005, ""
  if3303_end7221:
    box $P5008, $S5005
    set $P101, $P5008
    set $S5006, $P101
    iseq $I5005, $S5006, "_i"
    unless $I5005 goto if3304_else7222 
.annotate 'line', 3455
    $P5009 = "RETURN"(1)
    set $P5019, $P5009
    goto if3304_end7223
  if3304_else7222:
.annotate 'line', 3457
    find_lex $P5010, "$node"
    $P5011 = $P5010."op"()
    set $S5007, $P5011
    iseq $I5006, $S5007, "chars"
    set $I5008, $I5006
    if $I5006 goto unless3307_end7229 
    find_lex $P5012, "$node"
    $P5013 = $P5012."op"()
    set $S5008, $P5013
    iseq $I5007, $S5008, "ord"
    set $I5008, $I5007
  unless3307_end7229:
    set $I5010, $I5008
    if $I5008 goto unless3306_end7227 
    find_lex $P5014, "$node"
    $P5015 = $P5014."op"()
    set $S5009, $P5015
    iseq $I5009, $S5009, "elems"
    set $I5010, $I5009
  unless3306_end7227:
    box $P5018, $I5010
    set $P5017, $P5018
    unless $I5010 goto if3305_end7225 
    $P5016 = "RETURN"(1)
    set $P5017, $P5016
  if3305_end7225:
    set $P5019, $P5017
  if3304_end7223:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_520_1382484127.52628") :anon :lex :outer("cuid_519_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3462
    .lex "%sym", $P101 
    .local pmc fb_tmp_784 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3463
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."find_lex"($P5005)
    set $P101, $P5006
    exists $I5001, $P101["type"]
    set $I5005, $I5001
    unless $I5001 goto if3312_end7239 
    set fb_tmp_784, $P101
    repr_defined $I5004, fb_tmp_784
    unless $I5004 goto if3313_else7240 
    set $P5007, fb_tmp_784["type"]
    set $P5009, $P5007
    goto if3313_end7241
  if3313_else7240:
    null $P5008
    set $P5009, $P5008
  if3313_end7241:
    unless_null $P5009, vivi_33147242
    nqp_get_sc_object $P5010, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5009, $P5010
  vivi_33147242:
    repr_get_primitive_type_spec $I5003, $P5009
    set $N5001, $I5003
    set $N5002, 1
    iseq $I5002, $N5001, $N5002
    set $I5005, $I5002
  if3312_end7239:
    box $P5013, $I5005
    set $P5012, $P5013
    unless $I5005 goto if3311_end7237 
.annotate 'line', 3464
    $P5011 = "RETURN"(1)
    set $P5012, $P5011
  if3311_end7237:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_522_1382484127.52628") :anon :lex :outer("cuid_369_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3478
    .const 'Sub' $P5025 = 'cuid_521_1382484127.52628' 
    capture_lex $P5025 
    .lex "$newopn", $P101 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3480
    find_lex $P5004, "$op"
    set fb_tmp_785, $P5004
    repr_defined $I5001, fb_tmp_785
    unless $I5001 goto if3322_else7259 
    set $P5005, fb_tmp_785[0]
    set $P5007, $P5005
    goto if3322_end7260
  if3322_else7259:
    null $P5006
    set $P5007, $P5006
  if3322_end7260:
    unless_null $P5007, vivi_33237261
    nqp_get_sc_object $P5008, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5007, $P5008
  vivi_33237261:
    $P5009 = "&returns_int"($P5007)
    set $P5016, $P5009
    unless $P5009 goto if3321_end7258 
    find_lex $P5010, "$op"
    set fb_tmp_786, $P5010
    repr_defined $I5002, fb_tmp_786
    unless $I5002 goto if3324_else7262 
    set $P5011, fb_tmp_786[1]
    set $P5013, $P5011
    goto if3324_end7263
  if3324_else7262:
    null $P5012
    set $P5013, $P5012
  if3324_end7263:
    unless_null $P5013, vivi_33257264
    nqp_get_sc_object $P5014, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5013, $P5014
  vivi_33257264:
    $P5015 = "&returns_int"($P5013)
    set $P5016, $P5015
  if3321_end7258:
    unless $P5016 goto if3320_else7255 
    .const 'Sub' $P5017 = 'cuid_521_1382484127.52628' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5024, $P5018
    goto if3320_end7256
  if3320_else7255:
.annotate 'line', 3484
.annotate 'line', 3485
    find_lex $P5019, "$op"
    find_lex $P5021, "self"
    nqp_decontainerize $P5020, $P5021
    $P5022 = $P5020."find_sym"("num")
    $P5023 = $P5019."returns"($P5022)
    set $P5024, $P5023
  if3320_end7256:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_521_1382484127.52628") :anon :lex :outer("cuid_522_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3480
    .lex "$newopn", $P101 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$asm"
    set $S5002, $P5002
    concat $S5001, $S5002, "_i"
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 3482
    find_lex $P5004, "$op"
    $P5004."op"($P101)
.annotate 'line', 3483
    find_lex $P5005, "$op"
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    $P5008 = $P5006."find_sym"("int")
    $P5009 = $P5005."returns"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_523_1382484127.52628") :anon :lex :outer("cuid_369_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3496
    .lex "$sigil", $P101 
    .local pmc fb_tmp_788 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
.annotate 'line', 3497
    find_lex $P5002, "$op"
    set fb_tmp_788, $P5002
    repr_defined $I5001, fb_tmp_788
    unless $I5001 goto if3333_else7278 
    set $P5003, fb_tmp_788[0]
    set $P5005, $P5003
    goto if3333_end7279
  if3333_else7278:
    null $P5004
    set $P5005, $P5004
  if3333_end7279:
    unless_null $P5005, vivi_33347280
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_33347280:
    $P5007 = $P5005."name"()
    set $S5002, $P5007
    substr $S5001, $S5002, 0, 1
    box $P5008, $S5001
    set $P101, $P5008
    set $S5003, $P101
    iseq $I5002, $S5003, "@"
    set $I5004, $I5002
    if $I5002 goto unless3336_end7284 
    set $S5004, $P101
    iseq $I5003, $S5004, "%"
    set $I5004, $I5003
  unless3336_end7284:
    box $P5015, $I5004
    set $P5014, $P5015
    unless $I5004 goto if3335_end7282 
.annotate 'line', 3498
.annotate 'line', 3499
    find_lex $P5009, "$op"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."find_sym"("int")
    $P5013 = $P5009."returns"($P5012)
    set $P5014, $P5013
  if3335_end7282:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_524_1382484127.52628") :anon :lex :outer("cuid_369_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3503
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "visit_handle" :subid("cuid_370_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3510
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$handle", _lex_param_1 
.annotate 'line', 3511
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."visit_children"(_lex_param_1, 1 :named("skip_selectors"))
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_371_1382484127.52628") :anon :lex :outer("cuid_516_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3515
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("skip_selectors") :optional 
    .param int haz_param_7 :opt_flag 
    .const 'Sub' $P5007 = 'cuid_525_1382484127.52628' 
    capture_lex $P5007 
    .lex "$i", $I101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$skip_selectors", _lex_param_2 
    if haz_param_7, default7309
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set _lex_param_2, $P5006
  default7309:
    set $I101, 0
    set $I101, 0
    nqp_isstr $I5001, _lex_param_1
    set $I5005, $I5001
    if $I5001 goto unless3341_end7290 
.annotate 'line', 3517
  while3342_test7291:
    set $N5001, $I101
    $P5001 = _lex_param_1."list"()
    set $N5002, $P5001
    islt $I5002, $N5001, $N5002
    set $I5004, $I5002
    unless $I5002 goto while3342_done7295 
  while3342_redo7293:
.annotate 'line', 3518
    set $P5002, _lex_param_2
    unless _lex_param_2 goto if3344_end7299 
    set $N5004, $I101
    set $N5005, 2
    mod $N5003, $N5004, $N5005
    box $P5003, $N5003
    set $P5002, $P5003
  if3344_end7299:
    if $P5002 goto unless3343_end7297 
    .const 'Sub' $P5004 = 'cuid_525_1382484127.52628' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless3343_end7297:
    add $I5003, $I101, 1
    set $I101, $I5003
    set $I5004, $I101
    goto while3342_test7291 
  while3342_done7295:
    set $I5005, $I5004
  unless3341_end7290:
    .return ($I5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_525_1382484127.52628") :anon :lex :outer("cuid_371_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3519
    .lex "$visit", $P101 
    .local pmc fb_tmp_789 
    nqp_get_sc_object $P5001, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P101, $P5001
    find_lex $P5002, "$node"
    set fb_tmp_789, $P5002
    repr_defined $I5001, fb_tmp_789
    unless $I5001 goto if3345_else7300 
    find_lex $I5002, "$i"
    set $P5003, fb_tmp_789[$I5002]
    set $P5005, $P5003
    goto if3345_end7301
  if3345_else7300:
    null $P5004
    set $P5005, $P5004
  if3345_end7301:
    unless_null $P5005, vivi_33467302
    nqp_get_sc_object $P5006, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5005, $P5006
  vivi_33467302:
    set $P101, $P5005
    nqp_get_sc_object $P5007, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 86
    type_check $I5003, $P101, $P5007
    unless $I5003 goto if3347_else7303 
.annotate 'line', 3521
    find_lex $P5008, "$node"
    find_lex $I5004, "$i"
.annotate 'line', 3522
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    $P5011 = $P5009."visit_op"($P101)
    set $P5008[$I5004], $P5011
    set $P5026, $P5011
    goto if3347_end7304
  if3347_else7303:
    nqp_get_sc_object $P5012, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 108
    type_check $I5005, $P101, $P5012
    unless $I5005 goto if3348_else7305 
.annotate 'line', 3523
    find_lex $P5013, "$node"
    find_lex $I5006, "$i"
.annotate 'line', 3524
    find_lex $P5015, "self"
    nqp_decontainerize $P5014, $P5015
    $P5016 = $P5014."visit_block"($P101)
    set $P5013[$I5006], $P5016
    set $P5025, $P5016
    goto if3348_end7306
  if3348_else7305:
    nqp_get_sc_object $P5017, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148", 69
    type_check $I5007, $P101, $P5017
    unless $I5007 goto if3349_else7307 
.annotate 'line', 3525
.annotate 'line', 3526
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    $P5020 = $P5018."visit_children"($P101, 1 :named("skip_selectors"))
    set $P5024, $P5020
    goto if3349_end7308
  if3349_else7307:
.annotate 'line', 3527
.annotate 'line', 3528
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = $P5021."visit_children"($P101)
    set $P5024, $P5023
  if3349_end7308:
    set $P5025, $P5024
  if3348_end7306:
    set $P5026, $P5025
  if3347_end7304:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_526_1382484127.52628") :anon :lex :outer("cuid_373_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3540
    .const 'Sub' $P5002 = 'cuid_372_1382484127.52628' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_372_1382484127.52628' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_372_1382484127.52628") :anon :lex :outer("cuid_526_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
.annotate 'line', 3541
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    .local pmc fb_tmp_790 
    set fb_tmp_790, _lex_param_2
    repr_defined $I5002, fb_tmp_790
    unless $I5002 goto if3351_else7312 
    set $P5001, fb_tmp_790["optimize"]
    set $P5003, $P5001
    goto if3351_end7313
  if3351_else7312:
    null $P5002
    set $P5003, $P5002
  if3351_end7313:
    unless_null $P5003, vivi_33527314
    nqp_get_sc_object $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307", 26
    set $P5003, $P5004
  vivi_33527314:
    set $S5001, $P5003
    iseq $I5001, $S5001, "off"
    unless $I5001 goto if3350_else7310 
    set $P5008, _lex_param_1
    goto if3350_end7311
  if3350_else7310:
.annotate 'line', 3544
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    $P5006 = $P5005."new"()
    $P5007 = $P5006."optimize"(_lex_param_1, _lex_param_2 :flat :named)
    set $P5008, $P5007
  if3350_end7311:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_528_1382484127.52628") :load :init
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = 'cuid_527_1382484127.52628' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_373_1382484127.52628" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    nqp_create_sc $P5001, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/gen/NQP.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1382484078.58099"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "7A67D46DDEA3C60BB73DFB1CA4F76715F3D1212C-1382484072.59307"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "20A8B78604B6E989C5DC1D669DAFFA35168CF57C-1382484085.68816"
    push $P5004, "src/stage2/gen/NQPHLL.nqp"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "term:sym<name>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "A4A797B3CA569F3A823F8B8F3A66D17B6C35200A-1382484119.9605"
    push $P5004, "src/stage2/gen/NQPP6QRegex.nqp"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termseq"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "SIGOK"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "sigmaybe"
    push $P5004, "sigmaybe:sym<normspace>"
    push $P5004, "sigmaybe:sym<sigwhite>"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "optimize"
    push $P5004, "visit_block"
    push $P5004, "find_lex"
    push $P5004, "visit_op"
    push $P5004, "visit_handle"
    push $P5004, "visit_children"
    push $P5004, "@!block_stack"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, ""
    push $P5004, "-'"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1382484129.38012"
    push $P5004, "alt_nfa__2_1382484129.49259"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1382484129.51838"
    push $P5004, "alt_nfa__3_1382484129.50595"
    push $P5004, "alt_nfa__6_1382484129.62275"
    push $P5004, "alt_nfa__5_1382484129.60728"
    push $P5004, ")]}"
    push $P5004, "alt_nfa__7_1382484129.77433"
    push $P5004, "alt_nfa__9_1382484129.79894"
    push $P5004, "])}"
    push $P5004, "alt_nfa__8_1382484129.7819"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1382484129.85794"
    push $P5004, "alt_nfa__11_1382484129.865"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1382484130.01494"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1382484130.0484"
    push $P5004, "alt_nfa__14_1382484130.04922"
    push $P5004, "alt_nfa__15_1382484130.04991"
    push $P5004, "alt_nfa__16_1382484130.11889"
    push $P5004, "alt_nfa__17_1382484130.11919"
    push $P5004, "cond"
    push $P5004, "alt_nfa__18_1382484130.23742"
    push $P5004, "alt_nfa__19_1382484130.25001"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__20_1382484130.3535"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__21_1382484130.38055"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__22_1382484130.8118"
    push $P5004, "alt_nfa__23_1382484130.83018"
    push $P5004, "alt_nfa__24_1382484130.92416"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__25_1382484130.97349"
    push $P5004, "invocant"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__26_1382484131.11792"
    push $P5004, "alt_nfa__27_1382484131.11825"
    push $P5004, "alt_nfa__28_1382484131.11864"
    push $P5004, "/!"
    push $P5004, "alt_nfa__29_1382484131.13284"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__30_1382484131.35743"
    push $P5004, "alt_nfa__31_1382484131.3587"
    push $P5004, "alt_nfa__32_1382484131.35951"
    push $P5004, "'\""
    push $P5004, "alt_nfa__33_1382484131.38603"
    push $P5004, "alt_nfa__34_1382484131.38636"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__35_1382484131.51032"
    push $P5004, "alt_nfa__36_1382484131.52234"
    push $P5004, "sign"
    push $P5004, "+-"
    push $P5004, "alt_nfa__37_1382484131.53648"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "("
    push $P5004, "$"
    push $P5004, "\\"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__38_1382484132.8458"
    push $P5004, "alt_nfa__39_1382484132.87402"
    push $P5004, "alt_nfa__40_1382484132.88646"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__41_1382484132.92343"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "82C8134F4F1F98F3955D960634CCE916B8CF0355-1382484066.7641"
    push $P5004, "src/stage2/gen/nqp-mo.nqp"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1382484086.01886"
    push $P5004, "alt_nfa__2_1382484086.05591"
    push $P5004, "alt_nfa__3_1382484086.1482"
    push $P5004, "alt_nfa__4_1382484086.14886"
    push $P5004, "alt_nfa__5_1382484086.19524"
    push $P5004, "alt_nfa__6_1382484086.28372"
    push $P5004, "alt_nfa__7_1382484086.29849"
    push $P5004, "alt_nfa__8_1382484086.36263"
    push $P5004, "alt_nfa__9_1382484086.41025"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1382484120.1679"
    push $P5004, "alt_nfa__2_1382484120.20199"
    push $P5004, "alt_nfa__3_1382484120.32858"
    push $P5004, "alt_nfa__4_1382484120.3484"
    push $P5004, "alt_nfa__5_1382484120.36235"
    push $P5004, "alt_nfa__6_1382484120.54811"
    push $P5004, "alt_nfa__7_1382484120.58204"
    push $P5004, "alt_nfa__8_1382484120.72998"
    push $P5004, "alt_nfa__9_1382484120.7305"
    push $P5004, "alt_nfa__10_1382484120.74412"
    push $P5004, "alt_nfa__11_1382484120.8633"
    push $P5004, "alt_nfa__12_1382484120.87476"
    push $P5004, "alt_nfa__13_1382484121.00884"
    push $P5004, "alt_nfa__14_1382484121.09159"
    push $P5004, "alt_nfa__15_1382484121.10623"
    push $P5004, "alt_nfa__16_1382484121.20048"
    push $P5004, "alt_nfa__17_1382484121.28619"
    push $P5004, "alt_nfa__18_1382484121.30221"
    push $P5004, "alt_nfa__19_1382484121.35973"
    push $P5004, "alt_nfa__20_1382484121.37272"
    push $P5004, "alt_nfa__21_1382484121.41187"
    push $P5004, "alt_nfa__22_1382484121.42326"
    push $P5004, "alt_nfa__23_1382484121.52907"
    push $P5004, "alt_nfa__24_1382484121.52983"
    push $P5004, "alt_nfa__25_1382484121.53019"
    push $P5004, "alt_nfa__27_1382484121.60108"
    push $P5004, "alt_nfa__28_1382484121.60165"
    push $P5004, "alt_nfa__26_1382484121.53967"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Optimizer"
    push $P5004, "block_stack"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "2D75A9E3BEA240A82E5B17B1BB1078D757A67840-1382484075.48148"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "0B0C72E2184996CA924631B8722E3D0303B59EA5-1382484096.05537"
    push $P5004, "src/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Optimizer"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, ")}]"
    push $P5004, "&|~"
    push $P5004, ":"
    .const 'Sub' $P5005 = 'cuid_527_1382484127.52628' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if3354_end7318 
    die "Repossession conflicts occurred during deserialization"
  if3354_end7318:
    .const 'Sub' $P5001 = "cuid_1_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 37
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 231
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 232
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_228_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 252
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 253
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_248_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 365
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 366
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_360_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 379
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1382484127.52628" 
    nqp_get_sc_object $P5002, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 381
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_373_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "GLOBALish"
    push $P5002, "$?PACKAGE"
    push $P5002, "EXPORT"
    push $P5002, "ParseShared"
    push $P5002, "NQPCursorRole"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 0
    push $P5003, $P5005
    nqp_get_sc_object $P5006, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 1
    push $P5003, $P5006
    nqp_get_sc_object $P5007, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1382484078.58099", 32
    push $P5003, $P5007
    nqp_get_sc_object $P5008, "E7AD4B42F22CE3E5A839229F2FDCC4FBE891C4E3-1382484078.58099", 35
    push $P5003, $P5008
    new $P5009, 'ResizableIntegerArray'
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    push $P5009, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5009)
    .const "LexInfo" $P5001 = "cuid_376_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 3
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_400_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 38
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_425_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 230
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 230
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_433_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 245
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 245
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_512_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 358
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 358
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_516_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 372
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .const "LexInfo" $P5001 = "cuid_526_1382484127.52628"
    new $P5002, 'ResizableStringArray'
    push $P5002, "$?PACKAGE"
    push $P5002, "$?CLASS"
    new $P5003, 'ResizablePMCArray'
    nqp_get_sc_object $P5004, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 380
    push $P5003, $P5004
    nqp_get_sc_object $P5005, "B71357F15F671E789B9EBE1897D73E2D0D657A4B-1382484127.59226", 380
    push $P5003, $P5005
    new $P5006, 'ResizableIntegerArray'
    push $P5006, 0
    push $P5006, 0
    $P5007 = $P5001."setup_static_lexpad"($P5002, $P5003, $P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_527_1382484127.52628") :anon :lex :outer("cuid_528_1382484127.52628")
.annotate 'file', "src/stage2/gen/NQP.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1382484127.52628" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1382484127.52628" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_529_1382484127.52628") :load
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .const 'Sub' $P5001 = "cuid_373_1382484127.52628" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_530_1382484127.52628") :main
.annotate 'file', "src/stage2/gen/NQP.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_373_1382484127.52628" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end