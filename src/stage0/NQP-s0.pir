.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_374_1361537952.49511") :anon :lex
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5088 = 'cuid_373_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_375_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_377_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_398_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_417_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_418_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_419_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_420_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_421_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_422_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_423_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_424_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_425_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_427_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_504_1361537952.49511' 
    capture_lex $P5088 
    .const 'Sub' $P5088 = 'cuid_508_1361537952.49511' 
    capture_lex $P5088 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "$ops", $P104 
    .lex "$nqpcomp", $P105 
    .lex "@clo", $P106 
    .lex "&MAIN", $P107 
    .lex "&hll-config", $P108 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .local pmc fb_tmp_276 
    .local pmc pkg_lookup_tmp_104 
    .local pmc fb_tmp_1176 
    .local pmc pkg_lookup_tmp_383 
    .local pmc fb_tmp_1177 
    .local pmc pkg_lookup_tmp_384 
    .local pmc fb_tmp_1178 
    .local pmc pkg_lookup_tmp_385 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P106, $P5003
    .const 'Sub' $P5004 = 'cuid_373_1361537952.49511' 
    capture_lex $P5004
    set $P107, $P5004
    .const 'Sub' $P5005 = 'cuid_375_1361537952.49511' 
    capture_lex $P5005
    set $P108, $P5005
    find_dynamic_lex $P5006, "$*CTXSAVE"
    set ctxsave, $P5006
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5009, $I5002
    set $P5008, $P5009
    unless $I5002 goto if11_end13 
    $P5007 = ctxsave."ctxsave"()
    set $P5008, $P5007
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5010 = 'cuid_377_1361537952.49511' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_398_1361537952.49511' 
    capture_lex $P5012
    $P5013 = $P5012()
    .const 'Sub' $P5014 = 'cuid_417_1361537952.49511' 
    capture_lex $P5014
    $P5015 = $P5014()
.annotate 'line', 1486
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_104, $P5017
    get_who $P5018, pkg_lookup_tmp_104
    exists $I5004, $P5018["QAST"]
    unless $I5004 goto if2012_else4576 
    get_who $P5020, pkg_lookup_tmp_104
    set $P5019, $P5020["QAST"]
    set $P5022, $P5019
    goto if2012_end4577
  if2012_else4576:
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5021
  if2012_end4577:
    get_who $P5016, $P5022
    set fb_tmp_276, $P5016
    repr_defined $I5003, fb_tmp_276
    unless $I5003 goto if2011_else4574 
    set $P5023, fb_tmp_276["Compiler"]
    set $P5025, $P5023
    goto if2011_end4575
  if2011_else4574:
    null $P5024
    set $P5025, $P5024
  if2011_end4575:
    unless_null $P5025, vivi_20134578
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_20134578:
    $P5027 = $P5025."operations"()
    set $P104, $P5027
.annotate 'line', 1488
    .const 'Sub' $P5029 = 'cuid_418_1361537952.49511' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P104."add_hll_op"("nqp", "preinc", $P5028)
.annotate 'line', 1503
    .const 'Sub' $P5031 = 'cuid_419_1361537952.49511' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P104."add_hll_op"("nqp", "predec", $P5030)
.annotate 'line', 1518
    .const 'Sub' $P5033 = 'cuid_420_1361537952.49511' 
    capture_lex $P5033
    newclosure $P5032, $P5033
    $P104."add_hll_op"("nqp", "postinc", $P5032)
.annotate 'line', 1542
    .const 'Sub' $P5035 = 'cuid_421_1361537952.49511' 
    capture_lex $P5035
    newclosure $P5034, $P5035
    $P104."add_hll_op"("nqp", "postdec", $P5034)
.annotate 'line', 1566
    .const 'Sub' $P5037 = 'cuid_422_1361537952.49511' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P104."add_hll_op"("nqp", "numify", $P5036)
.annotate 'line', 1570
    .const 'Sub' $P5039 = 'cuid_423_1361537952.49511' 
    capture_lex $P5039
    newclosure $P5038, $P5039
    $P104."add_hll_op"("nqp", "stringify", $P5038)
.annotate 'line', 1574
    .const 'Sub' $P5041 = 'cuid_424_1361537952.49511' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P104."add_hll_op"("nqp", "eqaddr", $P5040)
.annotate 'line', 1582
    .const 'Sub' $P5043 = 'cuid_425_1361537952.49511' 
    capture_lex $P5043
    newclosure $P5042, $P5043
    $P104."add_hll_op"("nqp", "falsey", $P5042)
    .const 'Sub' $P5044 = 'cuid_427_1361537952.49511' 
    capture_lex $P5044
    $P5045 = $P5044()
    .const 'Sub' $P5046 = 'cuid_504_1361537952.49511' 
    capture_lex $P5046
    $P5047 = $P5046()
    .const 'Sub' $P5048 = 'cuid_508_1361537952.49511' 
    capture_lex $P5048
    $P5049 = $P5048()
.annotate 'line', 3374
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_383, $P5051
    get_who $P5052, pkg_lookup_tmp_383
    exists $I5006, $P5052["NQP"]
    unless $I5006 goto if4514_else9003 
    get_who $P5054, pkg_lookup_tmp_383
    set $P5053, $P5054["NQP"]
    set $P5056, $P5053
    goto if4514_end9004
  if4514_else9003:
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5055
  if4514_end9004:
    get_who $P5050, $P5056
    set fb_tmp_1176, $P5050
    repr_defined $I5005, fb_tmp_1176
    unless $I5005 goto if4513_else9001 
    set $P5057, fb_tmp_1176["Compiler"]
    set $P5059, $P5057
    goto if4513_end9002
  if4513_else9001:
    null $P5058
    set $P5059, $P5058
  if4513_end9002:
    unless_null $P5059, vivi_45159005
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_45159005:
    $P5061 = $P5059."new"()
    set $P105, $P5061
.annotate 'line', 3375
    $P105."language"("nqp")
.annotate 'line', 3376
    nqp_get_sc_object $P5063, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_384, $P5063
    get_who $P5064, pkg_lookup_tmp_384
    exists $I5008, $P5064["NQP"]
    unless $I5008 goto if4517_else9008 
    get_who $P5066, pkg_lookup_tmp_384
    set $P5065, $P5066["NQP"]
    set $P5068, $P5065
    goto if4517_end9009
  if4517_else9008:
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5067
  if4517_end9009:
    get_who $P5062, $P5068
    set fb_tmp_1177, $P5062
    repr_defined $I5007, fb_tmp_1177
    unless $I5007 goto if4516_else9006 
    set $P5069, fb_tmp_1177["Grammar"]
    set $P5071, $P5069
    goto if4516_end9007
  if4516_else9006:
    null $P5070
    set $P5071, $P5070
  if4516_end9007:
    unless_null $P5071, vivi_45189010
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_45189010:
    $P105."parsegrammar"($P5071)
.annotate 'line', 3377
    nqp_get_sc_object $P5074, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_385, $P5074
    get_who $P5075, pkg_lookup_tmp_385
    exists $I5010, $P5075["NQP"]
    unless $I5010 goto if4520_else9013 
    get_who $P5077, pkg_lookup_tmp_385
    set $P5076, $P5077["NQP"]
    set $P5079, $P5076
    goto if4520_end9014
  if4520_else9013:
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5078
  if4520_end9014:
    get_who $P5073, $P5079
    set fb_tmp_1178, $P5073
    repr_defined $I5009, fb_tmp_1178
    unless $I5009 goto if4519_else9011 
    set $P5080, fb_tmp_1178["Actions"]
    set $P5082, $P5080
    goto if4519_end9012
  if4519_else9011:
    null $P5081
    set $P5082, $P5081
  if4519_end9012:
    unless_null $P5082, vivi_45219015
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_45219015:
    $P105."parseactions"($P5082)
.annotate 'line', 3378
    $P5084 = $P105."config"()
    "&hll-config"($P5084)
.annotate 'line', 3381
    $P5085 = $P105."commandline_options"()
    set $P106, $P5085
.annotate 'line', 3382
    $P106."push"("parsetrace")
.annotate 'line', 3383
    $P106."push"("setting=s")
.annotate 'line', 3384
    $P106."push"("setting-path=s")
.annotate 'line', 3385
    $P106."push"("module-path=s")
.annotate 'line', 3386
    $P106."push"("vmlibs=s")
.annotate 'line', 3387
    $P106."push"("no-regex-lib")
.annotate 'line', 3388
    $P106."push"("dynext=s")
.annotate 'line', 3389
    $P106."push"("stable-sc")
    unless _lex_param_0 goto if4522_end9017 
    .const 'Sub' $P5086 = "cuid_373_1361537952.49511" 
    $P5087 = $P5086(_lex_param_0 :flat)
  if4522_end9017:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_373_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3391
    .param pmc _lex_param_0 
    .lex "@ARGS", _lex_param_0 
.annotate 'line', 3393
    find_lex $P5001, "$nqpcomp"
    $P5001."command_line"(_lex_param_0, "utf8" :named("encoding"), "ascii iso-8859-1" :named("transcode"))
.annotate 'line', 3396
    find_lex $P5002, "$nqpcomp"
    $P5003 = $P5002."nqpevent"()
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "hll-config" :subid("cuid_375_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3400
    .param pmc _lex_param_0 
    .lex "$config", _lex_param_0 
    box $P5001, "2013.01-201-g688763c"
    set _lex_param_0["version"], $P5001
    box $P5002, "2013-02-22T12:59:12Z"
    set _lex_param_0["build-date"], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_377_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 8
    .const 'Sub' $P5032 = 'cuid_1_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_2_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_3_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_4_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_5_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_6_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_7_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_8_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_9_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_10_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_11_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_17_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_18_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_19_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_20_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_21_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_22_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_23_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_24_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_25_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_26_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_27_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_28_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_29_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_30_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_31_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_32_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_33_1361537952.49511' 
    capture_lex $P5032 
    .const 'Sub' $P5032 = 'cuid_34_1361537952.49511' 
    capture_lex $P5032 
    .lex "$loader", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_1_1361537952.49511' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_2_1361537952.49511' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_3_1361537952.49511' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_4_1361537952.49511' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_5_1361537952.49511' 
    capture_lex $P5006
    get_hll_global $P5007, "ModuleLoader"
    set $P101, $P5007
    .const 'Sub' $P5008 = 'cuid_6_1361537952.49511' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_7_1361537952.49511' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_8_1361537952.49511' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_9_1361537952.49511' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_10_1361537952.49511' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_11_1361537952.49511' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_17_1361537952.49511' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_18_1361537952.49511' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_19_1361537952.49511' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_20_1361537952.49511' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_21_1361537952.49511' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_22_1361537952.49511' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_23_1361537952.49511' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_24_1361537952.49511' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_25_1361537952.49511' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_26_1361537952.49511' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_27_1361537952.49511' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_28_1361537952.49511' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_29_1361537952.49511' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_30_1361537952.49511' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_31_1361537952.49511' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_32_1361537952.49511' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_33_1361537952.49511' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_34_1361537952.49511' 
    capture_lex $P5031
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_1_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 33
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_376_1361537952.49511' 
    capture_lex $P5039 
    .lex "self", _lex_param_0 
    .lex "%opts", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc fb_tmp_2 
    .local pmc fb_tmp_3 
    .local pmc pkg_viv_tmp_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5003, 'ResizablePMCArray'
    repr_bind_attr_obj $P5001, $P5002, "@!BLOCKS", $P5003
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5006, 'Hash'
    repr_bind_attr_obj $P5004, $P5005, "%!code_objects_to_fix_up", $P5006
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5009, 'Hash'
    repr_bind_attr_obj $P5007, $P5008, "%!code_object_types", $P5009
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5012, 'Hash'
    repr_bind_attr_obj $P5010, $P5011, "%!code_object_fixup_list", $P5012
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5015, 'Hash'
    repr_bind_attr_obj $P5013, $P5014, "%!code_stub_sc_idx", $P5015
    nqp_decontainerize $P5016, _lex_param_0
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    new $P5018, 'ResizablePMCArray'
    repr_bind_attr_obj $P5016, $P5017, "@!clearup_tasks", $P5018
    find_dynamic_lex $P5019, "%*COMPILING"
    unless_null $P5019, fallback20
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_1, $P5020
    set fb_tmp_3, pkg_viv_tmp_1
    repr_defined $I5004, fb_tmp_3
    unless $I5004 goto if15_else21 
    set $P5022, fb_tmp_3["%COMPILING"]
    set $P5024, $P5022
    goto if15_end22
  if15_else21:
    null $P5023
    set $P5024, $P5023
  if15_end22:
    unless_null $P5024, vivi_1623
    new $P5025, 'Hash'
    set pkg_viv_tmp_1["%COMPILING"], $P5025
    set $P5024, $P5025
  vivi_1623:
    unless_null $P5024, vivi_1724
    die "Contextual %*COMPILING not found"
    box $P5026, "Contextual %*COMPILING not found"
    set $P5024, $P5026
  vivi_1724:
    set $P5019, $P5024
  fallback20:
    set fb_tmp_2, $P5019
    repr_defined $I5003, fb_tmp_2
    unless $I5003 goto if14_else18 
    set $P5027, fb_tmp_2["%?OPTIONS"]
    set $P5029, $P5027
    goto if14_end19
  if14_else18:
    null $P5028
    set $P5029, $P5028
  if14_end19:
    unless_null $P5029, vivi_1825
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_1825:
    set fb_tmp_1, $P5029
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if13_else16 
    set $P5031, fb_tmp_1["dynext"]
    set $P5033, $P5031
    goto if13_end17
  if13_else16:
    null $P5032
    set $P5033, $P5032
  if13_end17:
    unless_null $P5033, vivi_1926
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_1926:
    defined $I5001, $P5033
    box $P5038, $I5001
    set $P5037, $P5038
    unless $I5001 goto if12_end15 
    .const 'Sub' $P5035 = 'cuid_376_1361537952.49511' 
    capture_lex $P5035
    $P5036 = $P5035()
    set $P5037, $P5036
  if12_end15:
    .return ($P5037) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_376_1361537952.49511") :anon :lex :outer("cuid_1_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 41
    .lex "$dynext_path", $P101 
    .lex "@dynext_paths", $P102 
    .local pmc fb_tmp_4 
    .local pmc fb_tmp_5 
    .local pmc fb_tmp_6 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback31
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_2, $P5004
    set fb_tmp_6, pkg_viv_tmp_2
    repr_defined $I5003, fb_tmp_6
    unless $I5003 goto if22_else32 
    set $P5006, fb_tmp_6["%COMPILING"]
    set $P5008, $P5006
    goto if22_end33
  if22_else32:
    null $P5007
    set $P5008, $P5007
  if22_end33:
    unless_null $P5008, vivi_2334
    new $P5009, 'Hash'
    set pkg_viv_tmp_2["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_2334:
    unless_null $P5008, vivi_2435
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_2435:
    set $P5003, $P5008
  fallback31:
    set fb_tmp_5, $P5003
    repr_defined $I5002, fb_tmp_5
    unless $I5002 goto if21_else29 
    set $P5011, fb_tmp_5["%?OPTIONS"]
    set $P5013, $P5011
    goto if21_end30
  if21_else29:
    null $P5012
    set $P5013, $P5012
  if21_end30:
    unless_null $P5013, vivi_2536
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_2536:
    set fb_tmp_4, $P5013
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if20_else27 
    set $P5015, fb_tmp_4["dynext"]
    set $P5017, $P5015
    goto if20_end28
  if20_else27:
    null $P5016
    set $P5017, $P5016
  if20_end28:
    unless_null $P5017, vivi_2637
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_2637:
    set $P101, $P5017
    getinterp $P5019
    set fb_tmp_8, $P5019
    repr_defined $I5005, fb_tmp_8
    unless $I5005 goto if28_else40 
    set $P5020, fb_tmp_8[.IGLOBALS_LIB_PATHS]
    set $P5022, $P5020
    goto if28_end41
  if28_else40:
    null $P5021
    set $P5022, $P5021
  if28_end41:
    unless_null $P5022, vivi_2942
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_2942:
    set fb_tmp_7, $P5022
    repr_defined $I5004, fb_tmp_7
    unless $I5004 goto if27_else38 
    set $P5024, fb_tmp_7[.PARROT_LIB_PATH_DYNEXT]
    set $P5026, $P5024
    goto if27_end39
  if27_else38:
    null $P5025
    set $P5026, $P5025
  if27_end39:
    unless_null $P5026, vivi_3043
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_3043:
    set $P102, $P5026
.annotate 'line', 45
    $P5028 = $P102."push"($P101)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "push_lexpad" :subid("cuid_2_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 50
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$pad", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_9 
    .local pmc pkg_lookup_tmp_1 
    .local pmc fb_tmp_10 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_11 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 52
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_1, $P5003
    get_who $P5004, pkg_lookup_tmp_1
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if32_else46 
    get_who $P5006, pkg_lookup_tmp_1
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if32_end47
  if32_else46:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if32_end47:
    get_who $P5002, $P5008
    set fb_tmp_9, $P5002
    repr_defined $I5001, fb_tmp_9
    unless $I5001 goto if31_else44 
    set $P5009, fb_tmp_9["Block"]
    set $P5011, $P5009
    goto if31_end45
  if31_else44:
    null $P5010
    set $P5011, $P5010
  if31_end45:
    unless_null $P5011, vivi_3348
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_3348:
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_2, $P5014
    get_who $P5015, pkg_lookup_tmp_2
    exists $I5004, $P5015["QAST"]
    unless $I5004 goto if35_else51 
    get_who $P5017, pkg_lookup_tmp_2
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if35_end52
  if35_else51:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if35_end52:
    get_who $P5013, $P5019
    set fb_tmp_10, $P5013
    repr_defined $I5003, fb_tmp_10
    unless $I5003 goto if34_else49 
    set $P5020, fb_tmp_10["Stmts"]
    set $P5022, $P5020
    goto if34_end50
  if34_else49:
    null $P5021
    set $P5022, $P5021
  if34_end50:
    unless_null $P5022, vivi_3653
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_3653:
    $P5024 = $P5022."new"()
    $P5025 = $P5011."new"($P5024, _lex_param_1 :named("node"))
    set $P101, $P5025
    nqp_decontainerize $P5026, _lex_param_0
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5028, $P5026, $P5027, "@!BLOCKS"
    set $N5001, $P5028
    unless $N5001 goto if37_end55 
.annotate 'line', 53
    nqp_decontainerize $P5029, _lex_param_0
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5031, $P5029, $P5030, "@!BLOCKS"
    set fb_tmp_11, $P5031
    repr_defined $I5005, fb_tmp_11
    unless $I5005 goto if38_else56 
    nqp_decontainerize $P5033, _lex_param_0
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5035, $P5033, $P5034, "@!BLOCKS"
    set $N5003, $P5035
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    set $I5006, $N5002
    set $P5032, fb_tmp_11[$I5006]
    set $P5037, $P5032
    goto if38_end57
  if38_else56:
    null $P5036
    set $P5037, $P5036
  if38_end57:
    unless_null $P5037, vivi_3958
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_3958:
    set $P101["outer"], $P5037
  if37_end55:
    nqp_decontainerize $P5039, _lex_param_0
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5041, $P5039, $P5040, "@!BLOCKS"
    nqp_decontainerize $P5042, _lex_param_0
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5044, $P5042, $P5043, "@!BLOCKS"
    set $N5005, $P5044
    set $I5007, $N5005
    set $P5041[$I5007], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pop_lexpad" :subid("cuid_3_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 61
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
.annotate 'line', 62
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    $P5004 = $P5003."pop"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "cur_lexpad" :subid("cuid_4_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_12 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!BLOCKS"
    set fb_tmp_12, $P5003
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if40_else59 
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!BLOCKS"
    set $N5002, $P5007
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    set $I5002, $N5001
    set $P5004, fb_tmp_12[$I5002]
    set $P5009, $P5004
    goto if40_end60
  if40_else59:
    null $P5008
    set $P5009, $P5008
  if40_end60:
    unless_null $P5009, vivi_4161
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_4161:
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "get_legacy_block_list" :subid("cuid_5_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 71
    .param pmc _lex_param_0 
    .lex "@x", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!BLOCKS"
    repr_clone $P5002, $P5005
    set $P101, $P5002
.annotate 'line', 73
    $P101."reverse"()
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "load_setting" :subid("cuid_6_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 83
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5005 = 'cuid_378_1361537952.49511' 
    capture_lex $P5005 
    .lex "self", _lex_param_0 
    .lex "$setting_name", _lex_param_1 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_62
    .lex "RETURN", $P101
    set $S5001, _lex_param_1
    isne $I5001, $S5001, "NULL"
    box $P5004, $I5001
    set $P5003, $P5004
    unless $I5001 goto if42_end65 
    .const 'Sub' $P5001 = 'cuid_378_1361537952.49511' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5003, $P5002
  if42_end65:
    goto lexotic_63
  lexotic_62:
    .get_results ($P5003)
  lexotic_63:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_378_1361537952.49511") :anon :lex :outer("cuid_6_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 85
    .lex "$setting", $P101 
    .lex "$set_outer", $P102 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_15 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_16 
    .local pmc pkg_lookup_tmp_4 
    .local pmc fb_tmp_17 
    .local pmc pkg_lookup_tmp_5 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc pkg_lookup_tmp_6 
    .local pmc fb_tmp_20 
    .local pmc pkg_lookup_tmp_7 
    .local pmc fb_tmp_21 
    .local pmc pkg_lookup_tmp_8 
    .local pmc fb_tmp_22 
    .local pmc pkg_lookup_tmp_9 
    .local pmc fb_tmp_23 
    .local pmc pkg_lookup_tmp_10 
    .local pmc fb_tmp_24 
    .local pmc pkg_lookup_tmp_11 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc pkg_lookup_tmp_12 
    .local pmc fb_tmp_27 
    .local pmc pkg_lookup_tmp_13 
    .local pmc fb_tmp_28 
    .local pmc pkg_lookup_tmp_14 
    .local pmc fb_tmp_29 
    .local pmc pkg_lookup_tmp_15 
    .local pmc fb_tmp_30 
    .local pmc pkg_lookup_tmp_16 
    .local pmc fb_tmp_31 
    .local pmc pkg_lookup_tmp_17 
    .local pmc fb_tmp_32 
    .local pmc pkg_lookup_tmp_18 
    .local pmc fb_tmp_33 
    .local pmc pkg_lookup_tmp_19 
    .local pmc fb_tmp_34 
    .local pmc pkg_lookup_tmp_20 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*COMPILING"
    unless_null $P5003, fallback68
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_3, $P5004
    set fb_tmp_14, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_14
    unless $I5002 goto if44_else69 
    set $P5006, fb_tmp_14["%COMPILING"]
    set $P5008, $P5006
    goto if44_end70
  if44_else69:
    null $P5007
    set $P5008, $P5007
  if44_end70:
    unless_null $P5008, vivi_4571
    new $P5009, 'Hash'
    set pkg_viv_tmp_3["%COMPILING"], $P5009
    set $P5008, $P5009
  vivi_4571:
    unless_null $P5008, vivi_4672
    die "Contextual %*COMPILING not found"
    box $P5010, "Contextual %*COMPILING not found"
    set $P5008, $P5010
  vivi_4672:
    set $P5003, $P5008
  fallback68:
    set fb_tmp_13, $P5003
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if43_else66 
    set $P5011, fb_tmp_13["%?OPTIONS"]
    set $P5013, $P5011
    goto if43_end67
  if43_else66:
    null $P5012
    set $P5013, $P5012
  if43_end67:
    unless_null $P5013, vivi_4773
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_4773:
.annotate 'line', 90
    find_lex $P5015, "$loader"
    find_lex $P5016, "$setting_name"
    $P5017 = $P5015."load_setting"($P5016)
    set $P5013["outer_ctx"], $P5017
    set $P101, $P5017
.annotate 'line', 94
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_3, $P5019
    get_who $P5020, pkg_lookup_tmp_3
    exists $I5004, $P5020["QAST"]
    unless $I5004 goto if49_else76 
    get_who $P5022, pkg_lookup_tmp_3
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if49_end77
  if49_else76:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if49_end77:
    get_who $P5018, $P5024
    set fb_tmp_15, $P5018
    repr_defined $I5003, fb_tmp_15
    unless $I5003 goto if48_else74 
    set $P5025, fb_tmp_15["VM"]
    set $P5027, $P5025
    goto if48_end75
  if48_else74:
    null $P5026
    set $P5027, $P5026
  if48_end75:
    unless_null $P5027, vivi_5078
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_5078:
.annotate 'line', 95
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_4, $P5030
    get_who $P5031, pkg_lookup_tmp_4
    exists $I5006, $P5031["QAST"]
    unless $I5006 goto if52_else81 
    get_who $P5033, pkg_lookup_tmp_4
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if52_end82
  if52_else81:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if52_end82:
    get_who $P5029, $P5035
    set fb_tmp_16, $P5029
    repr_defined $I5005, fb_tmp_16
    unless $I5005 goto if51_else79 
    set $P5036, fb_tmp_16["Op"]
    set $P5038, $P5036
    goto if51_end80
  if51_else79:
    null $P5037
    set $P5038, $P5037
  if51_end80:
    unless_null $P5038, vivi_5383
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_5383:
.annotate 'line', 97
    nqp_get_sc_object $P5041, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_5, $P5041
    get_who $P5042, pkg_lookup_tmp_5
    exists $I5008, $P5042["QAST"]
    unless $I5008 goto if55_else86 
    get_who $P5044, pkg_lookup_tmp_5
    set $P5043, $P5044["QAST"]
    set $P5046, $P5043
    goto if55_end87
  if55_else86:
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5045
  if55_end87:
    get_who $P5040, $P5046
    set fb_tmp_17, $P5040
    repr_defined $I5007, fb_tmp_17
    unless $I5007 goto if54_else84 
    set $P5047, fb_tmp_17["BVal"]
    set $P5049, $P5047
    goto if54_end85
  if54_else84:
    null $P5048
    set $P5049, $P5048
  if54_end85:
    unless_null $P5049, vivi_5688
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_5688:
    find_dynamic_lex $P5051, "$*UNIT"
    unless_null $P5051, fallback89
    nqp_get_sc_object $P5053, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5052, $P5053
    set fb_tmp_18, $P5052
    repr_defined $I5009, fb_tmp_18
    unless $I5009 goto if57_else90 
    set $P5054, fb_tmp_18["$UNIT"]
    set $P5056, $P5054
    goto if57_end91
  if57_else90:
    null $P5055
    set $P5056, $P5055
  if57_end91:
    unless_null $P5056, vivi_5892
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_5892:
    unless_null $P5056, vivi_5993
    die "Contextual $*UNIT not found"
    box $P5058, "Contextual $*UNIT not found"
    set $P5056, $P5058
  vivi_5993:
    set $P5051, $P5056
  fallback89:
    $P5059 = $P5049."new"($P5051 :named("value"))
.annotate 'line', 98
    nqp_get_sc_object $P5061, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_6, $P5061
    get_who $P5062, pkg_lookup_tmp_6
    exists $I5011, $P5062["QAST"]
    unless $I5011 goto if61_else96 
    get_who $P5064, pkg_lookup_tmp_6
    set $P5063, $P5064["QAST"]
    set $P5066, $P5063
    goto if61_end97
  if61_else96:
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5066, $P5065
  if61_end97:
    get_who $P5060, $P5066
    set fb_tmp_19, $P5060
    repr_defined $I5010, fb_tmp_19
    unless $I5010 goto if60_else94 
    set $P5067, fb_tmp_19["Op"]
    set $P5069, $P5067
    goto if60_end95
  if60_else94:
    null $P5068
    set $P5069, $P5068
  if60_end95:
    unless_null $P5069, vivi_6298
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5070
  vivi_6298:
.annotate 'line', 100
    nqp_get_sc_object $P5072, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_7, $P5072
    get_who $P5073, pkg_lookup_tmp_7
    exists $I5013, $P5073["QAST"]
    unless $I5013 goto if64_else101 
    get_who $P5075, pkg_lookup_tmp_7
    set $P5074, $P5075["QAST"]
    set $P5077, $P5074
    goto if64_end102
  if64_else101:
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5076
  if64_end102:
    get_who $P5071, $P5077
    set fb_tmp_20, $P5071
    repr_defined $I5012, fb_tmp_20
    unless $I5012 goto if63_else99 
    set $P5078, fb_tmp_20["Op"]
    set $P5080, $P5078
    goto if63_end100
  if63_else99:
    null $P5079
    set $P5080, $P5079
  if63_end100:
    unless_null $P5080, vivi_65103
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5081
  vivi_65103:
.annotate 'line', 102
    nqp_get_sc_object $P5083, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_8, $P5083
    get_who $P5084, pkg_lookup_tmp_8
    exists $I5015, $P5084["QAST"]
    unless $I5015 goto if67_else106 
    get_who $P5086, pkg_lookup_tmp_8
    set $P5085, $P5086["QAST"]
    set $P5088, $P5085
    goto if67_end107
  if67_else106:
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5087
  if67_end107:
    get_who $P5082, $P5088
    set fb_tmp_21, $P5082
    repr_defined $I5014, fb_tmp_21
    unless $I5014 goto if66_else104 
    set $P5089, fb_tmp_21["SVal"]
    set $P5091, $P5089
    goto if66_end105
  if66_else104:
    null $P5090
    set $P5091, $P5090
  if66_end105:
    unless_null $P5091, vivi_68108
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5091, $P5092
  vivi_68108:
    $P5093 = $P5091."new"("ModuleLoader" :named("value"))
    $P5094 = $P5080."new"($P5093, "getcurhllsym" :named("op"))
.annotate 'line', 104
    nqp_get_sc_object $P5096, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_9, $P5096
    get_who $P5097, pkg_lookup_tmp_9
    exists $I5017, $P5097["QAST"]
    unless $I5017 goto if70_else111 
    get_who $P5099, pkg_lookup_tmp_9
    set $P5098, $P5099["QAST"]
    set $P5101, $P5098
    goto if70_end112
  if70_else111:
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5101, $P5100
  if70_end112:
    get_who $P5095, $P5101
    set fb_tmp_22, $P5095
    repr_defined $I5016, fb_tmp_22
    unless $I5016 goto if69_else109 
    set $P5102, fb_tmp_22["SVal"]
    set $P5104, $P5102
    goto if69_end110
  if69_else109:
    null $P5103
    set $P5104, $P5103
  if69_end110:
    unless_null $P5104, vivi_71113
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5104, $P5105
  vivi_71113:
    find_lex $P5106, "$setting_name"
    $P5107 = $P5104."new"($P5106 :named("value"))
    $P5108 = $P5069."new"($P5094, $P5107, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5109 = $P5038."new"($P5059, $P5108, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
.annotate 'line', 106
    nqp_get_sc_object $P5111, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_10, $P5111
    get_who $P5112, pkg_lookup_tmp_10
    exists $I5019, $P5112["QAST"]
    unless $I5019 goto if73_else116 
    get_who $P5114, pkg_lookup_tmp_10
    set $P5113, $P5114["QAST"]
    set $P5116, $P5113
    goto if73_end117
  if73_else116:
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5116, $P5115
  if73_end117:
    get_who $P5110, $P5116
    set fb_tmp_23, $P5110
    repr_defined $I5018, fb_tmp_23
    unless $I5018 goto if72_else114 
    set $P5117, fb_tmp_23["Op"]
    set $P5119, $P5117
    goto if72_end115
  if72_else114:
    null $P5118
    set $P5119, $P5118
  if72_end115:
    unless_null $P5119, vivi_74118
    nqp_get_sc_object $P5120, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5119, $P5120
  vivi_74118:
.annotate 'line', 108
    nqp_get_sc_object $P5122, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_11, $P5122
    get_who $P5123, pkg_lookup_tmp_11
    exists $I5021, $P5123["QAST"]
    unless $I5021 goto if76_else121 
    get_who $P5125, pkg_lookup_tmp_11
    set $P5124, $P5125["QAST"]
    set $P5127, $P5124
    goto if76_end122
  if76_else121:
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5127, $P5126
  if76_end122:
    get_who $P5121, $P5127
    set fb_tmp_24, $P5121
    repr_defined $I5020, fb_tmp_24
    unless $I5020 goto if75_else119 
    set $P5128, fb_tmp_24["BVal"]
    set $P5130, $P5128
    goto if75_end120
  if75_else119:
    null $P5129
    set $P5130, $P5129
  if75_end120:
    unless_null $P5130, vivi_77123
    nqp_get_sc_object $P5131, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5130, $P5131
  vivi_77123:
    find_dynamic_lex $P5132, "$*UNIT"
    unless_null $P5132, fallback124
    nqp_get_sc_object $P5134, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5133, $P5134
    set fb_tmp_25, $P5133
    repr_defined $I5022, fb_tmp_25
    unless $I5022 goto if78_else125 
    set $P5135, fb_tmp_25["$UNIT"]
    set $P5137, $P5135
    goto if78_end126
  if78_else125:
    null $P5136
    set $P5137, $P5136
  if78_end126:
    unless_null $P5137, vivi_79127
    nqp_get_sc_object $P5138, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5137, $P5138
  vivi_79127:
    unless_null $P5137, vivi_80128
    die "Contextual $*UNIT not found"
    box $P5139, "Contextual $*UNIT not found"
    set $P5137, $P5139
  vivi_80128:
    set $P5132, $P5137
  fallback124:
    $P5140 = $P5130."new"($P5132 :named("value"))
.annotate 'line', 109
    nqp_get_sc_object $P5142, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_12, $P5142
    get_who $P5143, pkg_lookup_tmp_12
    exists $I5024, $P5143["QAST"]
    unless $I5024 goto if82_else131 
    get_who $P5145, pkg_lookup_tmp_12
    set $P5144, $P5145["QAST"]
    set $P5147, $P5144
    goto if82_end132
  if82_else131:
    nqp_get_sc_object $P5146, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5147, $P5146
  if82_end132:
    get_who $P5141, $P5147
    set fb_tmp_26, $P5141
    repr_defined $I5023, fb_tmp_26
    unless $I5023 goto if81_else129 
    set $P5148, fb_tmp_26["Op"]
    set $P5150, $P5148
    goto if81_end130
  if81_else129:
    null $P5149
    set $P5150, $P5149
  if81_end130:
    unless_null $P5150, vivi_83133
    nqp_get_sc_object $P5151, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5150, $P5151
  vivi_83133:
.annotate 'line', 111
    nqp_get_sc_object $P5153, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_13, $P5153
    get_who $P5154, pkg_lookup_tmp_13
    exists $I5026, $P5154["QAST"]
    unless $I5026 goto if85_else136 
    get_who $P5156, pkg_lookup_tmp_13
    set $P5155, $P5156["QAST"]
    set $P5158, $P5155
    goto if85_end137
  if85_else136:
    nqp_get_sc_object $P5157, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5158, $P5157
  if85_end137:
    get_who $P5152, $P5158
    set fb_tmp_27, $P5152
    repr_defined $I5025, fb_tmp_27
    unless $I5025 goto if84_else134 
    set $P5159, fb_tmp_27["Op"]
    set $P5161, $P5159
    goto if84_end135
  if84_else134:
    null $P5160
    set $P5161, $P5160
  if84_end135:
    unless_null $P5161, vivi_86138
    nqp_get_sc_object $P5162, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5161, $P5162
  vivi_86138:
.annotate 'line', 113
    nqp_get_sc_object $P5164, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_14, $P5164
    get_who $P5165, pkg_lookup_tmp_14
    exists $I5028, $P5165["QAST"]
    unless $I5028 goto if88_else141 
    get_who $P5167, pkg_lookup_tmp_14
    set $P5166, $P5167["QAST"]
    set $P5169, $P5166
    goto if88_end142
  if88_else141:
    nqp_get_sc_object $P5168, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5169, $P5168
  if88_end142:
    get_who $P5163, $P5169
    set fb_tmp_28, $P5163
    repr_defined $I5027, fb_tmp_28
    unless $I5027 goto if87_else139 
    set $P5170, fb_tmp_28["SVal"]
    set $P5172, $P5170
    goto if87_end140
  if87_else139:
    null $P5171
    set $P5172, $P5171
  if87_end140:
    unless_null $P5172, vivi_89143
    nqp_get_sc_object $P5173, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5172, $P5173
  vivi_89143:
    $P5174 = $P5172."new"("ModuleLoader" :named("value"))
    $P5175 = $P5161."new"($P5174, "getcurhllsym" :named("op"))
.annotate 'line', 115
    nqp_get_sc_object $P5177, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_15, $P5177
    get_who $P5178, pkg_lookup_tmp_15
    exists $I5030, $P5178["QAST"]
    unless $I5030 goto if91_else146 
    get_who $P5180, pkg_lookup_tmp_15
    set $P5179, $P5180["QAST"]
    set $P5182, $P5179
    goto if91_end147
  if91_else146:
    nqp_get_sc_object $P5181, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5182, $P5181
  if91_end147:
    get_who $P5176, $P5182
    set fb_tmp_29, $P5176
    repr_defined $I5029, fb_tmp_29
    unless $I5029 goto if90_else144 
    set $P5183, fb_tmp_29["SVal"]
    set $P5185, $P5183
    goto if90_end145
  if90_else144:
    null $P5184
    set $P5185, $P5184
  if90_end145:
    unless_null $P5185, vivi_92148
    nqp_get_sc_object $P5186, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5185, $P5186
  vivi_92148:
    find_lex $P5187, "$setting_name"
    $P5188 = $P5185."new"($P5187 :named("value"))
    $P5189 = $P5150."new"($P5175, $P5188, "callmethod" :named("op"), "load_setting" :named("name"))
    $P5190 = $P5119."new"($P5140, $P5189, "forceouterctx" :named("op"))
    $P5191 = $P5027."new"($P5109 :named("parrot"), $P5190 :named("jvm"))
    set $P102, $P5191
.annotate 'line', 117
    find_lex $P5193, "self"
    nqp_decontainerize $P5192, $P5193
    $P5194 = $P5192."is_precompilation_mode"()
    unless $P5194 goto if93_else149 
.annotate 'line', 118
    find_lex $P5196, "self"
    nqp_decontainerize $P5195, $P5196
    nqp_get_sc_object $P5198, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_16, $P5198
    get_who $P5199, pkg_lookup_tmp_16
    exists $I5032, $P5199["QAST"]
    unless $I5032 goto if95_else153 
    get_who $P5201, pkg_lookup_tmp_16
    set $P5200, $P5201["QAST"]
    set $P5203, $P5200
    goto if95_end154
  if95_else153:
    nqp_get_sc_object $P5202, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5203, $P5202
  if95_end154:
    get_who $P5197, $P5203
    set fb_tmp_30, $P5197
    repr_defined $I5031, fb_tmp_30
    unless $I5031 goto if94_else151 
    set $P5204, fb_tmp_30["Stmts"]
    set $P5206, $P5204
    goto if94_end152
  if94_else151:
    null $P5205
    set $P5206, $P5205
  if94_end152:
    unless_null $P5206, vivi_96155
    nqp_get_sc_object $P5207, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5206, $P5207
  vivi_96155:
.annotate 'line', 119
    nqp_get_sc_object $P5209, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_17, $P5209
    get_who $P5210, pkg_lookup_tmp_17
    exists $I5034, $P5210["QAST"]
    unless $I5034 goto if98_else158 
    get_who $P5212, pkg_lookup_tmp_17
    set $P5211, $P5212["QAST"]
    set $P5214, $P5211
    goto if98_end159
  if98_else158:
    nqp_get_sc_object $P5213, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5214, $P5213
  if98_end159:
    get_who $P5208, $P5214
    set fb_tmp_31, $P5208
    repr_defined $I5033, fb_tmp_31
    unless $I5033 goto if97_else156 
    set $P5215, fb_tmp_31["Op"]
    set $P5217, $P5215
    goto if97_end157
  if97_else156:
    null $P5216
    set $P5217, $P5216
  if97_end157:
    unless_null $P5217, vivi_99160
    nqp_get_sc_object $P5218, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5217, $P5218
  vivi_99160:
.annotate 'line', 121
    nqp_get_sc_object $P5220, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_18, $P5220
    get_who $P5221, pkg_lookup_tmp_18
    exists $I5036, $P5221["QAST"]
    unless $I5036 goto if101_else163 
    get_who $P5223, pkg_lookup_tmp_18
    set $P5222, $P5223["QAST"]
    set $P5225, $P5222
    goto if101_end164
  if101_else163:
    nqp_get_sc_object $P5224, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5225, $P5224
  if101_end164:
    get_who $P5219, $P5225
    set fb_tmp_32, $P5219
    repr_defined $I5035, fb_tmp_32
    unless $I5035 goto if100_else161 
    set $P5226, fb_tmp_32["VM"]
    set $P5228, $P5226
    goto if100_end162
  if100_else161:
    null $P5227
    set $P5228, $P5227
  if100_end162:
    unless_null $P5228, vivi_102165
    nqp_get_sc_object $P5229, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5228, $P5229
  vivi_102165:
.annotate 'line', 122
    nqp_get_sc_object $P5231, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_19, $P5231
    get_who $P5232, pkg_lookup_tmp_19
    exists $I5038, $P5232["QAST"]
    unless $I5038 goto if104_else168 
    get_who $P5234, pkg_lookup_tmp_19
    set $P5233, $P5234["QAST"]
    set $P5236, $P5233
    goto if104_end169
  if104_else168:
    nqp_get_sc_object $P5235, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5236, $P5235
  if104_end169:
    get_who $P5230, $P5236
    set fb_tmp_33, $P5230
    repr_defined $I5037, fb_tmp_33
    unless $I5037 goto if103_else166 
    set $P5237, fb_tmp_33["SVal"]
    set $P5239, $P5237
    goto if103_end167
  if103_else166:
    null $P5238
    set $P5239, $P5238
  if103_end167:
    unless_null $P5239, vivi_105170
    nqp_get_sc_object $P5240, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5239, $P5240
  vivi_105170:
    $P5241 = $P5239."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 123
    nqp_get_sc_object $P5243, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_20, $P5243
    get_who $P5244, pkg_lookup_tmp_20
    exists $I5040, $P5244["QAST"]
    unless $I5040 goto if107_else173 
    get_who $P5246, pkg_lookup_tmp_20
    set $P5245, $P5246["QAST"]
    set $P5248, $P5245
    goto if107_end174
  if107_else173:
    nqp_get_sc_object $P5247, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5248, $P5247
  if107_end174:
    get_who $P5242, $P5248
    set fb_tmp_34, $P5242
    repr_defined $I5039, fb_tmp_34
    unless $I5039 goto if106_else171 
    set $P5249, fb_tmp_34["SVal"]
    set $P5251, $P5249
    goto if106_end172
  if106_else171:
    null $P5250
    set $P5251, $P5250
  if106_end172:
    unless_null $P5251, vivi_108175
    nqp_get_sc_object $P5252, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5251, $P5252
  vivi_108175:
    $P5253 = $P5251."new"("ModuleLoader.class" :named("value"))
    $P5254 = $P5228."new"($P5241 :named("parrot"), $P5253 :named("jvm"))
    $P5255 = $P5217."new"($P5254, "loadbytecode" :named("op"))
    $P5256 = $P5206."new"($P5255, $P102)
    $P5257 = $P5195."add_load_dependency_task"($P5256 :named("deserialize_past"))
    goto if93_end150
  if93_else149:
.annotate 'line', 128
.annotate 'line', 129
    find_lex $P5259, "self"
    nqp_decontainerize $P5258, $P5259
    $P5260 = $P5258."add_fixup_task"($P102 :named("fixup_past"))
  if93_end150:
    getattribute $P5262, $P101, 'lex_pad'
    find_lex $P5261, "RETURN"
    $P5263 = $P5261($P5262)
    .return ($P5263) 
.end
.HLL "nqp"
.namespace []
.sub "load_module" :subid("cuid_7_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 138
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$module_name", _lex_param_1 
    .lex "$cur_GLOBALish", _lex_param_2 
    .local pmc fb_tmp_35 
    .local pmc pkg_lookup_tmp_21 
    .local pmc fb_tmp_36 
    .local pmc pkg_lookup_tmp_22 
    .local pmc fb_tmp_37 
    .local pmc pkg_lookup_tmp_23 
    .local pmc fb_tmp_38 
    .local pmc pkg_lookup_tmp_24 
    .local pmc fb_tmp_39 
    .local pmc pkg_lookup_tmp_25 
    .local pmc fb_tmp_40 
    .local pmc pkg_lookup_tmp_26 
    .local pmc fb_tmp_41 
    .local pmc pkg_lookup_tmp_27 
    .local pmc fb_tmp_42 
    .local pmc pkg_lookup_tmp_28 
    .local pmc fb_tmp_43 
    .local pmc pkg_lookup_tmp_29 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_176
    .lex "RETURN", $P102
.annotate 'line', 140
    find_lex $P5002, "$loader"
    $P5003 = $P5002."load_module"(_lex_param_1, _lex_param_2)
    set $P101, $P5003
.annotate 'line', 143
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = $P5004."is_precompilation_mode"()
    unless $P5005 goto if109_end179 
.annotate 'line', 144
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_21, $P5008
    get_who $P5009, pkg_lookup_tmp_21
    exists $I5002, $P5009["QAST"]
    unless $I5002 goto if111_else182 
    get_who $P5011, pkg_lookup_tmp_21
    set $P5010, $P5011["QAST"]
    set $P5013, $P5010
    goto if111_end183
  if111_else182:
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5012
  if111_end183:
    get_who $P5007, $P5013
    set fb_tmp_35, $P5007
    repr_defined $I5001, fb_tmp_35
    unless $I5001 goto if110_else180 
    set $P5014, fb_tmp_35["Stmts"]
    set $P5016, $P5014
    goto if110_end181
  if110_else180:
    null $P5015
    set $P5016, $P5015
  if110_end181:
    unless_null $P5016, vivi_112184
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_112184:
.annotate 'line', 145
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_22, $P5019
    get_who $P5020, pkg_lookup_tmp_22
    exists $I5004, $P5020["QAST"]
    unless $I5004 goto if114_else187 
    get_who $P5022, pkg_lookup_tmp_22
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if114_end188
  if114_else187:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if114_end188:
    get_who $P5018, $P5024
    set fb_tmp_36, $P5018
    repr_defined $I5003, fb_tmp_36
    unless $I5003 goto if113_else185 
    set $P5025, fb_tmp_36["Op"]
    set $P5027, $P5025
    goto if113_end186
  if113_else185:
    null $P5026
    set $P5027, $P5026
  if113_end186:
    unless_null $P5027, vivi_115189
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_115189:
.annotate 'line', 147
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_23, $P5030
    get_who $P5031, pkg_lookup_tmp_23
    exists $I5006, $P5031["QAST"]
    unless $I5006 goto if117_else192 
    get_who $P5033, pkg_lookup_tmp_23
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if117_end193
  if117_else192:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if117_end193:
    get_who $P5029, $P5035
    set fb_tmp_37, $P5029
    repr_defined $I5005, fb_tmp_37
    unless $I5005 goto if116_else190 
    set $P5036, fb_tmp_37["VM"]
    set $P5038, $P5036
    goto if116_end191
  if116_else190:
    null $P5037
    set $P5038, $P5037
  if116_end191:
    unless_null $P5038, vivi_118194
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_118194:
.annotate 'line', 148
    nqp_get_sc_object $P5041, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_24, $P5041
    get_who $P5042, pkg_lookup_tmp_24
    exists $I5008, $P5042["QAST"]
    unless $I5008 goto if120_else197 
    get_who $P5044, pkg_lookup_tmp_24
    set $P5043, $P5044["QAST"]
    set $P5046, $P5043
    goto if120_end198
  if120_else197:
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5045
  if120_end198:
    get_who $P5040, $P5046
    set fb_tmp_38, $P5040
    repr_defined $I5007, fb_tmp_38
    unless $I5007 goto if119_else195 
    set $P5047, fb_tmp_38["SVal"]
    set $P5049, $P5047
    goto if119_end196
  if119_else195:
    null $P5048
    set $P5049, $P5048
  if119_end196:
    unless_null $P5049, vivi_121199
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_121199:
    $P5051 = $P5049."new"("ModuleLoader.pbc" :named("value"))
.annotate 'line', 149
    nqp_get_sc_object $P5053, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_25, $P5053
    get_who $P5054, pkg_lookup_tmp_25
    exists $I5010, $P5054["QAST"]
    unless $I5010 goto if123_else202 
    get_who $P5056, pkg_lookup_tmp_25
    set $P5055, $P5056["QAST"]
    set $P5058, $P5055
    goto if123_end203
  if123_else202:
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5057
  if123_end203:
    get_who $P5052, $P5058
    set fb_tmp_39, $P5052
    repr_defined $I5009, fb_tmp_39
    unless $I5009 goto if122_else200 
    set $P5059, fb_tmp_39["SVal"]
    set $P5061, $P5059
    goto if122_end201
  if122_else200:
    null $P5060
    set $P5061, $P5060
  if122_end201:
    unless_null $P5061, vivi_124204
    nqp_get_sc_object $P5062, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5062
  vivi_124204:
    $P5063 = $P5061."new"("ModuleLoader.class" :named("value"))
    $P5064 = $P5038."new"($P5051 :named("parrot"), $P5063 :named("jvm"))
    $P5065 = $P5027."new"($P5064, "loadbytecode" :named("op"))
.annotate 'line', 151
    nqp_get_sc_object $P5067, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_26, $P5067
    get_who $P5068, pkg_lookup_tmp_26
    exists $I5012, $P5068["QAST"]
    unless $I5012 goto if126_else207 
    get_who $P5070, pkg_lookup_tmp_26
    set $P5069, $P5070["QAST"]
    set $P5072, $P5069
    goto if126_end208
  if126_else207:
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5071
  if126_end208:
    get_who $P5066, $P5072
    set fb_tmp_40, $P5066
    repr_defined $I5011, fb_tmp_40
    unless $I5011 goto if125_else205 
    set $P5073, fb_tmp_40["Op"]
    set $P5075, $P5073
    goto if125_end206
  if125_else205:
    null $P5074
    set $P5075, $P5074
  if125_end206:
    unless_null $P5075, vivi_127209
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_127209:
.annotate 'line', 153
    nqp_get_sc_object $P5078, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_27, $P5078
    get_who $P5079, pkg_lookup_tmp_27
    exists $I5014, $P5079["QAST"]
    unless $I5014 goto if129_else212 
    get_who $P5081, pkg_lookup_tmp_27
    set $P5080, $P5081["QAST"]
    set $P5083, $P5080
    goto if129_end213
  if129_else212:
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5083, $P5082
  if129_end213:
    get_who $P5077, $P5083
    set fb_tmp_41, $P5077
    repr_defined $I5013, fb_tmp_41
    unless $I5013 goto if128_else210 
    set $P5084, fb_tmp_41["Op"]
    set $P5086, $P5084
    goto if128_end211
  if128_else210:
    null $P5085
    set $P5086, $P5085
  if128_end211:
    unless_null $P5086, vivi_130214
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5086, $P5087
  vivi_130214:
.annotate 'line', 155
    nqp_get_sc_object $P5089, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_28, $P5089
    get_who $P5090, pkg_lookup_tmp_28
    exists $I5016, $P5090["QAST"]
    unless $I5016 goto if132_else217 
    get_who $P5092, pkg_lookup_tmp_28
    set $P5091, $P5092["QAST"]
    set $P5094, $P5091
    goto if132_end218
  if132_else217:
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5094, $P5093
  if132_end218:
    get_who $P5088, $P5094
    set fb_tmp_42, $P5088
    repr_defined $I5015, fb_tmp_42
    unless $I5015 goto if131_else215 
    set $P5095, fb_tmp_42["SVal"]
    set $P5097, $P5095
    goto if131_end216
  if131_else215:
    null $P5096
    set $P5097, $P5096
  if131_end216:
    unless_null $P5097, vivi_133219
    nqp_get_sc_object $P5098, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5098
  vivi_133219:
    $P5099 = $P5097."new"("ModuleLoader" :named("value"))
    $P5100 = $P5086."new"($P5099, "getcurhllsym" :named("op"))
.annotate 'line', 157
    nqp_get_sc_object $P5102, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_29, $P5102
    get_who $P5103, pkg_lookup_tmp_29
    exists $I5018, $P5103["QAST"]
    unless $I5018 goto if135_else222 
    get_who $P5105, pkg_lookup_tmp_29
    set $P5104, $P5105["QAST"]
    set $P5107, $P5104
    goto if135_end223
  if135_else222:
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5107, $P5106
  if135_end223:
    get_who $P5101, $P5107
    set fb_tmp_43, $P5101
    repr_defined $I5017, fb_tmp_43
    unless $I5017 goto if134_else220 
    set $P5108, fb_tmp_43["SVal"]
    set $P5110, $P5108
    goto if134_end221
  if134_else220:
    null $P5109
    set $P5110, $P5109
  if134_end221:
    unless_null $P5110, vivi_136224
    nqp_get_sc_object $P5111, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5110, $P5111
  vivi_136224:
    $P5112 = $P5110."new"(_lex_param_1 :named("value"))
    $P5113 = $P5075."new"($P5100, $P5112, "callmethod" :named("op"), "load_module" :named("name"))
    $P5114 = $P5016."new"($P5065, $P5113)
    $P5115 = $P5006."add_load_dependency_task"($P5114 :named("deserialize_past"))
  if109_end179:
    getattribute $P5117, $P101, 'lex_pad'
    find_lex $P5116, "RETURN"
    $P5118 = $P5116($P5117)
    goto lexotic_177
  lexotic_176:
    .get_results ($P5118)
  lexotic_177:
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "import" :subid("cuid_8_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5009 = 'cuid_379_1361537952.49511' 
    capture_lex $P5009 
    .lex "$target", $P101 
    .lex "self", _lex_param_0 
    .lex "$stash", _lex_param_1 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 165
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."cur_lexpad"()
    set $P101, $P5003
    set $P5004, _lex_param_1
    iter $P5006, _lex_param_1
  for_next225:
    unless $P5006, for_done227
    shift $P5008, $P5006
  for_redo226:
    .const 'Sub' $P5007 = 'cuid_379_1361537952.49511' 
    capture_lex $P5007
    $P5004 = $P5007($P5008)
    goto for_next225
  for_done227:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_379_1361537952.49511") :anon :lex :outer("cuid_8_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 166
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 167
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    find_lex $P5003, "$target"
    $P5004 = _lex_param_0."key"()
    $P5005 = _lex_param_0."value"()
    $P5006 = $P5001."install_lexical_symbol"($P5003, $P5004, $P5005)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_symbol" :subid("cuid_9_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 173
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_381_1361537952.49511' 
    capture_lex $P5012 
    .lex "$name", $P101 
    .lex "$target", $P102 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "@sym", _lex_param_2 
    .lex "$obj", _lex_param_3 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    repr_clone $P5003, _lex_param_2
    set _lex_param_2, $P5003
.annotate 'line', 175
    $P5004 = _lex_param_2."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    set $P102, _lex_param_1
    set $P5006, _lex_param_2
    iter $P5008, _lex_param_2
  for_next247:
    unless $P5008, for_done249
    shift $P5010, $P5008
  for_redo248:
    .const 'Sub' $P5009 = 'cuid_381_1361537952.49511' 
    capture_lex $P5009
    $P5006 = $P5009($P5010)
    goto for_next247
  for_done249:
    get_who $P5011, $P102
    set $S5002, $P101
    set $P5011[$S5002], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_381_1361537952.49511") :anon :lex :outer("cuid_9_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 179
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_380_1361537952.49511' 
    capture_lex $P5009 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$target"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if137_else228 
.annotate 'line', 180
    find_lex $P5005, "$target"
    get_who $P5004, $P5005
    set $S5002, _lex_param_0
    set $P5003, $P5004[$S5002]
    store_lex "$target", $P5003
    set $P5008, $P5003
    goto if137_end229
  if137_else228:
    .const 'Sub' $P5006 = 'cuid_380_1361537952.49511' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
  if137_end229:
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_380_1361537952.49511") :anon :lex :outer("cuid_381_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 183
    .lex "$pkgtype", $P101 
    .lex "$pkg", $P102 
    .local pmc fb_tmp_44 
    .local pmc pkg_viv_tmp_4 
    .local pmc fb_tmp_45 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_46 
    .local pmc pkg_viv_tmp_6 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback232
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_4, $P5004
    set fb_tmp_44, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_44
    unless $I5002 goto if139_else233 
    set $P5006, fb_tmp_44["%HOW"]
    set $P5008, $P5006
    goto if139_end234
  if139_else233:
    null $P5007
    set $P5008, $P5007
  if139_end234:
    unless_null $P5008, vivi_140235
    new $P5009, 'Hash'
    set pkg_viv_tmp_4["%HOW"], $P5009
    set $P5008, $P5009
  vivi_140235:
    unless_null $P5008, vivi_141236
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_141236:
    set $P5003, $P5008
  fallback232:
    exists $I5001, $P5003["package"]
    unless $I5001 goto if138_else230 
    find_dynamic_lex $P5012, "%*HOW"
    unless_null $P5012, fallback237
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_5, $P5013
    set fb_tmp_45, pkg_viv_tmp_5
    repr_defined $I5003, fb_tmp_45
    unless $I5003 goto if142_else238 
    set $P5015, fb_tmp_45["%HOW"]
    set $P5017, $P5015
    goto if142_end239
  if142_else238:
    null $P5016
    set $P5017, $P5016
  if142_end239:
    unless_null $P5017, vivi_143240
    new $P5018, 'Hash'
    set pkg_viv_tmp_5["%HOW"], $P5018
    set $P5017, $P5018
  vivi_143240:
    unless_null $P5017, vivi_144241
    die "Contextual %*HOW not found"
    box $P5019, "Contextual %*HOW not found"
    set $P5017, $P5019
  vivi_144241:
    set $P5012, $P5017
  fallback237:
    set $P5011, $P5012["package"]
    set $P5029, $P5011
    goto if138_end231
  if138_else230:
    find_dynamic_lex $P5021, "%*HOW"
    unless_null $P5021, fallback242
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5022, $P5023
    set pkg_viv_tmp_6, $P5022
    set fb_tmp_46, pkg_viv_tmp_6
    repr_defined $I5004, fb_tmp_46
    unless $I5004 goto if145_else243 
    set $P5024, fb_tmp_46["%HOW"]
    set $P5026, $P5024
    goto if145_end244
  if145_else243:
    null $P5025
    set $P5026, $P5025
  if145_end244:
    unless_null $P5026, vivi_146245
    new $P5027, 'Hash'
    set pkg_viv_tmp_6["%HOW"], $P5027
    set $P5026, $P5027
  vivi_146245:
    unless_null $P5026, vivi_147246
    die "Contextual %*HOW not found"
    box $P5028, "Contextual %*HOW not found"
    set $P5026, $P5028
  vivi_147246:
    set $P5021, $P5026
  fallback242:
    set $P5020, $P5021["knowhow"]
    set $P5029, $P5020
  if138_end231:
    set $P101, $P5029
.annotate 'line', 187
    find_lex $P5030, "$_"
    $P5031 = $P101."new_type"($P5030 :named("name"))
    set $P102, $P5031
.annotate 'line', 188
    get_how $P5032, $P102
    $P5032."compose"($P102)
    find_lex $P5034, "$target"
    get_who $P5033, $P5034
    find_lex $P5035, "$_"
    set $S5001, $P5035
    set $P5033[$S5001], $P102
    store_lex "$target", $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "install_lexical_symbol" :subid("cuid_10_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 199
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$obj", _lex_param_3 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc pkg_lookup_tmp_30 
    .local pmc fb_tmp_49 
    .local pmc pkg_lookup_tmp_31 
    .local pmc fb_tmp_50 
    .local pmc pkg_lookup_tmp_32 
    .local pmc fb_tmp_51 
    .local pmc pkg_lookup_tmp_33 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 201
    _lex_param_1."symbol"(_lex_param_2, "lexical" :named("scope"), _lex_param_3 :named("value"))
.annotate 'line', 202
    set fb_tmp_47, _lex_param_1
    repr_defined $I5001, fb_tmp_47
    unless $I5001 goto if148_else250 
    set $P5002, fb_tmp_47[0]
    set $P5004, $P5002
    goto if148_end251
  if148_else250:
    null $P5003
    set $P5004, $P5003
  if148_end251:
    unless_null $P5004, vivi_149252
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_149252:
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_30, $P5007
    get_who $P5008, pkg_lookup_tmp_30
    exists $I5003, $P5008["QAST"]
    unless $I5003 goto if151_else255 
    get_who $P5010, pkg_lookup_tmp_30
    set $P5009, $P5010["QAST"]
    set $P5012, $P5009
    goto if151_end256
  if151_else255:
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5011
  if151_end256:
    get_who $P5006, $P5012
    set fb_tmp_48, $P5006
    repr_defined $I5002, fb_tmp_48
    unless $I5002 goto if150_else253 
    set $P5013, fb_tmp_48["Var"]
    set $P5015, $P5013
    goto if150_end254
  if150_else253:
    null $P5014
    set $P5015, $P5014
  if150_end254:
    unless_null $P5015, vivi_152257
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_152257:
    $P5017 = $P5015."new"("lexical" :named("scope"), _lex_param_2 :named("name"), "var" :named("decl"))
    $P5004."push"($P5017)
.annotate 'line', 205
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_31, $P5019
    get_who $P5020, pkg_lookup_tmp_31
    exists $I5005, $P5020["QAST"]
    unless $I5005 goto if154_else260 
    get_who $P5022, pkg_lookup_tmp_31
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if154_end261
  if154_else260:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if154_end261:
    get_who $P5018, $P5024
    set fb_tmp_49, $P5018
    repr_defined $I5004, fb_tmp_49
    unless $I5004 goto if153_else258 
    set $P5025, fb_tmp_49["Op"]
    set $P5027, $P5025
    goto if153_end259
  if153_else258:
    null $P5026
    set $P5027, $P5026
  if153_end259:
    unless_null $P5027, vivi_155262
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_155262:
.annotate 'line', 208
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_32, $P5030
    get_who $P5031, pkg_lookup_tmp_32
    exists $I5007, $P5031["QAST"]
    unless $I5007 goto if157_else265 
    get_who $P5033, pkg_lookup_tmp_32
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if157_end266
  if157_else265:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if157_end266:
    get_who $P5029, $P5035
    set fb_tmp_50, $P5029
    repr_defined $I5006, fb_tmp_50
    unless $I5006 goto if156_else263 
    set $P5036, fb_tmp_50["SVal"]
    set $P5038, $P5036
    goto if156_end264
  if156_else263:
    null $P5037
    set $P5038, $P5037
  if156_end264:
    unless_null $P5038, vivi_158267
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_158267:
    $P5040 = $P5038."new"(_lex_param_2 :named("value"))
.annotate 'line', 209
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_33, $P5042
    get_who $P5043, pkg_lookup_tmp_33
    exists $I5009, $P5043["QAST"]
    unless $I5009 goto if160_else270 
    get_who $P5045, pkg_lookup_tmp_33
    set $P5044, $P5045["QAST"]
    set $P5047, $P5044
    goto if160_end271
  if160_else270:
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5046
  if160_end271:
    get_who $P5041, $P5047
    set fb_tmp_51, $P5041
    repr_defined $I5008, fb_tmp_51
    unless $I5008 goto if159_else268 
    set $P5048, fb_tmp_51["WVal"]
    set $P5050, $P5048
    goto if159_end269
  if159_else268:
    null $P5049
    set $P5050, $P5049
  if159_end269:
    unless_null $P5050, vivi_161272
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_161272:
    $P5052 = $P5050."new"(_lex_param_3 :named("value"))
    $P5053 = $P5027."new"(_lex_param_1, $P5040, $P5052, "setstaticlex" :named("op"))
    set $P101, $P5053
.annotate 'line', 211
    nqp_decontainerize $P5054, _lex_param_0
    $P5055 = $P5054."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "install_package_routine" :subid("cuid_11_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 216
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$fixup", $P101 
    .lex "self", _lex_param_0 
    .lex "$package", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$past_block", _lex_param_3 
    .local pmc fb_tmp_52 
    .local pmc pkg_lookup_tmp_34 
    .local pmc fb_tmp_53 
    .local pmc pkg_lookup_tmp_35 
    .local pmc fb_tmp_54 
    .local pmc pkg_lookup_tmp_36 
    .local pmc fb_tmp_55 
    .local pmc pkg_lookup_tmp_37 
    .local pmc fb_tmp_56 
    .local pmc pkg_lookup_tmp_38 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 217
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_34, $P5003
    get_who $P5004, pkg_lookup_tmp_34
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if163_else275 
    get_who $P5006, pkg_lookup_tmp_34
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if163_end276
  if163_else275:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if163_end276:
    get_who $P5002, $P5008
    set fb_tmp_52, $P5002
    repr_defined $I5001, fb_tmp_52
    unless $I5001 goto if162_else273 
    set $P5009, fb_tmp_52["Op"]
    set $P5011, $P5009
    goto if162_end274
  if162_else273:
    null $P5010
    set $P5011, $P5010
  if162_end274:
    unless_null $P5011, vivi_164277
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_164277:
.annotate 'line', 219
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_35, $P5014
    get_who $P5015, pkg_lookup_tmp_35
    exists $I5004, $P5015["QAST"]
    unless $I5004 goto if166_else280 
    get_who $P5017, pkg_lookup_tmp_35
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if166_end281
  if166_else280:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if166_end281:
    get_who $P5013, $P5019
    set fb_tmp_53, $P5013
    repr_defined $I5003, fb_tmp_53
    unless $I5003 goto if165_else278 
    set $P5020, fb_tmp_53["Op"]
    set $P5022, $P5020
    goto if165_end279
  if165_else278:
    null $P5021
    set $P5022, $P5021
  if165_end279:
    unless_null $P5022, vivi_167282
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_167282:
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_36, $P5025
    get_who $P5026, pkg_lookup_tmp_36
    exists $I5006, $P5026["QAST"]
    unless $I5006 goto if169_else285 
    get_who $P5028, pkg_lookup_tmp_36
    set $P5027, $P5028["QAST"]
    set $P5030, $P5027
    goto if169_end286
  if169_else285:
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5029
  if169_end286:
    get_who $P5024, $P5030
    set fb_tmp_54, $P5024
    repr_defined $I5005, fb_tmp_54
    unless $I5005 goto if168_else283 
    set $P5031, fb_tmp_54["WVal"]
    set $P5033, $P5031
    goto if168_end284
  if168_else283:
    null $P5032
    set $P5033, $P5032
  if168_end284:
    unless_null $P5033, vivi_170287
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_170287:
    $P5035 = $P5033."new"(_lex_param_1 :named("value"))
    $P5036 = $P5022."new"($P5035, "who" :named("op"))
.annotate 'line', 220
    nqp_get_sc_object $P5038, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_37, $P5038
    get_who $P5039, pkg_lookup_tmp_37
    exists $I5008, $P5039["QAST"]
    unless $I5008 goto if172_else290 
    get_who $P5041, pkg_lookup_tmp_37
    set $P5040, $P5041["QAST"]
    set $P5043, $P5040
    goto if172_end291
  if172_else290:
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5042
  if172_end291:
    get_who $P5037, $P5043
    set fb_tmp_55, $P5037
    repr_defined $I5007, fb_tmp_55
    unless $I5007 goto if171_else288 
    set $P5044, fb_tmp_55["SVal"]
    set $P5046, $P5044
    goto if171_end289
  if171_else288:
    null $P5045
    set $P5046, $P5045
  if171_end289:
    unless_null $P5046, vivi_173292
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5047
  vivi_173292:
    set $S5001, _lex_param_2
    $P5048 = $P5046."new"($S5001 :named("value"))
.annotate 'line', 221
    nqp_get_sc_object $P5050, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_38, $P5050
    get_who $P5051, pkg_lookup_tmp_38
    exists $I5010, $P5051["QAST"]
    unless $I5010 goto if175_else295 
    get_who $P5053, pkg_lookup_tmp_38
    set $P5052, $P5053["QAST"]
    set $P5055, $P5052
    goto if175_end296
  if175_else295:
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5054
  if175_end296:
    get_who $P5049, $P5055
    set fb_tmp_56, $P5049
    repr_defined $I5009, fb_tmp_56
    unless $I5009 goto if174_else293 
    set $P5056, fb_tmp_56["BVal"]
    set $P5058, $P5056
    goto if174_end294
  if174_else293:
    null $P5057
    set $P5058, $P5057
  if174_end294:
    unless_null $P5058, vivi_176297
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5059
  vivi_176297:
    $P5060 = $P5058."new"(_lex_param_3 :named("value"))
    $P5061 = $P5011."new"($P5036, $P5048, $P5060, "bindkey" :named("op"))
    set $P101, $P5061
.annotate 'line', 223
    nqp_decontainerize $P5062, _lex_param_0
    $P5063 = $P5062."add_fixup_task"($P101 :named("deserialize_past"), $P101 :named("fixup_past"))
    .return ($P5063) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_17_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 228
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("code_type_name") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5144 = 'cuid_12_1361537952.49511' 
    capture_lex $P5144 
    .const 'Sub' $P5144 = 'cuid_385_1361537952.49511' 
    capture_lex $P5144 
    .const 'Sub' $P5144 = 'cuid_386_1361537952.49511' 
    capture_lex $P5144 
    .const 'Sub' $P5144 = 'cuid_387_1361537952.49511' 
    capture_lex $P5144 
    .lex "$code_type", $P101 
    .lex "$have_code_type", $P102 
    .lex "$stub_code", $P103 
    .lex "$code_obj", $P104 
    .lex "$fixups", $P105 
    .lex "$dummy", $P106 
    .lex "$code_ref_idx", $P107 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$is_dispatcher", _lex_param_3 
    .lex "$code_type_name", _lex_param_4 
    .local pmc fb_tmp_57 
    .local pmc fb_tmp_58 
    .local pmc fb_tmp_74 
    .local pmc pkg_lookup_tmp_40 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_98 
    .local pmc pkg_lookup_tmp_60 
    .local pmc fb_tmp_99 
    .local pmc pkg_lookup_tmp_61 
    .local pmc fb_tmp_100 
    .local pmc pkg_lookup_tmp_62 
    .local pmc fb_tmp_101 
    .local pmc pkg_lookup_tmp_63 
    .local pmc fb_tmp_102 
    .local pmc pkg_lookup_tmp_64 
    if haz_param_1, default523
    box $P5143, "NQPRoutine"
    set _lex_param_4, $P5143
  default523:
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P107, $P5007
    root_new $P108, ['parrot';'Continuation']
    set_label $P108, lexotic_298
    .lex "RETURN", $P108
    box $P5008, 0
    set $P102, $P5008
    new $P5031, 'ExceptionHandler'
    set_label $P5031, catch_handler_184311
    $P5031.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5031
.annotate 'line', 232
.annotate 'line', 233
    nqp_decontainerize $P5009, _lex_param_0
    new $P5010, 'ResizablePMCArray'
    push $P5010, _lex_param_4
    $P5011 = $P5009."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 234
    find_dynamic_lex $P5013, "$*PACKAGE"
    unless_null $P5013, fallback300
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5014, $P5015
    set fb_tmp_57, $P5014
    repr_defined $I5002, fb_tmp_57
    unless $I5002 goto if177_else301 
    set $P5016, fb_tmp_57["$PACKAGE"]
    set $P5018, $P5016
    goto if177_end302
  if177_else301:
    null $P5017
    set $P5018, $P5017
  if177_end302:
    unless_null $P5018, vivi_178303
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_178303:
    unless_null $P5018, vivi_179304
    die "Contextual $*PACKAGE not found"
    box $P5020, "Contextual $*PACKAGE not found"
    set $P5018, $P5020
  vivi_179304:
    set $P5013, $P5018
  fallback300:
    get_how $P5012, $P5013
    find_dynamic_lex $P5021, "$*PACKAGE"
    unless_null $P5021, fallback305
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5022, $P5023
    set fb_tmp_58, $P5022
    repr_defined $I5003, fb_tmp_58
    unless $I5003 goto if180_else306 
    set $P5024, fb_tmp_58["$PACKAGE"]
    set $P5026, $P5024
    goto if180_end307
  if180_else306:
    null $P5025
    set $P5026, $P5025
  if180_end307:
    unless_null $P5026, vivi_181308
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_181308:
    unless_null $P5026, vivi_182309
    die "Contextual $*PACKAGE not found"
    box $P5028, "Contextual $*PACKAGE not found"
    set $P5026, $P5028
  vivi_182309:
    set $P5021, $P5026
  fallback305:
    $P5029 = $P5012."name"($P5021)
    set $S5001, $P5029
    set $S5002, _lex_param_4
    isne $I5001, $S5001, $S5002
    box $P5030, $I5001
    set $P102, $P5030
    set $P5032, $P102
    pop_eh 
    goto skip_handler_183310
  catch_handler_184311:
    .get_results ($P5031) 
    set $I10001, 1
    set $P5031["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5031
    pop_upto_eh $P5031
    pop_eh 
    set $P5032, $P10001
    goto skip_handler_183310
  skip_handler_183310:
    .const 'Sub' $P5034 = 'cuid_12_1361537952.49511' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    set $P103, $P5033
    unless $P102 goto if219_end375 
.annotate 'line', 282
    repr_instance_of $P5035, $P101
    set $P104, $P5035
  if219_end375:
.annotate 'line', 287
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_40, $P5037
    get_who $P5038, pkg_lookup_tmp_40
    exists $I5005, $P5038["QAST"]
    unless $I5005 goto if221_else378 
    get_who $P5040, pkg_lookup_tmp_40
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if221_end379
  if221_else378:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if221_end379:
    get_who $P5036, $P5042
    set fb_tmp_74, $P5036
    repr_defined $I5004, fb_tmp_74
    unless $I5004 goto if220_else376 
    set $P5043, fb_tmp_74["Stmts"]
    set $P5045, $P5043
    goto if220_end377
  if220_else376:
    null $P5044
    set $P5045, $P5044
  if220_end377:
    unless_null $P5045, vivi_222380
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_222380:
    $P5047 = $P5045."new"()
    set $P105, $P5047
    set fb_tmp_75, _lex_param_1
    repr_defined $I5007, fb_tmp_75
    unless $I5007 goto if224_else383 
    set $P5048, fb_tmp_75["compile_time_dummy"]
    set $P5050, $P5048
    goto if224_end384
  if224_else383:
    null $P5049
    set $P5050, $P5049
  if224_end384:
    unless_null $P5050, vivi_225385
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_225385:
    defined $I5006, $P5050
    unless $I5006 goto if223_else381 
.annotate 'line', 290
    set fb_tmp_76, _lex_param_1
    repr_defined $I5008, fb_tmp_76
    unless $I5008 goto if226_else386 
    set $P5052, fb_tmp_76["compile_time_dummy"]
    set $P5054, $P5052
    goto if226_end387
  if226_else386:
    null $P5053
    set $P5054, $P5053
  if226_end387:
    unless_null $P5054, vivi_227388
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_227388:
    set $P106, $P5054
    goto if223_end382
  if223_else381:
.annotate 'line', 293
    nqp_fresh_stub $P5056, $P103
    set $P106, $P5056
    set $S5003, _lex_param_2
    assign $P106, $S5003
    setprop $P106, "STATIC_CODE_REF", $P106
    setprop $P106, "COMPILER_STUB", $P106
.annotate 'line', 301
    nqp_decontainerize $P5057, _lex_param_0
    $P5058 = $P5057."add_root_code_ref"($P106, _lex_param_1)
    set $P107, $P5058
    nqp_decontainerize $P5059, _lex_param_0
    nqp_get_sc_object $P5060, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5061, $P5059, $P5060, "%!code_stub_sc_idx"
.annotate 'line', 302
    $P5062 = _lex_param_1."cuid"()
    set $S5004, $P5062
    set $P5061[$S5004], $P107
    set _lex_param_1["compile_time_dummy"], $P106
    set $P5074, $P102
    unless $P102 goto if228_end390 
.annotate 'line', 308
    nqp_decontainerize $P5063, _lex_param_0
    nqp_get_sc_object $P5064, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5065, $P5063, $P5064, "%!code_object_fixup_list"
.annotate 'line', 309
    $P5066 = _lex_param_1."cuid"()
    set $S5005, $P5066
    set $P5065[$S5005], $P105
.annotate 'line', 310
    nqp_decontainerize $P5067, _lex_param_0
    $P5068 = $P5067."is_precompilation_mode"()
    unless $P5068 goto if229_else391 
    .const 'Sub' $P5069 = 'cuid_385_1361537952.49511' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5073, $P5070
    goto if229_end392
  if229_else391:
    .const 'Sub' $P5071 = 'cuid_386_1361537952.49511' 
    capture_lex $P5071
    $P5072 = $P5071()
    set $P5073, $P5072
  if229_end392:
    set $P5074, $P5073
  if228_end390:
  if223_end382:
.annotate 'line', 350
    nqp_decontainerize $P5075, _lex_param_0
    $P5075."add_fixup_task"($P105 :named("fixup_past"))
    unless $P102 goto if258_else439 
    .const 'Sub' $P5076 = 'cuid_387_1361537952.49511' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5142, $P5077
    goto if258_end440
  if258_else439:
.annotate 'line', 389
.annotate 'line', 392
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_60, $P5079
    get_who $P5080, pkg_lookup_tmp_60
    exists $I5010, $P5080["QAST"]
    unless $I5010 goto if294_else500 
    get_who $P5082, pkg_lookup_tmp_60
    set $P5081, $P5082["QAST"]
    set $P5084, $P5081
    goto if294_end501
  if294_else500:
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5083
  if294_end501:
    get_who $P5078, $P5084
    set fb_tmp_98, $P5078
    repr_defined $I5009, fb_tmp_98
    unless $I5009 goto if293_else498 
    set $P5085, fb_tmp_98["Op"]
    set $P5087, $P5085
    goto if293_end499
  if293_else498:
    null $P5086
    set $P5087, $P5086
  if293_end499:
    unless_null $P5087, vivi_295502
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_295502:
.annotate 'line', 394
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_61, $P5090
    get_who $P5091, pkg_lookup_tmp_61
    exists $I5012, $P5091["QAST"]
    unless $I5012 goto if297_else505 
    get_who $P5093, pkg_lookup_tmp_61
    set $P5092, $P5093["QAST"]
    set $P5095, $P5092
    goto if297_end506
  if297_else505:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if297_end506:
    get_who $P5089, $P5095
    set fb_tmp_99, $P5089
    repr_defined $I5011, fb_tmp_99
    unless $I5011 goto if296_else503 
    set $P5096, fb_tmp_99["Op"]
    set $P5098, $P5096
    goto if296_end504
  if296_else503:
    null $P5097
    set $P5098, $P5097
  if296_end504:
    unless_null $P5098, vivi_298507
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_298507:
.annotate 'line', 396
    nqp_get_sc_object $P5101, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_62, $P5101
    get_who $P5102, pkg_lookup_tmp_62
    exists $I5014, $P5102["QAST"]
    unless $I5014 goto if300_else510 
    get_who $P5104, pkg_lookup_tmp_62
    set $P5103, $P5104["QAST"]
    set $P5106, $P5103
    goto if300_end511
  if300_else510:
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5106, $P5105
  if300_end511:
    get_who $P5100, $P5106
    set fb_tmp_100, $P5100
    repr_defined $I5013, fb_tmp_100
    unless $I5013 goto if299_else508 
    set $P5107, fb_tmp_100["SVal"]
    set $P5109, $P5107
    goto if299_end509
  if299_else508:
    null $P5108
    set $P5109, $P5108
  if299_end509:
    unless_null $P5109, vivi_301512
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5110
  vivi_301512:
    nqp_decontainerize $P5111, _lex_param_0
    $P5112 = $P5111."handle"()
    $P5113 = $P5109."new"($P5112 :named("value"))
.annotate 'line', 397
    nqp_get_sc_object $P5115, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_63, $P5115
    get_who $P5116, pkg_lookup_tmp_63
    exists $I5016, $P5116["QAST"]
    unless $I5016 goto if303_else515 
    get_who $P5118, pkg_lookup_tmp_63
    set $P5117, $P5118["QAST"]
    set $P5120, $P5117
    goto if303_end516
  if303_else515:
    nqp_get_sc_object $P5119, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5120, $P5119
  if303_end516:
    get_who $P5114, $P5120
    set fb_tmp_101, $P5114
    repr_defined $I5015, fb_tmp_101
    unless $I5015 goto if302_else513 
    set $P5121, fb_tmp_101["IVal"]
    set $P5123, $P5121
    goto if302_end514
  if302_else513:
    null $P5122
    set $P5123, $P5122
  if302_end514:
    unless_null $P5123, vivi_304517
    nqp_get_sc_object $P5124, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5123, $P5124
  vivi_304517:
    $P5125 = $P5123."new"($P107 :named("value"))
    $P5126 = $P5098."new"($P5113, $P5125, "scgetcode" :named("op"))
.annotate 'line', 399
    nqp_get_sc_object $P5128, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_64, $P5128
    get_who $P5129, pkg_lookup_tmp_64
    exists $I5018, $P5129["QAST"]
    unless $I5018 goto if306_else520 
    get_who $P5131, pkg_lookup_tmp_64
    set $P5130, $P5131["QAST"]
    set $P5133, $P5130
    goto if306_end521
  if306_else520:
    nqp_get_sc_object $P5132, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5133, $P5132
  if306_end521:
    get_who $P5127, $P5133
    set fb_tmp_102, $P5127
    repr_defined $I5017, fb_tmp_102
    unless $I5017 goto if305_else518 
    set $P5134, fb_tmp_102["BVal"]
    set $P5136, $P5134
    goto if305_end519
  if305_else518:
    null $P5135
    set $P5136, $P5135
  if305_end519:
    unless_null $P5136, vivi_307522
    nqp_get_sc_object $P5137, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5136, $P5137
  vivi_307522:
    $P5138 = $P5136."new"(_lex_param_1 :named("value"))
    $P5139 = $P5087."new"($P5126, $P5138, "replacecoderef" :named("op"))
    $P105."push"($P5139)
    find_lex $P5140, "RETURN"
    $P5141 = $P5140($P106)
    set $P5142, $P5141
  if258_end440:
    goto lexotic_299
  lexotic_298:
    .get_results ($P5142)
  lexotic_299:
    .return ($P5142) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_12_1361537952.49511") :anon :lex :outer("cuid_17_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 241
    .param pmc _lex_param_0 :slurpy 
    .param pmc _lex_param_1 :slurpy :named 
    .const 'Sub' $P5039 = 'cuid_384_1361537952.49511' 
    capture_lex $P5039 
    .lex "$nqpcomp", $P101 
    .lex "$post", $P102 
    .lex "$pir", $P103 
    .lex "$pbc", $P104 
    .lex "$mainline", $P105 
    .lex "@all_subs", $P106 
    .lex "$c", $P107 
    .lex "$i", $P108 
    .lex "@args", _lex_param_0 
    .lex "%named", _lex_param_1 
    .local pmc fb_tmp_59 
    .local pmc pkg_lookup_tmp_39 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P108, $P5008
.annotate 'line', 243
    find_lex $P5009, "$past"
    find_lex $P5011, "self"
    nqp_decontainerize $P5010, $P5011
    $P5012 = $P5010."libs"()
    $P5009."unshift"($P5012)
    compreg $P5013, "nqp"
    set $P101, $P5013
.annotate 'line', 245
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_39, $P5015
    get_who $P5016, pkg_lookup_tmp_39
    exists $I5002, $P5016["QAST"]
    unless $I5002 goto if186_else314 
    get_who $P5018, pkg_lookup_tmp_39
    set $P5017, $P5018["QAST"]
    set $P5020, $P5017
    goto if186_end315
  if186_else314:
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5019
  if186_end315:
    get_who $P5014, $P5020
    set fb_tmp_59, $P5014
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if185_else312 
    set $P5021, fb_tmp_59["CompUnit"]
    set $P5023, $P5021
    goto if185_end313
  if185_else312:
    null $P5022
    set $P5023, $P5022
  if185_end313:
    unless_null $P5023, vivi_187316
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_187316:
    find_lex $P5025, "$past"
    $P5026 = $P5023."new"($P5025, "nqp" :named("hll"))
    $P5027 = $P101."post"($P5026)
    set $P102, $P5027
.annotate 'line', 246
    $P5028 = $P101."pir"($P102)
    set $P103, $P5028
.annotate 'line', 247
    $P5029 = $P101."pbc"($P103)
    set $P104, $P5029
.annotate 'line', 248
    $P5030 = $P101."init"($P104)
    set $P105, $P5030
.annotate 'line', 251
    $P5031 = $P104."all_subs"()
    set $P106, $P5031
    elements $I5003, $P106
    box $P5032, $I5003
    set $P107, $P5032
    box $P5033, 0
    set $P108, $P5033
  while188_test317:
    set $N5001, $P108
    set $N5002, $P107
    islt $I5004, $N5001, $N5002
    box $P5037, $I5004
    set $P5036, $P5037
    unless $I5004 goto while188_done321 
  while188_redo319:
    .const 'Sub' $P5034 = 'cuid_384_1361537952.49511' 
    capture_lex $P5034
    $P5035 = $P5034()
    set $P5036, $P5035
    goto while188_test317 
  while188_done321:
.annotate 'line', 277
    $P5038 = $P105(_lex_param_0 :flat, _lex_param_1 :flat :named)
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_384_1361537952.49511") :anon :lex :outer("cuid_12_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 254
    .const 'Sub' $P5017 = 'cuid_383_1361537952.49511' 
    capture_lex $P5017 
    .lex "$subid", $P101 
    .local pmc fb_tmp_60 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 255
    find_lex $P5002, "@all_subs"
    set fb_tmp_60, $P5002
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if189_else322 
    find_lex $P5004, "$i"
    set $I5002, $P5004
    set $P5003, fb_tmp_60[$I5002]
    set $P5006, $P5003
    goto if189_end323
  if189_else322:
    null $P5005
    set $P5006, $P5005
  if189_end323:
    unless_null $P5006, vivi_190324
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_190324:
    $P5008 = $P5006."get_subid"()
    set $P101, $P5008
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5012, $P5009, $P5011, "%!code_objects_to_fix_up"
    set $S5001, $P101
    exists $I5003, $P5012[$S5001]
    unless $I5003 goto if191_end326 
    .const 'Sub' $P5013 = 'cuid_383_1361537952.49511' 
    capture_lex $P5013
    $P5014 = $P5013()
  if191_end326:
    find_lex $P5015, "$i"
    set $N5002, $P5015
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    store_lex "$i", $P5016
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_383_1361537952.49511") :anon :lex :outer("cuid_384_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 256
    .const 'Sub' $P5095 = 'cuid_382_1361537952.49511' 
    capture_lex $P5095 
    .lex "$static", $P101 
    .lex "$fixup_stmts", $P102 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    .local pmc fb_tmp_63 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    .local pmc fb_tmp_69 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 260
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5006, $P5003, $P5005, "%!code_objects_to_fix_up"
    set fb_tmp_61, $P5006
    repr_defined $I5001, fb_tmp_61
    unless $I5001 goto if192_else327 
    find_lex $P5008, "$subid"
    set $S5001, $P5008
    set $P5007, fb_tmp_61[$S5001]
    set $P5010, $P5007
    goto if192_end328
  if192_else327:
    null $P5009
    set $P5010, $P5009
  if192_end328:
    unless_null $P5010, vivi_193329
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_193329:
    $P5012 = $P5010."shift"()
    set $P101, $P5012
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5016, $P5013, $P5015, "%!code_object_types"
    set fb_tmp_62, $P5016
    repr_defined $I5002, fb_tmp_62
    unless $I5002 goto if194_else330 
    find_lex $P5018, "$subid"
    set $S5002, $P5018
    set $P5017, fb_tmp_62[$S5002]
    set $P5020, $P5017
    goto if194_end331
  if194_else330:
    null $P5019
    set $P5020, $P5019
  if194_end331:
    unless_null $P5020, vivi_195332
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_195332:
    find_lex $P5022, "@all_subs"
    set fb_tmp_63, $P5022
    repr_defined $I5003, fb_tmp_63
    unless $I5003 goto if196_else333 
    find_lex $P5024, "$i"
    set $I5004, $P5024
    set $P5023, fb_tmp_63[$I5004]
    set $P5026, $P5023
    goto if196_end334
  if196_else333:
    null $P5025
    set $P5026, $P5025
  if196_end334:
    unless_null $P5026, vivi_197335
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_197335:
    setattribute $P101, $P5020, "$!do", $P5026
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5031, $P5028, $P5030, "%!code_object_types"
    set fb_tmp_64, $P5031
    repr_defined $I5005, fb_tmp_64
    unless $I5005 goto if198_else336 
    find_lex $P5033, "$subid"
    set $S5003, $P5033
    set $P5032, fb_tmp_64[$S5003]
    set $P5035, $P5032
    goto if198_end337
  if198_else336:
    null $P5034
    set $P5035, $P5034
  if198_end337:
    unless_null $P5035, vivi_199338
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_199338:
    null $P5037
    setattribute $P101, $P5035, "$!clone_callback", $P5037
    find_lex $P5042, "self"
    nqp_decontainerize $P5041, $P5042
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5044, $P5041, $P5043, "%!code_objects_to_fix_up"
    set fb_tmp_65, $P5044
    repr_defined $I5006, fb_tmp_65
    unless $I5006 goto if200_else339 
    find_lex $P5046, "$subid"
    set $S5004, $P5046
    set $P5045, fb_tmp_65[$S5004]
    set $P5048, $P5045
    goto if200_end340
  if200_else339:
    null $P5047
    set $P5048, $P5047
  if200_end340:
    unless_null $P5048, vivi_201341
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_201341:
    set $P5038, $P5048
    iter $P5040, $P5048
  for_next351:
    unless $P5040, for_done353
    shift $P5051, $P5040
  for_redo352:
    .const 'Sub' $P5050 = 'cuid_382_1361537952.49511' 
    capture_lex $P5050
    $P5038 = $P5050($P5051)
    goto for_next351
  for_done353:
    find_lex $P5052, "@all_subs"
    set fb_tmp_69, $P5052
    repr_defined $I5007, fb_tmp_69
    unless $I5007 goto if208_else354 
    find_lex $P5054, "$i"
    set $I5008, $P5054
    set $P5053, fb_tmp_69[$I5008]
    set $P5056, $P5053
    goto if208_end355
  if208_else354:
    null $P5055
    set $P5056, $P5055
  if208_end355:
    unless_null $P5056, vivi_209356
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_209356:
    find_lex $P5058, "@all_subs"
    set fb_tmp_70, $P5058
    repr_defined $I5009, fb_tmp_70
    unless $I5009 goto if210_else357 
    find_lex $P5060, "$i"
    set $I5010, $P5060
    set $P5059, fb_tmp_70[$I5010]
    set $P5062, $P5059
    goto if210_end358
  if210_else357:
    null $P5061
    set $P5062, $P5061
  if210_end358:
    unless_null $P5062, vivi_211359
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5063
  vivi_211359:
    setprop $P5056, "STATIC_CODE_REF", $P5062
.annotate 'line', 268
    find_lex $P5065, "self"
    nqp_decontainerize $P5064, $P5065
    find_lex $P5067, "self"
    nqp_decontainerize $P5066, $P5067
    nqp_get_sc_object $P5068, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5069, $P5066, $P5068, "%!code_stub_sc_idx"
    set fb_tmp_71, $P5069
    repr_defined $I5011, fb_tmp_71
    unless $I5011 goto if212_else360 
    find_lex $P5071, "$subid"
    set $S5005, $P5071
    set $P5070, fb_tmp_71[$S5005]
    set $P5073, $P5070
    goto if212_end361
  if212_else360:
    null $P5072
    set $P5073, $P5072
  if212_end361:
    unless_null $P5073, vivi_213362
    nqp_get_sc_object $P5074, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5073, $P5074
  vivi_213362:
    find_lex $P5075, "@all_subs"
    set fb_tmp_72, $P5075
    repr_defined $I5012, fb_tmp_72
    unless $I5012 goto if214_else363 
    find_lex $P5077, "$i"
    set $I5013, $P5077
    set $P5076, fb_tmp_72[$I5013]
    set $P5079, $P5076
    goto if214_end364
  if214_else363:
    null $P5078
    set $P5079, $P5078
  if214_end364:
    unless_null $P5079, vivi_215365
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_215365:
    $P5064."update_root_code_ref"($P5073, $P5079)
    find_lex $P5082, "self"
    nqp_decontainerize $P5081, $P5082
    nqp_get_sc_object $P5083, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5084, $P5081, $P5083, "%!code_object_fixup_list"
    set fb_tmp_73, $P5084
    repr_defined $I5014, fb_tmp_73
    unless $I5014 goto if216_else366 
    find_lex $P5086, "$subid"
    set $S5006, $P5086
    set $P5085, fb_tmp_73[$S5006]
    set $P5088, $P5085
    goto if216_end367
  if216_else366:
    null $P5087
    set $P5088, $P5087
  if216_end367:
    unless_null $P5088, vivi_217368
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_217368:
    set $P102, $P5088
    new $P5093, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5093, while218_handlers372
    push_eh $P5093
  while218_test369:
    $P5090 = $P102."list"()
    set $N5001, $P5090
    box $P5094, $N5001
    set $P5092, $P5094
    unless $N5001 goto while218_done373 
  while218_redo371:
.annotate 'line', 272
    $P5091 = $P102."shift"()
    set $P5092, $P5091
    goto while218_test369 
  while218_handlers372:
    .get_results ($P5093)
    pop_upto_eh $P5093
    getattribute $P5093, $P5093, 'type'
    eq $P5093, .CONTROL_LOOP_NEXT, while218_test369
    eq $P5093, .CONTROL_LOOP_REDO, while218_redo371
  while218_done373:
    pop_eh 
    .return ($P5092) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_382_1361537952.49511") :anon :lex :outer("cuid_383_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 263
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5004, $P5001, $P5003, "%!code_object_types"
    set fb_tmp_66, $P5004
    repr_defined $I5001, fb_tmp_66
    unless $I5001 goto if202_else342 
    find_lex $P5006, "$subid"
    set $S5001, $P5006
    set $P5005, fb_tmp_66[$S5001]
    set $P5008, $P5005
    goto if202_end343
  if202_else342:
    null $P5007
    set $P5008, $P5007
  if202_end343:
    unless_null $P5008, vivi_203344
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_203344:
    find_lex $P5011, "@all_subs"
    set fb_tmp_67, $P5011
    repr_defined $I5002, fb_tmp_67
    unless $I5002 goto if204_else345 
    find_lex $P5013, "$i"
    set $I5003, $P5013
    set $P5012, fb_tmp_67[$I5003]
    set $P5015, $P5012
    goto if204_end346
  if204_else345:
    null $P5014
    set $P5015, $P5014
  if204_end346:
    unless_null $P5015, vivi_205347
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_205347:
    repr_clone $P5010, $P5015
    setattribute _lex_param_0, $P5008, "$!do", $P5010
    find_lex $P5018, "self"
    nqp_decontainerize $P5017, $P5018
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5020, $P5017, $P5019, "%!code_object_types"
    set fb_tmp_68, $P5020
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if206_else348 
    find_lex $P5022, "$subid"
    set $S5002, $P5022
    set $P5021, fb_tmp_68[$S5002]
    set $P5024, $P5021
    goto if206_end349
  if206_else348:
    null $P5023
    set $P5024, $P5023
  if206_end349:
    unless_null $P5024, vivi_207350
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_207350:
    null $P5026
    setattribute _lex_param_0, $P5024, "$!clone_callback", $P5026
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_385_1361537952.49511") :anon :lex :outer("cuid_17_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 310
    .const 'Sub' $P5012 = 'cuid_13_1361537952.49511' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_14_1361537952.49511' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_13_1361537952.49511' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_14_1361537952.49511' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_13_1361537952.49511") :anon :lex :outer("cuid_385_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 311
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$do", $P101 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_77 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 312
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5005, $P5002, $P5004, "%!code_objects_to_fix_up"
    set fb_tmp_77, $P5005
    repr_defined $I5001, fb_tmp_77
    unless $I5001 goto if230_else393 
    find_lex $P5007, "$past"
    $P5008 = $P5007."cuid"()
    set $S5001, $P5008
    set $P5006, fb_tmp_77[$S5001]
    set $P5010, $P5006
    goto if230_end394
  if230_else393:
    null $P5009
    set $P5010, $P5009
  if230_end394:
    unless_null $P5010, vivi_231395
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_231395:
    $P5010."push"(_lex_param_2)
    find_lex $P5012, "$code_type"
    null $P5013
    setattribute _lex_param_2, $P5012, "$!clone_callback", $P5013
    find_lex $P5015, "$code_type"
    getattribute $P5014, _lex_param_2, $P5015, "$!do"
    set $P101, $P5014
    setprop $P101, "COMPILER_STUB", $P101
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_14_1361537952.49511") :anon :lex :outer("cuid_385_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 318

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_386_1361537952.49511") :anon :lex :outer("cuid_17_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 322
    .const 'Sub' $P5012 = 'cuid_15_1361537952.49511' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_16_1361537952.49511' 
    capture_lex $P5012 
    .lex "$cb", $P101 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    .const 'Sub' $P5003 = 'cuid_15_1361537952.49511' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    set $P101, $P5002
    find_lex $P5004, "$code_obj"
    find_lex $P5005, "$code_type"
    setattribute $P5004, $P5005, "$!clone_callback", $P101
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5009, $P5006, $P5008, "@!clearup_tasks"
    .const 'Sub' $P5011 = 'cuid_16_1361537952.49511' 
    capture_lex $P5011
    newclosure $P5010, $P5011
    push $P5009, $P5010
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_15_1361537952.49511") :anon :lex :outer("cuid_386_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 323
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$orig", _lex_param_0 
    .lex "$clone", _lex_param_1 
    .lex "$code_obj", _lex_param_2 
    .local pmc fb_tmp_78 
    .local pmc pkg_lookup_tmp_41 
    .local pmc fb_tmp_79 
    .local pmc pkg_lookup_tmp_42 
    .local pmc fb_tmp_80 
    .local pmc pkg_lookup_tmp_43 
    .local pmc fb_tmp_81 
    .local pmc pkg_lookup_tmp_44 
    .local pmc fb_tmp_82 
    .local pmc pkg_lookup_tmp_45 
    .local pmc fb_tmp_83 
    .local pmc pkg_lookup_tmp_46 
    .local pmc fb_tmp_84 
    .local pmc pkg_lookup_tmp_47 
    .local pmc fb_tmp_85 
    .local pmc pkg_lookup_tmp_48 
    .local pmc fb_tmp_86 
.annotate 'line', 325
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    $P5001."add_object"(_lex_param_2)
.annotate 'line', 326
    find_lex $P5003, "$fixups"
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_41, $P5005
    get_who $P5006, pkg_lookup_tmp_41
    exists $I5002, $P5006["QAST"]
    unless $I5002 goto if233_else398 
    get_who $P5008, pkg_lookup_tmp_41
    set $P5007, $P5008["QAST"]
    set $P5010, $P5007
    goto if233_end399
  if233_else398:
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5009
  if233_end399:
    get_who $P5004, $P5010
    set fb_tmp_78, $P5004
    repr_defined $I5001, fb_tmp_78
    unless $I5001 goto if232_else396 
    set $P5011, fb_tmp_78["Op"]
    set $P5013, $P5011
    goto if232_end397
  if232_else396:
    null $P5012
    set $P5013, $P5012
  if232_end397:
    unless_null $P5013, vivi_234400
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_234400:
.annotate 'line', 328
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_42, $P5016
    get_who $P5017, pkg_lookup_tmp_42
    exists $I5004, $P5017["QAST"]
    unless $I5004 goto if236_else403 
    get_who $P5019, pkg_lookup_tmp_42
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if236_end404
  if236_else403:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if236_end404:
    get_who $P5015, $P5021
    set fb_tmp_79, $P5015
    repr_defined $I5003, fb_tmp_79
    unless $I5003 goto if235_else401 
    set $P5022, fb_tmp_79["Op"]
    set $P5024, $P5022
    goto if235_end402
  if235_else401:
    null $P5023
    set $P5024, $P5023
  if235_end402:
    unless_null $P5024, vivi_237405
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_237405:
.annotate 'line', 330
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_43, $P5027
    get_who $P5028, pkg_lookup_tmp_43
    exists $I5006, $P5028["QAST"]
    unless $I5006 goto if239_else408 
    get_who $P5030, pkg_lookup_tmp_43
    set $P5029, $P5030["QAST"]
    set $P5032, $P5029
    goto if239_end409
  if239_else408:
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5031
  if239_end409:
    get_who $P5026, $P5032
    set fb_tmp_80, $P5026
    repr_defined $I5005, fb_tmp_80
    unless $I5005 goto if238_else406 
    set $P5033, fb_tmp_80["WVal"]
    set $P5035, $P5033
    goto if238_end407
  if238_else406:
    null $P5034
    set $P5035, $P5034
  if238_end407:
    unless_null $P5035, vivi_240410
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_240410:
    $P5037 = $P5035."new"(_lex_param_2 :named("value"))
.annotate 'line', 331
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_44, $P5039
    get_who $P5040, pkg_lookup_tmp_44
    exists $I5008, $P5040["QAST"]
    unless $I5008 goto if242_else413 
    get_who $P5042, pkg_lookup_tmp_44
    set $P5041, $P5042["QAST"]
    set $P5044, $P5041
    goto if242_end414
  if242_else413:
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5043
  if242_end414:
    get_who $P5038, $P5044
    set fb_tmp_81, $P5038
    repr_defined $I5007, fb_tmp_81
    unless $I5007 goto if241_else411 
    set $P5045, fb_tmp_81["WVal"]
    set $P5047, $P5045
    goto if241_end412
  if241_else411:
    null $P5046
    set $P5047, $P5046
  if241_end412:
    unless_null $P5047, vivi_243415
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_243415:
    find_lex $P5049, "$code_type"
    $P5050 = $P5047."new"($P5049 :named("value"))
.annotate 'line', 332
    nqp_get_sc_object $P5052, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_45, $P5052
    get_who $P5053, pkg_lookup_tmp_45
    exists $I5010, $P5053["QAST"]
    unless $I5010 goto if245_else418 
    get_who $P5055, pkg_lookup_tmp_45
    set $P5054, $P5055["QAST"]
    set $P5057, $P5054
    goto if245_end419
  if245_else418:
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5056
  if245_end419:
    get_who $P5051, $P5057
    set fb_tmp_82, $P5051
    repr_defined $I5009, fb_tmp_82
    unless $I5009 goto if244_else416 
    set $P5058, fb_tmp_82["SVal"]
    set $P5060, $P5058
    goto if244_end417
  if244_else416:
    null $P5059
    set $P5060, $P5059
  if244_end417:
    unless_null $P5060, vivi_246420
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  vivi_246420:
    $P5062 = $P5060."new"("$!do" :named("value"))
.annotate 'line', 333
    nqp_get_sc_object $P5064, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_46, $P5064
    get_who $P5065, pkg_lookup_tmp_46
    exists $I5012, $P5065["QAST"]
    unless $I5012 goto if248_else423 
    get_who $P5067, pkg_lookup_tmp_46
    set $P5066, $P5067["QAST"]
    set $P5069, $P5066
    goto if248_end424
  if248_else423:
    nqp_get_sc_object $P5068, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5068
  if248_end424:
    get_who $P5063, $P5069
    set fb_tmp_83, $P5063
    repr_defined $I5011, fb_tmp_83
    unless $I5011 goto if247_else421 
    set $P5070, fb_tmp_83["Op"]
    set $P5072, $P5070
    goto if247_end422
  if247_else421:
    null $P5071
    set $P5072, $P5071
  if247_end422:
    unless_null $P5072, vivi_249425
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5073
  vivi_249425:
    nqp_get_sc_object $P5075, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_47, $P5075
    get_who $P5076, pkg_lookup_tmp_47
    exists $I5014, $P5076["QAST"]
    unless $I5014 goto if251_else428 
    get_who $P5078, pkg_lookup_tmp_47
    set $P5077, $P5078["QAST"]
    set $P5080, $P5077
    goto if251_end429
  if251_else428:
    nqp_get_sc_object $P5079, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5079
  if251_end429:
    get_who $P5074, $P5080
    set fb_tmp_84, $P5074
    repr_defined $I5013, fb_tmp_84
    unless $I5013 goto if250_else426 
    set $P5081, fb_tmp_84["BVal"]
    set $P5083, $P5081
    goto if250_end427
  if250_else426:
    null $P5082
    set $P5083, $P5082
  if250_end427:
    unless_null $P5083, vivi_252430
    nqp_get_sc_object $P5084, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5083, $P5084
  vivi_252430:
    find_lex $P5085, "$past"
    $P5086 = $P5083."new"($P5085 :named("value"))
    $P5087 = $P5072."new"($P5086, "clone" :named("op"))
    $P5088 = $P5024."new"($P5037, $P5050, $P5062, $P5087, "bindattr" :named("op"))
.annotate 'line', 335
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_48, $P5090
    get_who $P5091, pkg_lookup_tmp_48
    exists $I5016, $P5091["QAST"]
    unless $I5016 goto if254_else433 
    get_who $P5093, pkg_lookup_tmp_48
    set $P5092, $P5093["QAST"]
    set $P5095, $P5092
    goto if254_end434
  if254_else433:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if254_end434:
    get_who $P5089, $P5095
    set fb_tmp_85, $P5089
    repr_defined $I5015, fb_tmp_85
    unless $I5015 goto if253_else431 
    set $P5096, fb_tmp_85["WVal"]
    set $P5098, $P5096
    goto if253_end432
  if253_else431:
    null $P5097
    set $P5098, $P5097
  if253_end432:
    unless_null $P5098, vivi_255435
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_255435:
    $P5100 = $P5098."new"(_lex_param_2 :named("value"))
    $P5101 = $P5013."new"($P5088, $P5100, "setcodeobj" :named("op"))
    $P5003."push"($P5101)
.annotate 'line', 339
    find_lex $P5103, "self"
    nqp_decontainerize $P5102, $P5103
    nqp_get_sc_object $P5104, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5105, $P5102, $P5104, "%!code_objects_to_fix_up"
    set fb_tmp_86, $P5105
    repr_defined $I5017, fb_tmp_86
    unless $I5017 goto if256_else436 
    find_lex $P5107, "$past"
    $P5108 = $P5107."cuid"()
    set $S5001, $P5108
    set $P5106, fb_tmp_86[$S5001]
    set $P5110, $P5106
    goto if256_end437
  if256_else436:
    null $P5109
    set $P5110, $P5109
  if256_end437:
    unless_null $P5110, vivi_257438
    nqp_get_sc_object $P5111, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5110, $P5111
  vivi_257438:
    $P5112 = $P5110."push"(_lex_param_2)
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_16_1361537952.49511") :anon :lex :outer("cuid_386_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 342

    find_lex $P5001, "$code_obj"
    find_lex $P5002, "$code_type"
    null $P5003
    setattribute $P5001, $P5002, "$!clone_callback", $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_387_1361537952.49511") :anon :lex :outer("cuid_17_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 354
    .lex "$slot", $P101 
    .local pmc fb_tmp_87 
    .local pmc pkg_lookup_tmp_49 
    .local pmc fb_tmp_88 
    .local pmc pkg_lookup_tmp_50 
    .local pmc fb_tmp_89 
    .local pmc pkg_lookup_tmp_51 
    .local pmc fb_tmp_90 
    .local pmc pkg_lookup_tmp_52 
    .local pmc fb_tmp_91 
    .local pmc pkg_lookup_tmp_53 
    .local pmc fb_tmp_92 
    .local pmc pkg_lookup_tmp_54 
    .local pmc fb_tmp_93 
    .local pmc pkg_lookup_tmp_55 
    .local pmc fb_tmp_94 
    .local pmc pkg_lookup_tmp_56 
    .local pmc fb_tmp_95 
    .local pmc pkg_lookup_tmp_57 
    .local pmc fb_tmp_96 
    .local pmc pkg_lookup_tmp_58 
    .local pmc fb_tmp_97 
    .local pmc pkg_lookup_tmp_59 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_lex $P5002, "$code_obj"
    find_lex $P5003, "$code_type"
    find_lex $P5004, "$dummy"
    setattribute $P5002, $P5003, "$!do", $P5004
    find_lex $P5005, "$is_dispatcher"
    unless $P5005 goto if259_end442 
    find_lex $P5006, "$code_obj"
    find_lex $P5007, "$code_type"
    new $P5008, 'ResizablePMCArray'
    setattribute $P5006, $P5007, "$!dispatchees", $P5008
  if259_end442:
.annotate 'line', 359
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    find_lex $P5011, "$code_obj"
    $P5012 = $P5009."add_object"($P5011)
    set $P101, $P5012
.annotate 'line', 362
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
.annotate 'line', 363
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_49, $P5016
    get_who $P5017, pkg_lookup_tmp_49
    exists $I5002, $P5017["QAST"]
    unless $I5002 goto if261_else445 
    get_who $P5019, pkg_lookup_tmp_49
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if261_end446
  if261_else445:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if261_end446:
    get_who $P5015, $P5021
    set fb_tmp_87, $P5015
    repr_defined $I5001, fb_tmp_87
    unless $I5001 goto if260_else443 
    set $P5022, fb_tmp_87["Op"]
    set $P5024, $P5022
    goto if260_end444
  if260_else443:
    null $P5023
    set $P5024, $P5023
  if260_end444:
    unless_null $P5024, vivi_262447
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_262447:
.annotate 'line', 365
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_50, $P5027
    get_who $P5028, pkg_lookup_tmp_50
    exists $I5004, $P5028["QAST"]
    unless $I5004 goto if264_else450 
    get_who $P5030, pkg_lookup_tmp_50
    set $P5029, $P5030["QAST"]
    set $P5032, $P5029
    goto if264_end451
  if264_else450:
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5031
  if264_end451:
    get_who $P5026, $P5032
    set fb_tmp_88, $P5026
    repr_defined $I5003, fb_tmp_88
    unless $I5003 goto if263_else448 
    set $P5033, fb_tmp_88["BVal"]
    set $P5035, $P5033
    goto if263_end449
  if263_else448:
    null $P5034
    set $P5035, $P5034
  if263_end449:
    unless_null $P5035, vivi_265452
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_265452:
    find_lex $P5037, "$past"
    $P5038 = $P5035."new"($P5037 :named("value"))
.annotate 'line', 366
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_51, $P5040
    get_who $P5041, pkg_lookup_tmp_51
    exists $I5006, $P5041["QAST"]
    unless $I5006 goto if267_else455 
    get_who $P5043, pkg_lookup_tmp_51
    set $P5042, $P5043["QAST"]
    set $P5045, $P5042
    goto if267_end456
  if267_else455:
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5044
  if267_end456:
    get_who $P5039, $P5045
    set fb_tmp_89, $P5039
    repr_defined $I5005, fb_tmp_89
    unless $I5005 goto if266_else453 
    set $P5046, fb_tmp_89["WVal"]
    set $P5048, $P5046
    goto if266_end454
  if266_else453:
    null $P5047
    set $P5048, $P5047
  if266_end454:
    unless_null $P5048, vivi_268457
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_268457:
    find_lex $P5050, "$code_obj"
    $P5051 = $P5048."new"($P5050 :named("value"))
    $P5052 = $P5024."new"($P5038, $P5051, "setcodeobj" :named("op"))
    $P5013."add_fixup_task"($P5052 :named("deserialize_past"))
.annotate 'line', 370
    find_lex $P5053, "$fixups"
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_52, $P5055
    get_who $P5056, pkg_lookup_tmp_52
    exists $I5008, $P5056["QAST"]
    unless $I5008 goto if270_else460 
    get_who $P5058, pkg_lookup_tmp_52
    set $P5057, $P5058["QAST"]
    set $P5060, $P5057
    goto if270_end461
  if270_else460:
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5059
  if270_end461:
    get_who $P5054, $P5060
    set fb_tmp_90, $P5054
    repr_defined $I5007, fb_tmp_90
    unless $I5007 goto if269_else458 
    set $P5061, fb_tmp_90["Op"]
    set $P5063, $P5061
    goto if269_end459
  if269_else458:
    null $P5062
    set $P5063, $P5062
  if269_end459:
    unless_null $P5063, vivi_271462
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_271462:
.annotate 'line', 372
    nqp_get_sc_object $P5066, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_53, $P5066
    get_who $P5067, pkg_lookup_tmp_53
    exists $I5010, $P5067["QAST"]
    unless $I5010 goto if273_else465 
    get_who $P5069, pkg_lookup_tmp_53
    set $P5068, $P5069["QAST"]
    set $P5071, $P5068
    goto if273_end466
  if273_else465:
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5070
  if273_end466:
    get_who $P5065, $P5071
    set fb_tmp_91, $P5065
    repr_defined $I5009, fb_tmp_91
    unless $I5009 goto if272_else463 
    set $P5072, fb_tmp_91["WVal"]
    set $P5074, $P5072
    goto if272_end464
  if272_else463:
    null $P5073
    set $P5074, $P5073
  if272_end464:
    unless_null $P5074, vivi_274467
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5075
  vivi_274467:
    find_lex $P5076, "$code_obj"
    $P5077 = $P5074."new"($P5076 :named("value"))
.annotate 'line', 373
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_54, $P5079
    get_who $P5080, pkg_lookup_tmp_54
    exists $I5012, $P5080["QAST"]
    unless $I5012 goto if276_else470 
    get_who $P5082, pkg_lookup_tmp_54
    set $P5081, $P5082["QAST"]
    set $P5084, $P5081
    goto if276_end471
  if276_else470:
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5083
  if276_end471:
    get_who $P5078, $P5084
    set fb_tmp_92, $P5078
    repr_defined $I5011, fb_tmp_92
    unless $I5011 goto if275_else468 
    set $P5085, fb_tmp_92["WVal"]
    set $P5087, $P5085
    goto if275_end469
  if275_else468:
    null $P5086
    set $P5087, $P5086
  if275_end469:
    unless_null $P5087, vivi_277472
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_277472:
    find_lex $P5089, "$code_type"
    $P5090 = $P5087."new"($P5089 :named("value"))
.annotate 'line', 374
    nqp_get_sc_object $P5092, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_55, $P5092
    get_who $P5093, pkg_lookup_tmp_55
    exists $I5014, $P5093["QAST"]
    unless $I5014 goto if279_else475 
    get_who $P5095, pkg_lookup_tmp_55
    set $P5094, $P5095["QAST"]
    set $P5097, $P5094
    goto if279_end476
  if279_else475:
    nqp_get_sc_object $P5096, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5096
  if279_end476:
    get_who $P5091, $P5097
    set fb_tmp_93, $P5091
    repr_defined $I5013, fb_tmp_93
    unless $I5013 goto if278_else473 
    set $P5098, fb_tmp_93["SVal"]
    set $P5100, $P5098
    goto if278_end474
  if278_else473:
    null $P5099
    set $P5100, $P5099
  if278_end474:
    unless_null $P5100, vivi_280477
    nqp_get_sc_object $P5101, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5100, $P5101
  vivi_280477:
    $P5102 = $P5100."new"("$!do" :named("value"))
.annotate 'line', 375
    nqp_get_sc_object $P5104, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_56, $P5104
    get_who $P5105, pkg_lookup_tmp_56
    exists $I5016, $P5105["QAST"]
    unless $I5016 goto if282_else480 
    get_who $P5107, pkg_lookup_tmp_56
    set $P5106, $P5107["QAST"]
    set $P5109, $P5106
    goto if282_end481
  if282_else480:
    nqp_get_sc_object $P5108, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5108
  if282_end481:
    get_who $P5103, $P5109
    set fb_tmp_94, $P5103
    repr_defined $I5015, fb_tmp_94
    unless $I5015 goto if281_else478 
    set $P5110, fb_tmp_94["BVal"]
    set $P5112, $P5110
    goto if281_end479
  if281_else478:
    null $P5111
    set $P5112, $P5111
  if281_end479:
    unless_null $P5112, vivi_283482
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5112, $P5113
  vivi_283482:
    find_lex $P5114, "$past"
    $P5115 = $P5112."new"($P5114 :named("value"))
    $P5116 = $P5063."new"($P5077, $P5090, $P5102, $P5115, "bindattr" :named("op"))
    $P5053."push"($P5116)
.annotate 'line', 377
    find_lex $P5117, "$fixups"
    nqp_get_sc_object $P5119, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_57, $P5119
    get_who $P5120, pkg_lookup_tmp_57
    exists $I5018, $P5120["QAST"]
    unless $I5018 goto if285_else485 
    get_who $P5122, pkg_lookup_tmp_57
    set $P5121, $P5122["QAST"]
    set $P5124, $P5121
    goto if285_end486
  if285_else485:
    nqp_get_sc_object $P5123, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5124, $P5123
  if285_end486:
    get_who $P5118, $P5124
    set fb_tmp_95, $P5118
    repr_defined $I5017, fb_tmp_95
    unless $I5017 goto if284_else483 
    set $P5125, fb_tmp_95["Op"]
    set $P5127, $P5125
    goto if284_end484
  if284_else483:
    null $P5126
    set $P5127, $P5126
  if284_end484:
    unless_null $P5127, vivi_286487
    nqp_get_sc_object $P5128, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5127, $P5128
  vivi_286487:
.annotate 'line', 379
    nqp_get_sc_object $P5130, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_58, $P5130
    get_who $P5131, pkg_lookup_tmp_58
    exists $I5020, $P5131["QAST"]
    unless $I5020 goto if288_else490 
    get_who $P5133, pkg_lookup_tmp_58
    set $P5132, $P5133["QAST"]
    set $P5135, $P5132
    goto if288_end491
  if288_else490:
    nqp_get_sc_object $P5134, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5135, $P5134
  if288_end491:
    get_who $P5129, $P5135
    set fb_tmp_96, $P5129
    repr_defined $I5019, fb_tmp_96
    unless $I5019 goto if287_else488 
    set $P5136, fb_tmp_96["BVal"]
    set $P5138, $P5136
    goto if287_end489
  if287_else488:
    null $P5137
    set $P5138, $P5137
  if287_end489:
    unless_null $P5138, vivi_289492
    nqp_get_sc_object $P5139, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5138, $P5139
  vivi_289492:
    find_lex $P5140, "$past"
    $P5141 = $P5138."new"($P5140 :named("value"))
.annotate 'line', 380
    nqp_get_sc_object $P5143, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_59, $P5143
    get_who $P5144, pkg_lookup_tmp_59
    exists $I5022, $P5144["QAST"]
    unless $I5022 goto if291_else495 
    get_who $P5146, pkg_lookup_tmp_59
    set $P5145, $P5146["QAST"]
    set $P5148, $P5145
    goto if291_end496
  if291_else495:
    nqp_get_sc_object $P5147, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5148, $P5147
  if291_end496:
    get_who $P5142, $P5148
    set fb_tmp_97, $P5142
    repr_defined $I5021, fb_tmp_97
    unless $I5021 goto if290_else493 
    set $P5149, fb_tmp_97["WVal"]
    set $P5151, $P5149
    goto if290_end494
  if290_else493:
    null $P5150
    set $P5151, $P5150
  if290_end494:
    unless_null $P5151, vivi_292497
    nqp_get_sc_object $P5152, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5151, $P5152
  vivi_292497:
    find_lex $P5153, "$code_obj"
    $P5154 = $P5151."new"($P5153 :named("value"))
    $P5155 = $P5127."new"($P5141, $P5154, "setcodeobj" :named("op"))
    $P5117."push"($P5155)
    find_lex $P5157, "self"
    nqp_decontainerize $P5156, $P5157
    nqp_get_sc_object $P5158, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5159, $P5156, $P5158, "%!code_objects_to_fix_up"
.annotate 'line', 384
    find_lex $P5160, "$past"
    $P5161 = $P5160."cuid"()
    set $S5001, $P5161
    new $P5162, 'ResizablePMCArray'
    find_lex $P5163, "$code_obj"
    push $P5162, $P5163
    set $P5159[$S5001], $P5162
    find_lex $P5165, "self"
    nqp_decontainerize $P5164, $P5165
    nqp_get_sc_object $P5166, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5167, $P5164, $P5166, "%!code_object_types"
.annotate 'line', 385
    find_lex $P5168, "$past"
    $P5169 = $P5168."cuid"()
    set $S5002, $P5169
    find_lex $P5170, "$code_type"
    set $P5167[$S5002], $P5170
    find_lex $P5171, "$code_obj"
    .return ($P5171) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_create_mo" :subid("cuid_18_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 407
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("name") :optional 
    .param int haz_param_2 :opt_flag 
    .param pmc _lex_param_3 :named("repr") :optional 
    .param int haz_param_3 :opt_flag 
    .lex "%args", $P101 
    .lex "$mo", $P102 
    .lex "self", _lex_param_0 
    .lex "$how", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$repr", _lex_param_3 
    if haz_param_2, default530
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_2, $P5007
  default530:
    if haz_param_3, default531
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_3, $P5008
  default531:
    new $P5001, 'Hash'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_524
    .lex "RETURN", $P103
    defined $I5001, _lex_param_2
    unless $I5001 goto if308_end527 
.annotate 'line', 410
    set $P101["name"], _lex_param_2
  if308_end527:
    defined $I5002, _lex_param_3
    unless $I5002 goto if309_end529 
.annotate 'line', 411
    set $P101["repr"], _lex_param_3
  if309_end529:
.annotate 'line', 412
    $P5003 = _lex_param_1."new_type"($P101 :flat :named)
    set $P102, $P5003
.annotate 'line', 413
    nqp_decontainerize $P5004, _lex_param_0
    $P5004."add_object"($P102)
    find_lex $P5005, "RETURN"
    $P5006 = $P5005($P102)
    goto lexotic_525
  lexotic_524:
    .get_results ($P5006)
  lexotic_525:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_attribute" :subid("cuid_19_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 424
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "$attr", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_attr", _lex_param_2 
    .lex "%lit_args", _lex_param_3 
    .lex "%obj_args", _lex_param_4 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 425
    $P5002 = _lex_param_2."new"(_lex_param_3 :flat :named, _lex_param_4 :flat :named)
    set $P101, $P5002
.annotate 'line', 426
    get_how $P5003, _lex_param_1
    $P5003."add_attribute"(_lex_param_1, $P101)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_method" :subid("cuid_20_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 431
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$name", _lex_param_3 
    .lex "$code", _lex_param_4 
.annotate 'line', 432
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3, _lex_param_4)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "set_routine_signature" :subid("cuid_21_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sig_type", $P101 
    .lex "$code_type", $P102 
    .lex "$sig_obj", $P103 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$types", _lex_param_2 
    .lex "$definednesses", _lex_param_3 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 437
    nqp_decontainerize $P5004, _lex_param_0
    new $P5005, 'ResizablePMCArray'
    box $P5006, "NQPSignature"
    push $P5005, $P5006
    $P5007 = $P5004."find_sym"($P5005)
    set $P101, $P5007
.annotate 'line', 438
    nqp_decontainerize $P5008, _lex_param_0
    new $P5009, 'ResizablePMCArray'
    box $P5010, "NQPRoutine"
    push $P5009, $P5010
    $P5011 = $P5008."find_sym"($P5009)
    set $P102, $P5011
    repr_instance_of $P5012, $P101
    set $P103, $P5012
    setattribute $P103, $P101, "$!types", _lex_param_2
    setattribute $P103, $P101, "$!definednesses", _lex_param_3
    setattribute _lex_param_1, $P102, "$!signature", $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_set_body_block" :subid("cuid_22_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 446
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$body_code_obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$body_past", _lex_param_2 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 448
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_2."name"()
    $P5004 = $P5002."create_code"(_lex_param_2, $P5003, 0)
    set $P101, $P5004
.annotate 'line', 451
    get_how $P5005, _lex_param_1
    $P5006 = $P5005."set_body_block"(_lex_param_1, $P101)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parent_or_role" :subid("cuid_23_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 455
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$meta_method_name", _lex_param_2 
    .lex "$to_add", _lex_param_3 
.annotate 'line', 456
    get_how $P5001, _lex_param_1
    set $S5001, _lex_param_2
    $P5002 = $P5001.$S5001(_lex_param_1, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_add_parrot_vtable_handler_mapping" :subid("cuid_24_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 459
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
    .lex "$name", _lex_param_2 
    .lex "$att_name", _lex_param_3 
.annotate 'line', 460
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."add_parrot_vtable_handler_mapping"(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "pkg_compose" :subid("cuid_25_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$obj", _lex_param_1 
.annotate 'line', 465
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."compose"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "run_begin_block" :subid("cuid_26_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 469
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5054 = 'cuid_389_1361537952.49511' 
    capture_lex $P5054 
    .lex "$wrapper", $P101 
    .lex "%seen", $P102 
    .lex "$i", $P103 
    .lex "$code", $P104 
    .lex "$old_global", $P105 
    .lex "self", _lex_param_0 
    .lex "$past", _lex_param_1 
    .local pmc fb_tmp_103 
    .local pmc pkg_lookup_tmp_65 
    .local pmc fb_tmp_104 
    .local pmc pkg_lookup_tmp_66 
    .local pmc fb_tmp_112 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
    root_new $P106, ['parrot';'Continuation']
    set_label $P106, lexotic_532
    .lex "RETURN", $P106
.annotate 'line', 471
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_65, $P5007
    get_who $P5008, pkg_lookup_tmp_65
    exists $I5002, $P5008["QAST"]
    unless $I5002 goto if311_else536 
    get_who $P5010, pkg_lookup_tmp_65
    set $P5009, $P5010["QAST"]
    set $P5012, $P5009
    goto if311_end537
  if311_else536:
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5011
  if311_end537:
    get_who $P5006, $P5012
    set fb_tmp_103, $P5006
    repr_defined $I5001, fb_tmp_103
    unless $I5001 goto if310_else534 
    set $P5013, fb_tmp_103["Block"]
    set $P5015, $P5013
    goto if310_end535
  if310_else534:
    null $P5014
    set $P5015, $P5014
  if310_end535:
    unless_null $P5015, vivi_312538
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_312538:
.annotate 'line', 472
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_66, $P5018
    get_who $P5019, pkg_lookup_tmp_66
    exists $I5004, $P5019["QAST"]
    unless $I5004 goto if314_else541 
    get_who $P5021, pkg_lookup_tmp_66
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if314_end542
  if314_else541:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if314_end542:
    get_who $P5017, $P5023
    set fb_tmp_104, $P5017
    repr_defined $I5003, fb_tmp_104
    unless $I5003 goto if313_else539 
    set $P5024, fb_tmp_104["Stmts"]
    set $P5026, $P5024
    goto if313_end540
  if313_else539:
    null $P5025
    set $P5026, $P5025
  if313_end540:
    unless_null $P5026, vivi_315543
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_315543:
    $P5028 = $P5026."new"()
    $P5029 = $P5015."new"($P5028, _lex_param_1)
    set $P101, $P5029
    nqp_decontainerize $P5030, _lex_param_0
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5032, $P5030, $P5031, "@!BLOCKS"
    set $N5001, $P5032
    box $P5033, $N5001
    set $P103, $P5033
  while316_test544:
    set $N5002, $P103
    set $N5003, 0
    isgt $I5005, $N5002, $N5003
    box $P5037, $I5005
    set $P5036, $P5037
    unless $I5005 goto while316_done548 
  while316_redo546:
    .const 'Sub' $P5034 = 'cuid_389_1361537952.49511' 
    capture_lex $P5034
    $P5035 = $P5034()
    set $P5036, $P5035
    goto while316_test544 
  while316_done548:
.annotate 'line', 495
    nqp_decontainerize $P5038, _lex_param_0
    $P5039 = $P5038."create_code"($P101, "BEGIN block", 0)
    set $P104, $P5039
    new $P5041, 'ResizablePMCArray'
    get_hll_global $P5040, $P5041, "GLOBAL"
    set $P105, $P5040
    new $P5042, 'ResizablePMCArray'
    find_dynamic_lex $P5043, "$*GLOBALish"
    unless_null $P5043, fallback585
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5044, $P5045
    set fb_tmp_112, $P5044
    repr_defined $I5006, fb_tmp_112
    unless $I5006 goto if338_else586 
    set $P5046, fb_tmp_112["$GLOBALish"]
    set $P5048, $P5046
    goto if338_end587
  if338_else586:
    null $P5047
    set $P5048, $P5047
  if338_end587:
    unless_null $P5048, vivi_339588
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_339588:
    unless_null $P5048, vivi_340589
    die "Contextual $*GLOBALish not found"
    box $P5050, "Contextual $*GLOBALish not found"
    set $P5048, $P5050
  vivi_340589:
    set $P5043, $P5048
  fallback585:
    set_hll_global $P5042, "GLOBAL", $P5043
.annotate 'line', 498
    $P104()
    new $P5051, 'ResizablePMCArray'
    set_hll_global $P5051, "GLOBAL", $P105
.annotate 'line', 503
    $P101."shift"()
    find_lex $P5052, "RETURN"
    $P5053 = $P5052($P101)
    goto lexotic_533
  lexotic_532:
    .get_results ($P5053)
  lexotic_533:
    .return ($P5053) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_389_1361537952.49511") :anon :lex :outer("cuid_26_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 477
    .const 'Sub' $P5019 = 'cuid_388_1361537952.49511' 
    capture_lex $P5019 
    .lex "%symbols", $P101 
    .local pmc fb_tmp_105 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 479
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_105, $P5007
    repr_defined $I5001, fb_tmp_105
    unless $I5001 goto if317_else549 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_105[$I5002]
    set $P5011, $P5008
    goto if317_end550
  if317_else549:
    null $P5010
    set $P5011, $P5010
  if317_end550:
    unless_null $P5011, vivi_318551
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_318551:
    $P5013 = $P5011."symtable"()
    set $P101, $P5013
    set $P5014, $P101
    iter $P5016, $P101
  for_next582:
    unless $P5016, for_done584
    shift $P5018, $P5016
  for_redo583:
    .const 'Sub' $P5017 = 'cuid_388_1361537952.49511' 
    capture_lex $P5017
    $P5014 = $P5017($P5018)
    goto for_next582
  for_done584:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_388_1361537952.49511") :anon :lex :outer("cuid_389_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 480
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    .local pmc pkg_lookup_tmp_67 
    .local pmc fb_tmp_109 
    .local pmc pkg_lookup_tmp_68 
    .local pmc fb_tmp_110 
    .local pmc pkg_lookup_tmp_69 
    .local pmc fb_tmp_111 
    find_lex $P5001, "%seen"
    set fb_tmp_106, $P5001
    repr_defined $I5002, fb_tmp_106
    unless $I5002 goto if321_else556 
.annotate 'line', 481
    $P5003 = _lex_param_0."key"()
    set $S5001, $P5003
    set $P5002, fb_tmp_106[$S5001]
    set $P5005, $P5002
    goto if321_end557
  if321_else556:
    null $P5004
    set $P5005, $P5004
  if321_end557:
    unless_null $P5005, vivi_322558
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_322558:
    isfalse $I5001, $P5005
    set $I5004, $I5001
    unless $I5001 goto if320_end555 
    $P5007 = _lex_param_0."value"()
    exists $I5003, $P5007["value"]
    set $I5004, $I5003
  if320_end555:
    box $P5062, $I5004
    set $P5061, $P5062
    unless $I5004 goto if319_end553 
    new $P5056, 'ExceptionHandler'
    set_label $P5056, catch_handler_337581
    $P5056.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5056
.annotate 'line', 482
.annotate 'line', 483
    find_lex $P5008, "$wrapper"
    set fb_tmp_107, $P5008
    repr_defined $I5005, fb_tmp_107
    unless $I5005 goto if323_else559 
    set $P5009, fb_tmp_107[0]
    set $P5011, $P5009
    goto if323_end560
  if323_else559:
    null $P5010
    set $P5011, $P5010
  if323_end560:
    unless_null $P5011, vivi_324561
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_324561:
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_67, $P5014
    get_who $P5015, pkg_lookup_tmp_67
    exists $I5007, $P5015["QAST"]
    unless $I5007 goto if326_else564 
    get_who $P5017, pkg_lookup_tmp_67
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if326_end565
  if326_else564:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if326_end565:
    get_who $P5013, $P5019
    set fb_tmp_108, $P5013
    repr_defined $I5006, fb_tmp_108
    unless $I5006 goto if325_else562 
    set $P5020, fb_tmp_108["Op"]
    set $P5022, $P5020
    goto if325_end563
  if325_else562:
    null $P5021
    set $P5022, $P5021
  if325_end563:
    unless_null $P5022, vivi_327566
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_327566:
.annotate 'line', 485
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_68, $P5025
    get_who $P5026, pkg_lookup_tmp_68
    exists $I5009, $P5026["QAST"]
    unless $I5009 goto if329_else569 
    get_who $P5028, pkg_lookup_tmp_68
    set $P5027, $P5028["QAST"]
    set $P5030, $P5027
    goto if329_end570
  if329_else569:
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5029
  if329_end570:
    get_who $P5024, $P5030
    set fb_tmp_109, $P5024
    repr_defined $I5008, fb_tmp_109
    unless $I5008 goto if328_else567 
    set $P5031, fb_tmp_109["Var"]
    set $P5033, $P5031
    goto if328_end568
  if328_else567:
    null $P5032
    set $P5033, $P5032
  if328_end568:
    unless_null $P5033, vivi_330571
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_330571:
    $P5035 = _lex_param_0."key"()
    $P5036 = $P5033."new"($P5035 :named("name"), "lexical" :named("scope"), "var" :named("isdecl"))
.annotate 'line', 486
    nqp_get_sc_object $P5038, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_69, $P5038
    get_who $P5039, pkg_lookup_tmp_69
    exists $I5011, $P5039["QAST"]
    unless $I5011 goto if332_else574 
    get_who $P5041, pkg_lookup_tmp_69
    set $P5040, $P5041["QAST"]
    set $P5043, $P5040
    goto if332_end575
  if332_else574:
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5042
  if332_end575:
    get_who $P5037, $P5043
    set fb_tmp_110, $P5037
    repr_defined $I5010, fb_tmp_110
    unless $I5010 goto if331_else572 
    set $P5044, fb_tmp_110["WVal"]
    set $P5046, $P5044
    goto if331_end573
  if331_else572:
    null $P5045
    set $P5046, $P5045
  if331_end573:
    unless_null $P5046, vivi_333576
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5047
  vivi_333576:
    $P5048 = _lex_param_0."value"()
    set fb_tmp_111, $P5048
    repr_defined $I5012, fb_tmp_111
    unless $I5012 goto if334_else577 
    set $P5049, fb_tmp_111["value"]
    set $P5051, $P5049
    goto if334_end578
  if334_else577:
    null $P5050
    set $P5051, $P5050
  if334_end578:
    unless_null $P5051, vivi_335579
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_335579:
    $P5053 = $P5046."new"($P5051 :named("value"))
    $P5054 = $P5022."new"($P5036, $P5053, "bind" :named("op"))
    $P5055 = $P5011."push"($P5054)
    set $P5057, $P5055
    pop_eh 
    goto skip_handler_336580
  catch_handler_337581:
    .get_results ($P5056) 
    set $I10001, 1
    set $P5056["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5056
    pop_upto_eh $P5056
    pop_eh 
    set $P5057, $P10001
    goto skip_handler_336580
  skip_handler_336580:
    find_lex $P5058, "%seen"
.annotate 'line', 489
    $P5059 = _lex_param_0."key"()
    set $S5002, $P5059
    box $P5060, 1
    set $P5058[$S5002], $P5060
    set $P5061, $P5060
  if319_end553:
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "libs" :subid("cuid_27_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 508
    .param pmc _lex_param_0 
    .const 'Sub' $P5070 = 'cuid_390_1361537952.49511' 
    capture_lex $P5070 
    .lex "@loadlibs", $P101 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    .local pmc fb_tmp_118 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_119 
    .local pmc pkg_lookup_tmp_70 
    .local pmc fb_tmp_120 
    .local pmc pkg_lookup_tmp_71 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    box $P5003, "nqp_group"
    push $P5002, $P5003
    box $P5004, "nqp_ops"
    push $P5002, $P5004
    box $P5005, "nqp_bigint_ops"
    push $P5002, $P5005
    box $P5006, "trans_ops"
    push $P5002, $P5006
    box $P5007, "io_ops"
    push $P5002, $P5007
    set $P101, $P5002
    find_dynamic_lex $P5008, "%*COMPILING"
    unless_null $P5008, fallback596
    nqp_get_sc_object $P5010, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_7, $P5009
    set fb_tmp_115, pkg_viv_tmp_7
    repr_defined $I5003, fb_tmp_115
    unless $I5003 goto if344_else597 
    set $P5011, fb_tmp_115["%COMPILING"]
    set $P5013, $P5011
    goto if344_end598
  if344_else597:
    null $P5012
    set $P5013, $P5012
  if344_end598:
    unless_null $P5013, vivi_345599
    new $P5014, 'Hash'
    set pkg_viv_tmp_7["%COMPILING"], $P5014
    set $P5013, $P5014
  vivi_345599:
    unless_null $P5013, vivi_346600
    die "Contextual %*COMPILING not found"
    box $P5015, "Contextual %*COMPILING not found"
    set $P5013, $P5015
  vivi_346600:
    set $P5008, $P5013
  fallback596:
    set fb_tmp_114, $P5008
    repr_defined $I5002, fb_tmp_114
    unless $I5002 goto if343_else594 
    set $P5016, fb_tmp_114["%?OPTIONS"]
    set $P5018, $P5016
    goto if343_end595
  if343_else594:
    null $P5017
    set $P5018, $P5017
  if343_end595:
    unless_null $P5018, vivi_347601
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_347601:
    set fb_tmp_113, $P5018
    repr_defined $I5001, fb_tmp_113
    unless $I5001 goto if342_else592 
    set $P5020, fb_tmp_113["vmlibs"]
    set $P5022, $P5020
    goto if342_end593
  if342_else592:
    null $P5021
    set $P5022, $P5021
  if342_end593:
    unless_null $P5022, vivi_348602
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_348602:
    unless $P5022 goto if341_end591 
.annotate 'line', 511
    find_dynamic_lex $P5028, "%*COMPILING"
    unless_null $P5028, fallback607
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_8, $P5029
    set fb_tmp_118, pkg_viv_tmp_8
    repr_defined $I5006, fb_tmp_118
    unless $I5006 goto if351_else608 
    set $P5031, fb_tmp_118["%COMPILING"]
    set $P5033, $P5031
    goto if351_end609
  if351_else608:
    null $P5032
    set $P5033, $P5032
  if351_end609:
    unless_null $P5033, vivi_352610
    new $P5034, 'Hash'
    set pkg_viv_tmp_8["%COMPILING"], $P5034
    set $P5033, $P5034
  vivi_352610:
    unless_null $P5033, vivi_353611
    die "Contextual %*COMPILING not found"
    box $P5035, "Contextual %*COMPILING not found"
    set $P5033, $P5035
  vivi_353611:
    set $P5028, $P5033
  fallback607:
    set fb_tmp_117, $P5028
    repr_defined $I5005, fb_tmp_117
    unless $I5005 goto if350_else605 
    set $P5036, fb_tmp_117["%?OPTIONS"]
    set $P5038, $P5036
    goto if350_end606
  if350_else605:
    null $P5037
    set $P5038, $P5037
  if350_end606:
    unless_null $P5038, vivi_354612
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_354612:
    set fb_tmp_116, $P5038
    repr_defined $I5004, fb_tmp_116
    unless $I5004 goto if349_else603 
    set $P5040, fb_tmp_116["vmlibs"]
    set $P5042, $P5040
    goto if349_end604
  if349_else603:
    null $P5041
    set $P5042, $P5041
  if349_end604:
    unless_null $P5042, vivi_355613
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_355613:
    set $S5001, $P5042
    split $P5027, ",", $S5001
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next614:
    unless $P5026, for_done616
    shift $P5045, $P5026
  for_redo615:
    .const 'Sub' $P5044 = 'cuid_390_1361537952.49511' 
    capture_lex $P5044
    $P5024 = $P5044($P5045)
    goto for_next614
  for_done616:
  if341_end591:
.annotate 'line', 516
    nqp_get_sc_object $P5047, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_70, $P5047
    get_who $P5048, pkg_lookup_tmp_70
    exists $I5008, $P5048["QAST"]
    unless $I5008 goto if357_else619 
    get_who $P5050, pkg_lookup_tmp_70
    set $P5049, $P5050["QAST"]
    set $P5052, $P5049
    goto if357_end620
  if357_else619:
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5051
  if357_end620:
    get_who $P5046, $P5052
    set fb_tmp_119, $P5046
    repr_defined $I5007, fb_tmp_119
    unless $I5007 goto if356_else617 
    set $P5053, fb_tmp_119["VM"]
    set $P5055, $P5053
    goto if356_end618
  if356_else617:
    null $P5054
    set $P5055, $P5054
  if356_end618:
    unless_null $P5055, vivi_358621
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_358621:
.annotate 'line', 518
    nqp_get_sc_object $P5058, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_71, $P5058
    get_who $P5059, pkg_lookup_tmp_71
    exists $I5010, $P5059["QAST"]
    unless $I5010 goto if360_else624 
    get_who $P5061, pkg_lookup_tmp_71
    set $P5060, $P5061["QAST"]
    set $P5063, $P5060
    goto if360_end625
  if360_else624:
    nqp_get_sc_object $P5062, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5062
  if360_end625:
    get_who $P5057, $P5063
    set fb_tmp_120, $P5057
    repr_defined $I5009, fb_tmp_120
    unless $I5009 goto if359_else622 
    set $P5064, fb_tmp_120["Op"]
    set $P5066, $P5064
    goto if359_end623
  if359_else622:
    null $P5065
    set $P5066, $P5065
  if359_end623:
    unless_null $P5066, vivi_361626
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5066, $P5067
  vivi_361626:
    $P5068 = $P5066."new"("null" :named("op"))
    $P5069 = $P5055."new"($P101 :named("loadlibs"), $P5068 :named("jvm"))
    .return ($P5069) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_390_1361537952.49511") :anon :lex :outer("cuid_27_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 512
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 513
    find_lex $P5001, "@loadlibs"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "add_initializations" :subid("cuid_28_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 522
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_121 
    .local pmc pkg_lookup_tmp_72 
    .local pmc fb_tmp_122 
    .local pmc pkg_lookup_tmp_73 
    .local pmc fb_tmp_123 
    .local pmc pkg_lookup_tmp_74 
    .local pmc fb_tmp_124 
    .local pmc pkg_lookup_tmp_75 
    .local pmc fb_tmp_125 
    .local pmc pkg_lookup_tmp_76 
    .local pmc fb_tmp_126 
    .local pmc pkg_lookup_tmp_77 
    .local pmc fb_tmp_127 
    .local pmc pkg_lookup_tmp_78 
    .local pmc fb_tmp_128 
    .local pmc pkg_lookup_tmp_79 
    .local pmc fb_tmp_129 
    .local pmc pkg_lookup_tmp_80 
    .local pmc fb_tmp_130 
    .local pmc pkg_lookup_tmp_81 
    .local pmc fb_tmp_131 
    .local pmc pkg_lookup_tmp_82 
.annotate 'line', 523
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_72, $P5003
    get_who $P5004, pkg_lookup_tmp_72
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if363_else629 
    get_who $P5006, pkg_lookup_tmp_72
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if363_end630
  if363_else629:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if363_end630:
    get_who $P5002, $P5008
    set fb_tmp_121, $P5002
    repr_defined $I5001, fb_tmp_121
    unless $I5001 goto if362_else627 
    set $P5009, fb_tmp_121["VM"]
    set $P5011, $P5009
    goto if362_end628
  if362_else627:
    null $P5010
    set $P5011, $P5010
  if362_end628:
    unless_null $P5011, vivi_364631
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_364631:
.annotate 'line', 524
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_73, $P5014
    get_who $P5015, pkg_lookup_tmp_73
    exists $I5004, $P5015["QAST"]
    unless $I5004 goto if366_else634 
    get_who $P5017, pkg_lookup_tmp_73
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if366_end635
  if366_else634:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if366_end635:
    get_who $P5013, $P5019
    set fb_tmp_122, $P5013
    repr_defined $I5003, fb_tmp_122
    unless $I5003 goto if365_else632 
    set $P5020, fb_tmp_122["Stmts"]
    set $P5022, $P5020
    goto if365_end633
  if365_else632:
    null $P5021
    set $P5022, $P5021
  if365_end633:
    unless_null $P5022, vivi_367636
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_367636:
.annotate 'line', 525
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_74, $P5025
    get_who $P5026, pkg_lookup_tmp_74
    exists $I5006, $P5026["QAST"]
    unless $I5006 goto if369_else639 
    get_who $P5028, pkg_lookup_tmp_74
    set $P5027, $P5028["QAST"]
    set $P5030, $P5027
    goto if369_end640
  if369_else639:
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5029
  if369_end640:
    get_who $P5024, $P5030
    set fb_tmp_123, $P5024
    repr_defined $I5005, fb_tmp_123
    unless $I5005 goto if368_else637 
    set $P5031, fb_tmp_123["VM"]
    set $P5033, $P5031
    goto if368_end638
  if368_else637:
    null $P5032
    set $P5033, $P5032
  if368_end638:
    unless_null $P5033, vivi_370641
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_370641:
    $P5035 = $P5033."new"("nqp_dynop_setup v" :named("pirop"))
.annotate 'line', 526
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_75, $P5037
    get_who $P5038, pkg_lookup_tmp_75
    exists $I5008, $P5038["QAST"]
    unless $I5008 goto if372_else644 
    get_who $P5040, pkg_lookup_tmp_75
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if372_end645
  if372_else644:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if372_end645:
    get_who $P5036, $P5042
    set fb_tmp_124, $P5036
    repr_defined $I5007, fb_tmp_124
    unless $I5007 goto if371_else642 
    set $P5043, fb_tmp_124["VM"]
    set $P5045, $P5043
    goto if371_end643
  if371_else642:
    null $P5044
    set $P5045, $P5044
  if371_end643:
    unless_null $P5045, vivi_373646
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_373646:
    $P5047 = $P5045."new"("nqp_bigint_setup v" :named("pirop"))
.annotate 'line', 527
    nqp_get_sc_object $P5049, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_76, $P5049
    get_who $P5050, pkg_lookup_tmp_76
    exists $I5010, $P5050["QAST"]
    unless $I5010 goto if375_else649 
    get_who $P5052, pkg_lookup_tmp_76
    set $P5051, $P5052["QAST"]
    set $P5054, $P5051
    goto if375_end650
  if375_else649:
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5053
  if375_end650:
    get_who $P5048, $P5054
    set fb_tmp_125, $P5048
    repr_defined $I5009, fb_tmp_125
    unless $I5009 goto if374_else647 
    set $P5055, fb_tmp_125["Op"]
    set $P5057, $P5055
    goto if374_end648
  if374_else647:
    null $P5056
    set $P5057, $P5056
  if374_end648:
    unless_null $P5057, vivi_376651
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_376651:
.annotate 'line', 529
    nqp_get_sc_object $P5060, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_77, $P5060
    get_who $P5061, pkg_lookup_tmp_77
    exists $I5012, $P5061["QAST"]
    unless $I5012 goto if378_else654 
    get_who $P5063, pkg_lookup_tmp_77
    set $P5062, $P5063["QAST"]
    set $P5065, $P5062
    goto if378_end655
  if378_else654:
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5064
  if378_end655:
    get_who $P5059, $P5065
    set fb_tmp_126, $P5059
    repr_defined $I5011, fb_tmp_126
    unless $I5011 goto if377_else652 
    set $P5066, fb_tmp_126["VM"]
    set $P5068, $P5066
    goto if377_end653
  if377_else652:
    null $P5067
    set $P5068, $P5067
  if377_end653:
    unless_null $P5068, vivi_379656
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_379656:
    $P5070 = $P5068."new"("getinterp P" :named("pirop"))
.annotate 'line', 530
    nqp_get_sc_object $P5072, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_78, $P5072
    get_who $P5073, pkg_lookup_tmp_78
    exists $I5014, $P5073["QAST"]
    unless $I5014 goto if381_else659 
    get_who $P5075, pkg_lookup_tmp_78
    set $P5074, $P5075["QAST"]
    set $P5077, $P5074
    goto if381_end660
  if381_else659:
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5076
  if381_end660:
    get_who $P5071, $P5077
    set fb_tmp_127, $P5071
    repr_defined $I5013, fb_tmp_127
    unless $I5013 goto if380_else657 
    set $P5078, fb_tmp_127["VM"]
    set $P5080, $P5078
    goto if380_end658
  if380_else657:
    null $P5079
    set $P5080, $P5079
  if380_end658:
    unless_null $P5080, vivi_382661
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5081
  vivi_382661:
    nqp_get_sc_object $P5083, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_79, $P5083
    get_who $P5084, pkg_lookup_tmp_79
    exists $I5016, $P5084["QAST"]
    unless $I5016 goto if384_else664 
    get_who $P5086, pkg_lookup_tmp_79
    set $P5085, $P5086["QAST"]
    set $P5088, $P5085
    goto if384_end665
  if384_else664:
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5087
  if384_end665:
    get_who $P5082, $P5088
    set fb_tmp_128, $P5082
    repr_defined $I5015, fb_tmp_128
    unless $I5015 goto if383_else662 
    set $P5089, fb_tmp_128["SVal"]
    set $P5091, $P5089
    goto if383_end663
  if383_else662:
    null $P5090
    set $P5091, $P5090
  if383_end663:
    unless_null $P5091, vivi_385666
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5091, $P5092
  vivi_385666:
    $P5093 = $P5091."new"("LexPad" :named("value"))
    $P5094 = $P5080."new"($P5093, "get_class Ps" :named("pirop"))
.annotate 'line', 531
    nqp_get_sc_object $P5096, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_80, $P5096
    get_who $P5097, pkg_lookup_tmp_80
    exists $I5018, $P5097["QAST"]
    unless $I5018 goto if387_else669 
    get_who $P5099, pkg_lookup_tmp_80
    set $P5098, $P5099["QAST"]
    set $P5101, $P5098
    goto if387_end670
  if387_else669:
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5101, $P5100
  if387_end670:
    get_who $P5095, $P5101
    set fb_tmp_129, $P5095
    repr_defined $I5017, fb_tmp_129
    unless $I5017 goto if386_else667 
    set $P5102, fb_tmp_129["VM"]
    set $P5104, $P5102
    goto if386_end668
  if386_else667:
    null $P5103
    set $P5104, $P5103
  if386_end668:
    unless_null $P5104, vivi_388671
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5104, $P5105
  vivi_388671:
    nqp_get_sc_object $P5107, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_81, $P5107
    get_who $P5108, pkg_lookup_tmp_81
    exists $I5020, $P5108["QAST"]
    unless $I5020 goto if390_else674 
    get_who $P5110, pkg_lookup_tmp_81
    set $P5109, $P5110["QAST"]
    set $P5112, $P5109
    goto if390_end675
  if390_else674:
    nqp_get_sc_object $P5111, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5112, $P5111
  if390_end675:
    get_who $P5106, $P5112
    set fb_tmp_130, $P5106
    repr_defined $I5019, fb_tmp_130
    unless $I5019 goto if389_else672 
    set $P5113, fb_tmp_130["SVal"]
    set $P5115, $P5113
    goto if389_end673
  if389_else672:
    null $P5114
    set $P5115, $P5114
  if389_end673:
    unless_null $P5115, vivi_391676
    nqp_get_sc_object $P5116, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5115, $P5116
  vivi_391676:
    $P5117 = $P5115."new"("NQPLexPad" :named("value"))
    $P5118 = $P5104."new"($P5117, "get_class Ps" :named("pirop"))
    $P5119 = $P5057."new"($P5070, $P5094, $P5118, "callmethod" :named("op"), "hll_map" :named("name"))
    $P5120 = $P5022."new"($P5035, $P5047, $P5119)
.annotate 'line', 533
    nqp_get_sc_object $P5122, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_82, $P5122
    get_who $P5123, pkg_lookup_tmp_82
    exists $I5022, $P5123["QAST"]
    unless $I5022 goto if393_else679 
    get_who $P5125, pkg_lookup_tmp_82
    set $P5124, $P5125["QAST"]
    set $P5127, $P5124
    goto if393_end680
  if393_else679:
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5127, $P5126
  if393_end680:
    get_who $P5121, $P5127
    set fb_tmp_131, $P5121
    repr_defined $I5021, fb_tmp_131
    unless $I5021 goto if392_else677 
    set $P5128, fb_tmp_131["Op"]
    set $P5130, $P5128
    goto if392_end678
  if392_else677:
    null $P5129
    set $P5130, $P5129
  if392_end678:
    unless_null $P5130, vivi_394681
    nqp_get_sc_object $P5131, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5130, $P5131
  vivi_394681:
    $P5132 = $P5130."new"("null" :named("op"))
    $P5133 = $P5011."new"($P5120 :named("parrot"), $P5132 :named("jvm"))
    $P5134 = $P5001."add_load_dependency_task"($P5133 :named("deserialize_past"))
    .return ($P5134) 
.end
.HLL "nqp"
.namespace []
.sub "cleanup" :subid("cuid_29_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 538
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_391_1361537952.49511' 
    capture_lex $P5009 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5004, _lex_param_0
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5006, $P5004, $P5005, "@!clearup_tasks"
    set $P5001, $P5006
    iter $P5003, $P5006
  for_next682:
    unless $P5003, for_done684
    shift $P5008, $P5003
  for_redo683:
    .const 'Sub' $P5007 = 'cuid_391_1361537952.49511' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next682
  for_done684:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_391_1361537952.49511") :anon :lex :outer("cuid_29_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 539
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    $P5001 = _lex_param_0()
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "is_lexical" :subid("cuid_30_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 544
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 545
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "lexical")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_package" :subid("cuid_31_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 550
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
.annotate 'line', 551
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."is_scope"(_lex_param_1, "package")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "is_scope" :subid("cuid_32_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 556
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5011 = 'cuid_392_1361537952.49511' 
    capture_lex $P5011 
    .lex "$i", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .lex "$wanted_scope", _lex_param_2 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_685
    .lex "RETURN", $P102
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!BLOCKS"
    set $N5001, $P5004
    box $P5005, $N5001
    set $P101, $P5005
  while395_test687:
    set $N5002, $P101
    set $N5003, 0
    isgt $I5001, $N5002, $N5003
    box $P5009, $I5001
    set $P5008, $P5009
    unless $I5001 goto while395_done691 
  while395_redo689:
    .const 'Sub' $P5006 = 'cuid_392_1361537952.49511' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5008, $P5007
    goto while395_test687 
  while395_done691:
    box $P5010, 0
    goto lexotic_686
  lexotic_685:
    .get_results ($P5010)
  lexotic_686:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_392_1361537952.49511") :anon :lex :outer("cuid_32_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 558
    .lex "%sym", $P101 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 560
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_132, $P5007
    repr_defined $I5001, fb_tmp_132
    unless $I5001 goto if396_else692 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_132[$I5002]
    set $P5011, $P5008
    goto if396_end693
  if396_else692:
    null $P5010
    set $P5011, $P5010
  if396_end693:
    unless_null $P5011, vivi_397694
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_397694:
    find_lex $P5013, "$name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5023, $N5004
    set $P5022, $P5023
    unless $N5004 goto if398_end696 
.annotate 'line', 561
    set fb_tmp_133, $P101
    repr_defined $I5004, fb_tmp_133
    unless $I5004 goto if399_else697 
    set $P5016, fb_tmp_133["scope"]
    set $P5018, $P5016
    goto if399_end698
  if399_else697:
    null $P5017
    set $P5018, $P5017
  if399_end698:
    unless_null $P5018, vivi_400699
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_400699:
    set $S5001, $P5018
    find_lex $P5020, "$wanted_scope"
    set $S5002, $P5020
    iseq $I5003, $S5001, $S5002
    find_lex $P5015, "RETURN"
    $P5021 = $P5015($I5003)
    set $P5022, $P5021
  if398_end696:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "known_sym" :subid("cuid_33_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 569
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$known", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "@name", _lex_param_2 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    new $P5005, 'ExceptionHandler'
    set_label $P5005, catch_handler_402701
    $P5005.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5005
.annotate 'line', 571
.annotate 'line', 572
    nqp_decontainerize $P5003, _lex_param_0
    $P5003."find_sym"(_lex_param_2)
    box $P5004, 1
    set $P101, $P5004
    set $P5006, $P101
    pop_eh 
    goto skip_handler_401700
  catch_handler_402701:
    .get_results ($P5005) 
    set $I10001, 1
    set $P5005["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5005
    pop_upto_eh $P5005
    pop_eh 
    set $P5006, $P10001
    goto skip_handler_401700
  skip_handler_401700:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "find_sym" :subid("cuid_34_1361537952.49511") :anon :lex :outer("cuid_377_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 581
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_394_1361537952.49511' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_396_1361537952.49511' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_397_1361537952.49511' 
    capture_lex $P5020 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "@name", _lex_param_1 
    .local pmc fb_tmp_137 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_702
    .lex "RETURN", $P102
    set $N5001, _lex_param_1
    if $N5001 goto unless403_end705 
.annotate 'line', 583
    box $P5002, "Cannot look up empty name"
    die $P5002
  unless403_end705:
    set $N5002, _lex_param_1
    set $N5003, 1
    iseq $I5001, $N5002, $N5003
    unless $I5001 goto if404_end707 
    .const 'Sub' $P5003 = 'cuid_394_1361537952.49511' 
    capture_lex $P5003
    $P5004 = $P5003()
  if404_end707:
    find_dynamic_lex $P5005, "$*GLOBALish"
    unless_null $P5005, fallback726
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5006, $P5007
    set fb_tmp_137, $P5006
    repr_defined $I5002, fb_tmp_137
    unless $I5002 goto if414_else727 
    set $P5008, fb_tmp_137["$GLOBALish"]
    set $P5010, $P5008
    goto if414_end728
  if414_else727:
    null $P5009
    set $P5010, $P5009
  if414_end728:
    unless_null $P5010, vivi_415729
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_415729:
    unless_null $P5010, vivi_416730
    die "Contextual $*GLOBALish not found"
    box $P5012, "Contextual $*GLOBALish not found"
    set $P5010, $P5012
  vivi_416730:
    set $P5005, $P5010
  fallback726:
    set $P101, $P5005
    set $N5004, _lex_param_1
    set $N5005, 2
    isge $I5003, $N5004, $N5005
    unless $I5003 goto if417_end732 
    .const 'Sub' $P5013 = 'cuid_396_1361537952.49511' 
    capture_lex $P5013
    $P5014 = $P5013()
  if417_end732:
    set $P5015, _lex_param_1
    iter $P5017, _lex_param_1
  for_next756:
    unless $P5017, for_done758
    shift $P5019, $P5017
  for_redo757:
    .const 'Sub' $P5018 = 'cuid_397_1361537952.49511' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next756
  for_done758:
    goto lexotic_703
  lexotic_702:
    .get_results ($P101)
  lexotic_703:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_394_1361537952.49511") :anon :lex :outer("cuid_34_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 587
    .const 'Sub' $P5017 = 'cuid_393_1361537952.49511' 
    capture_lex $P5017 
    .lex "$final_name", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_134 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_134, $P5003
    repr_defined $I5001, fb_tmp_134
    unless $I5001 goto if405_else708 
    set $P5004, fb_tmp_134[0]
    set $P5006, $P5004
    goto if405_end709
  if405_else708:
    null $P5005
    set $P5006, $P5005
  if405_end709:
    unless_null $P5006, vivi_406710
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_406710:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while407_test711:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while407_done715 
  while407_redo713:
    .const 'Sub' $P5013 = 'cuid_393_1361537952.49511' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while407_test711 
  while407_done715:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_393_1361537952.49511") :anon :lex :outer("cuid_394_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 590
    .lex "%sym", $P101 
    .local pmc fb_tmp_135 
    .local pmc fb_tmp_136 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 592
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_135, $P5007
    repr_defined $I5001, fb_tmp_135
    unless $I5001 goto if408_else716 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_135[$I5002]
    set $P5011, $P5008
    goto if408_end717
  if408_else716:
    null $P5010
    set $P5011, $P5010
  if408_end717:
    unless_null $P5011, vivi_409718
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_409718:
    find_lex $P5013, "$final_name"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if410_end720 
.annotate 'line', 593
    exists $I5003, $P101["value"]
    unless $I5003 goto if411_else721 
.annotate 'line', 594
    set fb_tmp_136, $P101
    repr_defined $I5004, fb_tmp_136
    unless $I5004 goto if412_else723 
    set $P5016, fb_tmp_136["value"]
    set $P5018, $P5016
    goto if412_end724
  if412_else723:
    null $P5017
    set $P5018, $P5017
  if412_end724:
    unless_null $P5018, vivi_413725
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_413725:
    find_lex $P5015, "RETURN"
    $P5020 = $P5015($P5018)
    set $P5023, $P5020
    goto if411_end722
  if411_else721:
.annotate 'line', 597
    find_lex $P5021, "$final_name"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if411_end722:
    set $P5024, $P5023
  if410_end720:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_396_1361537952.49511") :anon :lex :outer("cuid_34_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 608
    .const 'Sub' $P5017 = 'cuid_395_1361537952.49511' 
    capture_lex $P5017 
    .lex "$first", $P101 
    .lex "$i", $P102 
    .local pmc fb_tmp_138 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_lex $P5003, "@name"
    set fb_tmp_138, $P5003
    repr_defined $I5001, fb_tmp_138
    unless $I5001 goto if418_else733 
    set $P5004, fb_tmp_138[0]
    set $P5006, $P5004
    goto if418_end734
  if418_else733:
    null $P5005
    set $P5006, $P5005
  if418_end734:
    unless_null $P5006, vivi_419735
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_419735:
    set $P101, $P5006
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    nqp_get_sc_object $P5010, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5011, $P5008, $P5010, "@!BLOCKS"
    set $N5001, $P5011
    box $P5012, $N5001
    set $P102, $P5012
  while420_test736:
    set $N5002, $P102
    set $N5003, 0
    isgt $I5002, $N5002, $N5003
    box $P5016, $I5002
    set $P5015, $P5016
    unless $I5002 goto while420_done740 
  while420_redo738:
    .const 'Sub' $P5013 = 'cuid_395_1361537952.49511' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5015, $P5014
    goto while420_test736 
  while420_done740:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_395_1361537952.49511") :anon :lex :outer("cuid_396_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 611
    .lex "%sym", $P101 
    .local pmc fb_tmp_139 
    .local pmc fb_tmp_140 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$i"
    set $N5002, $P5002
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$i", $P5003
.annotate 'line', 613
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    repr_get_attr_obj $P5007, $P5004, $P5006, "@!BLOCKS"
    set fb_tmp_139, $P5007
    repr_defined $I5001, fb_tmp_139
    unless $I5001 goto if421_else741 
    find_lex $P5009, "$i"
    set $I5002, $P5009
    set $P5008, fb_tmp_139[$I5002]
    set $P5011, $P5008
    goto if421_end742
  if421_else741:
    null $P5010
    set $P5011, $P5010
  if421_end742:
    unless_null $P5011, vivi_422743
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_422743:
    find_lex $P5013, "$first"
    $P5014 = $P5011."symbol"($P5013)
    set $P101, $P5014
    set $N5004, $P101
    box $P5025, $N5004
    set $P5024, $P5025
    unless $N5004 goto if423_end745 
.annotate 'line', 614
    exists $I5003, $P101["value"]
    unless $I5003 goto if424_else746 
.annotate 'line', 615
    set fb_tmp_140, $P101
    repr_defined $I5004, fb_tmp_140
    unless $I5004 goto if425_else748 
    set $P5015, fb_tmp_140["value"]
    set $P5017, $P5015
    goto if425_end749
  if425_else748:
    null $P5016
    set $P5017, $P5016
  if425_end749:
    unless_null $P5017, vivi_426750
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_426750:
    store_lex "$result", $P5017
.annotate 'line', 617
    find_lex $P5019, "@name"
    $P5019."shift"()
    box $P5020, 0
    store_lex "$i", $P5020
    set $P5023, $P5020
    goto if424_end747
  if424_else746:
.annotate 'line', 620
    find_lex $P5021, "$first"
    set $S5002, $P5021
    concat $S5001, "No compile-time value for ", $S5002
    box $P5022, $S5001
    die $P5022
    set $P5023, $P5022
  if424_end747:
    set $P5024, $P5023
  if423_end745:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_397_1361537952.49511") :anon :lex :outer("cuid_34_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 628
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_141 
    find_lex $P5002, "$result"
    get_who $P5001, $P5002
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if427_else751 
.annotate 'line', 629
    find_lex $P5004, "$result"
    get_who $P5003, $P5004
    set fb_tmp_141, $P5003
    repr_defined $I5002, fb_tmp_141
    unless $I5002 goto if428_else753 
    set $S5002, _lex_param_0
    set $P5005, fb_tmp_141[$S5002]
    set $P5007, $P5005
    goto if428_end754
  if428_else753:
    null $P5006
    set $P5007, $P5006
  if428_end754:
    unless_null $P5007, vivi_429755
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_429755:
    store_lex "$result", $P5007
    set $P5011, $P5007
    goto if427_end752
  if427_else751:
.annotate 'line', 632
    find_lex $P5009, "@name"
    join $S5004, "::", $P5009
    concat $S5003, "Could not locate compile-time value for symbol ", $S5004
    box $P5010, $S5003
    die $P5010
    set $P5011, $P5010
  if427_end752:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_398_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 643
    .const 'Sub' $P5349 = 'cuid_35_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_36_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_37_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_38_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_39_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_40_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_41_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_43_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_45_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_46_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_47_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_49_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_50_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_51_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_52_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_53_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_54_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_55_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_56_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_57_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_58_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_59_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_60_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_61_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_62_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_63_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_64_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_65_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_67_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_68_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_69_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_70_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_71_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_72_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_73_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_74_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_75_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_76_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_77_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_78_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_79_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_80_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_81_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_82_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_83_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_84_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_85_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_86_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_87_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_88_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_89_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_90_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_93_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_94_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_95_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_96_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_97_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_98_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_99_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_100_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_101_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_102_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_103_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_104_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_105_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_106_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_107_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_108_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_109_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_110_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_111_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_112_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_113_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_114_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_115_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_116_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_117_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_118_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_119_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_120_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_121_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_122_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_123_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_124_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_125_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_126_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_127_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_128_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_129_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_131_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_132_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_133_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_134_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_135_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_136_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_137_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_138_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_139_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_140_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_141_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_142_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_143_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_144_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_145_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_146_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_147_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_148_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_149_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_150_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_151_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_152_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_153_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_154_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_155_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_156_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_157_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_158_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_159_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_160_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_161_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_162_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_163_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_164_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_165_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_166_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_167_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_168_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_169_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_170_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_171_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_172_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_173_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_174_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_175_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_176_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_177_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_178_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_179_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_180_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_181_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_182_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_183_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_184_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_185_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_186_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_187_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_188_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_189_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_190_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_191_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_192_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_193_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_194_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_195_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_196_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_197_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_198_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_199_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_200_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_201_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_202_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_203_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_204_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_205_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_206_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_207_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_208_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_209_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_210_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_211_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_212_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_213_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_214_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_215_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_216_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_217_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_218_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_219_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_220_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_221_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_223_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_225_1361537952.49511' 
    capture_lex $P5349 
    .const 'Sub' $P5349 = 'cuid_227_1361537952.49511' 
    capture_lex $P5349 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .local pmc fb_tmp_142 
    .local pmc pkg_lookup_tmp_89 
    .local pmc fb_tmp_143 
    .local pmc pkg_lookup_tmp_90 
    .local pmc fb_tmp_144 
    .local pmc pkg_lookup_tmp_91 
    .local pmc fb_tmp_145 
    .local pmc pkg_lookup_tmp_92 
    .local pmc fb_tmp_146 
    .local pmc pkg_lookup_tmp_93 
    .local pmc fb_tmp_147 
    .local pmc pkg_lookup_tmp_94 
    .local pmc fb_tmp_148 
    .local pmc pkg_lookup_tmp_95 
    .local pmc fb_tmp_149 
    .local pmc pkg_lookup_tmp_96 
    .local pmc fb_tmp_150 
    .local pmc pkg_lookup_tmp_97 
    .local pmc fb_tmp_151 
    .local pmc pkg_lookup_tmp_98 
    .local pmc fb_tmp_152 
    .local pmc pkg_lookup_tmp_99 
    .local pmc fb_tmp_153 
    .local pmc pkg_lookup_tmp_100 
    .local pmc fb_tmp_154 
    .local pmc pkg_lookup_tmp_101 
    .local pmc fb_tmp_155 
    .local pmc pkg_lookup_tmp_102 
    .local pmc fb_tmp_156 
    .local pmc pkg_lookup_tmp_103 
.annotate 'line', 1313
.annotate 'line', 1314
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_89, $P5002
    get_who $P5003, pkg_lookup_tmp_89
    exists $I5002, $P5003["NQP"]
    unless $I5002 goto if431_else761 
    get_who $P5005, pkg_lookup_tmp_89
    set $P5004, $P5005["NQP"]
    set $P5007, $P5004
    goto if431_end762
  if431_else761:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if431_end762:
    get_who $P5001, $P5007
    set fb_tmp_142, $P5001
    repr_defined $I5001, fb_tmp_142
    unless $I5001 goto if430_else759 
    set $P5008, fb_tmp_142["Grammar"]
    set $P5010, $P5008
    goto if430_end760
  if430_else759:
    null $P5009
    set $P5010, $P5009
  if430_end760:
    unless_null $P5010, vivi_432763
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_432763:
    $P5010."O"(":prec<y=>, :assoc<unary>", "%methodop")
.annotate 'line', 1315
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_90, $P5013
    get_who $P5014, pkg_lookup_tmp_90
    exists $I5004, $P5014["NQP"]
    unless $I5004 goto if434_else766 
    get_who $P5016, pkg_lookup_tmp_90
    set $P5015, $P5016["NQP"]
    set $P5018, $P5015
    goto if434_end767
  if434_else766:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if434_end767:
    get_who $P5012, $P5018
    set fb_tmp_143, $P5012
    repr_defined $I5003, fb_tmp_143
    unless $I5003 goto if433_else764 
    set $P5019, fb_tmp_143["Grammar"]
    set $P5021, $P5019
    goto if433_end765
  if433_else764:
    null $P5020
    set $P5021, $P5020
  if433_end765:
    unless_null $P5021, vivi_435768
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_435768:
    $P5021."O"(":prec<x=>, :assoc<unary>", "%autoincrement")
.annotate 'line', 1316
    nqp_get_sc_object $P5024, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_91, $P5024
    get_who $P5025, pkg_lookup_tmp_91
    exists $I5006, $P5025["NQP"]
    unless $I5006 goto if437_else771 
    get_who $P5027, pkg_lookup_tmp_91
    set $P5026, $P5027["NQP"]
    set $P5029, $P5026
    goto if437_end772
  if437_else771:
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5028
  if437_end772:
    get_who $P5023, $P5029
    set fb_tmp_144, $P5023
    repr_defined $I5005, fb_tmp_144
    unless $I5005 goto if436_else769 
    set $P5030, fb_tmp_144["Grammar"]
    set $P5032, $P5030
    goto if436_end770
  if436_else769:
    null $P5031
    set $P5032, $P5031
  if436_end770:
    unless_null $P5032, vivi_438773
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_438773:
    $P5032."O"(":prec<w=>, :assoc<left>", "%exponentiation")
.annotate 'line', 1317
    nqp_get_sc_object $P5035, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_92, $P5035
    get_who $P5036, pkg_lookup_tmp_92
    exists $I5008, $P5036["NQP"]
    unless $I5008 goto if440_else776 
    get_who $P5038, pkg_lookup_tmp_92
    set $P5037, $P5038["NQP"]
    set $P5040, $P5037
    goto if440_end777
  if440_else776:
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5039
  if440_end777:
    get_who $P5034, $P5040
    set fb_tmp_145, $P5034
    repr_defined $I5007, fb_tmp_145
    unless $I5007 goto if439_else774 
    set $P5041, fb_tmp_145["Grammar"]
    set $P5043, $P5041
    goto if439_end775
  if439_else774:
    null $P5042
    set $P5043, $P5042
  if439_end775:
    unless_null $P5043, vivi_441778
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_441778:
    $P5043."O"(":prec<v=>, :assoc<unary>", "%symbolic_unary")
.annotate 'line', 1318
    nqp_get_sc_object $P5046, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_93, $P5046
    get_who $P5047, pkg_lookup_tmp_93
    exists $I5010, $P5047["NQP"]
    unless $I5010 goto if443_else781 
    get_who $P5049, pkg_lookup_tmp_93
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if443_end782
  if443_else781:
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5050
  if443_end782:
    get_who $P5045, $P5051
    set fb_tmp_146, $P5045
    repr_defined $I5009, fb_tmp_146
    unless $I5009 goto if442_else779 
    set $P5052, fb_tmp_146["Grammar"]
    set $P5054, $P5052
    goto if442_end780
  if442_else779:
    null $P5053
    set $P5054, $P5053
  if442_end780:
    unless_null $P5054, vivi_444783
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_444783:
    $P5054."O"(":prec<u=>, :assoc<left>", "%multiplicative")
.annotate 'line', 1319
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_94, $P5057
    get_who $P5058, pkg_lookup_tmp_94
    exists $I5012, $P5058["NQP"]
    unless $I5012 goto if446_else786 
    get_who $P5060, pkg_lookup_tmp_94
    set $P5059, $P5060["NQP"]
    set $P5062, $P5059
    goto if446_end787
  if446_else786:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if446_end787:
    get_who $P5056, $P5062
    set fb_tmp_147, $P5056
    repr_defined $I5011, fb_tmp_147
    unless $I5011 goto if445_else784 
    set $P5063, fb_tmp_147["Grammar"]
    set $P5065, $P5063
    goto if445_end785
  if445_else784:
    null $P5064
    set $P5065, $P5064
  if445_end785:
    unless_null $P5065, vivi_447788
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_447788:
    $P5065."O"(":prec<t=>, :assoc<left>", "%additive")
.annotate 'line', 1320
    nqp_get_sc_object $P5068, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_95, $P5068
    get_who $P5069, pkg_lookup_tmp_95
    exists $I5014, $P5069["NQP"]
    unless $I5014 goto if449_else791 
    get_who $P5071, pkg_lookup_tmp_95
    set $P5070, $P5071["NQP"]
    set $P5073, $P5070
    goto if449_end792
  if449_else791:
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5073, $P5072
  if449_end792:
    get_who $P5067, $P5073
    set fb_tmp_148, $P5067
    repr_defined $I5013, fb_tmp_148
    unless $I5013 goto if448_else789 
    set $P5074, fb_tmp_148["Grammar"]
    set $P5076, $P5074
    goto if448_end790
  if448_else789:
    null $P5075
    set $P5076, $P5075
  if448_end790:
    unless_null $P5076, vivi_450793
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5076, $P5077
  vivi_450793:
    $P5076."O"(":prec<r=>, :assoc<left>", "%concatenation")
.annotate 'line', 1321
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_96, $P5079
    get_who $P5080, pkg_lookup_tmp_96
    exists $I5016, $P5080["NQP"]
    unless $I5016 goto if452_else796 
    get_who $P5082, pkg_lookup_tmp_96
    set $P5081, $P5082["NQP"]
    set $P5084, $P5081
    goto if452_end797
  if452_else796:
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5083
  if452_end797:
    get_who $P5078, $P5084
    set fb_tmp_149, $P5078
    repr_defined $I5015, fb_tmp_149
    unless $I5015 goto if451_else794 
    set $P5085, fb_tmp_149["Grammar"]
    set $P5087, $P5085
    goto if451_end795
  if451_else794:
    null $P5086
    set $P5087, $P5086
  if451_end795:
    unless_null $P5087, vivi_453798
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_453798:
    $P5087."O"(":prec<m=>, :assoc<left>", "%relational")
.annotate 'line', 1322
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_97, $P5090
    get_who $P5091, pkg_lookup_tmp_97
    exists $I5018, $P5091["NQP"]
    unless $I5018 goto if455_else801 
    get_who $P5093, pkg_lookup_tmp_97
    set $P5092, $P5093["NQP"]
    set $P5095, $P5092
    goto if455_end802
  if455_else801:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if455_end802:
    get_who $P5089, $P5095
    set fb_tmp_150, $P5089
    repr_defined $I5017, fb_tmp_150
    unless $I5017 goto if454_else799 
    set $P5096, fb_tmp_150["Grammar"]
    set $P5098, $P5096
    goto if454_end800
  if454_else799:
    null $P5097
    set $P5098, $P5097
  if454_end800:
    unless_null $P5098, vivi_456803
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_456803:
    $P5098."O"(":prec<l=>, :assoc<left>", "%tight_and")
.annotate 'line', 1323
    nqp_get_sc_object $P5101, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_98, $P5101
    get_who $P5102, pkg_lookup_tmp_98
    exists $I5020, $P5102["NQP"]
    unless $I5020 goto if458_else806 
    get_who $P5104, pkg_lookup_tmp_98
    set $P5103, $P5104["NQP"]
    set $P5106, $P5103
    goto if458_end807
  if458_else806:
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5106, $P5105
  if458_end807:
    get_who $P5100, $P5106
    set fb_tmp_151, $P5100
    repr_defined $I5019, fb_tmp_151
    unless $I5019 goto if457_else804 
    set $P5107, fb_tmp_151["Grammar"]
    set $P5109, $P5107
    goto if457_end805
  if457_else804:
    null $P5108
    set $P5109, $P5108
  if457_end805:
    unless_null $P5109, vivi_459808
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5110
  vivi_459808:
    $P5109."O"(":prec<k=>, :assoc<left>", "%tight_or")
.annotate 'line', 1324
    nqp_get_sc_object $P5112, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_99, $P5112
    get_who $P5113, pkg_lookup_tmp_99
    exists $I5022, $P5113["NQP"]
    unless $I5022 goto if461_else811 
    get_who $P5115, pkg_lookup_tmp_99
    set $P5114, $P5115["NQP"]
    set $P5117, $P5114
    goto if461_end812
  if461_else811:
    nqp_get_sc_object $P5116, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5117, $P5116
  if461_end812:
    get_who $P5111, $P5117
    set fb_tmp_152, $P5111
    repr_defined $I5021, fb_tmp_152
    unless $I5021 goto if460_else809 
    set $P5118, fb_tmp_152["Grammar"]
    set $P5120, $P5118
    goto if460_end810
  if460_else809:
    null $P5119
    set $P5120, $P5119
  if460_end810:
    unless_null $P5120, vivi_462813
    nqp_get_sc_object $P5121, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5120, $P5121
  vivi_462813:
    $P5120."O"(":prec<j=>, :assoc<right>", "%conditional")
.annotate 'line', 1325
    nqp_get_sc_object $P5123, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_100, $P5123
    get_who $P5124, pkg_lookup_tmp_100
    exists $I5024, $P5124["NQP"]
    unless $I5024 goto if464_else816 
    get_who $P5126, pkg_lookup_tmp_100
    set $P5125, $P5126["NQP"]
    set $P5128, $P5125
    goto if464_end817
  if464_else816:
    nqp_get_sc_object $P5127, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5128, $P5127
  if464_end817:
    get_who $P5122, $P5128
    set fb_tmp_153, $P5122
    repr_defined $I5023, fb_tmp_153
    unless $I5023 goto if463_else814 
    set $P5129, fb_tmp_153["Grammar"]
    set $P5131, $P5129
    goto if463_end815
  if463_else814:
    null $P5130
    set $P5131, $P5130
  if463_end815:
    unless_null $P5131, vivi_465818
    nqp_get_sc_object $P5132, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5131, $P5132
  vivi_465818:
    $P5131."O"(":prec<i=>, :assoc<right>", "%assignment")
.annotate 'line', 1326
    nqp_get_sc_object $P5134, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_101, $P5134
    get_who $P5135, pkg_lookup_tmp_101
    exists $I5026, $P5135["NQP"]
    unless $I5026 goto if467_else821 
    get_who $P5137, pkg_lookup_tmp_101
    set $P5136, $P5137["NQP"]
    set $P5139, $P5136
    goto if467_end822
  if467_else821:
    nqp_get_sc_object $P5138, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5139, $P5138
  if467_end822:
    get_who $P5133, $P5139
    set fb_tmp_154, $P5133
    repr_defined $I5025, fb_tmp_154
    unless $I5025 goto if466_else819 
    set $P5140, fb_tmp_154["Grammar"]
    set $P5142, $P5140
    goto if466_end820
  if466_else819:
    null $P5141
    set $P5142, $P5141
  if466_end820:
    unless_null $P5142, vivi_468823
    nqp_get_sc_object $P5143, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5142, $P5143
  vivi_468823:
    $P5142."O"(":prec<g=>, :assoc<list>, :nextterm<nulltermish>", "%comma")
.annotate 'line', 1327
    nqp_get_sc_object $P5145, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_102, $P5145
    get_who $P5146, pkg_lookup_tmp_102
    exists $I5028, $P5146["NQP"]
    unless $I5028 goto if470_else826 
    get_who $P5148, pkg_lookup_tmp_102
    set $P5147, $P5148["NQP"]
    set $P5150, $P5147
    goto if470_end827
  if470_else826:
    nqp_get_sc_object $P5149, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5150, $P5149
  if470_end827:
    get_who $P5144, $P5150
    set fb_tmp_155, $P5144
    repr_defined $I5027, fb_tmp_155
    unless $I5027 goto if469_else824 
    set $P5151, fb_tmp_155["Grammar"]
    set $P5153, $P5151
    goto if469_end825
  if469_else824:
    null $P5152
    set $P5153, $P5152
  if469_end825:
    unless_null $P5153, vivi_471828
    nqp_get_sc_object $P5154, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5153, $P5154
  vivi_471828:
    $P5153."O"(":prec<f=>, :assoc<list>", "%list_infix")
.annotate 'line', 1328
    nqp_get_sc_object $P5156, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_103, $P5156
    get_who $P5157, pkg_lookup_tmp_103
    exists $I5030, $P5157["NQP"]
    unless $I5030 goto if473_else831 
    get_who $P5159, pkg_lookup_tmp_103
    set $P5158, $P5159["NQP"]
    set $P5161, $P5158
    goto if473_end832
  if473_else831:
    nqp_get_sc_object $P5160, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5161, $P5160
  if473_end832:
    get_who $P5155, $P5161
    set fb_tmp_156, $P5155
    repr_defined $I5029, fb_tmp_156
    unless $I5029 goto if472_else829 
    set $P5162, fb_tmp_156["Grammar"]
    set $P5164, $P5162
    goto if472_end830
  if472_else829:
    null $P5163
    set $P5164, $P5163
  if472_end830:
    unless_null $P5164, vivi_474833
    nqp_get_sc_object $P5165, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5164, $P5165
  vivi_474833:
    $P5164."O"(":prec<e=>, :assoc<unary>", "%list_prefix")
.annotate 'line', 643
    .const 'Sub' $P5166 = 'cuid_35_1361537952.49511' 
    capture_lex $P5166
    .const 'Sub' $P5167 = 'cuid_36_1361537952.49511' 
    capture_lex $P5167
    .const 'Sub' $P5168 = 'cuid_37_1361537952.49511' 
    capture_lex $P5168
    .const 'Sub' $P5169 = 'cuid_38_1361537952.49511' 
    capture_lex $P5169
    .const 'Sub' $P5170 = 'cuid_39_1361537952.49511' 
    capture_lex $P5170
    .const 'Sub' $P5171 = 'cuid_40_1361537952.49511' 
    capture_lex $P5171
    .const 'Sub' $P5172 = 'cuid_41_1361537952.49511' 
    capture_lex $P5172
    .const 'Sub' $P5173 = 'cuid_43_1361537952.49511' 
    capture_lex $P5173
    .const 'Sub' $P5174 = 'cuid_45_1361537952.49511' 
    capture_lex $P5174
    .const 'Sub' $P5175 = 'cuid_46_1361537952.49511' 
    capture_lex $P5175
    .const 'Sub' $P5176 = 'cuid_47_1361537952.49511' 
    capture_lex $P5176
    .const 'Sub' $P5177 = 'cuid_49_1361537952.49511' 
    capture_lex $P5177
    .const 'Sub' $P5178 = 'cuid_50_1361537952.49511' 
    capture_lex $P5178
    .const 'Sub' $P5179 = 'cuid_51_1361537952.49511' 
    capture_lex $P5179
    .const 'Sub' $P5180 = 'cuid_52_1361537952.49511' 
    capture_lex $P5180
    .const 'Sub' $P5181 = 'cuid_53_1361537952.49511' 
    capture_lex $P5181
    .const 'Sub' $P5182 = 'cuid_54_1361537952.49511' 
    capture_lex $P5182
    .const 'Sub' $P5183 = 'cuid_55_1361537952.49511' 
    capture_lex $P5183
    .const 'Sub' $P5184 = 'cuid_56_1361537952.49511' 
    capture_lex $P5184
    .const 'Sub' $P5185 = 'cuid_57_1361537952.49511' 
    capture_lex $P5185
    .const 'Sub' $P5186 = 'cuid_58_1361537952.49511' 
    capture_lex $P5186
    .const 'Sub' $P5187 = 'cuid_59_1361537952.49511' 
    capture_lex $P5187
    .const 'Sub' $P5188 = 'cuid_60_1361537952.49511' 
    capture_lex $P5188
    .const 'Sub' $P5189 = 'cuid_61_1361537952.49511' 
    capture_lex $P5189
    .const 'Sub' $P5190 = 'cuid_62_1361537952.49511' 
    capture_lex $P5190
    .const 'Sub' $P5191 = 'cuid_63_1361537952.49511' 
    capture_lex $P5191
    .const 'Sub' $P5192 = 'cuid_64_1361537952.49511' 
    capture_lex $P5192
    .const 'Sub' $P5193 = 'cuid_65_1361537952.49511' 
    capture_lex $P5193
    .const 'Sub' $P5194 = 'cuid_67_1361537952.49511' 
    capture_lex $P5194
    .const 'Sub' $P5195 = 'cuid_68_1361537952.49511' 
    capture_lex $P5195
    .const 'Sub' $P5196 = 'cuid_69_1361537952.49511' 
    capture_lex $P5196
    .const 'Sub' $P5197 = 'cuid_70_1361537952.49511' 
    capture_lex $P5197
    .const 'Sub' $P5198 = 'cuid_71_1361537952.49511' 
    capture_lex $P5198
    .const 'Sub' $P5199 = 'cuid_72_1361537952.49511' 
    capture_lex $P5199
    .const 'Sub' $P5200 = 'cuid_73_1361537952.49511' 
    capture_lex $P5200
    .const 'Sub' $P5201 = 'cuid_74_1361537952.49511' 
    capture_lex $P5201
    .const 'Sub' $P5202 = 'cuid_75_1361537952.49511' 
    capture_lex $P5202
    .const 'Sub' $P5203 = 'cuid_76_1361537952.49511' 
    capture_lex $P5203
    .const 'Sub' $P5204 = 'cuid_77_1361537952.49511' 
    capture_lex $P5204
    .const 'Sub' $P5205 = 'cuid_78_1361537952.49511' 
    capture_lex $P5205
    .const 'Sub' $P5206 = 'cuid_79_1361537952.49511' 
    capture_lex $P5206
    .const 'Sub' $P5207 = 'cuid_80_1361537952.49511' 
    capture_lex $P5207
    .const 'Sub' $P5208 = 'cuid_81_1361537952.49511' 
    capture_lex $P5208
    .const 'Sub' $P5209 = 'cuid_82_1361537952.49511' 
    capture_lex $P5209
    .const 'Sub' $P5210 = 'cuid_83_1361537952.49511' 
    capture_lex $P5210
    .const 'Sub' $P5211 = 'cuid_84_1361537952.49511' 
    capture_lex $P5211
    .const 'Sub' $P5212 = 'cuid_85_1361537952.49511' 
    capture_lex $P5212
    .const 'Sub' $P5213 = 'cuid_86_1361537952.49511' 
    capture_lex $P5213
    .const 'Sub' $P5214 = 'cuid_87_1361537952.49511' 
    capture_lex $P5214
    .const 'Sub' $P5215 = 'cuid_88_1361537952.49511' 
    capture_lex $P5215
    .const 'Sub' $P5216 = 'cuid_89_1361537952.49511' 
    capture_lex $P5216
    .const 'Sub' $P5217 = 'cuid_90_1361537952.49511' 
    capture_lex $P5217
    .const 'Sub' $P5218 = 'cuid_93_1361537952.49511' 
    capture_lex $P5218
    .const 'Sub' $P5219 = 'cuid_94_1361537952.49511' 
    capture_lex $P5219
    .const 'Sub' $P5220 = 'cuid_95_1361537952.49511' 
    capture_lex $P5220
    .const 'Sub' $P5221 = 'cuid_96_1361537952.49511' 
    capture_lex $P5221
    .const 'Sub' $P5222 = 'cuid_97_1361537952.49511' 
    capture_lex $P5222
    .const 'Sub' $P5223 = 'cuid_98_1361537952.49511' 
    capture_lex $P5223
    .const 'Sub' $P5224 = 'cuid_99_1361537952.49511' 
    capture_lex $P5224
    .const 'Sub' $P5225 = 'cuid_100_1361537952.49511' 
    capture_lex $P5225
    .const 'Sub' $P5226 = 'cuid_101_1361537952.49511' 
    capture_lex $P5226
    .const 'Sub' $P5227 = 'cuid_102_1361537952.49511' 
    capture_lex $P5227
    .const 'Sub' $P5228 = 'cuid_103_1361537952.49511' 
    capture_lex $P5228
    .const 'Sub' $P5229 = 'cuid_104_1361537952.49511' 
    capture_lex $P5229
    .const 'Sub' $P5230 = 'cuid_105_1361537952.49511' 
    capture_lex $P5230
    .const 'Sub' $P5231 = 'cuid_106_1361537952.49511' 
    capture_lex $P5231
    .const 'Sub' $P5232 = 'cuid_107_1361537952.49511' 
    capture_lex $P5232
    .const 'Sub' $P5233 = 'cuid_108_1361537952.49511' 
    capture_lex $P5233
    .const 'Sub' $P5234 = 'cuid_109_1361537952.49511' 
    capture_lex $P5234
    .const 'Sub' $P5235 = 'cuid_110_1361537952.49511' 
    capture_lex $P5235
    .const 'Sub' $P5236 = 'cuid_111_1361537952.49511' 
    capture_lex $P5236
    .const 'Sub' $P5237 = 'cuid_112_1361537952.49511' 
    capture_lex $P5237
    .const 'Sub' $P5238 = 'cuid_113_1361537952.49511' 
    capture_lex $P5238
    .const 'Sub' $P5239 = 'cuid_114_1361537952.49511' 
    capture_lex $P5239
    .const 'Sub' $P5240 = 'cuid_115_1361537952.49511' 
    capture_lex $P5240
    .const 'Sub' $P5241 = 'cuid_116_1361537952.49511' 
    capture_lex $P5241
    .const 'Sub' $P5242 = 'cuid_117_1361537952.49511' 
    capture_lex $P5242
    .const 'Sub' $P5243 = 'cuid_118_1361537952.49511' 
    capture_lex $P5243
    .const 'Sub' $P5244 = 'cuid_119_1361537952.49511' 
    capture_lex $P5244
    .const 'Sub' $P5245 = 'cuid_120_1361537952.49511' 
    capture_lex $P5245
    .const 'Sub' $P5246 = 'cuid_121_1361537952.49511' 
    capture_lex $P5246
    .const 'Sub' $P5247 = 'cuid_122_1361537952.49511' 
    capture_lex $P5247
    .const 'Sub' $P5248 = 'cuid_123_1361537952.49511' 
    capture_lex $P5248
    .const 'Sub' $P5249 = 'cuid_124_1361537952.49511' 
    capture_lex $P5249
    .const 'Sub' $P5250 = 'cuid_125_1361537952.49511' 
    capture_lex $P5250
    .const 'Sub' $P5251 = 'cuid_126_1361537952.49511' 
    capture_lex $P5251
    .const 'Sub' $P5252 = 'cuid_127_1361537952.49511' 
    capture_lex $P5252
    .const 'Sub' $P5253 = 'cuid_128_1361537952.49511' 
    capture_lex $P5253
    .const 'Sub' $P5254 = 'cuid_129_1361537952.49511' 
    capture_lex $P5254
    .const 'Sub' $P5255 = 'cuid_131_1361537952.49511' 
    capture_lex $P5255
    .const 'Sub' $P5256 = 'cuid_132_1361537952.49511' 
    capture_lex $P5256
    .const 'Sub' $P5257 = 'cuid_133_1361537952.49511' 
    capture_lex $P5257
    .const 'Sub' $P5258 = 'cuid_134_1361537952.49511' 
    capture_lex $P5258
    .const 'Sub' $P5259 = 'cuid_135_1361537952.49511' 
    capture_lex $P5259
    .const 'Sub' $P5260 = 'cuid_136_1361537952.49511' 
    capture_lex $P5260
    .const 'Sub' $P5261 = 'cuid_137_1361537952.49511' 
    capture_lex $P5261
    .const 'Sub' $P5262 = 'cuid_138_1361537952.49511' 
    capture_lex $P5262
    .const 'Sub' $P5263 = 'cuid_139_1361537952.49511' 
    capture_lex $P5263
    .const 'Sub' $P5264 = 'cuid_140_1361537952.49511' 
    capture_lex $P5264
    .const 'Sub' $P5265 = 'cuid_141_1361537952.49511' 
    capture_lex $P5265
    .const 'Sub' $P5266 = 'cuid_142_1361537952.49511' 
    capture_lex $P5266
    .const 'Sub' $P5267 = 'cuid_143_1361537952.49511' 
    capture_lex $P5267
    .const 'Sub' $P5268 = 'cuid_144_1361537952.49511' 
    capture_lex $P5268
    .const 'Sub' $P5269 = 'cuid_145_1361537952.49511' 
    capture_lex $P5269
    .const 'Sub' $P5270 = 'cuid_146_1361537952.49511' 
    capture_lex $P5270
    .const 'Sub' $P5271 = 'cuid_147_1361537952.49511' 
    capture_lex $P5271
    .const 'Sub' $P5272 = 'cuid_148_1361537952.49511' 
    capture_lex $P5272
    .const 'Sub' $P5273 = 'cuid_149_1361537952.49511' 
    capture_lex $P5273
    .const 'Sub' $P5274 = 'cuid_150_1361537952.49511' 
    capture_lex $P5274
    .const 'Sub' $P5275 = 'cuid_151_1361537952.49511' 
    capture_lex $P5275
    .const 'Sub' $P5276 = 'cuid_152_1361537952.49511' 
    capture_lex $P5276
    .const 'Sub' $P5277 = 'cuid_153_1361537952.49511' 
    capture_lex $P5277
    .const 'Sub' $P5278 = 'cuid_154_1361537952.49511' 
    capture_lex $P5278
    .const 'Sub' $P5279 = 'cuid_155_1361537952.49511' 
    capture_lex $P5279
    .const 'Sub' $P5280 = 'cuid_156_1361537952.49511' 
    capture_lex $P5280
    .const 'Sub' $P5281 = 'cuid_157_1361537952.49511' 
    capture_lex $P5281
    .const 'Sub' $P5282 = 'cuid_158_1361537952.49511' 
    capture_lex $P5282
    .const 'Sub' $P5283 = 'cuid_159_1361537952.49511' 
    capture_lex $P5283
    .const 'Sub' $P5284 = 'cuid_160_1361537952.49511' 
    capture_lex $P5284
    .const 'Sub' $P5285 = 'cuid_161_1361537952.49511' 
    capture_lex $P5285
    .const 'Sub' $P5286 = 'cuid_162_1361537952.49511' 
    capture_lex $P5286
    .const 'Sub' $P5287 = 'cuid_163_1361537952.49511' 
    capture_lex $P5287
    .const 'Sub' $P5288 = 'cuid_164_1361537952.49511' 
    capture_lex $P5288
    .const 'Sub' $P5289 = 'cuid_165_1361537952.49511' 
    capture_lex $P5289
    .const 'Sub' $P5290 = 'cuid_166_1361537952.49511' 
    capture_lex $P5290
    .const 'Sub' $P5291 = 'cuid_167_1361537952.49511' 
    capture_lex $P5291
    .const 'Sub' $P5292 = 'cuid_168_1361537952.49511' 
    capture_lex $P5292
    .const 'Sub' $P5293 = 'cuid_169_1361537952.49511' 
    capture_lex $P5293
    .const 'Sub' $P5294 = 'cuid_170_1361537952.49511' 
    capture_lex $P5294
    .const 'Sub' $P5295 = 'cuid_171_1361537952.49511' 
    capture_lex $P5295
    .const 'Sub' $P5296 = 'cuid_172_1361537952.49511' 
    capture_lex $P5296
    .const 'Sub' $P5297 = 'cuid_173_1361537952.49511' 
    capture_lex $P5297
    .const 'Sub' $P5298 = 'cuid_174_1361537952.49511' 
    capture_lex $P5298
    .const 'Sub' $P5299 = 'cuid_175_1361537952.49511' 
    capture_lex $P5299
    .const 'Sub' $P5300 = 'cuid_176_1361537952.49511' 
    capture_lex $P5300
    .const 'Sub' $P5301 = 'cuid_177_1361537952.49511' 
    capture_lex $P5301
    .const 'Sub' $P5302 = 'cuid_178_1361537952.49511' 
    capture_lex $P5302
    .const 'Sub' $P5303 = 'cuid_179_1361537952.49511' 
    capture_lex $P5303
    .const 'Sub' $P5304 = 'cuid_180_1361537952.49511' 
    capture_lex $P5304
    .const 'Sub' $P5305 = 'cuid_181_1361537952.49511' 
    capture_lex $P5305
    .const 'Sub' $P5306 = 'cuid_182_1361537952.49511' 
    capture_lex $P5306
    .const 'Sub' $P5307 = 'cuid_183_1361537952.49511' 
    capture_lex $P5307
    .const 'Sub' $P5308 = 'cuid_184_1361537952.49511' 
    capture_lex $P5308
    .const 'Sub' $P5309 = 'cuid_185_1361537952.49511' 
    capture_lex $P5309
    .const 'Sub' $P5310 = 'cuid_186_1361537952.49511' 
    capture_lex $P5310
    .const 'Sub' $P5311 = 'cuid_187_1361537952.49511' 
    capture_lex $P5311
    .const 'Sub' $P5312 = 'cuid_188_1361537952.49511' 
    capture_lex $P5312
    .const 'Sub' $P5313 = 'cuid_189_1361537952.49511' 
    capture_lex $P5313
    .const 'Sub' $P5314 = 'cuid_190_1361537952.49511' 
    capture_lex $P5314
    .const 'Sub' $P5315 = 'cuid_191_1361537952.49511' 
    capture_lex $P5315
    .const 'Sub' $P5316 = 'cuid_192_1361537952.49511' 
    capture_lex $P5316
    .const 'Sub' $P5317 = 'cuid_193_1361537952.49511' 
    capture_lex $P5317
    .const 'Sub' $P5318 = 'cuid_194_1361537952.49511' 
    capture_lex $P5318
    .const 'Sub' $P5319 = 'cuid_195_1361537952.49511' 
    capture_lex $P5319
    .const 'Sub' $P5320 = 'cuid_196_1361537952.49511' 
    capture_lex $P5320
    .const 'Sub' $P5321 = 'cuid_197_1361537952.49511' 
    capture_lex $P5321
    .const 'Sub' $P5322 = 'cuid_198_1361537952.49511' 
    capture_lex $P5322
    .const 'Sub' $P5323 = 'cuid_199_1361537952.49511' 
    capture_lex $P5323
    .const 'Sub' $P5324 = 'cuid_200_1361537952.49511' 
    capture_lex $P5324
    .const 'Sub' $P5325 = 'cuid_201_1361537952.49511' 
    capture_lex $P5325
    .const 'Sub' $P5326 = 'cuid_202_1361537952.49511' 
    capture_lex $P5326
    .const 'Sub' $P5327 = 'cuid_203_1361537952.49511' 
    capture_lex $P5327
    .const 'Sub' $P5328 = 'cuid_204_1361537952.49511' 
    capture_lex $P5328
    .const 'Sub' $P5329 = 'cuid_205_1361537952.49511' 
    capture_lex $P5329
    .const 'Sub' $P5330 = 'cuid_206_1361537952.49511' 
    capture_lex $P5330
    .const 'Sub' $P5331 = 'cuid_207_1361537952.49511' 
    capture_lex $P5331
    .const 'Sub' $P5332 = 'cuid_208_1361537952.49511' 
    capture_lex $P5332
    .const 'Sub' $P5333 = 'cuid_209_1361537952.49511' 
    capture_lex $P5333
    .const 'Sub' $P5334 = 'cuid_210_1361537952.49511' 
    capture_lex $P5334
    .const 'Sub' $P5335 = 'cuid_211_1361537952.49511' 
    capture_lex $P5335
    .const 'Sub' $P5336 = 'cuid_212_1361537952.49511' 
    capture_lex $P5336
    .const 'Sub' $P5337 = 'cuid_213_1361537952.49511' 
    capture_lex $P5337
    .const 'Sub' $P5338 = 'cuid_214_1361537952.49511' 
    capture_lex $P5338
    .const 'Sub' $P5339 = 'cuid_215_1361537952.49511' 
    capture_lex $P5339
    .const 'Sub' $P5340 = 'cuid_216_1361537952.49511' 
    capture_lex $P5340
    .const 'Sub' $P5341 = 'cuid_217_1361537952.49511' 
    capture_lex $P5341
    .const 'Sub' $P5342 = 'cuid_218_1361537952.49511' 
    capture_lex $P5342
    .const 'Sub' $P5343 = 'cuid_219_1361537952.49511' 
    capture_lex $P5343
    .const 'Sub' $P5344 = 'cuid_220_1361537952.49511' 
    capture_lex $P5344
    .const 'Sub' $P5345 = 'cuid_221_1361537952.49511' 
    capture_lex $P5345
    .const 'Sub' $P5346 = 'cuid_223_1361537952.49511' 
    capture_lex $P5346
    .const 'Sub' $P5347 = 'cuid_225_1361537952.49511' 
    capture_lex $P5347
    .const 'Sub' $P5348 = 'cuid_227_1361537952.49511' 
    capture_lex $P5348
    .return ($P5348) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_35_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 644
    .param pmc _lex_param_0 
    .lex "%*LANG", $P101 
    .lex "%*HOW", $P102 
    .lex "$file", $P103 
    .lex "$source_id", $P104 
    .lex "$*W", $P105 
    .lex "$*SCOPE", $P106 
    .lex "$*MULTINESS", $P107 
    .lex "$*PKGDECL", $P108 
    .lex "$*INVOCANT_OK", $P109 
    .lex "$*RETURN_USED", $P110 
    .lex "$*CONTROL_USED", $P111 
    .lex "%*HANDLERS", $P112 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_157 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_158 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_159 
    .local pmc pkg_lookup_tmp_83 
    .local pmc fb_tmp_160 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_161 
    .local pmc pkg_lookup_tmp_84 
    .local pmc fb_tmp_162 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_163 
    .local pmc pkg_lookup_tmp_85 
    .local pmc fb_tmp_164 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_165 
    .local pmc pkg_lookup_tmp_86 
    .local pmc fb_tmp_166 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_167 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_168 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    .local pmc fb_tmp_171 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_172 
    .local pmc pkg_lookup_tmp_87 
    .local pmc fb_tmp_173 
    .local pmc pkg_lookup_tmp_88 
    .local pmc fb_tmp_174 
    .local pmc pkg_viv_tmp_18 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P111, $P5011
    new $P5012, 'Hash'
    set $P112, $P5012
    unless_null $P101, fallback839
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_10, $P5020
    set fb_tmp_158, pkg_viv_tmp_10
    repr_defined $I5002, fb_tmp_158
    unless $I5002 goto if478_else840 
    set $P5022, fb_tmp_158["%LANG"]
    set $P5024, $P5022
    goto if478_end841
  if478_else840:
    null $P5023
    set $P5024, $P5023
  if478_end841:
    unless_null $P5024, vivi_479842
    new $P5025, 'Hash'
    set pkg_viv_tmp_10["%LANG"], $P5025
    set $P5024, $P5025
  vivi_479842:
    unless_null $P5024, vivi_480843
    die "Contextual %*LANG not found"
    box $P5026, "Contextual %*LANG not found"
    set $P5024, $P5026
  vivi_480843:
    set $P101, $P5024
  fallback839:
    nqp_get_sc_object $P5028, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_83, $P5028
    get_who $P5029, pkg_lookup_tmp_83
    exists $I5004, $P5029["NQP"]
    unless $I5004 goto if482_else846 
    get_who $P5031, pkg_lookup_tmp_83
    set $P5030, $P5031["NQP"]
    set $P5033, $P5030
    goto if482_end847
  if482_else846:
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5032
  if482_end847:
    get_who $P5027, $P5033
    set fb_tmp_159, $P5027
    repr_defined $I5003, fb_tmp_159
    unless $I5003 goto if481_else844 
    set $P5034, fb_tmp_159["Regex"]
    set $P5036, $P5034
    goto if481_end845
  if481_else844:
    null $P5035
    set $P5036, $P5035
  if481_end845:
    unless_null $P5036, vivi_483848
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_483848:
    set $P101["Regex"], $P5036
    unless_null $P101, fallback849
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_11, $P5038
    set fb_tmp_160, pkg_viv_tmp_11
    repr_defined $I5005, fb_tmp_160
    unless $I5005 goto if484_else850 
    set $P5040, fb_tmp_160["%LANG"]
    set $P5042, $P5040
    goto if484_end851
  if484_else850:
    null $P5041
    set $P5042, $P5041
  if484_end851:
    unless_null $P5042, vivi_485852
    new $P5043, 'Hash'
    set pkg_viv_tmp_11["%LANG"], $P5043
    set $P5042, $P5043
  vivi_485852:
    unless_null $P5042, vivi_486853
    die "Contextual %*LANG not found"
    box $P5044, "Contextual %*LANG not found"
    set $P5042, $P5044
  vivi_486853:
    set $P101, $P5042
  fallback849:
    nqp_get_sc_object $P5046, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_84, $P5046
    get_who $P5047, pkg_lookup_tmp_84
    exists $I5007, $P5047["NQP"]
    unless $I5007 goto if488_else856 
    get_who $P5049, pkg_lookup_tmp_84
    set $P5048, $P5049["NQP"]
    set $P5051, $P5048
    goto if488_end857
  if488_else856:
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5050
  if488_end857:
    get_who $P5045, $P5051
    set fb_tmp_161, $P5045
    repr_defined $I5006, fb_tmp_161
    unless $I5006 goto if487_else854 
    set $P5052, fb_tmp_161["RegexActions"]
    set $P5054, $P5052
    goto if487_end855
  if487_else854:
    null $P5053
    set $P5054, $P5053
  if487_end855:
    unless_null $P5054, vivi_489858
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_489858:
    set $P101["Regex-actions"], $P5054
    unless_null $P101, fallback859
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_12, $P5056
    set fb_tmp_162, pkg_viv_tmp_12
    repr_defined $I5008, fb_tmp_162
    unless $I5008 goto if490_else860 
    set $P5058, fb_tmp_162["%LANG"]
    set $P5060, $P5058
    goto if490_end861
  if490_else860:
    null $P5059
    set $P5060, $P5059
  if490_end861:
    unless_null $P5060, vivi_491862
    new $P5061, 'Hash'
    set pkg_viv_tmp_12["%LANG"], $P5061
    set $P5060, $P5061
  vivi_491862:
    unless_null $P5060, vivi_492863
    die "Contextual %*LANG not found"
    box $P5062, "Contextual %*LANG not found"
    set $P5060, $P5062
  vivi_492863:
    set $P101, $P5060
  fallback859:
    nqp_get_sc_object $P5064, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_85, $P5064
    get_who $P5065, pkg_lookup_tmp_85
    exists $I5010, $P5065["NQP"]
    unless $I5010 goto if494_else866 
    get_who $P5067, pkg_lookup_tmp_85
    set $P5066, $P5067["NQP"]
    set $P5069, $P5066
    goto if494_end867
  if494_else866:
    nqp_get_sc_object $P5068, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5068
  if494_end867:
    get_who $P5063, $P5069
    set fb_tmp_163, $P5063
    repr_defined $I5009, fb_tmp_163
    unless $I5009 goto if493_else864 
    set $P5070, fb_tmp_163["Grammar"]
    set $P5072, $P5070
    goto if493_end865
  if493_else864:
    null $P5071
    set $P5072, $P5071
  if493_end865:
    unless_null $P5072, vivi_495868
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5073
  vivi_495868:
    set $P101["MAIN"], $P5072
    unless_null $P101, fallback869
    nqp_get_sc_object $P5075, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_13, $P5074
    set fb_tmp_164, pkg_viv_tmp_13
    repr_defined $I5011, fb_tmp_164
    unless $I5011 goto if496_else870 
    set $P5076, fb_tmp_164["%LANG"]
    set $P5078, $P5076
    goto if496_end871
  if496_else870:
    null $P5077
    set $P5078, $P5077
  if496_end871:
    unless_null $P5078, vivi_497872
    new $P5079, 'Hash'
    set pkg_viv_tmp_13["%LANG"], $P5079
    set $P5078, $P5079
  vivi_497872:
    unless_null $P5078, vivi_498873
    die "Contextual %*LANG not found"
    box $P5080, "Contextual %*LANG not found"
    set $P5078, $P5080
  vivi_498873:
    set $P101, $P5078
  fallback869:
    nqp_get_sc_object $P5082, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_86, $P5082
    get_who $P5083, pkg_lookup_tmp_86
    exists $I5013, $P5083["NQP"]
    unless $I5013 goto if500_else876 
    get_who $P5085, pkg_lookup_tmp_86
    set $P5084, $P5085["NQP"]
    set $P5087, $P5084
    goto if500_end877
  if500_else876:
    nqp_get_sc_object $P5086, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5086
  if500_end877:
    get_who $P5081, $P5087
    set fb_tmp_165, $P5081
    repr_defined $I5012, fb_tmp_165
    unless $I5012 goto if499_else874 
    set $P5088, fb_tmp_165["Actions"]
    set $P5090, $P5088
    goto if499_end875
  if499_else874:
    null $P5089
    set $P5090, $P5089
  if499_end875:
    unless_null $P5090, vivi_501878
    nqp_get_sc_object $P5091, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5091
  vivi_501878:
    set $P101["MAIN-actions"], $P5090
    unless_null $P102, fallback884
    nqp_get_sc_object $P5100, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5099, $P5100
    set pkg_viv_tmp_15, $P5099
    set fb_tmp_167, pkg_viv_tmp_15
    repr_defined $I5015, fb_tmp_167
    unless $I5015 goto if505_else885 
    set $P5101, fb_tmp_167["%HOW"]
    set $P5103, $P5101
    goto if505_end886
  if505_else885:
    null $P5102
    set $P5103, $P5102
  if505_end886:
    unless_null $P5103, vivi_506887
    new $P5104, 'Hash'
    set pkg_viv_tmp_15["%HOW"], $P5104
    set $P5103, $P5104
  vivi_506887:
    unless_null $P5103, vivi_507888
    die "Contextual %*HOW not found"
    box $P5105, "Contextual %*HOW not found"
    set $P5103, $P5105
  vivi_507888:
    set $P102, $P5103
  fallback884:
    get_knowhow $P5106
    set $P102["knowhow"], $P5106
    unless_null $P102, fallback889
    nqp_get_sc_object $P5108, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5107, $P5108
    set pkg_viv_tmp_16, $P5107
    set fb_tmp_168, pkg_viv_tmp_16
    repr_defined $I5016, fb_tmp_168
    unless $I5016 goto if508_else890 
    set $P5109, fb_tmp_168["%HOW"]
    set $P5111, $P5109
    goto if508_end891
  if508_else890:
    null $P5110
    set $P5111, $P5110
  if508_end891:
    unless_null $P5111, vivi_509892
    new $P5112, 'Hash'
    set pkg_viv_tmp_16["%HOW"], $P5112
    set $P5111, $P5112
  vivi_509892:
    unless_null $P5111, vivi_510893
    die "Contextual %*HOW not found"
    box $P5113, "Contextual %*HOW not found"
    set $P5111, $P5113
  vivi_510893:
    set $P102, $P5111
  fallback889:
    get_knowhow_attribute $P5114
    set $P102["knowhow-attr"], $P5114
    find_caller_lex $P5115, "$?FILES"
    set $P103, $P5115
.annotate 'line', 663
    nqp_decontainerize $P5116, _lex_param_0
    $P5117 = $P5116."target"()
    set $S5003, $P5117
    nqp_sha1 $S5002, $S5003
    find_dynamic_lex $P5118, "%*COMPILING"
    unless_null $P5118, fallback900
    nqp_get_sc_object $P5120, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5119, $P5120
    set pkg_viv_tmp_17, $P5119
    set fb_tmp_171, pkg_viv_tmp_17
    repr_defined $I5019, fb_tmp_171
    unless $I5019 goto if514_else901 
    set $P5121, fb_tmp_171["%COMPILING"]
    set $P5123, $P5121
    goto if514_end902
  if514_else901:
    null $P5122
    set $P5123, $P5122
  if514_end902:
    unless_null $P5123, vivi_515903
    new $P5124, 'Hash'
    set pkg_viv_tmp_17["%COMPILING"], $P5124
    set $P5123, $P5124
  vivi_515903:
    unless_null $P5123, vivi_516904
    die "Contextual %*COMPILING not found"
    box $P5125, "Contextual %*COMPILING not found"
    set $P5123, $P5125
  vivi_516904:
    set $P5118, $P5123
  fallback900:
    set fb_tmp_170, $P5118
    repr_defined $I5018, fb_tmp_170
    unless $I5018 goto if513_else898 
    set $P5126, fb_tmp_170["%?OPTIONS"]
    set $P5128, $P5126
    goto if513_end899
  if513_else898:
    null $P5127
    set $P5128, $P5127
  if513_end899:
    unless_null $P5128, vivi_517905
    nqp_get_sc_object $P5129, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5128, $P5129
  vivi_517905:
    set fb_tmp_169, $P5128
    repr_defined $I5017, fb_tmp_169
    unless $I5017 goto if512_else896 
    set $P5130, fb_tmp_169["stable-sc"]
    set $P5132, $P5130
    goto if512_end897
  if512_else896:
    null $P5131
    set $P5132, $P5131
  if512_end897:
    unless_null $P5132, vivi_518906
    nqp_get_sc_object $P5133, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5132, $P5133
  vivi_518906:
    unless $P5132 goto if511_else894 
    set $S5006, ""
    goto if511_end895
  if511_else894:
    time $N5001
    set $S5005, $N5001
    concat $S5004, "-", $S5005
    set $S5006, $S5004
  if511_end895:
    concat $S5001, $S5002, $S5006
    box $P5134, $S5001
    set $P104, $P5134
    isnull $I5020, $P103
    unless $I5020 goto if519_else907 
.annotate 'line', 666
    nqp_get_sc_object $P5136, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_87, $P5136
    get_who $P5137, pkg_lookup_tmp_87
    exists $I5022, $P5137["NQP"]
    unless $I5022 goto if521_else911 
    get_who $P5139, pkg_lookup_tmp_87
    set $P5138, $P5139["NQP"]
    set $P5141, $P5138
    goto if521_end912
  if521_else911:
    nqp_get_sc_object $P5140, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5141, $P5140
  if521_end912:
    get_who $P5135, $P5141
    set fb_tmp_172, $P5135
    repr_defined $I5021, fb_tmp_172
    unless $I5021 goto if520_else909 
    set $P5142, fb_tmp_172["World"]
    set $P5144, $P5142
    goto if520_end910
  if520_else909:
    null $P5143
    set $P5144, $P5143
  if520_end910:
    unless_null $P5144, vivi_522913
    nqp_get_sc_object $P5145, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5144, $P5145
  vivi_522913:
    $P5146 = $P5144."new"($P104 :named("handle"))
    set $P5159, $P5146
    goto if519_end908
  if519_else907:
.annotate 'line', 667
    nqp_get_sc_object $P5148, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_88, $P5148
    get_who $P5149, pkg_lookup_tmp_88
    exists $I5024, $P5149["NQP"]
    unless $I5024 goto if524_else916 
    get_who $P5151, pkg_lookup_tmp_88
    set $P5150, $P5151["NQP"]
    set $P5153, $P5150
    goto if524_end917
  if524_else916:
    nqp_get_sc_object $P5152, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5153, $P5152
  if524_end917:
    get_who $P5147, $P5153
    set fb_tmp_173, $P5147
    repr_defined $I5023, fb_tmp_173
    unless $I5023 goto if523_else914 
    set $P5154, fb_tmp_173["World"]
    set $P5156, $P5154
    goto if523_end915
  if523_else914:
    null $P5155
    set $P5156, $P5155
  if523_end915:
    unless_null $P5156, vivi_525918
    nqp_get_sc_object $P5157, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5156, $P5157
  vivi_525918:
    $P5158 = $P5156."new"($P104 :named("handle"), $P103 :named("description"))
    set $P5159, $P5158
  if519_end908:
    set $P105, $P5159
    box $P5160, ""
    set $P106, $P5160
    box $P5161, ""
    set $P107, $P5161
    box $P5162, ""
    set $P108, $P5162
    box $P5163, 0
    set $P109, $P5163
    box $P5164, 0
    set $P110, $P5164
    box $P5165, 0
    set $P111, $P5165
.annotate 'line', 676
    nqp_decontainerize $P5173, _lex_param_0
    $P5174 = $P5173."comp_unit"()
    .return ($P5174) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_36_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 681
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx529_start
    .local string rx529_tgt
    .local int rx529_pos
    .local int rx529_off
    .local int rx529_eos
    .local int rx529_rep
    .local pmc rx529_cur
    .local pmc rx529_curclass
    .local pmc rx529_bstack
    .local pmc rx529_cstack
    rx529_start = self."!cursor_start_all"()
    set rx529_cur, rx529_start[0]
    set rx529_tgt, rx529_start[1]
    set rx529_pos, rx529_start[2]
    set rx529_curclass, rx529_start[3]
    set rx529_bstack, rx529_start[4]
    set $I19, rx529_start[5]
    store_lex unicode:"$\x{a2}", rx529_cur
    length rx529_eos, rx529_tgt
    eq $I19, 1, rx529_restart926
    gt rx529_pos, rx529_eos, rx529_fail927
    repr_get_attr_int $I11, self, rx529_curclass, "$!from"
    ne $I11, -1, rxscan530_done933
    goto rxscan530_scan932
  rxscan530_loop931:
    inc rx529_pos
    gt rx529_pos, rx529_eos, rx529_fail927
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!from", rx529_pos
  rxscan530_scan932:
    nqp_rxmark rx529_bstack, rxscan530_loop931, rx529_pos, 0
  rxscan530_done933:
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ident"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail927
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    nqp_rxmark rx529_bstack, rxquantr532_done936, rx529_pos, 0
  rxquantr532_loop935:
  alt533_0938:
    nqp_rxmark rx529_bstack, alt533_1939, rx529_pos, 0
    add $I11, rx529_pos, 1
    gt $I11, rx529_eos, rx529_fail927
    substr $S10, rx529_tgt, rx529_pos, 1
    ne $S10, ucs4:"-", rx529_fail927
    add rx529_pos, 1
    goto alt533_end937
  alt533_1939:
    ge rx529_pos, rx529_eos, rx529_fail927
    substr $S11, rx529_tgt, rx529_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx529_fail927
    inc rx529_pos
  alt533_end937:
    repr_bind_attr_int rx529_cur, rx529_curclass, "$!pos", rx529_pos
    $P11 = rx529_cur."ident"()
    repr_get_attr_int $I11, $P11, rx529_curclass, "$!pos"
    lt $I11, 0, rx529_fail927
    repr_get_attr_int rx529_pos, $P11, rx529_curclass, "$!pos"
    nqp_rxpeek $I19, rx529_bstack, rxquantr532_done936
    inc $I19
    inc $I19
    set rx529_rep, rx529_bstack[$I19]
    nqp_rxcommit rx529_bstack, rxquantr532_done936
    inc rx529_rep
    nqp_rxmark rx529_bstack, rxquantr532_done936, rx529_pos, rx529_rep
    goto rxquantr532_loop935
  rxquantr532_done936:
    rx529_cur."!cursor_pass"(rx529_pos, "identifier", 'backtrack'=>1)
    .return (rx529_cur)
  rx529_restart926:
    repr_get_attr_obj rx529_cstack, rx529_cur, rx529_curclass, "$!cstack"
  rx529_fail927:
    unless rx529_bstack, rx529_done925
    pop $I19, rx529_bstack
    if_null rx529_cstack, rx529_cstack_done930
    unless rx529_cstack, rx529_cstack_done930
    dec $I19
    set $P11, rx529_cstack[$I19]
  rx529_cstack_done930:
    pop rx529_rep, rx529_bstack
    pop rx529_pos, rx529_bstack
    pop $I19, rx529_bstack
    lt rx529_pos, -1, rx529_done925
    lt rx529_pos, 0, rx529_fail927
    eq $I19, 0, rx529_fail927
    nqp_islist $I20, rx529_cstack
    unless $I20, rx529_jump928
    elements $I18, rx529_bstack
    le $I18, 0, rx529_cut929
    dec $I18
    set $I18, rx529_bstack[$I18]
  rx529_cut929:
    assign rx529_cstack, $I18
  rx529_jump928:
    jump $I19
  rx529_done925:
    rx529_cur."!cursor_fail"()
    .return (rx529_cur) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_37_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 683
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx535_start
    .local string rx535_tgt
    .local int rx535_pos
    .local int rx535_off
    .local int rx535_eos
    .local int rx535_rep
    .local pmc rx535_cur
    .local pmc rx535_curclass
    .local pmc rx535_bstack
    .local pmc rx535_cstack
    rx535_start = self."!cursor_start_all"()
    set rx535_cur, rx535_start[0]
    set rx535_tgt, rx535_start[1]
    set rx535_pos, rx535_start[2]
    set rx535_curclass, rx535_start[3]
    set rx535_bstack, rx535_start[4]
    set $I19, rx535_start[5]
    store_lex unicode:"$\x{a2}", rx535_cur
    length rx535_eos, rx535_tgt
    eq $I19, 1, rx535_restart943
    gt rx535_pos, rx535_eos, rx535_fail944
    repr_get_attr_int $I11, self, rx535_curclass, "$!from"
    ne $I11, -1, rxscan536_done950
    goto rxscan536_scan949
  rxscan536_loop948:
    inc rx535_pos
    gt rx535_pos, rx535_eos, rx535_fail944
    repr_bind_attr_int rx535_cur, rx535_curclass, "$!from", rx535_pos
  rxscan536_scan949:
    nqp_rxmark rx535_bstack, rxscan536_loop948, rx535_pos, 0
  rxscan536_done950:
    repr_bind_attr_int rx535_cur, rx535_curclass, "$!pos", rx535_pos
    $P11 = rx535_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx535_curclass, "$!pos"
    lt $I11, 0, rx535_fail944
    nqp_rxmark rx535_bstack, rxsubrule537_pass951, -1, 0
  rxsubrule537_pass951:
    rx535_cstack = rx535_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx535_pos, $P11, rx535_curclass, "$!pos"
    nqp_rxmark rx535_bstack, rxquantr538_done953, rx535_pos, 0
  rxquantr538_loop952:
    add $I11, rx535_pos, 2
    gt $I11, rx535_eos, rx535_fail944
    substr $S10, rx535_tgt, rx535_pos, 2
    ne $S10, ucs4:"::", rx535_fail944
    add rx535_pos, 2
    repr_bind_attr_int rx535_cur, rx535_curclass, "$!pos", rx535_pos
    $P11 = rx535_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx535_curclass, "$!pos"
    lt $I11, 0, rx535_fail944
    nqp_rxmark rx535_bstack, rxsubrule539_pass954, -1, 0
  rxsubrule539_pass954:
    rx535_cstack = rx535_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx535_pos, $P11, rx535_curclass, "$!pos"
    nqp_rxpeek $I19, rx535_bstack, rxquantr538_done953
    inc $I19
    inc $I19
    set rx535_rep, rx535_bstack[$I19]
    nqp_rxcommit rx535_bstack, rxquantr538_done953
    inc rx535_rep
    nqp_rxmark rx535_bstack, rxquantr538_done953, rx535_pos, rx535_rep
    goto rxquantr538_loop952
  rxquantr538_done953:
    rx535_cur."!cursor_pass"(rx535_pos, "name", 'backtrack'=>1)
    .return (rx535_cur)
  rx535_restart943:
    repr_get_attr_obj rx535_cstack, rx535_cur, rx535_curclass, "$!cstack"
  rx535_fail944:
    unless rx535_bstack, rx535_done942
    pop $I19, rx535_bstack
    if_null rx535_cstack, rx535_cstack_done947
    unless rx535_cstack, rx535_cstack_done947
    dec $I19
    set $P11, rx535_cstack[$I19]
  rx535_cstack_done947:
    pop rx535_rep, rx535_bstack
    pop rx535_pos, rx535_bstack
    pop $I19, rx535_bstack
    lt rx535_pos, -1, rx535_done942
    lt rx535_pos, 0, rx535_fail944
    eq $I19, 0, rx535_fail944
    nqp_islist $I20, rx535_cstack
    unless $I20, rx535_jump945
    elements $I18, rx535_bstack
    le $I18, 0, rx535_cut946
    dec $I18
    set $I18, rx535_bstack[$I18]
  rx535_cut946:
    assign rx535_cstack, $I18
  rx535_jump945:
    jump $I19
  rx535_done942:
    rx535_cur."!cursor_fail"()
    .return (rx535_cur) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_38_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 685
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx540_start
    .local string rx540_tgt
    .local int rx540_pos
    .local int rx540_off
    .local int rx540_eos
    .local int rx540_rep
    .local pmc rx540_cur
    .local pmc rx540_curclass
    .local pmc rx540_bstack
    .local pmc rx540_cstack
    rx540_start = self."!cursor_start_all"()
    set rx540_cur, rx540_start[0]
    set rx540_tgt, rx540_start[1]
    set rx540_pos, rx540_start[2]
    set rx540_curclass, rx540_start[3]
    set rx540_bstack, rx540_start[4]
    set $I19, rx540_start[5]
    store_lex unicode:"$\x{a2}", rx540_cur
    length rx540_eos, rx540_tgt
    eq $I19, 1, rx540_restart957
    gt rx540_pos, rx540_eos, rx540_fail958
    repr_get_attr_int $I11, self, rx540_curclass, "$!from"
    ne $I11, -1, rxscan541_done964
    goto rxscan541_scan963
  rxscan541_loop962:
    inc rx540_pos
    gt rx540_pos, rx540_eos, rx540_fail958
    repr_bind_attr_int rx540_cur, rx540_curclass, "$!from", rx540_pos
  rxscan541_scan963:
    nqp_rxmark rx540_bstack, rxscan541_loop962, rx540_pos, 0
  rxscan541_done964:
    repr_bind_attr_int rx540_cur, rx540_curclass, "$!pos", rx540_pos
    $P11 = rx540_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx540_curclass, "$!pos"
    lt $I11, 0, rx540_fail958
    nqp_rxmark rx540_bstack, rxsubrule542_pass965, -1, 0
  rxsubrule542_pass965:
    rx540_cstack = rx540_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx540_pos, $P11, rx540_curclass, "$!pos"
    nqp_rxmark rx540_bstack, rxquantr543_done967, rx540_pos, 0
  rxquantr543_loop966:
    repr_bind_attr_int rx540_cur, rx540_curclass, "$!pos", rx540_pos
    $P11 = rx540_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx540_curclass, "$!pos"
    lt $I11, 0, rx540_fail958
    goto rxsubrule544_pass968
  rxsubrule544_back969:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx540_curclass, "$!pos"
    lt $I11, 0, rx540_fail958
  rxsubrule544_pass968:
    rx540_cstack = rx540_cur."!cursor_capture"($P11, "colonpair")
    set_addr $I11, rxsubrule544_back969
    push rx540_bstack, $I11
    push rx540_bstack, 0
    push rx540_bstack, rx540_pos
    elements $I11, rx540_cstack
    push rx540_bstack, $I11
    repr_get_attr_int rx540_pos, $P11, rx540_curclass, "$!pos"
    nqp_rxpeek $I19, rx540_bstack, rxquantr543_done967
    inc $I19
    inc $I19
    set rx540_rep, rx540_bstack[$I19]
    nqp_rxcommit rx540_bstack, rxquantr543_done967
    inc rx540_rep
  rxquantr543_done967:
    rx540_cur."!cursor_pass"(rx540_pos, "deflongname", 'backtrack'=>1)
    .return (rx540_cur)
  rx540_restart957:
    repr_get_attr_obj rx540_cstack, rx540_cur, rx540_curclass, "$!cstack"
  rx540_fail958:
    unless rx540_bstack, rx540_done956
    pop $I19, rx540_bstack
    if_null rx540_cstack, rx540_cstack_done961
    unless rx540_cstack, rx540_cstack_done961
    dec $I19
    set $P11, rx540_cstack[$I19]
  rx540_cstack_done961:
    pop rx540_rep, rx540_bstack
    pop rx540_pos, rx540_bstack
    pop $I19, rx540_bstack
    lt rx540_pos, -1, rx540_done956
    lt rx540_pos, 0, rx540_fail958
    eq $I19, 0, rx540_fail958
    nqp_islist $I20, rx540_cstack
    unless $I20, rx540_jump959
    elements $I18, rx540_bstack
    le $I18, 0, rx540_cut960
    dec $I18
    set $I18, rx540_bstack[$I18]
  rx540_cut960:
    assign rx540_cstack, $I18
  rx540_jump959:
    jump $I19
  rx540_done956:
    rx540_cur."!cursor_fail"()
    .return (rx540_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ENDSTMT" :subid("cuid_39_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 689
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx545_start
    .local string rx545_tgt
    .local int rx545_pos
    .local int rx545_off
    .local int rx545_eos
    .local int rx545_rep
    .local pmc rx545_cur
    .local pmc rx545_curclass
    .local pmc rx545_bstack
    .local pmc rx545_cstack
    rx545_start = self."!cursor_start_all"()
    set rx545_cur, rx545_start[0]
    set rx545_tgt, rx545_start[1]
    set rx545_pos, rx545_start[2]
    set rx545_curclass, rx545_start[3]
    set rx545_bstack, rx545_start[4]
    set $I19, rx545_start[5]
    store_lex unicode:"$\x{a2}", rx545_cur
    length rx545_eos, rx545_tgt
    eq $I19, 1, rx545_restart972
    gt rx545_pos, rx545_eos, rx545_fail973
    repr_get_attr_int $I11, self, rx545_curclass, "$!from"
    ne $I11, -1, rxscan546_done979
    goto rxscan546_scan978
  rxscan546_loop977:
    inc rx545_pos
    gt rx545_pos, rx545_eos, rx545_fail973
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!from", rx545_pos
  rxscan546_scan978:
    nqp_rxmark rx545_bstack, rxscan546_loop977, rx545_pos, 0
  rxscan546_done979:
    nqp_rxmark rx545_bstack, rxquantr547_done981, rx545_pos, 0
  rxquantr547_loop980:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt548_0983
    nqp_push_label $P11, alt548_1988
    nqp_rxmark rx545_bstack, alt548_end982, -1, 0
    rx545_cur."!alt"(rx545_pos, "alt_nfa__1_1361537954.24231", $P11)
    goto rx545_fail973
  alt548_0983:
    nqp_rxmark rx545_bstack, rxquantr549_done985, rx545_pos, 0
  rxquantr549_loop984:
    ge rx545_pos, rx545_eos, rx545_fail973
    substr $S11, rx545_tgt, rx545_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx545_fail973
    inc rx545_pos
    nqp_rxpeek $I19, rx545_bstack, rxquantr549_done985
    inc $I19
    inc $I19
    set rx545_rep, rx545_bstack[$I19]
    nqp_rxcommit rx545_bstack, rxquantr549_done985
    inc rx545_rep
    nqp_rxmark rx545_bstack, rxquantr549_done985, rx545_pos, rx545_rep
    goto rxquantr549_loop984
  rxquantr549_done985:
    is_cclass $I11, .CCLASS_NEWLINE, rx545_tgt, rx545_pos
    if $I11, rxanchor550_done986
    ne rx545_pos, rx545_eos, rx545_fail973
    eq rx545_pos, 0, rxanchor550_done986
    sub $I11, rx545_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx545_tgt, $I11
    if $I11, rx545_fail973
  rxanchor550_done986:
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!pos", rx545_pos
    $P11 = rx545_cur."ws"()
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
    repr_get_attr_int rx545_pos, $P11, rx545_curclass, "$!pos"
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!pos", rx545_pos
    $P11 = rx545_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
    goto alt548_end982
  alt548_1988:
    nqp_rxmark rx545_bstack, rxquantr552_done990, rx545_pos, 0
  rxquantr552_loop989:
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!pos", rx545_pos
    $P11 = rx545_cur."unv"()
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
    goto rxsubrule553_pass991
  rxsubrule553_back992:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
  rxsubrule553_pass991:
    rx545_cstack = rx545_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule553_back992
    push rx545_bstack, $I11
    push rx545_bstack, 0
    push rx545_bstack, rx545_pos
    elements $I11, rx545_cstack
    push rx545_bstack, $I11
    repr_get_attr_int rx545_pos, $P11, rx545_curclass, "$!pos"
    nqp_rxpeek $I19, rx545_bstack, rxquantr552_done990
    inc $I19
    inc $I19
    set rx545_rep, rx545_bstack[$I19]
    nqp_rxcommit rx545_bstack, rxquantr552_done990
    inc rx545_rep
  rxquantr552_done990:
    is_cclass $I11, .CCLASS_NEWLINE, rx545_tgt, rx545_pos
    if $I11, rxanchor554_done993
    ne rx545_pos, rx545_eos, rx545_fail973
    eq rx545_pos, 0, rxanchor554_done993
    sub $I11, rx545_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx545_tgt, $I11
    if $I11, rx545_fail973
  rxanchor554_done993:
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!pos", rx545_pos
    $P11 = rx545_cur."ws"()
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
    repr_get_attr_int rx545_pos, $P11, rx545_curclass, "$!pos"
    repr_bind_attr_int rx545_cur, rx545_curclass, "$!pos", rx545_pos
    $P11 = rx545_cur."MARKER"("endstmt")
    repr_get_attr_int $I11, $P11, rx545_curclass, "$!pos"
    lt $I11, 0, rx545_fail973
    goto alt548_end982
  alt548_end982:
    nqp_rxpeek $I19, rx545_bstack, rxquantr547_done981
    inc $I19
    inc $I19
    set rx545_rep, rx545_bstack[$I19]
    nqp_rxcommit rx545_bstack, rxquantr547_done981
    inc rx545_rep
  rxquantr547_done981:
    rx545_cur."!cursor_pass"(rx545_pos, "ENDSTMT", 'backtrack'=>1)
    .return (rx545_cur)
  rx545_restart972:
    repr_get_attr_obj rx545_cstack, rx545_cur, rx545_curclass, "$!cstack"
  rx545_fail973:
    unless rx545_bstack, rx545_done971
    pop $I19, rx545_bstack
    if_null rx545_cstack, rx545_cstack_done976
    unless rx545_cstack, rx545_cstack_done976
    dec $I19
    set $P11, rx545_cstack[$I19]
  rx545_cstack_done976:
    pop rx545_rep, rx545_bstack
    pop rx545_pos, rx545_bstack
    pop $I19, rx545_bstack
    lt rx545_pos, -1, rx545_done971
    lt rx545_pos, 0, rx545_fail973
    eq $I19, 0, rx545_fail973
    nqp_islist $I20, rx545_cstack
    unless $I20, rx545_jump974
    elements $I18, rx545_bstack
    le $I18, 0, rx545_cut975
    dec $I18
    set $I18, rx545_bstack[$I18]
  rx545_cut975:
    assign rx545_cstack, $I18
  rx545_jump974:
    jump $I19
  rx545_done971:
    rx545_cur."!cursor_fail"()
    .return (rx545_cur) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_40_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 696
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx556_start
    .local string rx556_tgt
    .local int rx556_pos
    .local int rx556_off
    .local int rx556_eos
    .local int rx556_rep
    .local pmc rx556_cur
    .local pmc rx556_curclass
    .local pmc rx556_bstack
    .local pmc rx556_cstack
    rx556_start = self."!cursor_start_all"()
    set rx556_cur, rx556_start[0]
    set rx556_tgt, rx556_start[1]
    set rx556_pos, rx556_start[2]
    set rx556_curclass, rx556_start[3]
    set rx556_bstack, rx556_start[4]
    set $I19, rx556_start[5]
    store_lex unicode:"$\x{a2}", rx556_cur
    length rx556_eos, rx556_tgt
    eq $I19, 1, rx556_restart997
    gt rx556_pos, rx556_eos, rx556_fail998
    repr_get_attr_int $I11, self, rx556_curclass, "$!from"
    ne $I11, -1, rxscan557_done1004
    goto rxscan557_scan1003
  rxscan557_loop1002:
    inc rx556_pos
    gt rx556_pos, rx556_eos, rx556_fail998
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!from", rx556_pos
  rxscan557_scan1003:
    nqp_rxmark rx556_bstack, rxscan557_loop1002, rx556_pos, 0
  rxscan557_done1004:
  alt558_01006:
    nqp_rxmark rx556_bstack, alt558_11007, rx556_pos, 0
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."MARKED"("ws")
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail998
    goto alt558_end1005
  alt558_11007:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."ww"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    ge $I11, 0, rx556_fail998
    nqp_rxmark rx556_bstack, rxquantr559_done1009, rx556_pos, 0
  rxquantr559_loop1008:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt560_01011
    nqp_push_label $P11, alt560_11014
    nqp_push_label $P11, alt560_21017
    nqp_push_label $P11, alt560_31020
    nqp_rxmark rx556_bstack, alt560_end1010, -1, 0
    rx556_cur."!alt"(rx556_pos, "alt_nfa__2_1361537954.27351", $P11)
    goto rx556_fail998
  alt560_01011:
    nqp_rxmark rx556_bstack, rxquantr561_done1013, -1, 0
  rxquantr561_loop1012:
    ge rx556_pos, rx556_eos, rx556_fail998
    substr $S11, rx556_tgt, rx556_pos, 1
    index $I11, ucs4:"\n\x{b}\f\r\x{85}\u2028\u2029", $S11
    lt $I11, 0, rx556_fail998
    inc rx556_pos
    nqp_rxpeek $I19, rx556_bstack, rxquantr561_done1013
    inc $I19
    inc $I19
    set rx556_rep, rx556_bstack[$I19]
    nqp_rxcommit rx556_bstack, rxquantr561_done1013
    inc rx556_rep
    nqp_rxmark rx556_bstack, rxquantr561_done1013, rx556_pos, rx556_rep
    goto rxquantr561_loop1012
  rxquantr561_done1013:
    goto alt560_end1010
  alt560_11014:
    add $I11, rx556_pos, 1
    gt $I11, rx556_eos, rx556_fail998
    substr $S10, rx556_tgt, rx556_pos, 1
    ne $S10, ucs4:"#", rx556_fail998
    add rx556_pos, 1
    nqp_rxmark rx556_bstack, rxquantr562_done1016, rx556_pos, 0
  rxquantr562_loop1015:
    ge rx556_pos, rx556_eos, rx556_fail998
    is_cclass $I11, .CCLASS_NEWLINE, rx556_tgt, rx556_pos
    if $I11, rx556_fail998
    add rx556_pos, 1
    nqp_rxpeek $I19, rx556_bstack, rxquantr562_done1016
    inc $I19
    inc $I19
    set rx556_rep, rx556_bstack[$I19]
    nqp_rxcommit rx556_bstack, rxquantr562_done1016
    inc rx556_rep
    nqp_rxmark rx556_bstack, rxquantr562_done1016, rx556_pos, rx556_rep
    goto rxquantr562_loop1015
  rxquantr562_done1016:
    goto alt560_end1010
  alt560_21017:
    eq rx556_pos, 0, rxanchor563_done1018
    ge rx556_pos, rx556_eos, rx556_fail998
    sub $I11, rx556_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx556_tgt, $I11
    unless $I11, rx556_fail998
  rxanchor563_done1018:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail998
    repr_get_attr_int rx556_pos, $P11, rx556_curclass, "$!pos"
    goto alt560_end1010
  alt560_31020:
    nqp_rxmark rx556_bstack, rxquantr565_done1022, -1, 0
  rxquantr565_loop1021:
    ge rx556_pos, rx556_eos, rx556_fail998
    substr $S11, rx556_tgt, rx556_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx556_fail998
    inc rx556_pos
    nqp_rxpeek $I19, rx556_bstack, rxquantr565_done1022
    inc $I19
    inc $I19
    set rx556_rep, rx556_bstack[$I19]
    nqp_rxcommit rx556_bstack, rxquantr565_done1022
    inc rx556_rep
    nqp_rxmark rx556_bstack, rxquantr565_done1022, rx556_pos, rx556_rep
    goto rxquantr565_loop1021
  rxquantr565_done1022:
    goto alt560_end1010
  alt560_end1010:
    nqp_rxpeek $I19, rx556_bstack, rxquantr559_done1009
    inc $I19
    inc $I19
    set rx556_rep, rx556_bstack[$I19]
    nqp_rxcommit rx556_bstack, rxquantr559_done1009
    inc rx556_rep
    nqp_rxmark rx556_bstack, rxquantr559_done1009, rx556_pos, rx556_rep
    goto rxquantr559_loop1008
  rxquantr559_done1009:
    repr_bind_attr_int rx556_cur, rx556_curclass, "$!pos", rx556_pos
    $P11 = rx556_cur."MARKER"("ws")
    repr_get_attr_int $I11, $P11, rx556_curclass, "$!pos"
    lt $I11, 0, rx556_fail998
  alt558_end1005:
    rx556_cur."!cursor_pass"(rx556_pos, "ws", 'backtrack'=>1)
    .return (rx556_cur)
  rx556_restart997:
    repr_get_attr_obj rx556_cstack, rx556_cur, rx556_curclass, "$!cstack"
  rx556_fail998:
    unless rx556_bstack, rx556_done996
    pop $I19, rx556_bstack
    if_null rx556_cstack, rx556_cstack_done1001
    unless rx556_cstack, rx556_cstack_done1001
    dec $I19
    set $P11, rx556_cstack[$I19]
  rx556_cstack_done1001:
    pop rx556_rep, rx556_bstack
    pop rx556_pos, rx556_bstack
    pop $I19, rx556_bstack
    lt rx556_pos, -1, rx556_done996
    lt rx556_pos, 0, rx556_fail998
    eq $I19, 0, rx556_fail998
    nqp_islist $I20, rx556_cstack
    unless $I20, rx556_jump999
    elements $I18, rx556_bstack
    le $I18, 0, rx556_cut1000
    dec $I18
    set $I18, rx556_bstack[$I18]
  rx556_cut1000:
    assign rx556_cstack, $I18
  rx556_jump999:
    jump $I19
  rx556_done996:
    rx556_cur."!cursor_fail"()
    .return (rx556_cur) 
.end
.HLL "nqp"
.namespace []
.sub "unv" :subid("cuid_41_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 707
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_42_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx566_start
    .local string rx566_tgt
    .local int rx566_pos
    .local int rx566_off
    .local int rx566_eos
    .local int rx566_rep
    .local pmc rx566_cur
    .local pmc rx566_curclass
    .local pmc rx566_bstack
    .local pmc rx566_cstack
    rx566_start = self."!cursor_start_all"()
    set rx566_cur, rx566_start[0]
    set rx566_tgt, rx566_start[1]
    set rx566_pos, rx566_start[2]
    set rx566_curclass, rx566_start[3]
    set rx566_bstack, rx566_start[4]
    set $I19, rx566_start[5]
    store_lex unicode:"$\x{a2}", rx566_cur
    length rx566_eos, rx566_tgt
    eq $I19, 1, rx566_restart1025
    gt rx566_pos, rx566_eos, rx566_fail1026
    repr_get_attr_int $I11, self, rx566_curclass, "$!from"
    ne $I11, -1, rxscan567_done1032
    goto rxscan567_scan1031
  rxscan567_loop1030:
    inc rx566_pos
    gt rx566_pos, rx566_eos, rx566_fail1026
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!from", rx566_pos
  rxscan567_scan1031:
    nqp_rxmark rx566_bstack, rxscan567_loop1030, rx566_pos, 0
  rxscan567_done1032:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt568_01034
    nqp_push_label $P11, alt568_11052
    nqp_push_label $P11, alt568_21057
    nqp_rxmark rx566_bstack, alt568_end1033, -1, 0
    rx566_cur."!alt"(rx566_pos, "alt_nfa__4_1361537954.28911", $P11)
    goto rx566_fail1026
  alt568_01034:
    eq rx566_pos, 0, rxanchor569_done1035
    ge rx566_pos, rx566_eos, rx566_fail1026
    sub $I11, rx566_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx566_tgt, $I11
    unless $I11, rx566_fail1026
  rxanchor569_done1035:
    .const 'Sub' $P5001 = 'cuid_42_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx566_curclass, "$!pos"
    lt $I11, 0, rx566_fail1026
    repr_bind_attr_int rx566_cur, rx566_curclass, "$!pos", rx566_pos
    $P11 = rx566_cur."pod_comment"()
    repr_get_attr_int $I11, $P11, rx566_curclass, "$!pos"
    lt $I11, 0, rx566_fail1026
    repr_get_attr_int rx566_pos, $P11, rx566_curclass, "$!pos"
    goto alt568_end1033
  alt568_11052:
    nqp_rxmark rx566_bstack, rxquantr575_done1054, rx566_pos, 0
  rxquantr575_loop1053:
    ge rx566_pos, rx566_eos, rx566_fail1026
    substr $S11, rx566_tgt, rx566_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx566_fail1026
    inc rx566_pos
    nqp_rxpeek $I19, rx566_bstack, rxquantr575_done1054
    inc $I19
    inc $I19
    set rx566_rep, rx566_bstack[$I19]
    nqp_rxcommit rx566_bstack, rxquantr575_done1054
    inc rx566_rep
    nqp_rxmark rx566_bstack, rxquantr575_done1054, rx566_pos, rx566_rep
    goto rxquantr575_loop1053
  rxquantr575_done1054:
    add $I11, rx566_pos, 1
    gt $I11, rx566_eos, rx566_fail1026
    substr $S10, rx566_tgt, rx566_pos, 1
    ne $S10, ucs4:"#", rx566_fail1026
    add rx566_pos, 1
    nqp_rxmark rx566_bstack, rxquantr576_done1056, rx566_pos, 0
  rxquantr576_loop1055:
    ge rx566_pos, rx566_eos, rx566_fail1026
    is_cclass $I11, .CCLASS_NEWLINE, rx566_tgt, rx566_pos
    if $I11, rx566_fail1026
    add rx566_pos, 1
    nqp_rxpeek $I19, rx566_bstack, rxquantr576_done1056
    inc $I19
    inc $I19
    set rx566_rep, rx566_bstack[$I19]
    nqp_rxcommit rx566_bstack, rxquantr576_done1056
    inc rx566_rep
    nqp_rxmark rx566_bstack, rxquantr576_done1056, rx566_pos, rx566_rep
    goto rxquantr576_loop1055
  rxquantr576_done1056:
    goto alt568_end1033
  alt568_21057:
    nqp_rxmark rx566_bstack, rxquantr577_done1059, -1, 0
  rxquantr577_loop1058:
    ge rx566_pos, rx566_eos, rx566_fail1026
    substr $S11, rx566_tgt, rx566_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx566_fail1026
    inc rx566_pos
    nqp_rxpeek $I19, rx566_bstack, rxquantr577_done1059
    inc $I19
    inc $I19
    set rx566_rep, rx566_bstack[$I19]
    nqp_rxcommit rx566_bstack, rxquantr577_done1059
    inc rx566_rep
    nqp_rxmark rx566_bstack, rxquantr577_done1059, rx566_pos, rx566_rep
    goto rxquantr577_loop1058
  rxquantr577_done1059:
    goto alt568_end1033
  alt568_end1033:
    nqp_rxcommit rx566_bstack, alt568_end1033
    rx566_cur."!cursor_pass"(rx566_pos, "unv", 'backtrack'=>1)
    .return (rx566_cur)
  rx566_restart1025:
    repr_get_attr_obj rx566_cstack, rx566_cur, rx566_curclass, "$!cstack"
  rx566_fail1026:
    unless rx566_bstack, rx566_done1024
    pop $I19, rx566_bstack
    if_null rx566_cstack, rx566_cstack_done1029
    unless rx566_cstack, rx566_cstack_done1029
    dec $I19
    set $P11, rx566_cstack[$I19]
  rx566_cstack_done1029:
    pop rx566_rep, rx566_bstack
    pop rx566_pos, rx566_bstack
    pop $I19, rx566_bstack
    lt rx566_pos, -1, rx566_done1024
    lt rx566_pos, 0, rx566_fail1026
    eq $I19, 0, rx566_fail1026
    nqp_islist $I20, rx566_cstack
    unless $I20, rx566_jump1027
    elements $I18, rx566_bstack
    le $I18, 0, rx566_cut1028
    dec $I18
    set $I18, rx566_bstack[$I18]
  rx566_cut1028:
    assign rx566_cstack, $I18
  rx566_jump1027:
    jump $I19
  rx566_done1024:
    rx566_cur."!cursor_fail"()
    .return (rx566_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_42_1361537952.49511") :anon :lex :outer("cuid_41_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx570_start
    .local string rx570_tgt
    .local int rx570_pos
    .local int rx570_off
    .local int rx570_eos
    .local int rx570_rep
    .local pmc rx570_cur
    .local pmc rx570_curclass
    .local pmc rx570_bstack
    .local pmc rx570_cstack
    rx570_start = self."!cursor_start_all"()
    set rx570_cur, rx570_start[0]
    set rx570_tgt, rx570_start[1]
    set rx570_pos, rx570_start[2]
    set rx570_curclass, rx570_start[3]
    set rx570_bstack, rx570_start[4]
    set $I19, rx570_start[5]
    store_lex unicode:"$\x{a2}", rx570_cur
    length rx570_eos, rx570_tgt
    eq $I19, 1, rx570_restart1038
    gt rx570_pos, rx570_eos, rx570_fail1039
    repr_get_attr_int $I11, self, rx570_curclass, "$!from"
    ne $I11, -1, rxscan571_done1045
    goto rxscan571_scan1044
  rxscan571_loop1043:
    inc rx570_pos
    gt rx570_pos, rx570_eos, rx570_fail1039
    repr_bind_attr_int rx570_cur, rx570_curclass, "$!from", rx570_pos
  rxscan571_scan1044:
    nqp_rxmark rx570_bstack, rxscan571_loop1043, rx570_pos, 0
  rxscan571_done1045:
    nqp_rxmark rx570_bstack, rxquantr572_done1047, rx570_pos, 0
  rxquantr572_loop1046:
    ge rx570_pos, rx570_eos, rx570_fail1039
    substr $S11, rx570_tgt, rx570_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx570_fail1039
    inc rx570_pos
    nqp_rxpeek $I19, rx570_bstack, rxquantr572_done1047
    inc $I19
    inc $I19
    set rx570_rep, rx570_bstack[$I19]
    nqp_rxcommit rx570_bstack, rxquantr572_done1047
    inc rx570_rep
    nqp_rxmark rx570_bstack, rxquantr572_done1047, rx570_pos, rx570_rep
    goto rxquantr572_loop1046
  rxquantr572_done1047:
    add $I11, rx570_pos, 1
    gt $I11, rx570_eos, rx570_fail1039
    substr $S10, rx570_tgt, rx570_pos, 1
    ne $S10, ucs4:"=", rx570_fail1039
    add rx570_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt573_01049
    nqp_push_label $P11, alt573_11050
    nqp_rxmark rx570_bstack, alt573_end1048, -1, 0
    rx570_cur."!alt"(rx570_pos, "alt_nfa__3_1361537954.28911", $P11)
    goto rx570_fail1039
  alt573_01049:
    ge rx570_pos, rx570_eos, rx570_fail1039
    is_cclass $I11, .CCLASS_WORD, rx570_tgt, rx570_pos
    unless $I11, rx570_fail1039
    add rx570_pos, 1
    goto alt573_end1048
  alt573_11050:
    add $I11, rx570_pos, 1
    gt $I11, rx570_eos, rx570_fail1039
    substr $S10, rx570_tgt, rx570_pos, 1
    ne $S10, ucs4:"\\", rx570_fail1039
    add rx570_pos, 1
    goto alt573_end1048
  alt573_end1048:
    nqp_rxcommit rx570_bstack, alt573_end1048
    rx570_cur."!cursor_pass"(rx570_pos, 'backtrack'=>1)
    .return (rx570_cur)
  rx570_restart1038:
    repr_get_attr_obj rx570_cstack, rx570_cur, rx570_curclass, "$!cstack"
  rx570_fail1039:
    unless rx570_bstack, rx570_done1037
    pop $I19, rx570_bstack
    if_null rx570_cstack, rx570_cstack_done1042
    unless rx570_cstack, rx570_cstack_done1042
    dec $I19
    set $P11, rx570_cstack[$I19]
  rx570_cstack_done1042:
    pop rx570_rep, rx570_bstack
    pop rx570_pos, rx570_bstack
    pop $I19, rx570_bstack
    lt rx570_pos, -1, rx570_done1037
    lt rx570_pos, 0, rx570_fail1039
    eq $I19, 0, rx570_fail1039
    nqp_islist $I20, rx570_cstack
    unless $I20, rx570_jump1040
    elements $I18, rx570_bstack
    le $I18, 0, rx570_cut1041
    dec $I18
    set $I18, rx570_bstack[$I18]
  rx570_cut1041:
    assign rx570_cstack, $I18
  rx570_jump1040:
    jump $I19
  rx570_done1037:
    rx570_cur."!cursor_fail"()
    .return (rx570_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pod_comment" :subid("cuid_43_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 716
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_44_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx578_start
    .local string rx578_tgt
    .local int rx578_pos
    .local int rx578_off
    .local int rx578_eos
    .local int rx578_rep
    .local pmc rx578_cur
    .local pmc rx578_curclass
    .local pmc rx578_bstack
    .local pmc rx578_cstack
    rx578_start = self."!cursor_start_all"()
    set rx578_cur, rx578_start[0]
    set rx578_tgt, rx578_start[1]
    set rx578_pos, rx578_start[2]
    set rx578_curclass, rx578_start[3]
    set rx578_bstack, rx578_start[4]
    set $I19, rx578_start[5]
    store_lex unicode:"$\x{a2}", rx578_cur
    length rx578_eos, rx578_tgt
    eq $I19, 1, rx578_restart1062
    gt rx578_pos, rx578_eos, rx578_fail1063
    repr_get_attr_int $I11, self, rx578_curclass, "$!from"
    ne $I11, -1, rxscan579_done1069
    goto rxscan579_scan1068
  rxscan579_loop1067:
    inc rx578_pos
    gt rx578_pos, rx578_eos, rx578_fail1063
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!from", rx578_pos
  rxscan579_scan1068:
    nqp_rxmark rx578_bstack, rxscan579_loop1067, rx578_pos, 0
  rxscan579_done1069:
    eq rx578_pos, 0, rxanchor580_done1070
    ge rx578_pos, rx578_eos, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, $I11
    unless $I11, rx578_fail1063
  rxanchor580_done1070:
    nqp_rxmark rx578_bstack, rxquantr581_done1072, rx578_pos, 0
  rxquantr581_loop1071:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr581_done1072
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr581_done1072
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr581_done1072, rx578_pos, rx578_rep
    goto rxquantr581_loop1071
  rxquantr581_done1072:
    add $I11, rx578_pos, 1
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 1
    ne $S10, ucs4:"=", rx578_fail1063
    add rx578_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt582_01074
    nqp_push_label $P11, alt582_11093
    nqp_push_label $P11, alt582_21112
    nqp_push_label $P11, alt582_31134
    nqp_push_label $P11, alt582_41159
    nqp_rxmark rx578_bstack, alt582_end1073, -1, 0
    rx578_cur."!alt"(rx578_pos, "alt_nfa__6_1361537954.42951", $P11)
    goto rx578_fail1063
  alt582_01074:
    add $I11, rx578_pos, 5
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 5
    ne $S10, ucs4:"begin", rx578_fail1063
    add rx578_pos, 5
    nqp_rxmark rx578_bstack, rxquantr583_done1076, -1, 0
  rxquantr583_loop1075:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr583_done1076
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr583_done1076
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr583_done1076, rx578_pos, rx578_rep
    goto rxquantr583_loop1075
  rxquantr583_done1076:
    add $I11, rx578_pos, 3
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 3
    ne $S10, ucs4:"END", rx578_fail1063
    add rx578_pos, 3
    le rx578_pos, 0, rx578_fail1063
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, $I11
    unless $I11, rx578_fail1063
  alt585_01079:
    nqp_rxmark rx578_bstack, alt585_11090, rx578_pos, 0
    set rx578_rep, 0
    nqp_rxmark rx578_bstack, rxquantf586_loop1080, rx578_pos, rx578_rep
    goto rxquantf586_done1081
  rxquantf586_loop1080:
    set $I12, rx578_rep
    ge rx578_pos, rx578_eos, rx578_fail1063
    add rx578_pos, 1
    set rx578_rep, $I12
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantf586_loop1080, rx578_pos, rx578_rep
  rxquantf586_done1081:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    unless $I11, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx578_pos, $I11
    add rx578_pos, 1
    nqp_rxmark rx578_bstack, rxquantr587_done1084, rx578_pos, 0
  rxquantr587_loop1083:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr587_done1084
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr587_done1084
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr587_done1084, rx578_pos, rx578_rep
    goto rxquantr587_loop1083
  rxquantr587_done1084:
    add $I11, rx578_pos, 4
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 4
    ne $S10, ucs4:"=end", rx578_fail1063
    add rx578_pos, 4
    nqp_rxmark rx578_bstack, rxquantr588_done1086, -1, 0
  rxquantr588_loop1085:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr588_done1086
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr588_done1086
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr588_done1086, rx578_pos, rx578_rep
    goto rxquantr588_loop1085
  rxquantr588_done1086:
    add $I11, rx578_pos, 3
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 3
    ne $S10, ucs4:"END", rx578_fail1063
    add rx578_pos, 3
    le rx578_pos, 0, rx578_fail1063
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, $I11
    unless $I11, rx578_fail1063
    nqp_rxmark rx578_bstack, rxquantr590_done1089, rx578_pos, 0
  rxquantr590_loop1088:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    add rx578_pos, 1
    nqp_rxpeek $I19, rx578_bstack, rxquantr590_done1089
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr590_done1089
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr590_done1089, rx578_pos, rx578_rep
    goto rxquantr590_loop1088
  rxquantr590_done1089:
    goto alt585_end1078
  alt585_11090:
    nqp_rxmark rx578_bstack, rxquantr591_done1092, rx578_pos, 0
  rxquantr591_loop1091:
    ge rx578_pos, rx578_eos, rx578_fail1063
    add rx578_pos, 1
    nqp_rxpeek $I19, rx578_bstack, rxquantr591_done1092
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr591_done1092
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr591_done1092, rx578_pos, rx578_rep
    goto rxquantr591_loop1091
  rxquantr591_done1092:
  alt585_end1078:
    goto alt582_end1073
  alt582_11093:
    add $I11, rx578_pos, 5
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 5
    ne $S10, ucs4:"begin", rx578_fail1063
    add rx578_pos, 5
    nqp_rxmark rx578_bstack, rxquantr592_done1095, -1, 0
  rxquantr592_loop1094:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr592_done1095
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr592_done1095
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr592_done1095, rx578_pos, rx578_rep
    goto rxquantr592_loop1094
  rxquantr592_done1095:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    nqp_rxmark rx578_bstack, rxsubrule593_pass1096, -1, 0
  rxsubrule593_pass1096:
    rx578_cstack = rx578_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
  alt594_01098:
    nqp_rxmark rx578_bstack, alt594_11110, rx578_pos, 0
    set rx578_rep, 0
    nqp_rxmark rx578_bstack, rxquantf595_loop1099, rx578_pos, rx578_rep
    goto rxquantf595_done1100
  rxquantf595_loop1099:
    set $I12, rx578_rep
    ge rx578_pos, rx578_eos, rx578_fail1063
    add rx578_pos, 1
    set rx578_rep, $I12
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantf595_loop1099, rx578_pos, rx578_rep
  rxquantf595_done1100:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    unless $I11, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx578_pos, $I11
    add rx578_pos, 1
    nqp_rxmark rx578_bstack, rxquantr596_done1103, rx578_pos, 0
  rxquantr596_loop1102:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr596_done1103
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr596_done1103
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr596_done1103, rx578_pos, rx578_rep
    goto rxquantr596_loop1102
  rxquantr596_done1103:
    add $I11, rx578_pos, 4
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 4
    ne $S10, ucs4:"=end", rx578_fail1063
    add rx578_pos, 4
    nqp_rxmark rx578_bstack, rxquantr597_done1105, -1, 0
  rxquantr597_loop1104:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr597_done1105
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr597_done1105
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr597_done1105, rx578_pos, rx578_rep
    goto rxquantr597_loop1104
  rxquantr597_done1105:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."!BACKREF"("identifier")
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
    le rx578_pos, 0, rx578_fail1063
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, $I11
    unless $I11, rx578_fail1063
    nqp_rxmark rx578_bstack, rxquantr600_done1109, rx578_pos, 0
  rxquantr600_loop1108:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    add rx578_pos, 1
    nqp_rxpeek $I19, rx578_bstack, rxquantr600_done1109
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr600_done1109
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr600_done1109, rx578_pos, rx578_rep
    goto rxquantr600_loop1108
  rxquantr600_done1109:
    goto alt594_end1097
  alt594_11110:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
  alt594_end1097:
    goto alt582_end1073
  alt582_21112:
    add $I11, rx578_pos, 5
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 5
    ne $S10, ucs4:"begin", rx578_fail1063
    add rx578_pos, 5
    le rx578_pos, 0, rx578_fail1063
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, $I11
    unless $I11, rx578_fail1063
    nqp_rxmark rx578_bstack, rxquantr603_done1115, rx578_pos, 0
  rxquantr603_loop1114:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr603_done1115
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr603_done1115
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr603_done1115, rx578_pos, rx578_rep
    goto rxquantr603_loop1114
  rxquantr603_done1115:
  alt604_01117:
    nqp_rxmark rx578_bstack, alt604_11119, rx578_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    if $I11, rxanchor605_done1118
    ne rx578_pos, rx578_eos, rx578_fail1063
    eq rx578_pos, 0, rxanchor605_done1118
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, $I11
    if $I11, rx578_fail1063
  rxanchor605_done1118:
    goto alt604_end1116
  alt604_11119:
    nqp_rxmark rx578_bstack, alt604_21120, rx578_pos, 0
    add $I11, rx578_pos, 1
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 1
    ne $S10, ucs4:"#", rx578_fail1063
    add rx578_pos, 1
    goto alt604_end1116
  alt604_21120:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."panic"("Unrecognized token after =begin")
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
  alt604_end1116:
  alt607_01123:
    nqp_rxmark rx578_bstack, alt607_11132, rx578_pos, 0
    set rx578_rep, 0
    nqp_rxmark rx578_bstack, rxquantf608_loop1124, rx578_pos, rx578_rep
    goto rxquantf608_done1125
  rxquantf608_loop1124:
    set $I12, rx578_rep
    ge rx578_pos, rx578_eos, rx578_fail1063
    add rx578_pos, 1
    set rx578_rep, $I12
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantf608_loop1124, rx578_pos, rx578_rep
  rxquantf608_done1125:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    unless $I11, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx578_pos, $I11
    add rx578_pos, 1
    nqp_rxmark rx578_bstack, rxquantr609_done1128, rx578_pos, 0
  rxquantr609_loop1127:
    ge rx578_pos, rx578_eos, rx578_fail1063
    substr $S11, rx578_tgt, rx578_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx578_fail1063
    inc rx578_pos
    nqp_rxpeek $I19, rx578_bstack, rxquantr609_done1128
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr609_done1128
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr609_done1128, rx578_pos, rx578_rep
    goto rxquantr609_loop1127
  rxquantr609_done1128:
    add $I11, rx578_pos, 4
    gt $I11, rx578_eos, rx578_fail1063
    substr $S10, rx578_tgt, rx578_pos, 4
    ne $S10, ucs4:"=end", rx578_fail1063
    add rx578_pos, 4
    le rx578_pos, 0, rx578_fail1063
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx578_tgt, $I11
    unless $I11, rx578_fail1063
    nqp_rxmark rx578_bstack, rxquantr611_done1131, rx578_pos, 0
  rxquantr611_loop1130:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    add rx578_pos, 1
    nqp_rxpeek $I19, rx578_bstack, rxquantr611_done1131
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr611_done1131
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr611_done1131, rx578_pos, rx578_rep
    goto rxquantr611_loop1130
  rxquantr611_done1131:
    goto alt607_end1122
  alt607_11132:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."panic"("=begin without matching =end")
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
  alt607_end1122:
    goto alt582_end1073
  alt582_31134:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    nqp_rxmark rx578_bstack, rxsubrule613_pass1135, -1, 0
  rxsubrule613_pass1135:
    rx578_cstack = rx578_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
    set rx578_rep, 0
    nqp_rxmark rx578_bstack, rxquantf614_loop1136, rx578_pos, rx578_rep
    goto rxquantf614_done1137
  rxquantf614_loop1136:
    set $I12, rx578_rep
    ge rx578_pos, rx578_eos, rx578_fail1063
    add rx578_pos, 1
    set rx578_rep, $I12
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantf614_loop1136, rx578_pos, rx578_rep
  rxquantf614_done1137:
    eq rx578_pos, 0, rxanchor615_done1139
    ge rx578_pos, rx578_eos, rx578_fail1063
    sub $I11, rx578_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, $I11
    unless $I11, rx578_fail1063
  rxanchor615_done1139:
    .const 'Sub' $P5001 = 'cuid_44_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    goto alt582_end1073
  alt582_41159:
  alt623_01161:
    nqp_rxmark rx578_bstack, alt623_11162, rx578_pos, 0
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_WHITESPACE, rx578_tgt, rx578_pos
    unless $I11, rx578_fail1063
    add rx578_pos, 1
    goto alt623_end1160
  alt623_11162:
    repr_bind_attr_int rx578_cur, rx578_curclass, "$!pos", rx578_pos
    $P11 = rx578_cur."panic"("Illegal pod directive")
    repr_get_attr_int $I11, $P11, rx578_curclass, "$!pos"
    lt $I11, 0, rx578_fail1063
    repr_get_attr_int rx578_pos, $P11, rx578_curclass, "$!pos"
  alt623_end1160:
    nqp_rxmark rx578_bstack, rxquantr625_done1165, rx578_pos, 0
  rxquantr625_loop1164:
    ge rx578_pos, rx578_eos, rx578_fail1063
    is_cclass $I11, .CCLASS_NEWLINE, rx578_tgt, rx578_pos
    if $I11, rx578_fail1063
    add rx578_pos, 1
    nqp_rxpeek $I19, rx578_bstack, rxquantr625_done1165
    inc $I19
    inc $I19
    set rx578_rep, rx578_bstack[$I19]
    nqp_rxcommit rx578_bstack, rxquantr625_done1165
    inc rx578_rep
    nqp_rxmark rx578_bstack, rxquantr625_done1165, rx578_pos, rx578_rep
    goto rxquantr625_loop1164
  rxquantr625_done1165:
    goto alt582_end1073
  alt582_end1073:
    nqp_rxcommit rx578_bstack, alt582_end1073
    rx578_cur."!cursor_pass"(rx578_pos, "pod_comment", 'backtrack'=>1)
    .return (rx578_cur)
  rx578_restart1062:
    repr_get_attr_obj rx578_cstack, rx578_cur, rx578_curclass, "$!cstack"
  rx578_fail1063:
    unless rx578_bstack, rx578_done1061
    pop $I19, rx578_bstack
    if_null rx578_cstack, rx578_cstack_done1066
    unless rx578_cstack, rx578_cstack_done1066
    dec $I19
    set $P11, rx578_cstack[$I19]
  rx578_cstack_done1066:
    pop rx578_rep, rx578_bstack
    pop rx578_pos, rx578_bstack
    pop $I19, rx578_bstack
    lt rx578_pos, -1, rx578_done1061
    lt rx578_pos, 0, rx578_fail1063
    eq $I19, 0, rx578_fail1063
    nqp_islist $I20, rx578_cstack
    unless $I20, rx578_jump1064
    elements $I18, rx578_bstack
    le $I18, 0, rx578_cut1065
    dec $I18
    set $I18, rx578_bstack[$I18]
  rx578_cut1065:
    assign rx578_cstack, $I18
  rx578_jump1064:
    jump $I19
  rx578_done1061:
    rx578_cur."!cursor_fail"()
    .return (rx578_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1361537952.49511") :anon :lex :outer("cuid_43_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx616_start
    .local string rx616_tgt
    .local int rx616_pos
    .local int rx616_off
    .local int rx616_eos
    .local int rx616_rep
    .local pmc rx616_cur
    .local pmc rx616_curclass
    .local pmc rx616_bstack
    .local pmc rx616_cstack
    rx616_start = self."!cursor_start_all"()
    set rx616_cur, rx616_start[0]
    set rx616_tgt, rx616_start[1]
    set rx616_pos, rx616_start[2]
    set rx616_curclass, rx616_start[3]
    set rx616_bstack, rx616_start[4]
    set $I19, rx616_start[5]
    store_lex unicode:"$\x{a2}", rx616_cur
    length rx616_eos, rx616_tgt
    eq $I19, 1, rx616_restart1142
    gt rx616_pos, rx616_eos, rx616_fail1143
    repr_get_attr_int $I11, self, rx616_curclass, "$!from"
    ne $I11, -1, rxscan617_done1149
    goto rxscan617_scan1148
  rxscan617_loop1147:
    inc rx616_pos
    gt rx616_pos, rx616_eos, rx616_fail1143
    repr_bind_attr_int rx616_cur, rx616_curclass, "$!from", rx616_pos
  rxscan617_scan1148:
    nqp_rxmark rx616_bstack, rxscan617_loop1147, rx616_pos, 0
  rxscan617_done1149:
    nqp_rxmark rx616_bstack, rxquantr618_done1151, rx616_pos, 0
  rxquantr618_loop1150:
    ge rx616_pos, rx616_eos, rx616_fail1143
    substr $S11, rx616_tgt, rx616_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx616_fail1143
    inc rx616_pos
    nqp_rxpeek $I19, rx616_bstack, rxquantr618_done1151
    inc $I19
    inc $I19
    set rx616_rep, rx616_bstack[$I19]
    nqp_rxcommit rx616_bstack, rxquantr618_done1151
    inc rx616_rep
    nqp_rxmark rx616_bstack, rxquantr618_done1151, rx616_pos, rx616_rep
    goto rxquantr618_loop1150
  rxquantr618_done1151:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt619_01153
    nqp_push_label $P11, alt619_11158
    nqp_rxmark rx616_bstack, alt619_end1152, -1, 0
    rx616_cur."!alt"(rx616_pos, "alt_nfa__5_1361537954.41391", $P11)
    goto rx616_fail1143
  alt619_01153:
    add $I11, rx616_pos, 1
    gt $I11, rx616_eos, rx616_fail1143
    substr $S10, rx616_tgt, rx616_pos, 1
    ne $S10, ucs4:"=", rx616_fail1143
    add rx616_pos, 1
    nqp_rxmark rx616_bstack, rxquantr620_done1155, rx616_pos, 0
  rxquantr620_loop1154:
    add $I11, rx616_pos, 3
    gt $I11, rx616_eos, rx616_fail1143
    substr $S10, rx616_tgt, rx616_pos, 3
    ne $S10, ucs4:"cut", rx616_fail1143
    add rx616_pos, 3
    le rx616_pos, 0, rx616_fail1143
    is_cclass $I11, .CCLASS_WORD, rx616_tgt, rx616_pos
    if $I11, rx616_fail1143
    sub $I11, rx616_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx616_tgt, $I11
    unless $I11, rx616_fail1143
    repr_bind_attr_int rx616_cur, rx616_curclass, "$!pos", rx616_pos
    $P11 = rx616_cur."panic"("Obsolete pod format, please use =begin/=end instead")
    repr_get_attr_int $I11, $P11, rx616_curclass, "$!pos"
    lt $I11, 0, rx616_fail1143
    repr_get_attr_int rx616_pos, $P11, rx616_curclass, "$!pos"
    nqp_rxpeek $I19, rx616_bstack, rxquantr620_done1155
    inc $I19
    inc $I19
    set rx616_rep, rx616_bstack[$I19]
    nqp_rxcommit rx616_bstack, rxquantr620_done1155
    inc rx616_rep
  rxquantr620_done1155:
    goto alt619_end1152
  alt619_11158:
    ge rx616_pos, rx616_eos, rx616_fail1143
    is_cclass $I11, .CCLASS_NEWLINE, rx616_tgt, rx616_pos
    unless $I11, rx616_fail1143
    substr $S10, rx616_tgt, rx616_pos, 2
    iseq $I11, $S10, "\r\n"
    add rx616_pos, $I11
    add rx616_pos, 1
    goto alt619_end1152
  alt619_end1152:
    nqp_rxcommit rx616_bstack, alt619_end1152
    rx616_cur."!cursor_pass"(rx616_pos, 'backtrack'=>1)
    .return (rx616_cur)
  rx616_restart1142:
    repr_get_attr_obj rx616_cstack, rx616_cur, rx616_curclass, "$!cstack"
  rx616_fail1143:
    unless rx616_bstack, rx616_done1141
    pop $I19, rx616_bstack
    if_null rx616_cstack, rx616_cstack_done1146
    unless rx616_cstack, rx616_cstack_done1146
    dec $I19
    set $P11, rx616_cstack[$I19]
  rx616_cstack_done1146:
    pop rx616_rep, rx616_bstack
    pop rx616_pos, rx616_bstack
    pop $I19, rx616_bstack
    lt rx616_pos, -1, rx616_done1141
    lt rx616_pos, 0, rx616_fail1143
    eq $I19, 0, rx616_fail1143
    nqp_islist $I20, rx616_cstack
    unless $I20, rx616_jump1144
    elements $I18, rx616_bstack
    le $I18, 0, rx616_cut1145
    dec $I18
    set $I18, rx616_bstack[$I18]
  rx616_cut1145:
    assign rx616_cstack, $I18
  rx616_jump1144:
    jump $I19
  rx616_done1141:
    rx616_cur."!cursor_fail"()
    .return (rx616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_45_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 747
    .param pmc _lex_param_0 
    .const 'Sub' $P5073 = 'cuid_399_1361537952.49511' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_400_1361537952.49511' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_402_1361537952.49511' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_403_1361537952.49511' 
    capture_lex $P5073 
    .lex "$*IN_DECL", $P101 
    .lex "$*HAS_YOU_ARE_HERE", $P102 
    .lex "$*MAIN_SUB", $P103 
    .lex "$*UNIT", $P104 
    .lex "$*GLOBALish", $P105 
    .lex "$*PACKAGE", $P106 
    .lex "$*EXPORT", $P107 
    .lex utf8:"$\x{a2}", $P108 
    .lex "$/", $P109 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
    .local pmc fb_tmp_179 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_185 
    .local pmc fb_tmp_189 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P107, $P5007
    set self, _lex_param_0
    .local pmc rx626_start
    .local string rx626_tgt
    .local int rx626_pos
    .local int rx626_off
    .local int rx626_eos
    .local int rx626_rep
    .local pmc rx626_cur
    .local pmc rx626_curclass
    .local pmc rx626_bstack
    .local pmc rx626_cstack
    rx626_start = self."!cursor_start_all"()
    set rx626_cur, rx626_start[0]
    set rx626_tgt, rx626_start[1]
    set rx626_pos, rx626_start[2]
    set rx626_curclass, rx626_start[3]
    set rx626_bstack, rx626_start[4]
    set $I19, rx626_start[5]
    store_lex unicode:"$\x{a2}", rx626_cur
    length rx626_eos, rx626_tgt
    eq $I19, 1, rx626_restart1168
    gt rx626_pos, rx626_eos, rx626_fail1169
    repr_get_attr_int $I11, self, rx626_curclass, "$!from"
    ne $I11, -1, rxscan627_done1175
    goto rxscan627_scan1174
  rxscan627_loop1173:
    inc rx626_pos
    gt rx626_pos, rx626_eos, rx626_fail1169
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!from", rx626_pos
  rxscan627_scan1174:
    nqp_rxmark rx626_bstack, rxscan627_loop1173, rx626_pos, 0
  rxscan627_done1175:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    box $P5008, ""
    set $P101, $P5008
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    box $P5009, 0
    set $P102, $P5009
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    unless_null $P103, fallback1176
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5010, $P5011
    set fb_tmp_175, $P5010
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if628_else1177 
    set $P5012, fb_tmp_175["$MAIN_SUB"]
    set $P5014, $P5012
    goto if628_end1178
  if628_else1177:
    null $P5013
    set $P5014, $P5013
  if628_end1178:
    unless_null $P5014, vivi_6291179
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_6291179:
    unless_null $P5014, vivi_6301180
    die "Contextual $*MAIN_SUB not found"
    box $P5016, "Contextual $*MAIN_SUB not found"
    set $P5014, $P5016
  vivi_6301180:
    set $P103, $P5014
  fallback1176:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
.annotate 'line', 752
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback1181
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5018, $P5019
    set fb_tmp_176, $P5018
    repr_defined $I5002, fb_tmp_176
    unless $I5002 goto if631_else1182 
    set $P5020, fb_tmp_176["$W"]
    set $P5022, $P5020
    goto if631_end1183
  if631_else1182:
    null $P5021
    set $P5022, $P5021
  if631_end1183:
    unless_null $P5022, vivi_6321184
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_6321184:
    unless_null $P5022, vivi_6331185
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_6331185:
    set $P5017, $P5022
  fallback1181:
    $P5025 = $P5017."push_lexpad"($P109)
    set $P104, $P5025
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
.annotate 'line', 756
    find_dynamic_lex $P5026, "$*W"
    unless_null $P5026, fallback1186
    nqp_get_sc_object $P5028, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5027, $P5028
    set fb_tmp_177, $P5027
    repr_defined $I5003, fb_tmp_177
    unless $I5003 goto if634_else1187 
    set $P5029, fb_tmp_177["$W"]
    set $P5031, $P5029
    goto if634_end1188
  if634_else1187:
    null $P5030
    set $P5031, $P5030
  if634_end1188:
    unless_null $P5031, vivi_6351189
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_6351189:
    unless_null $P5031, vivi_6361190
    die "Contextual $*W not found"
    box $P5033, "Contextual $*W not found"
    set $P5031, $P5033
  vivi_6361190:
    set $P5026, $P5031
  fallback1186:
    find_dynamic_lex $P5034, "%*HOW"
    unless_null $P5034, fallback1193
    nqp_get_sc_object $P5036, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_19, $P5035
    set fb_tmp_179, pkg_viv_tmp_19
    repr_defined $I5005, fb_tmp_179
    unless $I5005 goto if638_else1194 
    set $P5037, fb_tmp_179["%HOW"]
    set $P5039, $P5037
    goto if638_end1195
  if638_else1194:
    null $P5038
    set $P5039, $P5038
  if638_end1195:
    unless_null $P5039, vivi_6391196
    new $P5040, 'Hash'
    set pkg_viv_tmp_19["%HOW"], $P5040
    set $P5039, $P5040
  vivi_6391196:
    unless_null $P5039, vivi_6401197
    die "Contextual %*HOW not found"
    box $P5041, "Contextual %*HOW not found"
    set $P5039, $P5041
  vivi_6401197:
    set $P5034, $P5039
  fallback1193:
    set fb_tmp_178, $P5034
    repr_defined $I5004, fb_tmp_178
    unless $I5004 goto if637_else1191 
    set $P5042, fb_tmp_178["knowhow"]
    set $P5044, $P5042
    goto if637_end1192
  if637_else1191:
    null $P5043
    set $P5044, $P5043
  if637_end1192:
    unless_null $P5044, vivi_6411198
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5045
  vivi_6411198:
    $P5046 = $P5026."pkg_create_mo"($P5044, "GLOBALish" :named("name"))
    set $P105, $P5046
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    $P5047 = $P108."MATCH"()
    set $P109, $P5047
    .const 'Sub' $P5048 = 'cuid_399_1361537952.49511' 
    capture_lex $P5048
    $P5049 = $P5048()
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    unless_null $P105, fallback1224
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5050, $P5051
    set fb_tmp_185, $P5050
    repr_defined $I5006, fb_tmp_185
    unless $I5006 goto if657_else1225 
    set $P5052, fb_tmp_185["$GLOBALish"]
    set $P5054, $P5052
    goto if657_end1226
  if657_else1225:
    null $P5053
    set $P5054, $P5053
  if657_end1226:
    unless_null $P5054, vivi_6581227
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_6581227:
    unless_null $P5054, vivi_6591228
    die "Contextual $*GLOBALish not found"
    box $P5056, "Contextual $*GLOBALish not found"
    set $P5054, $P5056
  vivi_6591228:
    set $P105, $P5054
  fallback1224:
    set $P106, $P105
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    $P5057 = $P108."MATCH"()
    set $P109, $P5057
    .const 'Sub' $P5058 = 'cuid_400_1361537952.49511' 
    capture_lex $P5058
    $P5059 = $P5058()
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    unless_null $P107, fallback1244
    nqp_get_sc_object $P5061, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5060, $P5061
    set fb_tmp_189, $P5060
    repr_defined $I5007, fb_tmp_189
    unless $I5007 goto if669_else1245 
    set $P5062, fb_tmp_189["$EXPORT"]
    set $P5064, $P5062
    goto if669_end1246
  if669_else1245:
    null $P5063
    set $P5064, $P5063
  if669_end1246:
    unless_null $P5064, vivi_6701247
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_6701247:
    unless_null $P5064, vivi_6711248
    die "Contextual $*EXPORT not found"
    box $P5066, "Contextual $*EXPORT not found"
    set $P5064, $P5066
  vivi_6711248:
    set $P107, $P5064
  fallback1244:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    $P5067 = $P108."MATCH"()
    set $P109, $P5067
    .const 'Sub' $P5068 = 'cuid_402_1361537952.49511' 
    capture_lex $P5068
    $P5069 = $P5068()
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    store_lex unicode:"$\x{a2}", rx626_cur
    $P5070 = $P108."MATCH"()
    set $P109, $P5070
    .const 'Sub' $P5071 = 'cuid_403_1361537952.49511' 
    capture_lex $P5071
    $P5072 = $P5071()
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."outerctx"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1169
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1169
    nqp_rxmark rx626_bstack, rxsubrule718_pass1324, -1, 0
  rxsubrule718_pass1324:
    rx626_cstack = rx626_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
  alt719_01326:
    nqp_rxmark rx626_bstack, alt719_11328, rx626_pos, 0
    lt rx626_pos, rx626_eos, rx626_fail1169
    goto alt719_end1325
  alt719_11328:
    repr_bind_attr_int rx626_cur, rx626_curclass, "$!pos", rx626_pos
    $P11 = rx626_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx626_curclass, "$!pos"
    lt $I11, 0, rx626_fail1169
    repr_get_attr_int rx626_pos, $P11, rx626_curclass, "$!pos"
  alt719_end1325:
    rx626_cur."!cursor_pass"(rx626_pos, "comp_unit", 'backtrack'=>1)
    .return (rx626_cur)
  rx626_restart1168:
    repr_get_attr_obj rx626_cstack, rx626_cur, rx626_curclass, "$!cstack"
  rx626_fail1169:
    unless rx626_bstack, rx626_done1167
    pop $I19, rx626_bstack
    if_null rx626_cstack, rx626_cstack_done1172
    unless rx626_cstack, rx626_cstack_done1172
    dec $I19
    set $P11, rx626_cstack[$I19]
  rx626_cstack_done1172:
    pop rx626_rep, rx626_bstack
    pop rx626_pos, rx626_bstack
    pop $I19, rx626_bstack
    lt rx626_pos, -1, rx626_done1167
    lt rx626_pos, 0, rx626_fail1169
    eq $I19, 0, rx626_fail1169
    nqp_islist $I20, rx626_cstack
    unless $I20, rx626_jump1170
    elements $I18, rx626_bstack
    le $I18, 0, rx626_cut1171
    dec $I18
    set $I18, rx626_bstack[$I18]
  rx626_cut1171:
    assign rx626_cstack, $I18
  rx626_jump1170:
    jump $I19
  rx626_done1167:
    rx626_cur."!cursor_fail"()
    .return (rx626_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_399_1361537952.49511") :anon :lex :outer("cuid_45_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 757
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
    .local pmc fb_tmp_184 
.annotate 'line', 758
    find_dynamic_lex $P5002, "$*GLOBALish"
    unless_null $P5002, fallback1199
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_180, $P5003
    repr_defined $I5001, fb_tmp_180
    unless $I5001 goto if642_else1200 
    set $P5005, fb_tmp_180["$GLOBALish"]
    set $P5007, $P5005
    goto if642_end1201
  if642_else1200:
    null $P5006
    set $P5007, $P5006
  if642_end1201:
    unless_null $P5007, vivi_6431202
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_6431202:
    unless_null $P5007, vivi_6441203
    die "Contextual $*GLOBALish not found"
    box $P5009, "Contextual $*GLOBALish not found"
    set $P5007, $P5009
  vivi_6441203:
    set $P5002, $P5007
  fallback1199:
    get_how $P5001, $P5002
    find_dynamic_lex $P5010, "$*GLOBALish"
    unless_null $P5010, fallback1204
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5011, $P5012
    set fb_tmp_181, $P5011
    repr_defined $I5002, fb_tmp_181
    unless $I5002 goto if645_else1205 
    set $P5013, fb_tmp_181["$GLOBALish"]
    set $P5015, $P5013
    goto if645_end1206
  if645_else1205:
    null $P5014
    set $P5015, $P5014
  if645_end1206:
    unless_null $P5015, vivi_6461207
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_6461207:
    unless_null $P5015, vivi_6471208
    die "Contextual $*GLOBALish not found"
    box $P5017, "Contextual $*GLOBALish not found"
    set $P5015, $P5017
  vivi_6471208:
    set $P5010, $P5015
  fallback1204:
    $P5001."compose"($P5010)
.annotate 'line', 759
    find_dynamic_lex $P5018, "$*W"
    unless_null $P5018, fallback1209
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5019, $P5020
    set fb_tmp_182, $P5019
    repr_defined $I5003, fb_tmp_182
    unless $I5003 goto if648_else1210 
    set $P5021, fb_tmp_182["$W"]
    set $P5023, $P5021
    goto if648_end1211
  if648_else1210:
    null $P5022
    set $P5023, $P5022
  if648_end1211:
    unless_null $P5023, vivi_6491212
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_6491212:
    unless_null $P5023, vivi_6501213
    die "Contextual $*W not found"
    box $P5025, "Contextual $*W not found"
    set $P5023, $P5025
  vivi_6501213:
    set $P5018, $P5023
  fallback1209:
    find_dynamic_lex $P5026, "$*UNIT"
    unless_null $P5026, fallback1214
    nqp_get_sc_object $P5028, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5027, $P5028
    set fb_tmp_183, $P5027
    repr_defined $I5004, fb_tmp_183
    unless $I5004 goto if651_else1215 
    set $P5029, fb_tmp_183["$UNIT"]
    set $P5031, $P5029
    goto if651_end1216
  if651_else1215:
    null $P5030
    set $P5031, $P5030
  if651_end1216:
    unless_null $P5031, vivi_6521217
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_6521217:
    unless_null $P5031, vivi_6531218
    die "Contextual $*UNIT not found"
    box $P5033, "Contextual $*UNIT not found"
    set $P5031, $P5033
  vivi_6531218:
    set $P5026, $P5031
  fallback1214:
    find_dynamic_lex $P5034, "$*GLOBALish"
    unless_null $P5034, fallback1219
    nqp_get_sc_object $P5036, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5035, $P5036
    set fb_tmp_184, $P5035
    repr_defined $I5005, fb_tmp_184
    unless $I5005 goto if654_else1220 
    set $P5037, fb_tmp_184["$GLOBALish"]
    set $P5039, $P5037
    goto if654_end1221
  if654_else1220:
    null $P5038
    set $P5039, $P5038
  if654_end1221:
    unless_null $P5039, vivi_6551222
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_6551222:
    unless_null $P5039, vivi_6561223
    die "Contextual $*GLOBALish not found"
    box $P5041, "Contextual $*GLOBALish not found"
    set $P5039, $P5041
  vivi_6561223:
    set $P5034, $P5039
  fallback1219:
    $P5042 = $P5018."install_lexical_symbol"($P5026, "GLOBALish", $P5034)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_400_1361537952.49511") :anon :lex :outer("cuid_45_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 764
    .local pmc fb_tmp_186 
    .local pmc fb_tmp_187 
    .local pmc fb_tmp_188 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback1229
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_186, $P5002
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if660_else1230 
    set $P5004, fb_tmp_186["$W"]
    set $P5006, $P5004
    goto if660_end1231
  if660_else1230:
    null $P5005
    set $P5006, $P5005
  if660_end1231:
    unless_null $P5006, vivi_6611232
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_6611232:
    unless_null $P5006, vivi_6621233
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_6621233:
    set $P5001, $P5006
  fallback1229:
    find_dynamic_lex $P5009, "$*UNIT"
    unless_null $P5009, fallback1234
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5010, $P5011
    set fb_tmp_187, $P5010
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if663_else1235 
    set $P5012, fb_tmp_187["$UNIT"]
    set $P5014, $P5012
    goto if663_end1236
  if663_else1235:
    null $P5013
    set $P5014, $P5013
  if663_end1236:
    unless_null $P5014, vivi_6641237
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_6641237:
    unless_null $P5014, vivi_6651238
    die "Contextual $*UNIT not found"
    box $P5016, "Contextual $*UNIT not found"
    set $P5014, $P5016
  vivi_6651238:
    set $P5009, $P5014
  fallback1234:
    find_dynamic_lex $P5017, "$*PACKAGE"
    unless_null $P5017, fallback1239
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5018, $P5019
    set fb_tmp_188, $P5018
    repr_defined $I5003, fb_tmp_188
    unless $I5003 goto if666_else1240 
    set $P5020, fb_tmp_188["$PACKAGE"]
    set $P5022, $P5020
    goto if666_end1241
  if666_else1240:
    null $P5021
    set $P5022, $P5021
  if666_end1241:
    unless_null $P5022, vivi_6671242
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_6671242:
    unless_null $P5022, vivi_6681243
    die "Contextual $*PACKAGE not found"
    box $P5024, "Contextual $*PACKAGE not found"
    set $P5022, $P5024
  vivi_6681243:
    set $P5017, $P5022
  fallback1239:
    $P5025 = $P5001."install_lexical_symbol"($P5009, "$?PACKAGE", $P5017)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_402_1361537952.49511") :anon :lex :outer("cuid_45_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 768
    .const 'Sub' $P5021 = 'cuid_401_1361537952.49511' 
    capture_lex $P5021 
    .local pmc fb_tmp_190 
    .local pmc fb_tmp_191 
    .local pmc fb_tmp_192 
    .local pmc pkg_viv_tmp_20 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback1255
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_20, $P5002
    set fb_tmp_192, pkg_viv_tmp_20
    repr_defined $I5004, fb_tmp_192
    unless $I5004 goto if675_else1256 
    set $P5004, fb_tmp_192["%COMPILING"]
    set $P5006, $P5004
    goto if675_end1257
  if675_else1256:
    null $P5005
    set $P5006, $P5005
  if675_end1257:
    unless_null $P5006, vivi_6761258
    new $P5007, 'Hash'
    set pkg_viv_tmp_20["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_6761258:
    unless_null $P5006, vivi_6771259
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_6771259:
    set $P5001, $P5006
  fallback1255:
    set fb_tmp_191, $P5001
    repr_defined $I5003, fb_tmp_191
    unless $I5003 goto if674_else1253 
    set $P5009, fb_tmp_191["%?OPTIONS"]
    set $P5011, $P5009
    goto if674_end1254
  if674_else1253:
    null $P5010
    set $P5011, $P5010
  if674_end1254:
    unless_null $P5011, vivi_6781260
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_6781260:
    set fb_tmp_190, $P5011
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if673_else1251 
    set $P5013, fb_tmp_190["setting"]
    set $P5015, $P5013
    goto if673_end1252
  if673_else1251:
    null $P5014
    set $P5015, $P5014
  if673_end1252:
    unless_null $P5015, vivi_6791261
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_6791261:
    set $S5001, $P5015
    iseq $I5001, $S5001, "NULL"
    box $P5020, $I5001
    set $P5019, $P5020
    if $I5001 goto unless672_end1250 
    .const 'Sub' $P5017 = 'cuid_401_1361537952.49511' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5019, $P5018
  unless672_end1250:
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_401_1361537952.49511") :anon :lex :outer("cuid_402_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 769
    .lex "$DEFAULT", $P101 
    .local pmc fb_tmp_193 
    .local pmc fb_tmp_194 
    .local pmc fb_tmp_195 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_196 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_204 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 770
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback1262
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_193, $P5003
    repr_defined $I5001, fb_tmp_193
    unless $I5001 goto if680_else1263 
    set $P5005, fb_tmp_193["$W"]
    set $P5007, $P5005
    goto if680_end1264
  if680_else1263:
    null $P5006
    set $P5007, $P5006
  if680_end1264:
    unless_null $P5007, vivi_6811265
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_6811265:
    unless_null $P5007, vivi_6821266
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_6821266:
    set $P5002, $P5007
  fallback1262:
    find_dynamic_lex $P5010, "%*HOW"
    unless_null $P5010, fallback1269
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5011, $P5012
    set pkg_viv_tmp_21, $P5011
    set fb_tmp_195, pkg_viv_tmp_21
    repr_defined $I5003, fb_tmp_195
    unless $I5003 goto if684_else1270 
    set $P5013, fb_tmp_195["%HOW"]
    set $P5015, $P5013
    goto if684_end1271
  if684_else1270:
    null $P5014
    set $P5015, $P5014
  if684_end1271:
    unless_null $P5015, vivi_6851272
    new $P5016, 'Hash'
    set pkg_viv_tmp_21["%HOW"], $P5016
    set $P5015, $P5016
  vivi_6851272:
    unless_null $P5015, vivi_6861273
    die "Contextual %*HOW not found"
    box $P5017, "Contextual %*HOW not found"
    set $P5015, $P5017
  vivi_6861273:
    set $P5010, $P5015
  fallback1269:
    set fb_tmp_194, $P5010
    repr_defined $I5002, fb_tmp_194
    unless $I5002 goto if683_else1267 
    set $P5018, fb_tmp_194["knowhow"]
    set $P5020, $P5018
    goto if683_end1268
  if683_else1267:
    null $P5019
    set $P5020, $P5019
  if683_end1268:
    unless_null $P5020, vivi_6871274
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_6871274:
    $P5022 = $P5002."pkg_create_mo"($P5020, "EXPORT" :named("name"))
    store_dynamic_lex "$*EXPORT", $P5022
.annotate 'line', 771
    find_dynamic_lex $P5024, "$*EXPORT"
    unless_null $P5024, fallback1275
    nqp_get_sc_object $P5026, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5025, $P5026
    set fb_tmp_196, $P5025
    repr_defined $I5004, fb_tmp_196
    unless $I5004 goto if688_else1276 
    set $P5027, fb_tmp_196["$EXPORT"]
    set $P5029, $P5027
    goto if688_end1277
  if688_else1276:
    null $P5028
    set $P5029, $P5028
  if688_end1277:
    unless_null $P5029, vivi_6891278
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_6891278:
    unless_null $P5029, vivi_6901279
    die "Contextual $*EXPORT not found"
    box $P5031, "Contextual $*EXPORT not found"
    set $P5029, $P5031
  vivi_6901279:
    set $P5024, $P5029
  fallback1275:
    get_how $P5023, $P5024
    find_dynamic_lex $P5032, "$*EXPORT"
    unless_null $P5032, fallback1280
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5033, $P5034
    set fb_tmp_197, $P5033
    repr_defined $I5005, fb_tmp_197
    unless $I5005 goto if691_else1281 
    set $P5035, fb_tmp_197["$EXPORT"]
    set $P5037, $P5035
    goto if691_end1282
  if691_else1281:
    null $P5036
    set $P5037, $P5036
  if691_end1282:
    unless_null $P5037, vivi_6921283
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_6921283:
    unless_null $P5037, vivi_6931284
    die "Contextual $*EXPORT not found"
    box $P5039, "Contextual $*EXPORT not found"
    set $P5037, $P5039
  vivi_6931284:
    set $P5032, $P5037
  fallback1280:
    $P5023."compose"($P5032)
.annotate 'line', 772
    find_dynamic_lex $P5040, "$*W"
    unless_null $P5040, fallback1285
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5041, $P5042
    set fb_tmp_198, $P5041
    repr_defined $I5006, fb_tmp_198
    unless $I5006 goto if694_else1286 
    set $P5043, fb_tmp_198["$W"]
    set $P5045, $P5043
    goto if694_end1287
  if694_else1286:
    null $P5044
    set $P5045, $P5044
  if694_end1287:
    unless_null $P5045, vivi_6951288
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_6951288:
    unless_null $P5045, vivi_6961289
    die "Contextual $*W not found"
    box $P5047, "Contextual $*W not found"
    set $P5045, $P5047
  vivi_6961289:
    set $P5040, $P5045
  fallback1285:
    find_dynamic_lex $P5048, "$*UNIT"
    unless_null $P5048, fallback1290
    nqp_get_sc_object $P5050, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5049, $P5050
    set fb_tmp_199, $P5049
    repr_defined $I5007, fb_tmp_199
    unless $I5007 goto if697_else1291 
    set $P5051, fb_tmp_199["$UNIT"]
    set $P5053, $P5051
    goto if697_end1292
  if697_else1291:
    null $P5052
    set $P5053, $P5052
  if697_end1292:
    unless_null $P5053, vivi_6981293
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_6981293:
    unless_null $P5053, vivi_6991294
    die "Contextual $*UNIT not found"
    box $P5055, "Contextual $*UNIT not found"
    set $P5053, $P5055
  vivi_6991294:
    set $P5048, $P5053
  fallback1290:
    find_dynamic_lex $P5056, "$*EXPORT"
    unless_null $P5056, fallback1295
    nqp_get_sc_object $P5058, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5057, $P5058
    set fb_tmp_200, $P5057
    repr_defined $I5008, fb_tmp_200
    unless $I5008 goto if700_else1296 
    set $P5059, fb_tmp_200["$EXPORT"]
    set $P5061, $P5059
    goto if700_end1297
  if700_else1296:
    null $P5060
    set $P5061, $P5060
  if700_end1297:
    unless_null $P5061, vivi_7011298
    nqp_get_sc_object $P5062, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5062
  vivi_7011298:
    unless_null $P5061, vivi_7021299
    die "Contextual $*EXPORT not found"
    box $P5063, "Contextual $*EXPORT not found"
    set $P5061, $P5063
  vivi_7021299:
    set $P5056, $P5061
  fallback1295:
    $P5040."install_lexical_symbol"($P5048, "EXPORT", $P5056)
.annotate 'line', 773
    find_dynamic_lex $P5064, "$*W"
    unless_null $P5064, fallback1300
    nqp_get_sc_object $P5066, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5065, $P5066
    set fb_tmp_201, $P5065
    repr_defined $I5009, fb_tmp_201
    unless $I5009 goto if703_else1301 
    set $P5067, fb_tmp_201["$W"]
    set $P5069, $P5067
    goto if703_end1302
  if703_else1301:
    null $P5068
    set $P5069, $P5068
  if703_end1302:
    unless_null $P5069, vivi_7041303
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5070
  vivi_7041303:
    unless_null $P5069, vivi_7051304
    die "Contextual $*W not found"
    box $P5071, "Contextual $*W not found"
    set $P5069, $P5071
  vivi_7051304:
    set $P5064, $P5069
  fallback1300:
    find_dynamic_lex $P5072, "%*HOW"
    unless_null $P5072, fallback1307
    nqp_get_sc_object $P5074, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_22, $P5073
    set fb_tmp_203, pkg_viv_tmp_22
    repr_defined $I5011, fb_tmp_203
    unless $I5011 goto if707_else1308 
    set $P5075, fb_tmp_203["%HOW"]
    set $P5077, $P5075
    goto if707_end1309
  if707_else1308:
    null $P5076
    set $P5077, $P5076
  if707_end1309:
    unless_null $P5077, vivi_7081310
    new $P5078, 'Hash'
    set pkg_viv_tmp_22["%HOW"], $P5078
    set $P5077, $P5078
  vivi_7081310:
    unless_null $P5077, vivi_7091311
    die "Contextual %*HOW not found"
    box $P5079, "Contextual %*HOW not found"
    set $P5077, $P5079
  vivi_7091311:
    set $P5072, $P5077
  fallback1307:
    set fb_tmp_202, $P5072
    repr_defined $I5010, fb_tmp_202
    unless $I5010 goto if706_else1305 
    set $P5080, fb_tmp_202["knowhow"]
    set $P5082, $P5080
    goto if706_end1306
  if706_else1305:
    null $P5081
    set $P5082, $P5081
  if706_end1306:
    unless_null $P5082, vivi_7101312
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_7101312:
    $P5084 = $P5064."pkg_create_mo"($P5082, "DEFAULT" :named("name"))
    set $P101, $P5084
.annotate 'line', 774
    get_how $P5085, $P101
    $P5085."compose"($P101)
    find_dynamic_lex $P5087, "$*EXPORT"
    unless_null $P5087, fallback1313
    nqp_get_sc_object $P5089, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5088, $P5089
    set fb_tmp_204, $P5088
    repr_defined $I5012, fb_tmp_204
    unless $I5012 goto if711_else1314 
    set $P5090, fb_tmp_204["$EXPORT"]
    set $P5092, $P5090
    goto if711_end1315
  if711_else1314:
    null $P5091
    set $P5092, $P5091
  if711_end1315:
    unless_null $P5092, vivi_7121316
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5092, $P5093
  vivi_7121316:
    unless_null $P5092, vivi_7131317
    die "Contextual $*EXPORT not found"
    box $P5094, "Contextual $*EXPORT not found"
    set $P5092, $P5094
  vivi_7131317:
    set $P5087, $P5092
  fallback1313:
    get_who $P5086, $P5087
    set $P5086["DEFAULT"], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_403_1361537952.49511") :anon :lex :outer("cuid_45_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 779
    .local pmc fb_tmp_205 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback1318
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_205, $P5002
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if714_else1319 
    set $P5004, fb_tmp_205["$W"]
    set $P5006, $P5004
    goto if714_end1320
  if714_else1319:
    null $P5005
    set $P5006, $P5005
  if714_end1320:
    unless_null $P5006, vivi_7151321
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_7151321:
    unless_null $P5006, vivi_7161322
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_7161322:
    set $P5001, $P5006
  fallback1318:
    $P5009 = $P5001."add_initializations"()
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_46_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 787
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx722_start
    .local string rx722_tgt
    .local int rx722_pos
    .local int rx722_off
    .local int rx722_eos
    .local int rx722_rep
    .local pmc rx722_cur
    .local pmc rx722_curclass
    .local pmc rx722_bstack
    .local pmc rx722_cstack
    rx722_start = self."!cursor_start_all"()
    set rx722_cur, rx722_start[0]
    set rx722_tgt, rx722_start[1]
    set rx722_pos, rx722_start[2]
    set rx722_curclass, rx722_start[3]
    set rx722_bstack, rx722_start[4]
    set $I19, rx722_start[5]
    store_lex unicode:"$\x{a2}", rx722_cur
    length rx722_eos, rx722_tgt
    eq $I19, 1, rx722_restart1332
    gt rx722_pos, rx722_eos, rx722_fail1333
    repr_get_attr_int $I11, self, rx722_curclass, "$!from"
    ne $I11, -1, rxscan723_done1339
    goto rxscan723_scan1338
  rxscan723_loop1337:
    inc rx722_pos
    gt rx722_pos, rx722_eos, rx722_fail1333
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!from", rx722_pos
  rxscan723_scan1338:
    nqp_rxmark rx722_bstack, rxscan723_loop1337, rx722_pos, 0
  rxscan723_done1339:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt724_01341
    nqp_push_label $P11, alt724_11345
    nqp_rxmark rx722_bstack, alt724_end1340, -1, 0
    rx722_cur."!alt"(rx722_pos, "alt_nfa__7_1361537954.55431", $P11)
    goto rx722_fail1333
  alt724_01341:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."ws"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    lt rx722_pos, rx722_eos, rx722_fail1333
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."ws"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    goto alt724_end1340
  alt724_11345:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."ws"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    nqp_rxmark rx722_bstack, rxquantr729_done1348, rx722_pos, 0
  rxquantr729_loop1347:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."statement"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    nqp_rxmark rx722_bstack, rxsubrule730_pass1349, -1, 0
  rxsubrule730_pass1349:
    rx722_cstack = rx722_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."eat_terminator"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."ws"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    nqp_rxpeek $I19, rx722_bstack, rxquantr729_done1348
    inc $I19
    inc $I19
    set rx722_rep, rx722_bstack[$I19]
    nqp_rxcommit rx722_bstack, rxquantr729_done1348
    inc rx722_rep
    nqp_rxmark rx722_bstack, rxquantr729_done1348, rx722_pos, rx722_rep
    goto rxquantr729_loop1347
  rxquantr729_done1348:
    repr_bind_attr_int rx722_cur, rx722_curclass, "$!pos", rx722_pos
    $P11 = rx722_cur."ws"()
    repr_get_attr_int $I11, $P11, rx722_curclass, "$!pos"
    lt $I11, 0, rx722_fail1333
    repr_get_attr_int rx722_pos, $P11, rx722_curclass, "$!pos"
    goto alt724_end1340
  alt724_end1340:
    rx722_cur."!cursor_pass"(rx722_pos, "statementlist", 'backtrack'=>1)
    .return (rx722_cur)
  rx722_restart1332:
    repr_get_attr_obj rx722_cstack, rx722_cur, rx722_curclass, "$!cstack"
  rx722_fail1333:
    unless rx722_bstack, rx722_done1331
    pop $I19, rx722_bstack
    if_null rx722_cstack, rx722_cstack_done1336
    unless rx722_cstack, rx722_cstack_done1336
    dec $I19
    set $P11, rx722_cstack[$I19]
  rx722_cstack_done1336:
    pop rx722_rep, rx722_bstack
    pop rx722_pos, rx722_bstack
    pop $I19, rx722_bstack
    lt rx722_pos, -1, rx722_done1331
    lt rx722_pos, 0, rx722_fail1333
    eq $I19, 0, rx722_fail1333
    nqp_islist $I20, rx722_cstack
    unless $I20, rx722_jump1334
    elements $I18, rx722_bstack
    le $I18, 0, rx722_cut1335
    dec $I18
    set $I18, rx722_bstack[$I18]
  rx722_cut1335:
    assign rx722_cstack, $I18
  rx722_jump1334:
    jump $I19
  rx722_done1331:
    rx722_cur."!cursor_fail"()
    .return (rx722_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_47_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 792
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_48_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx734_start
    .local string rx734_tgt
    .local int rx734_pos
    .local int rx734_off
    .local int rx734_eos
    .local int rx734_rep
    .local pmc rx734_cur
    .local pmc rx734_curclass
    .local pmc rx734_bstack
    .local pmc rx734_cstack
    rx734_start = self."!cursor_start_all"()
    set rx734_cur, rx734_start[0]
    set rx734_tgt, rx734_start[1]
    set rx734_pos, rx734_start[2]
    set rx734_curclass, rx734_start[3]
    set rx734_bstack, rx734_start[4]
    set $I19, rx734_start[5]
    store_lex unicode:"$\x{a2}", rx734_cur
    length rx734_eos, rx734_tgt
    eq $I19, 1, rx734_restart1355
    gt rx734_pos, rx734_eos, rx734_fail1356
    repr_get_attr_int $I11, self, rx734_curclass, "$!from"
    ne $I11, -1, rxscan735_done1362
    goto rxscan735_scan1361
  rxscan735_loop1360:
    inc rx734_pos
    gt rx734_pos, rx734_eos, rx734_fail1356
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!from", rx734_pos
  rxscan735_scan1361:
    nqp_rxmark rx734_bstack, rxscan735_loop1360, rx734_pos, 0
  rxscan735_done1362:
    .const 'Sub' $P5001 = 'cuid_48_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    ge $I11, 0, rx734_fail1356
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt741_01381
    nqp_push_label $P11, alt741_11383
    nqp_rxmark rx734_bstack, alt741_end1380, -1, 0
    rx734_cur."!alt"(rx734_pos, "alt_nfa__9_1361537954.60111", $P11)
    goto rx734_fail1356
  alt741_01381:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."statement_control"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    nqp_rxmark rx734_bstack, rxsubrule742_pass1382, -1, 0
  rxsubrule742_pass1382:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "statement_control")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    goto alt741_end1380
  alt741_11383:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    nqp_rxmark rx734_bstack, rxsubrule743_pass1384, -1, 0
  rxsubrule743_pass1384:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."ws"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    nqp_rxmark rx734_bstack, rxquantr745_done1387, rx734_pos, 0
  rxquantr745_loop1386:
  alt746_01389:
    nqp_rxmark rx734_bstack, alt746_11390, rx734_pos, 0
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    goto alt746_end1388
  alt746_11390:
    nqp_rxmark rx734_bstack, alt746_21396, rx734_pos, 0
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."statement_mod_cond"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    nqp_rxmark rx734_bstack, rxsubrule747_pass1391, -1, 0
  rxsubrule747_pass1391:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "statement_mod_cond")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    nqp_rxmark rx734_bstack, rxquantr748_done1393, rx734_pos, 0
  rxquantr748_loop1392:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    goto rxsubrule749_pass1394
  rxsubrule749_back1395:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
  rxsubrule749_pass1394:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "statement_mod_loop")
    set_addr $I11, rxsubrule749_back1395
    push rx734_bstack, $I11
    push rx734_bstack, 0
    push rx734_bstack, rx734_pos
    elements $I11, rx734_cstack
    push rx734_bstack, $I11
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
    nqp_rxpeek $I19, rx734_bstack, rxquantr748_done1393
    inc $I19
    inc $I19
    set rx734_rep, rx734_bstack[$I19]
    nqp_rxcommit rx734_bstack, rxquantr748_done1393
    inc rx734_rep
  rxquantr748_done1393:
    goto alt746_end1388
  alt746_21396:
    repr_bind_attr_int rx734_cur, rx734_curclass, "$!pos", rx734_pos
    $P11 = rx734_cur."statement_mod_loop"()
    repr_get_attr_int $I11, $P11, rx734_curclass, "$!pos"
    lt $I11, 0, rx734_fail1356
    nqp_rxmark rx734_bstack, rxsubrule750_pass1397, -1, 0
  rxsubrule750_pass1397:
    rx734_cstack = rx734_cur."!cursor_capture"($P11, "statement_mod_loop")
    repr_get_attr_int rx734_pos, $P11, rx734_curclass, "$!pos"
  alt746_end1388:
    nqp_rxpeek $I19, rx734_bstack, rxquantr745_done1387
    inc $I19
    inc $I19
    set rx734_rep, rx734_bstack[$I19]
    nqp_rxcommit rx734_bstack, rxquantr745_done1387
    inc rx734_rep
  rxquantr745_done1387:
    goto alt741_end1380
  alt741_end1380:
    nqp_rxcommit rx734_bstack, alt741_end1380
    rx734_cur."!cursor_pass"(rx734_pos, "statement", 'backtrack'=>1)
    .return (rx734_cur)
  rx734_restart1355:
    repr_get_attr_obj rx734_cstack, rx734_cur, rx734_curclass, "$!cstack"
  rx734_fail1356:
    unless rx734_bstack, rx734_done1354
    pop $I19, rx734_bstack
    if_null rx734_cstack, rx734_cstack_done1359
    unless rx734_cstack, rx734_cstack_done1359
    dec $I19
    set $P11, rx734_cstack[$I19]
  rx734_cstack_done1359:
    pop rx734_rep, rx734_bstack
    pop rx734_pos, rx734_bstack
    pop $I19, rx734_bstack
    lt rx734_pos, -1, rx734_done1354
    lt rx734_pos, 0, rx734_fail1356
    eq $I19, 0, rx734_fail1356
    nqp_islist $I20, rx734_cstack
    unless $I20, rx734_jump1357
    elements $I18, rx734_bstack
    le $I18, 0, rx734_cut1358
    dec $I18
    set $I18, rx734_bstack[$I18]
  rx734_cut1358:
    assign rx734_cstack, $I18
  rx734_jump1357:
    jump $I19
  rx734_done1354:
    rx734_cur."!cursor_fail"()
    .return (rx734_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_48_1361537952.49511") :anon :lex :outer("cuid_47_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx736_start
    .local string rx736_tgt
    .local int rx736_pos
    .local int rx736_off
    .local int rx736_eos
    .local int rx736_rep
    .local pmc rx736_cur
    .local pmc rx736_curclass
    .local pmc rx736_bstack
    .local pmc rx736_cstack
    rx736_start = self."!cursor_start_all"()
    set rx736_cur, rx736_start[0]
    set rx736_tgt, rx736_start[1]
    set rx736_pos, rx736_start[2]
    set rx736_curclass, rx736_start[3]
    set rx736_bstack, rx736_start[4]
    set $I19, rx736_start[5]
    store_lex unicode:"$\x{a2}", rx736_cur
    length rx736_eos, rx736_tgt
    eq $I19, 1, rx736_restart1365
    gt rx736_pos, rx736_eos, rx736_fail1366
    repr_get_attr_int $I11, self, rx736_curclass, "$!from"
    ne $I11, -1, rxscan737_done1372
    goto rxscan737_scan1371
  rxscan737_loop1370:
    inc rx736_pos
    gt rx736_pos, rx736_eos, rx736_fail1366
    repr_bind_attr_int rx736_cur, rx736_curclass, "$!from", rx736_pos
  rxscan737_scan1371:
    nqp_rxmark rx736_bstack, rxscan737_loop1370, rx736_pos, 0
  rxscan737_done1372:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt738_01374
    nqp_push_label $P11, alt738_11378
    nqp_rxmark rx736_bstack, alt738_end1373, -1, 0
    rx736_cur."!alt"(rx736_pos, "alt_nfa__8_1361537954.55431", $P11)
    goto rx736_fail1366
  alt738_01374:
  alt739_01376:
    nqp_rxmark rx736_bstack, alt739_11377, rx736_pos, 0
    add $I11, rx736_pos, 1
    gt $I11, rx736_eos, rx736_fail1366
    substr $S10, rx736_tgt, rx736_pos, 1
    ne $S10, ucs4:"]", rx736_fail1366
    add rx736_pos, 1
    goto alt739_end1375
  alt739_11377:
    ge rx736_pos, rx736_eos, rx736_fail1366
    substr $S11, rx736_tgt, rx736_pos, 1
    index $I11, ucs4:")}", $S11
    lt $I11, 0, rx736_fail1366
    inc rx736_pos
  alt739_end1375:
    goto alt738_end1373
  alt738_11378:
    lt rx736_pos, rx736_eos, rx736_fail1366
    goto alt738_end1373
  alt738_end1373:
    rx736_cur."!cursor_pass"(rx736_pos, 'backtrack'=>1)
    .return (rx736_cur)
  rx736_restart1365:
    repr_get_attr_obj rx736_cstack, rx736_cur, rx736_curclass, "$!cstack"
  rx736_fail1366:
    unless rx736_bstack, rx736_done1364
    pop $I19, rx736_bstack
    if_null rx736_cstack, rx736_cstack_done1369
    unless rx736_cstack, rx736_cstack_done1369
    dec $I19
    set $P11, rx736_cstack[$I19]
  rx736_cstack_done1369:
    pop rx736_rep, rx736_bstack
    pop rx736_pos, rx736_bstack
    pop $I19, rx736_bstack
    lt rx736_pos, -1, rx736_done1364
    lt rx736_pos, 0, rx736_fail1366
    eq $I19, 0, rx736_fail1366
    nqp_islist $I20, rx736_cstack
    unless $I20, rx736_jump1367
    elements $I18, rx736_bstack
    le $I18, 0, rx736_cut1368
    dec $I18
    set $I18, rx736_bstack[$I18]
  rx736_cut1368:
    assign rx736_cstack, $I18
  rx736_jump1367:
    jump $I19
  rx736_done1364:
    rx736_cur."!cursor_fail"()
    .return (rx736_cur) 
.end
.HLL "nqp"
.namespace []
.sub "eat_terminator" :subid("cuid_49_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 805
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx751_start
    .local string rx751_tgt
    .local int rx751_pos
    .local int rx751_off
    .local int rx751_eos
    .local int rx751_rep
    .local pmc rx751_cur
    .local pmc rx751_curclass
    .local pmc rx751_bstack
    .local pmc rx751_cstack
    rx751_start = self."!cursor_start_all"()
    set rx751_cur, rx751_start[0]
    set rx751_tgt, rx751_start[1]
    set rx751_pos, rx751_start[2]
    set rx751_curclass, rx751_start[3]
    set rx751_bstack, rx751_start[4]
    set $I19, rx751_start[5]
    store_lex unicode:"$\x{a2}", rx751_cur
    length rx751_eos, rx751_tgt
    eq $I19, 1, rx751_restart1400
    gt rx751_pos, rx751_eos, rx751_fail1401
    repr_get_attr_int $I11, self, rx751_curclass, "$!from"
    ne $I11, -1, rxscan752_done1407
    goto rxscan752_scan1406
  rxscan752_loop1405:
    inc rx751_pos
    gt rx751_pos, rx751_eos, rx751_fail1401
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!from", rx751_pos
  rxscan752_scan1406:
    nqp_rxmark rx751_bstack, rxscan752_loop1405, rx751_pos, 0
  rxscan752_done1407:
  alt753_01409:
    nqp_rxmark rx751_bstack, alt753_11410, rx751_pos, 0
    add $I11, rx751_pos, 1
    gt $I11, rx751_eos, rx751_fail1401
    substr $S10, rx751_tgt, rx751_pos, 1
    ne $S10, ucs4:";", rx751_fail1401
    add rx751_pos, 1
    goto alt753_end1408
  alt753_11410:
    nqp_rxmark rx751_bstack, alt753_21411, rx751_pos, 0
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    $P11 = rx751_cur."MARKED"("endstmt")
    repr_get_attr_int $I11, $P11, rx751_curclass, "$!pos"
    lt $I11, 0, rx751_fail1401
    goto alt753_end1408
  alt753_21411:
    nqp_rxmark rx751_bstack, alt753_31412, rx751_pos, 0
    repr_bind_attr_int rx751_cur, rx751_curclass, "$!pos", rx751_pos
    $P11 = rx751_cur."terminator"()
    repr_get_attr_int $I11, $P11, rx751_curclass, "$!pos"
    lt $I11, 0, rx751_fail1401
    goto alt753_end1408
  alt753_31412:
    lt rx751_pos, rx751_eos, rx751_fail1401
  alt753_end1408:
    rx751_cur."!cursor_pass"(rx751_pos, "eat_terminator", 'backtrack'=>1)
    .return (rx751_cur)
  rx751_restart1400:
    repr_get_attr_obj rx751_cstack, rx751_cur, rx751_curclass, "$!cstack"
  rx751_fail1401:
    unless rx751_bstack, rx751_done1399
    pop $I19, rx751_bstack
    if_null rx751_cstack, rx751_cstack_done1404
    unless rx751_cstack, rx751_cstack_done1404
    dec $I19
    set $P11, rx751_cstack[$I19]
  rx751_cstack_done1404:
    pop rx751_rep, rx751_bstack
    pop rx751_pos, rx751_bstack
    pop $I19, rx751_bstack
    lt rx751_pos, -1, rx751_done1399
    lt rx751_pos, 0, rx751_fail1401
    eq $I19, 0, rx751_fail1401
    nqp_islist $I20, rx751_cstack
    unless $I20, rx751_jump1402
    elements $I18, rx751_bstack
    le $I18, 0, rx751_cut1403
    dec $I18
    set $I18, rx751_bstack[$I18]
  rx751_cut1403:
    assign rx751_cstack, $I18
  rx751_jump1402:
    jump $I19
  rx751_done1399:
    rx751_cur."!cursor_fail"()
    .return (rx751_cur) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_50_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 812
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx755_start
    .local string rx755_tgt
    .local int rx755_pos
    .local int rx755_off
    .local int rx755_eos
    .local int rx755_rep
    .local pmc rx755_cur
    .local pmc rx755_curclass
    .local pmc rx755_bstack
    .local pmc rx755_cstack
    rx755_start = self."!cursor_start_all"()
    set rx755_cur, rx755_start[0]
    set rx755_tgt, rx755_start[1]
    set rx755_pos, rx755_start[2]
    set rx755_curclass, rx755_start[3]
    set rx755_bstack, rx755_start[4]
    set $I19, rx755_start[5]
    store_lex unicode:"$\x{a2}", rx755_cur
    length rx755_eos, rx755_tgt
    eq $I19, 1, rx755_restart1416
    gt rx755_pos, rx755_eos, rx755_fail1417
    repr_get_attr_int $I11, self, rx755_curclass, "$!from"
    ne $I11, -1, rxscan756_done1423
    goto rxscan756_scan1422
  rxscan756_loop1421:
    inc rx755_pos
    gt rx755_pos, rx755_eos, rx755_fail1417
    repr_bind_attr_int rx755_cur, rx755_curclass, "$!from", rx755_pos
  rxscan756_scan1422:
    nqp_rxmark rx755_bstack, rxscan756_loop1421, rx755_pos, 0
  rxscan756_done1423:
    repr_bind_attr_int rx755_cur, rx755_curclass, "$!pos", rx755_pos
    $P11 = rx755_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx755_curclass, "$!pos"
    lt $I11, 0, rx755_fail1417
    nqp_rxmark rx755_bstack, rxsubrule757_pass1424, -1, 0
  rxsubrule757_pass1424:
    rx755_cstack = rx755_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx755_pos, $P11, rx755_curclass, "$!pos"
    repr_bind_attr_int rx755_cur, rx755_curclass, "$!pos", rx755_pos
    $P11 = rx755_cur."ws"()
    repr_get_attr_int $I11, $P11, rx755_curclass, "$!pos"
    lt $I11, 0, rx755_fail1417
    repr_get_attr_int rx755_pos, $P11, rx755_curclass, "$!pos"
    repr_bind_attr_int rx755_cur, rx755_curclass, "$!pos", rx755_pos
    $P11 = rx755_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx755_curclass, "$!pos"
    lt $I11, 0, rx755_fail1417
    nqp_rxmark rx755_bstack, rxsubrule759_pass1426, -1, 0
  rxsubrule759_pass1426:
    rx755_cstack = rx755_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx755_pos, $P11, rx755_curclass, "$!pos"
    rx755_cur."!cursor_pass"(rx755_pos, "xblock", 'backtrack'=>1)
    .return (rx755_cur)
  rx755_restart1416:
    repr_get_attr_obj rx755_cstack, rx755_cur, rx755_curclass, "$!cstack"
  rx755_fail1417:
    unless rx755_bstack, rx755_done1415
    pop $I19, rx755_bstack
    if_null rx755_cstack, rx755_cstack_done1420
    unless rx755_cstack, rx755_cstack_done1420
    dec $I19
    set $P11, rx755_cstack[$I19]
  rx755_cstack_done1420:
    pop rx755_rep, rx755_bstack
    pop rx755_pos, rx755_bstack
    pop $I19, rx755_bstack
    lt rx755_pos, -1, rx755_done1415
    lt rx755_pos, 0, rx755_fail1417
    eq $I19, 0, rx755_fail1417
    nqp_islist $I20, rx755_cstack
    unless $I20, rx755_jump1418
    elements $I18, rx755_bstack
    le $I18, 0, rx755_cut1419
    dec $I18
    set $I18, rx755_bstack[$I18]
  rx755_cut1419:
    assign rx755_cstack, $I18
  rx755_jump1418:
    jump $I19
  rx755_done1415:
    rx755_cur."!cursor_fail"()
    .return (rx755_cur) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_51_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 816
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx760_start
    .local string rx760_tgt
    .local int rx760_pos
    .local int rx760_off
    .local int rx760_eos
    .local int rx760_rep
    .local pmc rx760_cur
    .local pmc rx760_curclass
    .local pmc rx760_bstack
    .local pmc rx760_cstack
    rx760_start = self."!cursor_start_all"()
    set rx760_cur, rx760_start[0]
    set rx760_tgt, rx760_start[1]
    set rx760_pos, rx760_start[2]
    set rx760_curclass, rx760_start[3]
    set rx760_bstack, rx760_start[4]
    set $I19, rx760_start[5]
    store_lex unicode:"$\x{a2}", rx760_cur
    length rx760_eos, rx760_tgt
    eq $I19, 1, rx760_restart1429
    gt rx760_pos, rx760_eos, rx760_fail1430
    repr_get_attr_int $I11, self, rx760_curclass, "$!from"
    ne $I11, -1, rxscan761_done1436
    goto rxscan761_scan1435
  rxscan761_loop1434:
    inc rx760_pos
    gt rx760_pos, rx760_eos, rx760_fail1430
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!from", rx760_pos
  rxscan761_scan1435:
    nqp_rxmark rx760_bstack, rxscan761_loop1434, rx760_pos, 0
  rxscan761_done1436:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt762_01438
    nqp_push_label $P11, alt762_11444
    nqp_push_label $P11, alt762_21447
    nqp_rxmark rx760_bstack, alt762_end1437, -1, 0
    rx760_cur."!alt"(rx760_pos, "alt_nfa__10_1361537954.63231", $P11)
    goto rx760_fail1430
  alt762_01438:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."signature"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    nqp_rxmark rx760_bstack, rxsubrule765_pass1441, -1, 0
  rxsubrule765_pass1441:
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."ws"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    nqp_rxmark rx760_bstack, rxsubrule767_pass1443, -1, 0
  rxsubrule767_pass1443:
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    goto alt762_end1437
  alt762_11444:
    ge rx760_pos, rx760_eos, rx760_fail1430
    substr $S11, rx760_tgt, rx760_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx760_fail1430
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    nqp_rxmark rx760_bstack, rxsubrule769_pass1446, -1, 0
  rxsubrule769_pass1446:
    rx760_cstack = rx760_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    goto alt762_end1437
  alt762_21447:
    repr_bind_attr_int rx760_cur, rx760_curclass, "$!pos", rx760_pos
    $P11 = rx760_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx760_curclass, "$!pos"
    lt $I11, 0, rx760_fail1430
    repr_get_attr_int rx760_pos, $P11, rx760_curclass, "$!pos"
    goto alt762_end1437
  alt762_end1437:
    rx760_cur."!cursor_pass"(rx760_pos, "pblock", 'backtrack'=>1)
    .return (rx760_cur)
  rx760_restart1429:
    repr_get_attr_obj rx760_cstack, rx760_cur, rx760_curclass, "$!cstack"
  rx760_fail1430:
    unless rx760_bstack, rx760_done1428
    pop $I19, rx760_bstack
    if_null rx760_cstack, rx760_cstack_done1433
    unless rx760_cstack, rx760_cstack_done1433
    dec $I19
    set $P11, rx760_cstack[$I19]
  rx760_cstack_done1433:
    pop rx760_rep, rx760_bstack
    pop rx760_pos, rx760_bstack
    pop $I19, rx760_bstack
    lt rx760_pos, -1, rx760_done1428
    lt rx760_pos, 0, rx760_fail1430
    eq $I19, 0, rx760_fail1430
    nqp_islist $I20, rx760_cstack
    unless $I20, rx760_jump1431
    elements $I18, rx760_bstack
    le $I18, 0, rx760_cut1432
    dec $I18
    set $I18, rx760_bstack[$I18]
  rx760_cut1432:
    assign rx760_cstack, $I18
  rx760_jump1431:
    jump $I19
  rx760_done1428:
    rx760_cur."!cursor_fail"()
    .return (rx760_cur) 
.end
.HLL "nqp"
.namespace []
.sub "lambda" :subid("cuid_52_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 827
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx771_start
    .local string rx771_tgt
    .local int rx771_pos
    .local int rx771_off
    .local int rx771_eos
    .local int rx771_rep
    .local pmc rx771_cur
    .local pmc rx771_curclass
    .local pmc rx771_bstack
    .local pmc rx771_cstack
    rx771_start = self."!cursor_start_all"()
    set rx771_cur, rx771_start[0]
    set rx771_tgt, rx771_start[1]
    set rx771_pos, rx771_start[2]
    set rx771_curclass, rx771_start[3]
    set rx771_bstack, rx771_start[4]
    set $I19, rx771_start[5]
    store_lex unicode:"$\x{a2}", rx771_cur
    length rx771_eos, rx771_tgt
    eq $I19, 1, rx771_restart1451
    gt rx771_pos, rx771_eos, rx771_fail1452
    repr_get_attr_int $I11, self, rx771_curclass, "$!from"
    ne $I11, -1, rxscan772_done1458
    goto rxscan772_scan1457
  rxscan772_loop1456:
    inc rx771_pos
    gt rx771_pos, rx771_eos, rx771_fail1452
    repr_bind_attr_int rx771_cur, rx771_curclass, "$!from", rx771_pos
  rxscan772_scan1457:
    nqp_rxmark rx771_bstack, rxscan772_loop1456, rx771_pos, 0
  rxscan772_done1458:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt773_01460
    nqp_push_label $P11, alt773_11461
    nqp_rxmark rx771_bstack, alt773_end1459, -1, 0
    rx771_cur."!alt"(rx771_pos, "alt_nfa__11_1361537954.64791", $P11)
    goto rx771_fail1452
  alt773_01460:
    add $I11, rx771_pos, 2
    gt $I11, rx771_eos, rx771_fail1452
    substr $S10, rx771_tgt, rx771_pos, 2
    ne $S10, ucs4:"->", rx771_fail1452
    add rx771_pos, 2
    goto alt773_end1459
  alt773_11461:
    add $I11, rx771_pos, 3
    gt $I11, rx771_eos, rx771_fail1452
    substr $S10, rx771_tgt, rx771_pos, 3
    ne $S10, ucs4:"<->", rx771_fail1452
    add rx771_pos, 3
    goto alt773_end1459
  alt773_end1459:
    rx771_cur."!cursor_pass"(rx771_pos, "lambda", 'backtrack'=>1)
    .return (rx771_cur)
  rx771_restart1451:
    repr_get_attr_obj rx771_cstack, rx771_cur, rx771_curclass, "$!cstack"
  rx771_fail1452:
    unless rx771_bstack, rx771_done1450
    pop $I19, rx771_bstack
    if_null rx771_cstack, rx771_cstack_done1455
    unless rx771_cstack, rx771_cstack_done1455
    dec $I19
    set $P11, rx771_cstack[$I19]
  rx771_cstack_done1455:
    pop rx771_rep, rx771_bstack
    pop rx771_pos, rx771_bstack
    pop $I19, rx771_bstack
    lt rx771_pos, -1, rx771_done1450
    lt rx771_pos, 0, rx771_fail1452
    eq $I19, 0, rx771_fail1452
    nqp_islist $I20, rx771_cstack
    unless $I20, rx771_jump1453
    elements $I18, rx771_bstack
    le $I18, 0, rx771_cut1454
    dec $I18
    set $I18, rx771_bstack[$I18]
  rx771_cut1454:
    assign rx771_cstack, $I18
  rx771_jump1453:
    jump $I19
  rx771_done1450:
    rx771_cur."!cursor_fail"()
    .return (rx771_cur) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_53_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 829
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx774_start
    .local string rx774_tgt
    .local int rx774_pos
    .local int rx774_off
    .local int rx774_eos
    .local int rx774_rep
    .local pmc rx774_cur
    .local pmc rx774_curclass
    .local pmc rx774_bstack
    .local pmc rx774_cstack
    rx774_start = self."!cursor_start_all"()
    set rx774_cur, rx774_start[0]
    set rx774_tgt, rx774_start[1]
    set rx774_pos, rx774_start[2]
    set rx774_curclass, rx774_start[3]
    set rx774_bstack, rx774_start[4]
    set $I19, rx774_start[5]
    store_lex unicode:"$\x{a2}", rx774_cur
    length rx774_eos, rx774_tgt
    eq $I19, 1, rx774_restart1464
    gt rx774_pos, rx774_eos, rx774_fail1465
    repr_get_attr_int $I11, self, rx774_curclass, "$!from"
    ne $I11, -1, rxscan775_done1471
    goto rxscan775_scan1470
  rxscan775_loop1469:
    inc rx774_pos
    gt rx774_pos, rx774_eos, rx774_fail1465
    repr_bind_attr_int rx774_cur, rx774_curclass, "$!from", rx774_pos
  rxscan775_scan1470:
    nqp_rxmark rx774_bstack, rxscan775_loop1469, rx774_pos, 0
  rxscan775_done1471:
  alt776_01473:
    nqp_rxmark rx774_bstack, alt776_11474, rx774_pos, 0
    ge rx774_pos, rx774_eos, rx774_fail1465
    substr $S11, rx774_tgt, rx774_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx774_fail1465
    goto alt776_end1472
  alt776_11474:
    repr_bind_attr_int rx774_cur, rx774_curclass, "$!pos", rx774_pos
    $P11 = rx774_cur."panic"("Missing block")
    repr_get_attr_int $I11, $P11, rx774_curclass, "$!pos"
    lt $I11, 0, rx774_fail1465
    repr_get_attr_int rx774_pos, $P11, rx774_curclass, "$!pos"
  alt776_end1472:
    repr_bind_attr_int rx774_cur, rx774_curclass, "$!pos", rx774_pos
    $P11 = rx774_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx774_curclass, "$!pos"
    lt $I11, 0, rx774_fail1465
    repr_get_attr_int rx774_pos, $P11, rx774_curclass, "$!pos"
    repr_bind_attr_int rx774_cur, rx774_curclass, "$!pos", rx774_pos
    $P11 = rx774_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx774_curclass, "$!pos"
    lt $I11, 0, rx774_fail1465
    nqp_rxmark rx774_bstack, rxsubrule779_pass1477, -1, 0
  rxsubrule779_pass1477:
    rx774_cstack = rx774_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx774_pos, $P11, rx774_curclass, "$!pos"
    rx774_cur."!cursor_pass"(rx774_pos, "block", 'backtrack'=>1)
    .return (rx774_cur)
  rx774_restart1464:
    repr_get_attr_obj rx774_cstack, rx774_cur, rx774_curclass, "$!cstack"
  rx774_fail1465:
    unless rx774_bstack, rx774_done1463
    pop $I19, rx774_bstack
    if_null rx774_cstack, rx774_cstack_done1468
    unless rx774_cstack, rx774_cstack_done1468
    dec $I19
    set $P11, rx774_cstack[$I19]
  rx774_cstack_done1468:
    pop rx774_rep, rx774_bstack
    pop rx774_pos, rx774_bstack
    pop $I19, rx774_bstack
    lt rx774_pos, -1, rx774_done1463
    lt rx774_pos, 0, rx774_fail1465
    eq $I19, 0, rx774_fail1465
    nqp_islist $I20, rx774_cstack
    unless $I20, rx774_jump1466
    elements $I18, rx774_bstack
    le $I18, 0, rx774_cut1467
    dec $I18
    set $I18, rx774_bstack[$I18]
  rx774_cut1467:
    assign rx774_cstack, $I18
  rx774_jump1466:
    jump $I19
  rx774_done1463:
    rx774_cur."!cursor_fail"()
    .return (rx774_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_54_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 835
    .param pmc _lex_param_0 
    .lex "%*HANDLERS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_206 
    .local pmc pkg_viv_tmp_23 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx780_start
    .local string rx780_tgt
    .local int rx780_pos
    .local int rx780_off
    .local int rx780_eos
    .local int rx780_rep
    .local pmc rx780_cur
    .local pmc rx780_curclass
    .local pmc rx780_bstack
    .local pmc rx780_cstack
    rx780_start = self."!cursor_start_all"()
    set rx780_cur, rx780_start[0]
    set rx780_tgt, rx780_start[1]
    set rx780_pos, rx780_start[2]
    set rx780_curclass, rx780_start[3]
    set rx780_bstack, rx780_start[4]
    set $I19, rx780_start[5]
    store_lex unicode:"$\x{a2}", rx780_cur
    length rx780_eos, rx780_tgt
    eq $I19, 1, rx780_restart1480
    gt rx780_pos, rx780_eos, rx780_fail1481
    repr_get_attr_int $I11, self, rx780_curclass, "$!from"
    ne $I11, -1, rxscan781_done1487
    goto rxscan781_scan1486
  rxscan781_loop1485:
    inc rx780_pos
    gt rx780_pos, rx780_eos, rx780_fail1481
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!from", rx780_pos
  rxscan781_scan1486:
    nqp_rxmark rx780_bstack, rxscan781_loop1485, rx780_pos, 0
  rxscan781_done1487:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    store_lex unicode:"$\x{a2}", rx780_cur
    unless_null $P101, fallback1488
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_23, $P5002
    set fb_tmp_206, pkg_viv_tmp_23
    repr_defined $I5001, fb_tmp_206
    unless $I5001 goto if782_else1489 
    set $P5004, fb_tmp_206["%HANDLERS"]
    set $P5006, $P5004
    goto if782_end1490
  if782_else1489:
    null $P5005
    set $P5006, $P5005
  if782_end1490:
    unless_null $P5006, vivi_7831491
    new $P5007, 'Hash'
    set pkg_viv_tmp_23["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_7831491:
    unless_null $P5006, vivi_7841492
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_7841492:
    set $P101, $P5006
  fallback1488:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt786_01495:
    nqp_rxmark rx780_bstack, alt786_11497, rx780_pos, 0
    add $I11, rx780_pos, 14
    gt $I11, rx780_eos, rx780_fail1481
    substr $S10, rx780_tgt, rx780_pos, 14
    ne $S10, ucs4:"{YOU_ARE_HERE}", rx780_fail1481
    add rx780_pos, 14
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."you_are_here"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
    nqp_rxmark rx780_bstack, rxsubrule787_pass1496, -1, 0
  rxsubrule787_pass1496:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "you_are_here")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
    goto alt786_end1494
  alt786_11497:
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1481
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:"{", rx780_fail1481
    add rx780_pos, 1
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
    nqp_rxmark rx780_bstack, rxsubrule788_pass1498, -1, 0
  rxsubrule788_pass1498:
    rx780_cstack = rx780_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt789_01500:
    nqp_rxmark rx780_bstack, alt789_11501, rx780_pos, 0
    add $I11, rx780_pos, 1
    gt $I11, rx780_eos, rx780_fail1481
    substr $S10, rx780_tgt, rx780_pos, 1
    ne $S10, ucs4:"}", rx780_fail1481
    add rx780_pos, 1
    goto alt789_end1499
  alt789_11501:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."FAILGOAL"("'}'")
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
    goto rxsubrule790_pass1502
  rxsubrule790_back1503:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
  rxsubrule790_pass1502:
    rx780_cstack = rx780_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule790_back1503
    push rx780_bstack, $I11
    push rx780_bstack, 0
    push rx780_bstack, rx780_pos
    elements $I11, rx780_cstack
    push rx780_bstack, $I11
    repr_get_attr_int rx780_pos, $P11, rx780_curclass, "$!pos"
  alt789_end1499:
  alt786_end1494:
    repr_bind_attr_int rx780_cur, rx780_curclass, "$!pos", rx780_pos
    $P11 = rx780_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx780_curclass, "$!pos"
    lt $I11, 0, rx780_fail1481
    rx780_cur."!cursor_pass"(rx780_pos, "blockoid", 'backtrack'=>1)
    .return (rx780_cur)
  rx780_restart1480:
    repr_get_attr_obj rx780_cstack, rx780_cur, rx780_curclass, "$!cstack"
  rx780_fail1481:
    unless rx780_bstack, rx780_done1479
    pop $I19, rx780_bstack
    if_null rx780_cstack, rx780_cstack_done1484
    unless rx780_cstack, rx780_cstack_done1484
    dec $I19
    set $P11, rx780_cstack[$I19]
  rx780_cstack_done1484:
    pop rx780_rep, rx780_bstack
    pop rx780_pos, rx780_bstack
    pop $I19, rx780_bstack
    lt rx780_pos, -1, rx780_done1479
    lt rx780_pos, 0, rx780_fail1481
    eq $I19, 0, rx780_fail1481
    nqp_islist $I20, rx780_cstack
    unless $I20, rx780_jump1482
    elements $I18, rx780_bstack
    le $I18, 0, rx780_cut1483
    dec $I18
    set $I18, rx780_bstack[$I18]
  rx780_cut1483:
    assign rx780_cstack, $I18
  rx780_jump1482:
    jump $I19
  rx780_done1479:
    rx780_cur."!cursor_fail"()
    .return (rx780_cur) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_55_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 845
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx791_start
    .local string rx791_tgt
    .local int rx791_pos
    .local int rx791_off
    .local int rx791_eos
    .local int rx791_rep
    .local pmc rx791_cur
    .local pmc rx791_curclass
    .local pmc rx791_bstack
    .local pmc rx791_cstack
    rx791_start = self."!cursor_start_all"()
    set rx791_cur, rx791_start[0]
    set rx791_tgt, rx791_start[1]
    set rx791_pos, rx791_start[2]
    set rx791_curclass, rx791_start[3]
    set rx791_bstack, rx791_start[4]
    set $I19, rx791_start[5]
    store_lex unicode:"$\x{a2}", rx791_cur
    length rx791_eos, rx791_tgt
    eq $I19, 1, rx791_restart1506
    gt rx791_pos, rx791_eos, rx791_fail1507
    repr_get_attr_int $I11, self, rx791_curclass, "$!from"
    ne $I11, -1, rxscan792_done1513
    goto rxscan792_scan1512
  rxscan792_loop1511:
    inc rx791_pos
    gt rx791_pos, rx791_eos, rx791_fail1507
    repr_bind_attr_int rx791_cur, rx791_curclass, "$!from", rx791_pos
  rxscan792_scan1512:
    nqp_rxmark rx791_bstack, rxscan792_loop1511, rx791_pos, 0
  rxscan792_done1513:
    rx791_cur."!cursor_pass"(rx791_pos, "newpad", 'backtrack'=>1)
    .return (rx791_cur)
  rx791_restart1506:
    repr_get_attr_obj rx791_cstack, rx791_cur, rx791_curclass, "$!cstack"
  rx791_fail1507:
    unless rx791_bstack, rx791_done1505
    pop $I19, rx791_bstack
    if_null rx791_cstack, rx791_cstack_done1510
    unless rx791_cstack, rx791_cstack_done1510
    dec $I19
    set $P11, rx791_cstack[$I19]
  rx791_cstack_done1510:
    pop rx791_rep, rx791_bstack
    pop rx791_pos, rx791_bstack
    pop $I19, rx791_bstack
    lt rx791_pos, -1, rx791_done1505
    lt rx791_pos, 0, rx791_fail1507
    eq $I19, 0, rx791_fail1507
    nqp_islist $I20, rx791_cstack
    unless $I20, rx791_jump1508
    elements $I18, rx791_bstack
    le $I18, 0, rx791_cut1509
    dec $I18
    set $I18, rx791_bstack[$I18]
  rx791_cut1509:
    assign rx791_cstack, $I18
  rx791_jump1508:
    jump $I19
  rx791_done1505:
    rx791_cur."!cursor_fail"()
    .return (rx791_cur) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_56_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 846
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx794_start
    .local string rx794_tgt
    .local int rx794_pos
    .local int rx794_off
    .local int rx794_eos
    .local int rx794_rep
    .local pmc rx794_cur
    .local pmc rx794_curclass
    .local pmc rx794_bstack
    .local pmc rx794_cstack
    rx794_start = self."!cursor_start_all"()
    set rx794_cur, rx794_start[0]
    set rx794_tgt, rx794_start[1]
    set rx794_pos, rx794_start[2]
    set rx794_curclass, rx794_start[3]
    set rx794_bstack, rx794_start[4]
    set $I19, rx794_start[5]
    store_lex unicode:"$\x{a2}", rx794_cur
    length rx794_eos, rx794_tgt
    eq $I19, 1, rx794_restart1517
    gt rx794_pos, rx794_eos, rx794_fail1518
    repr_get_attr_int $I11, self, rx794_curclass, "$!from"
    ne $I11, -1, rxscan795_done1524
    goto rxscan795_scan1523
  rxscan795_loop1522:
    inc rx794_pos
    gt rx794_pos, rx794_eos, rx794_fail1518
    repr_bind_attr_int rx794_cur, rx794_curclass, "$!from", rx794_pos
  rxscan795_scan1523:
    nqp_rxmark rx794_bstack, rxscan795_loop1522, rx794_pos, 0
  rxscan795_done1524:
    rx794_cur."!cursor_pass"(rx794_pos, "outerctx", 'backtrack'=>1)
    .return (rx794_cur)
  rx794_restart1517:
    repr_get_attr_obj rx794_cstack, rx794_cur, rx794_curclass, "$!cstack"
  rx794_fail1518:
    unless rx794_bstack, rx794_done1516
    pop $I19, rx794_bstack
    if_null rx794_cstack, rx794_cstack_done1521
    unless rx794_cstack, rx794_cstack_done1521
    dec $I19
    set $P11, rx794_cstack[$I19]
  rx794_cstack_done1521:
    pop rx794_rep, rx794_bstack
    pop rx794_pos, rx794_bstack
    pop $I19, rx794_bstack
    lt rx794_pos, -1, rx794_done1516
    lt rx794_pos, 0, rx794_fail1518
    eq $I19, 0, rx794_fail1518
    nqp_islist $I20, rx794_cstack
    unless $I20, rx794_jump1519
    elements $I18, rx794_bstack
    le $I18, 0, rx794_cut1520
    dec $I18
    set $I18, rx794_bstack[$I18]
  rx794_cut1520:
    assign rx794_cstack, $I18
  rx794_jump1519:
    jump $I19
  rx794_done1516:
    rx794_cur."!cursor_fail"()
    .return (rx794_cur) 
.end
.HLL "nqp"
.namespace []
.sub "finishpad" :subid("cuid_57_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 847
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx797_start
    .local string rx797_tgt
    .local int rx797_pos
    .local int rx797_off
    .local int rx797_eos
    .local int rx797_rep
    .local pmc rx797_cur
    .local pmc rx797_curclass
    .local pmc rx797_bstack
    .local pmc rx797_cstack
    rx797_start = self."!cursor_start_all"()
    set rx797_cur, rx797_start[0]
    set rx797_tgt, rx797_start[1]
    set rx797_pos, rx797_start[2]
    set rx797_curclass, rx797_start[3]
    set rx797_bstack, rx797_start[4]
    set $I19, rx797_start[5]
    store_lex unicode:"$\x{a2}", rx797_cur
    length rx797_eos, rx797_tgt
    eq $I19, 1, rx797_restart1528
    gt rx797_pos, rx797_eos, rx797_fail1529
    repr_get_attr_int $I11, self, rx797_curclass, "$!from"
    ne $I11, -1, rxscan798_done1535
    goto rxscan798_scan1534
  rxscan798_loop1533:
    inc rx797_pos
    gt rx797_pos, rx797_eos, rx797_fail1529
    repr_bind_attr_int rx797_cur, rx797_curclass, "$!from", rx797_pos
  rxscan798_scan1534:
    nqp_rxmark rx797_bstack, rxscan798_loop1533, rx797_pos, 0
  rxscan798_done1535:
    rx797_cur."!cursor_pass"(rx797_pos, "finishpad", 'backtrack'=>1)
    .return (rx797_cur)
  rx797_restart1528:
    repr_get_attr_obj rx797_cstack, rx797_cur, rx797_curclass, "$!cstack"
  rx797_fail1529:
    unless rx797_bstack, rx797_done1527
    pop $I19, rx797_bstack
    if_null rx797_cstack, rx797_cstack_done1532
    unless rx797_cstack, rx797_cstack_done1532
    dec $I19
    set $P11, rx797_cstack[$I19]
  rx797_cstack_done1532:
    pop rx797_rep, rx797_bstack
    pop rx797_pos, rx797_bstack
    pop $I19, rx797_bstack
    lt rx797_pos, -1, rx797_done1527
    lt rx797_pos, 0, rx797_fail1529
    eq $I19, 0, rx797_fail1529
    nqp_islist $I20, rx797_cstack
    unless $I20, rx797_jump1530
    elements $I18, rx797_bstack
    le $I18, 0, rx797_cut1531
    dec $I18
    set $I18, rx797_bstack[$I18]
  rx797_cut1531:
    assign rx797_cstack, $I18
  rx797_jump1530:
    jump $I19
  rx797_done1527:
    rx797_cur."!cursor_fail"()
    .return (rx797_cur) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_58_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 848
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx800_start
    .local string rx800_tgt
    .local int rx800_pos
    .local int rx800_off
    .local int rx800_eos
    .local int rx800_rep
    .local pmc rx800_cur
    .local pmc rx800_curclass
    .local pmc rx800_bstack
    .local pmc rx800_cstack
    rx800_start = self."!cursor_start_all"()
    set rx800_cur, rx800_start[0]
    set rx800_tgt, rx800_start[1]
    set rx800_pos, rx800_start[2]
    set rx800_curclass, rx800_start[3]
    set rx800_bstack, rx800_start[4]
    set $I19, rx800_start[5]
    store_lex unicode:"$\x{a2}", rx800_cur
    length rx800_eos, rx800_tgt
    eq $I19, 1, rx800_restart1539
    gt rx800_pos, rx800_eos, rx800_fail1540
    repr_get_attr_int $I11, self, rx800_curclass, "$!from"
    ne $I11, -1, rxscan801_done1546
    goto rxscan801_scan1545
  rxscan801_loop1544:
    inc rx800_pos
    gt rx800_pos, rx800_eos, rx800_fail1540
    repr_bind_attr_int rx800_cur, rx800_curclass, "$!from", rx800_pos
  rxscan801_scan1545:
    nqp_rxmark rx800_bstack, rxscan801_loop1544, rx800_pos, 0
  rxscan801_done1546:
    rx800_cur."!cursor_pass"(rx800_pos, "you_are_here", 'backtrack'=>1)
    .return (rx800_cur)
  rx800_restart1539:
    repr_get_attr_obj rx800_cstack, rx800_cur, rx800_curclass, "$!cstack"
  rx800_fail1540:
    unless rx800_bstack, rx800_done1538
    pop $I19, rx800_bstack
    if_null rx800_cstack, rx800_cstack_done1543
    unless rx800_cstack, rx800_cstack_done1543
    dec $I19
    set $P11, rx800_cstack[$I19]
  rx800_cstack_done1543:
    pop rx800_rep, rx800_bstack
    pop rx800_pos, rx800_bstack
    pop $I19, rx800_bstack
    lt rx800_pos, -1, rx800_done1538
    lt rx800_pos, 0, rx800_fail1540
    eq $I19, 0, rx800_fail1540
    nqp_islist $I20, rx800_cstack
    unless $I20, rx800_jump1541
    elements $I18, rx800_bstack
    le $I18, 0, rx800_cut1542
    dec $I18
    set $I18, rx800_bstack[$I18]
  rx800_cut1542:
    assign rx800_cstack, $I18
  rx800_jump1541:
    jump $I19
  rx800_done1538:
    rx800_cur."!cursor_fail"()
    .return (rx800_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator" :subid("cuid_59_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 850
    .param pmc self 
    $P5001 = self."!protoregex"("terminator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<;>" :subid("cuid_60_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 852
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx803_start
    .local string rx803_tgt
    .local int rx803_pos
    .local int rx803_off
    .local int rx803_eos
    .local int rx803_rep
    .local pmc rx803_cur
    .local pmc rx803_curclass
    .local pmc rx803_bstack
    .local pmc rx803_cstack
    rx803_start = self."!cursor_start_all"()
    set rx803_cur, rx803_start[0]
    set rx803_tgt, rx803_start[1]
    set rx803_pos, rx803_start[2]
    set rx803_curclass, rx803_start[3]
    set rx803_bstack, rx803_start[4]
    set $I19, rx803_start[5]
    store_lex unicode:"$\x{a2}", rx803_cur
    length rx803_eos, rx803_tgt
    eq $I19, 1, rx803_restart1550
    gt rx803_pos, rx803_eos, rx803_fail1551
    repr_get_attr_int $I11, self, rx803_curclass, "$!from"
    ne $I11, -1, rxscan804_done1557
    goto rxscan804_scan1556
  rxscan804_loop1555:
    inc rx803_pos
    gt rx803_pos, rx803_eos, rx803_fail1551
    repr_bind_attr_int rx803_cur, rx803_curclass, "$!from", rx803_pos
  rxscan804_scan1556:
    nqp_rxmark rx803_bstack, rxscan804_loop1555, rx803_pos, 0
  rxscan804_done1557:
    ge rx803_pos, rx803_eos, rx803_fail1551
    substr $S11, rx803_tgt, rx803_pos, 1
    index $I11, ucs4:";", $S11
    lt $I11, 0, rx803_fail1551
    rx803_cur."!cursor_pass"(rx803_pos, "terminator:sym<;>", 'backtrack'=>1)
    .return (rx803_cur)
  rx803_restart1550:
    repr_get_attr_obj rx803_cstack, rx803_cur, rx803_curclass, "$!cstack"
  rx803_fail1551:
    unless rx803_bstack, rx803_done1549
    pop $I19, rx803_bstack
    if_null rx803_cstack, rx803_cstack_done1554
    unless rx803_cstack, rx803_cstack_done1554
    dec $I19
    set $P11, rx803_cstack[$I19]
  rx803_cstack_done1554:
    pop rx803_rep, rx803_bstack
    pop rx803_pos, rx803_bstack
    pop $I19, rx803_bstack
    lt rx803_pos, -1, rx803_done1549
    lt rx803_pos, 0, rx803_fail1551
    eq $I19, 0, rx803_fail1551
    nqp_islist $I20, rx803_cstack
    unless $I20, rx803_jump1552
    elements $I18, rx803_bstack
    le $I18, 0, rx803_cut1553
    dec $I18
    set $I18, rx803_bstack[$I18]
  rx803_cut1553:
    assign rx803_cstack, $I18
  rx803_jump1552:
    jump $I19
  rx803_done1549:
    rx803_cur."!cursor_fail"()
    .return (rx803_cur) 
.end
.HLL "nqp"
.namespace []
.sub "terminator:sym<}>" :subid("cuid_61_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 853
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx805_start
    .local string rx805_tgt
    .local int rx805_pos
    .local int rx805_off
    .local int rx805_eos
    .local int rx805_rep
    .local pmc rx805_cur
    .local pmc rx805_curclass
    .local pmc rx805_bstack
    .local pmc rx805_cstack
    rx805_start = self."!cursor_start_all"()
    set rx805_cur, rx805_start[0]
    set rx805_tgt, rx805_start[1]
    set rx805_pos, rx805_start[2]
    set rx805_curclass, rx805_start[3]
    set rx805_bstack, rx805_start[4]
    set $I19, rx805_start[5]
    store_lex unicode:"$\x{a2}", rx805_cur
    length rx805_eos, rx805_tgt
    eq $I19, 1, rx805_restart1560
    gt rx805_pos, rx805_eos, rx805_fail1561
    repr_get_attr_int $I11, self, rx805_curclass, "$!from"
    ne $I11, -1, rxscan806_done1567
    goto rxscan806_scan1566
  rxscan806_loop1565:
    inc rx805_pos
    gt rx805_pos, rx805_eos, rx805_fail1561
    repr_bind_attr_int rx805_cur, rx805_curclass, "$!from", rx805_pos
  rxscan806_scan1566:
    nqp_rxmark rx805_bstack, rxscan806_loop1565, rx805_pos, 0
  rxscan806_done1567:
    ge rx805_pos, rx805_eos, rx805_fail1561
    substr $S11, rx805_tgt, rx805_pos, 1
    index $I11, ucs4:"}", $S11
    lt $I11, 0, rx805_fail1561
    rx805_cur."!cursor_pass"(rx805_pos, "terminator:sym<}>", 'backtrack'=>1)
    .return (rx805_cur)
  rx805_restart1560:
    repr_get_attr_obj rx805_cstack, rx805_cur, rx805_curclass, "$!cstack"
  rx805_fail1561:
    unless rx805_bstack, rx805_done1559
    pop $I19, rx805_bstack
    if_null rx805_cstack, rx805_cstack_done1564
    unless rx805_cstack, rx805_cstack_done1564
    dec $I19
    set $P11, rx805_cstack[$I19]
  rx805_cstack_done1564:
    pop rx805_rep, rx805_bstack
    pop rx805_pos, rx805_bstack
    pop $I19, rx805_bstack
    lt rx805_pos, -1, rx805_done1559
    lt rx805_pos, 0, rx805_fail1561
    eq $I19, 0, rx805_fail1561
    nqp_islist $I20, rx805_cstack
    unless $I20, rx805_jump1562
    elements $I18, rx805_bstack
    le $I18, 0, rx805_cut1563
    dec $I18
    set $I18, rx805_bstack[$I18]
  rx805_cut1563:
    assign rx805_cstack, $I18
  rx805_jump1562:
    jump $I19
  rx805_done1559:
    rx805_cur."!cursor_fail"()
    .return (rx805_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control" :subid("cuid_62_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 857
    .param pmc self 
    $P5001 = self."!protoregex"("statement_control")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_63_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 859
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx807_start
    .local string rx807_tgt
    .local int rx807_pos
    .local int rx807_off
    .local int rx807_eos
    .local int rx807_rep
    .local pmc rx807_cur
    .local pmc rx807_curclass
    .local pmc rx807_bstack
    .local pmc rx807_cstack
    rx807_start = self."!cursor_start_all"()
    set rx807_cur, rx807_start[0]
    set rx807_tgt, rx807_start[1]
    set rx807_pos, rx807_start[2]
    set rx807_curclass, rx807_start[3]
    set rx807_bstack, rx807_start[4]
    set $I19, rx807_start[5]
    store_lex unicode:"$\x{a2}", rx807_cur
    length rx807_eos, rx807_tgt
    eq $I19, 1, rx807_restart1570
    gt rx807_pos, rx807_eos, rx807_fail1571
    repr_get_attr_int $I11, self, rx807_curclass, "$!from"
    ne $I11, -1, rxscan808_done1577
    goto rxscan808_scan1576
  rxscan808_loop1575:
    inc rx807_pos
    gt rx807_pos, rx807_eos, rx807_fail1571
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!from", rx807_pos
  rxscan808_scan1576:
    nqp_rxmark rx807_bstack, rxscan808_loop1575, rx807_pos, 0
  rxscan808_done1577:
    nqp_rxmark rx807_bstack, rxcap809_fail1579, rx807_pos, 0
    add $I11, rx807_pos, 3
    gt $I11, rx807_eos, rx807_fail1571
    substr $S10, rx807_tgt, rx807_pos, 3
    ne $S10, ucs4:"use", rx807_fail1571
    add rx807_pos, 3
    nqp_rxpeek $I19, rx807_bstack, rxcap809_fail1579
    inc $I19
    set $I11, rx807_bstack[$I19]
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx807_pos)
    rx807_cstack = rx807_cur."!cursor_capture"($P11, "sym")
    goto rxcap809_done1578
  rxcap809_fail1579:
    goto rx807_fail1571
  rxcap809_done1578:
    ge rx807_pos, rx807_eos, rx807_fail1571
    is_cclass $I11, .CCLASS_WHITESPACE, rx807_tgt, rx807_pos
    unless $I11, rx807_fail1571
    add rx807_pos, 1
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."ws"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1571
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."name"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1571
    nqp_rxmark rx807_bstack, rxsubrule811_pass1581, -1, 0
  rxsubrule811_pass1581:
    rx807_cstack = rx807_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    repr_bind_attr_int rx807_cur, rx807_curclass, "$!pos", rx807_pos
    $P11 = rx807_cur."ws"()
    repr_get_attr_int $I11, $P11, rx807_curclass, "$!pos"
    lt $I11, 0, rx807_fail1571
    repr_get_attr_int rx807_pos, $P11, rx807_curclass, "$!pos"
    rx807_cur."!cursor_pass"(rx807_pos, "statement_control:sym<use>", 'backtrack'=>1)
    .return (rx807_cur)
  rx807_restart1570:
    repr_get_attr_obj rx807_cstack, rx807_cur, rx807_curclass, "$!cstack"
  rx807_fail1571:
    unless rx807_bstack, rx807_done1569
    pop $I19, rx807_bstack
    if_null rx807_cstack, rx807_cstack_done1574
    unless rx807_cstack, rx807_cstack_done1574
    dec $I19
    set $P11, rx807_cstack[$I19]
  rx807_cstack_done1574:
    pop rx807_rep, rx807_bstack
    pop rx807_pos, rx807_bstack
    pop $I19, rx807_bstack
    lt rx807_pos, -1, rx807_done1569
    lt rx807_pos, 0, rx807_fail1571
    eq $I19, 0, rx807_fail1571
    nqp_islist $I20, rx807_cstack
    unless $I20, rx807_jump1572
    elements $I18, rx807_bstack
    le $I18, 0, rx807_cut1573
    dec $I18
    set $I18, rx807_bstack[$I18]
  rx807_cut1573:
    assign rx807_cstack, $I18
  rx807_jump1572:
    jump $I19
  rx807_done1569:
    rx807_cur."!cursor_fail"()
    .return (rx807_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_64_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 863
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx813_start
    .local string rx813_tgt
    .local int rx813_pos
    .local int rx813_off
    .local int rx813_eos
    .local int rx813_rep
    .local pmc rx813_cur
    .local pmc rx813_curclass
    .local pmc rx813_bstack
    .local pmc rx813_cstack
    rx813_start = self."!cursor_start_all"()
    set rx813_cur, rx813_start[0]
    set rx813_tgt, rx813_start[1]
    set rx813_pos, rx813_start[2]
    set rx813_curclass, rx813_start[3]
    set rx813_bstack, rx813_start[4]
    set $I19, rx813_start[5]
    store_lex unicode:"$\x{a2}", rx813_cur
    length rx813_eos, rx813_tgt
    eq $I19, 1, rx813_restart1585
    gt rx813_pos, rx813_eos, rx813_fail1586
    repr_get_attr_int $I11, self, rx813_curclass, "$!from"
    ne $I11, -1, rxscan814_done1592
    goto rxscan814_scan1591
  rxscan814_loop1590:
    inc rx813_pos
    gt rx813_pos, rx813_eos, rx813_fail1586
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!from", rx813_pos
  rxscan814_scan1591:
    nqp_rxmark rx813_bstack, rxscan814_loop1590, rx813_pos, 0
  rxscan814_done1592:
    nqp_rxmark rx813_bstack, rxcap815_fail1594, rx813_pos, 0
    add $I11, rx813_pos, 2
    gt $I11, rx813_eos, rx813_fail1586
    substr $S10, rx813_tgt, rx813_pos, 2
    ne $S10, ucs4:"if", rx813_fail1586
    add rx813_pos, 2
    nqp_rxpeek $I19, rx813_bstack, rxcap815_fail1594
    inc $I19
    set $I11, rx813_bstack[$I19]
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx813_pos)
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "sym")
    goto rxcap815_done1593
  rxcap815_fail1594:
    goto rx813_fail1586
  rxcap815_done1593:
    ge rx813_pos, rx813_eos, rx813_fail1586
    is_cclass $I11, .CCLASS_WHITESPACE, rx813_tgt, rx813_pos
    unless $I11, rx813_fail1586
    add rx813_pos, 1
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    nqp_rxmark rx813_bstack, rxsubrule817_pass1596, -1, 0
  rxsubrule817_pass1596:
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    nqp_rxmark rx813_bstack, rxquantr819_done1599, rx813_pos, 0
  rxquantr819_loop1598:
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    add $I11, rx813_pos, 5
    gt $I11, rx813_eos, rx813_fail1586
    substr $S10, rx813_tgt, rx813_pos, 5
    ne $S10, ucs4:"elsif", rx813_fail1586
    add rx813_pos, 5
    ge rx813_pos, rx813_eos, rx813_fail1586
    is_cclass $I11, .CCLASS_WHITESPACE, rx813_tgt, rx813_pos
    unless $I11, rx813_fail1586
    add rx813_pos, 1
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    nqp_rxmark rx813_bstack, rxsubrule822_pass1602, -1, 0
  rxsubrule822_pass1602:
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    nqp_rxpeek $I19, rx813_bstack, rxquantr819_done1599
    inc $I19
    inc $I19
    set rx813_rep, rx813_bstack[$I19]
    nqp_rxcommit rx813_bstack, rxquantr819_done1599
    inc rx813_rep
    nqp_rxmark rx813_bstack, rxquantr819_done1599, rx813_pos, rx813_rep
    goto rxquantr819_loop1598
  rxquantr819_done1599:
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    nqp_rxmark rx813_bstack, rxquantr825_done1606, rx813_pos, 0
  rxquantr825_loop1605:
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    add $I11, rx813_pos, 4
    gt $I11, rx813_eos, rx813_fail1586
    substr $S10, rx813_tgt, rx813_pos, 4
    ne $S10, ucs4:"else", rx813_fail1586
    add rx813_pos, 4
    ge rx813_pos, rx813_eos, rx813_fail1586
    is_cclass $I11, .CCLASS_WHITESPACE, rx813_tgt, rx813_pos
    unless $I11, rx813_fail1586
    add rx813_pos, 1
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    nqp_rxmark rx813_bstack, rxsubrule828_pass1609, -1, 0
  rxsubrule828_pass1609:
    rx813_cstack = rx813_cur."!cursor_capture"($P11, "else")
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    nqp_rxpeek $I19, rx813_bstack, rxquantr825_done1606
    inc $I19
    inc $I19
    set rx813_rep, rx813_bstack[$I19]
    nqp_rxcommit rx813_bstack, rxquantr825_done1606
    inc rx813_rep
  rxquantr825_done1606:
    repr_bind_attr_int rx813_cur, rx813_curclass, "$!pos", rx813_pos
    $P11 = rx813_cur."ws"()
    repr_get_attr_int $I11, $P11, rx813_curclass, "$!pos"
    lt $I11, 0, rx813_fail1586
    repr_get_attr_int rx813_pos, $P11, rx813_curclass, "$!pos"
    rx813_cur."!cursor_pass"(rx813_pos, "statement_control:sym<if>", 'backtrack'=>1)
    .return (rx813_cur)
  rx813_restart1585:
    repr_get_attr_obj rx813_cstack, rx813_cur, rx813_curclass, "$!cstack"
  rx813_fail1586:
    unless rx813_bstack, rx813_done1584
    pop $I19, rx813_bstack
    if_null rx813_cstack, rx813_cstack_done1589
    unless rx813_cstack, rx813_cstack_done1589
    dec $I19
    set $P11, rx813_cstack[$I19]
  rx813_cstack_done1589:
    pop rx813_rep, rx813_bstack
    pop rx813_pos, rx813_bstack
    pop $I19, rx813_bstack
    lt rx813_pos, -1, rx813_done1584
    lt rx813_pos, 0, rx813_fail1586
    eq $I19, 0, rx813_fail1586
    nqp_islist $I20, rx813_cstack
    unless $I20, rx813_jump1587
    elements $I18, rx813_bstack
    le $I18, 0, rx813_cut1588
    dec $I18
    set $I18, rx813_bstack[$I18]
  rx813_cut1588:
    assign rx813_cstack, $I18
  rx813_jump1587:
    jump $I19
  rx813_done1584:
    rx813_cur."!cursor_fail"()
    .return (rx813_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_65_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 870
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_66_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx831_start
    .local string rx831_tgt
    .local int rx831_pos
    .local int rx831_off
    .local int rx831_eos
    .local int rx831_rep
    .local pmc rx831_cur
    .local pmc rx831_curclass
    .local pmc rx831_bstack
    .local pmc rx831_cstack
    rx831_start = self."!cursor_start_all"()
    set rx831_cur, rx831_start[0]
    set rx831_tgt, rx831_start[1]
    set rx831_pos, rx831_start[2]
    set rx831_curclass, rx831_start[3]
    set rx831_bstack, rx831_start[4]
    set $I19, rx831_start[5]
    store_lex unicode:"$\x{a2}", rx831_cur
    length rx831_eos, rx831_tgt
    eq $I19, 1, rx831_restart1614
    gt rx831_pos, rx831_eos, rx831_fail1615
    repr_get_attr_int $I11, self, rx831_curclass, "$!from"
    ne $I11, -1, rxscan832_done1621
    goto rxscan832_scan1620
  rxscan832_loop1619:
    inc rx831_pos
    gt rx831_pos, rx831_eos, rx831_fail1615
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!from", rx831_pos
  rxscan832_scan1620:
    nqp_rxmark rx831_bstack, rxscan832_loop1619, rx831_pos, 0
  rxscan832_done1621:
    nqp_rxmark rx831_bstack, rxcap833_fail1623, rx831_pos, 0
    add $I11, rx831_pos, 6
    gt $I11, rx831_eos, rx831_fail1615
    substr $S10, rx831_tgt, rx831_pos, 6
    ne $S10, ucs4:"unless", rx831_fail1615
    add rx831_pos, 6
    nqp_rxpeek $I19, rx831_bstack, rxcap833_fail1623
    inc $I19
    set $I11, rx831_bstack[$I19]
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx831_pos)
    rx831_cstack = rx831_cur."!cursor_capture"($P11, "sym")
    goto rxcap833_done1622
  rxcap833_fail1623:
    goto rx831_fail1615
  rxcap833_done1622:
    ge rx831_pos, rx831_eos, rx831_fail1615
    is_cclass $I11, .CCLASS_WHITESPACE, rx831_tgt, rx831_pos
    unless $I11, rx831_fail1615
    add rx831_pos, 1
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    nqp_rxmark rx831_bstack, rxsubrule835_pass1625, -1, 0
  rxsubrule835_pass1625:
    rx831_cstack = rx831_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
  alt837_01628:
    nqp_rxmark rx831_bstack, alt837_11641, rx831_pos, 0
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    .const 'Sub' $P5001 = 'cuid_66_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    ge $I11, 0, rx831_fail1615
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    goto alt837_end1627
  alt837_11641:
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."panic"("unless does not take \"else\", please rewrite using \"if\"")
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
  alt837_end1627:
    repr_bind_attr_int rx831_cur, rx831_curclass, "$!pos", rx831_pos
    $P11 = rx831_cur."ws"()
    repr_get_attr_int $I11, $P11, rx831_curclass, "$!pos"
    lt $I11, 0, rx831_fail1615
    repr_get_attr_int rx831_pos, $P11, rx831_curclass, "$!pos"
    rx831_cur."!cursor_pass"(rx831_pos, "statement_control:sym<unless>", 'backtrack'=>1)
    .return (rx831_cur)
  rx831_restart1614:
    repr_get_attr_obj rx831_cstack, rx831_cur, rx831_curclass, "$!cstack"
  rx831_fail1615:
    unless rx831_bstack, rx831_done1613
    pop $I19, rx831_bstack
    if_null rx831_cstack, rx831_cstack_done1618
    unless rx831_cstack, rx831_cstack_done1618
    dec $I19
    set $P11, rx831_cstack[$I19]
  rx831_cstack_done1618:
    pop rx831_rep, rx831_bstack
    pop rx831_pos, rx831_bstack
    pop $I19, rx831_bstack
    lt rx831_pos, -1, rx831_done1613
    lt rx831_pos, 0, rx831_fail1615
    eq $I19, 0, rx831_fail1615
    nqp_islist $I20, rx831_cstack
    unless $I20, rx831_jump1616
    elements $I18, rx831_bstack
    le $I18, 0, rx831_cut1617
    dec $I18
    set $I18, rx831_bstack[$I18]
  rx831_cut1617:
    assign rx831_cstack, $I18
  rx831_jump1616:
    jump $I19
  rx831_done1613:
    rx831_cur."!cursor_fail"()
    .return (rx831_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_66_1361537952.49511") :anon :lex :outer("cuid_65_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx839_start
    .local string rx839_tgt
    .local int rx839_pos
    .local int rx839_off
    .local int rx839_eos
    .local int rx839_rep
    .local pmc rx839_cur
    .local pmc rx839_curclass
    .local pmc rx839_bstack
    .local pmc rx839_cstack
    rx839_start = self."!cursor_start_all"()
    set rx839_cur, rx839_start[0]
    set rx839_tgt, rx839_start[1]
    set rx839_pos, rx839_start[2]
    set rx839_curclass, rx839_start[3]
    set rx839_bstack, rx839_start[4]
    set $I19, rx839_start[5]
    store_lex unicode:"$\x{a2}", rx839_cur
    length rx839_eos, rx839_tgt
    eq $I19, 1, rx839_restart1632
    gt rx839_pos, rx839_eos, rx839_fail1633
    repr_get_attr_int $I11, self, rx839_curclass, "$!from"
    ne $I11, -1, rxscan840_done1639
    goto rxscan840_scan1638
  rxscan840_loop1637:
    inc rx839_pos
    gt rx839_pos, rx839_eos, rx839_fail1633
    repr_bind_attr_int rx839_cur, rx839_curclass, "$!from", rx839_pos
  rxscan840_scan1638:
    nqp_rxmark rx839_bstack, rxscan840_loop1637, rx839_pos, 0
  rxscan840_done1639:
    add $I11, rx839_pos, 4
    gt $I11, rx839_eos, rx839_fail1633
    substr $S10, rx839_tgt, rx839_pos, 4
    ne $S10, ucs4:"else", rx839_fail1633
    add rx839_pos, 4
    rx839_cur."!cursor_pass"(rx839_pos, 'backtrack'=>1)
    .return (rx839_cur)
  rx839_restart1632:
    repr_get_attr_obj rx839_cstack, rx839_cur, rx839_curclass, "$!cstack"
  rx839_fail1633:
    unless rx839_bstack, rx839_done1631
    pop $I19, rx839_bstack
    if_null rx839_cstack, rx839_cstack_done1636
    unless rx839_cstack, rx839_cstack_done1636
    dec $I19
    set $P11, rx839_cstack[$I19]
  rx839_cstack_done1636:
    pop rx839_rep, rx839_bstack
    pop rx839_pos, rx839_bstack
    pop $I19, rx839_bstack
    lt rx839_pos, -1, rx839_done1631
    lt rx839_pos, 0, rx839_fail1633
    eq $I19, 0, rx839_fail1633
    nqp_islist $I20, rx839_cstack
    unless $I20, rx839_jump1634
    elements $I18, rx839_bstack
    le $I18, 0, rx839_cut1635
    dec $I18
    set $I18, rx839_bstack[$I18]
  rx839_cut1635:
    assign rx839_cstack, $I18
  rx839_jump1634:
    jump $I19
  rx839_done1631:
    rx839_cur."!cursor_fail"()
    .return (rx839_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_67_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 876
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx846_start
    .local string rx846_tgt
    .local int rx846_pos
    .local int rx846_off
    .local int rx846_eos
    .local int rx846_rep
    .local pmc rx846_cur
    .local pmc rx846_curclass
    .local pmc rx846_bstack
    .local pmc rx846_cstack
    rx846_start = self."!cursor_start_all"()
    set rx846_cur, rx846_start[0]
    set rx846_tgt, rx846_start[1]
    set rx846_pos, rx846_start[2]
    set rx846_curclass, rx846_start[3]
    set rx846_bstack, rx846_start[4]
    set $I19, rx846_start[5]
    store_lex unicode:"$\x{a2}", rx846_cur
    length rx846_eos, rx846_tgt
    eq $I19, 1, rx846_restart1648
    gt rx846_pos, rx846_eos, rx846_fail1649
    repr_get_attr_int $I11, self, rx846_curclass, "$!from"
    ne $I11, -1, rxscan847_done1655
    goto rxscan847_scan1654
  rxscan847_loop1653:
    inc rx846_pos
    gt rx846_pos, rx846_eos, rx846_fail1649
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!from", rx846_pos
  rxscan847_scan1654:
    nqp_rxmark rx846_bstack, rxscan847_loop1653, rx846_pos, 0
  rxscan847_done1655:
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!pos", rx846_pos
    store_lex unicode:"$\x{a2}", rx846_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx846_bstack, rxcap848_fail1657, rx846_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt849_01659
    nqp_push_label $P11, alt849_11660
    nqp_rxmark rx846_bstack, alt849_end1658, -1, 0
    rx846_cur."!alt"(rx846_pos, "alt_nfa__12_1361537954.77271", $P11)
    goto rx846_fail1649
  alt849_01659:
    add $I11, rx846_pos, 5
    gt $I11, rx846_eos, rx846_fail1649
    substr $S10, rx846_tgt, rx846_pos, 5
    ne $S10, ucs4:"while", rx846_fail1649
    add rx846_pos, 5
    goto alt849_end1658
  alt849_11660:
    add $I11, rx846_pos, 5
    gt $I11, rx846_eos, rx846_fail1649
    substr $S10, rx846_tgt, rx846_pos, 5
    ne $S10, ucs4:"until", rx846_fail1649
    add rx846_pos, 5
    goto alt849_end1658
  alt849_end1658:
    nqp_rxcommit rx846_bstack, alt849_end1658
    nqp_rxpeek $I19, rx846_bstack, rxcap848_fail1657
    inc $I19
    set $I11, rx846_bstack[$I19]
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!pos", rx846_pos
    $P11 = rx846_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx846_pos)
    rx846_cstack = rx846_cur."!cursor_capture"($P11, "sym")
    goto rxcap848_done1656
  rxcap848_fail1657:
    goto rx846_fail1649
  rxcap848_done1656:
    ge rx846_pos, rx846_eos, rx846_fail1649
    is_cclass $I11, .CCLASS_WHITESPACE, rx846_tgt, rx846_pos
    unless $I11, rx846_fail1649
    add rx846_pos, 1
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!pos", rx846_pos
    $P11 = rx846_cur."ws"()
    repr_get_attr_int $I11, $P11, rx846_curclass, "$!pos"
    lt $I11, 0, rx846_fail1649
    repr_get_attr_int rx846_pos, $P11, rx846_curclass, "$!pos"
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!pos", rx846_pos
    $P11 = rx846_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx846_curclass, "$!pos"
    lt $I11, 0, rx846_fail1649
    nqp_rxmark rx846_bstack, rxsubrule851_pass1662, -1, 0
  rxsubrule851_pass1662:
    rx846_cstack = rx846_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx846_pos, $P11, rx846_curclass, "$!pos"
    repr_bind_attr_int rx846_cur, rx846_curclass, "$!pos", rx846_pos
    $P11 = rx846_cur."ws"()
    repr_get_attr_int $I11, $P11, rx846_curclass, "$!pos"
    lt $I11, 0, rx846_fail1649
    repr_get_attr_int rx846_pos, $P11, rx846_curclass, "$!pos"
    rx846_cur."!cursor_pass"(rx846_pos, "statement_control:sym<while>", 'backtrack'=>1)
    .return (rx846_cur)
  rx846_restart1648:
    repr_get_attr_obj rx846_cstack, rx846_cur, rx846_curclass, "$!cstack"
  rx846_fail1649:
    unless rx846_bstack, rx846_done1647
    pop $I19, rx846_bstack
    if_null rx846_cstack, rx846_cstack_done1652
    unless rx846_cstack, rx846_cstack_done1652
    dec $I19
    set $P11, rx846_cstack[$I19]
  rx846_cstack_done1652:
    pop rx846_rep, rx846_bstack
    pop rx846_pos, rx846_bstack
    pop $I19, rx846_bstack
    lt rx846_pos, -1, rx846_done1647
    lt rx846_pos, 0, rx846_fail1649
    eq $I19, 0, rx846_fail1649
    nqp_islist $I20, rx846_cstack
    unless $I20, rx846_jump1650
    elements $I18, rx846_bstack
    le $I18, 0, rx846_cut1651
    dec $I18
    set $I18, rx846_bstack[$I18]
  rx846_cut1651:
    assign rx846_cstack, $I18
  rx846_jump1650:
    jump $I19
  rx846_done1647:
    rx846_cur."!cursor_fail"()
    .return (rx846_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_68_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 882
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx853_start
    .local string rx853_tgt
    .local int rx853_pos
    .local int rx853_off
    .local int rx853_eos
    .local int rx853_rep
    .local pmc rx853_cur
    .local pmc rx853_curclass
    .local pmc rx853_bstack
    .local pmc rx853_cstack
    rx853_start = self."!cursor_start_all"()
    set rx853_cur, rx853_start[0]
    set rx853_tgt, rx853_start[1]
    set rx853_pos, rx853_start[2]
    set rx853_curclass, rx853_start[3]
    set rx853_bstack, rx853_start[4]
    set $I19, rx853_start[5]
    store_lex unicode:"$\x{a2}", rx853_cur
    length rx853_eos, rx853_tgt
    eq $I19, 1, rx853_restart1666
    gt rx853_pos, rx853_eos, rx853_fail1667
    repr_get_attr_int $I11, self, rx853_curclass, "$!from"
    ne $I11, -1, rxscan854_done1673
    goto rxscan854_scan1672
  rxscan854_loop1671:
    inc rx853_pos
    gt rx853_pos, rx853_eos, rx853_fail1667
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!from", rx853_pos
  rxscan854_scan1672:
    nqp_rxmark rx853_bstack, rxscan854_loop1671, rx853_pos, 0
  rxscan854_done1673:
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    store_lex unicode:"$\x{a2}", rx853_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx853_bstack, rxcap855_fail1675, rx853_pos, 0
    add $I11, rx853_pos, 6
    gt $I11, rx853_eos, rx853_fail1667
    substr $S10, rx853_tgt, rx853_pos, 6
    ne $S10, ucs4:"repeat", rx853_fail1667
    add rx853_pos, 6
    nqp_rxpeek $I19, rx853_bstack, rxcap855_fail1675
    inc $I19
    set $I11, rx853_bstack[$I19]
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx853_pos)
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "sym")
    goto rxcap855_done1674
  rxcap855_fail1675:
    goto rx853_fail1667
  rxcap855_done1674:
    ge rx853_pos, rx853_eos, rx853_fail1667
    is_cclass $I11, .CCLASS_WHITESPACE, rx853_tgt, rx853_pos
    unless $I11, rx853_fail1667
    add rx853_pos, 1
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt857_01678
    nqp_push_label $P11, alt857_11688
    nqp_rxmark rx853_bstack, alt857_end1677, -1, 0
    rx853_cur."!alt"(rx853_pos, "alt_nfa__15_1361537954.80391", $P11)
    goto rx853_fail1667
  alt857_01678:
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    nqp_rxmark rx853_bstack, rxcap859_fail1681, rx853_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt860_01683
    nqp_push_label $P11, alt860_11684
    nqp_rxmark rx853_bstack, alt860_end1682, -1, 0
    rx853_cur."!alt"(rx853_pos, "alt_nfa__13_1361537954.80391", $P11)
    goto rx853_fail1667
  alt860_01683:
    add $I11, rx853_pos, 5
    gt $I11, rx853_eos, rx853_fail1667
    substr $S10, rx853_tgt, rx853_pos, 5
    ne $S10, ucs4:"while", rx853_fail1667
    add rx853_pos, 5
    goto alt860_end1682
  alt860_11684:
    add $I11, rx853_pos, 5
    gt $I11, rx853_eos, rx853_fail1667
    substr $S10, rx853_tgt, rx853_pos, 5
    ne $S10, ucs4:"until", rx853_fail1667
    add rx853_pos, 5
    goto alt860_end1682
  alt860_end1682:
    nqp_rxcommit rx853_bstack, alt860_end1682
    nqp_rxpeek $I19, rx853_bstack, rxcap859_fail1681
    inc $I19
    set $I11, rx853_bstack[$I19]
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx853_pos)
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "wu")
    goto rxcap859_done1680
  rxcap859_fail1681:
    goto rx853_fail1667
  rxcap859_done1680:
    ge rx853_pos, rx853_eos, rx853_fail1667
    is_cclass $I11, .CCLASS_WHITESPACE, rx853_tgt, rx853_pos
    unless $I11, rx853_fail1667
    add rx853_pos, 1
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    nqp_rxmark rx853_bstack, rxsubrule862_pass1686, -1, 0
  rxsubrule862_pass1686:
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    goto alt857_end1677
  alt857_11688:
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    nqp_rxmark rx853_bstack, rxsubrule865_pass1690, -1, 0
  rxsubrule865_pass1690:
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    nqp_rxmark rx853_bstack, rxcap867_fail1693, rx853_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt868_01695
    nqp_push_label $P11, alt868_11696
    nqp_rxmark rx853_bstack, alt868_end1694, -1, 0
    rx853_cur."!alt"(rx853_pos, "alt_nfa__14_1361537954.80391", $P11)
    goto rx853_fail1667
  alt868_01695:
    add $I11, rx853_pos, 5
    gt $I11, rx853_eos, rx853_fail1667
    substr $S10, rx853_tgt, rx853_pos, 5
    ne $S10, ucs4:"while", rx853_fail1667
    add rx853_pos, 5
    goto alt868_end1694
  alt868_11696:
    add $I11, rx853_pos, 5
    gt $I11, rx853_eos, rx853_fail1667
    substr $S10, rx853_tgt, rx853_pos, 5
    ne $S10, ucs4:"until", rx853_fail1667
    add rx853_pos, 5
    goto alt868_end1694
  alt868_end1694:
    nqp_rxcommit rx853_bstack, alt868_end1694
    nqp_rxpeek $I19, rx853_bstack, rxcap867_fail1693
    inc $I19
    set $I11, rx853_bstack[$I19]
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx853_pos)
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "wu")
    goto rxcap867_done1692
  rxcap867_fail1693:
    goto rx853_fail1667
  rxcap867_done1692:
    ge rx853_pos, rx853_eos, rx853_fail1667
    is_cclass $I11, .CCLASS_WHITESPACE, rx853_tgt, rx853_pos
    unless $I11, rx853_fail1667
    add rx853_pos, 1
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    nqp_rxmark rx853_bstack, rxsubrule870_pass1698, -1, 0
  rxsubrule870_pass1698:
    rx853_cstack = rx853_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    goto alt857_end1677
  alt857_end1677:
    nqp_rxcommit rx853_bstack, alt857_end1677
    repr_bind_attr_int rx853_cur, rx853_curclass, "$!pos", rx853_pos
    $P11 = rx853_cur."ws"()
    repr_get_attr_int $I11, $P11, rx853_curclass, "$!pos"
    lt $I11, 0, rx853_fail1667
    repr_get_attr_int rx853_pos, $P11, rx853_curclass, "$!pos"
    rx853_cur."!cursor_pass"(rx853_pos, "statement_control:sym<repeat>", 'backtrack'=>1)
    .return (rx853_cur)
  rx853_restart1666:
    repr_get_attr_obj rx853_cstack, rx853_cur, rx853_curclass, "$!cstack"
  rx853_fail1667:
    unless rx853_bstack, rx853_done1665
    pop $I19, rx853_bstack
    if_null rx853_cstack, rx853_cstack_done1670
    unless rx853_cstack, rx853_cstack_done1670
    dec $I19
    set $P11, rx853_cstack[$I19]
  rx853_cstack_done1670:
    pop rx853_rep, rx853_bstack
    pop rx853_pos, rx853_bstack
    pop $I19, rx853_bstack
    lt rx853_pos, -1, rx853_done1665
    lt rx853_pos, 0, rx853_fail1667
    eq $I19, 0, rx853_fail1667
    nqp_islist $I20, rx853_cstack
    unless $I20, rx853_jump1668
    elements $I18, rx853_bstack
    le $I18, 0, rx853_cut1669
    dec $I18
    set $I18, rx853_bstack[$I18]
  rx853_cut1669:
    assign rx853_cstack, $I18
  rx853_jump1668:
    jump $I19
  rx853_done1665:
    rx853_cur."!cursor_fail"()
    .return (rx853_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_69_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 891
    .param pmc _lex_param_0 
    .lex "$*CONTROL_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx873_start
    .local string rx873_tgt
    .local int rx873_pos
    .local int rx873_off
    .local int rx873_eos
    .local int rx873_rep
    .local pmc rx873_cur
    .local pmc rx873_curclass
    .local pmc rx873_bstack
    .local pmc rx873_cstack
    rx873_start = self."!cursor_start_all"()
    set rx873_cur, rx873_start[0]
    set rx873_tgt, rx873_start[1]
    set rx873_pos, rx873_start[2]
    set rx873_curclass, rx873_start[3]
    set rx873_bstack, rx873_start[4]
    set $I19, rx873_start[5]
    store_lex unicode:"$\x{a2}", rx873_cur
    length rx873_eos, rx873_tgt
    eq $I19, 1, rx873_restart1703
    gt rx873_pos, rx873_eos, rx873_fail1704
    repr_get_attr_int $I11, self, rx873_curclass, "$!from"
    ne $I11, -1, rxscan874_done1710
    goto rxscan874_scan1709
  rxscan874_loop1708:
    inc rx873_pos
    gt rx873_pos, rx873_eos, rx873_fail1704
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!from", rx873_pos
  rxscan874_scan1709:
    nqp_rxmark rx873_bstack, rxscan874_loop1708, rx873_pos, 0
  rxscan874_done1710:
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!pos", rx873_pos
    store_lex unicode:"$\x{a2}", rx873_cur
    box $P5002, 0
    set $P101, $P5002
    nqp_rxmark rx873_bstack, rxcap875_fail1712, rx873_pos, 0
    add $I11, rx873_pos, 3
    gt $I11, rx873_eos, rx873_fail1704
    substr $S10, rx873_tgt, rx873_pos, 3
    ne $S10, ucs4:"for", rx873_fail1704
    add rx873_pos, 3
    nqp_rxpeek $I19, rx873_bstack, rxcap875_fail1712
    inc $I19
    set $I11, rx873_bstack[$I19]
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!pos", rx873_pos
    $P11 = rx873_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx873_pos)
    rx873_cstack = rx873_cur."!cursor_capture"($P11, "sym")
    goto rxcap875_done1711
  rxcap875_fail1712:
    goto rx873_fail1704
  rxcap875_done1711:
    ge rx873_pos, rx873_eos, rx873_fail1704
    is_cclass $I11, .CCLASS_WHITESPACE, rx873_tgt, rx873_pos
    unless $I11, rx873_fail1704
    add rx873_pos, 1
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!pos", rx873_pos
    $P11 = rx873_cur."ws"()
    repr_get_attr_int $I11, $P11, rx873_curclass, "$!pos"
    lt $I11, 0, rx873_fail1704
    repr_get_attr_int rx873_pos, $P11, rx873_curclass, "$!pos"
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!pos", rx873_pos
    $P11 = rx873_cur."xblock"()
    repr_get_attr_int $I11, $P11, rx873_curclass, "$!pos"
    lt $I11, 0, rx873_fail1704
    nqp_rxmark rx873_bstack, rxsubrule877_pass1714, -1, 0
  rxsubrule877_pass1714:
    rx873_cstack = rx873_cur."!cursor_capture"($P11, "xblock")
    repr_get_attr_int rx873_pos, $P11, rx873_curclass, "$!pos"
    repr_bind_attr_int rx873_cur, rx873_curclass, "$!pos", rx873_pos
    $P11 = rx873_cur."ws"()
    repr_get_attr_int $I11, $P11, rx873_curclass, "$!pos"
    lt $I11, 0, rx873_fail1704
    repr_get_attr_int rx873_pos, $P11, rx873_curclass, "$!pos"
    rx873_cur."!cursor_pass"(rx873_pos, "statement_control:sym<for>", 'backtrack'=>1)
    .return (rx873_cur)
  rx873_restart1703:
    repr_get_attr_obj rx873_cstack, rx873_cur, rx873_curclass, "$!cstack"
  rx873_fail1704:
    unless rx873_bstack, rx873_done1702
    pop $I19, rx873_bstack
    if_null rx873_cstack, rx873_cstack_done1707
    unless rx873_cstack, rx873_cstack_done1707
    dec $I19
    set $P11, rx873_cstack[$I19]
  rx873_cstack_done1707:
    pop rx873_rep, rx873_bstack
    pop rx873_pos, rx873_bstack
    pop $I19, rx873_bstack
    lt rx873_pos, -1, rx873_done1702
    lt rx873_pos, 0, rx873_fail1704
    eq $I19, 0, rx873_fail1704
    nqp_islist $I20, rx873_cstack
    unless $I20, rx873_jump1705
    elements $I18, rx873_bstack
    le $I18, 0, rx873_cut1706
    dec $I18
    set $I18, rx873_bstack[$I18]
  rx873_cut1706:
    assign rx873_cstack, $I18
  rx873_jump1705:
    jump $I19
  rx873_done1702:
    rx873_cur."!cursor_fail"()
    .return (rx873_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_70_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 897
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx879_start
    .local string rx879_tgt
    .local int rx879_pos
    .local int rx879_off
    .local int rx879_eos
    .local int rx879_rep
    .local pmc rx879_cur
    .local pmc rx879_curclass
    .local pmc rx879_bstack
    .local pmc rx879_cstack
    rx879_start = self."!cursor_start_all"()
    set rx879_cur, rx879_start[0]
    set rx879_tgt, rx879_start[1]
    set rx879_pos, rx879_start[2]
    set rx879_curclass, rx879_start[3]
    set rx879_bstack, rx879_start[4]
    set $I19, rx879_start[5]
    store_lex unicode:"$\x{a2}", rx879_cur
    length rx879_eos, rx879_tgt
    eq $I19, 1, rx879_restart1718
    gt rx879_pos, rx879_eos, rx879_fail1719
    repr_get_attr_int $I11, self, rx879_curclass, "$!from"
    ne $I11, -1, rxscan880_done1725
    goto rxscan880_scan1724
  rxscan880_loop1723:
    inc rx879_pos
    gt rx879_pos, rx879_eos, rx879_fail1719
    repr_bind_attr_int rx879_cur, rx879_curclass, "$!from", rx879_pos
  rxscan880_scan1724:
    nqp_rxmark rx879_bstack, rxscan880_loop1723, rx879_pos, 0
  rxscan880_done1725:
    nqp_rxmark rx879_bstack, rxcap881_fail1727, rx879_pos, 0
    add $I11, rx879_pos, 5
    gt $I11, rx879_eos, rx879_fail1719
    substr $S10, rx879_tgt, rx879_pos, 5
    ne $S10, ucs4:"CATCH", rx879_fail1719
    add rx879_pos, 5
    nqp_rxpeek $I19, rx879_bstack, rxcap881_fail1727
    inc $I19
    set $I11, rx879_bstack[$I19]
    repr_bind_attr_int rx879_cur, rx879_curclass, "$!pos", rx879_pos
    $P11 = rx879_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx879_pos)
    rx879_cstack = rx879_cur."!cursor_capture"($P11, "sym")
    goto rxcap881_done1726
  rxcap881_fail1727:
    goto rx879_fail1719
  rxcap881_done1726:
    ge rx879_pos, rx879_eos, rx879_fail1719
    is_cclass $I11, .CCLASS_WHITESPACE, rx879_tgt, rx879_pos
    unless $I11, rx879_fail1719
    add rx879_pos, 1
    repr_bind_attr_int rx879_cur, rx879_curclass, "$!pos", rx879_pos
    $P11 = rx879_cur."ws"()
    repr_get_attr_int $I11, $P11, rx879_curclass, "$!pos"
    lt $I11, 0, rx879_fail1719
    repr_get_attr_int rx879_pos, $P11, rx879_curclass, "$!pos"
    repr_bind_attr_int rx879_cur, rx879_curclass, "$!pos", rx879_pos
    $P11 = rx879_cur."block"()
    repr_get_attr_int $I11, $P11, rx879_curclass, "$!pos"
    lt $I11, 0, rx879_fail1719
    nqp_rxmark rx879_bstack, rxsubrule883_pass1729, -1, 0
  rxsubrule883_pass1729:
    rx879_cstack = rx879_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx879_pos, $P11, rx879_curclass, "$!pos"
    repr_bind_attr_int rx879_cur, rx879_curclass, "$!pos", rx879_pos
    $P11 = rx879_cur."ws"()
    repr_get_attr_int $I11, $P11, rx879_curclass, "$!pos"
    lt $I11, 0, rx879_fail1719
    repr_get_attr_int rx879_pos, $P11, rx879_curclass, "$!pos"
    rx879_cur."!cursor_pass"(rx879_pos, "statement_control:sym<CATCH>", 'backtrack'=>1)
    .return (rx879_cur)
  rx879_restart1718:
    repr_get_attr_obj rx879_cstack, rx879_cur, rx879_curclass, "$!cstack"
  rx879_fail1719:
    unless rx879_bstack, rx879_done1717
    pop $I19, rx879_bstack
    if_null rx879_cstack, rx879_cstack_done1722
    unless rx879_cstack, rx879_cstack_done1722
    dec $I19
    set $P11, rx879_cstack[$I19]
  rx879_cstack_done1722:
    pop rx879_rep, rx879_bstack
    pop rx879_pos, rx879_bstack
    pop $I19, rx879_bstack
    lt rx879_pos, -1, rx879_done1717
    lt rx879_pos, 0, rx879_fail1719
    eq $I19, 0, rx879_fail1719
    nqp_islist $I20, rx879_cstack
    unless $I20, rx879_jump1720
    elements $I18, rx879_bstack
    le $I18, 0, rx879_cut1721
    dec $I18
    set $I18, rx879_bstack[$I18]
  rx879_cut1721:
    assign rx879_cstack, $I18
  rx879_jump1720:
    jump $I19
  rx879_done1717:
    rx879_cur."!cursor_fail"()
    .return (rx879_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_71_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 902
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx885_start
    .local string rx885_tgt
    .local int rx885_pos
    .local int rx885_off
    .local int rx885_eos
    .local int rx885_rep
    .local pmc rx885_cur
    .local pmc rx885_curclass
    .local pmc rx885_bstack
    .local pmc rx885_cstack
    rx885_start = self."!cursor_start_all"()
    set rx885_cur, rx885_start[0]
    set rx885_tgt, rx885_start[1]
    set rx885_pos, rx885_start[2]
    set rx885_curclass, rx885_start[3]
    set rx885_bstack, rx885_start[4]
    set $I19, rx885_start[5]
    store_lex unicode:"$\x{a2}", rx885_cur
    length rx885_eos, rx885_tgt
    eq $I19, 1, rx885_restart1733
    gt rx885_pos, rx885_eos, rx885_fail1734
    repr_get_attr_int $I11, self, rx885_curclass, "$!from"
    ne $I11, -1, rxscan886_done1740
    goto rxscan886_scan1739
  rxscan886_loop1738:
    inc rx885_pos
    gt rx885_pos, rx885_eos, rx885_fail1734
    repr_bind_attr_int rx885_cur, rx885_curclass, "$!from", rx885_pos
  rxscan886_scan1739:
    nqp_rxmark rx885_bstack, rxscan886_loop1738, rx885_pos, 0
  rxscan886_done1740:
    nqp_rxmark rx885_bstack, rxcap887_fail1742, rx885_pos, 0
    add $I11, rx885_pos, 7
    gt $I11, rx885_eos, rx885_fail1734
    substr $S10, rx885_tgt, rx885_pos, 7
    ne $S10, ucs4:"CONTROL", rx885_fail1734
    add rx885_pos, 7
    nqp_rxpeek $I19, rx885_bstack, rxcap887_fail1742
    inc $I19
    set $I11, rx885_bstack[$I19]
    repr_bind_attr_int rx885_cur, rx885_curclass, "$!pos", rx885_pos
    $P11 = rx885_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx885_pos)
    rx885_cstack = rx885_cur."!cursor_capture"($P11, "sym")
    goto rxcap887_done1741
  rxcap887_fail1742:
    goto rx885_fail1734
  rxcap887_done1741:
    ge rx885_pos, rx885_eos, rx885_fail1734
    is_cclass $I11, .CCLASS_WHITESPACE, rx885_tgt, rx885_pos
    unless $I11, rx885_fail1734
    add rx885_pos, 1
    repr_bind_attr_int rx885_cur, rx885_curclass, "$!pos", rx885_pos
    $P11 = rx885_cur."ws"()
    repr_get_attr_int $I11, $P11, rx885_curclass, "$!pos"
    lt $I11, 0, rx885_fail1734
    repr_get_attr_int rx885_pos, $P11, rx885_curclass, "$!pos"
    repr_bind_attr_int rx885_cur, rx885_curclass, "$!pos", rx885_pos
    $P11 = rx885_cur."block"()
    repr_get_attr_int $I11, $P11, rx885_curclass, "$!pos"
    lt $I11, 0, rx885_fail1734
    nqp_rxmark rx885_bstack, rxsubrule889_pass1744, -1, 0
  rxsubrule889_pass1744:
    rx885_cstack = rx885_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx885_pos, $P11, rx885_curclass, "$!pos"
    repr_bind_attr_int rx885_cur, rx885_curclass, "$!pos", rx885_pos
    $P11 = rx885_cur."ws"()
    repr_get_attr_int $I11, $P11, rx885_curclass, "$!pos"
    lt $I11, 0, rx885_fail1734
    repr_get_attr_int rx885_pos, $P11, rx885_curclass, "$!pos"
    rx885_cur."!cursor_pass"(rx885_pos, "statement_control:sym<CONTROL>", 'backtrack'=>1)
    .return (rx885_cur)
  rx885_restart1733:
    repr_get_attr_obj rx885_cstack, rx885_cur, rx885_curclass, "$!cstack"
  rx885_fail1734:
    unless rx885_bstack, rx885_done1732
    pop $I19, rx885_bstack
    if_null rx885_cstack, rx885_cstack_done1737
    unless rx885_cstack, rx885_cstack_done1737
    dec $I19
    set $P11, rx885_cstack[$I19]
  rx885_cstack_done1737:
    pop rx885_rep, rx885_bstack
    pop rx885_pos, rx885_bstack
    pop $I19, rx885_bstack
    lt rx885_pos, -1, rx885_done1732
    lt rx885_pos, 0, rx885_fail1734
    eq $I19, 0, rx885_fail1734
    nqp_islist $I20, rx885_cstack
    unless $I20, rx885_jump1735
    elements $I18, rx885_bstack
    le $I18, 0, rx885_cut1736
    dec $I18
    set $I18, rx885_bstack[$I18]
  rx885_cut1736:
    assign rx885_cstack, $I18
  rx885_jump1735:
    jump $I19
  rx885_done1732:
    rx885_cur."!cursor_fail"()
    .return (rx885_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix" :subid("cuid_72_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 907
    .param pmc self 
    $P5001 = self."!protoregex"("statement_prefix")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_73_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 908
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx891_start
    .local string rx891_tgt
    .local int rx891_pos
    .local int rx891_off
    .local int rx891_eos
    .local int rx891_rep
    .local pmc rx891_cur
    .local pmc rx891_curclass
    .local pmc rx891_bstack
    .local pmc rx891_cstack
    rx891_start = self."!cursor_start_all"()
    set rx891_cur, rx891_start[0]
    set rx891_tgt, rx891_start[1]
    set rx891_pos, rx891_start[2]
    set rx891_curclass, rx891_start[3]
    set rx891_bstack, rx891_start[4]
    set $I19, rx891_start[5]
    store_lex unicode:"$\x{a2}", rx891_cur
    length rx891_eos, rx891_tgt
    eq $I19, 1, rx891_restart1748
    gt rx891_pos, rx891_eos, rx891_fail1749
    repr_get_attr_int $I11, self, rx891_curclass, "$!from"
    ne $I11, -1, rxscan892_done1755
    goto rxscan892_scan1754
  rxscan892_loop1753:
    inc rx891_pos
    gt rx891_pos, rx891_eos, rx891_fail1749
    repr_bind_attr_int rx891_cur, rx891_curclass, "$!from", rx891_pos
  rxscan892_scan1754:
    nqp_rxmark rx891_bstack, rxscan892_loop1753, rx891_pos, 0
  rxscan892_done1755:
    nqp_rxmark rx891_bstack, rxcap893_fail1757, rx891_pos, 0
    add $I11, rx891_pos, 5
    gt $I11, rx891_eos, rx891_fail1749
    substr $S10, rx891_tgt, rx891_pos, 5
    ne $S10, ucs4:"BEGIN", rx891_fail1749
    add rx891_pos, 5
    nqp_rxpeek $I19, rx891_bstack, rxcap893_fail1757
    inc $I19
    set $I11, rx891_bstack[$I19]
    repr_bind_attr_int rx891_cur, rx891_curclass, "$!pos", rx891_pos
    $P11 = rx891_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx891_pos)
    rx891_cstack = rx891_cur."!cursor_capture"($P11, "sym")
    goto rxcap893_done1756
  rxcap893_fail1757:
    goto rx891_fail1749
  rxcap893_done1756:
    repr_bind_attr_int rx891_cur, rx891_curclass, "$!pos", rx891_pos
    $P11 = rx891_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx891_curclass, "$!pos"
    lt $I11, 0, rx891_fail1749
    nqp_rxmark rx891_bstack, rxsubrule894_pass1758, -1, 0
  rxsubrule894_pass1758:
    rx891_cstack = rx891_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx891_pos, $P11, rx891_curclass, "$!pos"
    rx891_cur."!cursor_pass"(rx891_pos, "statement_prefix:sym<BEGIN>", 'backtrack'=>1)
    .return (rx891_cur)
  rx891_restart1748:
    repr_get_attr_obj rx891_cstack, rx891_cur, rx891_curclass, "$!cstack"
  rx891_fail1749:
    unless rx891_bstack, rx891_done1747
    pop $I19, rx891_bstack
    if_null rx891_cstack, rx891_cstack_done1752
    unless rx891_cstack, rx891_cstack_done1752
    dec $I19
    set $P11, rx891_cstack[$I19]
  rx891_cstack_done1752:
    pop rx891_rep, rx891_bstack
    pop rx891_pos, rx891_bstack
    pop $I19, rx891_bstack
    lt rx891_pos, -1, rx891_done1747
    lt rx891_pos, 0, rx891_fail1749
    eq $I19, 0, rx891_fail1749
    nqp_islist $I20, rx891_cstack
    unless $I20, rx891_jump1750
    elements $I18, rx891_bstack
    le $I18, 0, rx891_cut1751
    dec $I18
    set $I18, rx891_bstack[$I18]
  rx891_cut1751:
    assign rx891_cstack, $I18
  rx891_jump1750:
    jump $I19
  rx891_done1747:
    rx891_cur."!cursor_fail"()
    .return (rx891_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_74_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 909
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx895_start
    .local string rx895_tgt
    .local int rx895_pos
    .local int rx895_off
    .local int rx895_eos
    .local int rx895_rep
    .local pmc rx895_cur
    .local pmc rx895_curclass
    .local pmc rx895_bstack
    .local pmc rx895_cstack
    rx895_start = self."!cursor_start_all"()
    set rx895_cur, rx895_start[0]
    set rx895_tgt, rx895_start[1]
    set rx895_pos, rx895_start[2]
    set rx895_curclass, rx895_start[3]
    set rx895_bstack, rx895_start[4]
    set $I19, rx895_start[5]
    store_lex unicode:"$\x{a2}", rx895_cur
    length rx895_eos, rx895_tgt
    eq $I19, 1, rx895_restart1761
    gt rx895_pos, rx895_eos, rx895_fail1762
    repr_get_attr_int $I11, self, rx895_curclass, "$!from"
    ne $I11, -1, rxscan896_done1768
    goto rxscan896_scan1767
  rxscan896_loop1766:
    inc rx895_pos
    gt rx895_pos, rx895_eos, rx895_fail1762
    repr_bind_attr_int rx895_cur, rx895_curclass, "$!from", rx895_pos
  rxscan896_scan1767:
    nqp_rxmark rx895_bstack, rxscan896_loop1766, rx895_pos, 0
  rxscan896_done1768:
    nqp_rxmark rx895_bstack, rxcap897_fail1770, rx895_pos, 0
    add $I11, rx895_pos, 4
    gt $I11, rx895_eos, rx895_fail1762
    substr $S10, rx895_tgt, rx895_pos, 4
    ne $S10, ucs4:"INIT", rx895_fail1762
    add rx895_pos, 4
    nqp_rxpeek $I19, rx895_bstack, rxcap897_fail1770
    inc $I19
    set $I11, rx895_bstack[$I19]
    repr_bind_attr_int rx895_cur, rx895_curclass, "$!pos", rx895_pos
    $P11 = rx895_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx895_pos)
    rx895_cstack = rx895_cur."!cursor_capture"($P11, "sym")
    goto rxcap897_done1769
  rxcap897_fail1770:
    goto rx895_fail1762
  rxcap897_done1769:
    repr_bind_attr_int rx895_cur, rx895_curclass, "$!pos", rx895_pos
    $P11 = rx895_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx895_curclass, "$!pos"
    lt $I11, 0, rx895_fail1762
    nqp_rxmark rx895_bstack, rxsubrule898_pass1771, -1, 0
  rxsubrule898_pass1771:
    rx895_cstack = rx895_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx895_pos, $P11, rx895_curclass, "$!pos"
    rx895_cur."!cursor_pass"(rx895_pos, "statement_prefix:sym<INIT>", 'backtrack'=>1)
    .return (rx895_cur)
  rx895_restart1761:
    repr_get_attr_obj rx895_cstack, rx895_cur, rx895_curclass, "$!cstack"
  rx895_fail1762:
    unless rx895_bstack, rx895_done1760
    pop $I19, rx895_bstack
    if_null rx895_cstack, rx895_cstack_done1765
    unless rx895_cstack, rx895_cstack_done1765
    dec $I19
    set $P11, rx895_cstack[$I19]
  rx895_cstack_done1765:
    pop rx895_rep, rx895_bstack
    pop rx895_pos, rx895_bstack
    pop $I19, rx895_bstack
    lt rx895_pos, -1, rx895_done1760
    lt rx895_pos, 0, rx895_fail1762
    eq $I19, 0, rx895_fail1762
    nqp_islist $I20, rx895_cstack
    unless $I20, rx895_jump1763
    elements $I18, rx895_bstack
    le $I18, 0, rx895_cut1764
    dec $I18
    set $I18, rx895_bstack[$I18]
  rx895_cut1764:
    assign rx895_cstack, $I18
  rx895_jump1763:
    jump $I19
  rx895_done1760:
    rx895_cur."!cursor_fail"()
    .return (rx895_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_75_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 911
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx899_start
    .local string rx899_tgt
    .local int rx899_pos
    .local int rx899_off
    .local int rx899_eos
    .local int rx899_rep
    .local pmc rx899_cur
    .local pmc rx899_curclass
    .local pmc rx899_bstack
    .local pmc rx899_cstack
    rx899_start = self."!cursor_start_all"()
    set rx899_cur, rx899_start[0]
    set rx899_tgt, rx899_start[1]
    set rx899_pos, rx899_start[2]
    set rx899_curclass, rx899_start[3]
    set rx899_bstack, rx899_start[4]
    set $I19, rx899_start[5]
    store_lex unicode:"$\x{a2}", rx899_cur
    length rx899_eos, rx899_tgt
    eq $I19, 1, rx899_restart1774
    gt rx899_pos, rx899_eos, rx899_fail1775
    repr_get_attr_int $I11, self, rx899_curclass, "$!from"
    ne $I11, -1, rxscan900_done1781
    goto rxscan900_scan1780
  rxscan900_loop1779:
    inc rx899_pos
    gt rx899_pos, rx899_eos, rx899_fail1775
    repr_bind_attr_int rx899_cur, rx899_curclass, "$!from", rx899_pos
  rxscan900_scan1780:
    nqp_rxmark rx899_bstack, rxscan900_loop1779, rx899_pos, 0
  rxscan900_done1781:
    nqp_rxmark rx899_bstack, rxcap901_fail1783, rx899_pos, 0
    add $I11, rx899_pos, 3
    gt $I11, rx899_eos, rx899_fail1775
    substr $S10, rx899_tgt, rx899_pos, 3
    ne $S10, ucs4:"try", rx899_fail1775
    add rx899_pos, 3
    nqp_rxpeek $I19, rx899_bstack, rxcap901_fail1783
    inc $I19
    set $I11, rx899_bstack[$I19]
    repr_bind_attr_int rx899_cur, rx899_curclass, "$!pos", rx899_pos
    $P11 = rx899_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx899_pos)
    rx899_cstack = rx899_cur."!cursor_capture"($P11, "sym")
    goto rxcap901_done1782
  rxcap901_fail1783:
    goto rx899_fail1775
  rxcap901_done1782:
    repr_bind_attr_int rx899_cur, rx899_curclass, "$!pos", rx899_pos
    $P11 = rx899_cur."blorst"()
    repr_get_attr_int $I11, $P11, rx899_curclass, "$!pos"
    lt $I11, 0, rx899_fail1775
    nqp_rxmark rx899_bstack, rxsubrule902_pass1784, -1, 0
  rxsubrule902_pass1784:
    rx899_cstack = rx899_cur."!cursor_capture"($P11, "blorst")
    repr_get_attr_int rx899_pos, $P11, rx899_curclass, "$!pos"
    rx899_cur."!cursor_pass"(rx899_pos, "statement_prefix:sym<try>", 'backtrack'=>1)
    .return (rx899_cur)
  rx899_restart1774:
    repr_get_attr_obj rx899_cstack, rx899_cur, rx899_curclass, "$!cstack"
  rx899_fail1775:
    unless rx899_bstack, rx899_done1773
    pop $I19, rx899_bstack
    if_null rx899_cstack, rx899_cstack_done1778
    unless rx899_cstack, rx899_cstack_done1778
    dec $I19
    set $P11, rx899_cstack[$I19]
  rx899_cstack_done1778:
    pop rx899_rep, rx899_bstack
    pop rx899_pos, rx899_bstack
    pop $I19, rx899_bstack
    lt rx899_pos, -1, rx899_done1773
    lt rx899_pos, 0, rx899_fail1775
    eq $I19, 0, rx899_fail1775
    nqp_islist $I20, rx899_cstack
    unless $I20, rx899_jump1776
    elements $I18, rx899_bstack
    le $I18, 0, rx899_cut1777
    dec $I18
    set $I18, rx899_bstack[$I18]
  rx899_cut1777:
    assign rx899_cstack, $I18
  rx899_jump1776:
    jump $I19
  rx899_done1773:
    rx899_cur."!cursor_fail"()
    .return (rx899_cur) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_76_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 916
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx903_start
    .local string rx903_tgt
    .local int rx903_pos
    .local int rx903_off
    .local int rx903_eos
    .local int rx903_rep
    .local pmc rx903_cur
    .local pmc rx903_curclass
    .local pmc rx903_bstack
    .local pmc rx903_cstack
    rx903_start = self."!cursor_start_all"()
    set rx903_cur, rx903_start[0]
    set rx903_tgt, rx903_start[1]
    set rx903_pos, rx903_start[2]
    set rx903_curclass, rx903_start[3]
    set rx903_bstack, rx903_start[4]
    set $I19, rx903_start[5]
    store_lex unicode:"$\x{a2}", rx903_cur
    length rx903_eos, rx903_tgt
    eq $I19, 1, rx903_restart1787
    gt rx903_pos, rx903_eos, rx903_fail1788
    repr_get_attr_int $I11, self, rx903_curclass, "$!from"
    ne $I11, -1, rxscan904_done1794
    goto rxscan904_scan1793
  rxscan904_loop1792:
    inc rx903_pos
    gt rx903_pos, rx903_eos, rx903_fail1788
    repr_bind_attr_int rx903_cur, rx903_curclass, "$!from", rx903_pos
  rxscan904_scan1793:
    nqp_rxmark rx903_bstack, rxscan904_loop1792, rx903_pos, 0
  rxscan904_done1794:
    ge rx903_pos, rx903_eos, rx903_fail1788
    is_cclass $I11, .CCLASS_WHITESPACE, rx903_tgt, rx903_pos
    unless $I11, rx903_fail1788
    add rx903_pos, 1
    repr_bind_attr_int rx903_cur, rx903_curclass, "$!pos", rx903_pos
    $P11 = rx903_cur."ws"()
    repr_get_attr_int $I11, $P11, rx903_curclass, "$!pos"
    lt $I11, 0, rx903_fail1788
    repr_get_attr_int rx903_pos, $P11, rx903_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt906_01797
    nqp_push_label $P11, alt906_11799
    nqp_rxmark rx903_bstack, alt906_end1796, -1, 0
    rx903_cur."!alt"(rx903_pos, "alt_nfa__16_1361537954.89751", $P11)
    goto rx903_fail1788
  alt906_01797:
    ge rx903_pos, rx903_eos, rx903_fail1788
    substr $S11, rx903_tgt, rx903_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx903_fail1788
    repr_bind_attr_int rx903_cur, rx903_curclass, "$!pos", rx903_pos
    $P11 = rx903_cur."block"()
    repr_get_attr_int $I11, $P11, rx903_curclass, "$!pos"
    lt $I11, 0, rx903_fail1788
    nqp_rxmark rx903_bstack, rxsubrule907_pass1798, -1, 0
  rxsubrule907_pass1798:
    rx903_cstack = rx903_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx903_pos, $P11, rx903_curclass, "$!pos"
    goto alt906_end1796
  alt906_11799:
    repr_bind_attr_int rx903_cur, rx903_curclass, "$!pos", rx903_pos
    $P11 = rx903_cur."statement"()
    repr_get_attr_int $I11, $P11, rx903_curclass, "$!pos"
    lt $I11, 0, rx903_fail1788
    nqp_rxmark rx903_bstack, rxsubrule908_pass1800, -1, 0
  rxsubrule908_pass1800:
    rx903_cstack = rx903_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx903_pos, $P11, rx903_curclass, "$!pos"
    goto alt906_end1796
  alt906_end1796:
    nqp_rxcommit rx903_bstack, alt906_end1796
    rx903_cur."!cursor_pass"(rx903_pos, "blorst", 'backtrack'=>1)
    .return (rx903_cur)
  rx903_restart1787:
    repr_get_attr_obj rx903_cstack, rx903_cur, rx903_curclass, "$!cstack"
  rx903_fail1788:
    unless rx903_bstack, rx903_done1786
    pop $I19, rx903_bstack
    if_null rx903_cstack, rx903_cstack_done1791
    unless rx903_cstack, rx903_cstack_done1791
    dec $I19
    set $P11, rx903_cstack[$I19]
  rx903_cstack_done1791:
    pop rx903_rep, rx903_bstack
    pop rx903_pos, rx903_bstack
    pop $I19, rx903_bstack
    lt rx903_pos, -1, rx903_done1786
    lt rx903_pos, 0, rx903_fail1788
    eq $I19, 0, rx903_fail1788
    nqp_islist $I20, rx903_cstack
    unless $I20, rx903_jump1789
    elements $I18, rx903_bstack
    le $I18, 0, rx903_cut1790
    dec $I18
    set $I18, rx903_bstack[$I18]
  rx903_cut1790:
    assign rx903_cstack, $I18
  rx903_jump1789:
    jump $I19
  rx903_done1786:
    rx903_cur."!cursor_fail"()
    .return (rx903_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond" :subid("cuid_77_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 922
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_cond")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_78_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 924
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx909_start
    .local string rx909_tgt
    .local int rx909_pos
    .local int rx909_off
    .local int rx909_eos
    .local int rx909_rep
    .local pmc rx909_cur
    .local pmc rx909_curclass
    .local pmc rx909_bstack
    .local pmc rx909_cstack
    rx909_start = self."!cursor_start_all"()
    set rx909_cur, rx909_start[0]
    set rx909_tgt, rx909_start[1]
    set rx909_pos, rx909_start[2]
    set rx909_curclass, rx909_start[3]
    set rx909_bstack, rx909_start[4]
    set $I19, rx909_start[5]
    store_lex unicode:"$\x{a2}", rx909_cur
    length rx909_eos, rx909_tgt
    eq $I19, 1, rx909_restart1803
    gt rx909_pos, rx909_eos, rx909_fail1804
    repr_get_attr_int $I11, self, rx909_curclass, "$!from"
    ne $I11, -1, rxscan910_done1810
    goto rxscan910_scan1809
  rxscan910_loop1808:
    inc rx909_pos
    gt rx909_pos, rx909_eos, rx909_fail1804
    repr_bind_attr_int rx909_cur, rx909_curclass, "$!from", rx909_pos
  rxscan910_scan1809:
    nqp_rxmark rx909_bstack, rxscan910_loop1808, rx909_pos, 0
  rxscan910_done1810:
    nqp_rxmark rx909_bstack, rxcap911_fail1812, rx909_pos, 0
    add $I11, rx909_pos, 2
    gt $I11, rx909_eos, rx909_fail1804
    substr $S10, rx909_tgt, rx909_pos, 2
    ne $S10, ucs4:"if", rx909_fail1804
    add rx909_pos, 2
    nqp_rxpeek $I19, rx909_bstack, rxcap911_fail1812
    inc $I19
    set $I11, rx909_bstack[$I19]
    repr_bind_attr_int rx909_cur, rx909_curclass, "$!pos", rx909_pos
    $P11 = rx909_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx909_pos)
    rx909_cstack = rx909_cur."!cursor_capture"($P11, "sym")
    goto rxcap911_done1811
  rxcap911_fail1812:
    goto rx909_fail1804
  rxcap911_done1811:
    repr_bind_attr_int rx909_cur, rx909_curclass, "$!pos", rx909_pos
    $P11 = rx909_cur."ws"()
    repr_get_attr_int $I11, $P11, rx909_curclass, "$!pos"
    lt $I11, 0, rx909_fail1804
    repr_get_attr_int rx909_pos, $P11, rx909_curclass, "$!pos"
    repr_bind_attr_int rx909_cur, rx909_curclass, "$!pos", rx909_pos
    $P11 = rx909_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx909_curclass, "$!pos"
    lt $I11, 0, rx909_fail1804
    nqp_rxmark rx909_bstack, rxsubrule913_pass1814, -1, 0
  rxsubrule913_pass1814:
    rx909_cstack = rx909_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx909_pos, $P11, rx909_curclass, "$!pos"
    repr_bind_attr_int rx909_cur, rx909_curclass, "$!pos", rx909_pos
    $P11 = rx909_cur."ws"()
    repr_get_attr_int $I11, $P11, rx909_curclass, "$!pos"
    lt $I11, 0, rx909_fail1804
    repr_get_attr_int rx909_pos, $P11, rx909_curclass, "$!pos"
    rx909_cur."!cursor_pass"(rx909_pos, "statement_mod_cond:sym<if>", 'backtrack'=>1)
    .return (rx909_cur)
  rx909_restart1803:
    repr_get_attr_obj rx909_cstack, rx909_cur, rx909_curclass, "$!cstack"
  rx909_fail1804:
    unless rx909_bstack, rx909_done1802
    pop $I19, rx909_bstack
    if_null rx909_cstack, rx909_cstack_done1807
    unless rx909_cstack, rx909_cstack_done1807
    dec $I19
    set $P11, rx909_cstack[$I19]
  rx909_cstack_done1807:
    pop rx909_rep, rx909_bstack
    pop rx909_pos, rx909_bstack
    pop $I19, rx909_bstack
    lt rx909_pos, -1, rx909_done1802
    lt rx909_pos, 0, rx909_fail1804
    eq $I19, 0, rx909_fail1804
    nqp_islist $I20, rx909_cstack
    unless $I20, rx909_jump1805
    elements $I18, rx909_bstack
    le $I18, 0, rx909_cut1806
    dec $I18
    set $I18, rx909_bstack[$I18]
  rx909_cut1806:
    assign rx909_cstack, $I18
  rx909_jump1805:
    jump $I19
  rx909_done1802:
    rx909_cur."!cursor_fail"()
    .return (rx909_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_79_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 925
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx915_start
    .local string rx915_tgt
    .local int rx915_pos
    .local int rx915_off
    .local int rx915_eos
    .local int rx915_rep
    .local pmc rx915_cur
    .local pmc rx915_curclass
    .local pmc rx915_bstack
    .local pmc rx915_cstack
    rx915_start = self."!cursor_start_all"()
    set rx915_cur, rx915_start[0]
    set rx915_tgt, rx915_start[1]
    set rx915_pos, rx915_start[2]
    set rx915_curclass, rx915_start[3]
    set rx915_bstack, rx915_start[4]
    set $I19, rx915_start[5]
    store_lex unicode:"$\x{a2}", rx915_cur
    length rx915_eos, rx915_tgt
    eq $I19, 1, rx915_restart1818
    gt rx915_pos, rx915_eos, rx915_fail1819
    repr_get_attr_int $I11, self, rx915_curclass, "$!from"
    ne $I11, -1, rxscan916_done1825
    goto rxscan916_scan1824
  rxscan916_loop1823:
    inc rx915_pos
    gt rx915_pos, rx915_eos, rx915_fail1819
    repr_bind_attr_int rx915_cur, rx915_curclass, "$!from", rx915_pos
  rxscan916_scan1824:
    nqp_rxmark rx915_bstack, rxscan916_loop1823, rx915_pos, 0
  rxscan916_done1825:
    nqp_rxmark rx915_bstack, rxcap917_fail1827, rx915_pos, 0
    add $I11, rx915_pos, 6
    gt $I11, rx915_eos, rx915_fail1819
    substr $S10, rx915_tgt, rx915_pos, 6
    ne $S10, ucs4:"unless", rx915_fail1819
    add rx915_pos, 6
    nqp_rxpeek $I19, rx915_bstack, rxcap917_fail1827
    inc $I19
    set $I11, rx915_bstack[$I19]
    repr_bind_attr_int rx915_cur, rx915_curclass, "$!pos", rx915_pos
    $P11 = rx915_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx915_pos)
    rx915_cstack = rx915_cur."!cursor_capture"($P11, "sym")
    goto rxcap917_done1826
  rxcap917_fail1827:
    goto rx915_fail1819
  rxcap917_done1826:
    repr_bind_attr_int rx915_cur, rx915_curclass, "$!pos", rx915_pos
    $P11 = rx915_cur."ws"()
    repr_get_attr_int $I11, $P11, rx915_curclass, "$!pos"
    lt $I11, 0, rx915_fail1819
    repr_get_attr_int rx915_pos, $P11, rx915_curclass, "$!pos"
    repr_bind_attr_int rx915_cur, rx915_curclass, "$!pos", rx915_pos
    $P11 = rx915_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx915_curclass, "$!pos"
    lt $I11, 0, rx915_fail1819
    nqp_rxmark rx915_bstack, rxsubrule919_pass1829, -1, 0
  rxsubrule919_pass1829:
    rx915_cstack = rx915_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx915_pos, $P11, rx915_curclass, "$!pos"
    repr_bind_attr_int rx915_cur, rx915_curclass, "$!pos", rx915_pos
    $P11 = rx915_cur."ws"()
    repr_get_attr_int $I11, $P11, rx915_curclass, "$!pos"
    lt $I11, 0, rx915_fail1819
    repr_get_attr_int rx915_pos, $P11, rx915_curclass, "$!pos"
    rx915_cur."!cursor_pass"(rx915_pos, "statement_mod_cond:sym<unless>", 'backtrack'=>1)
    .return (rx915_cur)
  rx915_restart1818:
    repr_get_attr_obj rx915_cstack, rx915_cur, rx915_curclass, "$!cstack"
  rx915_fail1819:
    unless rx915_bstack, rx915_done1817
    pop $I19, rx915_bstack
    if_null rx915_cstack, rx915_cstack_done1822
    unless rx915_cstack, rx915_cstack_done1822
    dec $I19
    set $P11, rx915_cstack[$I19]
  rx915_cstack_done1822:
    pop rx915_rep, rx915_bstack
    pop rx915_pos, rx915_bstack
    pop $I19, rx915_bstack
    lt rx915_pos, -1, rx915_done1817
    lt rx915_pos, 0, rx915_fail1819
    eq $I19, 0, rx915_fail1819
    nqp_islist $I20, rx915_cstack
    unless $I20, rx915_jump1820
    elements $I18, rx915_bstack
    le $I18, 0, rx915_cut1821
    dec $I18
    set $I18, rx915_bstack[$I18]
  rx915_cut1821:
    assign rx915_cstack, $I18
  rx915_jump1820:
    jump $I19
  rx915_done1817:
    rx915_cur."!cursor_fail"()
    .return (rx915_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop" :subid("cuid_80_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 927
    .param pmc self 
    $P5001 = self."!protoregex"("statement_mod_loop")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_81_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 929
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx921_start
    .local string rx921_tgt
    .local int rx921_pos
    .local int rx921_off
    .local int rx921_eos
    .local int rx921_rep
    .local pmc rx921_cur
    .local pmc rx921_curclass
    .local pmc rx921_bstack
    .local pmc rx921_cstack
    rx921_start = self."!cursor_start_all"()
    set rx921_cur, rx921_start[0]
    set rx921_tgt, rx921_start[1]
    set rx921_pos, rx921_start[2]
    set rx921_curclass, rx921_start[3]
    set rx921_bstack, rx921_start[4]
    set $I19, rx921_start[5]
    store_lex unicode:"$\x{a2}", rx921_cur
    length rx921_eos, rx921_tgt
    eq $I19, 1, rx921_restart1833
    gt rx921_pos, rx921_eos, rx921_fail1834
    repr_get_attr_int $I11, self, rx921_curclass, "$!from"
    ne $I11, -1, rxscan922_done1840
    goto rxscan922_scan1839
  rxscan922_loop1838:
    inc rx921_pos
    gt rx921_pos, rx921_eos, rx921_fail1834
    repr_bind_attr_int rx921_cur, rx921_curclass, "$!from", rx921_pos
  rxscan922_scan1839:
    nqp_rxmark rx921_bstack, rxscan922_loop1838, rx921_pos, 0
  rxscan922_done1840:
    nqp_rxmark rx921_bstack, rxcap923_fail1842, rx921_pos, 0
    add $I11, rx921_pos, 5
    gt $I11, rx921_eos, rx921_fail1834
    substr $S10, rx921_tgt, rx921_pos, 5
    ne $S10, ucs4:"while", rx921_fail1834
    add rx921_pos, 5
    nqp_rxpeek $I19, rx921_bstack, rxcap923_fail1842
    inc $I19
    set $I11, rx921_bstack[$I19]
    repr_bind_attr_int rx921_cur, rx921_curclass, "$!pos", rx921_pos
    $P11 = rx921_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx921_pos)
    rx921_cstack = rx921_cur."!cursor_capture"($P11, "sym")
    goto rxcap923_done1841
  rxcap923_fail1842:
    goto rx921_fail1834
  rxcap923_done1841:
    repr_bind_attr_int rx921_cur, rx921_curclass, "$!pos", rx921_pos
    $P11 = rx921_cur."ws"()
    repr_get_attr_int $I11, $P11, rx921_curclass, "$!pos"
    lt $I11, 0, rx921_fail1834
    repr_get_attr_int rx921_pos, $P11, rx921_curclass, "$!pos"
    repr_bind_attr_int rx921_cur, rx921_curclass, "$!pos", rx921_pos
    $P11 = rx921_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx921_curclass, "$!pos"
    lt $I11, 0, rx921_fail1834
    nqp_rxmark rx921_bstack, rxsubrule925_pass1844, -1, 0
  rxsubrule925_pass1844:
    rx921_cstack = rx921_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx921_pos, $P11, rx921_curclass, "$!pos"
    repr_bind_attr_int rx921_cur, rx921_curclass, "$!pos", rx921_pos
    $P11 = rx921_cur."ws"()
    repr_get_attr_int $I11, $P11, rx921_curclass, "$!pos"
    lt $I11, 0, rx921_fail1834
    repr_get_attr_int rx921_pos, $P11, rx921_curclass, "$!pos"
    rx921_cur."!cursor_pass"(rx921_pos, "statement_mod_loop:sym<while>", 'backtrack'=>1)
    .return (rx921_cur)
  rx921_restart1833:
    repr_get_attr_obj rx921_cstack, rx921_cur, rx921_curclass, "$!cstack"
  rx921_fail1834:
    unless rx921_bstack, rx921_done1832
    pop $I19, rx921_bstack
    if_null rx921_cstack, rx921_cstack_done1837
    unless rx921_cstack, rx921_cstack_done1837
    dec $I19
    set $P11, rx921_cstack[$I19]
  rx921_cstack_done1837:
    pop rx921_rep, rx921_bstack
    pop rx921_pos, rx921_bstack
    pop $I19, rx921_bstack
    lt rx921_pos, -1, rx921_done1832
    lt rx921_pos, 0, rx921_fail1834
    eq $I19, 0, rx921_fail1834
    nqp_islist $I20, rx921_cstack
    unless $I20, rx921_jump1835
    elements $I18, rx921_bstack
    le $I18, 0, rx921_cut1836
    dec $I18
    set $I18, rx921_bstack[$I18]
  rx921_cut1836:
    assign rx921_cstack, $I18
  rx921_jump1835:
    jump $I19
  rx921_done1832:
    rx921_cur."!cursor_fail"()
    .return (rx921_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_82_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 930
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx927_start
    .local string rx927_tgt
    .local int rx927_pos
    .local int rx927_off
    .local int rx927_eos
    .local int rx927_rep
    .local pmc rx927_cur
    .local pmc rx927_curclass
    .local pmc rx927_bstack
    .local pmc rx927_cstack
    rx927_start = self."!cursor_start_all"()
    set rx927_cur, rx927_start[0]
    set rx927_tgt, rx927_start[1]
    set rx927_pos, rx927_start[2]
    set rx927_curclass, rx927_start[3]
    set rx927_bstack, rx927_start[4]
    set $I19, rx927_start[5]
    store_lex unicode:"$\x{a2}", rx927_cur
    length rx927_eos, rx927_tgt
    eq $I19, 1, rx927_restart1848
    gt rx927_pos, rx927_eos, rx927_fail1849
    repr_get_attr_int $I11, self, rx927_curclass, "$!from"
    ne $I11, -1, rxscan928_done1855
    goto rxscan928_scan1854
  rxscan928_loop1853:
    inc rx927_pos
    gt rx927_pos, rx927_eos, rx927_fail1849
    repr_bind_attr_int rx927_cur, rx927_curclass, "$!from", rx927_pos
  rxscan928_scan1854:
    nqp_rxmark rx927_bstack, rxscan928_loop1853, rx927_pos, 0
  rxscan928_done1855:
    nqp_rxmark rx927_bstack, rxcap929_fail1857, rx927_pos, 0
    add $I11, rx927_pos, 5
    gt $I11, rx927_eos, rx927_fail1849
    substr $S10, rx927_tgt, rx927_pos, 5
    ne $S10, ucs4:"until", rx927_fail1849
    add rx927_pos, 5
    nqp_rxpeek $I19, rx927_bstack, rxcap929_fail1857
    inc $I19
    set $I11, rx927_bstack[$I19]
    repr_bind_attr_int rx927_cur, rx927_curclass, "$!pos", rx927_pos
    $P11 = rx927_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx927_pos)
    rx927_cstack = rx927_cur."!cursor_capture"($P11, "sym")
    goto rxcap929_done1856
  rxcap929_fail1857:
    goto rx927_fail1849
  rxcap929_done1856:
    repr_bind_attr_int rx927_cur, rx927_curclass, "$!pos", rx927_pos
    $P11 = rx927_cur."ws"()
    repr_get_attr_int $I11, $P11, rx927_curclass, "$!pos"
    lt $I11, 0, rx927_fail1849
    repr_get_attr_int rx927_pos, $P11, rx927_curclass, "$!pos"
    repr_bind_attr_int rx927_cur, rx927_curclass, "$!pos", rx927_pos
    $P11 = rx927_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx927_curclass, "$!pos"
    lt $I11, 0, rx927_fail1849
    nqp_rxmark rx927_bstack, rxsubrule931_pass1859, -1, 0
  rxsubrule931_pass1859:
    rx927_cstack = rx927_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx927_pos, $P11, rx927_curclass, "$!pos"
    repr_bind_attr_int rx927_cur, rx927_curclass, "$!pos", rx927_pos
    $P11 = rx927_cur."ws"()
    repr_get_attr_int $I11, $P11, rx927_curclass, "$!pos"
    lt $I11, 0, rx927_fail1849
    repr_get_attr_int rx927_pos, $P11, rx927_curclass, "$!pos"
    rx927_cur."!cursor_pass"(rx927_pos, "statement_mod_loop:sym<until>", 'backtrack'=>1)
    .return (rx927_cur)
  rx927_restart1848:
    repr_get_attr_obj rx927_cstack, rx927_cur, rx927_curclass, "$!cstack"
  rx927_fail1849:
    unless rx927_bstack, rx927_done1847
    pop $I19, rx927_bstack
    if_null rx927_cstack, rx927_cstack_done1852
    unless rx927_cstack, rx927_cstack_done1852
    dec $I19
    set $P11, rx927_cstack[$I19]
  rx927_cstack_done1852:
    pop rx927_rep, rx927_bstack
    pop rx927_pos, rx927_bstack
    pop $I19, rx927_bstack
    lt rx927_pos, -1, rx927_done1847
    lt rx927_pos, 0, rx927_fail1849
    eq $I19, 0, rx927_fail1849
    nqp_islist $I20, rx927_cstack
    unless $I20, rx927_jump1850
    elements $I18, rx927_bstack
    le $I18, 0, rx927_cut1851
    dec $I18
    set $I18, rx927_bstack[$I18]
  rx927_cut1851:
    assign rx927_cstack, $I18
  rx927_jump1850:
    jump $I19
  rx927_done1847:
    rx927_cur."!cursor_fail"()
    .return (rx927_cur) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<for>" :subid("cuid_83_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 931
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx933_start
    .local string rx933_tgt
    .local int rx933_pos
    .local int rx933_off
    .local int rx933_eos
    .local int rx933_rep
    .local pmc rx933_cur
    .local pmc rx933_curclass
    .local pmc rx933_bstack
    .local pmc rx933_cstack
    rx933_start = self."!cursor_start_all"()
    set rx933_cur, rx933_start[0]
    set rx933_tgt, rx933_start[1]
    set rx933_pos, rx933_start[2]
    set rx933_curclass, rx933_start[3]
    set rx933_bstack, rx933_start[4]
    set $I19, rx933_start[5]
    store_lex unicode:"$\x{a2}", rx933_cur
    length rx933_eos, rx933_tgt
    eq $I19, 1, rx933_restart1863
    gt rx933_pos, rx933_eos, rx933_fail1864
    repr_get_attr_int $I11, self, rx933_curclass, "$!from"
    ne $I11, -1, rxscan934_done1870
    goto rxscan934_scan1869
  rxscan934_loop1868:
    inc rx933_pos
    gt rx933_pos, rx933_eos, rx933_fail1864
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!from", rx933_pos
  rxscan934_scan1869:
    nqp_rxmark rx933_bstack, rxscan934_loop1868, rx933_pos, 0
  rxscan934_done1870:
    nqp_rxmark rx933_bstack, rxcap935_fail1872, rx933_pos, 0
    add $I11, rx933_pos, 3
    gt $I11, rx933_eos, rx933_fail1864
    substr $S10, rx933_tgt, rx933_pos, 3
    ne $S10, ucs4:"for", rx933_fail1864
    add rx933_pos, 3
    nqp_rxpeek $I19, rx933_bstack, rxcap935_fail1872
    inc $I19
    set $I11, rx933_bstack[$I19]
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx933_pos)
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "sym")
    goto rxcap935_done1871
  rxcap935_fail1872:
    goto rx933_fail1864
  rxcap935_done1871:
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."ws"()
    repr_get_attr_int $I11, $P11, rx933_curclass, "$!pos"
    lt $I11, 0, rx933_fail1864
    repr_get_attr_int rx933_pos, $P11, rx933_curclass, "$!pos"
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx933_curclass, "$!pos"
    lt $I11, 0, rx933_fail1864
    nqp_rxmark rx933_bstack, rxsubrule937_pass1874, -1, 0
  rxsubrule937_pass1874:
    rx933_cstack = rx933_cur."!cursor_capture"($P11, "cond")
    repr_get_attr_int rx933_pos, $P11, rx933_curclass, "$!pos"
    repr_bind_attr_int rx933_cur, rx933_curclass, "$!pos", rx933_pos
    $P11 = rx933_cur."ws"()
    repr_get_attr_int $I11, $P11, rx933_curclass, "$!pos"
    lt $I11, 0, rx933_fail1864
    repr_get_attr_int rx933_pos, $P11, rx933_curclass, "$!pos"
    rx933_cur."!cursor_pass"(rx933_pos, "statement_mod_loop:sym<for>", 'backtrack'=>1)
    .return (rx933_cur)
  rx933_restart1863:
    repr_get_attr_obj rx933_cstack, rx933_cur, rx933_curclass, "$!cstack"
  rx933_fail1864:
    unless rx933_bstack, rx933_done1862
    pop $I19, rx933_bstack
    if_null rx933_cstack, rx933_cstack_done1867
    unless rx933_cstack, rx933_cstack_done1867
    dec $I19
    set $P11, rx933_cstack[$I19]
  rx933_cstack_done1867:
    pop rx933_rep, rx933_bstack
    pop rx933_pos, rx933_bstack
    pop $I19, rx933_bstack
    lt rx933_pos, -1, rx933_done1862
    lt rx933_pos, 0, rx933_fail1864
    eq $I19, 0, rx933_fail1864
    nqp_islist $I20, rx933_cstack
    unless $I20, rx933_jump1865
    elements $I18, rx933_bstack
    le $I18, 0, rx933_cut1866
    dec $I18
    set $I18, rx933_bstack[$I18]
  rx933_cut1866:
    assign rx933_cstack, $I18
  rx933_jump1865:
    jump $I19
  rx933_done1862:
    rx933_cur."!cursor_fail"()
    .return (rx933_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_84_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 935
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx939_start
    .local string rx939_tgt
    .local int rx939_pos
    .local int rx939_off
    .local int rx939_eos
    .local int rx939_rep
    .local pmc rx939_cur
    .local pmc rx939_curclass
    .local pmc rx939_bstack
    .local pmc rx939_cstack
    rx939_start = self."!cursor_start_all"()
    set rx939_cur, rx939_start[0]
    set rx939_tgt, rx939_start[1]
    set rx939_pos, rx939_start[2]
    set rx939_curclass, rx939_start[3]
    set rx939_bstack, rx939_start[4]
    set $I19, rx939_start[5]
    store_lex unicode:"$\x{a2}", rx939_cur
    length rx939_eos, rx939_tgt
    eq $I19, 1, rx939_restart1878
    gt rx939_pos, rx939_eos, rx939_fail1879
    repr_get_attr_int $I11, self, rx939_curclass, "$!from"
    ne $I11, -1, rxscan940_done1885
    goto rxscan940_scan1884
  rxscan940_loop1883:
    inc rx939_pos
    gt rx939_pos, rx939_eos, rx939_fail1879
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!from", rx939_pos
  rxscan940_scan1884:
    nqp_rxmark rx939_bstack, rxscan940_loop1883, rx939_pos, 0
  rxscan940_done1885:
    repr_bind_attr_int rx939_cur, rx939_curclass, "$!pos", rx939_pos
    $P11 = rx939_cur."fatarrow"()
    repr_get_attr_int $I11, $P11, rx939_curclass, "$!pos"
    lt $I11, 0, rx939_fail1879
    nqp_rxmark rx939_bstack, rxsubrule941_pass1886, -1, 0
  rxsubrule941_pass1886:
    rx939_cstack = rx939_cur."!cursor_capture"($P11, "fatarrow")
    repr_get_attr_int rx939_pos, $P11, rx939_curclass, "$!pos"
    rx939_cur."!cursor_pass"(rx939_pos, "term:sym<fatarrow>", 'backtrack'=>1)
    .return (rx939_cur)
  rx939_restart1878:
    repr_get_attr_obj rx939_cstack, rx939_cur, rx939_curclass, "$!cstack"
  rx939_fail1879:
    unless rx939_bstack, rx939_done1877
    pop $I19, rx939_bstack
    if_null rx939_cstack, rx939_cstack_done1882
    unless rx939_cstack, rx939_cstack_done1882
    dec $I19
    set $P11, rx939_cstack[$I19]
  rx939_cstack_done1882:
    pop rx939_rep, rx939_bstack
    pop rx939_pos, rx939_bstack
    pop $I19, rx939_bstack
    lt rx939_pos, -1, rx939_done1877
    lt rx939_pos, 0, rx939_fail1879
    eq $I19, 0, rx939_fail1879
    nqp_islist $I20, rx939_cstack
    unless $I20, rx939_jump1880
    elements $I18, rx939_bstack
    le $I18, 0, rx939_cut1881
    dec $I18
    set $I18, rx939_bstack[$I18]
  rx939_cut1881:
    assign rx939_cstack, $I18
  rx939_jump1880:
    jump $I19
  rx939_done1877:
    rx939_cur."!cursor_fail"()
    .return (rx939_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_85_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 936
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx942_start
    .local string rx942_tgt
    .local int rx942_pos
    .local int rx942_off
    .local int rx942_eos
    .local int rx942_rep
    .local pmc rx942_cur
    .local pmc rx942_curclass
    .local pmc rx942_bstack
    .local pmc rx942_cstack
    rx942_start = self."!cursor_start_all"()
    set rx942_cur, rx942_start[0]
    set rx942_tgt, rx942_start[1]
    set rx942_pos, rx942_start[2]
    set rx942_curclass, rx942_start[3]
    set rx942_bstack, rx942_start[4]
    set $I19, rx942_start[5]
    store_lex unicode:"$\x{a2}", rx942_cur
    length rx942_eos, rx942_tgt
    eq $I19, 1, rx942_restart1889
    gt rx942_pos, rx942_eos, rx942_fail1890
    repr_get_attr_int $I11, self, rx942_curclass, "$!from"
    ne $I11, -1, rxscan943_done1896
    goto rxscan943_scan1895
  rxscan943_loop1894:
    inc rx942_pos
    gt rx942_pos, rx942_eos, rx942_fail1890
    repr_bind_attr_int rx942_cur, rx942_curclass, "$!from", rx942_pos
  rxscan943_scan1895:
    nqp_rxmark rx942_bstack, rxscan943_loop1894, rx942_pos, 0
  rxscan943_done1896:
    repr_bind_attr_int rx942_cur, rx942_curclass, "$!pos", rx942_pos
    $P11 = rx942_cur."colonpair"()
    repr_get_attr_int $I11, $P11, rx942_curclass, "$!pos"
    lt $I11, 0, rx942_fail1890
    nqp_rxmark rx942_bstack, rxsubrule944_pass1897, -1, 0
  rxsubrule944_pass1897:
    rx942_cstack = rx942_cur."!cursor_capture"($P11, "colonpair")
    repr_get_attr_int rx942_pos, $P11, rx942_curclass, "$!pos"
    rx942_cur."!cursor_pass"(rx942_pos, "term:sym<colonpair>", 'backtrack'=>1)
    .return (rx942_cur)
  rx942_restart1889:
    repr_get_attr_obj rx942_cstack, rx942_cur, rx942_curclass, "$!cstack"
  rx942_fail1890:
    unless rx942_bstack, rx942_done1888
    pop $I19, rx942_bstack
    if_null rx942_cstack, rx942_cstack_done1893
    unless rx942_cstack, rx942_cstack_done1893
    dec $I19
    set $P11, rx942_cstack[$I19]
  rx942_cstack_done1893:
    pop rx942_rep, rx942_bstack
    pop rx942_pos, rx942_bstack
    pop $I19, rx942_bstack
    lt rx942_pos, -1, rx942_done1888
    lt rx942_pos, 0, rx942_fail1890
    eq $I19, 0, rx942_fail1890
    nqp_islist $I20, rx942_cstack
    unless $I20, rx942_jump1891
    elements $I18, rx942_bstack
    le $I18, 0, rx942_cut1892
    dec $I18
    set $I18, rx942_bstack[$I18]
  rx942_cut1892:
    assign rx942_cstack, $I18
  rx942_jump1891:
    jump $I19
  rx942_done1888:
    rx942_cur."!cursor_fail"()
    .return (rx942_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_86_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 937
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx945_start
    .local string rx945_tgt
    .local int rx945_pos
    .local int rx945_off
    .local int rx945_eos
    .local int rx945_rep
    .local pmc rx945_cur
    .local pmc rx945_curclass
    .local pmc rx945_bstack
    .local pmc rx945_cstack
    rx945_start = self."!cursor_start_all"()
    set rx945_cur, rx945_start[0]
    set rx945_tgt, rx945_start[1]
    set rx945_pos, rx945_start[2]
    set rx945_curclass, rx945_start[3]
    set rx945_bstack, rx945_start[4]
    set $I19, rx945_start[5]
    store_lex unicode:"$\x{a2}", rx945_cur
    length rx945_eos, rx945_tgt
    eq $I19, 1, rx945_restart1900
    gt rx945_pos, rx945_eos, rx945_fail1901
    repr_get_attr_int $I11, self, rx945_curclass, "$!from"
    ne $I11, -1, rxscan946_done1907
    goto rxscan946_scan1906
  rxscan946_loop1905:
    inc rx945_pos
    gt rx945_pos, rx945_eos, rx945_fail1901
    repr_bind_attr_int rx945_cur, rx945_curclass, "$!from", rx945_pos
  rxscan946_scan1906:
    nqp_rxmark rx945_bstack, rxscan946_loop1905, rx945_pos, 0
  rxscan946_done1907:
    repr_bind_attr_int rx945_cur, rx945_curclass, "$!pos", rx945_pos
    $P11 = rx945_cur."variable"()
    repr_get_attr_int $I11, $P11, rx945_curclass, "$!pos"
    lt $I11, 0, rx945_fail1901
    nqp_rxmark rx945_bstack, rxsubrule947_pass1908, -1, 0
  rxsubrule947_pass1908:
    rx945_cstack = rx945_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx945_pos, $P11, rx945_curclass, "$!pos"
    rx945_cur."!cursor_pass"(rx945_pos, "term:sym<variable>", 'backtrack'=>1)
    .return (rx945_cur)
  rx945_restart1900:
    repr_get_attr_obj rx945_cstack, rx945_cur, rx945_curclass, "$!cstack"
  rx945_fail1901:
    unless rx945_bstack, rx945_done1899
    pop $I19, rx945_bstack
    if_null rx945_cstack, rx945_cstack_done1904
    unless rx945_cstack, rx945_cstack_done1904
    dec $I19
    set $P11, rx945_cstack[$I19]
  rx945_cstack_done1904:
    pop rx945_rep, rx945_bstack
    pop rx945_pos, rx945_bstack
    pop $I19, rx945_bstack
    lt rx945_pos, -1, rx945_done1899
    lt rx945_pos, 0, rx945_fail1901
    eq $I19, 0, rx945_fail1901
    nqp_islist $I20, rx945_cstack
    unless $I20, rx945_jump1902
    elements $I18, rx945_bstack
    le $I18, 0, rx945_cut1903
    dec $I18
    set $I18, rx945_bstack[$I18]
  rx945_cut1903:
    assign rx945_cstack, $I18
  rx945_jump1902:
    jump $I19
  rx945_done1899:
    rx945_cur."!cursor_fail"()
    .return (rx945_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_87_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 938
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx948_start
    .local string rx948_tgt
    .local int rx948_pos
    .local int rx948_off
    .local int rx948_eos
    .local int rx948_rep
    .local pmc rx948_cur
    .local pmc rx948_curclass
    .local pmc rx948_bstack
    .local pmc rx948_cstack
    rx948_start = self."!cursor_start_all"()
    set rx948_cur, rx948_start[0]
    set rx948_tgt, rx948_start[1]
    set rx948_pos, rx948_start[2]
    set rx948_curclass, rx948_start[3]
    set rx948_bstack, rx948_start[4]
    set $I19, rx948_start[5]
    store_lex unicode:"$\x{a2}", rx948_cur
    length rx948_eos, rx948_tgt
    eq $I19, 1, rx948_restart1911
    gt rx948_pos, rx948_eos, rx948_fail1912
    repr_get_attr_int $I11, self, rx948_curclass, "$!from"
    ne $I11, -1, rxscan949_done1918
    goto rxscan949_scan1917
  rxscan949_loop1916:
    inc rx948_pos
    gt rx948_pos, rx948_eos, rx948_fail1912
    repr_bind_attr_int rx948_cur, rx948_curclass, "$!from", rx948_pos
  rxscan949_scan1917:
    nqp_rxmark rx948_bstack, rxscan949_loop1916, rx948_pos, 0
  rxscan949_done1918:
    repr_bind_attr_int rx948_cur, rx948_curclass, "$!pos", rx948_pos
    $P11 = rx948_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx948_curclass, "$!pos"
    lt $I11, 0, rx948_fail1912
    nqp_rxmark rx948_bstack, rxsubrule950_pass1919, -1, 0
  rxsubrule950_pass1919:
    rx948_cstack = rx948_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx948_pos, $P11, rx948_curclass, "$!pos"
    rx948_cur."!cursor_pass"(rx948_pos, "term:sym<package_declarator>", 'backtrack'=>1)
    .return (rx948_cur)
  rx948_restart1911:
    repr_get_attr_obj rx948_cstack, rx948_cur, rx948_curclass, "$!cstack"
  rx948_fail1912:
    unless rx948_bstack, rx948_done1910
    pop $I19, rx948_bstack
    if_null rx948_cstack, rx948_cstack_done1915
    unless rx948_cstack, rx948_cstack_done1915
    dec $I19
    set $P11, rx948_cstack[$I19]
  rx948_cstack_done1915:
    pop rx948_rep, rx948_bstack
    pop rx948_pos, rx948_bstack
    pop $I19, rx948_bstack
    lt rx948_pos, -1, rx948_done1910
    lt rx948_pos, 0, rx948_fail1912
    eq $I19, 0, rx948_fail1912
    nqp_islist $I20, rx948_cstack
    unless $I20, rx948_jump1913
    elements $I18, rx948_bstack
    le $I18, 0, rx948_cut1914
    dec $I18
    set $I18, rx948_bstack[$I18]
  rx948_cut1914:
    assign rx948_cstack, $I18
  rx948_jump1913:
    jump $I19
  rx948_done1910:
    rx948_cur."!cursor_fail"()
    .return (rx948_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_88_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 939
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx951_start
    .local string rx951_tgt
    .local int rx951_pos
    .local int rx951_off
    .local int rx951_eos
    .local int rx951_rep
    .local pmc rx951_cur
    .local pmc rx951_curclass
    .local pmc rx951_bstack
    .local pmc rx951_cstack
    rx951_start = self."!cursor_start_all"()
    set rx951_cur, rx951_start[0]
    set rx951_tgt, rx951_start[1]
    set rx951_pos, rx951_start[2]
    set rx951_curclass, rx951_start[3]
    set rx951_bstack, rx951_start[4]
    set $I19, rx951_start[5]
    store_lex unicode:"$\x{a2}", rx951_cur
    length rx951_eos, rx951_tgt
    eq $I19, 1, rx951_restart1922
    gt rx951_pos, rx951_eos, rx951_fail1923
    repr_get_attr_int $I11, self, rx951_curclass, "$!from"
    ne $I11, -1, rxscan952_done1929
    goto rxscan952_scan1928
  rxscan952_loop1927:
    inc rx951_pos
    gt rx951_pos, rx951_eos, rx951_fail1923
    repr_bind_attr_int rx951_cur, rx951_curclass, "$!from", rx951_pos
  rxscan952_scan1928:
    nqp_rxmark rx951_bstack, rxscan952_loop1927, rx951_pos, 0
  rxscan952_done1929:
    repr_bind_attr_int rx951_cur, rx951_curclass, "$!pos", rx951_pos
    $P11 = rx951_cur."scope_declarator"()
    repr_get_attr_int $I11, $P11, rx951_curclass, "$!pos"
    lt $I11, 0, rx951_fail1923
    nqp_rxmark rx951_bstack, rxsubrule953_pass1930, -1, 0
  rxsubrule953_pass1930:
    rx951_cstack = rx951_cur."!cursor_capture"($P11, "scope_declarator")
    repr_get_attr_int rx951_pos, $P11, rx951_curclass, "$!pos"
    rx951_cur."!cursor_pass"(rx951_pos, "term:sym<scope_declarator>", 'backtrack'=>1)
    .return (rx951_cur)
  rx951_restart1922:
    repr_get_attr_obj rx951_cstack, rx951_cur, rx951_curclass, "$!cstack"
  rx951_fail1923:
    unless rx951_bstack, rx951_done1921
    pop $I19, rx951_bstack
    if_null rx951_cstack, rx951_cstack_done1926
    unless rx951_cstack, rx951_cstack_done1926
    dec $I19
    set $P11, rx951_cstack[$I19]
  rx951_cstack_done1926:
    pop rx951_rep, rx951_bstack
    pop rx951_pos, rx951_bstack
    pop $I19, rx951_bstack
    lt rx951_pos, -1, rx951_done1921
    lt rx951_pos, 0, rx951_fail1923
    eq $I19, 0, rx951_fail1923
    nqp_islist $I20, rx951_cstack
    unless $I20, rx951_jump1924
    elements $I18, rx951_bstack
    le $I18, 0, rx951_cut1925
    dec $I18
    set $I18, rx951_bstack[$I18]
  rx951_cut1925:
    assign rx951_cstack, $I18
  rx951_jump1924:
    jump $I19
  rx951_done1921:
    rx951_cur."!cursor_fail"()
    .return (rx951_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_89_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 940
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx954_start
    .local string rx954_tgt
    .local int rx954_pos
    .local int rx954_off
    .local int rx954_eos
    .local int rx954_rep
    .local pmc rx954_cur
    .local pmc rx954_curclass
    .local pmc rx954_bstack
    .local pmc rx954_cstack
    rx954_start = self."!cursor_start_all"()
    set rx954_cur, rx954_start[0]
    set rx954_tgt, rx954_start[1]
    set rx954_pos, rx954_start[2]
    set rx954_curclass, rx954_start[3]
    set rx954_bstack, rx954_start[4]
    set $I19, rx954_start[5]
    store_lex unicode:"$\x{a2}", rx954_cur
    length rx954_eos, rx954_tgt
    eq $I19, 1, rx954_restart1933
    gt rx954_pos, rx954_eos, rx954_fail1934
    repr_get_attr_int $I11, self, rx954_curclass, "$!from"
    ne $I11, -1, rxscan955_done1940
    goto rxscan955_scan1939
  rxscan955_loop1938:
    inc rx954_pos
    gt rx954_pos, rx954_eos, rx954_fail1934
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!from", rx954_pos
  rxscan955_scan1939:
    nqp_rxmark rx954_bstack, rxscan955_loop1938, rx954_pos, 0
  rxscan955_done1940:
    repr_bind_attr_int rx954_cur, rx954_curclass, "$!pos", rx954_pos
    $P11 = rx954_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx954_curclass, "$!pos"
    lt $I11, 0, rx954_fail1934
    nqp_rxmark rx954_bstack, rxsubrule956_pass1941, -1, 0
  rxsubrule956_pass1941:
    rx954_cstack = rx954_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx954_pos, $P11, rx954_curclass, "$!pos"
    rx954_cur."!cursor_pass"(rx954_pos, "term:sym<routine_declarator>", 'backtrack'=>1)
    .return (rx954_cur)
  rx954_restart1933:
    repr_get_attr_obj rx954_cstack, rx954_cur, rx954_curclass, "$!cstack"
  rx954_fail1934:
    unless rx954_bstack, rx954_done1932
    pop $I19, rx954_bstack
    if_null rx954_cstack, rx954_cstack_done1937
    unless rx954_cstack, rx954_cstack_done1937
    dec $I19
    set $P11, rx954_cstack[$I19]
  rx954_cstack_done1937:
    pop rx954_rep, rx954_bstack
    pop rx954_pos, rx954_bstack
    pop $I19, rx954_bstack
    lt rx954_pos, -1, rx954_done1932
    lt rx954_pos, 0, rx954_fail1934
    eq $I19, 0, rx954_fail1934
    nqp_islist $I20, rx954_cstack
    unless $I20, rx954_jump1935
    elements $I18, rx954_bstack
    le $I18, 0, rx954_cut1936
    dec $I18
    set $I18, rx954_bstack[$I18]
  rx954_cut1936:
    assign rx954_cstack, $I18
  rx954_jump1935:
    jump $I19
  rx954_done1932:
    rx954_cur."!cursor_fail"()
    .return (rx954_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_90_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 941
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_91_1361537952.49511' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_92_1361537952.49511' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx957_start
    .local string rx957_tgt
    .local int rx957_pos
    .local int rx957_off
    .local int rx957_eos
    .local int rx957_rep
    .local pmc rx957_cur
    .local pmc rx957_curclass
    .local pmc rx957_bstack
    .local pmc rx957_cstack
    rx957_start = self."!cursor_start_all"()
    set rx957_cur, rx957_start[0]
    set rx957_tgt, rx957_start[1]
    set rx957_pos, rx957_start[2]
    set rx957_curclass, rx957_start[3]
    set rx957_bstack, rx957_start[4]
    set $I19, rx957_start[5]
    store_lex unicode:"$\x{a2}", rx957_cur
    length rx957_eos, rx957_tgt
    eq $I19, 1, rx957_restart1944
    gt rx957_pos, rx957_eos, rx957_fail1945
    repr_get_attr_int $I11, self, rx957_curclass, "$!from"
    ne $I11, -1, rxscan958_done1951
    goto rxscan958_scan1950
  rxscan958_loop1949:
    inc rx957_pos
    gt rx957_pos, rx957_eos, rx957_fail1945
    repr_bind_attr_int rx957_cur, rx957_curclass, "$!from", rx957_pos
  rxscan958_scan1950:
    nqp_rxmark rx957_bstack, rxscan958_loop1949, rx957_pos, 0
  rxscan958_done1951:
    .const 'Sub' $P5001 = 'cuid_91_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx957_cur, rx957_curclass, "$!pos", rx957_pos
    $P11 = rx957_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx957_curclass, "$!pos"
    lt $I11, 0, rx957_fail1945
    .const 'Sub' $P5002 = 'cuid_92_1361537952.49511' 
    capture_lex $P5002
    repr_bind_attr_int rx957_cur, rx957_curclass, "$!pos", rx957_pos
    $P11 = rx957_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx957_curclass, "$!pos"
    ge $I11, 0, rx957_fail1945
    repr_bind_attr_int rx957_cur, rx957_curclass, "$!pos", rx957_pos
    $P11 = rx957_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx957_curclass, "$!pos"
    lt $I11, 0, rx957_fail1945
    nqp_rxmark rx957_bstack, rxsubrule966_pass1981, -1, 0
  rxsubrule966_pass1981:
    rx957_cstack = rx957_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx957_pos, $P11, rx957_curclass, "$!pos"
    rx957_cur."!cursor_pass"(rx957_pos, "term:sym<multi_declarator>", 'backtrack'=>1)
    .return (rx957_cur)
  rx957_restart1944:
    repr_get_attr_obj rx957_cstack, rx957_cur, rx957_curclass, "$!cstack"
  rx957_fail1945:
    unless rx957_bstack, rx957_done1943
    pop $I19, rx957_bstack
    if_null rx957_cstack, rx957_cstack_done1948
    unless rx957_cstack, rx957_cstack_done1948
    dec $I19
    set $P11, rx957_cstack[$I19]
  rx957_cstack_done1948:
    pop rx957_rep, rx957_bstack
    pop rx957_pos, rx957_bstack
    pop $I19, rx957_bstack
    lt rx957_pos, -1, rx957_done1943
    lt rx957_pos, 0, rx957_fail1945
    eq $I19, 0, rx957_fail1945
    nqp_islist $I20, rx957_cstack
    unless $I20, rx957_jump1946
    elements $I18, rx957_bstack
    le $I18, 0, rx957_cut1947
    dec $I18
    set $I18, rx957_bstack[$I18]
  rx957_cut1947:
    assign rx957_cstack, $I18
  rx957_jump1946:
    jump $I19
  rx957_done1943:
    rx957_cur."!cursor_fail"()
    .return (rx957_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_91_1361537952.49511") :anon :lex :outer("cuid_90_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx959_start
    .local string rx959_tgt
    .local int rx959_pos
    .local int rx959_off
    .local int rx959_eos
    .local int rx959_rep
    .local pmc rx959_cur
    .local pmc rx959_curclass
    .local pmc rx959_bstack
    .local pmc rx959_cstack
    rx959_start = self."!cursor_start_all"()
    set rx959_cur, rx959_start[0]
    set rx959_tgt, rx959_start[1]
    set rx959_pos, rx959_start[2]
    set rx959_curclass, rx959_start[3]
    set rx959_bstack, rx959_start[4]
    set $I19, rx959_start[5]
    store_lex unicode:"$\x{a2}", rx959_cur
    length rx959_eos, rx959_tgt
    eq $I19, 1, rx959_restart1954
    gt rx959_pos, rx959_eos, rx959_fail1955
    repr_get_attr_int $I11, self, rx959_curclass, "$!from"
    ne $I11, -1, rxscan960_done1961
    goto rxscan960_scan1960
  rxscan960_loop1959:
    inc rx959_pos
    gt rx959_pos, rx959_eos, rx959_fail1955
    repr_bind_attr_int rx959_cur, rx959_curclass, "$!from", rx959_pos
  rxscan960_scan1960:
    nqp_rxmark rx959_bstack, rxscan960_loop1959, rx959_pos, 0
  rxscan960_done1961:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt961_01963
    nqp_push_label $P11, alt961_11964
    nqp_push_label $P11, alt961_21965
    nqp_rxmark rx959_bstack, alt961_end1962, -1, 0
    rx959_cur."!alt"(rx959_pos, "alt_nfa__17_1361537954.99111", $P11)
    goto rx959_fail1955
  alt961_01963:
    add $I11, rx959_pos, 5
    gt $I11, rx959_eos, rx959_fail1955
    substr $S10, rx959_tgt, rx959_pos, 5
    ne $S10, ucs4:"multi", rx959_fail1955
    add rx959_pos, 5
    goto alt961_end1962
  alt961_11964:
    add $I11, rx959_pos, 5
    gt $I11, rx959_eos, rx959_fail1955
    substr $S10, rx959_tgt, rx959_pos, 5
    ne $S10, ucs4:"proto", rx959_fail1955
    add rx959_pos, 5
    goto alt961_end1962
  alt961_21965:
    add $I11, rx959_pos, 4
    gt $I11, rx959_eos, rx959_fail1955
    substr $S10, rx959_tgt, rx959_pos, 4
    ne $S10, ucs4:"only", rx959_fail1955
    add rx959_pos, 4
    goto alt961_end1962
  alt961_end1962:
    rx959_cur."!cursor_pass"(rx959_pos, 'backtrack'=>1)
    .return (rx959_cur)
  rx959_restart1954:
    repr_get_attr_obj rx959_cstack, rx959_cur, rx959_curclass, "$!cstack"
  rx959_fail1955:
    unless rx959_bstack, rx959_done1953
    pop $I19, rx959_bstack
    if_null rx959_cstack, rx959_cstack_done1958
    unless rx959_cstack, rx959_cstack_done1958
    dec $I19
    set $P11, rx959_cstack[$I19]
  rx959_cstack_done1958:
    pop rx959_rep, rx959_bstack
    pop rx959_pos, rx959_bstack
    pop $I19, rx959_bstack
    lt rx959_pos, -1, rx959_done1953
    lt rx959_pos, 0, rx959_fail1955
    eq $I19, 0, rx959_fail1955
    nqp_islist $I20, rx959_cstack
    unless $I20, rx959_jump1956
    elements $I18, rx959_bstack
    le $I18, 0, rx959_cut1957
    dec $I18
    set $I18, rx959_bstack[$I18]
  rx959_cut1957:
    assign rx959_cstack, $I18
  rx959_jump1956:
    jump $I19
  rx959_done1953:
    rx959_cur."!cursor_fail"()
    .return (rx959_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_92_1361537952.49511") :anon :lex :outer("cuid_90_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx962_start
    .local string rx962_tgt
    .local int rx962_pos
    .local int rx962_off
    .local int rx962_eos
    .local int rx962_rep
    .local pmc rx962_cur
    .local pmc rx962_curclass
    .local pmc rx962_bstack
    .local pmc rx962_cstack
    rx962_start = self."!cursor_start_all"()
    set rx962_cur, rx962_start[0]
    set rx962_tgt, rx962_start[1]
    set rx962_pos, rx962_start[2]
    set rx962_curclass, rx962_start[3]
    set rx962_bstack, rx962_start[4]
    set $I19, rx962_start[5]
    store_lex unicode:"$\x{a2}", rx962_cur
    length rx962_eos, rx962_tgt
    eq $I19, 1, rx962_restart1968
    gt rx962_pos, rx962_eos, rx962_fail1969
    repr_get_attr_int $I11, self, rx962_curclass, "$!from"
    ne $I11, -1, rxscan963_done1975
    goto rxscan963_scan1974
  rxscan963_loop1973:
    inc rx962_pos
    gt rx962_pos, rx962_eos, rx962_fail1969
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!from", rx962_pos
  rxscan963_scan1974:
    nqp_rxmark rx962_bstack, rxscan963_loop1973, rx962_pos, 0
  rxscan963_done1975:
    add $I11, rx962_pos, 5
    gt $I11, rx962_eos, rx962_fail1969
    substr $S10, rx962_tgt, rx962_pos, 5
    ne $S10, ucs4:"proto", rx962_fail1969
    add rx962_pos, 5
    repr_bind_attr_int rx962_cur, rx962_curclass, "$!pos", rx962_pos
    $P11 = rx962_cur."ws"()
    repr_get_attr_int $I11, $P11, rx962_curclass, "$!pos"
    lt $I11, 0, rx962_fail1969
    repr_get_attr_int rx962_pos, $P11, rx962_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt965_01978
    nqp_push_label $P11, alt965_11979
    nqp_push_label $P11, alt965_21980
    nqp_rxmark rx962_bstack, alt965_end1977, -1, 0
    rx962_cur."!alt"(rx962_pos, "alt_nfa__18_1361537955.00671", $P11)
    goto rx962_fail1969
  alt965_01978:
    add $I11, rx962_pos, 5
    gt $I11, rx962_eos, rx962_fail1969
    substr $S10, rx962_tgt, rx962_pos, 5
    ne $S10, ucs4:"regex", rx962_fail1969
    add rx962_pos, 5
    goto alt965_end1977
  alt965_11979:
    add $I11, rx962_pos, 5
    gt $I11, rx962_eos, rx962_fail1969
    substr $S10, rx962_tgt, rx962_pos, 5
    ne $S10, ucs4:"token", rx962_fail1969
    add rx962_pos, 5
    goto alt965_end1977
  alt965_21980:
    add $I11, rx962_pos, 4
    gt $I11, rx962_eos, rx962_fail1969
    substr $S10, rx962_tgt, rx962_pos, 4
    ne $S10, ucs4:"rule", rx962_fail1969
    add rx962_pos, 4
    goto alt965_end1977
  alt965_end1977:
    nqp_rxcommit rx962_bstack, alt965_end1977
    rx962_cur."!cursor_pass"(rx962_pos, 'backtrack'=>1)
    .return (rx962_cur)
  rx962_restart1968:
    repr_get_attr_obj rx962_cstack, rx962_cur, rx962_curclass, "$!cstack"
  rx962_fail1969:
    unless rx962_bstack, rx962_done1967
    pop $I19, rx962_bstack
    if_null rx962_cstack, rx962_cstack_done1972
    unless rx962_cstack, rx962_cstack_done1972
    dec $I19
    set $P11, rx962_cstack[$I19]
  rx962_cstack_done1972:
    pop rx962_rep, rx962_bstack
    pop rx962_pos, rx962_bstack
    pop $I19, rx962_bstack
    lt rx962_pos, -1, rx962_done1967
    lt rx962_pos, 0, rx962_fail1969
    eq $I19, 0, rx962_fail1969
    nqp_islist $I20, rx962_cstack
    unless $I20, rx962_jump1970
    elements $I18, rx962_bstack
    le $I18, 0, rx962_cut1971
    dec $I18
    set $I18, rx962_bstack[$I18]
  rx962_cut1971:
    assign rx962_cstack, $I18
  rx962_jump1970:
    jump $I19
  rx962_done1967:
    rx962_cur."!cursor_fail"()
    .return (rx962_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_93_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 946
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx967_start
    .local string rx967_tgt
    .local int rx967_pos
    .local int rx967_off
    .local int rx967_eos
    .local int rx967_rep
    .local pmc rx967_cur
    .local pmc rx967_curclass
    .local pmc rx967_bstack
    .local pmc rx967_cstack
    rx967_start = self."!cursor_start_all"()
    set rx967_cur, rx967_start[0]
    set rx967_tgt, rx967_start[1]
    set rx967_pos, rx967_start[2]
    set rx967_curclass, rx967_start[3]
    set rx967_bstack, rx967_start[4]
    set $I19, rx967_start[5]
    store_lex unicode:"$\x{a2}", rx967_cur
    length rx967_eos, rx967_tgt
    eq $I19, 1, rx967_restart1984
    gt rx967_pos, rx967_eos, rx967_fail1985
    repr_get_attr_int $I11, self, rx967_curclass, "$!from"
    ne $I11, -1, rxscan968_done1991
    goto rxscan968_scan1990
  rxscan968_loop1989:
    inc rx967_pos
    gt rx967_pos, rx967_eos, rx967_fail1985
    repr_bind_attr_int rx967_cur, rx967_curclass, "$!from", rx967_pos
  rxscan968_scan1990:
    nqp_rxmark rx967_bstack, rxscan968_loop1989, rx967_pos, 0
  rxscan968_done1991:
    repr_bind_attr_int rx967_cur, rx967_curclass, "$!pos", rx967_pos
    $P11 = rx967_cur."regex_declarator"()
    repr_get_attr_int $I11, $P11, rx967_curclass, "$!pos"
    lt $I11, 0, rx967_fail1985
    nqp_rxmark rx967_bstack, rxsubrule969_pass1992, -1, 0
  rxsubrule969_pass1992:
    rx967_cstack = rx967_cur."!cursor_capture"($P11, "regex_declarator")
    repr_get_attr_int rx967_pos, $P11, rx967_curclass, "$!pos"
    rx967_cur."!cursor_pass"(rx967_pos, "term:sym<regex_declarator>", 'backtrack'=>1)
    .return (rx967_cur)
  rx967_restart1984:
    repr_get_attr_obj rx967_cstack, rx967_cur, rx967_curclass, "$!cstack"
  rx967_fail1985:
    unless rx967_bstack, rx967_done1983
    pop $I19, rx967_bstack
    if_null rx967_cstack, rx967_cstack_done1988
    unless rx967_cstack, rx967_cstack_done1988
    dec $I19
    set $P11, rx967_cstack[$I19]
  rx967_cstack_done1988:
    pop rx967_rep, rx967_bstack
    pop rx967_pos, rx967_bstack
    pop $I19, rx967_bstack
    lt rx967_pos, -1, rx967_done1983
    lt rx967_pos, 0, rx967_fail1985
    eq $I19, 0, rx967_fail1985
    nqp_islist $I20, rx967_cstack
    unless $I20, rx967_jump1986
    elements $I18, rx967_bstack
    le $I18, 0, rx967_cut1987
    dec $I18
    set $I18, rx967_bstack[$I18]
  rx967_cut1987:
    assign rx967_cstack, $I18
  rx967_jump1986:
    jump $I19
  rx967_done1983:
    rx967_cur."!cursor_fail"()
    .return (rx967_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_94_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 947
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx970_start
    .local string rx970_tgt
    .local int rx970_pos
    .local int rx970_off
    .local int rx970_eos
    .local int rx970_rep
    .local pmc rx970_cur
    .local pmc rx970_curclass
    .local pmc rx970_bstack
    .local pmc rx970_cstack
    rx970_start = self."!cursor_start_all"()
    set rx970_cur, rx970_start[0]
    set rx970_tgt, rx970_start[1]
    set rx970_pos, rx970_start[2]
    set rx970_curclass, rx970_start[3]
    set rx970_bstack, rx970_start[4]
    set $I19, rx970_start[5]
    store_lex unicode:"$\x{a2}", rx970_cur
    length rx970_eos, rx970_tgt
    eq $I19, 1, rx970_restart1995
    gt rx970_pos, rx970_eos, rx970_fail1996
    repr_get_attr_int $I11, self, rx970_curclass, "$!from"
    ne $I11, -1, rxscan971_done2002
    goto rxscan971_scan2001
  rxscan971_loop2000:
    inc rx970_pos
    gt rx970_pos, rx970_eos, rx970_fail1996
    repr_bind_attr_int rx970_cur, rx970_curclass, "$!from", rx970_pos
  rxscan971_scan2001:
    nqp_rxmark rx970_bstack, rxscan971_loop2000, rx970_pos, 0
  rxscan971_done2002:
    repr_bind_attr_int rx970_cur, rx970_curclass, "$!pos", rx970_pos
    $P11 = rx970_cur."statement_prefix"()
    repr_get_attr_int $I11, $P11, rx970_curclass, "$!pos"
    lt $I11, 0, rx970_fail1996
    nqp_rxmark rx970_bstack, rxsubrule972_pass2003, -1, 0
  rxsubrule972_pass2003:
    rx970_cstack = rx970_cur."!cursor_capture"($P11, "statement_prefix")
    repr_get_attr_int rx970_pos, $P11, rx970_curclass, "$!pos"
    rx970_cur."!cursor_pass"(rx970_pos, "term:sym<statement_prefix>", 'backtrack'=>1)
    .return (rx970_cur)
  rx970_restart1995:
    repr_get_attr_obj rx970_cstack, rx970_cur, rx970_curclass, "$!cstack"
  rx970_fail1996:
    unless rx970_bstack, rx970_done1994
    pop $I19, rx970_bstack
    if_null rx970_cstack, rx970_cstack_done1999
    unless rx970_cstack, rx970_cstack_done1999
    dec $I19
    set $P11, rx970_cstack[$I19]
  rx970_cstack_done1999:
    pop rx970_rep, rx970_bstack
    pop rx970_pos, rx970_bstack
    pop $I19, rx970_bstack
    lt rx970_pos, -1, rx970_done1994
    lt rx970_pos, 0, rx970_fail1996
    eq $I19, 0, rx970_fail1996
    nqp_islist $I20, rx970_cstack
    unless $I20, rx970_jump1997
    elements $I18, rx970_bstack
    le $I18, 0, rx970_cut1998
    dec $I18
    set $I18, rx970_bstack[$I18]
  rx970_cut1998:
    assign rx970_cstack, $I18
  rx970_jump1997:
    jump $I19
  rx970_done1994:
    rx970_cur."!cursor_fail"()
    .return (rx970_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_95_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 948
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx973_start
    .local string rx973_tgt
    .local int rx973_pos
    .local int rx973_off
    .local int rx973_eos
    .local int rx973_rep
    .local pmc rx973_cur
    .local pmc rx973_curclass
    .local pmc rx973_bstack
    .local pmc rx973_cstack
    rx973_start = self."!cursor_start_all"()
    set rx973_cur, rx973_start[0]
    set rx973_tgt, rx973_start[1]
    set rx973_pos, rx973_start[2]
    set rx973_curclass, rx973_start[3]
    set rx973_bstack, rx973_start[4]
    set $I19, rx973_start[5]
    store_lex unicode:"$\x{a2}", rx973_cur
    length rx973_eos, rx973_tgt
    eq $I19, 1, rx973_restart2006
    gt rx973_pos, rx973_eos, rx973_fail2007
    repr_get_attr_int $I11, self, rx973_curclass, "$!from"
    ne $I11, -1, rxscan974_done2013
    goto rxscan974_scan2012
  rxscan974_loop2011:
    inc rx973_pos
    gt rx973_pos, rx973_eos, rx973_fail2007
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!from", rx973_pos
  rxscan974_scan2012:
    nqp_rxmark rx973_bstack, rxscan974_loop2011, rx973_pos, 0
  rxscan974_done2013:
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2007
    repr_bind_attr_int rx973_cur, rx973_curclass, "$!pos", rx973_pos
    $P11 = rx973_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx973_curclass, "$!pos"
    lt $I11, 0, rx973_fail2007
    nqp_rxmark rx973_bstack, rxsubrule975_pass2014, -1, 0
  rxsubrule975_pass2014:
    rx973_cstack = rx973_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx973_pos, $P11, rx973_curclass, "$!pos"
    rx973_cur."!cursor_pass"(rx973_pos, "term:sym<lambda>", 'backtrack'=>1)
    .return (rx973_cur)
  rx973_restart2006:
    repr_get_attr_obj rx973_cstack, rx973_cur, rx973_curclass, "$!cstack"
  rx973_fail2007:
    unless rx973_bstack, rx973_done2005
    pop $I19, rx973_bstack
    if_null rx973_cstack, rx973_cstack_done2010
    unless rx973_cstack, rx973_cstack_done2010
    dec $I19
    set $P11, rx973_cstack[$I19]
  rx973_cstack_done2010:
    pop rx973_rep, rx973_bstack
    pop rx973_pos, rx973_bstack
    pop $I19, rx973_bstack
    lt rx973_pos, -1, rx973_done2005
    lt rx973_pos, 0, rx973_fail2007
    eq $I19, 0, rx973_fail2007
    nqp_islist $I20, rx973_cstack
    unless $I20, rx973_jump2008
    elements $I18, rx973_bstack
    le $I18, 0, rx973_cut2009
    dec $I18
    set $I18, rx973_bstack[$I18]
  rx973_cut2009:
    assign rx973_cstack, $I18
  rx973_jump2008:
    jump $I19
  rx973_done2005:
    rx973_cur."!cursor_fail"()
    .return (rx973_cur) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_96_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 950
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx976_start
    .local string rx976_tgt
    .local int rx976_pos
    .local int rx976_off
    .local int rx976_eos
    .local int rx976_rep
    .local pmc rx976_cur
    .local pmc rx976_curclass
    .local pmc rx976_bstack
    .local pmc rx976_cstack
    rx976_start = self."!cursor_start_all"()
    set rx976_cur, rx976_start[0]
    set rx976_tgt, rx976_start[1]
    set rx976_pos, rx976_start[2]
    set rx976_curclass, rx976_start[3]
    set rx976_bstack, rx976_start[4]
    set $I19, rx976_start[5]
    store_lex unicode:"$\x{a2}", rx976_cur
    length rx976_eos, rx976_tgt
    eq $I19, 1, rx976_restart2017
    gt rx976_pos, rx976_eos, rx976_fail2018
    repr_get_attr_int $I11, self, rx976_curclass, "$!from"
    ne $I11, -1, rxscan977_done2024
    goto rxscan977_scan2023
  rxscan977_loop2022:
    inc rx976_pos
    gt rx976_pos, rx976_eos, rx976_fail2018
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!from", rx976_pos
  rxscan977_scan2023:
    nqp_rxmark rx976_bstack, rxscan977_loop2022, rx976_pos, 0
  rxscan977_done2024:
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!pos", rx976_pos
    $P11 = rx976_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx976_curclass, "$!pos"
    lt $I11, 0, rx976_fail2018
    nqp_rxmark rx976_bstack, rxsubrule978_pass2025, -1, 0
  rxsubrule978_pass2025:
    rx976_cstack = rx976_cur."!cursor_capture"($P11, "key")
    repr_get_attr_int rx976_pos, $P11, rx976_curclass, "$!pos"
    nqp_rxmark rx976_bstack, rxquantr979_done2027, rx976_pos, 0
  rxquantr979_loop2026:
    ge rx976_pos, rx976_eos, rx976_fail2018
    substr $S11, rx976_tgt, rx976_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx976_fail2018
    inc rx976_pos
    nqp_rxpeek $I19, rx976_bstack, rxquantr979_done2027
    inc $I19
    inc $I19
    set rx976_rep, rx976_bstack[$I19]
    nqp_rxcommit rx976_bstack, rxquantr979_done2027
    inc rx976_rep
    nqp_rxmark rx976_bstack, rxquantr979_done2027, rx976_pos, rx976_rep
    goto rxquantr979_loop2026
  rxquantr979_done2027:
    add $I11, rx976_pos, 2
    gt $I11, rx976_eos, rx976_fail2018
    substr $S10, rx976_tgt, rx976_pos, 2
    ne $S10, ucs4:"=>", rx976_fail2018
    add rx976_pos, 2
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!pos", rx976_pos
    $P11 = rx976_cur."ws"()
    repr_get_attr_int $I11, $P11, rx976_curclass, "$!pos"
    lt $I11, 0, rx976_fail2018
    repr_get_attr_int rx976_pos, $P11, rx976_curclass, "$!pos"
    repr_bind_attr_int rx976_cur, rx976_curclass, "$!pos", rx976_pos
    $P11 = rx976_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx976_curclass, "$!pos"
    lt $I11, 0, rx976_fail2018
    nqp_rxmark rx976_bstack, rxsubrule981_pass2029, -1, 0
  rxsubrule981_pass2029:
    rx976_cstack = rx976_cur."!cursor_capture"($P11, "val")
    repr_get_attr_int rx976_pos, $P11, rx976_curclass, "$!pos"
    rx976_cur."!cursor_pass"(rx976_pos, "fatarrow", 'backtrack'=>1)
    .return (rx976_cur)
  rx976_restart2017:
    repr_get_attr_obj rx976_cstack, rx976_cur, rx976_curclass, "$!cstack"
  rx976_fail2018:
    unless rx976_bstack, rx976_done2016
    pop $I19, rx976_bstack
    if_null rx976_cstack, rx976_cstack_done2021
    unless rx976_cstack, rx976_cstack_done2021
    dec $I19
    set $P11, rx976_cstack[$I19]
  rx976_cstack_done2021:
    pop rx976_rep, rx976_bstack
    pop rx976_pos, rx976_bstack
    pop $I19, rx976_bstack
    lt rx976_pos, -1, rx976_done2016
    lt rx976_pos, 0, rx976_fail2018
    eq $I19, 0, rx976_fail2018
    nqp_islist $I20, rx976_cstack
    unless $I20, rx976_jump2019
    elements $I18, rx976_bstack
    le $I18, 0, rx976_cut2020
    dec $I18
    set $I18, rx976_bstack[$I18]
  rx976_cut2020:
    assign rx976_cstack, $I18
  rx976_jump2019:
    jump $I19
  rx976_done2016:
    rx976_cur."!cursor_fail"()
    .return (rx976_cur) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_97_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 954
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx982_start
    .local string rx982_tgt
    .local int rx982_pos
    .local int rx982_off
    .local int rx982_eos
    .local int rx982_rep
    .local pmc rx982_cur
    .local pmc rx982_curclass
    .local pmc rx982_bstack
    .local pmc rx982_cstack
    rx982_start = self."!cursor_start_all"()
    set rx982_cur, rx982_start[0]
    set rx982_tgt, rx982_start[1]
    set rx982_pos, rx982_start[2]
    set rx982_curclass, rx982_start[3]
    set rx982_bstack, rx982_start[4]
    set $I19, rx982_start[5]
    store_lex unicode:"$\x{a2}", rx982_cur
    length rx982_eos, rx982_tgt
    eq $I19, 1, rx982_restart2032
    gt rx982_pos, rx982_eos, rx982_fail2033
    repr_get_attr_int $I11, self, rx982_curclass, "$!from"
    ne $I11, -1, rxscan983_done2039
    goto rxscan983_scan2038
  rxscan983_loop2037:
    inc rx982_pos
    gt rx982_pos, rx982_eos, rx982_fail2033
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!from", rx982_pos
  rxscan983_scan2038:
    nqp_rxmark rx982_bstack, rxscan983_loop2037, rx982_pos, 0
  rxscan983_done2039:
    add $I11, rx982_pos, 1
    gt $I11, rx982_eos, rx982_fail2033
    substr $S10, rx982_tgt, rx982_pos, 1
    ne $S10, ucs4:":", rx982_fail2033
    add rx982_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt984_02041
    nqp_push_label $P11, alt984_12045
    nqp_push_label $P11, alt984_22051
    nqp_push_label $P11, alt984_32053
    nqp_rxmark rx982_bstack, alt984_end2040, -1, 0
    rx982_cur."!alt"(rx982_pos, "alt_nfa__19_1361537955.05351", $P11)
    goto rx982_fail2033
  alt984_02041:
    nqp_rxmark rx982_bstack, rxcap985_fail2043, rx982_pos, 0
    add $I11, rx982_pos, 1
    gt $I11, rx982_eos, rx982_fail2033
    substr $S10, rx982_tgt, rx982_pos, 1
    ne $S10, ucs4:"!", rx982_fail2033
    add rx982_pos, 1
    nqp_rxpeek $I19, rx982_bstack, rxcap985_fail2043
    inc $I19
    set $I11, rx982_bstack[$I19]
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx982_pos)
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "not")
    goto rxcap985_done2042
  rxcap985_fail2043:
    goto rx982_fail2033
  rxcap985_done2042:
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
    nqp_rxmark rx982_bstack, rxsubrule986_pass2044, -1, 0
  rxsubrule986_pass2044:
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx982_pos, $P11, rx982_curclass, "$!pos"
    goto alt984_end2040
  alt984_12045:
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
    nqp_rxmark rx982_bstack, rxsubrule987_pass2046, -1, 0
  rxsubrule987_pass2046:
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx982_pos, $P11, rx982_curclass, "$!pos"
    nqp_rxmark rx982_bstack, rxquantr988_done2048, rx982_pos, 0
  rxquantr988_loop2047:
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
    goto rxsubrule989_pass2049
  rxsubrule989_back2050:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
  rxsubrule989_pass2049:
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule989_back2050
    push rx982_bstack, $I11
    push rx982_bstack, 0
    push rx982_bstack, rx982_pos
    elements $I11, rx982_cstack
    push rx982_bstack, $I11
    repr_get_attr_int rx982_pos, $P11, rx982_curclass, "$!pos"
    nqp_rxpeek $I19, rx982_bstack, rxquantr988_done2048
    inc $I19
    inc $I19
    set rx982_rep, rx982_bstack[$I19]
    nqp_rxcommit rx982_bstack, rxquantr988_done2048
    inc rx982_rep
  rxquantr988_done2048:
    goto alt984_end2040
  alt984_22051:
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
    nqp_rxmark rx982_bstack, rxsubrule990_pass2052, -1, 0
  rxsubrule990_pass2052:
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "circumfix")
    repr_get_attr_int rx982_pos, $P11, rx982_curclass, "$!pos"
    goto alt984_end2040
  alt984_32053:
    repr_bind_attr_int rx982_cur, rx982_curclass, "$!pos", rx982_pos
    $P11 = rx982_cur."variable"()
    repr_get_attr_int $I11, $P11, rx982_curclass, "$!pos"
    lt $I11, 0, rx982_fail2033
    nqp_rxmark rx982_bstack, rxsubrule991_pass2054, -1, 0
  rxsubrule991_pass2054:
    rx982_cstack = rx982_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx982_pos, $P11, rx982_curclass, "$!pos"
    goto alt984_end2040
  alt984_end2040:
    nqp_rxcommit rx982_bstack, alt984_end2040
    rx982_cur."!cursor_pass"(rx982_pos, "colonpair", 'backtrack'=>1)
    .return (rx982_cur)
  rx982_restart2032:
    repr_get_attr_obj rx982_cstack, rx982_cur, rx982_curclass, "$!cstack"
  rx982_fail2033:
    unless rx982_bstack, rx982_done2031
    pop $I19, rx982_bstack
    if_null rx982_cstack, rx982_cstack_done2036
    unless rx982_cstack, rx982_cstack_done2036
    dec $I19
    set $P11, rx982_cstack[$I19]
  rx982_cstack_done2036:
    pop rx982_rep, rx982_bstack
    pop rx982_pos, rx982_bstack
    pop $I19, rx982_bstack
    lt rx982_pos, -1, rx982_done2031
    lt rx982_pos, 0, rx982_fail2033
    eq $I19, 0, rx982_fail2033
    nqp_islist $I20, rx982_cstack
    unless $I20, rx982_jump2034
    elements $I18, rx982_bstack
    le $I18, 0, rx982_cut2035
    dec $I18
    set $I18, rx982_bstack[$I18]
  rx982_cut2035:
    assign rx982_cstack, $I18
  rx982_jump2034:
    jump $I19
  rx982_done2031:
    rx982_cur."!cursor_fail"()
    .return (rx982_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_98_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 964
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx992_start
    .local string rx992_tgt
    .local int rx992_pos
    .local int rx992_off
    .local int rx992_eos
    .local int rx992_rep
    .local pmc rx992_cur
    .local pmc rx992_curclass
    .local pmc rx992_bstack
    .local pmc rx992_cstack
    rx992_start = self."!cursor_start_all"()
    set rx992_cur, rx992_start[0]
    set rx992_tgt, rx992_start[1]
    set rx992_pos, rx992_start[2]
    set rx992_curclass, rx992_start[3]
    set rx992_bstack, rx992_start[4]
    set $I19, rx992_start[5]
    store_lex unicode:"$\x{a2}", rx992_cur
    length rx992_eos, rx992_tgt
    eq $I19, 1, rx992_restart2057
    gt rx992_pos, rx992_eos, rx992_fail2058
    repr_get_attr_int $I11, self, rx992_curclass, "$!from"
    ne $I11, -1, rxscan993_done2064
    goto rxscan993_scan2063
  rxscan993_loop2062:
    inc rx992_pos
    gt rx992_pos, rx992_eos, rx992_fail2058
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!from", rx992_pos
  rxscan993_scan2063:
    nqp_rxmark rx992_bstack, rxscan993_loop2062, rx992_pos, 0
  rxscan993_done2064:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt994_02066
    nqp_push_label $P11, alt994_12073
    nqp_push_label $P11, alt994_22076
    nqp_push_label $P11, alt994_32084
    nqp_rxmark rx992_bstack, alt994_end2065, -1, 0
    rx992_cur."!alt"(rx992_pos, "alt_nfa__20_1361537955.08471", $P11)
    goto rx992_fail2058
  alt994_02066:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule995_pass2067, -1, 0
  rxsubrule995_pass2067:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    nqp_rxmark rx992_bstack, rxquantr996_done2069, rx992_pos, 0
  rxquantr996_loop2068:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    goto rxsubrule997_pass2070
  rxsubrule997_back2071:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
  rxsubrule997_pass2070:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule997_back2071
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    nqp_rxpeek $I19, rx992_bstack, rxquantr996_done2069
    inc $I19
    inc $I19
    set rx992_rep, rx992_bstack[$I19]
    nqp_rxcommit rx992_bstack, rxquantr996_done2069
    inc rx992_rep
  rxquantr996_done2069:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."name"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule998_pass2072, -1, 0
  rxsubrule998_pass2072:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "desigilname")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    goto alt994_end2065
  alt994_12073:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule999_pass2074, -1, 0
  rxsubrule999_pass2074:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    ge rx992_pos, rx992_eos, rx992_fail2058
    substr $S11, rx992_tgt, rx992_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx992_fail2058
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."postcircumfix"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule1000_pass2075, -1, 0
  rxsubrule1000_pass2075:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "postcircumfix")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    goto alt994_end2065
  alt994_22076:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule1001_pass2077, -1, 0
  rxsubrule1001_pass2077:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
    add $I11, rx992_pos, 1
    gt $I11, rx992_eos, rx992_fail2058
    substr $S10, rx992_tgt, rx992_pos, 1
    ne $S10, ucs4:"(", rx992_fail2058
    add rx992_pos, 1
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."semilist"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    nqp_rxmark rx992_bstack, rxsubrule1002_pass2078, -1, 0
  rxsubrule1002_pass2078:
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "semilist")
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
  alt1003_02080:
    nqp_rxmark rx992_bstack, alt1003_12081, rx992_pos, 0
    add $I11, rx992_pos, 1
    gt $I11, rx992_eos, rx992_fail2058
    substr $S10, rx992_tgt, rx992_pos, 1
    ne $S10, ucs4:")", rx992_fail2058
    add rx992_pos, 1
    goto alt1003_end2079
  alt1003_12081:
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."FAILGOAL"("')'")
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
    goto rxsubrule1004_pass2082
  rxsubrule1004_back2083:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx992_curclass, "$!pos"
    lt $I11, 0, rx992_fail2058
  rxsubrule1004_pass2082:
    rx992_cstack = rx992_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1004_back2083
    push rx992_bstack, $I11
    push rx992_bstack, 0
    push rx992_bstack, rx992_pos
    elements $I11, rx992_cstack
    push rx992_bstack, $I11
    repr_get_attr_int rx992_pos, $P11, rx992_curclass, "$!pos"
  alt1003_end2079:
    goto alt994_end2065
  alt994_32084:
    nqp_rxmark rx992_bstack, rxcap1005_fail2086, rx992_pos, 0
    add $I11, rx992_pos, 1
    gt $I11, rx992_eos, rx992_fail2058
    substr $S10, rx992_tgt, rx992_pos, 1
    ne $S10, ucs4:"$", rx992_fail2058
    add rx992_pos, 1
    nqp_rxpeek $I19, rx992_bstack, rxcap1005_fail2086
    inc $I19
    set $I11, rx992_bstack[$I19]
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx992_pos)
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1005_done2085
  rxcap1005_fail2086:
    goto rx992_fail2058
  rxcap1005_done2085:
    nqp_rxmark rx992_bstack, rxcap1006_fail2088, rx992_pos, 0
    ge rx992_pos, rx992_eos, rx992_fail2058
    substr $S11, rx992_tgt, rx992_pos, 1
    index $I11, ucs4:"/_!", $S11
    lt $I11, 0, rx992_fail2058
    inc rx992_pos
    nqp_rxpeek $I19, rx992_bstack, rxcap1006_fail2088
    inc $I19
    set $I11, rx992_bstack[$I19]
    repr_bind_attr_int rx992_cur, rx992_curclass, "$!pos", rx992_pos
    $P11 = rx992_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx992_pos)
    rx992_cstack = rx992_cur."!cursor_capture"($P11, "desigilname")
    goto rxcap1006_done2087
  rxcap1006_fail2088:
    goto rx992_fail2058
  rxcap1006_done2087:
    goto alt994_end2065
  alt994_end2065:
    rx992_cur."!cursor_pass"(rx992_pos, "variable", 'backtrack'=>1)
    .return (rx992_cur)
  rx992_restart2057:
    repr_get_attr_obj rx992_cstack, rx992_cur, rx992_curclass, "$!cstack"
  rx992_fail2058:
    unless rx992_bstack, rx992_done2056
    pop $I19, rx992_bstack
    if_null rx992_cstack, rx992_cstack_done2061
    unless rx992_cstack, rx992_cstack_done2061
    dec $I19
    set $P11, rx992_cstack[$I19]
  rx992_cstack_done2061:
    pop rx992_rep, rx992_bstack
    pop rx992_pos, rx992_bstack
    pop $I19, rx992_bstack
    lt rx992_pos, -1, rx992_done2056
    lt rx992_pos, 0, rx992_fail2058
    eq $I19, 0, rx992_fail2058
    nqp_islist $I20, rx992_cstack
    unless $I20, rx992_jump2059
    elements $I18, rx992_bstack
    le $I18, 0, rx992_cut2060
    dec $I18
    set $I18, rx992_bstack[$I18]
  rx992_cut2060:
    assign rx992_cstack, $I18
  rx992_jump2059:
    jump $I19
  rx992_done2056:
    rx992_cur."!cursor_fail"()
    .return (rx992_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_99_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 971
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1007_start
    .local string rx1007_tgt
    .local int rx1007_pos
    .local int rx1007_off
    .local int rx1007_eos
    .local int rx1007_rep
    .local pmc rx1007_cur
    .local pmc rx1007_curclass
    .local pmc rx1007_bstack
    .local pmc rx1007_cstack
    rx1007_start = self."!cursor_start_all"()
    set rx1007_cur, rx1007_start[0]
    set rx1007_tgt, rx1007_start[1]
    set rx1007_pos, rx1007_start[2]
    set rx1007_curclass, rx1007_start[3]
    set rx1007_bstack, rx1007_start[4]
    set $I19, rx1007_start[5]
    store_lex unicode:"$\x{a2}", rx1007_cur
    length rx1007_eos, rx1007_tgt
    eq $I19, 1, rx1007_restart2091
    gt rx1007_pos, rx1007_eos, rx1007_fail2092
    repr_get_attr_int $I11, self, rx1007_curclass, "$!from"
    ne $I11, -1, rxscan1008_done2098
    goto rxscan1008_scan2097
  rxscan1008_loop2096:
    inc rx1007_pos
    gt rx1007_pos, rx1007_eos, rx1007_fail2092
    repr_bind_attr_int rx1007_cur, rx1007_curclass, "$!from", rx1007_pos
  rxscan1008_scan2097:
    nqp_rxmark rx1007_bstack, rxscan1008_loop2096, rx1007_pos, 0
  rxscan1008_done2098:
    ge rx1007_pos, rx1007_eos, rx1007_fail2092
    substr $S11, rx1007_tgt, rx1007_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx1007_fail2092
    inc rx1007_pos
    rx1007_cur."!cursor_pass"(rx1007_pos, "sigil", 'backtrack'=>1)
    .return (rx1007_cur)
  rx1007_restart2091:
    repr_get_attr_obj rx1007_cstack, rx1007_cur, rx1007_curclass, "$!cstack"
  rx1007_fail2092:
    unless rx1007_bstack, rx1007_done2090
    pop $I19, rx1007_bstack
    if_null rx1007_cstack, rx1007_cstack_done2095
    unless rx1007_cstack, rx1007_cstack_done2095
    dec $I19
    set $P11, rx1007_cstack[$I19]
  rx1007_cstack_done2095:
    pop rx1007_rep, rx1007_bstack
    pop rx1007_pos, rx1007_bstack
    pop $I19, rx1007_bstack
    lt rx1007_pos, -1, rx1007_done2090
    lt rx1007_pos, 0, rx1007_fail2092
    eq $I19, 0, rx1007_fail2092
    nqp_islist $I20, rx1007_cstack
    unless $I20, rx1007_jump2093
    elements $I18, rx1007_bstack
    le $I18, 0, rx1007_cut2094
    dec $I18
    set $I18, rx1007_bstack[$I18]
  rx1007_cut2094:
    assign rx1007_cstack, $I18
  rx1007_jump2093:
    jump $I19
  rx1007_done2090:
    rx1007_cur."!cursor_fail"()
    .return (rx1007_cur) 
.end
.HLL "nqp"
.namespace []
.sub "twigil" :subid("cuid_100_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 973
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1009_start
    .local string rx1009_tgt
    .local int rx1009_pos
    .local int rx1009_off
    .local int rx1009_eos
    .local int rx1009_rep
    .local pmc rx1009_cur
    .local pmc rx1009_curclass
    .local pmc rx1009_bstack
    .local pmc rx1009_cstack
    rx1009_start = self."!cursor_start_all"()
    set rx1009_cur, rx1009_start[0]
    set rx1009_tgt, rx1009_start[1]
    set rx1009_pos, rx1009_start[2]
    set rx1009_curclass, rx1009_start[3]
    set rx1009_bstack, rx1009_start[4]
    set $I19, rx1009_start[5]
    store_lex unicode:"$\x{a2}", rx1009_cur
    length rx1009_eos, rx1009_tgt
    eq $I19, 1, rx1009_restart2101
    gt rx1009_pos, rx1009_eos, rx1009_fail2102
    repr_get_attr_int $I11, self, rx1009_curclass, "$!from"
    ne $I11, -1, rxscan1010_done2108
    goto rxscan1010_scan2107
  rxscan1010_loop2106:
    inc rx1009_pos
    gt rx1009_pos, rx1009_eos, rx1009_fail2102
    repr_bind_attr_int rx1009_cur, rx1009_curclass, "$!from", rx1009_pos
  rxscan1010_scan2107:
    nqp_rxmark rx1009_bstack, rxscan1010_loop2106, rx1009_pos, 0
  rxscan1010_done2108:
    ge rx1009_pos, rx1009_eos, rx1009_fail2102
    substr $S11, rx1009_tgt, rx1009_pos, 1
    index $I11, ucs4:"*!?", $S11
    lt $I11, 0, rx1009_fail2102
    inc rx1009_pos
    rx1009_cur."!cursor_pass"(rx1009_pos, "twigil", 'backtrack'=>1)
    .return (rx1009_cur)
  rx1009_restart2101:
    repr_get_attr_obj rx1009_cstack, rx1009_cur, rx1009_curclass, "$!cstack"
  rx1009_fail2102:
    unless rx1009_bstack, rx1009_done2100
    pop $I19, rx1009_bstack
    if_null rx1009_cstack, rx1009_cstack_done2105
    unless rx1009_cstack, rx1009_cstack_done2105
    dec $I19
    set $P11, rx1009_cstack[$I19]
  rx1009_cstack_done2105:
    pop rx1009_rep, rx1009_bstack
    pop rx1009_pos, rx1009_bstack
    pop $I19, rx1009_bstack
    lt rx1009_pos, -1, rx1009_done2100
    lt rx1009_pos, 0, rx1009_fail2102
    eq $I19, 0, rx1009_fail2102
    nqp_islist $I20, rx1009_cstack
    unless $I20, rx1009_jump2103
    elements $I18, rx1009_bstack
    le $I18, 0, rx1009_cut2104
    dec $I18
    set $I18, rx1009_bstack[$I18]
  rx1009_cut2104:
    assign rx1009_cstack, $I18
  rx1009_jump2103:
    jump $I19
  rx1009_done2100:
    rx1009_cur."!cursor_fail"()
    .return (rx1009_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator" :subid("cuid_101_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 975
    .param pmc self 
    $P5001 = self."!protoregex"("package_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_102_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 976
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_207 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1011_start
    .local string rx1011_tgt
    .local int rx1011_pos
    .local int rx1011_off
    .local int rx1011_eos
    .local int rx1011_rep
    .local pmc rx1011_cur
    .local pmc rx1011_curclass
    .local pmc rx1011_bstack
    .local pmc rx1011_cstack
    rx1011_start = self."!cursor_start_all"()
    set rx1011_cur, rx1011_start[0]
    set rx1011_tgt, rx1011_start[1]
    set rx1011_pos, rx1011_start[2]
    set rx1011_curclass, rx1011_start[3]
    set rx1011_bstack, rx1011_start[4]
    set $I19, rx1011_start[5]
    store_lex unicode:"$\x{a2}", rx1011_cur
    length rx1011_eos, rx1011_tgt
    eq $I19, 1, rx1011_restart2111
    gt rx1011_pos, rx1011_eos, rx1011_fail2112
    repr_get_attr_int $I11, self, rx1011_curclass, "$!from"
    ne $I11, -1, rxscan1012_done2118
    goto rxscan1012_scan2117
  rxscan1012_loop2116:
    inc rx1011_pos
    gt rx1011_pos, rx1011_eos, rx1011_fail2112
    repr_bind_attr_int rx1011_cur, rx1011_curclass, "$!from", rx1011_pos
  rxscan1012_scan2117:
    nqp_rxmark rx1011_bstack, rxscan1012_loop2116, rx1011_pos, 0
  rxscan1012_done2118:
    repr_bind_attr_int rx1011_cur, rx1011_curclass, "$!pos", rx1011_pos
    store_lex unicode:"$\x{a2}", rx1011_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2119
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_207, $P5004
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if1013_else2120 
    set $P5006, fb_tmp_207["$PACKAGE"]
    set $P5008, $P5006
    goto if1013_end2121
  if1013_else2120:
    null $P5007
    set $P5008, $P5007
  if1013_end2121:
    unless_null $P5008, vivi_10142122
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10142122:
    unless_null $P5008, vivi_10152123
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10152123:
    set $P5003, $P5008
  fallback2119:
    set $P101, $P5003
    repr_bind_attr_int rx1011_cur, rx1011_curclass, "$!pos", rx1011_pos
    store_lex unicode:"$\x{a2}", rx1011_cur
    box $P5011, "module"
    set $P102, $P5011
    nqp_rxmark rx1011_bstack, rxcap1016_fail2125, rx1011_pos, 0
    add $I11, rx1011_pos, 6
    gt $I11, rx1011_eos, rx1011_fail2112
    substr $S10, rx1011_tgt, rx1011_pos, 6
    ne $S10, ucs4:"module", rx1011_fail2112
    add rx1011_pos, 6
    nqp_rxpeek $I19, rx1011_bstack, rxcap1016_fail2125
    inc $I19
    set $I11, rx1011_bstack[$I19]
    repr_bind_attr_int rx1011_cur, rx1011_curclass, "$!pos", rx1011_pos
    $P11 = rx1011_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1011_pos)
    rx1011_cstack = rx1011_cur."!cursor_capture"($P11, "sym")
    goto rxcap1016_done2124
  rxcap1016_fail2125:
    goto rx1011_fail2112
  rxcap1016_done2124:
    repr_bind_attr_int rx1011_cur, rx1011_curclass, "$!pos", rx1011_pos
    $P11 = rx1011_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1011_curclass, "$!pos"
    lt $I11, 0, rx1011_fail2112
    nqp_rxmark rx1011_bstack, rxsubrule1017_pass2126, -1, 0
  rxsubrule1017_pass2126:
    rx1011_cstack = rx1011_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1011_pos, $P11, rx1011_curclass, "$!pos"
    rx1011_cur."!cursor_pass"(rx1011_pos, "package_declarator:sym<module>", 'backtrack'=>1)
    .return (rx1011_cur)
  rx1011_restart2111:
    repr_get_attr_obj rx1011_cstack, rx1011_cur, rx1011_curclass, "$!cstack"
  rx1011_fail2112:
    unless rx1011_bstack, rx1011_done2110
    pop $I19, rx1011_bstack
    if_null rx1011_cstack, rx1011_cstack_done2115
    unless rx1011_cstack, rx1011_cstack_done2115
    dec $I19
    set $P11, rx1011_cstack[$I19]
  rx1011_cstack_done2115:
    pop rx1011_rep, rx1011_bstack
    pop rx1011_pos, rx1011_bstack
    pop $I19, rx1011_bstack
    lt rx1011_pos, -1, rx1011_done2110
    lt rx1011_pos, 0, rx1011_fail2112
    eq $I19, 0, rx1011_fail2112
    nqp_islist $I20, rx1011_cstack
    unless $I20, rx1011_jump2113
    elements $I18, rx1011_bstack
    le $I18, 0, rx1011_cut2114
    dec $I18
    set $I18, rx1011_bstack[$I18]
  rx1011_cut2114:
    assign rx1011_cstack, $I18
  rx1011_jump2113:
    jump $I19
  rx1011_done2110:
    rx1011_cur."!cursor_fail"()
    .return (rx1011_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_103_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 981
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_208 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1018_start
    .local string rx1018_tgt
    .local int rx1018_pos
    .local int rx1018_off
    .local int rx1018_eos
    .local int rx1018_rep
    .local pmc rx1018_cur
    .local pmc rx1018_curclass
    .local pmc rx1018_bstack
    .local pmc rx1018_cstack
    rx1018_start = self."!cursor_start_all"()
    set rx1018_cur, rx1018_start[0]
    set rx1018_tgt, rx1018_start[1]
    set rx1018_pos, rx1018_start[2]
    set rx1018_curclass, rx1018_start[3]
    set rx1018_bstack, rx1018_start[4]
    set $I19, rx1018_start[5]
    store_lex unicode:"$\x{a2}", rx1018_cur
    length rx1018_eos, rx1018_tgt
    eq $I19, 1, rx1018_restart2129
    gt rx1018_pos, rx1018_eos, rx1018_fail2130
    repr_get_attr_int $I11, self, rx1018_curclass, "$!from"
    ne $I11, -1, rxscan1019_done2136
    goto rxscan1019_scan2135
  rxscan1019_loop2134:
    inc rx1018_pos
    gt rx1018_pos, rx1018_eos, rx1018_fail2130
    repr_bind_attr_int rx1018_cur, rx1018_curclass, "$!from", rx1018_pos
  rxscan1019_scan2135:
    nqp_rxmark rx1018_bstack, rxscan1019_loop2134, rx1018_pos, 0
  rxscan1019_done2136:
    repr_bind_attr_int rx1018_cur, rx1018_curclass, "$!pos", rx1018_pos
    store_lex unicode:"$\x{a2}", rx1018_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2137
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_208, $P5004
    repr_defined $I5001, fb_tmp_208
    unless $I5001 goto if1020_else2138 
    set $P5006, fb_tmp_208["$PACKAGE"]
    set $P5008, $P5006
    goto if1020_end2139
  if1020_else2138:
    null $P5007
    set $P5008, $P5007
  if1020_end2139:
    unless_null $P5008, vivi_10212140
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10212140:
    unless_null $P5008, vivi_10222141
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10222141:
    set $P5003, $P5008
  fallback2137:
    set $P101, $P5003
    repr_bind_attr_int rx1018_cur, rx1018_curclass, "$!pos", rx1018_pos
    store_lex unicode:"$\x{a2}", rx1018_cur
    box $P5011, "knowhow"
    set $P102, $P5011
    nqp_rxmark rx1018_bstack, rxcap1023_fail2143, rx1018_pos, 0
    add $I11, rx1018_pos, 7
    gt $I11, rx1018_eos, rx1018_fail2130
    substr $S10, rx1018_tgt, rx1018_pos, 7
    ne $S10, ucs4:"knowhow", rx1018_fail2130
    add rx1018_pos, 7
    nqp_rxpeek $I19, rx1018_bstack, rxcap1023_fail2143
    inc $I19
    set $I11, rx1018_bstack[$I19]
    repr_bind_attr_int rx1018_cur, rx1018_curclass, "$!pos", rx1018_pos
    $P11 = rx1018_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1018_pos)
    rx1018_cstack = rx1018_cur."!cursor_capture"($P11, "sym")
    goto rxcap1023_done2142
  rxcap1023_fail2143:
    goto rx1018_fail2130
  rxcap1023_done2142:
    repr_bind_attr_int rx1018_cur, rx1018_curclass, "$!pos", rx1018_pos
    $P11 = rx1018_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1018_curclass, "$!pos"
    lt $I11, 0, rx1018_fail2130
    nqp_rxmark rx1018_bstack, rxsubrule1024_pass2144, -1, 0
  rxsubrule1024_pass2144:
    rx1018_cstack = rx1018_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1018_pos, $P11, rx1018_curclass, "$!pos"
    rx1018_cur."!cursor_pass"(rx1018_pos, "package_declarator:sym<knowhow>", 'backtrack'=>1)
    .return (rx1018_cur)
  rx1018_restart2129:
    repr_get_attr_obj rx1018_cstack, rx1018_cur, rx1018_curclass, "$!cstack"
  rx1018_fail2130:
    unless rx1018_bstack, rx1018_done2128
    pop $I19, rx1018_bstack
    if_null rx1018_cstack, rx1018_cstack_done2133
    unless rx1018_cstack, rx1018_cstack_done2133
    dec $I19
    set $P11, rx1018_cstack[$I19]
  rx1018_cstack_done2133:
    pop rx1018_rep, rx1018_bstack
    pop rx1018_pos, rx1018_bstack
    pop $I19, rx1018_bstack
    lt rx1018_pos, -1, rx1018_done2128
    lt rx1018_pos, 0, rx1018_fail2130
    eq $I19, 0, rx1018_fail2130
    nqp_islist $I20, rx1018_cstack
    unless $I20, rx1018_jump2131
    elements $I18, rx1018_bstack
    le $I18, 0, rx1018_cut2132
    dec $I18
    set $I18, rx1018_bstack[$I18]
  rx1018_cut2132:
    assign rx1018_cstack, $I18
  rx1018_jump2131:
    jump $I19
  rx1018_done2128:
    rx1018_cur."!cursor_fail"()
    .return (rx1018_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_104_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 986
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_209 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1025_start
    .local string rx1025_tgt
    .local int rx1025_pos
    .local int rx1025_off
    .local int rx1025_eos
    .local int rx1025_rep
    .local pmc rx1025_cur
    .local pmc rx1025_curclass
    .local pmc rx1025_bstack
    .local pmc rx1025_cstack
    rx1025_start = self."!cursor_start_all"()
    set rx1025_cur, rx1025_start[0]
    set rx1025_tgt, rx1025_start[1]
    set rx1025_pos, rx1025_start[2]
    set rx1025_curclass, rx1025_start[3]
    set rx1025_bstack, rx1025_start[4]
    set $I19, rx1025_start[5]
    store_lex unicode:"$\x{a2}", rx1025_cur
    length rx1025_eos, rx1025_tgt
    eq $I19, 1, rx1025_restart2147
    gt rx1025_pos, rx1025_eos, rx1025_fail2148
    repr_get_attr_int $I11, self, rx1025_curclass, "$!from"
    ne $I11, -1, rxscan1026_done2154
    goto rxscan1026_scan2153
  rxscan1026_loop2152:
    inc rx1025_pos
    gt rx1025_pos, rx1025_eos, rx1025_fail2148
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!from", rx1025_pos
  rxscan1026_scan2153:
    nqp_rxmark rx1025_bstack, rxscan1026_loop2152, rx1025_pos, 0
  rxscan1026_done2154:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2155
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_209, $P5004
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if1027_else2156 
    set $P5006, fb_tmp_209["$PACKAGE"]
    set $P5008, $P5006
    goto if1027_end2157
  if1027_else2156:
    null $P5007
    set $P5008, $P5007
  if1027_end2157:
    unless_null $P5008, vivi_10282158
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10282158:
    unless_null $P5008, vivi_10292159
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10292159:
    set $P5003, $P5008
  fallback2155:
    set $P101, $P5003
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    store_lex unicode:"$\x{a2}", rx1025_cur
    box $P5011, "class"
    set $P102, $P5011
    nqp_rxmark rx1025_bstack, rxcap1030_fail2161, rx1025_pos, 0
    add $I11, rx1025_pos, 5
    gt $I11, rx1025_eos, rx1025_fail2148
    substr $S10, rx1025_tgt, rx1025_pos, 5
    ne $S10, ucs4:"class", rx1025_fail2148
    add rx1025_pos, 5
    nqp_rxpeek $I19, rx1025_bstack, rxcap1030_fail2161
    inc $I19
    set $I11, rx1025_bstack[$I19]
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1025_pos)
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "sym")
    goto rxcap1030_done2160
  rxcap1030_fail2161:
    goto rx1025_fail2148
  rxcap1030_done2160:
    repr_bind_attr_int rx1025_cur, rx1025_curclass, "$!pos", rx1025_pos
    $P11 = rx1025_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1025_curclass, "$!pos"
    lt $I11, 0, rx1025_fail2148
    nqp_rxmark rx1025_bstack, rxsubrule1031_pass2162, -1, 0
  rxsubrule1031_pass2162:
    rx1025_cstack = rx1025_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1025_pos, $P11, rx1025_curclass, "$!pos"
    rx1025_cur."!cursor_pass"(rx1025_pos, "package_declarator:sym<class>", 'backtrack'=>1)
    .return (rx1025_cur)
  rx1025_restart2147:
    repr_get_attr_obj rx1025_cstack, rx1025_cur, rx1025_curclass, "$!cstack"
  rx1025_fail2148:
    unless rx1025_bstack, rx1025_done2146
    pop $I19, rx1025_bstack
    if_null rx1025_cstack, rx1025_cstack_done2151
    unless rx1025_cstack, rx1025_cstack_done2151
    dec $I19
    set $P11, rx1025_cstack[$I19]
  rx1025_cstack_done2151:
    pop rx1025_rep, rx1025_bstack
    pop rx1025_pos, rx1025_bstack
    pop $I19, rx1025_bstack
    lt rx1025_pos, -1, rx1025_done2146
    lt rx1025_pos, 0, rx1025_fail2148
    eq $I19, 0, rx1025_fail2148
    nqp_islist $I20, rx1025_cstack
    unless $I20, rx1025_jump2149
    elements $I18, rx1025_bstack
    le $I18, 0, rx1025_cut2150
    dec $I18
    set $I18, rx1025_bstack[$I18]
  rx1025_cut2150:
    assign rx1025_cstack, $I18
  rx1025_jump2149:
    jump $I19
  rx1025_done2146:
    rx1025_cur."!cursor_fail"()
    .return (rx1025_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_105_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 991
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_210 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1032_start
    .local string rx1032_tgt
    .local int rx1032_pos
    .local int rx1032_off
    .local int rx1032_eos
    .local int rx1032_rep
    .local pmc rx1032_cur
    .local pmc rx1032_curclass
    .local pmc rx1032_bstack
    .local pmc rx1032_cstack
    rx1032_start = self."!cursor_start_all"()
    set rx1032_cur, rx1032_start[0]
    set rx1032_tgt, rx1032_start[1]
    set rx1032_pos, rx1032_start[2]
    set rx1032_curclass, rx1032_start[3]
    set rx1032_bstack, rx1032_start[4]
    set $I19, rx1032_start[5]
    store_lex unicode:"$\x{a2}", rx1032_cur
    length rx1032_eos, rx1032_tgt
    eq $I19, 1, rx1032_restart2165
    gt rx1032_pos, rx1032_eos, rx1032_fail2166
    repr_get_attr_int $I11, self, rx1032_curclass, "$!from"
    ne $I11, -1, rxscan1033_done2172
    goto rxscan1033_scan2171
  rxscan1033_loop2170:
    inc rx1032_pos
    gt rx1032_pos, rx1032_eos, rx1032_fail2166
    repr_bind_attr_int rx1032_cur, rx1032_curclass, "$!from", rx1032_pos
  rxscan1033_scan2171:
    nqp_rxmark rx1032_bstack, rxscan1033_loop2170, rx1032_pos, 0
  rxscan1033_done2172:
    repr_bind_attr_int rx1032_cur, rx1032_curclass, "$!pos", rx1032_pos
    store_lex unicode:"$\x{a2}", rx1032_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2173
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_210, $P5004
    repr_defined $I5001, fb_tmp_210
    unless $I5001 goto if1034_else2174 
    set $P5006, fb_tmp_210["$PACKAGE"]
    set $P5008, $P5006
    goto if1034_end2175
  if1034_else2174:
    null $P5007
    set $P5008, $P5007
  if1034_end2175:
    unless_null $P5008, vivi_10352176
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10352176:
    unless_null $P5008, vivi_10362177
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10362177:
    set $P5003, $P5008
  fallback2173:
    set $P101, $P5003
    repr_bind_attr_int rx1032_cur, rx1032_curclass, "$!pos", rx1032_pos
    store_lex unicode:"$\x{a2}", rx1032_cur
    box $P5011, "grammar"
    set $P102, $P5011
    nqp_rxmark rx1032_bstack, rxcap1037_fail2179, rx1032_pos, 0
    add $I11, rx1032_pos, 7
    gt $I11, rx1032_eos, rx1032_fail2166
    substr $S10, rx1032_tgt, rx1032_pos, 7
    ne $S10, ucs4:"grammar", rx1032_fail2166
    add rx1032_pos, 7
    nqp_rxpeek $I19, rx1032_bstack, rxcap1037_fail2179
    inc $I19
    set $I11, rx1032_bstack[$I19]
    repr_bind_attr_int rx1032_cur, rx1032_curclass, "$!pos", rx1032_pos
    $P11 = rx1032_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1032_pos)
    rx1032_cstack = rx1032_cur."!cursor_capture"($P11, "sym")
    goto rxcap1037_done2178
  rxcap1037_fail2179:
    goto rx1032_fail2166
  rxcap1037_done2178:
    repr_bind_attr_int rx1032_cur, rx1032_curclass, "$!pos", rx1032_pos
    $P11 = rx1032_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1032_curclass, "$!pos"
    lt $I11, 0, rx1032_fail2166
    nqp_rxmark rx1032_bstack, rxsubrule1038_pass2180, -1, 0
  rxsubrule1038_pass2180:
    rx1032_cstack = rx1032_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1032_pos, $P11, rx1032_curclass, "$!pos"
    rx1032_cur."!cursor_pass"(rx1032_pos, "package_declarator:sym<grammar>", 'backtrack'=>1)
    .return (rx1032_cur)
  rx1032_restart2165:
    repr_get_attr_obj rx1032_cstack, rx1032_cur, rx1032_curclass, "$!cstack"
  rx1032_fail2166:
    unless rx1032_bstack, rx1032_done2164
    pop $I19, rx1032_bstack
    if_null rx1032_cstack, rx1032_cstack_done2169
    unless rx1032_cstack, rx1032_cstack_done2169
    dec $I19
    set $P11, rx1032_cstack[$I19]
  rx1032_cstack_done2169:
    pop rx1032_rep, rx1032_bstack
    pop rx1032_pos, rx1032_bstack
    pop $I19, rx1032_bstack
    lt rx1032_pos, -1, rx1032_done2164
    lt rx1032_pos, 0, rx1032_fail2166
    eq $I19, 0, rx1032_fail2166
    nqp_islist $I20, rx1032_cstack
    unless $I20, rx1032_jump2167
    elements $I18, rx1032_bstack
    le $I18, 0, rx1032_cut2168
    dec $I18
    set $I18, rx1032_bstack[$I18]
  rx1032_cut2168:
    assign rx1032_cstack, $I18
  rx1032_jump2167:
    jump $I19
  rx1032_done2164:
    rx1032_cur."!cursor_fail"()
    .return (rx1032_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_106_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 996
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_211 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1039_start
    .local string rx1039_tgt
    .local int rx1039_pos
    .local int rx1039_off
    .local int rx1039_eos
    .local int rx1039_rep
    .local pmc rx1039_cur
    .local pmc rx1039_curclass
    .local pmc rx1039_bstack
    .local pmc rx1039_cstack
    rx1039_start = self."!cursor_start_all"()
    set rx1039_cur, rx1039_start[0]
    set rx1039_tgt, rx1039_start[1]
    set rx1039_pos, rx1039_start[2]
    set rx1039_curclass, rx1039_start[3]
    set rx1039_bstack, rx1039_start[4]
    set $I19, rx1039_start[5]
    store_lex unicode:"$\x{a2}", rx1039_cur
    length rx1039_eos, rx1039_tgt
    eq $I19, 1, rx1039_restart2183
    gt rx1039_pos, rx1039_eos, rx1039_fail2184
    repr_get_attr_int $I11, self, rx1039_curclass, "$!from"
    ne $I11, -1, rxscan1040_done2190
    goto rxscan1040_scan2189
  rxscan1040_loop2188:
    inc rx1039_pos
    gt rx1039_pos, rx1039_eos, rx1039_fail2184
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!from", rx1039_pos
  rxscan1040_scan2189:
    nqp_rxmark rx1039_bstack, rxscan1040_loop2188, rx1039_pos, 0
  rxscan1040_done2190:
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    store_lex unicode:"$\x{a2}", rx1039_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2191
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_211, $P5004
    repr_defined $I5001, fb_tmp_211
    unless $I5001 goto if1041_else2192 
    set $P5006, fb_tmp_211["$PACKAGE"]
    set $P5008, $P5006
    goto if1041_end2193
  if1041_else2192:
    null $P5007
    set $P5008, $P5007
  if1041_end2193:
    unless_null $P5008, vivi_10422194
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10422194:
    unless_null $P5008, vivi_10432195
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10432195:
    set $P5003, $P5008
  fallback2191:
    set $P101, $P5003
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    store_lex unicode:"$\x{a2}", rx1039_cur
    box $P5011, "role"
    set $P102, $P5011
    nqp_rxmark rx1039_bstack, rxcap1044_fail2197, rx1039_pos, 0
    add $I11, rx1039_pos, 4
    gt $I11, rx1039_eos, rx1039_fail2184
    substr $S10, rx1039_tgt, rx1039_pos, 4
    ne $S10, ucs4:"role", rx1039_fail2184
    add rx1039_pos, 4
    nqp_rxpeek $I19, rx1039_bstack, rxcap1044_fail2197
    inc $I19
    set $I11, rx1039_bstack[$I19]
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    $P11 = rx1039_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1039_pos)
    rx1039_cstack = rx1039_cur."!cursor_capture"($P11, "sym")
    goto rxcap1044_done2196
  rxcap1044_fail2197:
    goto rx1039_fail2184
  rxcap1044_done2196:
    repr_bind_attr_int rx1039_cur, rx1039_curclass, "$!pos", rx1039_pos
    $P11 = rx1039_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1039_curclass, "$!pos"
    lt $I11, 0, rx1039_fail2184
    nqp_rxmark rx1039_bstack, rxsubrule1045_pass2198, -1, 0
  rxsubrule1045_pass2198:
    rx1039_cstack = rx1039_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1039_pos, $P11, rx1039_curclass, "$!pos"
    rx1039_cur."!cursor_pass"(rx1039_pos, "package_declarator:sym<role>", 'backtrack'=>1)
    .return (rx1039_cur)
  rx1039_restart2183:
    repr_get_attr_obj rx1039_cstack, rx1039_cur, rx1039_curclass, "$!cstack"
  rx1039_fail2184:
    unless rx1039_bstack, rx1039_done2182
    pop $I19, rx1039_bstack
    if_null rx1039_cstack, rx1039_cstack_done2187
    unless rx1039_cstack, rx1039_cstack_done2187
    dec $I19
    set $P11, rx1039_cstack[$I19]
  rx1039_cstack_done2187:
    pop rx1039_rep, rx1039_bstack
    pop rx1039_pos, rx1039_bstack
    pop $I19, rx1039_bstack
    lt rx1039_pos, -1, rx1039_done2182
    lt rx1039_pos, 0, rx1039_fail2184
    eq $I19, 0, rx1039_fail2184
    nqp_islist $I20, rx1039_cstack
    unless $I20, rx1039_jump2185
    elements $I18, rx1039_bstack
    le $I18, 0, rx1039_cut2186
    dec $I18
    set $I18, rx1039_bstack[$I18]
  rx1039_cut2186:
    assign rx1039_cstack, $I18
  rx1039_jump2185:
    jump $I19
  rx1039_done2182:
    rx1039_cur."!cursor_fail"()
    .return (rx1039_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_107_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1001
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_212 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1046_start
    .local string rx1046_tgt
    .local int rx1046_pos
    .local int rx1046_off
    .local int rx1046_eos
    .local int rx1046_rep
    .local pmc rx1046_cur
    .local pmc rx1046_curclass
    .local pmc rx1046_bstack
    .local pmc rx1046_cstack
    rx1046_start = self."!cursor_start_all"()
    set rx1046_cur, rx1046_start[0]
    set rx1046_tgt, rx1046_start[1]
    set rx1046_pos, rx1046_start[2]
    set rx1046_curclass, rx1046_start[3]
    set rx1046_bstack, rx1046_start[4]
    set $I19, rx1046_start[5]
    store_lex unicode:"$\x{a2}", rx1046_cur
    length rx1046_eos, rx1046_tgt
    eq $I19, 1, rx1046_restart2201
    gt rx1046_pos, rx1046_eos, rx1046_fail2202
    repr_get_attr_int $I11, self, rx1046_curclass, "$!from"
    ne $I11, -1, rxscan1047_done2208
    goto rxscan1047_scan2207
  rxscan1047_loop2206:
    inc rx1046_pos
    gt rx1046_pos, rx1046_eos, rx1046_fail2202
    repr_bind_attr_int rx1046_cur, rx1046_curclass, "$!from", rx1046_pos
  rxscan1047_scan2207:
    nqp_rxmark rx1046_bstack, rxscan1047_loop2206, rx1046_pos, 0
  rxscan1047_done2208:
    repr_bind_attr_int rx1046_cur, rx1046_curclass, "$!pos", rx1046_pos
    store_lex unicode:"$\x{a2}", rx1046_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2209
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_212, $P5004
    repr_defined $I5001, fb_tmp_212
    unless $I5001 goto if1048_else2210 
    set $P5006, fb_tmp_212["$PACKAGE"]
    set $P5008, $P5006
    goto if1048_end2211
  if1048_else2210:
    null $P5007
    set $P5008, $P5007
  if1048_end2211:
    unless_null $P5008, vivi_10492212
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10492212:
    unless_null $P5008, vivi_10502213
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10502213:
    set $P5003, $P5008
  fallback2209:
    set $P101, $P5003
    repr_bind_attr_int rx1046_cur, rx1046_curclass, "$!pos", rx1046_pos
    store_lex unicode:"$\x{a2}", rx1046_cur
    box $P5011, "native"
    set $P102, $P5011
    nqp_rxmark rx1046_bstack, rxcap1051_fail2215, rx1046_pos, 0
    add $I11, rx1046_pos, 6
    gt $I11, rx1046_eos, rx1046_fail2202
    substr $S10, rx1046_tgt, rx1046_pos, 6
    ne $S10, ucs4:"native", rx1046_fail2202
    add rx1046_pos, 6
    nqp_rxpeek $I19, rx1046_bstack, rxcap1051_fail2215
    inc $I19
    set $I11, rx1046_bstack[$I19]
    repr_bind_attr_int rx1046_cur, rx1046_curclass, "$!pos", rx1046_pos
    $P11 = rx1046_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1046_pos)
    rx1046_cstack = rx1046_cur."!cursor_capture"($P11, "sym")
    goto rxcap1051_done2214
  rxcap1051_fail2215:
    goto rx1046_fail2202
  rxcap1051_done2214:
    repr_bind_attr_int rx1046_cur, rx1046_curclass, "$!pos", rx1046_pos
    $P11 = rx1046_cur."package_def"()
    repr_get_attr_int $I11, $P11, rx1046_curclass, "$!pos"
    lt $I11, 0, rx1046_fail2202
    nqp_rxmark rx1046_bstack, rxsubrule1052_pass2216, -1, 0
  rxsubrule1052_pass2216:
    rx1046_cstack = rx1046_cur."!cursor_capture"($P11, "package_def")
    repr_get_attr_int rx1046_pos, $P11, rx1046_curclass, "$!pos"
    rx1046_cur."!cursor_pass"(rx1046_pos, "package_declarator:sym<native>", 'backtrack'=>1)
    .return (rx1046_cur)
  rx1046_restart2201:
    repr_get_attr_obj rx1046_cstack, rx1046_cur, rx1046_curclass, "$!cstack"
  rx1046_fail2202:
    unless rx1046_bstack, rx1046_done2200
    pop $I19, rx1046_bstack
    if_null rx1046_cstack, rx1046_cstack_done2205
    unless rx1046_cstack, rx1046_cstack_done2205
    dec $I19
    set $P11, rx1046_cstack[$I19]
  rx1046_cstack_done2205:
    pop rx1046_rep, rx1046_bstack
    pop rx1046_pos, rx1046_bstack
    pop $I19, rx1046_bstack
    lt rx1046_pos, -1, rx1046_done2200
    lt rx1046_pos, 0, rx1046_fail2202
    eq $I19, 0, rx1046_fail2202
    nqp_islist $I20, rx1046_cstack
    unless $I20, rx1046_jump2203
    elements $I18, rx1046_bstack
    le $I18, 0, rx1046_cut2204
    dec $I18
    set $I18, rx1046_bstack[$I18]
  rx1046_cut2204:
    assign rx1046_cstack, $I18
  rx1046_jump2203:
    jump $I19
  rx1046_done2200:
    rx1046_cur."!cursor_fail"()
    .return (rx1046_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_108_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1006
    .param pmc _lex_param_0 
    .lex "$*OUTERPACKAGE", $P101 
    .lex "$*PKGDECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_213 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1053_start
    .local string rx1053_tgt
    .local int rx1053_pos
    .local int rx1053_off
    .local int rx1053_eos
    .local int rx1053_rep
    .local pmc rx1053_cur
    .local pmc rx1053_curclass
    .local pmc rx1053_bstack
    .local pmc rx1053_cstack
    rx1053_start = self."!cursor_start_all"()
    set rx1053_cur, rx1053_start[0]
    set rx1053_tgt, rx1053_start[1]
    set rx1053_pos, rx1053_start[2]
    set rx1053_curclass, rx1053_start[3]
    set rx1053_bstack, rx1053_start[4]
    set $I19, rx1053_start[5]
    store_lex unicode:"$\x{a2}", rx1053_cur
    length rx1053_eos, rx1053_tgt
    eq $I19, 1, rx1053_restart2219
    gt rx1053_pos, rx1053_eos, rx1053_fail2220
    repr_get_attr_int $I11, self, rx1053_curclass, "$!from"
    ne $I11, -1, rxscan1054_done2226
    goto rxscan1054_scan2225
  rxscan1054_loop2224:
    inc rx1053_pos
    gt rx1053_pos, rx1053_eos, rx1053_fail2220
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!from", rx1053_pos
  rxscan1054_scan2225:
    nqp_rxmark rx1053_bstack, rxscan1054_loop2224, rx1053_pos, 0
  rxscan1054_done2226:
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    store_lex unicode:"$\x{a2}", rx1053_cur
    find_dynamic_lex $P5003, "$*PACKAGE"
    unless_null $P5003, fallback2227
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_213, $P5004
    repr_defined $I5001, fb_tmp_213
    unless $I5001 goto if1055_else2228 
    set $P5006, fb_tmp_213["$PACKAGE"]
    set $P5008, $P5006
    goto if1055_end2229
  if1055_else2228:
    null $P5007
    set $P5008, $P5007
  if1055_end2229:
    unless_null $P5008, vivi_10562230
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_10562230:
    unless_null $P5008, vivi_10572231
    die "Contextual $*PACKAGE not found"
    box $P5010, "Contextual $*PACKAGE not found"
    set $P5008, $P5010
  vivi_10572231:
    set $P5003, $P5008
  fallback2227:
    set $P101, $P5003
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    store_lex unicode:"$\x{a2}", rx1053_cur
    box $P5011, "stub"
    set $P102, $P5011
    nqp_rxmark rx1053_bstack, rxcap1058_fail2233, rx1053_pos, 0
    add $I11, rx1053_pos, 4
    gt $I11, rx1053_eos, rx1053_fail2220
    substr $S10, rx1053_tgt, rx1053_pos, 4
    ne $S10, ucs4:"stub", rx1053_fail2220
    add rx1053_pos, 4
    nqp_rxpeek $I19, rx1053_bstack, rxcap1058_fail2233
    inc $I19
    set $I11, rx1053_bstack[$I19]
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1053_pos)
    rx1053_cstack = rx1053_cur."!cursor_capture"($P11, "sym")
    goto rxcap1058_done2232
  rxcap1058_fail2233:
    goto rx1053_fail2220
  rxcap1058_done2232:
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."name"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    nqp_rxmark rx1053_bstack, rxsubrule1060_pass2235, -1, 0
  rxsubrule1060_pass2235:
    rx1053_cstack = rx1053_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    add $I11, rx1053_pos, 9
    gt $I11, rx1053_eos, rx1053_fail2220
    substr $S10, rx1053_tgt, rx1053_pos, 9
    ne $S10, ucs4:"metaclass", rx1053_fail2220
    add rx1053_pos, 9
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."name"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    nqp_rxmark rx1053_bstack, rxsubrule1063_pass2238, -1, 0
  rxsubrule1063_pass2238:
    rx1053_cstack = rx1053_cur."!cursor_capture"($P11, "metaclass")
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    add $I11, rx1053_pos, 1
    gt $I11, rx1053_eos, rx1053_fail2220
    substr $S10, rx1053_tgt, rx1053_pos, 1
    ne $S10, ucs4:"{", rx1053_fail2220
    add rx1053_pos, 1
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    add $I11, rx1053_pos, 3
    gt $I11, rx1053_eos, rx1053_fail2220
    substr $S10, rx1053_tgt, rx1053_pos, 3
    ne $S10, ucs4:"...", rx1053_fail2220
    add rx1053_pos, 3
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    add $I11, rx1053_pos, 1
    gt $I11, rx1053_eos, rx1053_fail2220
    substr $S10, rx1053_tgt, rx1053_pos, 1
    ne $S10, ucs4:"}", rx1053_fail2220
    add rx1053_pos, 1
    repr_bind_attr_int rx1053_cur, rx1053_curclass, "$!pos", rx1053_pos
    $P11 = rx1053_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1053_curclass, "$!pos"
    lt $I11, 0, rx1053_fail2220
    repr_get_attr_int rx1053_pos, $P11, rx1053_curclass, "$!pos"
    rx1053_cur."!cursor_pass"(rx1053_pos, "package_declarator:sym<stub>", 'backtrack'=>1)
    .return (rx1053_cur)
  rx1053_restart2219:
    repr_get_attr_obj rx1053_cstack, rx1053_cur, rx1053_curclass, "$!cstack"
  rx1053_fail2220:
    unless rx1053_bstack, rx1053_done2218
    pop $I19, rx1053_bstack
    if_null rx1053_cstack, rx1053_cstack_done2223
    unless rx1053_cstack, rx1053_cstack_done2223
    dec $I19
    set $P11, rx1053_cstack[$I19]
  rx1053_cstack_done2223:
    pop rx1053_rep, rx1053_bstack
    pop rx1053_pos, rx1053_bstack
    pop $I19, rx1053_bstack
    lt rx1053_pos, -1, rx1053_done2218
    lt rx1053_pos, 0, rx1053_fail2220
    eq $I19, 0, rx1053_fail2220
    nqp_islist $I20, rx1053_cstack
    unless $I20, rx1053_jump2221
    elements $I18, rx1053_bstack
    le $I18, 0, rx1053_cut2222
    dec $I18
    set $I18, rx1053_bstack[$I18]
  rx1053_cut2222:
    assign rx1053_cstack, $I18
  rx1053_jump2221:
    jump $I19
  rx1053_done2218:
    rx1053_cur."!cursor_fail"()
    .return (rx1053_cur) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_109_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1014
    .param pmc _lex_param_0 
    .const 'Sub' $P5025 = 'cuid_404_1361537952.49511' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_405_1361537952.49511' 
    capture_lex $P5025 
    .lex "$*PACKAGE", $P101 
    .lex "$OUTER", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1068_start
    .local string rx1068_tgt
    .local int rx1068_pos
    .local int rx1068_off
    .local int rx1068_eos
    .local int rx1068_rep
    .local pmc rx1068_cur
    .local pmc rx1068_curclass
    .local pmc rx1068_bstack
    .local pmc rx1068_cstack
    rx1068_start = self."!cursor_start_all"()
    set rx1068_cur, rx1068_start[0]
    set rx1068_tgt, rx1068_start[1]
    set rx1068_pos, rx1068_start[2]
    set rx1068_curclass, rx1068_start[3]
    set rx1068_bstack, rx1068_start[4]
    set $I19, rx1068_start[5]
    store_lex unicode:"$\x{a2}", rx1068_cur
    length rx1068_eos, rx1068_tgt
    eq $I19, 1, rx1068_restart2245
    gt rx1068_pos, rx1068_eos, rx1068_fail2246
    repr_get_attr_int $I11, self, rx1068_curclass, "$!from"
    ne $I11, -1, rxscan1069_done2252
    goto rxscan1069_scan2251
  rxscan1069_loop2250:
    inc rx1068_pos
    gt rx1068_pos, rx1068_eos, rx1068_fail2246
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!from", rx1068_pos
  rxscan1069_scan2251:
    nqp_rxmark rx1068_bstack, rxscan1069_loop2250, rx1068_pos, 0
  rxscan1069_done2252:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    store_lex unicode:"$\x{a2}", rx1068_cur
    unless_null $P101, fallback2254
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_214, $P5003
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if1071_else2255 
    set $P5005, fb_tmp_214["$PACKAGE"]
    set $P5007, $P5005
    goto if1071_end2256
  if1071_else2255:
    null $P5006
    set $P5007, $P5006
  if1071_end2256:
    unless_null $P5007, vivi_10722257
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_10722257:
    unless_null $P5007, vivi_10732258
    die "Contextual $*PACKAGE not found"
    box $P5009, "Contextual $*PACKAGE not found"
    set $P5007, $P5009
  vivi_10732258:
    set $P101, $P5007
  fallback2254:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    store_lex unicode:"$\x{a2}", rx1068_cur
.annotate 'line', 1016
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback2260
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5011, $P5012
    set fb_tmp_215, $P5011
    repr_defined $I5002, fb_tmp_215
    unless $I5002 goto if1075_else2261 
    set $P5013, fb_tmp_215["$W"]
    set $P5015, $P5013
    goto if1075_end2262
  if1075_else2261:
    null $P5014
    set $P5015, $P5014
  if1075_end2262:
    unless_null $P5015, vivi_10762263
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_10762263:
    unless_null $P5015, vivi_10772264
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_10772264:
    set $P5010, $P5015
  fallback2260:
    $P5018 = $P5010."cur_lexpad"()
    set $P102, $P5018
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."name"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1079_pass2266, -1, 0
  rxsubrule1079_pass2266:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxquantr1083_done2271, rx1068_pos, 0
  rxquantr1083_loop2270:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    store_lex unicode:"$\x{a2}", rx1068_cur
    $P5019 = $P103."MATCH"()
    set $P104, $P5019
    .const 'Sub' $P5020 = 'cuid_404_1361537952.49511' 
    capture_lex $P5020
    $P5021 = $P5020()
    unless $P5021, rx1068_fail2246
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 1
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 1
    ne $S10, ucs4:"[", rx1068_fail2246
    add rx1068_pos, 1
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."role_params"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1090_pass2280, -1, 0
  rxsubrule1090_pass2280:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "role_params")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1091_02282:
    nqp_rxmark rx1068_bstack, alt1091_12283, rx1068_pos, 0
    add $I11, rx1068_pos, 1
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 1
    ne $S10, ucs4:"]", rx1068_fail2246
    add rx1068_pos, 1
    goto alt1091_end2281
  alt1091_12283:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."FAILGOAL"("']'")
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    goto rxsubrule1092_pass2284
  rxsubrule1092_back2285:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
  rxsubrule1092_pass2284:
    rx1068_cstack = rx1068_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule1092_back2285
    push rx1068_bstack, $I11
    push rx1068_bstack, 0
    push rx1068_bstack, rx1068_pos
    elements $I11, rx1068_cstack
    push rx1068_bstack, $I11
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1091_end2281:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxpeek $I19, rx1068_bstack, rxquantr1083_done2271
    inc $I19
    inc $I19
    set rx1068_rep, rx1068_bstack[$I19]
    nqp_rxcommit rx1068_bstack, rxquantr1083_done2271
    inc rx1068_rep
  rxquantr1083_done2271:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxquantr1095_done2289, rx1068_pos, 0
  rxquantr1095_loop2288:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 2
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 2
    ne $S10, ucs4:"is", rx1068_fail2246
    add rx1068_pos, 2
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 5
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 5
    ne $S10, ucs4:"repr(", rx1068_fail2246
    add rx1068_pos, 5
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1099_pass2293, -1, 0
  rxsubrule1099_pass2293:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "repr")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 1
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 1
    ne $S10, ucs4:")", rx1068_fail2246
    add rx1068_pos, 1
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxpeek $I19, rx1068_bstack, rxquantr1095_done2289
    inc $I19
    inc $I19
    set rx1068_rep, rx1068_bstack[$I19]
    nqp_rxcommit rx1068_bstack, rxquantr1095_done2289
    inc rx1068_rep
  rxquantr1095_done2289:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    store_lex unicode:"$\x{a2}", rx1068_cur
    $P5022 = $P103."MATCH"()
    set $P104, $P5022
    .const 'Sub' $P5023 = 'cuid_405_1361537952.49511' 
    capture_lex $P5023
    $P5024 = $P5023()
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxquantr1194_done2453, rx1068_pos, 0
  rxquantr1194_loop2452:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxcap1196_fail2456, rx1068_pos, 0
    add $I11, rx1068_pos, 9
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 9
    ne $S10, ucs4:"is export", rx1068_fail2246
    add rx1068_pos, 9
    nqp_rxpeek $I19, rx1068_bstack, rxcap1196_fail2456
    inc $I19
    set $I11, rx1068_bstack[$I19]
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1068_pos)
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "export")
    goto rxcap1196_done2455
  rxcap1196_fail2456:
    goto rx1068_fail2246
  rxcap1196_done2455:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxpeek $I19, rx1068_bstack, rxquantr1194_done2453
    inc $I19
    inc $I19
    set rx1068_rep, rx1068_bstack[$I19]
    nqp_rxcommit rx1068_bstack, rxquantr1194_done2453
    inc rx1068_rep
  rxquantr1194_done2453:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxquantr1199_done2460, rx1068_pos, 0
  rxquantr1199_loop2459:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 2
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 2
    ne $S10, ucs4:"is", rx1068_fail2246
    add rx1068_pos, 2
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."name"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1202_pass2463, -1, 0
  rxsubrule1202_pass2463:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "parent")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxpeek $I19, rx1068_bstack, rxquantr1199_done2460
    inc $I19
    inc $I19
    set rx1068_rep, rx1068_bstack[$I19]
    nqp_rxcommit rx1068_bstack, rxquantr1199_done2460
    inc rx1068_rep
  rxquantr1199_done2460:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxmark rx1068_bstack, rxquantr1205_done2467, rx1068_pos, 0
  rxquantr1205_loop2466:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 4
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 4
    ne $S10, ucs4:"does", rx1068_fail2246
    add rx1068_pos, 4
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."name"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1208_pass2470, -1, 0
  rxsubrule1208_pass2470:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "role")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    nqp_rxpeek $I19, rx1068_bstack, rxquantr1205_done2467
    inc $I19
    inc $I19
    set rx1068_rep, rx1068_bstack[$I19]
    nqp_rxcommit rx1068_bstack, rxquantr1205_done2467
    inc rx1068_rep
    nqp_rxmark rx1068_bstack, rxquantr1205_done2467, rx1068_pos, rx1068_rep
    goto rxquantr1205_loop2466
  rxquantr1205_done2467:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1211_02474:
    nqp_rxmark rx1068_bstack, alt1211_12489, rx1068_pos, 0
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    add $I11, rx1068_pos, 1
    gt $I11, rx1068_eos, rx1068_fail2246
    substr $S10, rx1068_tgt, rx1068_pos, 1
    ne $S10, ucs4:";", rx1068_fail2246
    add rx1068_pos, 1
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."statementlist"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1214_pass2477, -1, 0
  rxsubrule1214_pass2477:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "statementlist")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1216_02480:
    nqp_rxmark rx1068_bstack, alt1216_12484, rx1068_pos, 0
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    lt rx1068_pos, rx1068_eos, rx1068_fail2246
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    goto alt1216_end2479
  alt1216_12484:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."panic"("Confused")
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1216_end2479:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    goto alt1211_end2473
  alt1211_12489:
    nqp_rxmark rx1068_bstack, alt1211_22494, rx1068_pos, 0
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    ge rx1068_pos, rx1068_eos, rx1068_fail2246
    substr $S11, rx1068_tgt, rx1068_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1068_fail2246
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    nqp_rxmark rx1068_bstack, rxsubrule1226_pass2492, -1, 0
  rxsubrule1226_pass2492:
    rx1068_cstack = rx1068_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    goto alt1211_end2473
  alt1211_22494:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."panic"("Malformed package declaration")
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
  alt1211_end2473:
    repr_bind_attr_int rx1068_cur, rx1068_curclass, "$!pos", rx1068_pos
    $P11 = rx1068_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1068_curclass, "$!pos"
    lt $I11, 0, rx1068_fail2246
    repr_get_attr_int rx1068_pos, $P11, rx1068_curclass, "$!pos"
    rx1068_cur."!cursor_pass"(rx1068_pos, "package_def", 'backtrack'=>1)
    .return (rx1068_cur)
  rx1068_restart2245:
    repr_get_attr_obj rx1068_cstack, rx1068_cur, rx1068_curclass, "$!cstack"
  rx1068_fail2246:
    unless rx1068_bstack, rx1068_done2244
    pop $I19, rx1068_bstack
    if_null rx1068_cstack, rx1068_cstack_done2249
    unless rx1068_cstack, rx1068_cstack_done2249
    dec $I19
    set $P11, rx1068_cstack[$I19]
  rx1068_cstack_done2249:
    pop rx1068_rep, rx1068_bstack
    pop rx1068_pos, rx1068_bstack
    pop $I19, rx1068_bstack
    lt rx1068_pos, -1, rx1068_done2244
    lt rx1068_pos, 0, rx1068_fail2246
    eq $I19, 0, rx1068_fail2246
    nqp_islist $I20, rx1068_cstack
    unless $I20, rx1068_jump2247
    elements $I18, rx1068_bstack
    le $I18, 0, rx1068_cut2248
    dec $I18
    set $I18, rx1068_bstack[$I18]
  rx1068_cut2248:
    assign rx1068_cstack, $I18
  rx1068_jump2247:
    jump $I19
  rx1068_done2244:
    rx1068_cur."!cursor_fail"()
    .return (rx1068_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_404_1361537952.49511") :anon :lex :outer("cuid_109_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1020
    .local pmc fb_tmp_216 
    find_dynamic_lex $P5001, "$*PKGDECL"
    unless_null $P5001, fallback2273
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_216, $P5002
    repr_defined $I5002, fb_tmp_216
    unless $I5002 goto if1085_else2274 
    set $P5004, fb_tmp_216["$PKGDECL"]
    set $P5006, $P5004
    goto if1085_end2275
  if1085_else2274:
    null $P5005
    set $P5006, $P5005
  if1085_end2275:
    unless_null $P5006, vivi_10862276
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_10862276:
    unless_null $P5006, vivi_10872277
    die "Contextual $*PKGDECL not found"
    box $P5008, "Contextual $*PKGDECL not found"
    set $P5006, $P5008
  vivi_10872277:
    set $P5001, $P5006
  fallback2273:
    set $S5001, $P5001
    iseq $I5001, $S5001, "role"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_405_1361537952.49511") :anon :lex :outer("cuid_109_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1023
    .lex "%args", $P101 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    .local pmc fb_tmp_221 
    .local pmc fb_tmp_222 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc fb_tmp_226 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_227 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc fb_tmp_236 
    .local pmc fb_tmp_237 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    new $P5001, 'Hash'
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback2299
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback2299:
    set fb_tmp_217, $P5002
    repr_defined $I5001, fb_tmp_217
    unless $I5001 goto if1103_else2297 
    set $P5004, fb_tmp_217["name"]
    set $P5006, $P5004
    goto if1103_end2298
  if1103_else2297:
    null $P5005
    set $P5006, $P5005
  if1103_end2298:
    unless_null $P5006, vivi_11042300
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_11042300:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101["name"], $P5008
    find_lex $P5009, "$/"
    unless_null $P5009, fallback2305
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  fallback2305:
    set fb_tmp_218, $P5009
    repr_defined $I5002, fb_tmp_218
    unless $I5002 goto if1106_else2303 
    set $P5011, fb_tmp_218["repr"]
    set $P5013, $P5011
    goto if1106_end2304
  if1106_else2303:
    null $P5012
    set $P5013, $P5012
  if1106_end2304:
    unless_null $P5013, vivi_11072306
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_11072306:
    unless $P5013 goto if1105_end2302 
.annotate 'line', 1028
    find_lex $P5015, "$/"
    unless_null $P5015, fallback2317
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  fallback2317:
    set fb_tmp_223, $P5015
    repr_defined $I5007, fb_tmp_223
    unless $I5007 goto if1112_else2315 
    set $P5017, fb_tmp_223["repr"]
    set $P5019, $P5017
    goto if1112_end2316
  if1112_else2315:
    null $P5018
    set $P5019, $P5018
  if1112_end2316:
    unless_null $P5019, vivi_11132318
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_11132318:
    set fb_tmp_222, $P5019
    repr_defined $I5006, fb_tmp_222
    unless $I5006 goto if1111_else2313 
    set $P5021, fb_tmp_222[0]
    set $P5023, $P5021
    goto if1111_end2314
  if1111_else2313:
    null $P5022
    set $P5023, $P5022
  if1111_end2314:
    unless_null $P5023, vivi_11142319
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_11142319:
    set fb_tmp_221, $P5023
    repr_defined $I5005, fb_tmp_221
    unless $I5005 goto if1110_else2311 
    set $P5025, fb_tmp_221["quote_delimited"]
    set $P5027, $P5025
    goto if1110_end2312
  if1110_else2311:
    null $P5026
    set $P5027, $P5026
  if1110_end2312:
    unless_null $P5027, vivi_11152320
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_11152320:
    set fb_tmp_220, $P5027
    repr_defined $I5004, fb_tmp_220
    unless $I5004 goto if1109_else2309 
    set $P5029, fb_tmp_220["quote_atom"]
    set $P5031, $P5029
    goto if1109_end2310
  if1109_else2309:
    null $P5030
    set $P5031, $P5030
  if1109_end2310:
    unless_null $P5031, vivi_11162321
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_11162321:
    set fb_tmp_219, $P5031
    repr_defined $I5003, fb_tmp_219
    unless $I5003 goto if1108_else2307 
    set $P5033, fb_tmp_219[0]
    set $P5035, $P5033
    goto if1108_end2308
  if1108_else2307:
    null $P5034
    set $P5035, $P5034
  if1108_end2308:
    unless_null $P5035, vivi_11172322
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_11172322:
    set $S5002, $P5035
    box $P5037, $S5002
    set $P101["repr"], $P5037
  if1105_end2302:
.annotate 'line', 1031
    find_dynamic_lex $P5038, "$*W"
    unless_null $P5038, fallback2323
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5039, $P5040
    set fb_tmp_224, $P5039
    repr_defined $I5008, fb_tmp_224
    unless $I5008 goto if1118_else2324 
    set $P5041, fb_tmp_224["$W"]
    set $P5043, $P5041
    goto if1118_end2325
  if1118_else2324:
    null $P5042
    set $P5043, $P5042
  if1118_end2325:
    unless_null $P5043, vivi_11192326
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_11192326:
    unless_null $P5043, vivi_11202327
    die "Contextual $*W not found"
    box $P5045, "Contextual $*W not found"
    set $P5043, $P5045
  vivi_11202327:
    set $P5038, $P5043
  fallback2323:
    find_dynamic_lex $P5046, "%*HOW"
    unless_null $P5046, fallback2330
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_24, $P5047
    set fb_tmp_226, pkg_viv_tmp_24
    repr_defined $I5010, fb_tmp_226
    unless $I5010 goto if1122_else2331 
    set $P5049, fb_tmp_226["%HOW"]
    set $P5051, $P5049
    goto if1122_end2332
  if1122_else2331:
    null $P5050
    set $P5051, $P5050
  if1122_end2332:
    unless_null $P5051, vivi_11232333
    new $P5052, 'Hash'
    set pkg_viv_tmp_24["%HOW"], $P5052
    set $P5051, $P5052
  vivi_11232333:
    unless_null $P5051, vivi_11242334
    die "Contextual %*HOW not found"
    box $P5053, "Contextual %*HOW not found"
    set $P5051, $P5053
  vivi_11242334:
    set $P5046, $P5051
  fallback2330:
    set fb_tmp_225, $P5046
    repr_defined $I5009, fb_tmp_225
    unless $I5009 goto if1121_else2328 
    find_dynamic_lex $P5055, "$*PKGDECL"
    unless_null $P5055, fallback2335
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5056, $P5057
    set fb_tmp_227, $P5056
    repr_defined $I5011, fb_tmp_227
    unless $I5011 goto if1125_else2336 
    set $P5058, fb_tmp_227["$PKGDECL"]
    set $P5060, $P5058
    goto if1125_end2337
  if1125_else2336:
    null $P5059
    set $P5060, $P5059
  if1125_end2337:
    unless_null $P5060, vivi_11262338
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  vivi_11262338:
    unless_null $P5060, vivi_11272339
    die "Contextual $*PKGDECL not found"
    box $P5062, "Contextual $*PKGDECL not found"
    set $P5060, $P5062
  vivi_11272339:
    set $P5055, $P5060
  fallback2335:
    set $S5003, $P5055
    set $P5054, fb_tmp_225[$S5003]
    set $P5064, $P5054
    goto if1121_end2329
  if1121_else2328:
    null $P5063
    set $P5064, $P5063
  if1121_end2329:
    unless_null $P5064, vivi_11282340
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_11282340:
    $P5066 = $P5038."pkg_create_mo"($P5064, $P101 :flat :named)
    store_dynamic_lex "$*PACKAGE", $P5066
    find_dynamic_lex $P5067, "$*SCOPE"
    unless_null $P5067, fallback2345
    nqp_get_sc_object $P5069, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5068, $P5069
    set fb_tmp_228, $P5068
    repr_defined $I5013, fb_tmp_228
    unless $I5013 goto if1131_else2346 
    set $P5070, fb_tmp_228["$SCOPE"]
    set $P5072, $P5070
    goto if1131_end2347
  if1131_else2346:
    null $P5071
    set $P5072, $P5071
  if1131_end2347:
    unless_null $P5072, vivi_11322348
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5073
  vivi_11322348:
    unless_null $P5072, vivi_11332349
    die "Contextual $*SCOPE not found"
    box $P5074, "Contextual $*SCOPE not found"
    set $P5072, $P5074
  vivi_11332349:
    set $P5067, $P5072
  fallback2345:
    set $S5004, $P5067
    iseq $I5012, $S5004, "our"
    set $I5016, $I5012
    if $I5012 goto unless1130_end2344 
    find_dynamic_lex $P5075, "$*SCOPE"
    unless_null $P5075, fallback2350
    nqp_get_sc_object $P5077, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5076, $P5077
    set fb_tmp_229, $P5076
    repr_defined $I5015, fb_tmp_229
    unless $I5015 goto if1134_else2351 
    set $P5078, fb_tmp_229["$SCOPE"]
    set $P5080, $P5078
    goto if1134_end2352
  if1134_else2351:
    null $P5079
    set $P5080, $P5079
  if1134_end2352:
    unless_null $P5080, vivi_11352353
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5081
  vivi_11352353:
    unless_null $P5080, vivi_11362354
    die "Contextual $*SCOPE not found"
    box $P5082, "Contextual $*SCOPE not found"
    set $P5080, $P5082
  vivi_11362354:
    set $P5075, $P5080
  fallback2350:
    set $S5005, $P5075
    iseq $I5014, $S5005, ""
    set $I5016, $I5014
  unless1130_end2344:
    unless $I5016 goto if1129_else2341 
.annotate 'line', 1034
.annotate 'line', 1035
    find_dynamic_lex $P5083, "$*W"
    unless_null $P5083, fallback2355
    nqp_get_sc_object $P5085, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5084, $P5085
    set fb_tmp_230, $P5084
    repr_defined $I5017, fb_tmp_230
    unless $I5017 goto if1137_else2356 
    set $P5086, fb_tmp_230["$W"]
    set $P5088, $P5086
    goto if1137_end2357
  if1137_else2356:
    null $P5087
    set $P5088, $P5087
  if1137_end2357:
    unless_null $P5088, vivi_11382358
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_11382358:
    unless_null $P5088, vivi_11392359
    die "Contextual $*W not found"
    box $P5090, "Contextual $*W not found"
    set $P5088, $P5090
  vivi_11392359:
    set $P5083, $P5088
  fallback2355:
    find_dynamic_lex $P5091, "$*OUTERPACKAGE"
    unless_null $P5091, fallback2360
    nqp_get_sc_object $P5093, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5092, $P5093
    set fb_tmp_231, $P5092
    repr_defined $I5018, fb_tmp_231
    unless $I5018 goto if1140_else2361 
    set $P5094, fb_tmp_231["$OUTERPACKAGE"]
    set $P5096, $P5094
    goto if1140_end2362
  if1140_else2361:
    null $P5095
    set $P5096, $P5095
  if1140_end2362:
    unless_null $P5096, vivi_11412363
    nqp_get_sc_object $P5097, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5097
  vivi_11412363:
    unless_null $P5096, vivi_11422364
    die "Contextual $*OUTERPACKAGE not found"
    box $P5098, "Contextual $*OUTERPACKAGE not found"
    set $P5096, $P5098
  vivi_11422364:
    set $P5091, $P5096
  fallback2360:
    find_lex $P5099, "$/"
    unless_null $P5099, fallback2369
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5099, $P5100
  fallback2369:
    set fb_tmp_233, $P5099
    repr_defined $I5020, fb_tmp_233
    unless $I5020 goto if1144_else2367 
    set $P5101, fb_tmp_233["name"]
    set $P5103, $P5101
    goto if1144_end2368
  if1144_else2367:
    null $P5102
    set $P5103, $P5102
  if1144_end2368:
    unless_null $P5103, vivi_11452370
    nqp_get_sc_object $P5104, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5103, $P5104
  vivi_11452370:
    set fb_tmp_232, $P5103
    repr_defined $I5019, fb_tmp_232
    unless $I5019 goto if1143_else2365 
    set $P5105, fb_tmp_232["identifier"]
    set $P5107, $P5105
    goto if1143_end2366
  if1143_else2365:
    null $P5106
    set $P5107, $P5106
  if1143_end2366:
    unless_null $P5107, vivi_11462371
    nqp_get_sc_object $P5108, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5107, $P5108
  vivi_11462371:
    find_dynamic_lex $P5109, "$*PACKAGE"
    unless_null $P5109, fallback2372
    nqp_get_sc_object $P5111, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5110, $P5111
    set fb_tmp_234, $P5110
    repr_defined $I5021, fb_tmp_234
    unless $I5021 goto if1147_else2373 
    set $P5112, fb_tmp_234["$PACKAGE"]
    set $P5114, $P5112
    goto if1147_end2374
  if1147_else2373:
    null $P5113
    set $P5114, $P5113
  if1147_end2374:
    unless_null $P5114, vivi_11482375
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5115
  vivi_11482375:
    unless_null $P5114, vivi_11492376
    die "Contextual $*PACKAGE not found"
    box $P5116, "Contextual $*PACKAGE not found"
    set $P5114, $P5116
  vivi_11492376:
    set $P5109, $P5114
  fallback2372:
    $P5083."install_package_symbol"($P5091, $P5107, $P5109)
    find_lex $P5117, "$/"
    unless_null $P5117, fallback2383
    nqp_get_sc_object $P5118, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5117, $P5118
  fallback2383:
    set fb_tmp_236, $P5117
    repr_defined $I5024, fb_tmp_236
    unless $I5024 goto if1152_else2381 
    set $P5119, fb_tmp_236["name"]
    set $P5121, $P5119
    goto if1152_end2382
  if1152_else2381:
    null $P5120
    set $P5121, $P5120
  if1152_end2382:
    unless_null $P5121, vivi_11532384
    nqp_get_sc_object $P5122, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5121, $P5122
  vivi_11532384:
    set fb_tmp_235, $P5121
    repr_defined $I5023, fb_tmp_235
    unless $I5023 goto if1151_else2379 
    set $P5123, fb_tmp_235["identifier"]
    set $P5125, $P5123
    goto if1151_end2380
  if1151_else2379:
    null $P5124
    set $P5125, $P5124
  if1151_end2380:
    unless_null $P5125, vivi_11542385
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5125, $P5126
  vivi_11542385:
    set $N5001, $P5125
    set $N5002, 1
    iseq $I5022, $N5001, $N5002
    box $P5160, $I5022
    set $P5159, $P5160
    unless $I5022 goto if1150_end2378 
.annotate 'line', 1036
.annotate 'line', 1037
    find_dynamic_lex $P5127, "$*W"
    unless_null $P5127, fallback2386
    nqp_get_sc_object $P5129, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5128, $P5129
    set fb_tmp_237, $P5128
    repr_defined $I5025, fb_tmp_237
    unless $I5025 goto if1155_else2387 
    set $P5130, fb_tmp_237["$W"]
    set $P5132, $P5130
    goto if1155_end2388
  if1155_else2387:
    null $P5131
    set $P5132, $P5131
  if1155_end2388:
    unless_null $P5132, vivi_11562389
    nqp_get_sc_object $P5133, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5132, $P5133
  vivi_11562389:
    unless_null $P5132, vivi_11572390
    die "Contextual $*W not found"
    box $P5134, "Contextual $*W not found"
    set $P5132, $P5134
  vivi_11572390:
    set $P5127, $P5132
  fallback2386:
    find_lex $P5135, "$OUTER"
    find_lex $P5136, "$/"
    unless_null $P5136, fallback2397
    nqp_get_sc_object $P5137, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5136, $P5137
  fallback2397:
    set fb_tmp_240, $P5136
    repr_defined $I5028, fb_tmp_240
    unless $I5028 goto if1160_else2395 
    set $P5138, fb_tmp_240["name"]
    set $P5140, $P5138
    goto if1160_end2396
  if1160_else2395:
    null $P5139
    set $P5140, $P5139
  if1160_end2396:
    unless_null $P5140, vivi_11612398
    nqp_get_sc_object $P5141, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5140, $P5141
  vivi_11612398:
    set fb_tmp_239, $P5140
    repr_defined $I5027, fb_tmp_239
    unless $I5027 goto if1159_else2393 
    set $P5142, fb_tmp_239["identifier"]
    set $P5144, $P5142
    goto if1159_end2394
  if1159_else2393:
    null $P5143
    set $P5144, $P5143
  if1159_end2394:
    unless_null $P5144, vivi_11622399
    nqp_get_sc_object $P5145, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5144, $P5145
  vivi_11622399:
    set fb_tmp_238, $P5144
    repr_defined $I5026, fb_tmp_238
    unless $I5026 goto if1158_else2391 
    set $P5146, fb_tmp_238[0]
    set $P5148, $P5146
    goto if1158_end2392
  if1158_else2391:
    null $P5147
    set $P5148, $P5147
  if1158_end2392:
    unless_null $P5148, vivi_11632400
    nqp_get_sc_object $P5149, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5148, $P5149
  vivi_11632400:
    find_dynamic_lex $P5150, "$*PACKAGE"
    unless_null $P5150, fallback2401
    nqp_get_sc_object $P5152, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5151, $P5152
    set fb_tmp_241, $P5151
    repr_defined $I5029, fb_tmp_241
    unless $I5029 goto if1164_else2402 
    set $P5153, fb_tmp_241["$PACKAGE"]
    set $P5155, $P5153
    goto if1164_end2403
  if1164_else2402:
    null $P5154
    set $P5155, $P5154
  if1164_end2403:
    unless_null $P5155, vivi_11652404
    nqp_get_sc_object $P5156, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5155, $P5156
  vivi_11652404:
    unless_null $P5155, vivi_11662405
    die "Contextual $*PACKAGE not found"
    box $P5157, "Contextual $*PACKAGE not found"
    set $P5155, $P5157
  vivi_11662405:
    set $P5150, $P5155
  fallback2401:
    $P5158 = $P5127."install_lexical_symbol"($P5135, $P5148, $P5150)
    set $P5159, $P5158
  if1150_end2378:
    set $P5231, $P5159
    goto if1129_end2342
  if1129_else2341:
    find_dynamic_lex $P5161, "$*SCOPE"
    unless_null $P5161, fallback2408
    nqp_get_sc_object $P5163, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5162, $P5163
    set fb_tmp_242, $P5162
    repr_defined $I5031, fb_tmp_242
    unless $I5031 goto if1168_else2409 
    set $P5164, fb_tmp_242["$SCOPE"]
    set $P5166, $P5164
    goto if1168_end2410
  if1168_else2409:
    null $P5165
    set $P5166, $P5165
  if1168_end2410:
    unless_null $P5166, vivi_11692411
    nqp_get_sc_object $P5167, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5166, $P5167
  vivi_11692411:
    unless_null $P5166, vivi_11702412
    die "Contextual $*SCOPE not found"
    box $P5168, "Contextual $*SCOPE not found"
    set $P5166, $P5168
  vivi_11702412:
    set $P5161, $P5166
  fallback2408:
    set $S5006, $P5161
    iseq $I5030, $S5006, "my"
    unless $I5030 goto if1167_else2406 
.annotate 'line', 1040
    find_lex $P5169, "$/"
    unless_null $P5169, fallback2419
    nqp_get_sc_object $P5170, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5169, $P5170
  fallback2419:
    set fb_tmp_244, $P5169
    repr_defined $I5034, fb_tmp_244
    unless $I5034 goto if1173_else2417 
    set $P5171, fb_tmp_244["name"]
    set $P5173, $P5171
    goto if1173_end2418
  if1173_else2417:
    null $P5172
    set $P5173, $P5172
  if1173_end2418:
    unless_null $P5173, vivi_11742420
    nqp_get_sc_object $P5174, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5173, $P5174
  vivi_11742420:
    set fb_tmp_243, $P5173
    repr_defined $I5033, fb_tmp_243
    unless $I5033 goto if1172_else2415 
    set $P5175, fb_tmp_243["identifier"]
    set $P5177, $P5175
    goto if1172_end2416
  if1172_else2415:
    null $P5176
    set $P5177, $P5176
  if1172_end2416:
    unless_null $P5177, vivi_11752421
    nqp_get_sc_object $P5178, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5177, $P5178
  vivi_11752421:
    set $N5003, $P5177
    set $N5004, 1
    isne $I5032, $N5003, $N5004
    unless $I5032 goto if1171_end2414 
.annotate 'line', 1041
.annotate 'line', 1042
    find_lex $P5179, "$/"
    unless_null $P5179, fallback2424
    nqp_get_sc_object $P5180, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5179, $P5180
  fallback2424:
    set fb_tmp_245, $P5179
    repr_defined $I5035, fb_tmp_245
    unless $I5035 goto if1176_else2422 
    set $P5181, fb_tmp_245["name"]
    set $P5183, $P5181
    goto if1176_end2423
  if1176_else2422:
    null $P5182
    set $P5183, $P5182
  if1176_end2423:
    unless_null $P5183, vivi_11772425
    nqp_get_sc_object $P5184, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5183, $P5184
  vivi_11772425:
    $P5185 = $P5183."CURSOR"()
    $P5186 = $P5185."panic"("A my scoped package cannot have a multi-part name yet")
  if1171_end2414:
.annotate 'line', 1044
    find_dynamic_lex $P5187, "$*W"
    unless_null $P5187, fallback2426
    nqp_get_sc_object $P5189, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5188, $P5189
    set fb_tmp_246, $P5188
    repr_defined $I5036, fb_tmp_246
    unless $I5036 goto if1178_else2427 
    set $P5190, fb_tmp_246["$W"]
    set $P5192, $P5190
    goto if1178_end2428
  if1178_else2427:
    null $P5191
    set $P5192, $P5191
  if1178_end2428:
    unless_null $P5192, vivi_11792429
    nqp_get_sc_object $P5193, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5192, $P5193
  vivi_11792429:
    unless_null $P5192, vivi_11802430
    die "Contextual $*W not found"
    box $P5194, "Contextual $*W not found"
    set $P5192, $P5194
  vivi_11802430:
    set $P5187, $P5192
  fallback2426:
    find_lex $P5195, "$OUTER"
    find_lex $P5196, "$/"
    unless_null $P5196, fallback2437
    nqp_get_sc_object $P5197, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5196, $P5197
  fallback2437:
    set fb_tmp_249, $P5196
    repr_defined $I5039, fb_tmp_249
    unless $I5039 goto if1183_else2435 
    set $P5198, fb_tmp_249["name"]
    set $P5200, $P5198
    goto if1183_end2436
  if1183_else2435:
    null $P5199
    set $P5200, $P5199
  if1183_end2436:
    unless_null $P5200, vivi_11842438
    nqp_get_sc_object $P5201, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5200, $P5201
  vivi_11842438:
    set fb_tmp_248, $P5200
    repr_defined $I5038, fb_tmp_248
    unless $I5038 goto if1182_else2433 
    set $P5202, fb_tmp_248["identifier"]
    set $P5204, $P5202
    goto if1182_end2434
  if1182_else2433:
    null $P5203
    set $P5204, $P5203
  if1182_end2434:
    unless_null $P5204, vivi_11852439
    nqp_get_sc_object $P5205, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5204, $P5205
  vivi_11852439:
    set fb_tmp_247, $P5204
    repr_defined $I5037, fb_tmp_247
    unless $I5037 goto if1181_else2431 
    set $P5206, fb_tmp_247[0]
    set $P5208, $P5206
    goto if1181_end2432
  if1181_else2431:
    null $P5207
    set $P5208, $P5207
  if1181_end2432:
    unless_null $P5208, vivi_11862440
    nqp_get_sc_object $P5209, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5208, $P5209
  vivi_11862440:
    find_dynamic_lex $P5210, "$*PACKAGE"
    unless_null $P5210, fallback2441
    nqp_get_sc_object $P5212, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5211, $P5212
    set fb_tmp_250, $P5211
    repr_defined $I5040, fb_tmp_250
    unless $I5040 goto if1187_else2442 
    set $P5213, fb_tmp_250["$PACKAGE"]
    set $P5215, $P5213
    goto if1187_end2443
  if1187_else2442:
    null $P5214
    set $P5215, $P5214
  if1187_end2443:
    unless_null $P5215, vivi_11882444
    nqp_get_sc_object $P5216, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5215, $P5216
  vivi_11882444:
    unless_null $P5215, vivi_11892445
    die "Contextual $*PACKAGE not found"
    box $P5217, "Contextual $*PACKAGE not found"
    set $P5215, $P5217
  vivi_11892445:
    set $P5210, $P5215
  fallback2441:
    $P5218 = $P5187."install_lexical_symbol"($P5195, $P5208, $P5210)
    set $P5230, $P5218
    goto if1167_end2407
  if1167_else2406:
.annotate 'line', 1046
.annotate 'line', 1047
    find_lex $P5219, "$/"
    $P5220 = $P5219."CURSOR"()
    find_dynamic_lex $P5221, "$*SCOPE"
    unless_null $P5221, fallback2446
    nqp_get_sc_object $P5223, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5222, $P5223
    set fb_tmp_251, $P5222
    repr_defined $I5041, fb_tmp_251
    unless $I5041 goto if1190_else2447 
    set $P5224, fb_tmp_251["$SCOPE"]
    set $P5226, $P5224
    goto if1190_end2448
  if1190_else2447:
    null $P5225
    set $P5226, $P5225
  if1190_end2448:
    unless_null $P5226, vivi_11912449
    nqp_get_sc_object $P5227, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5226, $P5227
  vivi_11912449:
    unless_null $P5226, vivi_11922450
    die "Contextual $*SCOPE not found"
    box $P5228, "Contextual $*SCOPE not found"
    set $P5226, $P5228
  vivi_11922450:
    set $P5221, $P5226
  fallback2446:
    set $S5008, $P5221
    concat $S5007, $S5008, " scoped packages are not supported"
    $P5229 = $P5220."panic"($S5007)
    set $P5230, $P5229
  if1167_end2407:
    set $P5231, $P5230
  if1129_end2342:
    .return ($P5231) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_110_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1061
    .param pmc _lex_param_0 
    .lex "$*SCOPE", $P101 
    .lex "$*IN_DECL", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1232_start
    .local string rx1232_tgt
    .local int rx1232_pos
    .local int rx1232_off
    .local int rx1232_eos
    .local int rx1232_rep
    .local pmc rx1232_cur
    .local pmc rx1232_curclass
    .local pmc rx1232_bstack
    .local pmc rx1232_cstack
    rx1232_start = self."!cursor_start_all"()
    set rx1232_cur, rx1232_start[0]
    set rx1232_tgt, rx1232_start[1]
    set rx1232_pos, rx1232_start[2]
    set rx1232_curclass, rx1232_start[3]
    set rx1232_bstack, rx1232_start[4]
    set $I19, rx1232_start[5]
    store_lex unicode:"$\x{a2}", rx1232_cur
    length rx1232_eos, rx1232_tgt
    eq $I19, 1, rx1232_restart2501
    gt rx1232_pos, rx1232_eos, rx1232_fail2502
    repr_get_attr_int $I11, self, rx1232_curclass, "$!from"
    ne $I11, -1, rxscan1233_done2508
    goto rxscan1233_scan2507
  rxscan1233_loop2506:
    inc rx1232_pos
    gt rx1232_pos, rx1232_eos, rx1232_fail2502
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!from", rx1232_pos
  rxscan1233_scan2507:
    nqp_rxmark rx1232_bstack, rxscan1233_loop2506, rx1232_pos, 0
  rxscan1233_done2508:
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    store_lex unicode:"$\x{a2}", rx1232_cur
    box $P5003, "my"
    set $P101, $P5003
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    store_lex unicode:"$\x{a2}", rx1232_cur
    box $P5004, "variable"
    set $P102, $P5004
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    nqp_rxmark rx1232_bstack, rxquantr1237_done2513, -1, 0
  rxquantr1237_loop2512:
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    nqp_rxmark rx1232_bstack, rxsubrule1239_pass2515, -1, 0
  rxsubrule1239_pass2515:
    rx1232_cstack = rx1232_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    nqp_rxpeek $I19, rx1232_bstack, rxquantr1237_done2513
    inc $I19
    inc $I19
    set rx1232_rep, rx1232_bstack[$I19]
    nqp_rxcommit rx1232_bstack, rxquantr1237_done2513
    inc rx1232_rep
    nqp_rxmark rx1232_bstack, rxquantr1237_done2513, rx1232_pos, rx1232_rep
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    add $I11, rx1232_pos, 1
    gt $I11, rx1232_eos, rx1232_fail2502
    substr $S10, rx1232_tgt, rx1232_pos, 1
    ne $S10, ucs4:",", rx1232_fail2502
    add rx1232_pos, 1
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    goto rxquantr1237_loop2512
  rxquantr1237_done2513:
    repr_bind_attr_int rx1232_cur, rx1232_curclass, "$!pos", rx1232_pos
    $P11 = rx1232_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1232_curclass, "$!pos"
    lt $I11, 0, rx1232_fail2502
    repr_get_attr_int rx1232_pos, $P11, rx1232_curclass, "$!pos"
    rx1232_cur."!cursor_pass"(rx1232_pos, "role_params", 'backtrack'=>1)
    .return (rx1232_cur)
  rx1232_restart2501:
    repr_get_attr_obj rx1232_cstack, rx1232_cur, rx1232_curclass, "$!cstack"
  rx1232_fail2502:
    unless rx1232_bstack, rx1232_done2500
    pop $I19, rx1232_bstack
    if_null rx1232_cstack, rx1232_cstack_done2505
    unless rx1232_cstack, rx1232_cstack_done2505
    dec $I19
    set $P11, rx1232_cstack[$I19]
  rx1232_cstack_done2505:
    pop rx1232_rep, rx1232_bstack
    pop rx1232_pos, rx1232_bstack
    pop $I19, rx1232_bstack
    lt rx1232_pos, -1, rx1232_done2500
    lt rx1232_pos, 0, rx1232_fail2502
    eq $I19, 0, rx1232_fail2502
    nqp_islist $I20, rx1232_cstack
    unless $I20, rx1232_jump2503
    elements $I18, rx1232_bstack
    le $I18, 0, rx1232_cut2504
    dec $I18
    set $I18, rx1232_bstack[$I18]
  rx1232_cut2504:
    assign rx1232_cstack, $I18
  rx1232_jump2503:
    jump $I19
  rx1232_done2500:
    rx1232_cur."!cursor_fail"()
    .return (rx1232_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator" :subid("cuid_111_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1067
    .param pmc self 
    $P5001 = self."!protoregex"("scope_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_112_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1068
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1244_start
    .local string rx1244_tgt
    .local int rx1244_pos
    .local int rx1244_off
    .local int rx1244_eos
    .local int rx1244_rep
    .local pmc rx1244_cur
    .local pmc rx1244_curclass
    .local pmc rx1244_bstack
    .local pmc rx1244_cstack
    rx1244_start = self."!cursor_start_all"()
    set rx1244_cur, rx1244_start[0]
    set rx1244_tgt, rx1244_start[1]
    set rx1244_pos, rx1244_start[2]
    set rx1244_curclass, rx1244_start[3]
    set rx1244_bstack, rx1244_start[4]
    set $I19, rx1244_start[5]
    store_lex unicode:"$\x{a2}", rx1244_cur
    length rx1244_eos, rx1244_tgt
    eq $I19, 1, rx1244_restart2522
    gt rx1244_pos, rx1244_eos, rx1244_fail2523
    repr_get_attr_int $I11, self, rx1244_curclass, "$!from"
    ne $I11, -1, rxscan1245_done2529
    goto rxscan1245_scan2528
  rxscan1245_loop2527:
    inc rx1244_pos
    gt rx1244_pos, rx1244_eos, rx1244_fail2523
    repr_bind_attr_int rx1244_cur, rx1244_curclass, "$!from", rx1244_pos
  rxscan1245_scan2528:
    nqp_rxmark rx1244_bstack, rxscan1245_loop2527, rx1244_pos, 0
  rxscan1245_done2529:
    nqp_rxmark rx1244_bstack, rxcap1246_fail2531, rx1244_pos, 0
    add $I11, rx1244_pos, 2
    gt $I11, rx1244_eos, rx1244_fail2523
    substr $S10, rx1244_tgt, rx1244_pos, 2
    ne $S10, ucs4:"my", rx1244_fail2523
    add rx1244_pos, 2
    nqp_rxpeek $I19, rx1244_bstack, rxcap1246_fail2531
    inc $I19
    set $I11, rx1244_bstack[$I19]
    repr_bind_attr_int rx1244_cur, rx1244_curclass, "$!pos", rx1244_pos
    $P11 = rx1244_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1244_pos)
    rx1244_cstack = rx1244_cur."!cursor_capture"($P11, "sym")
    goto rxcap1246_done2530
  rxcap1246_fail2531:
    goto rx1244_fail2523
  rxcap1246_done2530:
    repr_bind_attr_int rx1244_cur, rx1244_curclass, "$!pos", rx1244_pos
    $P11 = rx1244_cur."scoped"("my")
    repr_get_attr_int $I11, $P11, rx1244_curclass, "$!pos"
    lt $I11, 0, rx1244_fail2523
    nqp_rxmark rx1244_bstack, rxsubrule1247_pass2532, -1, 0
  rxsubrule1247_pass2532:
    rx1244_cstack = rx1244_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1244_pos, $P11, rx1244_curclass, "$!pos"
    rx1244_cur."!cursor_pass"(rx1244_pos, "scope_declarator:sym<my>", 'backtrack'=>1)
    .return (rx1244_cur)
  rx1244_restart2522:
    repr_get_attr_obj rx1244_cstack, rx1244_cur, rx1244_curclass, "$!cstack"
  rx1244_fail2523:
    unless rx1244_bstack, rx1244_done2521
    pop $I19, rx1244_bstack
    if_null rx1244_cstack, rx1244_cstack_done2526
    unless rx1244_cstack, rx1244_cstack_done2526
    dec $I19
    set $P11, rx1244_cstack[$I19]
  rx1244_cstack_done2526:
    pop rx1244_rep, rx1244_bstack
    pop rx1244_pos, rx1244_bstack
    pop $I19, rx1244_bstack
    lt rx1244_pos, -1, rx1244_done2521
    lt rx1244_pos, 0, rx1244_fail2523
    eq $I19, 0, rx1244_fail2523
    nqp_islist $I20, rx1244_cstack
    unless $I20, rx1244_jump2524
    elements $I18, rx1244_bstack
    le $I18, 0, rx1244_cut2525
    dec $I18
    set $I18, rx1244_bstack[$I18]
  rx1244_cut2525:
    assign rx1244_cstack, $I18
  rx1244_jump2524:
    jump $I19
  rx1244_done2521:
    rx1244_cur."!cursor_fail"()
    .return (rx1244_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_113_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1069
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1248_start
    .local string rx1248_tgt
    .local int rx1248_pos
    .local int rx1248_off
    .local int rx1248_eos
    .local int rx1248_rep
    .local pmc rx1248_cur
    .local pmc rx1248_curclass
    .local pmc rx1248_bstack
    .local pmc rx1248_cstack
    rx1248_start = self."!cursor_start_all"()
    set rx1248_cur, rx1248_start[0]
    set rx1248_tgt, rx1248_start[1]
    set rx1248_pos, rx1248_start[2]
    set rx1248_curclass, rx1248_start[3]
    set rx1248_bstack, rx1248_start[4]
    set $I19, rx1248_start[5]
    store_lex unicode:"$\x{a2}", rx1248_cur
    length rx1248_eos, rx1248_tgt
    eq $I19, 1, rx1248_restart2535
    gt rx1248_pos, rx1248_eos, rx1248_fail2536
    repr_get_attr_int $I11, self, rx1248_curclass, "$!from"
    ne $I11, -1, rxscan1249_done2542
    goto rxscan1249_scan2541
  rxscan1249_loop2540:
    inc rx1248_pos
    gt rx1248_pos, rx1248_eos, rx1248_fail2536
    repr_bind_attr_int rx1248_cur, rx1248_curclass, "$!from", rx1248_pos
  rxscan1249_scan2541:
    nqp_rxmark rx1248_bstack, rxscan1249_loop2540, rx1248_pos, 0
  rxscan1249_done2542:
    nqp_rxmark rx1248_bstack, rxcap1250_fail2544, rx1248_pos, 0
    add $I11, rx1248_pos, 3
    gt $I11, rx1248_eos, rx1248_fail2536
    substr $S10, rx1248_tgt, rx1248_pos, 3
    ne $S10, ucs4:"our", rx1248_fail2536
    add rx1248_pos, 3
    nqp_rxpeek $I19, rx1248_bstack, rxcap1250_fail2544
    inc $I19
    set $I11, rx1248_bstack[$I19]
    repr_bind_attr_int rx1248_cur, rx1248_curclass, "$!pos", rx1248_pos
    $P11 = rx1248_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1248_pos)
    rx1248_cstack = rx1248_cur."!cursor_capture"($P11, "sym")
    goto rxcap1250_done2543
  rxcap1250_fail2544:
    goto rx1248_fail2536
  rxcap1250_done2543:
    repr_bind_attr_int rx1248_cur, rx1248_curclass, "$!pos", rx1248_pos
    $P11 = rx1248_cur."scoped"("our")
    repr_get_attr_int $I11, $P11, rx1248_curclass, "$!pos"
    lt $I11, 0, rx1248_fail2536
    nqp_rxmark rx1248_bstack, rxsubrule1251_pass2545, -1, 0
  rxsubrule1251_pass2545:
    rx1248_cstack = rx1248_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1248_pos, $P11, rx1248_curclass, "$!pos"
    rx1248_cur."!cursor_pass"(rx1248_pos, "scope_declarator:sym<our>", 'backtrack'=>1)
    .return (rx1248_cur)
  rx1248_restart2535:
    repr_get_attr_obj rx1248_cstack, rx1248_cur, rx1248_curclass, "$!cstack"
  rx1248_fail2536:
    unless rx1248_bstack, rx1248_done2534
    pop $I19, rx1248_bstack
    if_null rx1248_cstack, rx1248_cstack_done2539
    unless rx1248_cstack, rx1248_cstack_done2539
    dec $I19
    set $P11, rx1248_cstack[$I19]
  rx1248_cstack_done2539:
    pop rx1248_rep, rx1248_bstack
    pop rx1248_pos, rx1248_bstack
    pop $I19, rx1248_bstack
    lt rx1248_pos, -1, rx1248_done2534
    lt rx1248_pos, 0, rx1248_fail2536
    eq $I19, 0, rx1248_fail2536
    nqp_islist $I20, rx1248_cstack
    unless $I20, rx1248_jump2537
    elements $I18, rx1248_bstack
    le $I18, 0, rx1248_cut2538
    dec $I18
    set $I18, rx1248_bstack[$I18]
  rx1248_cut2538:
    assign rx1248_cstack, $I18
  rx1248_jump2537:
    jump $I19
  rx1248_done2534:
    rx1248_cur."!cursor_fail"()
    .return (rx1248_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_114_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1070
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1252_start
    .local string rx1252_tgt
    .local int rx1252_pos
    .local int rx1252_off
    .local int rx1252_eos
    .local int rx1252_rep
    .local pmc rx1252_cur
    .local pmc rx1252_curclass
    .local pmc rx1252_bstack
    .local pmc rx1252_cstack
    rx1252_start = self."!cursor_start_all"()
    set rx1252_cur, rx1252_start[0]
    set rx1252_tgt, rx1252_start[1]
    set rx1252_pos, rx1252_start[2]
    set rx1252_curclass, rx1252_start[3]
    set rx1252_bstack, rx1252_start[4]
    set $I19, rx1252_start[5]
    store_lex unicode:"$\x{a2}", rx1252_cur
    length rx1252_eos, rx1252_tgt
    eq $I19, 1, rx1252_restart2548
    gt rx1252_pos, rx1252_eos, rx1252_fail2549
    repr_get_attr_int $I11, self, rx1252_curclass, "$!from"
    ne $I11, -1, rxscan1253_done2555
    goto rxscan1253_scan2554
  rxscan1253_loop2553:
    inc rx1252_pos
    gt rx1252_pos, rx1252_eos, rx1252_fail2549
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!from", rx1252_pos
  rxscan1253_scan2554:
    nqp_rxmark rx1252_bstack, rxscan1253_loop2553, rx1252_pos, 0
  rxscan1253_done2555:
    nqp_rxmark rx1252_bstack, rxcap1254_fail2557, rx1252_pos, 0
    add $I11, rx1252_pos, 3
    gt $I11, rx1252_eos, rx1252_fail2549
    substr $S10, rx1252_tgt, rx1252_pos, 3
    ne $S10, ucs4:"has", rx1252_fail2549
    add rx1252_pos, 3
    nqp_rxpeek $I19, rx1252_bstack, rxcap1254_fail2557
    inc $I19
    set $I11, rx1252_bstack[$I19]
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1252_pos)
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "sym")
    goto rxcap1254_done2556
  rxcap1254_fail2557:
    goto rx1252_fail2549
  rxcap1254_done2556:
    repr_bind_attr_int rx1252_cur, rx1252_curclass, "$!pos", rx1252_pos
    $P11 = rx1252_cur."scoped"("has")
    repr_get_attr_int $I11, $P11, rx1252_curclass, "$!pos"
    lt $I11, 0, rx1252_fail2549
    nqp_rxmark rx1252_bstack, rxsubrule1255_pass2558, -1, 0
  rxsubrule1255_pass2558:
    rx1252_cstack = rx1252_cur."!cursor_capture"($P11, "scoped")
    repr_get_attr_int rx1252_pos, $P11, rx1252_curclass, "$!pos"
    rx1252_cur."!cursor_pass"(rx1252_pos, "scope_declarator:sym<has>", 'backtrack'=>1)
    .return (rx1252_cur)
  rx1252_restart2548:
    repr_get_attr_obj rx1252_cstack, rx1252_cur, rx1252_curclass, "$!cstack"
  rx1252_fail2549:
    unless rx1252_bstack, rx1252_done2547
    pop $I19, rx1252_bstack
    if_null rx1252_cstack, rx1252_cstack_done2552
    unless rx1252_cstack, rx1252_cstack_done2552
    dec $I19
    set $P11, rx1252_cstack[$I19]
  rx1252_cstack_done2552:
    pop rx1252_rep, rx1252_bstack
    pop rx1252_pos, rx1252_bstack
    pop $I19, rx1252_bstack
    lt rx1252_pos, -1, rx1252_done2547
    lt rx1252_pos, 0, rx1252_fail2549
    eq $I19, 0, rx1252_fail2549
    nqp_islist $I20, rx1252_cstack
    unless $I20, rx1252_jump2550
    elements $I18, rx1252_bstack
    le $I18, 0, rx1252_cut2551
    dec $I18
    set $I18, rx1252_bstack[$I18]
  rx1252_cut2551:
    assign rx1252_cstack, $I18
  rx1252_jump2550:
    jump $I19
  rx1252_done2547:
    rx1252_cur."!cursor_fail"()
    .return (rx1252_cur) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_115_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1072
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .lex "$*SCOPE", _lex_param_1 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1256_start
    .local string rx1256_tgt
    .local int rx1256_pos
    .local int rx1256_off
    .local int rx1256_eos
    .local int rx1256_rep
    .local pmc rx1256_cur
    .local pmc rx1256_curclass
    .local pmc rx1256_bstack
    .local pmc rx1256_cstack
    rx1256_start = self."!cursor_start_all"()
    set rx1256_cur, rx1256_start[0]
    set rx1256_tgt, rx1256_start[1]
    set rx1256_pos, rx1256_start[2]
    set rx1256_curclass, rx1256_start[3]
    set rx1256_bstack, rx1256_start[4]
    set $I19, rx1256_start[5]
    store_lex unicode:"$\x{a2}", rx1256_cur
    length rx1256_eos, rx1256_tgt
    eq $I19, 1, rx1256_restart2561
    gt rx1256_pos, rx1256_eos, rx1256_fail2562
    repr_get_attr_int $I11, self, rx1256_curclass, "$!from"
    ne $I11, -1, rxscan1257_done2568
    goto rxscan1257_scan2567
  rxscan1257_loop2566:
    inc rx1256_pos
    gt rx1256_pos, rx1256_eos, rx1256_fail2562
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!from", rx1256_pos
  rxscan1257_scan2567:
    nqp_rxmark rx1256_bstack, rxscan1257_loop2566, rx1256_pos, 0
  rxscan1257_done2568:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1258_02570
    nqp_push_label $P11, alt1258_12574
    nqp_push_label $P11, alt1258_22578
    nqp_rxmark rx1256_bstack, alt1258_end2569, -1, 0
    rx1256_cur."!alt"(rx1256_pos, "alt_nfa__21_1361537955.53711", $P11)
    goto rx1256_fail2562
  alt1258_02570:
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    nqp_rxmark rx1256_bstack, rxsubrule1260_pass2572, -1, 0
  rxsubrule1260_pass2572:
    rx1256_cstack = rx1256_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    goto alt1258_end2569
  alt1258_12574:
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."multi_declarator"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    nqp_rxmark rx1256_bstack, rxsubrule1263_pass2576, -1, 0
  rxsubrule1263_pass2576:
    rx1256_cstack = rx1256_cur."!cursor_capture"($P11, "multi_declarator")
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    goto alt1258_end2569
  alt1258_22578:
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."package_declarator"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    nqp_rxmark rx1256_bstack, rxsubrule1266_pass2580, -1, 0
  rxsubrule1266_pass2580:
    rx1256_cstack = rx1256_cur."!cursor_capture"($P11, "package_declarator")
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    repr_bind_attr_int rx1256_cur, rx1256_curclass, "$!pos", rx1256_pos
    $P11 = rx1256_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1256_curclass, "$!pos"
    lt $I11, 0, rx1256_fail2562
    repr_get_attr_int rx1256_pos, $P11, rx1256_curclass, "$!pos"
    goto alt1258_end2569
  alt1258_end2569:
    rx1256_cur."!cursor_pass"(rx1256_pos, "scoped", 'backtrack'=>1)
    .return (rx1256_cur)
  rx1256_restart2561:
    repr_get_attr_obj rx1256_cstack, rx1256_cur, rx1256_curclass, "$!cstack"
  rx1256_fail2562:
    unless rx1256_bstack, rx1256_done2560
    pop $I19, rx1256_bstack
    if_null rx1256_cstack, rx1256_cstack_done2565
    unless rx1256_cstack, rx1256_cstack_done2565
    dec $I19
    set $P11, rx1256_cstack[$I19]
  rx1256_cstack_done2565:
    pop rx1256_rep, rx1256_bstack
    pop rx1256_pos, rx1256_bstack
    pop $I19, rx1256_bstack
    lt rx1256_pos, -1, rx1256_done2560
    lt rx1256_pos, 0, rx1256_fail2562
    eq $I19, 0, rx1256_fail2562
    nqp_islist $I20, rx1256_cstack
    unless $I20, rx1256_jump2563
    elements $I18, rx1256_bstack
    le $I18, 0, rx1256_cut2564
    dec $I18
    set $I18, rx1256_bstack[$I18]
  rx1256_cut2564:
    assign rx1256_cstack, $I18
  rx1256_jump2563:
    jump $I19
  rx1256_done2560:
    rx1256_cur."!cursor_fail"()
    .return (rx1256_cur) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_116_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1078
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_406_1361537952.49511' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1268_start
    .local string rx1268_tgt
    .local int rx1268_pos
    .local int rx1268_off
    .local int rx1268_eos
    .local int rx1268_rep
    .local pmc rx1268_cur
    .local pmc rx1268_curclass
    .local pmc rx1268_bstack
    .local pmc rx1268_cstack
    rx1268_start = self."!cursor_start_all"()
    set rx1268_cur, rx1268_start[0]
    set rx1268_tgt, rx1268_start[1]
    set rx1268_pos, rx1268_start[2]
    set rx1268_curclass, rx1268_start[3]
    set rx1268_bstack, rx1268_start[4]
    set $I19, rx1268_start[5]
    store_lex unicode:"$\x{a2}", rx1268_cur
    length rx1268_eos, rx1268_tgt
    eq $I19, 1, rx1268_restart2584
    gt rx1268_pos, rx1268_eos, rx1268_fail2585
    repr_get_attr_int $I11, self, rx1268_curclass, "$!from"
    ne $I11, -1, rxscan1269_done2591
    goto rxscan1269_scan2590
  rxscan1269_loop2589:
    inc rx1268_pos
    gt rx1268_pos, rx1268_eos, rx1268_fail2585
    repr_bind_attr_int rx1268_cur, rx1268_curclass, "$!from", rx1268_pos
  rxscan1269_scan2590:
    nqp_rxmark rx1268_bstack, rxscan1269_loop2589, rx1268_pos, 0
  rxscan1269_done2591:
    repr_bind_attr_int rx1268_cur, rx1268_curclass, "$!pos", rx1268_pos
    $P11 = rx1268_cur."name"()
    repr_get_attr_int $I11, $P11, rx1268_curclass, "$!pos"
    lt $I11, 0, rx1268_fail2585
    nqp_rxmark rx1268_bstack, rxsubrule1270_pass2592, -1, 0
  rxsubrule1270_pass2592:
    rx1268_cstack = rx1268_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1268_pos, $P11, rx1268_curclass, "$!pos"
    repr_bind_attr_int rx1268_cur, rx1268_curclass, "$!pos", rx1268_pos
    store_lex unicode:"$\x{a2}", rx1268_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_406_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1268_fail2585
    rx1268_cur."!cursor_pass"(rx1268_pos, "typename", 'backtrack'=>1)
    .return (rx1268_cur)
  rx1268_restart2584:
    repr_get_attr_obj rx1268_cstack, rx1268_cur, rx1268_curclass, "$!cstack"
  rx1268_fail2585:
    unless rx1268_bstack, rx1268_done2583
    pop $I19, rx1268_bstack
    if_null rx1268_cstack, rx1268_cstack_done2588
    unless rx1268_cstack, rx1268_cstack_done2588
    dec $I19
    set $P11, rx1268_cstack[$I19]
  rx1268_cstack_done2588:
    pop rx1268_rep, rx1268_bstack
    pop rx1268_pos, rx1268_bstack
    pop $I19, rx1268_bstack
    lt rx1268_pos, -1, rx1268_done2583
    lt rx1268_pos, 0, rx1268_fail2585
    eq $I19, 0, rx1268_fail2585
    nqp_islist $I20, rx1268_cstack
    unless $I20, rx1268_jump2586
    elements $I18, rx1268_bstack
    le $I18, 0, rx1268_cut2587
    dec $I18
    set $I18, rx1268_bstack[$I18]
  rx1268_cut2587:
    assign rx1268_cstack, $I18
  rx1268_jump2586:
    jump $I19
  rx1268_done2583:
    rx1268_cur."!cursor_fail"()
    .return (rx1268_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_406_1361537952.49511") :anon :lex :outer("cuid_116_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1080
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback2593
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_252, $P5002
    repr_defined $I5001, fb_tmp_252
    unless $I5001 goto if1271_else2594 
    set $P5004, fb_tmp_252["$W"]
    set $P5006, $P5004
    goto if1271_end2595
  if1271_else2594:
    null $P5005
    set $P5006, $P5005
  if1271_end2595:
    unless_null $P5006, vivi_12722596
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_12722596:
    unless_null $P5006, vivi_12732597
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_12732597:
    set $P5001, $P5006
  fallback2593:
    find_lex $P5009, "$/"
    find_lex $P5010, "$/"
    unless_null $P5010, fallback2602
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  fallback2602:
    set fb_tmp_254, $P5010
    repr_defined $I5003, fb_tmp_254
    unless $I5003 goto if1275_else2600 
    set $P5012, fb_tmp_254["name"]
    set $P5014, $P5012
    goto if1275_end2601
  if1275_else2600:
    null $P5013
    set $P5014, $P5013
  if1275_end2601:
    unless_null $P5014, vivi_12762603
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_12762603:
    set fb_tmp_253, $P5014
    repr_defined $I5002, fb_tmp_253
    unless $I5002 goto if1274_else2598 
    set $P5016, fb_tmp_253["identifier"]
    set $P5018, $P5016
    goto if1274_end2599
  if1274_else2598:
    null $P5017
    set $P5018, $P5017
  if1274_end2599:
    unless_null $P5018, vivi_12772604
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_12772604:
    $P5020 = $P5001."known_sym"($P5009, $P5018)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_117_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1083
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1278_start
    .local string rx1278_tgt
    .local int rx1278_pos
    .local int rx1278_off
    .local int rx1278_eos
    .local int rx1278_rep
    .local pmc rx1278_cur
    .local pmc rx1278_curclass
    .local pmc rx1278_bstack
    .local pmc rx1278_cstack
    rx1278_start = self."!cursor_start_all"()
    set rx1278_cur, rx1278_start[0]
    set rx1278_tgt, rx1278_start[1]
    set rx1278_pos, rx1278_start[2]
    set rx1278_curclass, rx1278_start[3]
    set rx1278_bstack, rx1278_start[4]
    set $I19, rx1278_start[5]
    store_lex unicode:"$\x{a2}", rx1278_cur
    length rx1278_eos, rx1278_tgt
    eq $I19, 1, rx1278_restart2607
    gt rx1278_pos, rx1278_eos, rx1278_fail2608
    repr_get_attr_int $I11, self, rx1278_curclass, "$!from"
    ne $I11, -1, rxscan1279_done2614
    goto rxscan1279_scan2613
  rxscan1279_loop2612:
    inc rx1278_pos
    gt rx1278_pos, rx1278_eos, rx1278_fail2608
    repr_bind_attr_int rx1278_cur, rx1278_curclass, "$!from", rx1278_pos
  rxscan1279_scan2613:
    nqp_rxmark rx1278_bstack, rxscan1279_loop2612, rx1278_pos, 0
  rxscan1279_done2614:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1280_02616
    nqp_push_label $P11, alt1280_12618
    nqp_rxmark rx1278_bstack, alt1280_end2615, -1, 0
    rx1278_cur."!alt"(rx1278_pos, "alt_nfa__22_1361537955.56831", $P11)
    goto rx1278_fail2608
  alt1280_02616:
    repr_bind_attr_int rx1278_cur, rx1278_curclass, "$!pos", rx1278_pos
    $P11 = rx1278_cur."variable_declarator"()
    repr_get_attr_int $I11, $P11, rx1278_curclass, "$!pos"
    lt $I11, 0, rx1278_fail2608
    nqp_rxmark rx1278_bstack, rxsubrule1281_pass2617, -1, 0
  rxsubrule1281_pass2617:
    rx1278_cstack = rx1278_cur."!cursor_capture"($P11, "variable_declarator")
    repr_get_attr_int rx1278_pos, $P11, rx1278_curclass, "$!pos"
    goto alt1280_end2615
  alt1280_12618:
    repr_bind_attr_int rx1278_cur, rx1278_curclass, "$!pos", rx1278_pos
    $P11 = rx1278_cur."routine_declarator"()
    repr_get_attr_int $I11, $P11, rx1278_curclass, "$!pos"
    lt $I11, 0, rx1278_fail2608
    nqp_rxmark rx1278_bstack, rxsubrule1282_pass2619, -1, 0
  rxsubrule1282_pass2619:
    rx1278_cstack = rx1278_cur."!cursor_capture"($P11, "routine_declarator")
    repr_get_attr_int rx1278_pos, $P11, rx1278_curclass, "$!pos"
    goto alt1280_end2615
  alt1280_end2615:
    rx1278_cur."!cursor_pass"(rx1278_pos, "declarator", 'backtrack'=>1)
    .return (rx1278_cur)
  rx1278_restart2607:
    repr_get_attr_obj rx1278_cstack, rx1278_cur, rx1278_curclass, "$!cstack"
  rx1278_fail2608:
    unless rx1278_bstack, rx1278_done2606
    pop $I19, rx1278_bstack
    if_null rx1278_cstack, rx1278_cstack_done2611
    unless rx1278_cstack, rx1278_cstack_done2611
    dec $I19
    set $P11, rx1278_cstack[$I19]
  rx1278_cstack_done2611:
    pop rx1278_rep, rx1278_bstack
    pop rx1278_pos, rx1278_bstack
    pop $I19, rx1278_bstack
    lt rx1278_pos, -1, rx1278_done2606
    lt rx1278_pos, 0, rx1278_fail2608
    eq $I19, 0, rx1278_fail2608
    nqp_islist $I20, rx1278_cstack
    unless $I20, rx1278_jump2609
    elements $I18, rx1278_bstack
    le $I18, 0, rx1278_cut2610
    dec $I18
    set $I18, rx1278_bstack[$I18]
  rx1278_cut2610:
    assign rx1278_cstack, $I18
  rx1278_jump2609:
    jump $I19
  rx1278_done2606:
    rx1278_cur."!cursor_fail"()
    .return (rx1278_cur) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_118_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1088
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_407_1361537952.49511' 
    capture_lex $P5006 
    .lex "$*IN_DECL", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1283_start
    .local string rx1283_tgt
    .local int rx1283_pos
    .local int rx1283_off
    .local int rx1283_eos
    .local int rx1283_rep
    .local pmc rx1283_cur
    .local pmc rx1283_curclass
    .local pmc rx1283_bstack
    .local pmc rx1283_cstack
    rx1283_start = self."!cursor_start_all"()
    set rx1283_cur, rx1283_start[0]
    set rx1283_tgt, rx1283_start[1]
    set rx1283_pos, rx1283_start[2]
    set rx1283_curclass, rx1283_start[3]
    set rx1283_bstack, rx1283_start[4]
    set $I19, rx1283_start[5]
    store_lex unicode:"$\x{a2}", rx1283_cur
    length rx1283_eos, rx1283_tgt
    eq $I19, 1, rx1283_restart2622
    gt rx1283_pos, rx1283_eos, rx1283_fail2623
    repr_get_attr_int $I11, self, rx1283_curclass, "$!from"
    ne $I11, -1, rxscan1284_done2629
    goto rxscan1284_scan2628
  rxscan1284_loop2627:
    inc rx1283_pos
    gt rx1283_pos, rx1283_eos, rx1283_fail2623
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!from", rx1283_pos
  rxscan1284_scan2628:
    nqp_rxmark rx1283_bstack, rxscan1284_loop2627, rx1283_pos, 0
  rxscan1284_done2629:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    nqp_rxmark rx1283_bstack, rxquantr1286_done2632, rx1283_pos, 0
  rxquantr1286_loop2631:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    goto rxsubrule1287_pass2633
  rxsubrule1287_back2634:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
  rxsubrule1287_pass2633:
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "typename")
    set_addr $I11, rxsubrule1287_back2634
    push rx1283_bstack, $I11
    push rx1283_bstack, 0
    push rx1283_bstack, rx1283_pos
    elements $I11, rx1283_cstack
    push rx1283_bstack, $I11
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    nqp_rxpeek $I19, rx1283_bstack, rxquantr1286_done2632
    inc $I19
    inc $I19
    set rx1283_rep, rx1283_bstack[$I19]
    nqp_rxcommit rx1283_bstack, rxquantr1286_done2632
    inc rx1283_rep
  rxquantr1286_done2632:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    store_lex unicode:"$\x{a2}", rx1283_cur
    box $P5002, "variable"
    set $P101, $P5002
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    nqp_rxmark rx1283_bstack, rxsubrule1290_pass2637, -1, 0
  rxsubrule1290_pass2637:
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    store_lex unicode:"$\x{a2}", rx1283_cur
    $P5003 = $P102."MATCH"()
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_407_1361537952.49511' 
    capture_lex $P5004
    $P5005 = $P5004()
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    nqp_rxmark rx1283_bstack, rxquantr1293_done2641, rx1283_pos, 0
  rxquantr1293_loop2640:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    goto rxsubrule1294_pass2642
  rxsubrule1294_back2643:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
  rxsubrule1294_pass2642:
    rx1283_cstack = rx1283_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1294_back2643
    push rx1283_bstack, $I11
    push rx1283_bstack, 0
    push rx1283_bstack, rx1283_pos
    elements $I11, rx1283_cstack
    push rx1283_bstack, $I11
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    nqp_rxpeek $I19, rx1283_bstack, rxquantr1293_done2641
    inc $I19
    inc $I19
    set rx1283_rep, rx1283_bstack[$I19]
    nqp_rxcommit rx1283_bstack, rxquantr1293_done2641
    inc rx1283_rep
    nqp_rxmark rx1283_bstack, rxquantr1293_done2641, rx1283_pos, rx1283_rep
    goto rxquantr1293_loop2640
  rxquantr1293_done2641:
    repr_bind_attr_int rx1283_cur, rx1283_curclass, "$!pos", rx1283_pos
    $P11 = rx1283_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1283_curclass, "$!pos"
    lt $I11, 0, rx1283_fail2623
    repr_get_attr_int rx1283_pos, $P11, rx1283_curclass, "$!pos"
    rx1283_cur."!cursor_pass"(rx1283_pos, "variable_declarator", 'backtrack'=>1)
    .return (rx1283_cur)
  rx1283_restart2622:
    repr_get_attr_obj rx1283_cstack, rx1283_cur, rx1283_curclass, "$!cstack"
  rx1283_fail2623:
    unless rx1283_bstack, rx1283_done2621
    pop $I19, rx1283_bstack
    if_null rx1283_cstack, rx1283_cstack_done2626
    unless rx1283_cstack, rx1283_cstack_done2626
    dec $I19
    set $P11, rx1283_cstack[$I19]
  rx1283_cstack_done2626:
    pop rx1283_rep, rx1283_bstack
    pop rx1283_pos, rx1283_bstack
    pop $I19, rx1283_bstack
    lt rx1283_pos, -1, rx1283_done2621
    lt rx1283_pos, 0, rx1283_fail2623
    eq $I19, 0, rx1283_fail2623
    nqp_islist $I20, rx1283_cstack
    unless $I20, rx1283_jump2624
    elements $I18, rx1283_bstack
    le $I18, 0, rx1283_cut2625
    dec $I18
    set $I18, rx1283_bstack[$I18]
  rx1283_cut2625:
    assign rx1283_cstack, $I18
  rx1283_jump2624:
    jump $I19
  rx1283_done2621:
    rx1283_cur."!cursor_fail"()
    .return (rx1283_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_407_1361537952.49511") :anon :lex :outer("cuid_118_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1092

    box $P5001, 0
    store_dynamic_lex "$*IN_DECL", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator" :subid("cuid_119_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1096
    .param pmc self 
    $P5001 = self."!protoregex"("routine_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_120_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1097
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1296_start
    .local string rx1296_tgt
    .local int rx1296_pos
    .local int rx1296_off
    .local int rx1296_eos
    .local int rx1296_rep
    .local pmc rx1296_cur
    .local pmc rx1296_curclass
    .local pmc rx1296_bstack
    .local pmc rx1296_cstack
    rx1296_start = self."!cursor_start_all"()
    set rx1296_cur, rx1296_start[0]
    set rx1296_tgt, rx1296_start[1]
    set rx1296_pos, rx1296_start[2]
    set rx1296_curclass, rx1296_start[3]
    set rx1296_bstack, rx1296_start[4]
    set $I19, rx1296_start[5]
    store_lex unicode:"$\x{a2}", rx1296_cur
    length rx1296_eos, rx1296_tgt
    eq $I19, 1, rx1296_restart2647
    gt rx1296_pos, rx1296_eos, rx1296_fail2648
    repr_get_attr_int $I11, self, rx1296_curclass, "$!from"
    ne $I11, -1, rxscan1297_done2654
    goto rxscan1297_scan2653
  rxscan1297_loop2652:
    inc rx1296_pos
    gt rx1296_pos, rx1296_eos, rx1296_fail2648
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!from", rx1296_pos
  rxscan1297_scan2653:
    nqp_rxmark rx1296_bstack, rxscan1297_loop2652, rx1296_pos, 0
  rxscan1297_done2654:
    nqp_rxmark rx1296_bstack, rxcap1298_fail2656, rx1296_pos, 0
    add $I11, rx1296_pos, 3
    gt $I11, rx1296_eos, rx1296_fail2648
    substr $S10, rx1296_tgt, rx1296_pos, 3
    ne $S10, ucs4:"sub", rx1296_fail2648
    add rx1296_pos, 3
    nqp_rxpeek $I19, rx1296_bstack, rxcap1298_fail2656
    inc $I19
    set $I11, rx1296_bstack[$I19]
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!pos", rx1296_pos
    $P11 = rx1296_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1296_pos)
    rx1296_cstack = rx1296_cur."!cursor_capture"($P11, "sym")
    goto rxcap1298_done2655
  rxcap1298_fail2656:
    goto rx1296_fail2648
  rxcap1298_done2655:
    repr_bind_attr_int rx1296_cur, rx1296_curclass, "$!pos", rx1296_pos
    $P11 = rx1296_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1296_curclass, "$!pos"
    lt $I11, 0, rx1296_fail2648
    nqp_rxmark rx1296_bstack, rxsubrule1299_pass2657, -1, 0
  rxsubrule1299_pass2657:
    rx1296_cstack = rx1296_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1296_pos, $P11, rx1296_curclass, "$!pos"
    rx1296_cur."!cursor_pass"(rx1296_pos, "routine_declarator:sym<sub>", 'backtrack'=>1)
    .return (rx1296_cur)
  rx1296_restart2647:
    repr_get_attr_obj rx1296_cstack, rx1296_cur, rx1296_curclass, "$!cstack"
  rx1296_fail2648:
    unless rx1296_bstack, rx1296_done2646
    pop $I19, rx1296_bstack
    if_null rx1296_cstack, rx1296_cstack_done2651
    unless rx1296_cstack, rx1296_cstack_done2651
    dec $I19
    set $P11, rx1296_cstack[$I19]
  rx1296_cstack_done2651:
    pop rx1296_rep, rx1296_bstack
    pop rx1296_pos, rx1296_bstack
    pop $I19, rx1296_bstack
    lt rx1296_pos, -1, rx1296_done2646
    lt rx1296_pos, 0, rx1296_fail2648
    eq $I19, 0, rx1296_fail2648
    nqp_islist $I20, rx1296_cstack
    unless $I20, rx1296_jump2649
    elements $I18, rx1296_bstack
    le $I18, 0, rx1296_cut2650
    dec $I18
    set $I18, rx1296_bstack[$I18]
  rx1296_cut2650:
    assign rx1296_cstack, $I18
  rx1296_jump2649:
    jump $I19
  rx1296_done2646:
    rx1296_cur."!cursor_fail"()
    .return (rx1296_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_121_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1098
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1300_start
    .local string rx1300_tgt
    .local int rx1300_pos
    .local int rx1300_off
    .local int rx1300_eos
    .local int rx1300_rep
    .local pmc rx1300_cur
    .local pmc rx1300_curclass
    .local pmc rx1300_bstack
    .local pmc rx1300_cstack
    rx1300_start = self."!cursor_start_all"()
    set rx1300_cur, rx1300_start[0]
    set rx1300_tgt, rx1300_start[1]
    set rx1300_pos, rx1300_start[2]
    set rx1300_curclass, rx1300_start[3]
    set rx1300_bstack, rx1300_start[4]
    set $I19, rx1300_start[5]
    store_lex unicode:"$\x{a2}", rx1300_cur
    length rx1300_eos, rx1300_tgt
    eq $I19, 1, rx1300_restart2660
    gt rx1300_pos, rx1300_eos, rx1300_fail2661
    repr_get_attr_int $I11, self, rx1300_curclass, "$!from"
    ne $I11, -1, rxscan1301_done2667
    goto rxscan1301_scan2666
  rxscan1301_loop2665:
    inc rx1300_pos
    gt rx1300_pos, rx1300_eos, rx1300_fail2661
    repr_bind_attr_int rx1300_cur, rx1300_curclass, "$!from", rx1300_pos
  rxscan1301_scan2666:
    nqp_rxmark rx1300_bstack, rxscan1301_loop2665, rx1300_pos, 0
  rxscan1301_done2667:
    nqp_rxmark rx1300_bstack, rxcap1302_fail2669, rx1300_pos, 0
    add $I11, rx1300_pos, 6
    gt $I11, rx1300_eos, rx1300_fail2661
    substr $S10, rx1300_tgt, rx1300_pos, 6
    ne $S10, ucs4:"method", rx1300_fail2661
    add rx1300_pos, 6
    nqp_rxpeek $I19, rx1300_bstack, rxcap1302_fail2669
    inc $I19
    set $I11, rx1300_bstack[$I19]
    repr_bind_attr_int rx1300_cur, rx1300_curclass, "$!pos", rx1300_pos
    $P11 = rx1300_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1300_pos)
    rx1300_cstack = rx1300_cur."!cursor_capture"($P11, "sym")
    goto rxcap1302_done2668
  rxcap1302_fail2669:
    goto rx1300_fail2661
  rxcap1302_done2668:
    repr_bind_attr_int rx1300_cur, rx1300_curclass, "$!pos", rx1300_pos
    $P11 = rx1300_cur."method_def"()
    repr_get_attr_int $I11, $P11, rx1300_curclass, "$!pos"
    lt $I11, 0, rx1300_fail2661
    nqp_rxmark rx1300_bstack, rxsubrule1303_pass2670, -1, 0
  rxsubrule1303_pass2670:
    rx1300_cstack = rx1300_cur."!cursor_capture"($P11, "method_def")
    repr_get_attr_int rx1300_pos, $P11, rx1300_curclass, "$!pos"
    rx1300_cur."!cursor_pass"(rx1300_pos, "routine_declarator:sym<method>", 'backtrack'=>1)
    .return (rx1300_cur)
  rx1300_restart2660:
    repr_get_attr_obj rx1300_cstack, rx1300_cur, rx1300_curclass, "$!cstack"
  rx1300_fail2661:
    unless rx1300_bstack, rx1300_done2659
    pop $I19, rx1300_bstack
    if_null rx1300_cstack, rx1300_cstack_done2664
    unless rx1300_cstack, rx1300_cstack_done2664
    dec $I19
    set $P11, rx1300_cstack[$I19]
  rx1300_cstack_done2664:
    pop rx1300_rep, rx1300_bstack
    pop rx1300_pos, rx1300_bstack
    pop $I19, rx1300_bstack
    lt rx1300_pos, -1, rx1300_done2659
    lt rx1300_pos, 0, rx1300_fail2661
    eq $I19, 0, rx1300_fail2661
    nqp_islist $I20, rx1300_cstack
    unless $I20, rx1300_jump2662
    elements $I18, rx1300_bstack
    le $I18, 0, rx1300_cut2663
    dec $I18
    set $I18, rx1300_bstack[$I18]
  rx1300_cut2663:
    assign rx1300_cstack, $I18
  rx1300_jump2662:
    jump $I19
  rx1300_done2659:
    rx1300_cur."!cursor_fail"()
    .return (rx1300_cur) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_122_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1100
    .param pmc _lex_param_0 
    .lex "$*RETURN_USED", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1304_start
    .local string rx1304_tgt
    .local int rx1304_pos
    .local int rx1304_off
    .local int rx1304_eos
    .local int rx1304_rep
    .local pmc rx1304_cur
    .local pmc rx1304_curclass
    .local pmc rx1304_bstack
    .local pmc rx1304_cstack
    rx1304_start = self."!cursor_start_all"()
    set rx1304_cur, rx1304_start[0]
    set rx1304_tgt, rx1304_start[1]
    set rx1304_pos, rx1304_start[2]
    set rx1304_curclass, rx1304_start[3]
    set rx1304_bstack, rx1304_start[4]
    set $I19, rx1304_start[5]
    store_lex unicode:"$\x{a2}", rx1304_cur
    length rx1304_eos, rx1304_tgt
    eq $I19, 1, rx1304_restart2673
    gt rx1304_pos, rx1304_eos, rx1304_fail2674
    repr_get_attr_int $I11, self, rx1304_curclass, "$!from"
    ne $I11, -1, rxscan1305_done2680
    goto rxscan1305_scan2679
  rxscan1305_loop2678:
    inc rx1304_pos
    gt rx1304_pos, rx1304_eos, rx1304_fail2674
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!from", rx1304_pos
  rxscan1305_scan2679:
    nqp_rxmark rx1304_bstack, rxscan1305_loop2678, rx1304_pos, 0
  rxscan1305_done2680:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    store_lex unicode:"$\x{a2}", rx1304_cur
    box $P5002, 0
    set $P101, $P5002
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    nqp_rxmark rx1304_bstack, rxquantr1308_done2684, rx1304_pos, 0
  rxquantr1308_loop2683:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    nqp_rxmark rx1304_bstack, rxcap1310_fail2687, rx1304_pos, 0
    nqp_rxmark rx1304_bstack, rxquantr1311_done2689, rx1304_pos, 0
  rxquantr1311_loop2688:
    add $I11, rx1304_pos, 1
    gt $I11, rx1304_eos, rx1304_fail2674
    substr $S10, rx1304_tgt, rx1304_pos, 1
    ne $S10, ucs4:"&", rx1304_fail2674
    add rx1304_pos, 1
    nqp_rxpeek $I19, rx1304_bstack, rxquantr1311_done2689
    inc $I19
    inc $I19
    set rx1304_rep, rx1304_bstack[$I19]
    nqp_rxcommit rx1304_bstack, rxquantr1311_done2689
    inc rx1304_rep
  rxquantr1311_done2689:
    nqp_rxpeek $I19, rx1304_bstack, rxcap1310_fail2687
    inc $I19
    set $I11, rx1304_bstack[$I19]
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1304_pos)
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "sigil")
    goto rxcap1310_done2686
  rxcap1310_fail2687:
    goto rx1304_fail2674
  rxcap1310_done2686:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    nqp_rxmark rx1304_bstack, rxsubrule1312_pass2690, -1, 0
  rxsubrule1312_pass2690:
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    nqp_rxpeek $I19, rx1304_bstack, rxquantr1308_done2684
    inc $I19
    inc $I19
    set rx1304_rep, rx1304_bstack[$I19]
    nqp_rxcommit rx1304_bstack, rxquantr1308_done2684
    inc rx1304_rep
  rxquantr1308_done2684:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
  alt1317_02696:
    nqp_rxmark rx1304_bstack, alt1317_12702, rx1304_pos, 0
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    add $I11, rx1304_pos, 1
    gt $I11, rx1304_eos, rx1304_fail2674
    substr $S10, rx1304_tgt, rx1304_pos, 1
    ne $S10, ucs4:"(", rx1304_fail2674
    add rx1304_pos, 1
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    nqp_rxmark rx1304_bstack, rxsubrule1320_pass2699, -1, 0
  rxsubrule1320_pass2699:
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    add $I11, rx1304_pos, 1
    gt $I11, rx1304_eos, rx1304_fail2674
    substr $S10, rx1304_tgt, rx1304_pos, 1
    ne $S10, ucs4:")", rx1304_fail2674
    add rx1304_pos, 1
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    goto alt1317_end2695
  alt1317_12702:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
  alt1317_end2695:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    nqp_rxmark rx1304_bstack, rxquantr1327_done2708, rx1304_pos, 0
  rxquantr1327_loop2707:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    goto rxsubrule1328_pass2709
  rxsubrule1328_back2710:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
  rxsubrule1328_pass2709:
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1328_back2710
    push rx1304_bstack, $I11
    push rx1304_bstack, 0
    push rx1304_bstack, rx1304_pos
    elements $I11, rx1304_cstack
    push rx1304_bstack, $I11
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    nqp_rxpeek $I19, rx1304_bstack, rxquantr1327_done2708
    inc $I19
    inc $I19
    set rx1304_rep, rx1304_bstack[$I19]
    nqp_rxcommit rx1304_bstack, rxquantr1327_done2708
    inc rx1304_rep
    nqp_rxmark rx1304_bstack, rxquantr1327_done2708, rx1304_pos, rx1304_rep
    goto rxquantr1327_loop2707
  rxquantr1327_done2708:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1330_02713
    nqp_push_label $P11, alt1330_12717
    nqp_rxmark rx1304_bstack, alt1330_end2712, -1, 0
    rx1304_cur."!alt"(rx1304_pos, "alt_nfa__23_1361537955.63071", $P11)
    goto rx1304_fail2674
  alt1330_02713:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    nqp_rxmark rx1304_bstack, rxsubrule1332_pass2715, -1, 0
  rxsubrule1332_pass2715:
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    goto alt1330_end2712
  alt1330_12717:
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    nqp_rxmark rx1304_bstack, rxsubrule1335_pass2719, -1, 0
  rxsubrule1335_pass2719:
    rx1304_cstack = rx1304_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    goto alt1330_end2712
  alt1330_end2712:
    nqp_rxcommit rx1304_bstack, alt1330_end2712
    repr_bind_attr_int rx1304_cur, rx1304_curclass, "$!pos", rx1304_pos
    $P11 = rx1304_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1304_curclass, "$!pos"
    lt $I11, 0, rx1304_fail2674
    repr_get_attr_int rx1304_pos, $P11, rx1304_curclass, "$!pos"
    rx1304_cur."!cursor_pass"(rx1304_pos, "routine_def", 'backtrack'=>1)
    .return (rx1304_cur)
  rx1304_restart2673:
    repr_get_attr_obj rx1304_cstack, rx1304_cur, rx1304_curclass, "$!cstack"
  rx1304_fail2674:
    unless rx1304_bstack, rx1304_done2672
    pop $I19, rx1304_bstack
    if_null rx1304_cstack, rx1304_cstack_done2677
    unless rx1304_cstack, rx1304_cstack_done2677
    dec $I19
    set $P11, rx1304_cstack[$I19]
  rx1304_cstack_done2677:
    pop rx1304_rep, rx1304_bstack
    pop rx1304_pos, rx1304_bstack
    pop $I19, rx1304_bstack
    lt rx1304_pos, -1, rx1304_done2672
    lt rx1304_pos, 0, rx1304_fail2674
    eq $I19, 0, rx1304_fail2674
    nqp_islist $I20, rx1304_cstack
    unless $I20, rx1304_jump2675
    elements $I18, rx1304_bstack
    le $I18, 0, rx1304_cut2676
    dec $I18
    set $I18, rx1304_bstack[$I18]
  rx1304_cut2676:
    assign rx1304_cstack, $I18
  rx1304_jump2675:
    jump $I19
  rx1304_done2672:
    rx1304_cur."!cursor_fail"()
    .return (rx1304_cur) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_123_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1113
    .param pmc _lex_param_0 
    .const 'Sub' $P5008 = 'cuid_408_1361537952.49511' 
    capture_lex $P5008 
    .lex "$*RETURN_USED", $P101 
    .lex "$*INVOCANT_OK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set self, _lex_param_0
    .local pmc rx1338_start
    .local string rx1338_tgt
    .local int rx1338_pos
    .local int rx1338_off
    .local int rx1338_eos
    .local int rx1338_rep
    .local pmc rx1338_cur
    .local pmc rx1338_curclass
    .local pmc rx1338_bstack
    .local pmc rx1338_cstack
    rx1338_start = self."!cursor_start_all"()
    set rx1338_cur, rx1338_start[0]
    set rx1338_tgt, rx1338_start[1]
    set rx1338_pos, rx1338_start[2]
    set rx1338_curclass, rx1338_start[3]
    set rx1338_bstack, rx1338_start[4]
    set $I19, rx1338_start[5]
    store_lex unicode:"$\x{a2}", rx1338_cur
    length rx1338_eos, rx1338_tgt
    eq $I19, 1, rx1338_restart2724
    gt rx1338_pos, rx1338_eos, rx1338_fail2725
    repr_get_attr_int $I11, self, rx1338_curclass, "$!from"
    ne $I11, -1, rxscan1339_done2731
    goto rxscan1339_scan2730
  rxscan1339_loop2729:
    inc rx1338_pos
    gt rx1338_pos, rx1338_eos, rx1338_fail2725
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!from", rx1338_pos
  rxscan1339_scan2730:
    nqp_rxmark rx1338_bstack, rxscan1339_loop2729, rx1338_pos, 0
  rxscan1339_done2731:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    store_lex unicode:"$\x{a2}", rx1338_cur
    box $P5003, 0
    set $P101, $P5003
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    store_lex unicode:"$\x{a2}", rx1338_cur
    box $P5004, 1
    set $P102, $P5004
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
  alt1343_02736:
    nqp_rxmark rx1338_bstack, alt1343_12742, rx1338_pos, 0
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    add $I11, rx1338_pos, 3
    gt $I11, rx1338_eos, rx1338_fail2725
    substr $S10, rx1338_tgt, rx1338_pos, 3
    ne $S10, ucs4:"::(", rx1338_fail2725
    add rx1338_pos, 3
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    nqp_rxmark rx1338_bstack, rxsubrule1346_pass2739, -1, 0
  rxsubrule1346_pass2739:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    add $I11, rx1338_pos, 1
    gt $I11, rx1338_eos, rx1338_fail2725
    substr $S10, rx1338_tgt, rx1338_pos, 1
    ne $S10, ucs4:")", rx1338_fail2725
    add rx1338_pos, 1
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    goto alt1343_end2735
  alt1343_12742:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    nqp_rxmark rx1338_bstack, rxcap1350_fail2745, rx1338_pos, 0
    nqp_rxmark rx1338_bstack, rxquantr1351_done2747, rx1338_pos, 0
  rxquantr1351_loop2746:
    add $I11, rx1338_pos, 1
    gt $I11, rx1338_eos, rx1338_fail2725
    substr $S10, rx1338_tgt, rx1338_pos, 1
    ne $S10, ucs4:"!", rx1338_fail2725
    add rx1338_pos, 1
    nqp_rxpeek $I19, rx1338_bstack, rxquantr1351_done2747
    inc $I19
    inc $I19
    set rx1338_rep, rx1338_bstack[$I19]
    nqp_rxcommit rx1338_bstack, rxquantr1351_done2747
    inc rx1338_rep
  rxquantr1351_done2747:
    nqp_rxpeek $I19, rx1338_bstack, rxcap1350_fail2745
    inc $I19
    set $I11, rx1338_bstack[$I19]
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1338_pos)
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "private")
    goto rxcap1350_done2744
  rxcap1350_fail2745:
    goto rx1338_fail2725
  rxcap1350_done2744:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    nqp_rxmark rx1338_bstack, rxquantr1353_done2750, rx1338_pos, 0
  rxquantr1353_loop2749:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    goto rxsubrule1354_pass2751
  rxsubrule1354_back2752:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
  rxsubrule1354_pass2751:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "deflongname")
    set_addr $I11, rxsubrule1354_back2752
    push rx1338_bstack, $I11
    push rx1338_bstack, 0
    push rx1338_bstack, rx1338_pos
    elements $I11, rx1338_cstack
    push rx1338_bstack, $I11
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    nqp_rxpeek $I19, rx1338_bstack, rxquantr1353_done2750
    inc $I19
    inc $I19
    set rx1338_rep, rx1338_bstack[$I19]
    nqp_rxcommit rx1338_bstack, rxquantr1353_done2750
    inc rx1338_rep
  rxquantr1353_done2750:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
  alt1343_end2735:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
  alt1359_02758:
    nqp_rxmark rx1338_bstack, alt1359_12764, rx1338_pos, 0
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    add $I11, rx1338_pos, 1
    gt $I11, rx1338_eos, rx1338_fail2725
    substr $S10, rx1338_tgt, rx1338_pos, 1
    ne $S10, ucs4:"(", rx1338_fail2725
    add rx1338_pos, 1
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    nqp_rxmark rx1338_bstack, rxsubrule1362_pass2761, -1, 0
  rxsubrule1362_pass2761:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    add $I11, rx1338_pos, 1
    gt $I11, rx1338_eos, rx1338_fail2725
    substr $S10, rx1338_tgt, rx1338_pos, 1
    ne $S10, ucs4:")", rx1338_fail2725
    add rx1338_pos, 1
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    goto alt1359_end2757
  alt1359_12764:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."panic"("Routine declaration requires a signature")
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
  alt1359_end2757:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    store_lex unicode:"$\x{a2}", rx1338_cur
    $P5005 = $P103."MATCH"()
    set $P104, $P5005
    .const 'Sub' $P5006 = 'cuid_408_1361537952.49511' 
    capture_lex $P5006
    $P5007 = $P5006()
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    nqp_rxmark rx1338_bstack, rxquantr1370_done2771, rx1338_pos, 0
  rxquantr1370_loop2770:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."trait"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    goto rxsubrule1371_pass2772
  rxsubrule1371_back2773:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
  rxsubrule1371_pass2772:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "trait")
    set_addr $I11, rxsubrule1371_back2773
    push rx1338_bstack, $I11
    push rx1338_bstack, 0
    push rx1338_bstack, rx1338_pos
    elements $I11, rx1338_cstack
    push rx1338_bstack, $I11
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    nqp_rxpeek $I19, rx1338_bstack, rxquantr1370_done2771
    inc $I19
    inc $I19
    set rx1338_rep, rx1338_bstack[$I19]
    nqp_rxcommit rx1338_bstack, rxquantr1370_done2771
    inc rx1338_rep
    nqp_rxmark rx1338_bstack, rxquantr1370_done2771, rx1338_pos, rx1338_rep
    goto rxquantr1370_loop2770
  rxquantr1370_done2771:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1373_02776
    nqp_push_label $P11, alt1373_12780
    nqp_rxmark rx1338_bstack, alt1373_end2775, -1, 0
    rx1338_cur."!alt"(rx1338_pos, "alt_nfa__24_1361537955.70871", $P11)
    goto rx1338_fail2725
  alt1373_02776:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."onlystar"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    nqp_rxmark rx1338_bstack, rxsubrule1375_pass2778, -1, 0
  rxsubrule1375_pass2778:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "onlystar")
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    goto alt1373_end2775
  alt1373_12780:
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."blockoid"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    nqp_rxmark rx1338_bstack, rxsubrule1378_pass2782, -1, 0
  rxsubrule1378_pass2782:
    rx1338_cstack = rx1338_cur."!cursor_capture"($P11, "blockoid")
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    goto alt1373_end2775
  alt1373_end2775:
    nqp_rxcommit rx1338_bstack, alt1373_end2775
    repr_bind_attr_int rx1338_cur, rx1338_curclass, "$!pos", rx1338_pos
    $P11 = rx1338_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1338_curclass, "$!pos"
    lt $I11, 0, rx1338_fail2725
    repr_get_attr_int rx1338_pos, $P11, rx1338_curclass, "$!pos"
    rx1338_cur."!cursor_pass"(rx1338_pos, "method_def", 'backtrack'=>1)
    .return (rx1338_cur)
  rx1338_restart2724:
    repr_get_attr_obj rx1338_cstack, rx1338_cur, rx1338_curclass, "$!cstack"
  rx1338_fail2725:
    unless rx1338_bstack, rx1338_done2723
    pop $I19, rx1338_bstack
    if_null rx1338_cstack, rx1338_cstack_done2728
    unless rx1338_cstack, rx1338_cstack_done2728
    dec $I19
    set $P11, rx1338_cstack[$I19]
  rx1338_cstack_done2728:
    pop rx1338_rep, rx1338_bstack
    pop rx1338_pos, rx1338_bstack
    pop $I19, rx1338_bstack
    lt rx1338_pos, -1, rx1338_done2723
    lt rx1338_pos, 0, rx1338_fail2725
    eq $I19, 0, rx1338_fail2725
    nqp_islist $I20, rx1338_cstack
    unless $I20, rx1338_jump2726
    elements $I18, rx1338_bstack
    le $I18, 0, rx1338_cut2727
    dec $I18
    set $I18, rx1338_bstack[$I18]
  rx1338_cut2727:
    assign rx1338_cstack, $I18
  rx1338_jump2726:
    jump $I19
  rx1338_done2723:
    rx1338_cur."!cursor_fail"()
    .return (rx1338_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_408_1361537952.49511") :anon :lex :outer("cuid_123_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1123

    box $P5001, 0
    store_dynamic_lex "$*INVOCANT_OK", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "onlystar" :subid("cuid_124_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1131
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_409_1361537952.49511' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1381_start
    .local string rx1381_tgt
    .local int rx1381_pos
    .local int rx1381_off
    .local int rx1381_eos
    .local int rx1381_rep
    .local pmc rx1381_cur
    .local pmc rx1381_curclass
    .local pmc rx1381_bstack
    .local pmc rx1381_cstack
    rx1381_start = self."!cursor_start_all"()
    set rx1381_cur, rx1381_start[0]
    set rx1381_tgt, rx1381_start[1]
    set rx1381_pos, rx1381_start[2]
    set rx1381_curclass, rx1381_start[3]
    set rx1381_bstack, rx1381_start[4]
    set $I19, rx1381_start[5]
    store_lex unicode:"$\x{a2}", rx1381_cur
    length rx1381_eos, rx1381_tgt
    eq $I19, 1, rx1381_restart2787
    gt rx1381_pos, rx1381_eos, rx1381_fail2788
    repr_get_attr_int $I11, self, rx1381_curclass, "$!from"
    ne $I11, -1, rxscan1382_done2794
    goto rxscan1382_scan2793
  rxscan1382_loop2792:
    inc rx1381_pos
    gt rx1381_pos, rx1381_eos, rx1381_fail2788
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!from", rx1381_pos
  rxscan1382_scan2793:
    nqp_rxmark rx1381_bstack, rxscan1382_loop2792, rx1381_pos, 0
  rxscan1382_done2794:
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    store_lex unicode:"$\x{a2}", rx1381_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_409_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1381_fail2788
    add $I11, rx1381_pos, 1
    gt $I11, rx1381_eos, rx1381_fail2788
    substr $S10, rx1381_tgt, rx1381_pos, 1
    ne $S10, ucs4:"{", rx1381_fail2788
    add rx1381_pos, 1
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2788
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    add $I11, rx1381_pos, 1
    gt $I11, rx1381_eos, rx1381_fail2788
    substr $S10, rx1381_tgt, rx1381_pos, 1
    ne $S10, ucs4:"*", rx1381_fail2788
    add rx1381_pos, 1
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2788
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    add $I11, rx1381_pos, 1
    gt $I11, rx1381_eos, rx1381_fail2788
    substr $S10, rx1381_tgt, rx1381_pos, 1
    ne $S10, ucs4:"}", rx1381_fail2788
    add rx1381_pos, 1
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2788
    repr_bind_attr_int rx1381_cur, rx1381_curclass, "$!pos", rx1381_pos
    $P11 = rx1381_cur."finishpad"()
    repr_get_attr_int $I11, $P11, rx1381_curclass, "$!pos"
    lt $I11, 0, rx1381_fail2788
    repr_get_attr_int rx1381_pos, $P11, rx1381_curclass, "$!pos"
    rx1381_cur."!cursor_pass"(rx1381_pos, "onlystar", 'backtrack'=>1)
    .return (rx1381_cur)
  rx1381_restart2787:
    repr_get_attr_obj rx1381_cstack, rx1381_cur, rx1381_curclass, "$!cstack"
  rx1381_fail2788:
    unless rx1381_bstack, rx1381_done2786
    pop $I19, rx1381_bstack
    if_null rx1381_cstack, rx1381_cstack_done2791
    unless rx1381_cstack, rx1381_cstack_done2791
    dec $I19
    set $P11, rx1381_cstack[$I19]
  rx1381_cstack_done2791:
    pop rx1381_rep, rx1381_bstack
    pop rx1381_pos, rx1381_bstack
    pop $I19, rx1381_bstack
    lt rx1381_pos, -1, rx1381_done2786
    lt rx1381_pos, 0, rx1381_fail2788
    eq $I19, 0, rx1381_fail2788
    nqp_islist $I20, rx1381_cstack
    unless $I20, rx1381_jump2789
    elements $I18, rx1381_bstack
    le $I18, 0, rx1381_cut2790
    dec $I18
    set $I18, rx1381_bstack[$I18]
  rx1381_cut2790:
    assign rx1381_cstack, $I18
  rx1381_jump2789:
    jump $I19
  rx1381_done2786:
    rx1381_cur."!cursor_fail"()
    .return (rx1381_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_409_1361537952.49511") :anon :lex :outer("cuid_124_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1132
    .local pmc fb_tmp_255 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback2795
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_255, $P5002
    repr_defined $I5002, fb_tmp_255
    unless $I5002 goto if1383_else2796 
    set $P5004, fb_tmp_255["$MULTINESS"]
    set $P5006, $P5004
    goto if1383_end2797
  if1383_else2796:
    null $P5005
    set $P5006, $P5005
  if1383_end2797:
    unless_null $P5006, vivi_13842798
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_13842798:
    unless_null $P5006, vivi_13852799
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_13852799:
    set $P5001, $P5006
  fallback2795:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator" :subid("cuid_125_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1138
    .param pmc self 
    $P5001 = self."!protoregex"("multi_declarator")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_126_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1139
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1389_start
    .local string rx1389_tgt
    .local int rx1389_pos
    .local int rx1389_off
    .local int rx1389_eos
    .local int rx1389_rep
    .local pmc rx1389_cur
    .local pmc rx1389_curclass
    .local pmc rx1389_bstack
    .local pmc rx1389_cstack
    rx1389_start = self."!cursor_start_all"()
    set rx1389_cur, rx1389_start[0]
    set rx1389_tgt, rx1389_start[1]
    set rx1389_pos, rx1389_start[2]
    set rx1389_curclass, rx1389_start[3]
    set rx1389_bstack, rx1389_start[4]
    set $I19, rx1389_start[5]
    store_lex unicode:"$\x{a2}", rx1389_cur
    length rx1389_eos, rx1389_tgt
    eq $I19, 1, rx1389_restart2805
    gt rx1389_pos, rx1389_eos, rx1389_fail2806
    repr_get_attr_int $I11, self, rx1389_curclass, "$!from"
    ne $I11, -1, rxscan1390_done2812
    goto rxscan1390_scan2811
  rxscan1390_loop2810:
    inc rx1389_pos
    gt rx1389_pos, rx1389_eos, rx1389_fail2806
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!from", rx1389_pos
  rxscan1390_scan2811:
    nqp_rxmark rx1389_bstack, rxscan1390_loop2810, rx1389_pos, 0
  rxscan1390_done2812:
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    store_lex unicode:"$\x{a2}", rx1389_cur
    box $P5002, "multi"
    set $P101, $P5002
    nqp_rxmark rx1389_bstack, rxcap1391_fail2814, rx1389_pos, 0
    add $I11, rx1389_pos, 5
    gt $I11, rx1389_eos, rx1389_fail2806
    substr $S10, rx1389_tgt, rx1389_pos, 5
    ne $S10, ucs4:"multi", rx1389_fail2806
    add rx1389_pos, 5
    nqp_rxpeek $I19, rx1389_bstack, rxcap1391_fail2814
    inc $I19
    set $I11, rx1389_bstack[$I19]
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    $P11 = rx1389_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1389_pos)
    rx1389_cstack = rx1389_cur."!cursor_capture"($P11, "sym")
    goto rxcap1391_done2813
  rxcap1391_fail2814:
    goto rx1389_fail2806
  rxcap1391_done2813:
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    $P11 = rx1389_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1389_curclass, "$!pos"
    lt $I11, 0, rx1389_fail2806
    repr_get_attr_int rx1389_pos, $P11, rx1389_curclass, "$!pos"
  alt1393_02817:
    nqp_rxmark rx1389_bstack, alt1393_12819, rx1389_pos, 0
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    $P11 = rx1389_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1389_curclass, "$!pos"
    lt $I11, 0, rx1389_fail2806
    nqp_rxmark rx1389_bstack, rxsubrule1394_pass2818, -1, 0
  rxsubrule1394_pass2818:
    rx1389_cstack = rx1389_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1389_pos, $P11, rx1389_curclass, "$!pos"
    goto alt1393_end2816
  alt1393_12819:
    nqp_rxmark rx1389_bstack, alt1393_22821, rx1389_pos, 0
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    $P11 = rx1389_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1389_curclass, "$!pos"
    lt $I11, 0, rx1389_fail2806
    nqp_rxmark rx1389_bstack, rxsubrule1395_pass2820, -1, 0
  rxsubrule1395_pass2820:
    rx1389_cstack = rx1389_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1389_pos, $P11, rx1389_curclass, "$!pos"
    goto alt1393_end2816
  alt1393_22821:
    repr_bind_attr_int rx1389_cur, rx1389_curclass, "$!pos", rx1389_pos
    $P11 = rx1389_cur."panic"("Malformed multi")
    repr_get_attr_int $I11, $P11, rx1389_curclass, "$!pos"
    lt $I11, 0, rx1389_fail2806
    repr_get_attr_int rx1389_pos, $P11, rx1389_curclass, "$!pos"
  alt1393_end2816:
    rx1389_cur."!cursor_pass"(rx1389_pos, "multi_declarator:sym<multi>", 'backtrack'=>1)
    .return (rx1389_cur)
  rx1389_restart2805:
    repr_get_attr_obj rx1389_cstack, rx1389_cur, rx1389_curclass, "$!cstack"
  rx1389_fail2806:
    unless rx1389_bstack, rx1389_done2804
    pop $I19, rx1389_bstack
    if_null rx1389_cstack, rx1389_cstack_done2809
    unless rx1389_cstack, rx1389_cstack_done2809
    dec $I19
    set $P11, rx1389_cstack[$I19]
  rx1389_cstack_done2809:
    pop rx1389_rep, rx1389_bstack
    pop rx1389_pos, rx1389_bstack
    pop $I19, rx1389_bstack
    lt rx1389_pos, -1, rx1389_done2804
    lt rx1389_pos, 0, rx1389_fail2806
    eq $I19, 0, rx1389_fail2806
    nqp_islist $I20, rx1389_cstack
    unless $I20, rx1389_jump2807
    elements $I18, rx1389_bstack
    le $I18, 0, rx1389_cut2808
    dec $I18
    set $I18, rx1389_bstack[$I18]
  rx1389_cut2808:
    assign rx1389_cstack, $I18
  rx1389_jump2807:
    jump $I19
  rx1389_done2804:
    rx1389_cur."!cursor_fail"()
    .return (rx1389_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_127_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1144
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1397_start
    .local string rx1397_tgt
    .local int rx1397_pos
    .local int rx1397_off
    .local int rx1397_eos
    .local int rx1397_rep
    .local pmc rx1397_cur
    .local pmc rx1397_curclass
    .local pmc rx1397_bstack
    .local pmc rx1397_cstack
    rx1397_start = self."!cursor_start_all"()
    set rx1397_cur, rx1397_start[0]
    set rx1397_tgt, rx1397_start[1]
    set rx1397_pos, rx1397_start[2]
    set rx1397_curclass, rx1397_start[3]
    set rx1397_bstack, rx1397_start[4]
    set $I19, rx1397_start[5]
    store_lex unicode:"$\x{a2}", rx1397_cur
    length rx1397_eos, rx1397_tgt
    eq $I19, 1, rx1397_restart2825
    gt rx1397_pos, rx1397_eos, rx1397_fail2826
    repr_get_attr_int $I11, self, rx1397_curclass, "$!from"
    ne $I11, -1, rxscan1398_done2832
    goto rxscan1398_scan2831
  rxscan1398_loop2830:
    inc rx1397_pos
    gt rx1397_pos, rx1397_eos, rx1397_fail2826
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!from", rx1397_pos
  rxscan1398_scan2831:
    nqp_rxmark rx1397_bstack, rxscan1398_loop2830, rx1397_pos, 0
  rxscan1398_done2832:
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    store_lex unicode:"$\x{a2}", rx1397_cur
    box $P5002, "proto"
    set $P101, $P5002
    nqp_rxmark rx1397_bstack, rxcap1399_fail2834, rx1397_pos, 0
    add $I11, rx1397_pos, 5
    gt $I11, rx1397_eos, rx1397_fail2826
    substr $S10, rx1397_tgt, rx1397_pos, 5
    ne $S10, ucs4:"proto", rx1397_fail2826
    add rx1397_pos, 5
    nqp_rxpeek $I19, rx1397_bstack, rxcap1399_fail2834
    inc $I19
    set $I11, rx1397_bstack[$I19]
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1397_pos)
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "sym")
    goto rxcap1399_done2833
  rxcap1399_fail2834:
    goto rx1397_fail2826
  rxcap1399_done2833:
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail2826
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
  alt1401_02837:
    nqp_rxmark rx1397_bstack, alt1401_12839, rx1397_pos, 0
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail2826
    nqp_rxmark rx1397_bstack, rxsubrule1402_pass2838, -1, 0
  rxsubrule1402_pass2838:
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    goto alt1401_end2836
  alt1401_12839:
    nqp_rxmark rx1397_bstack, alt1401_22841, rx1397_pos, 0
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."routine_def"()
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail2826
    nqp_rxmark rx1397_bstack, rxsubrule1403_pass2840, -1, 0
  rxsubrule1403_pass2840:
    rx1397_cstack = rx1397_cur."!cursor_capture"($P11, "routine_def")
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
    goto alt1401_end2836
  alt1401_22841:
    repr_bind_attr_int rx1397_cur, rx1397_curclass, "$!pos", rx1397_pos
    $P11 = rx1397_cur."panic"("Malformed proto")
    repr_get_attr_int $I11, $P11, rx1397_curclass, "$!pos"
    lt $I11, 0, rx1397_fail2826
    repr_get_attr_int rx1397_pos, $P11, rx1397_curclass, "$!pos"
  alt1401_end2836:
    rx1397_cur."!cursor_pass"(rx1397_pos, "multi_declarator:sym<proto>", 'backtrack'=>1)
    .return (rx1397_cur)
  rx1397_restart2825:
    repr_get_attr_obj rx1397_cstack, rx1397_cur, rx1397_curclass, "$!cstack"
  rx1397_fail2826:
    unless rx1397_bstack, rx1397_done2824
    pop $I19, rx1397_bstack
    if_null rx1397_cstack, rx1397_cstack_done2829
    unless rx1397_cstack, rx1397_cstack_done2829
    dec $I19
    set $P11, rx1397_cstack[$I19]
  rx1397_cstack_done2829:
    pop rx1397_rep, rx1397_bstack
    pop rx1397_pos, rx1397_bstack
    pop $I19, rx1397_bstack
    lt rx1397_pos, -1, rx1397_done2824
    lt rx1397_pos, 0, rx1397_fail2826
    eq $I19, 0, rx1397_fail2826
    nqp_islist $I20, rx1397_cstack
    unless $I20, rx1397_jump2827
    elements $I18, rx1397_bstack
    le $I18, 0, rx1397_cut2828
    dec $I18
    set $I18, rx1397_bstack[$I18]
  rx1397_cut2828:
    assign rx1397_cstack, $I18
  rx1397_jump2827:
    jump $I19
  rx1397_done2824:
    rx1397_cur."!cursor_fail"()
    .return (rx1397_cur) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_128_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1149
    .param pmc _lex_param_0 
    .lex "$*MULTINESS", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1405_start
    .local string rx1405_tgt
    .local int rx1405_pos
    .local int rx1405_off
    .local int rx1405_eos
    .local int rx1405_rep
    .local pmc rx1405_cur
    .local pmc rx1405_curclass
    .local pmc rx1405_bstack
    .local pmc rx1405_cstack
    rx1405_start = self."!cursor_start_all"()
    set rx1405_cur, rx1405_start[0]
    set rx1405_tgt, rx1405_start[1]
    set rx1405_pos, rx1405_start[2]
    set rx1405_curclass, rx1405_start[3]
    set rx1405_bstack, rx1405_start[4]
    set $I19, rx1405_start[5]
    store_lex unicode:"$\x{a2}", rx1405_cur
    length rx1405_eos, rx1405_tgt
    eq $I19, 1, rx1405_restart2845
    gt rx1405_pos, rx1405_eos, rx1405_fail2846
    repr_get_attr_int $I11, self, rx1405_curclass, "$!from"
    ne $I11, -1, rxscan1406_done2852
    goto rxscan1406_scan2851
  rxscan1406_loop2850:
    inc rx1405_pos
    gt rx1405_pos, rx1405_eos, rx1405_fail2846
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!from", rx1405_pos
  rxscan1406_scan2851:
    nqp_rxmark rx1405_bstack, rxscan1406_loop2850, rx1405_pos, 0
  rxscan1406_done2852:
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!pos", rx1405_pos
    store_lex unicode:"$\x{a2}", rx1405_cur
    box $P5002, ""
    set $P101, $P5002
    repr_bind_attr_int rx1405_cur, rx1405_curclass, "$!pos", rx1405_pos
    $P11 = rx1405_cur."declarator"()
    repr_get_attr_int $I11, $P11, rx1405_curclass, "$!pos"
    lt $I11, 0, rx1405_fail2846
    nqp_rxmark rx1405_bstack, rxsubrule1407_pass2853, -1, 0
  rxsubrule1407_pass2853:
    rx1405_cstack = rx1405_cur."!cursor_capture"($P11, "declarator")
    repr_get_attr_int rx1405_pos, $P11, rx1405_curclass, "$!pos"
    rx1405_cur."!cursor_pass"(rx1405_pos, "multi_declarator:sym<null>", 'backtrack'=>1)
    .return (rx1405_cur)
  rx1405_restart2845:
    repr_get_attr_obj rx1405_cstack, rx1405_cur, rx1405_curclass, "$!cstack"
  rx1405_fail2846:
    unless rx1405_bstack, rx1405_done2844
    pop $I19, rx1405_bstack
    if_null rx1405_cstack, rx1405_cstack_done2849
    unless rx1405_cstack, rx1405_cstack_done2849
    dec $I19
    set $P11, rx1405_cstack[$I19]
  rx1405_cstack_done2849:
    pop rx1405_rep, rx1405_bstack
    pop rx1405_pos, rx1405_bstack
    pop $I19, rx1405_bstack
    lt rx1405_pos, -1, rx1405_done2844
    lt rx1405_pos, 0, rx1405_fail2846
    eq $I19, 0, rx1405_fail2846
    nqp_islist $I20, rx1405_cstack
    unless $I20, rx1405_jump2847
    elements $I18, rx1405_bstack
    le $I18, 0, rx1405_cut2848
    dec $I18
    set $I18, rx1405_bstack[$I18]
  rx1405_cut2848:
    assign rx1405_cstack, $I18
  rx1405_jump2847:
    jump $I19
  rx1405_done2844:
    rx1405_cur."!cursor_fail"()
    .return (rx1405_cur) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_129_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1154
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_410_1361537952.49511' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1361537952.49511' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1408_start
    .local string rx1408_tgt
    .local int rx1408_pos
    .local int rx1408_off
    .local int rx1408_eos
    .local int rx1408_rep
    .local pmc rx1408_cur
    .local pmc rx1408_curclass
    .local pmc rx1408_bstack
    .local pmc rx1408_cstack
    rx1408_start = self."!cursor_start_all"()
    set rx1408_cur, rx1408_start[0]
    set rx1408_tgt, rx1408_start[1]
    set rx1408_pos, rx1408_start[2]
    set rx1408_curclass, rx1408_start[3]
    set rx1408_bstack, rx1408_start[4]
    set $I19, rx1408_start[5]
    store_lex unicode:"$\x{a2}", rx1408_cur
    length rx1408_eos, rx1408_tgt
    eq $I19, 1, rx1408_restart2856
    gt rx1408_pos, rx1408_eos, rx1408_fail2857
    repr_get_attr_int $I11, self, rx1408_curclass, "$!from"
    ne $I11, -1, rxscan1409_done2863
    goto rxscan1409_scan2862
  rxscan1409_loop2861:
    inc rx1408_pos
    gt rx1408_pos, rx1408_eos, rx1408_fail2857
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!from", rx1408_pos
  rxscan1409_scan2862:
    nqp_rxmark rx1408_bstack, rxscan1409_loop2861, rx1408_pos, 0
  rxscan1409_done2863:
    nqp_rxmark rx1408_bstack, rxquantr1410_done2865, rx1408_pos, 0
  rxquantr1410_loop2864:
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    store_lex unicode:"$\x{a2}", rx1408_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_410_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1408_fail2857
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    nqp_rxmark rx1408_bstack, rxsubrule1415_pass2872, -1, 0
  rxsubrule1415_pass2872:
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "invocant")
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    add $I11, rx1408_pos, 1
    gt $I11, rx1408_eos, rx1408_fail2857
    substr $S10, rx1408_tgt, rx1408_pos, 1
    ne $S10, ucs4:":", rx1408_fail2857
    add rx1408_pos, 1
    nqp_rxpeek $I19, rx1408_bstack, rxquantr1410_done2865
    inc $I19
    inc $I19
    set rx1408_rep, rx1408_bstack[$I19]
    nqp_rxcommit rx1408_bstack, rxquantr1410_done2865
    inc rx1408_rep
  rxquantr1410_done2865:
    nqp_rxmark rx1408_bstack, rxquantr1417_done2875, rx1408_pos, 0
  rxquantr1417_loop2874:
    nqp_rxmark rx1408_bstack, rxquantr1418_done2877, rx1408_pos, 0
  rxquantr1418_loop2876:
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."parameter"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    nqp_rxmark rx1408_bstack, rxsubrule1420_pass2879, -1, 0
  rxsubrule1420_pass2879:
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "parameter")
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1422_02882
    nqp_push_label $P11, alt1422_12883
    nqp_rxmark rx1408_bstack, alt1422_end2881, -1, 0
    rx1408_cur."!alt"(rx1408_pos, "alt_nfa__26_1361537955.80231", $P11)
    goto rx1408_fail2857
  alt1422_02882:
    add $I11, rx1408_pos, 1
    gt $I11, rx1408_eos, rx1408_fail2857
    substr $S10, rx1408_tgt, rx1408_pos, 1
    ne $S10, ucs4:",", rx1408_fail2857
    add rx1408_pos, 1
    goto alt1422_end2881
  alt1422_12883:
    .const 'Sub' $P5004 = 'cuid_130_1361537952.49511' 
    capture_lex $P5004
    repr_bind_attr_int rx1408_cur, rx1408_curclass, "$!pos", rx1408_pos
    $P11 = rx1408_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx1408_curclass, "$!pos"
    lt $I11, 0, rx1408_fail2857
    nqp_rxmark rx1408_bstack, rxsubrule1427_pass2899, -1, 0
  rxsubrule1427_pass2899:
    rx1408_cstack = rx1408_cur."!cursor_capture"($P11, "before")
    repr_get_attr_int rx1408_pos, $P11, rx1408_curclass, "$!pos"
    goto alt1422_end2881
  alt1422_end2881:
    nqp_rxcommit rx1408_bstack, alt1422_end2881
    nqp_rxpeek $I19, rx1408_bstack, rxquantr1418_done2877
    inc $I19
    inc $I19
    set rx1408_rep, rx1408_bstack[$I19]
    nqp_rxcommit rx1408_bstack, rxquantr1418_done2877
    inc rx1408_rep
    nqp_rxmark rx1408_bstack, rxquantr1418_done2877, rx1408_pos, rx1408_rep
    goto rxquantr1418_loop2876
  rxquantr1418_done2877:
    nqp_rxpeek $I19, rx1408_bstack, rxquantr1417_done2875
    inc $I19
    inc $I19
    set rx1408_rep, rx1408_bstack[$I19]
    nqp_rxcommit rx1408_bstack, rxquantr1417_done2875
    inc rx1408_rep
  rxquantr1417_done2875:
    rx1408_cur."!cursor_pass"(rx1408_pos, "signature", 'backtrack'=>1)
    .return (rx1408_cur)
  rx1408_restart2856:
    repr_get_attr_obj rx1408_cstack, rx1408_cur, rx1408_curclass, "$!cstack"
  rx1408_fail2857:
    unless rx1408_bstack, rx1408_done2855
    pop $I19, rx1408_bstack
    if_null rx1408_cstack, rx1408_cstack_done2860
    unless rx1408_cstack, rx1408_cstack_done2860
    dec $I19
    set $P11, rx1408_cstack[$I19]
  rx1408_cstack_done2860:
    pop rx1408_rep, rx1408_bstack
    pop rx1408_pos, rx1408_bstack
    pop $I19, rx1408_bstack
    lt rx1408_pos, -1, rx1408_done2855
    lt rx1408_pos, 0, rx1408_fail2857
    eq $I19, 0, rx1408_fail2857
    nqp_islist $I20, rx1408_cstack
    unless $I20, rx1408_jump2858
    elements $I18, rx1408_bstack
    le $I18, 0, rx1408_cut2859
    dec $I18
    set $I18, rx1408_bstack[$I18]
  rx1408_cut2859:
    assign rx1408_cstack, $I18
  rx1408_jump2858:
    jump $I19
  rx1408_done2855:
    rx1408_cur."!cursor_fail"()
    .return (rx1408_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_410_1361537952.49511") :anon :lex :outer("cuid_129_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1155
    .local pmc fb_tmp_256 
    find_dynamic_lex $P5001, "$*INVOCANT_OK"
    unless_null $P5001, fallback2866
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_256, $P5002
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1411_else2867 
    set $P5004, fb_tmp_256["$INVOCANT_OK"]
    set $P5006, $P5004
    goto if1411_end2868
  if1411_else2867:
    null $P5005
    set $P5006, $P5005
  if1411_end2868:
    unless_null $P5006, vivi_14122869
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_14122869:
    unless_null $P5006, vivi_14132870
    die "Contextual $*INVOCANT_OK not found"
    box $P5008, "Contextual $*INVOCANT_OK not found"
    set $P5006, $P5008
  vivi_14132870:
    set $P5001, $P5006
  fallback2866:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1361537952.49511") :anon :lex :outer("cuid_129_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1423_start
    .local string rx1423_tgt
    .local int rx1423_pos
    .local int rx1423_off
    .local int rx1423_eos
    .local int rx1423_rep
    .local pmc rx1423_cur
    .local pmc rx1423_curclass
    .local pmc rx1423_bstack
    .local pmc rx1423_cstack
    rx1423_start = self."!cursor_start_all"()
    set rx1423_cur, rx1423_start[0]
    set rx1423_tgt, rx1423_start[1]
    set rx1423_pos, rx1423_start[2]
    set rx1423_curclass, rx1423_start[3]
    set rx1423_bstack, rx1423_start[4]
    set $I19, rx1423_start[5]
    store_lex unicode:"$\x{a2}", rx1423_cur
    length rx1423_eos, rx1423_tgt
    eq $I19, 1, rx1423_restart2886
    gt rx1423_pos, rx1423_eos, rx1423_fail2887
    repr_get_attr_int $I11, self, rx1423_curclass, "$!from"
    ne $I11, -1, rxscan1424_done2893
    goto rxscan1424_scan2892
  rxscan1424_loop2891:
    inc rx1423_pos
    gt rx1423_pos, rx1423_eos, rx1423_fail2887
    repr_bind_attr_int rx1423_cur, rx1423_curclass, "$!from", rx1423_pos
  rxscan1424_scan2892:
    nqp_rxmark rx1423_bstack, rxscan1424_loop2891, rx1423_pos, 0
  rxscan1424_done2893:
    nqp_rxmark rx1423_bstack, rxquantr1425_done2895, rx1423_pos, 0
  rxquantr1425_loop2894:
    ge rx1423_pos, rx1423_eos, rx1423_fail2887
    is_cclass $I11, .CCLASS_WHITESPACE, rx1423_tgt, rx1423_pos
    unless $I11, rx1423_fail2887
    add rx1423_pos, 1
    nqp_rxpeek $I19, rx1423_bstack, rxquantr1425_done2895
    inc $I19
    inc $I19
    set rx1423_rep, rx1423_bstack[$I19]
    nqp_rxcommit rx1423_bstack, rxquantr1425_done2895
    inc rx1423_rep
    nqp_rxmark rx1423_bstack, rxquantr1425_done2895, rx1423_pos, rx1423_rep
    goto rxquantr1425_loop2894
  rxquantr1425_done2895:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1426_02897
    nqp_push_label $P11, alt1426_12898
    nqp_rxmark rx1423_bstack, alt1426_end2896, -1, 0
    rx1423_cur."!alt"(rx1423_pos, "alt_nfa__25_1361537955.80231", $P11)
    goto rx1423_fail2887
  alt1426_02897:
    add $I11, rx1423_pos, 1
    gt $I11, rx1423_eos, rx1423_fail2887
    substr $S10, rx1423_tgt, rx1423_pos, 1
    ne $S10, ucs4:")", rx1423_fail2887
    add rx1423_pos, 1
    goto alt1426_end2896
  alt1426_12898:
    add $I11, rx1423_pos, 1
    gt $I11, rx1423_eos, rx1423_fail2887
    substr $S10, rx1423_tgt, rx1423_pos, 1
    ne $S10, ucs4:"{", rx1423_fail2887
    add rx1423_pos, 1
    goto alt1426_end2896
  alt1426_end2896:
    nqp_rxcommit rx1423_bstack, alt1426_end2896
    rx1423_cur."!cursor_pass"(rx1423_pos, 'backtrack'=>1)
    .return (rx1423_cur)
  rx1423_restart2886:
    repr_get_attr_obj rx1423_cstack, rx1423_cur, rx1423_curclass, "$!cstack"
  rx1423_fail2887:
    unless rx1423_bstack, rx1423_done2885
    pop $I19, rx1423_bstack
    if_null rx1423_cstack, rx1423_cstack_done2890
    unless rx1423_cstack, rx1423_cstack_done2890
    dec $I19
    set $P11, rx1423_cstack[$I19]
  rx1423_cstack_done2890:
    pop rx1423_rep, rx1423_bstack
    pop rx1423_pos, rx1423_bstack
    pop $I19, rx1423_bstack
    lt rx1423_pos, -1, rx1423_done2885
    lt rx1423_pos, 0, rx1423_fail2887
    eq $I19, 0, rx1423_fail2887
    nqp_islist $I20, rx1423_cstack
    unless $I20, rx1423_jump2888
    elements $I18, rx1423_bstack
    le $I18, 0, rx1423_cut2889
    dec $I18
    set $I18, rx1423_bstack[$I18]
  rx1423_cut2889:
    assign rx1423_cstack, $I18
  rx1423_jump2888:
    jump $I19
  rx1423_done2885:
    rx1423_cur."!cursor_fail"()
    .return (rx1423_cur) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_131_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1159
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1428_start
    .local string rx1428_tgt
    .local int rx1428_pos
    .local int rx1428_off
    .local int rx1428_eos
    .local int rx1428_rep
    .local pmc rx1428_cur
    .local pmc rx1428_curclass
    .local pmc rx1428_bstack
    .local pmc rx1428_cstack
    rx1428_start = self."!cursor_start_all"()
    set rx1428_cur, rx1428_start[0]
    set rx1428_tgt, rx1428_start[1]
    set rx1428_pos, rx1428_start[2]
    set rx1428_curclass, rx1428_start[3]
    set rx1428_bstack, rx1428_start[4]
    set $I19, rx1428_start[5]
    store_lex unicode:"$\x{a2}", rx1428_cur
    length rx1428_eos, rx1428_tgt
    eq $I19, 1, rx1428_restart2902
    gt rx1428_pos, rx1428_eos, rx1428_fail2903
    repr_get_attr_int $I11, self, rx1428_curclass, "$!from"
    ne $I11, -1, rxscan1429_done2909
    goto rxscan1429_scan2908
  rxscan1429_loop2907:
    inc rx1428_pos
    gt rx1428_pos, rx1428_eos, rx1428_fail2903
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!from", rx1428_pos
  rxscan1429_scan2908:
    nqp_rxmark rx1428_bstack, rxscan1429_loop2907, rx1428_pos, 0
  rxscan1429_done2909:
    nqp_rxmark rx1428_bstack, rxquantr1430_done2911, rx1428_pos, 0
  rxquantr1430_loop2910:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."typename"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    nqp_rxmark rx1428_bstack, rxsubrule1431_pass2912, -1, 0
  rxsubrule1431_pass2912:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "typename")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    nqp_rxmark rx1428_bstack, rxquantr1432_done2914, rx1428_pos, 0
  rxquantr1432_loop2913:
    add $I11, rx1428_pos, 1
    gt $I11, rx1428_eos, rx1428_fail2903
    substr $S10, rx1428_tgt, rx1428_pos, 1
    ne $S10, ucs4:":", rx1428_fail2903
    add rx1428_pos, 1
    nqp_rxmark rx1428_bstack, rxcap1433_fail2916, rx1428_pos, 0
    ge rx1428_pos, rx1428_eos, rx1428_fail2903
    substr $S11, rx1428_tgt, rx1428_pos, 1
    index $I11, ucs4:"_DU", $S11
    lt $I11, 0, rx1428_fail2903
    inc rx1428_pos
    nqp_rxpeek $I19, rx1428_bstack, rxcap1433_fail2916
    inc $I19
    set $I11, rx1428_bstack[$I19]
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1428_pos)
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "definedness")
    goto rxcap1433_done2915
  rxcap1433_fail2916:
    goto rx1428_fail2903
  rxcap1433_done2915:
    nqp_rxpeek $I19, rx1428_bstack, rxquantr1432_done2914
    inc $I19
    inc $I19
    set rx1428_rep, rx1428_bstack[$I19]
    nqp_rxcommit rx1428_bstack, rxquantr1432_done2914
    inc rx1428_rep
  rxquantr1432_done2914:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    nqp_rxpeek $I19, rx1428_bstack, rxquantr1430_done2911
    inc $I19
    inc $I19
    set rx1428_rep, rx1428_bstack[$I19]
    nqp_rxcommit rx1428_bstack, rxquantr1430_done2911
    inc rx1428_rep
    nqp_rxmark rx1428_bstack, rxquantr1430_done2911, rx1428_pos, rx1428_rep
    goto rxquantr1430_loop2910
  rxquantr1430_done2911:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1435_02919
    nqp_push_label $P11, alt1435_12923
    nqp_rxmark rx1428_bstack, alt1435_end2918, -1, 0
    rx1428_cur."!alt"(rx1428_pos, "alt_nfa__29_1361537955.83351", $P11)
    goto rx1428_fail2903
  alt1435_02919:
    nqp_rxmark rx1428_bstack, rxcap1436_fail2921, rx1428_pos, 0
    add $I11, rx1428_pos, 1
    gt $I11, rx1428_eos, rx1428_fail2903
    substr $S10, rx1428_tgt, rx1428_pos, 1
    ne $S10, ucs4:"*", rx1428_fail2903
    add rx1428_pos, 1
    nqp_rxpeek $I19, rx1428_bstack, rxcap1436_fail2921
    inc $I19
    set $I11, rx1428_bstack[$I19]
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1428_pos)
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "quant")
    goto rxcap1436_done2920
  rxcap1436_fail2921:
    goto rx1428_fail2903
  rxcap1436_done2920:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    nqp_rxmark rx1428_bstack, rxsubrule1437_pass2922, -1, 0
  rxsubrule1437_pass2922:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    goto alt1435_end2918
  alt1435_12923:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1438_02925
    nqp_push_label $P11, alt1438_12927
    nqp_rxmark rx1428_bstack, alt1438_end2924, -1, 0
    rx1428_cur."!alt"(rx1428_pos, "alt_nfa__27_1361537955.83351", $P11)
    goto rx1428_fail2903
  alt1438_02925:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    nqp_rxmark rx1428_bstack, rxsubrule1439_pass2926, -1, 0
  rxsubrule1439_pass2926:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    goto alt1438_end2924
  alt1438_12927:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."named_param"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    nqp_rxmark rx1428_bstack, rxsubrule1440_pass2928, -1, 0
  rxsubrule1440_pass2928:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "named_param")
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    goto alt1438_end2924
  alt1438_end2924:
    nqp_rxcommit rx1428_bstack, alt1438_end2924
    nqp_rxmark rx1428_bstack, rxcap1441_fail2930, rx1428_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1442_02932
    nqp_push_label $P11, alt1442_12933
    nqp_push_label $P11, alt1442_22934
    nqp_rxmark rx1428_bstack, alt1442_end2931, -1, 0
    rx1428_cur."!alt"(rx1428_pos, "alt_nfa__28_1361537955.83351", $P11)
    goto rx1428_fail2903
  alt1442_02932:
    add $I11, rx1428_pos, 1
    gt $I11, rx1428_eos, rx1428_fail2903
    substr $S10, rx1428_tgt, rx1428_pos, 1
    ne $S10, ucs4:"?", rx1428_fail2903
    add rx1428_pos, 1
    goto alt1442_end2931
  alt1442_12933:
    add $I11, rx1428_pos, 1
    gt $I11, rx1428_eos, rx1428_fail2903
    substr $S10, rx1428_tgt, rx1428_pos, 1
    ne $S10, ucs4:"!", rx1428_fail2903
    add rx1428_pos, 1
    goto alt1442_end2931
  alt1442_22934:
    goto alt1442_end2931
  alt1442_end2931:
    nqp_rxcommit rx1428_bstack, alt1442_end2931
    nqp_rxpeek $I19, rx1428_bstack, rxcap1441_fail2930
    inc $I19
    set $I11, rx1428_bstack[$I19]
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1428_pos)
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "quant")
    goto rxcap1441_done2929
  rxcap1441_fail2930:
    goto rx1428_fail2903
  rxcap1441_done2929:
    goto alt1435_end2918
  alt1435_end2918:
    nqp_rxcommit rx1428_bstack, alt1435_end2918
    nqp_rxmark rx1428_bstack, rxquantr1444_done2937, rx1428_pos, 0
  rxquantr1444_loop2936:
    repr_bind_attr_int rx1428_cur, rx1428_curclass, "$!pos", rx1428_pos
    $P11 = rx1428_cur."default_value"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
    goto rxsubrule1445_pass2938
  rxsubrule1445_back2939:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1428_curclass, "$!pos"
    lt $I11, 0, rx1428_fail2903
  rxsubrule1445_pass2938:
    rx1428_cstack = rx1428_cur."!cursor_capture"($P11, "default_value")
    set_addr $I11, rxsubrule1445_back2939
    push rx1428_bstack, $I11
    push rx1428_bstack, 0
    push rx1428_bstack, rx1428_pos
    elements $I11, rx1428_cstack
    push rx1428_bstack, $I11
    repr_get_attr_int rx1428_pos, $P11, rx1428_curclass, "$!pos"
    nqp_rxpeek $I19, rx1428_bstack, rxquantr1444_done2937
    inc $I19
    inc $I19
    set rx1428_rep, rx1428_bstack[$I19]
    nqp_rxcommit rx1428_bstack, rxquantr1444_done2937
    inc rx1428_rep
  rxquantr1444_done2937:
    rx1428_cur."!cursor_pass"(rx1428_pos, "parameter", 'backtrack'=>1)
    .return (rx1428_cur)
  rx1428_restart2902:
    repr_get_attr_obj rx1428_cstack, rx1428_cur, rx1428_curclass, "$!cstack"
  rx1428_fail2903:
    unless rx1428_bstack, rx1428_done2901
    pop $I19, rx1428_bstack
    if_null rx1428_cstack, rx1428_cstack_done2906
    unless rx1428_cstack, rx1428_cstack_done2906
    dec $I19
    set $P11, rx1428_cstack[$I19]
  rx1428_cstack_done2906:
    pop rx1428_rep, rx1428_bstack
    pop rx1428_pos, rx1428_bstack
    pop $I19, rx1428_bstack
    lt rx1428_pos, -1, rx1428_done2901
    lt rx1428_pos, 0, rx1428_fail2903
    eq $I19, 0, rx1428_fail2903
    nqp_islist $I20, rx1428_cstack
    unless $I20, rx1428_jump2904
    elements $I18, rx1428_bstack
    le $I18, 0, rx1428_cut2905
    dec $I18
    set $I18, rx1428_bstack[$I18]
  rx1428_cut2905:
    assign rx1428_cstack, $I18
  rx1428_jump2904:
    jump $I19
  rx1428_done2901:
    rx1428_cur."!cursor_fail"()
    .return (rx1428_cur) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_132_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1168
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1446_start
    .local string rx1446_tgt
    .local int rx1446_pos
    .local int rx1446_off
    .local int rx1446_eos
    .local int rx1446_rep
    .local pmc rx1446_cur
    .local pmc rx1446_curclass
    .local pmc rx1446_bstack
    .local pmc rx1446_cstack
    rx1446_start = self."!cursor_start_all"()
    set rx1446_cur, rx1446_start[0]
    set rx1446_tgt, rx1446_start[1]
    set rx1446_pos, rx1446_start[2]
    set rx1446_curclass, rx1446_start[3]
    set rx1446_bstack, rx1446_start[4]
    set $I19, rx1446_start[5]
    store_lex unicode:"$\x{a2}", rx1446_cur
    length rx1446_eos, rx1446_tgt
    eq $I19, 1, rx1446_restart2942
    gt rx1446_pos, rx1446_eos, rx1446_fail2943
    repr_get_attr_int $I11, self, rx1446_curclass, "$!from"
    ne $I11, -1, rxscan1447_done2949
    goto rxscan1447_scan2948
  rxscan1447_loop2947:
    inc rx1446_pos
    gt rx1446_pos, rx1446_eos, rx1446_fail2943
    repr_bind_attr_int rx1446_cur, rx1446_curclass, "$!from", rx1446_pos
  rxscan1447_scan2948:
    nqp_rxmark rx1446_bstack, rxscan1447_loop2947, rx1446_pos, 0
  rxscan1447_done2949:
    repr_bind_attr_int rx1446_cur, rx1446_curclass, "$!pos", rx1446_pos
    $P11 = rx1446_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1446_curclass, "$!pos"
    lt $I11, 0, rx1446_fail2943
    nqp_rxmark rx1446_bstack, rxsubrule1448_pass2950, -1, 0
  rxsubrule1448_pass2950:
    rx1446_cstack = rx1446_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1446_pos, $P11, rx1446_curclass, "$!pos"
    nqp_rxmark rx1446_bstack, rxquantr1449_done2952, rx1446_pos, 0
  rxquantr1449_loop2951:
    repr_bind_attr_int rx1446_cur, rx1446_curclass, "$!pos", rx1446_pos
    $P11 = rx1446_cur."twigil"()
    repr_get_attr_int $I11, $P11, rx1446_curclass, "$!pos"
    lt $I11, 0, rx1446_fail2943
    goto rxsubrule1450_pass2953
  rxsubrule1450_back2954:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1446_curclass, "$!pos"
    lt $I11, 0, rx1446_fail2943
  rxsubrule1450_pass2953:
    rx1446_cstack = rx1446_cur."!cursor_capture"($P11, "twigil")
    set_addr $I11, rxsubrule1450_back2954
    push rx1446_bstack, $I11
    push rx1446_bstack, 0
    push rx1446_bstack, rx1446_pos
    elements $I11, rx1446_cstack
    push rx1446_bstack, $I11
    repr_get_attr_int rx1446_pos, $P11, rx1446_curclass, "$!pos"
    nqp_rxpeek $I19, rx1446_bstack, rxquantr1449_done2952
    inc $I19
    inc $I19
    set rx1446_rep, rx1446_bstack[$I19]
    nqp_rxcommit rx1446_bstack, rxquantr1449_done2952
    inc rx1446_rep
  rxquantr1449_done2952:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1451_02956
    nqp_push_label $P11, alt1451_12958
    nqp_rxmark rx1446_bstack, alt1451_end2955, -1, 0
    rx1446_cur."!alt"(rx1446_pos, "alt_nfa__30_1361537955.84911", $P11)
    goto rx1446_fail2943
  alt1451_02956:
    repr_bind_attr_int rx1446_cur, rx1446_curclass, "$!pos", rx1446_pos
    $P11 = rx1446_cur."ident"()
    repr_get_attr_int $I11, $P11, rx1446_curclass, "$!pos"
    lt $I11, 0, rx1446_fail2943
    nqp_rxmark rx1446_bstack, rxsubrule1452_pass2957, -1, 0
  rxsubrule1452_pass2957:
    rx1446_cstack = rx1446_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1446_pos, $P11, rx1446_curclass, "$!pos"
    goto alt1451_end2955
  alt1451_12958:
    nqp_rxmark rx1446_bstack, rxcap1453_fail2960, rx1446_pos, 0
    ge rx1446_pos, rx1446_eos, rx1446_fail2943
    substr $S11, rx1446_tgt, rx1446_pos, 1
    index $I11, ucs4:"/!", $S11
    lt $I11, 0, rx1446_fail2943
    inc rx1446_pos
    nqp_rxpeek $I19, rx1446_bstack, rxcap1453_fail2960
    inc $I19
    set $I11, rx1446_bstack[$I19]
    repr_bind_attr_int rx1446_cur, rx1446_curclass, "$!pos", rx1446_pos
    $P11 = rx1446_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1446_pos)
    rx1446_cstack = rx1446_cur."!cursor_capture"($P11, "name")
    goto rxcap1453_done2959
  rxcap1453_fail2960:
    goto rx1446_fail2943
  rxcap1453_done2959:
    goto alt1451_end2955
  alt1451_end2955:
    nqp_rxcommit rx1446_bstack, alt1451_end2955
    rx1446_cur."!cursor_pass"(rx1446_pos, "param_var", 'backtrack'=>1)
    .return (rx1446_cur)
  rx1446_restart2942:
    repr_get_attr_obj rx1446_cstack, rx1446_cur, rx1446_curclass, "$!cstack"
  rx1446_fail2943:
    unless rx1446_bstack, rx1446_done2941
    pop $I19, rx1446_bstack
    if_null rx1446_cstack, rx1446_cstack_done2946
    unless rx1446_cstack, rx1446_cstack_done2946
    dec $I19
    set $P11, rx1446_cstack[$I19]
  rx1446_cstack_done2946:
    pop rx1446_rep, rx1446_bstack
    pop rx1446_pos, rx1446_bstack
    pop $I19, rx1446_bstack
    lt rx1446_pos, -1, rx1446_done2941
    lt rx1446_pos, 0, rx1446_fail2943
    eq $I19, 0, rx1446_fail2943
    nqp_islist $I20, rx1446_cstack
    unless $I20, rx1446_jump2944
    elements $I18, rx1446_bstack
    le $I18, 0, rx1446_cut2945
    dec $I18
    set $I18, rx1446_bstack[$I18]
  rx1446_cut2945:
    assign rx1446_cstack, $I18
  rx1446_jump2944:
    jump $I19
  rx1446_done2941:
    rx1446_cur."!cursor_fail"()
    .return (rx1446_cur) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_133_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1173
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1454_start
    .local string rx1454_tgt
    .local int rx1454_pos
    .local int rx1454_off
    .local int rx1454_eos
    .local int rx1454_rep
    .local pmc rx1454_cur
    .local pmc rx1454_curclass
    .local pmc rx1454_bstack
    .local pmc rx1454_cstack
    rx1454_start = self."!cursor_start_all"()
    set rx1454_cur, rx1454_start[0]
    set rx1454_tgt, rx1454_start[1]
    set rx1454_pos, rx1454_start[2]
    set rx1454_curclass, rx1454_start[3]
    set rx1454_bstack, rx1454_start[4]
    set $I19, rx1454_start[5]
    store_lex unicode:"$\x{a2}", rx1454_cur
    length rx1454_eos, rx1454_tgt
    eq $I19, 1, rx1454_restart2963
    gt rx1454_pos, rx1454_eos, rx1454_fail2964
    repr_get_attr_int $I11, self, rx1454_curclass, "$!from"
    ne $I11, -1, rxscan1455_done2970
    goto rxscan1455_scan2969
  rxscan1455_loop2968:
    inc rx1454_pos
    gt rx1454_pos, rx1454_eos, rx1454_fail2964
    repr_bind_attr_int rx1454_cur, rx1454_curclass, "$!from", rx1454_pos
  rxscan1455_scan2969:
    nqp_rxmark rx1454_bstack, rxscan1455_loop2968, rx1454_pos, 0
  rxscan1455_done2970:
    add $I11, rx1454_pos, 1
    gt $I11, rx1454_eos, rx1454_fail2964
    substr $S10, rx1454_tgt, rx1454_pos, 1
    ne $S10, ucs4:":", rx1454_fail2964
    add rx1454_pos, 1
    repr_bind_attr_int rx1454_cur, rx1454_curclass, "$!pos", rx1454_pos
    $P11 = rx1454_cur."param_var"()
    repr_get_attr_int $I11, $P11, rx1454_curclass, "$!pos"
    lt $I11, 0, rx1454_fail2964
    nqp_rxmark rx1454_bstack, rxsubrule1456_pass2971, -1, 0
  rxsubrule1456_pass2971:
    rx1454_cstack = rx1454_cur."!cursor_capture"($P11, "param_var")
    repr_get_attr_int rx1454_pos, $P11, rx1454_curclass, "$!pos"
    rx1454_cur."!cursor_pass"(rx1454_pos, "named_param", 'backtrack'=>1)
    .return (rx1454_cur)
  rx1454_restart2963:
    repr_get_attr_obj rx1454_cstack, rx1454_cur, rx1454_curclass, "$!cstack"
  rx1454_fail2964:
    unless rx1454_bstack, rx1454_done2962
    pop $I19, rx1454_bstack
    if_null rx1454_cstack, rx1454_cstack_done2967
    unless rx1454_cstack, rx1454_cstack_done2967
    dec $I19
    set $P11, rx1454_cstack[$I19]
  rx1454_cstack_done2967:
    pop rx1454_rep, rx1454_bstack
    pop rx1454_pos, rx1454_bstack
    pop $I19, rx1454_bstack
    lt rx1454_pos, -1, rx1454_done2962
    lt rx1454_pos, 0, rx1454_fail2964
    eq $I19, 0, rx1454_fail2964
    nqp_islist $I20, rx1454_cstack
    unless $I20, rx1454_jump2965
    elements $I18, rx1454_bstack
    le $I18, 0, rx1454_cut2966
    dec $I18
    set $I18, rx1454_bstack[$I18]
  rx1454_cut2966:
    assign rx1454_cstack, $I18
  rx1454_jump2965:
    jump $I19
  rx1454_done2962:
    rx1454_cur."!cursor_fail"()
    .return (rx1454_cur) 
.end
.HLL "nqp"
.namespace []
.sub "default_value" :subid("cuid_134_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1177
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1457_start
    .local string rx1457_tgt
    .local int rx1457_pos
    .local int rx1457_off
    .local int rx1457_eos
    .local int rx1457_rep
    .local pmc rx1457_cur
    .local pmc rx1457_curclass
    .local pmc rx1457_bstack
    .local pmc rx1457_cstack
    rx1457_start = self."!cursor_start_all"()
    set rx1457_cur, rx1457_start[0]
    set rx1457_tgt, rx1457_start[1]
    set rx1457_pos, rx1457_start[2]
    set rx1457_curclass, rx1457_start[3]
    set rx1457_bstack, rx1457_start[4]
    set $I19, rx1457_start[5]
    store_lex unicode:"$\x{a2}", rx1457_cur
    length rx1457_eos, rx1457_tgt
    eq $I19, 1, rx1457_restart2974
    gt rx1457_pos, rx1457_eos, rx1457_fail2975
    repr_get_attr_int $I11, self, rx1457_curclass, "$!from"
    ne $I11, -1, rxscan1458_done2981
    goto rxscan1458_scan2980
  rxscan1458_loop2979:
    inc rx1457_pos
    gt rx1457_pos, rx1457_eos, rx1457_fail2975
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!from", rx1457_pos
  rxscan1458_scan2980:
    nqp_rxmark rx1457_bstack, rxscan1458_loop2979, rx1457_pos, 0
  rxscan1458_done2981:
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail2975
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    add $I11, rx1457_pos, 1
    gt $I11, rx1457_eos, rx1457_fail2975
    substr $S10, rx1457_tgt, rx1457_pos, 1
    ne $S10, ucs4:"=", rx1457_fail2975
    add rx1457_pos, 1
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail2975
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail2975
    nqp_rxmark rx1457_bstack, rxsubrule1461_pass2984, -1, 0
  rxsubrule1461_pass2984:
    rx1457_cstack = rx1457_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    repr_bind_attr_int rx1457_cur, rx1457_curclass, "$!pos", rx1457_pos
    $P11 = rx1457_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1457_curclass, "$!pos"
    lt $I11, 0, rx1457_fail2975
    repr_get_attr_int rx1457_pos, $P11, rx1457_curclass, "$!pos"
    rx1457_cur."!cursor_pass"(rx1457_pos, "default_value", 'backtrack'=>1)
    .return (rx1457_cur)
  rx1457_restart2974:
    repr_get_attr_obj rx1457_cstack, rx1457_cur, rx1457_curclass, "$!cstack"
  rx1457_fail2975:
    unless rx1457_bstack, rx1457_done2973
    pop $I19, rx1457_bstack
    if_null rx1457_cstack, rx1457_cstack_done2978
    unless rx1457_cstack, rx1457_cstack_done2978
    dec $I19
    set $P11, rx1457_cstack[$I19]
  rx1457_cstack_done2978:
    pop rx1457_rep, rx1457_bstack
    pop rx1457_pos, rx1457_bstack
    pop $I19, rx1457_bstack
    lt rx1457_pos, -1, rx1457_done2973
    lt rx1457_pos, 0, rx1457_fail2975
    eq $I19, 0, rx1457_fail2975
    nqp_islist $I20, rx1457_cstack
    unless $I20, rx1457_jump2976
    elements $I18, rx1457_bstack
    le $I18, 0, rx1457_cut2977
    dec $I18
    set $I18, rx1457_bstack[$I18]
  rx1457_cut2977:
    assign rx1457_cstack, $I18
  rx1457_jump2976:
    jump $I19
  rx1457_done2973:
    rx1457_cur."!cursor_fail"()
    .return (rx1457_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_135_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1179
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1463_start
    .local string rx1463_tgt
    .local int rx1463_pos
    .local int rx1463_off
    .local int rx1463_eos
    .local int rx1463_rep
    .local pmc rx1463_cur
    .local pmc rx1463_curclass
    .local pmc rx1463_bstack
    .local pmc rx1463_cstack
    rx1463_start = self."!cursor_start_all"()
    set rx1463_cur, rx1463_start[0]
    set rx1463_tgt, rx1463_start[1]
    set rx1463_pos, rx1463_start[2]
    set rx1463_curclass, rx1463_start[3]
    set rx1463_bstack, rx1463_start[4]
    set $I19, rx1463_start[5]
    store_lex unicode:"$\x{a2}", rx1463_cur
    length rx1463_eos, rx1463_tgt
    eq $I19, 1, rx1463_restart2988
    gt rx1463_pos, rx1463_eos, rx1463_fail2989
    repr_get_attr_int $I11, self, rx1463_curclass, "$!from"
    ne $I11, -1, rxscan1464_done2995
    goto rxscan1464_scan2994
  rxscan1464_loop2993:
    inc rx1463_pos
    gt rx1463_pos, rx1463_eos, rx1463_fail2989
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!from", rx1463_pos
  rxscan1464_scan2994:
    nqp_rxmark rx1463_bstack, rxscan1464_loop2993, rx1463_pos, 0
  rxscan1464_done2995:
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail2989
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."trait_mod"()
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail2989
    nqp_rxmark rx1463_bstack, rxsubrule1466_pass2997, -1, 0
  rxsubrule1466_pass2997:
    rx1463_cstack = rx1463_cur."!cursor_capture"($P11, "trait_mod")
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    repr_bind_attr_int rx1463_cur, rx1463_curclass, "$!pos", rx1463_pos
    $P11 = rx1463_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1463_curclass, "$!pos"
    lt $I11, 0, rx1463_fail2989
    repr_get_attr_int rx1463_pos, $P11, rx1463_curclass, "$!pos"
    rx1463_cur."!cursor_pass"(rx1463_pos, "trait", 'backtrack'=>1)
    .return (rx1463_cur)
  rx1463_restart2988:
    repr_get_attr_obj rx1463_cstack, rx1463_cur, rx1463_curclass, "$!cstack"
  rx1463_fail2989:
    unless rx1463_bstack, rx1463_done2987
    pop $I19, rx1463_bstack
    if_null rx1463_cstack, rx1463_cstack_done2992
    unless rx1463_cstack, rx1463_cstack_done2992
    dec $I19
    set $P11, rx1463_cstack[$I19]
  rx1463_cstack_done2992:
    pop rx1463_rep, rx1463_bstack
    pop rx1463_pos, rx1463_bstack
    pop $I19, rx1463_bstack
    lt rx1463_pos, -1, rx1463_done2987
    lt rx1463_pos, 0, rx1463_fail2989
    eq $I19, 0, rx1463_fail2989
    nqp_islist $I20, rx1463_cstack
    unless $I20, rx1463_jump2990
    elements $I18, rx1463_bstack
    le $I18, 0, rx1463_cut2991
    dec $I18
    set $I18, rx1463_bstack[$I18]
  rx1463_cut2991:
    assign rx1463_cstack, $I18
  rx1463_jump2990:
    jump $I19
  rx1463_done2987:
    rx1463_cur."!cursor_fail"()
    .return (rx1463_cur) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod" :subid("cuid_136_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1181
    .param pmc self 
    $P5001 = self."!protoregex"("trait_mod")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_137_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1182
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1468_start
    .local string rx1468_tgt
    .local int rx1468_pos
    .local int rx1468_off
    .local int rx1468_eos
    .local int rx1468_rep
    .local pmc rx1468_cur
    .local pmc rx1468_curclass
    .local pmc rx1468_bstack
    .local pmc rx1468_cstack
    rx1468_start = self."!cursor_start_all"()
    set rx1468_cur, rx1468_start[0]
    set rx1468_tgt, rx1468_start[1]
    set rx1468_pos, rx1468_start[2]
    set rx1468_curclass, rx1468_start[3]
    set rx1468_bstack, rx1468_start[4]
    set $I19, rx1468_start[5]
    store_lex unicode:"$\x{a2}", rx1468_cur
    length rx1468_eos, rx1468_tgt
    eq $I19, 1, rx1468_restart3001
    gt rx1468_pos, rx1468_eos, rx1468_fail3002
    repr_get_attr_int $I11, self, rx1468_curclass, "$!from"
    ne $I11, -1, rxscan1469_done3008
    goto rxscan1469_scan3007
  rxscan1469_loop3006:
    inc rx1468_pos
    gt rx1468_pos, rx1468_eos, rx1468_fail3002
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!from", rx1468_pos
  rxscan1469_scan3007:
    nqp_rxmark rx1468_bstack, rxscan1469_loop3006, rx1468_pos, 0
  rxscan1469_done3008:
    nqp_rxmark rx1468_bstack, rxcap1470_fail3010, rx1468_pos, 0
    add $I11, rx1468_pos, 2
    gt $I11, rx1468_eos, rx1468_fail3002
    substr $S10, rx1468_tgt, rx1468_pos, 2
    ne $S10, ucs4:"is", rx1468_fail3002
    add rx1468_pos, 2
    nqp_rxpeek $I19, rx1468_bstack, rxcap1470_fail3010
    inc $I19
    set $I11, rx1468_bstack[$I19]
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1468_pos)
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "sym")
    goto rxcap1470_done3009
  rxcap1470_fail3010:
    goto rx1468_fail3002
  rxcap1470_done3009:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3002
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3002
    nqp_rxmark rx1468_bstack, rxsubrule1472_pass3012, -1, 0
  rxsubrule1472_pass3012:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    nqp_rxmark rx1468_bstack, rxquantr1473_done3014, rx1468_pos, 0
  rxquantr1473_loop3013:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."circumfix"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3002
    goto rxsubrule1474_pass3015
  rxsubrule1474_back3016:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3002
  rxsubrule1474_pass3015:
    rx1468_cstack = rx1468_cur."!cursor_capture"($P11, "circumfix")
    set_addr $I11, rxsubrule1474_back3016
    push rx1468_bstack, $I11
    push rx1468_bstack, 0
    push rx1468_bstack, rx1468_pos
    elements $I11, rx1468_cstack
    push rx1468_bstack, $I11
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    nqp_rxpeek $I19, rx1468_bstack, rxquantr1473_done3014
    inc $I19
    inc $I19
    set rx1468_rep, rx1468_bstack[$I19]
    nqp_rxcommit rx1468_bstack, rxquantr1473_done3014
    inc rx1468_rep
  rxquantr1473_done3014:
    repr_bind_attr_int rx1468_cur, rx1468_curclass, "$!pos", rx1468_pos
    $P11 = rx1468_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1468_curclass, "$!pos"
    lt $I11, 0, rx1468_fail3002
    repr_get_attr_int rx1468_pos, $P11, rx1468_curclass, "$!pos"
    rx1468_cur."!cursor_pass"(rx1468_pos, "trait_mod:sym<is>", 'backtrack'=>1)
    .return (rx1468_cur)
  rx1468_restart3001:
    repr_get_attr_obj rx1468_cstack, rx1468_cur, rx1468_curclass, "$!cstack"
  rx1468_fail3002:
    unless rx1468_bstack, rx1468_done3000
    pop $I19, rx1468_bstack
    if_null rx1468_cstack, rx1468_cstack_done3005
    unless rx1468_cstack, rx1468_cstack_done3005
    dec $I19
    set $P11, rx1468_cstack[$I19]
  rx1468_cstack_done3005:
    pop rx1468_rep, rx1468_bstack
    pop rx1468_pos, rx1468_bstack
    pop $I19, rx1468_bstack
    lt rx1468_pos, -1, rx1468_done3000
    lt rx1468_pos, 0, rx1468_fail3002
    eq $I19, 0, rx1468_fail3002
    nqp_islist $I20, rx1468_cstack
    unless $I20, rx1468_jump3003
    elements $I18, rx1468_bstack
    le $I18, 0, rx1468_cut3004
    dec $I18
    set $I18, rx1468_bstack[$I18]
  rx1468_cut3004:
    assign rx1468_cstack, $I18
  rx1468_jump3003:
    jump $I19
  rx1468_done3000:
    rx1468_cur."!cursor_fail"()
    .return (rx1468_cur) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_138_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1184
    .param pmc _lex_param_0 
    .const 'Sub' $P5012 = 'cuid_411_1361537952.49511' 
    capture_lex $P5012 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_257 
    .local pmc pkg_viv_tmp_25 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1476_start
    .local string rx1476_tgt
    .local int rx1476_pos
    .local int rx1476_off
    .local int rx1476_eos
    .local int rx1476_rep
    .local pmc rx1476_cur
    .local pmc rx1476_curclass
    .local pmc rx1476_bstack
    .local pmc rx1476_cstack
    rx1476_start = self."!cursor_start_all"()
    set rx1476_cur, rx1476_start[0]
    set rx1476_tgt, rx1476_start[1]
    set rx1476_pos, rx1476_start[2]
    set rx1476_curclass, rx1476_start[3]
    set rx1476_bstack, rx1476_start[4]
    set $I19, rx1476_start[5]
    store_lex unicode:"$\x{a2}", rx1476_cur
    length rx1476_eos, rx1476_tgt
    eq $I19, 1, rx1476_restart3020
    gt rx1476_pos, rx1476_eos, rx1476_fail3021
    repr_get_attr_int $I11, self, rx1476_curclass, "$!from"
    ne $I11, -1, rxscan1477_done3027
    goto rxscan1477_scan3026
  rxscan1477_loop3025:
    inc rx1476_pos
    gt rx1476_pos, rx1476_eos, rx1476_fail3021
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!from", rx1476_pos
  rxscan1477_scan3026:
    nqp_rxmark rx1476_bstack, rxscan1477_loop3025, rx1476_pos, 0
  rxscan1477_done3027:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1478_03029
    nqp_push_label $P11, alt1478_13069
    nqp_rxmark rx1476_bstack, alt1478_end3028, -1, 0
    rx1476_cur."!alt"(rx1476_pos, "alt_nfa__33_1361537956.03631", $P11)
    goto rx1476_fail3021
  alt1478_03029:
    nqp_rxmark rx1476_bstack, rxcap1479_fail3031, rx1476_pos, 0
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"proto", rx1476_fail3021
    add rx1476_pos, 5
    nqp_rxpeek $I19, rx1476_bstack, rxcap1479_fail3031
    inc $I19
    set $I11, rx1476_bstack[$I19]
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1476_pos)
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "proto")
    goto rxcap1479_done3030
  rxcap1479_fail3031:
    goto rx1476_fail3021
  rxcap1479_done3030:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1481_03034
    nqp_push_label $P11, alt1481_13035
    nqp_push_label $P11, alt1481_23036
    nqp_rxmark rx1476_bstack, alt1481_end3033, -1, 0
    rx1476_cur."!alt"(rx1476_pos, "alt_nfa__31_1361537956.03631", $P11)
    goto rx1476_fail3021
  alt1481_03034:
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"regex", rx1476_fail3021
    add rx1476_pos, 5
    goto alt1481_end3033
  alt1481_13035:
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"token", rx1476_fail3021
    add rx1476_pos, 5
    goto alt1481_end3033
  alt1481_23036:
    add $I11, rx1476_pos, 4
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 4
    ne $S10, ucs4:"rule", rx1476_fail3021
    add rx1476_pos, 4
    goto alt1481_end3033
  alt1481_end3033:
    nqp_rxcommit rx1476_bstack, alt1481_end3033
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1483_03039:
    nqp_rxmark rx1476_bstack, alt1483_13045, rx1476_pos, 0
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 3
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 3
    ne $S10, ucs4:"::(", rx1476_fail3021
    add rx1476_pos, 3
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1486_pass3042, -1, 0
  rxsubrule1486_pass3042:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:")", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1483_end3038
  alt1483_13045:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1490_pass3047, -1, 0
  rxsubrule1490_pass3047:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1483_end3038:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1493_03051:
    nqp_rxmark rx1476_bstack, alt1493_13054, rx1476_pos, 0
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 3
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 3
    ne $S10, ucs4:"{*}", rx1476_fail3021
    add rx1476_pos, 3
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1493_end3050
  alt1493_13054:
    nqp_rxmark rx1476_bstack, alt1493_23059, rx1476_pos, 0
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"{", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"<...>", rx1476_fail3021
    add rx1476_pos, 5
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"}", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1493_end3050
  alt1493_23059:
    nqp_rxmark rx1476_bstack, alt1493_33064, rx1476_pos, 0
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"{", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 3
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 3
    ne $S10, ucs4:"<*>", rx1476_fail3021
    add rx1476_pos, 3
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"}", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1493_end3050
  alt1493_33064:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."panic"("Proto regex body must be \\{*\\} (or <*> or <...>, which are deprecated)")
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1493_end3050:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1478_end3028
  alt1478_13069:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    nqp_rxmark rx1476_bstack, rxcap1509_fail3072, rx1476_pos, 0
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1510_03074
    nqp_push_label $P11, alt1510_13075
    nqp_push_label $P11, alt1510_23076
    nqp_rxmark rx1476_bstack, alt1510_end3073, -1, 0
    rx1476_cur."!alt"(rx1476_pos, "alt_nfa__32_1361537956.03631", $P11)
    goto rx1476_fail3021
  alt1510_03074:
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"regex", rx1476_fail3021
    add rx1476_pos, 5
    goto alt1510_end3073
  alt1510_13075:
    add $I11, rx1476_pos, 5
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 5
    ne $S10, ucs4:"token", rx1476_fail3021
    add rx1476_pos, 5
    goto alt1510_end3073
  alt1510_23076:
    add $I11, rx1476_pos, 4
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 4
    ne $S10, ucs4:"rule", rx1476_fail3021
    add rx1476_pos, 4
    goto alt1510_end3073
  alt1510_end3073:
    nqp_rxcommit rx1476_bstack, alt1510_end3073
    nqp_rxpeek $I19, rx1476_bstack, rxcap1509_fail3072
    inc $I19
    set $I11, rx1476_bstack[$I19]
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1476_pos)
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "sym")
    goto rxcap1509_done3071
  rxcap1509_fail3072:
    goto rx1476_fail3021
  rxcap1509_done3071:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1513_03080:
    nqp_rxmark rx1476_bstack, alt1513_13086, rx1476_pos, 0
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 3
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 3
    ne $S10, ucs4:"::(", rx1476_fail3021
    add rx1476_pos, 3
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1516_pass3083, -1, 0
  rxsubrule1516_pass3083:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "latename=variable")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:")", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1513_end3079
  alt1513_13086:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1520_pass3088, -1, 0
  rxsubrule1520_pass3088:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
  alt1513_end3079:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    nqp_rxmark rx1476_bstack, rxquantr1525_done3094, rx1476_pos, 0
  rxquantr1525_loop3093:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"(", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."signature"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1528_pass3097, -1, 0
  rxsubrule1528_pass3097:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "signature")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:")", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    nqp_rxpeek $I19, rx1476_bstack, rxquantr1525_done3094
    inc $I19
    inc $I19
    set rx1476_rep, rx1476_bstack[$I19]
    nqp_rxcommit rx1476_bstack, rxquantr1525_done3094
    inc rx1476_rep
  rxquantr1525_done3094:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    store_lex unicode:"$\x{a2}", rx1476_cur
    unless_null $P101, fallback3101
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_25, $P5002
    set fb_tmp_257, pkg_viv_tmp_25
    repr_defined $I5001, fb_tmp_257
    unless $I5001 goto if1532_else3102 
    set $P5004, fb_tmp_257["%RX"]
    set $P5006, $P5004
    goto if1532_end3103
  if1532_else3102:
    null $P5005
    set $P5006, $P5005
  if1532_end3103:
    unless_null $P5006, vivi_15333104
    new $P5007, 'Hash'
    set pkg_viv_tmp_25["%RX"], $P5007
    set $P5006, $P5007
  vivi_15333104:
    unless_null $P5006, vivi_15343105
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_15343105:
    set $P101, $P5006
  fallback3101:
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    store_lex unicode:"$\x{a2}", rx1476_cur
    $P5009 = $P102."MATCH"()
    set $P103, $P5009
    .const 'Sub' $P5010 = 'cuid_411_1361537952.49511' 
    capture_lex $P5010
    $P5011 = $P5010()
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"{", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    nqp_rxmark rx1476_bstack, rxsubrule1574_pass3174, -1, 0
  rxsubrule1574_pass3174:
    rx1476_cstack = rx1476_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    add $I11, rx1476_pos, 1
    gt $I11, rx1476_eos, rx1476_fail3021
    substr $S10, rx1476_tgt, rx1476_pos, 1
    ne $S10, ucs4:"}", rx1476_fail3021
    add rx1476_pos, 1
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_bind_attr_int rx1476_cur, rx1476_curclass, "$!pos", rx1476_pos
    $P11 = rx1476_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1476_curclass, "$!pos"
    lt $I11, 0, rx1476_fail3021
    repr_get_attr_int rx1476_pos, $P11, rx1476_curclass, "$!pos"
    goto alt1478_end3028
  alt1478_end3028:
    nqp_rxcommit rx1476_bstack, alt1478_end3028
    rx1476_cur."!cursor_pass"(rx1476_pos, "regex_declarator", 'backtrack'=>1)
    .return (rx1476_cur)
  rx1476_restart3020:
    repr_get_attr_obj rx1476_cstack, rx1476_cur, rx1476_curclass, "$!cstack"
  rx1476_fail3021:
    unless rx1476_bstack, rx1476_done3019
    pop $I19, rx1476_bstack
    if_null rx1476_cstack, rx1476_cstack_done3024
    unless rx1476_cstack, rx1476_cstack_done3024
    dec $I19
    set $P11, rx1476_cstack[$I19]
  rx1476_cstack_done3024:
    pop rx1476_rep, rx1476_bstack
    pop rx1476_pos, rx1476_bstack
    pop $I19, rx1476_bstack
    lt rx1476_pos, -1, rx1476_done3019
    lt rx1476_pos, 0, rx1476_fail3021
    eq $I19, 0, rx1476_fail3021
    nqp_islist $I20, rx1476_cstack
    unless $I20, rx1476_jump3022
    elements $I18, rx1476_bstack
    le $I18, 0, rx1476_cut3023
    dec $I18
    set $I18, rx1476_bstack[$I18]
  rx1476_cut3023:
    assign rx1476_cstack, $I18
  rx1476_jump3022:
    jump $I19
  rx1476_done3019:
    rx1476_cur."!cursor_fail"()
    .return (rx1476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_411_1361537952.49511") :anon :lex :outer("cuid_138_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1205
    .local pmc fb_tmp_258 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc fb_tmp_270 
    .local pmc fb_tmp_271 
    .local pmc pkg_viv_tmp_30 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback3107
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_26, $P5002
    set fb_tmp_258, pkg_viv_tmp_26
    repr_defined $I5001, fb_tmp_258
    unless $I5001 goto if1536_else3108 
    set $P5004, fb_tmp_258["%RX"]
    set $P5006, $P5004
    goto if1536_end3109
  if1536_else3108:
    null $P5005
    set $P5006, $P5005
  if1536_end3109:
    unless_null $P5006, vivi_15373110
    new $P5007, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5007
    set $P5006, $P5007
  vivi_15373110:
    unless_null $P5006, vivi_15383111
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_15383111:
    set $P5001, $P5006
  fallback3107:
    find_lex $P5009, "$/"
    unless_null $P5009, fallback3114
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  fallback3114:
    set fb_tmp_259, $P5009
    repr_defined $I5003, fb_tmp_259
    unless $I5003 goto if1539_else3112 
    set $P5011, fb_tmp_259["sym"]
    set $P5013, $P5011
    goto if1539_end3113
  if1539_else3112:
    null $P5012
    set $P5013, $P5012
  if1539_end3113:
    unless_null $P5013, vivi_15403115
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_15403115:
    set $S5001, $P5013
    iseq $I5002, $S5001, "rule"
    box $P5015, $I5002
    set $P5001["s"], $P5015
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback3116
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_27, $P5017
    set fb_tmp_260, pkg_viv_tmp_27
    repr_defined $I5004, fb_tmp_260
    unless $I5004 goto if1541_else3117 
    set $P5019, fb_tmp_260["%RX"]
    set $P5021, $P5019
    goto if1541_end3118
  if1541_else3117:
    null $P5020
    set $P5021, $P5020
  if1541_end3118:
    unless_null $P5021, vivi_15423119
    new $P5022, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5022
    set $P5021, $P5022
  vivi_15423119:
    unless_null $P5021, vivi_15433120
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_15433120:
    set $P5016, $P5021
  fallback3116:
    find_lex $P5024, "$/"
    unless_null $P5024, fallback3125
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  fallback3125:
    set fb_tmp_261, $P5024
    repr_defined $I5006, fb_tmp_261
    unless $I5006 goto if1545_else3123 
    set $P5026, fb_tmp_261["sym"]
    set $P5028, $P5026
    goto if1545_end3124
  if1545_else3123:
    null $P5027
    set $P5028, $P5027
  if1545_end3124:
    unless_null $P5028, vivi_15463126
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_15463126:
    set $S5002, $P5028
    iseq $I5005, $S5002, "token"
    set $I5009, $I5005
    if $I5005 goto unless1544_end3122 
    find_lex $P5030, "$/"
    unless_null $P5030, fallback3129
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  fallback3129:
    set fb_tmp_262, $P5030
    repr_defined $I5008, fb_tmp_262
    unless $I5008 goto if1547_else3127 
    set $P5032, fb_tmp_262["sym"]
    set $P5034, $P5032
    goto if1547_end3128
  if1547_else3127:
    null $P5033
    set $P5034, $P5033
  if1547_end3128:
    unless_null $P5034, vivi_15483130
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_15483130:
    set $S5003, $P5034
    iseq $I5007, $S5003, "rule"
    set $I5009, $I5007
  unless1544_end3122:
    box $P5036, $I5009
    set $P5016["r"], $P5036
    find_dynamic_lex $P5037, "%*RX"
    unless_null $P5037, fallback3131
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5038, $P5039
    set pkg_viv_tmp_28, $P5038
    set fb_tmp_263, pkg_viv_tmp_28
    repr_defined $I5010, fb_tmp_263
    unless $I5010 goto if1549_else3132 
    set $P5040, fb_tmp_263["%RX"]
    set $P5042, $P5040
    goto if1549_end3133
  if1549_else3132:
    null $P5041
    set $P5042, $P5041
  if1549_end3133:
    unless_null $P5042, vivi_15503134
    new $P5043, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5043
    set $P5042, $P5043
  vivi_15503134:
    unless_null $P5042, vivi_15513135
    die "Contextual %*RX not found"
    box $P5044, "Contextual %*RX not found"
    set $P5042, $P5044
  vivi_15513135:
    set $P5037, $P5042
  fallback3131:
    find_lex $P5045, "$/"
    unless_null $P5045, fallback3140
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  fallback3140:
    set fb_tmp_264, $P5045
    repr_defined $I5011, fb_tmp_264
    unless $I5011 goto if1553_else3138 
    set $P5047, fb_tmp_264["deflongname"]
    set $P5049, $P5047
    goto if1553_end3139
  if1553_else3138:
    null $P5048
    set $P5049, $P5048
  if1553_end3139:
    unless_null $P5049, vivi_15543141
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_15543141:
    unless $P5049 goto if1552_else3136 
.annotate 'line', 1208
    find_lex $P5051, "$/"
    unless_null $P5051, fallback3144
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  fallback3144:
    set fb_tmp_265, $P5051
    repr_defined $I5012, fb_tmp_265
    unless $I5012 goto if1555_else3142 
    set $P5053, fb_tmp_265["deflongname"]
    set $P5055, $P5053
    goto if1555_end3143
  if1555_else3142:
    null $P5054
    set $P5055, $P5054
  if1555_end3143:
    unless_null $P5055, vivi_15563145
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_15563145:
    $P5057 = $P5055."ast"()
    set $P5064, $P5057
    goto if1552_end3137
  if1552_else3136:
    find_lex $P5058, "$/"
    unless_null $P5058, fallback3148
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5059
  fallback3148:
    set fb_tmp_266, $P5058
    repr_defined $I5013, fb_tmp_266
    unless $I5013 goto if1557_else3146 
    set $P5060, fb_tmp_266["latename"]
    set $P5062, $P5060
    goto if1557_end3147
  if1557_else3146:
    null $P5061
    set $P5062, $P5061
  if1557_end3147:
    unless_null $P5062, vivi_15583149
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5063
  vivi_15583149:
    set $S5005, $P5062
    concat $S5004, "!!LATENAME!!", $S5005
    box $P5065, $S5004
    set $P5064, $P5065
  if1552_end3137:
    set $P5037["name"], $P5064
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback3150
    nqp_get_sc_object $P5068, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_29, $P5067
    set fb_tmp_267, pkg_viv_tmp_29
    repr_defined $I5014, fb_tmp_267
    unless $I5014 goto if1559_else3151 
    set $P5069, fb_tmp_267["%RX"]
    set $P5071, $P5069
    goto if1559_end3152
  if1559_else3151:
    null $P5070
    set $P5071, $P5070
  if1559_end3152:
    unless_null $P5071, vivi_15603153
    new $P5072, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5072
    set $P5071, $P5072
  vivi_15603153:
    unless_null $P5071, vivi_15613154
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_15613154:
    set $P5066, $P5071
  fallback3150:
.annotate 'line', 1209
    find_dynamic_lex $P5074, "$*W"
    unless_null $P5074, fallback3155
    nqp_get_sc_object $P5076, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5075, $P5076
    set fb_tmp_268, $P5075
    repr_defined $I5015, fb_tmp_268
    unless $I5015 goto if1562_else3156 
    set $P5077, fb_tmp_268["$W"]
    set $P5079, $P5077
    goto if1562_end3157
  if1562_else3156:
    null $P5078
    set $P5079, $P5078
  if1562_end3157:
    unless_null $P5079, vivi_15633158
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_15633158:
    unless_null $P5079, vivi_15643159
    die "Contextual $*W not found"
    box $P5081, "Contextual $*W not found"
    set $P5079, $P5081
  vivi_15643159:
    set $P5074, $P5079
  fallback3155:
    find_dynamic_lex $P5082, "$*W"
    unless_null $P5082, fallback3160
    nqp_get_sc_object $P5084, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5083, $P5084
    set fb_tmp_269, $P5083
    repr_defined $I5016, fb_tmp_269
    unless $I5016 goto if1565_else3161 
    set $P5085, fb_tmp_269["$W"]
    set $P5087, $P5085
    goto if1565_end3162
  if1565_else3161:
    null $P5086
    set $P5087, $P5086
  if1565_end3162:
    unless_null $P5087, vivi_15663163
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_15663163:
    unless_null $P5087, vivi_15673164
    die "Contextual $*W not found"
    box $P5089, "Contextual $*W not found"
    set $P5087, $P5089
  vivi_15673164:
    set $P5082, $P5087
  fallback3160:
    $P5090 = $P5082."cur_lexpad"()
    find_dynamic_lex $P5091, "%*RX"
    unless_null $P5091, fallback3167
    nqp_get_sc_object $P5093, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_30, $P5092
    set fb_tmp_271, pkg_viv_tmp_30
    repr_defined $I5018, fb_tmp_271
    unless $I5018 goto if1569_else3168 
    set $P5094, fb_tmp_271["%RX"]
    set $P5096, $P5094
    goto if1569_end3169
  if1569_else3168:
    null $P5095
    set $P5096, $P5095
  if1569_end3169:
    unless_null $P5096, vivi_15703170
    new $P5097, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5097
    set $P5096, $P5097
  vivi_15703170:
    unless_null $P5096, vivi_15713171
    die "Contextual %*RX not found"
    box $P5098, "Contextual %*RX not found"
    set $P5096, $P5098
  vivi_15713171:
    set $P5091, $P5096
  fallback3167:
    set fb_tmp_270, $P5091
    repr_defined $I5017, fb_tmp_270
    unless $I5017 goto if1568_else3165 
    set $P5099, fb_tmp_270["name"]
    set $P5101, $P5099
    goto if1568_end3166
  if1568_else3165:
    null $P5100
    set $P5101, $P5100
  if1568_end3166:
    unless_null $P5101, vivi_15723172
    nqp_get_sc_object $P5102, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5101, $P5102
  vivi_15723172:
    $P5103 = $P5074."create_code"($P5090, $P5101, 0, "NQPRegex" :named("code_type_name"))
    set $P5066["code"], $P5103
    .return ($P5103) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_139_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1215
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1576_start
    .local string rx1576_tgt
    .local int rx1576_pos
    .local int rx1576_off
    .local int rx1576_eos
    .local int rx1576_rep
    .local pmc rx1576_cur
    .local pmc rx1576_curclass
    .local pmc rx1576_bstack
    .local pmc rx1576_cstack
    rx1576_start = self."!cursor_start_all"()
    set rx1576_cur, rx1576_start[0]
    set rx1576_tgt, rx1576_start[1]
    set rx1576_pos, rx1576_start[2]
    set rx1576_curclass, rx1576_start[3]
    set rx1576_bstack, rx1576_start[4]
    set $I19, rx1576_start[5]
    store_lex unicode:"$\x{a2}", rx1576_cur
    length rx1576_eos, rx1576_tgt
    eq $I19, 1, rx1576_restart3178
    gt rx1576_pos, rx1576_eos, rx1576_fail3179
    repr_get_attr_int $I11, self, rx1576_curclass, "$!from"
    ne $I11, -1, rxscan1577_done3185
    goto rxscan1577_scan3184
  rxscan1577_loop3183:
    inc rx1576_pos
    gt rx1576_pos, rx1576_eos, rx1576_fail3179
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!from", rx1576_pos
  rxscan1577_scan3184:
    nqp_rxmark rx1576_bstack, rxscan1577_loop3183, rx1576_pos, 0
  rxscan1577_done3185:
    add $I11, rx1576_pos, 1
    gt $I11, rx1576_eos, rx1576_fail3179
    substr $S10, rx1576_tgt, rx1576_pos, 1
    ne $S10, ucs4:".", rx1576_fail3179
    add rx1576_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1578_03187
    nqp_push_label $P11, alt1578_13189
    nqp_rxmark rx1576_bstack, alt1578_end3186, -1, 0
    rx1576_cur."!alt"(rx1576_pos, "alt_nfa__34_1361537956.06751", $P11)
    goto rx1576_fail3179
  alt1578_03187:
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3179
    nqp_rxmark rx1576_bstack, rxsubrule1579_pass3188, -1, 0
  rxsubrule1579_pass3188:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "longname=deflongname")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    goto alt1578_end3186
  alt1578_13189:
    ge rx1576_pos, rx1576_eos, rx1576_fail3179
    substr $S11, rx1576_tgt, rx1576_pos, 1
    index $I11, ucs4:"'\"", $S11
    lt $I11, 0, rx1576_fail3179
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3179
    nqp_rxmark rx1576_bstack, rxsubrule1580_pass3190, -1, 0
  rxsubrule1580_pass3190:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
  alt1581_03192:
    nqp_rxmark rx1576_bstack, alt1581_13193, rx1576_pos, 0
    ge rx1576_pos, rx1576_eos, rx1576_fail3179
    substr $S11, rx1576_tgt, rx1576_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1576_fail3179
    goto alt1581_end3191
  alt1581_13193:
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."panic"("Quoted method name requires parenthesized arguments")
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3179
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
  alt1581_end3191:
    goto alt1578_end3186
  alt1578_end3186:
    nqp_rxcommit rx1576_bstack, alt1578_end3186
    nqp_rxmark rx1576_bstack, rxquantr1583_done3196, rx1576_pos, 0
  rxquantr1583_loop3195:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1584_03198
    nqp_push_label $P11, alt1584_13200
    nqp_rxmark rx1576_bstack, alt1584_end3197, -1, 0
    rx1576_cur."!alt"(rx1576_pos, "alt_nfa__35_1361537956.06751", $P11)
    goto rx1576_fail3179
  alt1584_03198:
    ge rx1576_pos, rx1576_eos, rx1576_fail3179
    substr $S11, rx1576_tgt, rx1576_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1576_fail3179
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."args"()
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3179
    nqp_rxmark rx1576_bstack, rxsubrule1585_pass3199, -1, 0
  rxsubrule1585_pass3199:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    goto alt1584_end3197
  alt1584_13200:
    add $I11, rx1576_pos, 1
    gt $I11, rx1576_eos, rx1576_fail3179
    substr $S10, rx1576_tgt, rx1576_pos, 1
    ne $S10, ucs4:":", rx1576_fail3179
    add rx1576_pos, 1
    ge rx1576_pos, rx1576_eos, rx1576_fail3179
    is_cclass $I11, .CCLASS_WHITESPACE, rx1576_tgt, rx1576_pos
    unless $I11, rx1576_fail3179
    add rx1576_pos, 1
    repr_bind_attr_int rx1576_cur, rx1576_curclass, "$!pos", rx1576_pos
    $P11 = rx1576_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1576_curclass, "$!pos"
    lt $I11, 0, rx1576_fail3179
    nqp_rxmark rx1576_bstack, rxsubrule1586_pass3201, -1, 0
  rxsubrule1586_pass3201:
    rx1576_cstack = rx1576_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1576_pos, $P11, rx1576_curclass, "$!pos"
    goto alt1584_end3197
  alt1584_end3197:
    nqp_rxpeek $I19, rx1576_bstack, rxquantr1583_done3196
    inc $I19
    inc $I19
    set rx1576_rep, rx1576_bstack[$I19]
    nqp_rxcommit rx1576_bstack, rxquantr1583_done3196
    inc rx1576_rep
  rxquantr1583_done3196:
    rx1576_cur."!cursor_pass"(rx1576_pos, "dotty", 'backtrack'=>1)
    .return (rx1576_cur)
  rx1576_restart3178:
    repr_get_attr_obj rx1576_cstack, rx1576_cur, rx1576_curclass, "$!cstack"
  rx1576_fail3179:
    unless rx1576_bstack, rx1576_done3177
    pop $I19, rx1576_bstack
    if_null rx1576_cstack, rx1576_cstack_done3182
    unless rx1576_cstack, rx1576_cstack_done3182
    dec $I19
    set $P11, rx1576_cstack[$I19]
  rx1576_cstack_done3182:
    pop rx1576_rep, rx1576_bstack
    pop rx1576_pos, rx1576_bstack
    pop $I19, rx1576_bstack
    lt rx1576_pos, -1, rx1576_done3177
    lt rx1576_pos, 0, rx1576_fail3179
    eq $I19, 0, rx1576_fail3179
    nqp_islist $I20, rx1576_cstack
    unless $I20, rx1576_jump3180
    elements $I18, rx1576_bstack
    le $I18, 0, rx1576_cut3181
    dec $I18
    set $I18, rx1576_bstack[$I18]
  rx1576_cut3181:
    assign rx1576_cstack, $I18
  rx1576_jump3180:
    jump $I19
  rx1576_done3177:
    rx1576_cur."!cursor_fail"()
    .return (rx1576_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_140_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1228
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1587_start
    .local string rx1587_tgt
    .local int rx1587_pos
    .local int rx1587_off
    .local int rx1587_eos
    .local int rx1587_rep
    .local pmc rx1587_cur
    .local pmc rx1587_curclass
    .local pmc rx1587_bstack
    .local pmc rx1587_cstack
    rx1587_start = self."!cursor_start_all"()
    set rx1587_cur, rx1587_start[0]
    set rx1587_tgt, rx1587_start[1]
    set rx1587_pos, rx1587_start[2]
    set rx1587_curclass, rx1587_start[3]
    set rx1587_bstack, rx1587_start[4]
    set $I19, rx1587_start[5]
    store_lex unicode:"$\x{a2}", rx1587_cur
    length rx1587_eos, rx1587_tgt
    eq $I19, 1, rx1587_restart3204
    gt rx1587_pos, rx1587_eos, rx1587_fail3205
    repr_get_attr_int $I11, self, rx1587_curclass, "$!from"
    ne $I11, -1, rxscan1588_done3211
    goto rxscan1588_scan3210
  rxscan1588_loop3209:
    inc rx1587_pos
    gt rx1587_pos, rx1587_eos, rx1587_fail3205
    repr_bind_attr_int rx1587_cur, rx1587_curclass, "$!from", rx1587_pos
  rxscan1588_scan3210:
    nqp_rxmark rx1587_bstack, rxscan1588_loop3209, rx1587_pos, 0
  rxscan1588_done3211:
    nqp_rxmark rx1587_bstack, rxcap1589_fail3213, rx1587_pos, 0
    add $I11, rx1587_pos, 4
    gt $I11, rx1587_eos, rx1587_fail3205
    substr $S10, rx1587_tgt, rx1587_pos, 4
    ne $S10, ucs4:"self", rx1587_fail3205
    add rx1587_pos, 4
    nqp_rxpeek $I19, rx1587_bstack, rxcap1589_fail3213
    inc $I19
    set $I11, rx1587_bstack[$I19]
    repr_bind_attr_int rx1587_cur, rx1587_curclass, "$!pos", rx1587_pos
    $P11 = rx1587_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1587_pos)
    rx1587_cstack = rx1587_cur."!cursor_capture"($P11, "sym")
    goto rxcap1589_done3212
  rxcap1589_fail3213:
    goto rx1587_fail3205
  rxcap1589_done3212:
    le rx1587_pos, 0, rx1587_fail3205
    is_cclass $I11, .CCLASS_WORD, rx1587_tgt, rx1587_pos
    if $I11, rx1587_fail3205
    sub $I11, rx1587_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1587_tgt, $I11
    unless $I11, rx1587_fail3205
    rx1587_cur."!cursor_pass"(rx1587_pos, "term:sym<self>", 'backtrack'=>1)
    .return (rx1587_cur)
  rx1587_restart3204:
    repr_get_attr_obj rx1587_cstack, rx1587_cur, rx1587_curclass, "$!cstack"
  rx1587_fail3205:
    unless rx1587_bstack, rx1587_done3203
    pop $I19, rx1587_bstack
    if_null rx1587_cstack, rx1587_cstack_done3208
    unless rx1587_cstack, rx1587_cstack_done3208
    dec $I19
    set $P11, rx1587_cstack[$I19]
  rx1587_cstack_done3208:
    pop rx1587_rep, rx1587_bstack
    pop rx1587_pos, rx1587_bstack
    pop $I19, rx1587_bstack
    lt rx1587_pos, -1, rx1587_done3203
    lt rx1587_pos, 0, rx1587_fail3205
    eq $I19, 0, rx1587_fail3205
    nqp_islist $I20, rx1587_cstack
    unless $I20, rx1587_jump3206
    elements $I18, rx1587_bstack
    le $I18, 0, rx1587_cut3207
    dec $I18
    set $I18, rx1587_bstack[$I18]
  rx1587_cut3207:
    assign rx1587_cstack, $I18
  rx1587_jump3206:
    jump $I19
  rx1587_done3203:
    rx1587_cur."!cursor_fail"()
    .return (rx1587_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_141_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1230
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1591_start
    .local string rx1591_tgt
    .local int rx1591_pos
    .local int rx1591_off
    .local int rx1591_eos
    .local int rx1591_rep
    .local pmc rx1591_cur
    .local pmc rx1591_curclass
    .local pmc rx1591_bstack
    .local pmc rx1591_cstack
    rx1591_start = self."!cursor_start_all"()
    set rx1591_cur, rx1591_start[0]
    set rx1591_tgt, rx1591_start[1]
    set rx1591_pos, rx1591_start[2]
    set rx1591_curclass, rx1591_start[3]
    set rx1591_bstack, rx1591_start[4]
    set $I19, rx1591_start[5]
    store_lex unicode:"$\x{a2}", rx1591_cur
    length rx1591_eos, rx1591_tgt
    eq $I19, 1, rx1591_restart3217
    gt rx1591_pos, rx1591_eos, rx1591_fail3218
    repr_get_attr_int $I11, self, rx1591_curclass, "$!from"
    ne $I11, -1, rxscan1592_done3224
    goto rxscan1592_scan3223
  rxscan1592_loop3222:
    inc rx1591_pos
    gt rx1591_pos, rx1591_eos, rx1591_fail3218
    repr_bind_attr_int rx1591_cur, rx1591_curclass, "$!from", rx1591_pos
  rxscan1592_scan3223:
    nqp_rxmark rx1591_bstack, rxscan1592_loop3222, rx1591_pos, 0
  rxscan1592_done3224:
    repr_bind_attr_int rx1591_cur, rx1591_curclass, "$!pos", rx1591_pos
    $P11 = rx1591_cur."deflongname"()
    repr_get_attr_int $I11, $P11, rx1591_curclass, "$!pos"
    lt $I11, 0, rx1591_fail3218
    nqp_rxmark rx1591_bstack, rxsubrule1593_pass3225, -1, 0
  rxsubrule1593_pass3225:
    rx1591_cstack = rx1591_cur."!cursor_capture"($P11, "deflongname")
    repr_get_attr_int rx1591_pos, $P11, rx1591_curclass, "$!pos"
    ge rx1591_pos, rx1591_eos, rx1591_fail3218
    substr $S11, rx1591_tgt, rx1591_pos, 1
    index $I11, ucs4:"(", $S11
    lt $I11, 0, rx1591_fail3218
    repr_bind_attr_int rx1591_cur, rx1591_curclass, "$!pos", rx1591_pos
    $P11 = rx1591_cur."args"()
    repr_get_attr_int $I11, $P11, rx1591_curclass, "$!pos"
    lt $I11, 0, rx1591_fail3218
    nqp_rxmark rx1591_bstack, rxsubrule1594_pass3226, -1, 0
  rxsubrule1594_pass3226:
    rx1591_cstack = rx1591_cur."!cursor_capture"($P11, "args")
    repr_get_attr_int rx1591_pos, $P11, rx1591_curclass, "$!pos"
    rx1591_cur."!cursor_pass"(rx1591_pos, "term:sym<identifier>", 'backtrack'=>1)
    .return (rx1591_cur)
  rx1591_restart3217:
    repr_get_attr_obj rx1591_cstack, rx1591_cur, rx1591_curclass, "$!cstack"
  rx1591_fail3218:
    unless rx1591_bstack, rx1591_done3216
    pop $I19, rx1591_bstack
    if_null rx1591_cstack, rx1591_cstack_done3221
    unless rx1591_cstack, rx1591_cstack_done3221
    dec $I19
    set $P11, rx1591_cstack[$I19]
  rx1591_cstack_done3221:
    pop rx1591_rep, rx1591_bstack
    pop rx1591_pos, rx1591_bstack
    pop $I19, rx1591_bstack
    lt rx1591_pos, -1, rx1591_done3216
    lt rx1591_pos, 0, rx1591_fail3218
    eq $I19, 0, rx1591_fail3218
    nqp_islist $I20, rx1591_cstack
    unless $I20, rx1591_jump3219
    elements $I18, rx1591_bstack
    le $I18, 0, rx1591_cut3220
    dec $I18
    set $I18, rx1591_bstack[$I18]
  rx1591_cut3220:
    assign rx1591_cstack, $I18
  rx1591_jump3219:
    jump $I19
  rx1591_done3216:
    rx1591_cur."!cursor_fail"()
    .return (rx1591_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_142_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1234
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1595_start
    .local string rx1595_tgt
    .local int rx1595_pos
    .local int rx1595_off
    .local int rx1595_eos
    .local int rx1595_rep
    .local pmc rx1595_cur
    .local pmc rx1595_curclass
    .local pmc rx1595_bstack
    .local pmc rx1595_cstack
    rx1595_start = self."!cursor_start_all"()
    set rx1595_cur, rx1595_start[0]
    set rx1595_tgt, rx1595_start[1]
    set rx1595_pos, rx1595_start[2]
    set rx1595_curclass, rx1595_start[3]
    set rx1595_bstack, rx1595_start[4]
    set $I19, rx1595_start[5]
    store_lex unicode:"$\x{a2}", rx1595_cur
    length rx1595_eos, rx1595_tgt
    eq $I19, 1, rx1595_restart3229
    gt rx1595_pos, rx1595_eos, rx1595_fail3230
    repr_get_attr_int $I11, self, rx1595_curclass, "$!from"
    ne $I11, -1, rxscan1596_done3236
    goto rxscan1596_scan3235
  rxscan1596_loop3234:
    inc rx1595_pos
    gt rx1595_pos, rx1595_eos, rx1595_fail3230
    repr_bind_attr_int rx1595_cur, rx1595_curclass, "$!from", rx1595_pos
  rxscan1596_scan3235:
    nqp_rxmark rx1595_bstack, rxscan1596_loop3234, rx1595_pos, 0
  rxscan1596_done3236:
    repr_bind_attr_int rx1595_cur, rx1595_curclass, "$!pos", rx1595_pos
    $P11 = rx1595_cur."name"()
    repr_get_attr_int $I11, $P11, rx1595_curclass, "$!pos"
    lt $I11, 0, rx1595_fail3230
    nqp_rxmark rx1595_bstack, rxsubrule1597_pass3237, -1, 0
  rxsubrule1597_pass3237:
    rx1595_cstack = rx1595_cur."!cursor_capture"($P11, "name")
    repr_get_attr_int rx1595_pos, $P11, rx1595_curclass, "$!pos"
    nqp_rxmark rx1595_bstack, rxquantr1598_done3239, rx1595_pos, 0
  rxquantr1598_loop3238:
    repr_bind_attr_int rx1595_cur, rx1595_curclass, "$!pos", rx1595_pos
    $P11 = rx1595_cur."args"()
    repr_get_attr_int $I11, $P11, rx1595_curclass, "$!pos"
    lt $I11, 0, rx1595_fail3230
    goto rxsubrule1599_pass3240
  rxsubrule1599_back3241:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1595_curclass, "$!pos"
    lt $I11, 0, rx1595_fail3230
  rxsubrule1599_pass3240:
    rx1595_cstack = rx1595_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1599_back3241
    push rx1595_bstack, $I11
    push rx1595_bstack, 0
    push rx1595_bstack, rx1595_pos
    elements $I11, rx1595_cstack
    push rx1595_bstack, $I11
    repr_get_attr_int rx1595_pos, $P11, rx1595_curclass, "$!pos"
    nqp_rxpeek $I19, rx1595_bstack, rxquantr1598_done3239
    inc $I19
    inc $I19
    set rx1595_rep, rx1595_bstack[$I19]
    nqp_rxcommit rx1595_bstack, rxquantr1598_done3239
    inc rx1595_rep
  rxquantr1598_done3239:
    rx1595_cur."!cursor_pass"(rx1595_pos, "term:sym<name>", 'backtrack'=>1)
    .return (rx1595_cur)
  rx1595_restart3229:
    repr_get_attr_obj rx1595_cstack, rx1595_cur, rx1595_curclass, "$!cstack"
  rx1595_fail3230:
    unless rx1595_bstack, rx1595_done3228
    pop $I19, rx1595_bstack
    if_null rx1595_cstack, rx1595_cstack_done3233
    unless rx1595_cstack, rx1595_cstack_done3233
    dec $I19
    set $P11, rx1595_cstack[$I19]
  rx1595_cstack_done3233:
    pop rx1595_rep, rx1595_bstack
    pop rx1595_pos, rx1595_bstack
    pop $I19, rx1595_bstack
    lt rx1595_pos, -1, rx1595_done3228
    lt rx1595_pos, 0, rx1595_fail3230
    eq $I19, 0, rx1595_fail3230
    nqp_islist $I20, rx1595_cstack
    unless $I20, rx1595_jump3231
    elements $I18, rx1595_bstack
    le $I18, 0, rx1595_cut3232
    dec $I18
    set $I18, rx1595_bstack[$I18]
  rx1595_cut3232:
    assign rx1595_cstack, $I18
  rx1595_jump3231:
    jump $I19
  rx1595_done3228:
    rx1595_cur."!cursor_fail"()
    .return (rx1595_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_143_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1238
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1600_start
    .local string rx1600_tgt
    .local int rx1600_pos
    .local int rx1600_off
    .local int rx1600_eos
    .local int rx1600_rep
    .local pmc rx1600_cur
    .local pmc rx1600_curclass
    .local pmc rx1600_bstack
    .local pmc rx1600_cstack
    rx1600_start = self."!cursor_start_all"()
    set rx1600_cur, rx1600_start[0]
    set rx1600_tgt, rx1600_start[1]
    set rx1600_pos, rx1600_start[2]
    set rx1600_curclass, rx1600_start[3]
    set rx1600_bstack, rx1600_start[4]
    set $I19, rx1600_start[5]
    store_lex unicode:"$\x{a2}", rx1600_cur
    length rx1600_eos, rx1600_tgt
    eq $I19, 1, rx1600_restart3244
    gt rx1600_pos, rx1600_eos, rx1600_fail3245
    repr_get_attr_int $I11, self, rx1600_curclass, "$!from"
    ne $I11, -1, rxscan1601_done3251
    goto rxscan1601_scan3250
  rxscan1601_loop3249:
    inc rx1600_pos
    gt rx1600_pos, rx1600_eos, rx1600_fail3245
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!from", rx1600_pos
  rxscan1601_scan3250:
    nqp_rxmark rx1600_bstack, rxscan1601_loop3249, rx1600_pos, 0
  rxscan1601_done3251:
    add $I11, rx1600_pos, 5
    gt $I11, rx1600_eos, rx1600_fail3245
    substr $S10, rx1600_tgt, rx1600_pos, 5
    ne $S10, ucs4:"pir::", rx1600_fail3245
    add rx1600_pos, 5
    nqp_rxmark rx1600_bstack, rxcap1602_fail3253, rx1600_pos, 0
    nqp_rxmark rx1600_bstack, rxquantr1603_done3255, -1, 0
  rxquantr1603_loop3254:
    ge rx1600_pos, rx1600_eos, rx1600_fail3245
    is_cclass $I11, .CCLASS_WORD, rx1600_tgt, rx1600_pos
    unless $I11, rx1600_fail3245
    add rx1600_pos, 1
    nqp_rxpeek $I19, rx1600_bstack, rxquantr1603_done3255
    inc $I19
    inc $I19
    set rx1600_rep, rx1600_bstack[$I19]
    nqp_rxcommit rx1600_bstack, rxquantr1603_done3255
    inc rx1600_rep
    nqp_rxmark rx1600_bstack, rxquantr1603_done3255, rx1600_pos, rx1600_rep
    goto rxquantr1603_loop3254
  rxquantr1603_done3255:
    nqp_rxpeek $I19, rx1600_bstack, rxcap1602_fail3253
    inc $I19
    set $I11, rx1600_bstack[$I19]
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1600_pos)
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "op")
    goto rxcap1602_done3252
  rxcap1602_fail3253:
    goto rx1600_fail3245
  rxcap1602_done3252:
    nqp_rxmark rx1600_bstack, rxquantr1604_done3257, rx1600_pos, 0
  rxquantr1604_loop3256:
    repr_bind_attr_int rx1600_cur, rx1600_curclass, "$!pos", rx1600_pos
    $P11 = rx1600_cur."args"()
    repr_get_attr_int $I11, $P11, rx1600_curclass, "$!pos"
    lt $I11, 0, rx1600_fail3245
    goto rxsubrule1605_pass3258
  rxsubrule1605_back3259:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1600_curclass, "$!pos"
    lt $I11, 0, rx1600_fail3245
  rxsubrule1605_pass3258:
    rx1600_cstack = rx1600_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1605_back3259
    push rx1600_bstack, $I11
    push rx1600_bstack, 0
    push rx1600_bstack, rx1600_pos
    elements $I11, rx1600_cstack
    push rx1600_bstack, $I11
    repr_get_attr_int rx1600_pos, $P11, rx1600_curclass, "$!pos"
    nqp_rxpeek $I19, rx1600_bstack, rxquantr1604_done3257
    inc $I19
    inc $I19
    set rx1600_rep, rx1600_bstack[$I19]
    nqp_rxcommit rx1600_bstack, rxquantr1604_done3257
    inc rx1600_rep
  rxquantr1604_done3257:
    rx1600_cur."!cursor_pass"(rx1600_pos, "term:sym<pir::op>", 'backtrack'=>1)
    .return (rx1600_cur)
  rx1600_restart3244:
    repr_get_attr_obj rx1600_cstack, rx1600_cur, rx1600_curclass, "$!cstack"
  rx1600_fail3245:
    unless rx1600_bstack, rx1600_done3243
    pop $I19, rx1600_bstack
    if_null rx1600_cstack, rx1600_cstack_done3248
    unless rx1600_cstack, rx1600_cstack_done3248
    dec $I19
    set $P11, rx1600_cstack[$I19]
  rx1600_cstack_done3248:
    pop rx1600_rep, rx1600_bstack
    pop rx1600_pos, rx1600_bstack
    pop $I19, rx1600_bstack
    lt rx1600_pos, -1, rx1600_done3243
    lt rx1600_pos, 0, rx1600_fail3245
    eq $I19, 0, rx1600_fail3245
    nqp_islist $I20, rx1600_cstack
    unless $I20, rx1600_jump3246
    elements $I18, rx1600_bstack
    le $I18, 0, rx1600_cut3247
    dec $I18
    set $I18, rx1600_bstack[$I18]
  rx1600_cut3247:
    assign rx1600_cstack, $I18
  rx1600_jump3246:
    jump $I19
  rx1600_done3243:
    rx1600_cur."!cursor_fail"()
    .return (rx1600_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_144_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1242
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1606_start
    .local string rx1606_tgt
    .local int rx1606_pos
    .local int rx1606_off
    .local int rx1606_eos
    .local int rx1606_rep
    .local pmc rx1606_cur
    .local pmc rx1606_curclass
    .local pmc rx1606_bstack
    .local pmc rx1606_cstack
    rx1606_start = self."!cursor_start_all"()
    set rx1606_cur, rx1606_start[0]
    set rx1606_tgt, rx1606_start[1]
    set rx1606_pos, rx1606_start[2]
    set rx1606_curclass, rx1606_start[3]
    set rx1606_bstack, rx1606_start[4]
    set $I19, rx1606_start[5]
    store_lex unicode:"$\x{a2}", rx1606_cur
    length rx1606_eos, rx1606_tgt
    eq $I19, 1, rx1606_restart3262
    gt rx1606_pos, rx1606_eos, rx1606_fail3263
    repr_get_attr_int $I11, self, rx1606_curclass, "$!from"
    ne $I11, -1, rxscan1607_done3269
    goto rxscan1607_scan3268
  rxscan1607_loop3267:
    inc rx1606_pos
    gt rx1606_pos, rx1606_eos, rx1606_fail3263
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!from", rx1606_pos
  rxscan1607_scan3268:
    nqp_rxmark rx1606_bstack, rxscan1607_loop3267, rx1606_pos, 0
  rxscan1607_done3269:
    add $I11, rx1606_pos, 12
    gt $I11, rx1606_eos, rx1606_fail3263
    substr $S10, rx1606_tgt, rx1606_pos, 12
    ne $S10, ucs4:"pir::const::", rx1606_fail3263
    add rx1606_pos, 12
    nqp_rxmark rx1606_bstack, rxcap1608_fail3271, rx1606_pos, 0
    nqp_rxmark rx1606_bstack, rxquantr1609_done3273, -1, 0
  rxquantr1609_loop3272:
    ge rx1606_pos, rx1606_eos, rx1606_fail3263
    is_cclass $I11, .CCLASS_WORD, rx1606_tgt, rx1606_pos
    unless $I11, rx1606_fail3263
    add rx1606_pos, 1
    nqp_rxpeek $I19, rx1606_bstack, rxquantr1609_done3273
    inc $I19
    inc $I19
    set rx1606_rep, rx1606_bstack[$I19]
    nqp_rxcommit rx1606_bstack, rxquantr1609_done3273
    inc rx1606_rep
    nqp_rxmark rx1606_bstack, rxquantr1609_done3273, rx1606_pos, rx1606_rep
    goto rxquantr1609_loop3272
  rxquantr1609_done3273:
    nqp_rxpeek $I19, rx1606_bstack, rxcap1608_fail3271
    inc $I19
    set $I11, rx1606_bstack[$I19]
    repr_bind_attr_int rx1606_cur, rx1606_curclass, "$!pos", rx1606_pos
    $P11 = rx1606_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1606_pos)
    rx1606_cstack = rx1606_cur."!cursor_capture"($P11, "const")
    goto rxcap1608_done3270
  rxcap1608_fail3271:
    goto rx1606_fail3263
  rxcap1608_done3270:
    rx1606_cur."!cursor_pass"(rx1606_pos, "term:sym<pir::const>", 'backtrack'=>1)
    .return (rx1606_cur)
  rx1606_restart3262:
    repr_get_attr_obj rx1606_cstack, rx1606_cur, rx1606_curclass, "$!cstack"
  rx1606_fail3263:
    unless rx1606_bstack, rx1606_done3261
    pop $I19, rx1606_bstack
    if_null rx1606_cstack, rx1606_cstack_done3266
    unless rx1606_cstack, rx1606_cstack_done3266
    dec $I19
    set $P11, rx1606_cstack[$I19]
  rx1606_cstack_done3266:
    pop rx1606_rep, rx1606_bstack
    pop rx1606_pos, rx1606_bstack
    pop $I19, rx1606_bstack
    lt rx1606_pos, -1, rx1606_done3261
    lt rx1606_pos, 0, rx1606_fail3263
    eq $I19, 0, rx1606_fail3263
    nqp_islist $I20, rx1606_cstack
    unless $I20, rx1606_jump3264
    elements $I18, rx1606_bstack
    le $I18, 0, rx1606_cut3265
    dec $I18
    set $I18, rx1606_bstack[$I18]
  rx1606_cut3265:
    assign rx1606_cstack, $I18
  rx1606_jump3264:
    jump $I19
  rx1606_done3261:
    rx1606_cur."!cursor_fail"()
    .return (rx1606_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_145_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1246
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1610_start
    .local string rx1610_tgt
    .local int rx1610_pos
    .local int rx1610_off
    .local int rx1610_eos
    .local int rx1610_rep
    .local pmc rx1610_cur
    .local pmc rx1610_curclass
    .local pmc rx1610_bstack
    .local pmc rx1610_cstack
    rx1610_start = self."!cursor_start_all"()
    set rx1610_cur, rx1610_start[0]
    set rx1610_tgt, rx1610_start[1]
    set rx1610_pos, rx1610_start[2]
    set rx1610_curclass, rx1610_start[3]
    set rx1610_bstack, rx1610_start[4]
    set $I19, rx1610_start[5]
    store_lex unicode:"$\x{a2}", rx1610_cur
    length rx1610_eos, rx1610_tgt
    eq $I19, 1, rx1610_restart3276
    gt rx1610_pos, rx1610_eos, rx1610_fail3277
    repr_get_attr_int $I11, self, rx1610_curclass, "$!from"
    ne $I11, -1, rxscan1611_done3283
    goto rxscan1611_scan3282
  rxscan1611_loop3281:
    inc rx1610_pos
    gt rx1610_pos, rx1610_eos, rx1610_fail3277
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!from", rx1610_pos
  rxscan1611_scan3282:
    nqp_rxmark rx1610_bstack, rxscan1611_loop3281, rx1610_pos, 0
  rxscan1611_done3283:
    add $I11, rx1610_pos, 5
    gt $I11, rx1610_eos, rx1610_fail3277
    substr $S10, rx1610_tgt, rx1610_pos, 5
    ne $S10, ucs4:"nqp::", rx1610_fail3277
    add rx1610_pos, 5
    nqp_rxmark rx1610_bstack, rxcap1612_fail3285, rx1610_pos, 0
    nqp_rxmark rx1610_bstack, rxquantr1613_done3287, -1, 0
  rxquantr1613_loop3286:
    ge rx1610_pos, rx1610_eos, rx1610_fail3277
    is_cclass $I11, .CCLASS_WORD, rx1610_tgt, rx1610_pos
    unless $I11, rx1610_fail3277
    add rx1610_pos, 1
    nqp_rxpeek $I19, rx1610_bstack, rxquantr1613_done3287
    inc $I19
    inc $I19
    set rx1610_rep, rx1610_bstack[$I19]
    nqp_rxcommit rx1610_bstack, rxquantr1613_done3287
    inc rx1610_rep
    nqp_rxmark rx1610_bstack, rxquantr1613_done3287, rx1610_pos, rx1610_rep
    goto rxquantr1613_loop3286
  rxquantr1613_done3287:
    nqp_rxpeek $I19, rx1610_bstack, rxcap1612_fail3285
    inc $I19
    set $I11, rx1610_bstack[$I19]
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1610_pos)
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "op")
    goto rxcap1612_done3284
  rxcap1612_fail3285:
    goto rx1610_fail3277
  rxcap1612_done3284:
    nqp_rxmark rx1610_bstack, rxquantr1614_done3289, rx1610_pos, 0
  rxquantr1614_loop3288:
    repr_bind_attr_int rx1610_cur, rx1610_curclass, "$!pos", rx1610_pos
    $P11 = rx1610_cur."args"()
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    lt $I11, 0, rx1610_fail3277
    goto rxsubrule1615_pass3290
  rxsubrule1615_back3291:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1610_curclass, "$!pos"
    lt $I11, 0, rx1610_fail3277
  rxsubrule1615_pass3290:
    rx1610_cstack = rx1610_cur."!cursor_capture"($P11, "args")
    set_addr $I11, rxsubrule1615_back3291
    push rx1610_bstack, $I11
    push rx1610_bstack, 0
    push rx1610_bstack, rx1610_pos
    elements $I11, rx1610_cstack
    push rx1610_bstack, $I11
    repr_get_attr_int rx1610_pos, $P11, rx1610_curclass, "$!pos"
    nqp_rxpeek $I19, rx1610_bstack, rxquantr1614_done3289
    inc $I19
    inc $I19
    set rx1610_rep, rx1610_bstack[$I19]
    nqp_rxcommit rx1610_bstack, rxquantr1614_done3289
    inc rx1610_rep
  rxquantr1614_done3289:
    rx1610_cur."!cursor_pass"(rx1610_pos, "term:sym<nqp::op>", 'backtrack'=>1)
    .return (rx1610_cur)
  rx1610_restart3276:
    repr_get_attr_obj rx1610_cstack, rx1610_cur, rx1610_curclass, "$!cstack"
  rx1610_fail3277:
    unless rx1610_bstack, rx1610_done3275
    pop $I19, rx1610_bstack
    if_null rx1610_cstack, rx1610_cstack_done3280
    unless rx1610_cstack, rx1610_cstack_done3280
    dec $I19
    set $P11, rx1610_cstack[$I19]
  rx1610_cstack_done3280:
    pop rx1610_rep, rx1610_bstack
    pop rx1610_pos, rx1610_bstack
    pop $I19, rx1610_bstack
    lt rx1610_pos, -1, rx1610_done3275
    lt rx1610_pos, 0, rx1610_fail3277
    eq $I19, 0, rx1610_fail3277
    nqp_islist $I20, rx1610_cstack
    unless $I20, rx1610_jump3278
    elements $I18, rx1610_bstack
    le $I18, 0, rx1610_cut3279
    dec $I18
    set $I18, rx1610_bstack[$I18]
  rx1610_cut3279:
    assign rx1610_cstack, $I18
  rx1610_jump3278:
    jump $I19
  rx1610_done3275:
    rx1610_cur."!cursor_fail"()
    .return (rx1610_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_146_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1250
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1616_start
    .local string rx1616_tgt
    .local int rx1616_pos
    .local int rx1616_off
    .local int rx1616_eos
    .local int rx1616_rep
    .local pmc rx1616_cur
    .local pmc rx1616_curclass
    .local pmc rx1616_bstack
    .local pmc rx1616_cstack
    rx1616_start = self."!cursor_start_all"()
    set rx1616_cur, rx1616_start[0]
    set rx1616_tgt, rx1616_start[1]
    set rx1616_pos, rx1616_start[2]
    set rx1616_curclass, rx1616_start[3]
    set rx1616_bstack, rx1616_start[4]
    set $I19, rx1616_start[5]
    store_lex unicode:"$\x{a2}", rx1616_cur
    length rx1616_eos, rx1616_tgt
    eq $I19, 1, rx1616_restart3294
    gt rx1616_pos, rx1616_eos, rx1616_fail3295
    repr_get_attr_int $I11, self, rx1616_curclass, "$!from"
    ne $I11, -1, rxscan1617_done3301
    goto rxscan1617_scan3300
  rxscan1617_loop3299:
    inc rx1616_pos
    gt rx1616_pos, rx1616_eos, rx1616_fail3295
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!from", rx1616_pos
  rxscan1617_scan3300:
    nqp_rxmark rx1616_bstack, rxscan1617_loop3299, rx1616_pos, 0
  rxscan1617_done3301:
    add $I11, rx1616_pos, 12
    gt $I11, rx1616_eos, rx1616_fail3295
    substr $S10, rx1616_tgt, rx1616_pos, 12
    ne $S10, ucs4:"nqp::const::", rx1616_fail3295
    add rx1616_pos, 12
    nqp_rxmark rx1616_bstack, rxcap1618_fail3303, rx1616_pos, 0
    nqp_rxmark rx1616_bstack, rxquantr1619_done3305, -1, 0
  rxquantr1619_loop3304:
    ge rx1616_pos, rx1616_eos, rx1616_fail3295
    is_cclass $I11, .CCLASS_WORD, rx1616_tgt, rx1616_pos
    unless $I11, rx1616_fail3295
    add rx1616_pos, 1
    nqp_rxpeek $I19, rx1616_bstack, rxquantr1619_done3305
    inc $I19
    inc $I19
    set rx1616_rep, rx1616_bstack[$I19]
    nqp_rxcommit rx1616_bstack, rxquantr1619_done3305
    inc rx1616_rep
    nqp_rxmark rx1616_bstack, rxquantr1619_done3305, rx1616_pos, rx1616_rep
    goto rxquantr1619_loop3304
  rxquantr1619_done3305:
    nqp_rxpeek $I19, rx1616_bstack, rxcap1618_fail3303
    inc $I19
    set $I11, rx1616_bstack[$I19]
    repr_bind_attr_int rx1616_cur, rx1616_curclass, "$!pos", rx1616_pos
    $P11 = rx1616_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1616_pos)
    rx1616_cstack = rx1616_cur."!cursor_capture"($P11, "const")
    goto rxcap1618_done3302
  rxcap1618_fail3303:
    goto rx1616_fail3295
  rxcap1618_done3302:
    rx1616_cur."!cursor_pass"(rx1616_pos, "term:sym<nqp::const>", 'backtrack'=>1)
    .return (rx1616_cur)
  rx1616_restart3294:
    repr_get_attr_obj rx1616_cstack, rx1616_cur, rx1616_curclass, "$!cstack"
  rx1616_fail3295:
    unless rx1616_bstack, rx1616_done3293
    pop $I19, rx1616_bstack
    if_null rx1616_cstack, rx1616_cstack_done3298
    unless rx1616_cstack, rx1616_cstack_done3298
    dec $I19
    set $P11, rx1616_cstack[$I19]
  rx1616_cstack_done3298:
    pop rx1616_rep, rx1616_bstack
    pop rx1616_pos, rx1616_bstack
    pop $I19, rx1616_bstack
    lt rx1616_pos, -1, rx1616_done3293
    lt rx1616_pos, 0, rx1616_fail3295
    eq $I19, 0, rx1616_fail3295
    nqp_islist $I20, rx1616_cstack
    unless $I20, rx1616_jump3296
    elements $I18, rx1616_bstack
    le $I18, 0, rx1616_cut3297
    dec $I18
    set $I18, rx1616_bstack[$I18]
  rx1616_cut3297:
    assign rx1616_cstack, $I18
  rx1616_jump3296:
    jump $I19
  rx1616_done3293:
    rx1616_cur."!cursor_fail"()
    .return (rx1616_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_147_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1254
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_412_1361537952.49511' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1620_start
    .local string rx1620_tgt
    .local int rx1620_pos
    .local int rx1620_off
    .local int rx1620_eos
    .local int rx1620_rep
    .local pmc rx1620_cur
    .local pmc rx1620_curclass
    .local pmc rx1620_bstack
    .local pmc rx1620_cstack
    rx1620_start = self."!cursor_start_all"()
    set rx1620_cur, rx1620_start[0]
    set rx1620_tgt, rx1620_start[1]
    set rx1620_pos, rx1620_start[2]
    set rx1620_curclass, rx1620_start[3]
    set rx1620_bstack, rx1620_start[4]
    set $I19, rx1620_start[5]
    store_lex unicode:"$\x{a2}", rx1620_cur
    length rx1620_eos, rx1620_tgt
    eq $I19, 1, rx1620_restart3308
    gt rx1620_pos, rx1620_eos, rx1620_fail3309
    repr_get_attr_int $I11, self, rx1620_curclass, "$!from"
    ne $I11, -1, rxscan1621_done3315
    goto rxscan1621_scan3314
  rxscan1621_loop3313:
    inc rx1620_pos
    gt rx1620_pos, rx1620_eos, rx1620_fail3309
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!from", rx1620_pos
  rxscan1621_scan3314:
    nqp_rxmark rx1620_bstack, rxscan1621_loop3313, rx1620_pos, 0
  rxscan1621_done3315:
    add $I11, rx1620_pos, 3
    gt $I11, rx1620_eos, rx1620_fail3309
    substr $S10, rx1620_tgt, rx1620_pos, 3
    ne $S10, ucs4:"{*}", rx1620_fail3309
    add rx1620_pos, 3
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!pos", rx1620_pos
    $P11 = rx1620_cur."ENDSTMT"()
    repr_get_attr_int $I11, $P11, rx1620_curclass, "$!pos"
    lt $I11, 0, rx1620_fail3309
  alt1622_03317:
    nqp_rxmark rx1620_bstack, alt1622_13323, rx1620_pos, 0
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!pos", rx1620_pos
    store_lex unicode:"$\x{a2}", rx1620_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_412_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
    unless $P5003, rx1620_fail3309
    goto alt1622_end3316
  alt1622_13323:
    repr_bind_attr_int rx1620_cur, rx1620_curclass, "$!pos", rx1620_pos
    $P11 = rx1620_cur."panic"("{*} may only appear in proto")
    repr_get_attr_int $I11, $P11, rx1620_curclass, "$!pos"
    lt $I11, 0, rx1620_fail3309
    repr_get_attr_int rx1620_pos, $P11, rx1620_curclass, "$!pos"
  alt1622_end3316:
    rx1620_cur."!cursor_pass"(rx1620_pos, "term:sym<onlystar>", 'backtrack'=>1)
    .return (rx1620_cur)
  rx1620_restart3308:
    repr_get_attr_obj rx1620_cstack, rx1620_cur, rx1620_curclass, "$!cstack"
  rx1620_fail3309:
    unless rx1620_bstack, rx1620_done3307
    pop $I19, rx1620_bstack
    if_null rx1620_cstack, rx1620_cstack_done3312
    unless rx1620_cstack, rx1620_cstack_done3312
    dec $I19
    set $P11, rx1620_cstack[$I19]
  rx1620_cstack_done3312:
    pop rx1620_rep, rx1620_bstack
    pop rx1620_pos, rx1620_bstack
    pop $I19, rx1620_bstack
    lt rx1620_pos, -1, rx1620_done3307
    lt rx1620_pos, 0, rx1620_fail3309
    eq $I19, 0, rx1620_fail3309
    nqp_islist $I20, rx1620_cstack
    unless $I20, rx1620_jump3310
    elements $I18, rx1620_bstack
    le $I18, 0, rx1620_cut3311
    dec $I18
    set $I18, rx1620_bstack[$I18]
  rx1620_cut3311:
    assign rx1620_cstack, $I18
  rx1620_jump3310:
    jump $I19
  rx1620_done3307:
    rx1620_cur."!cursor_fail"()
    .return (rx1620_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_412_1361537952.49511") :anon :lex :outer("cuid_147_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1256
    .local pmc fb_tmp_272 
    find_dynamic_lex $P5001, "$*MULTINESS"
    unless_null $P5001, fallback3318
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_272, $P5002
    repr_defined $I5002, fb_tmp_272
    unless $I5002 goto if1623_else3319 
    set $P5004, fb_tmp_272["$MULTINESS"]
    set $P5006, $P5004
    goto if1623_end3320
  if1623_else3319:
    null $P5005
    set $P5006, $P5005
  if1623_end3320:
    unless_null $P5006, vivi_16243321
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_16243321:
    unless_null $P5006, vivi_16253322
    die "Contextual $*MULTINESS not found"
    box $P5008, "Contextual $*MULTINESS not found"
    set $P5006, $P5008
  vivi_16253322:
    set $P5001, $P5006
  fallback3318:
    set $S5001, $P5001
    iseq $I5001, $S5001, "proto"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_148_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1259
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1627_start
    .local string rx1627_tgt
    .local int rx1627_pos
    .local int rx1627_off
    .local int rx1627_eos
    .local int rx1627_rep
    .local pmc rx1627_cur
    .local pmc rx1627_curclass
    .local pmc rx1627_bstack
    .local pmc rx1627_cstack
    rx1627_start = self."!cursor_start_all"()
    set rx1627_cur, rx1627_start[0]
    set rx1627_tgt, rx1627_start[1]
    set rx1627_pos, rx1627_start[2]
    set rx1627_curclass, rx1627_start[3]
    set rx1627_bstack, rx1627_start[4]
    set $I19, rx1627_start[5]
    store_lex unicode:"$\x{a2}", rx1627_cur
    length rx1627_eos, rx1627_tgt
    eq $I19, 1, rx1627_restart3327
    gt rx1627_pos, rx1627_eos, rx1627_fail3328
    repr_get_attr_int $I11, self, rx1627_curclass, "$!from"
    ne $I11, -1, rxscan1628_done3334
    goto rxscan1628_scan3333
  rxscan1628_loop3332:
    inc rx1627_pos
    gt rx1627_pos, rx1627_eos, rx1627_fail3328
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!from", rx1627_pos
  rxscan1628_scan3333:
    nqp_rxmark rx1627_bstack, rxscan1628_loop3332, rx1627_pos, 0
  rxscan1628_done3334:
    add $I11, rx1627_pos, 1
    gt $I11, rx1627_eos, rx1627_fail3328
    substr $S10, rx1627_tgt, rx1627_pos, 1
    ne $S10, ucs4:"(", rx1627_fail3328
    add rx1627_pos, 1
    repr_bind_attr_int rx1627_cur, rx1627_curclass, "$!pos", rx1627_pos
    $P11 = rx1627_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1627_curclass, "$!pos"
    lt $I11, 0, rx1627_fail3328
    nqp_rxmark rx1627_bstack, rxsubrule1629_pass3335, -1, 0
  rxsubrule1629_pass3335:
    rx1627_cstack = rx1627_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1627_pos, $P11, rx1627_curclass, "$!pos"
    add $I11, rx1627_pos, 1
    gt $I11, rx1627_eos, rx1627_fail3328
    substr $S10, rx1627_tgt, rx1627_pos, 1
    ne $S10, ucs4:")", rx1627_fail3328
    add rx1627_pos, 1
    rx1627_cur."!cursor_pass"(rx1627_pos, "args", 'backtrack'=>1)
    .return (rx1627_cur)
  rx1627_restart3327:
    repr_get_attr_obj rx1627_cstack, rx1627_cur, rx1627_curclass, "$!cstack"
  rx1627_fail3328:
    unless rx1627_bstack, rx1627_done3326
    pop $I19, rx1627_bstack
    if_null rx1627_cstack, rx1627_cstack_done3331
    unless rx1627_cstack, rx1627_cstack_done3331
    dec $I19
    set $P11, rx1627_cstack[$I19]
  rx1627_cstack_done3331:
    pop rx1627_rep, rx1627_bstack
    pop rx1627_pos, rx1627_bstack
    pop $I19, rx1627_bstack
    lt rx1627_pos, -1, rx1627_done3326
    lt rx1627_pos, 0, rx1627_fail3328
    eq $I19, 0, rx1627_fail3328
    nqp_islist $I20, rx1627_cstack
    unless $I20, rx1627_jump3329
    elements $I18, rx1627_bstack
    le $I18, 0, rx1627_cut3330
    dec $I18
    set $I18, rx1627_bstack[$I18]
  rx1627_cut3330:
    assign rx1627_cstack, $I18
  rx1627_jump3329:
    jump $I19
  rx1627_done3326:
    rx1627_cur."!cursor_fail"()
    .return (rx1627_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_149_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1263
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1630_start
    .local string rx1630_tgt
    .local int rx1630_pos
    .local int rx1630_off
    .local int rx1630_eos
    .local int rx1630_rep
    .local pmc rx1630_cur
    .local pmc rx1630_curclass
    .local pmc rx1630_bstack
    .local pmc rx1630_cstack
    rx1630_start = self."!cursor_start_all"()
    set rx1630_cur, rx1630_start[0]
    set rx1630_tgt, rx1630_start[1]
    set rx1630_pos, rx1630_start[2]
    set rx1630_curclass, rx1630_start[3]
    set rx1630_bstack, rx1630_start[4]
    set $I19, rx1630_start[5]
    store_lex unicode:"$\x{a2}", rx1630_cur
    length rx1630_eos, rx1630_tgt
    eq $I19, 1, rx1630_restart3338
    gt rx1630_pos, rx1630_eos, rx1630_fail3339
    repr_get_attr_int $I11, self, rx1630_curclass, "$!from"
    ne $I11, -1, rxscan1631_done3345
    goto rxscan1631_scan3344
  rxscan1631_loop3343:
    inc rx1630_pos
    gt rx1630_pos, rx1630_eos, rx1630_fail3339
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!from", rx1630_pos
  rxscan1631_scan3344:
    nqp_rxmark rx1630_bstack, rxscan1631_loop3343, rx1630_pos, 0
  rxscan1631_done3345:
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3339
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1633_03348
    nqp_push_label $P11, alt1633_13350
    nqp_rxmark rx1630_bstack, alt1633_end3347, -1, 0
    rx1630_cur."!alt"(rx1630_pos, "alt_nfa__36_1361537956.16111", $P11)
    goto rx1630_fail3339
  alt1633_03348:
    repr_bind_attr_int rx1630_cur, rx1630_curclass, "$!pos", rx1630_pos
    $P11 = rx1630_cur."EXPR"("f=")
    repr_get_attr_int $I11, $P11, rx1630_curclass, "$!pos"
    lt $I11, 0, rx1630_fail3339
    nqp_rxmark rx1630_bstack, rxsubrule1634_pass3349, -1, 0
  rxsubrule1634_pass3349:
    rx1630_cstack = rx1630_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1630_pos, $P11, rx1630_curclass, "$!pos"
    goto alt1633_end3347
  alt1633_13350:
    goto alt1633_end3347
  alt1633_end3347:
    nqp_rxcommit rx1630_bstack, alt1633_end3347
    rx1630_cur."!cursor_pass"(rx1630_pos, "arglist", 'backtrack'=>1)
    .return (rx1630_cur)
  rx1630_restart3338:
    repr_get_attr_obj rx1630_cstack, rx1630_cur, rx1630_curclass, "$!cstack"
  rx1630_fail3339:
    unless rx1630_bstack, rx1630_done3337
    pop $I19, rx1630_bstack
    if_null rx1630_cstack, rx1630_cstack_done3342
    unless rx1630_cstack, rx1630_cstack_done3342
    dec $I19
    set $P11, rx1630_cstack[$I19]
  rx1630_cstack_done3342:
    pop rx1630_rep, rx1630_bstack
    pop rx1630_pos, rx1630_bstack
    pop $I19, rx1630_bstack
    lt rx1630_pos, -1, rx1630_done3337
    lt rx1630_pos, 0, rx1630_fail3339
    eq $I19, 0, rx1630_fail3339
    nqp_islist $I20, rx1630_cstack
    unless $I20, rx1630_jump3340
    elements $I18, rx1630_bstack
    le $I18, 0, rx1630_cut3341
    dec $I18
    set $I18, rx1630_bstack[$I18]
  rx1630_cut3341:
    assign rx1630_cstack, $I18
  rx1630_jump3340:
    jump $I19
  rx1630_done3337:
    rx1630_cur."!cursor_fail"()
    .return (rx1630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_150_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1272
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1636_start
    .local string rx1636_tgt
    .local int rx1636_pos
    .local int rx1636_off
    .local int rx1636_eos
    .local int rx1636_rep
    .local pmc rx1636_cur
    .local pmc rx1636_curclass
    .local pmc rx1636_bstack
    .local pmc rx1636_cstack
    rx1636_start = self."!cursor_start_all"()
    set rx1636_cur, rx1636_start[0]
    set rx1636_tgt, rx1636_start[1]
    set rx1636_pos, rx1636_start[2]
    set rx1636_curclass, rx1636_start[3]
    set rx1636_bstack, rx1636_start[4]
    set $I19, rx1636_start[5]
    store_lex unicode:"$\x{a2}", rx1636_cur
    length rx1636_eos, rx1636_tgt
    eq $I19, 1, rx1636_restart3354
    gt rx1636_pos, rx1636_eos, rx1636_fail3355
    repr_get_attr_int $I11, self, rx1636_curclass, "$!from"
    ne $I11, -1, rxscan1637_done3361
    goto rxscan1637_scan3360
  rxscan1637_loop3359:
    inc rx1636_pos
    gt rx1636_pos, rx1636_eos, rx1636_fail3355
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!from", rx1636_pos
  rxscan1637_scan3360:
    nqp_rxmark rx1636_bstack, rxscan1637_loop3359, rx1636_pos, 0
  rxscan1637_done3361:
    repr_bind_attr_int rx1636_cur, rx1636_curclass, "$!pos", rx1636_pos
    $P11 = rx1636_cur."value"()
    repr_get_attr_int $I11, $P11, rx1636_curclass, "$!pos"
    lt $I11, 0, rx1636_fail3355
    nqp_rxmark rx1636_bstack, rxsubrule1638_pass3362, -1, 0
  rxsubrule1638_pass3362:
    rx1636_cstack = rx1636_cur."!cursor_capture"($P11, "value")
    repr_get_attr_int rx1636_pos, $P11, rx1636_curclass, "$!pos"
    rx1636_cur."!cursor_pass"(rx1636_pos, "term:sym<value>", 'backtrack'=>1)
    .return (rx1636_cur)
  rx1636_restart3354:
    repr_get_attr_obj rx1636_cstack, rx1636_cur, rx1636_curclass, "$!cstack"
  rx1636_fail3355:
    unless rx1636_bstack, rx1636_done3353
    pop $I19, rx1636_bstack
    if_null rx1636_cstack, rx1636_cstack_done3358
    unless rx1636_cstack, rx1636_cstack_done3358
    dec $I19
    set $P11, rx1636_cstack[$I19]
  rx1636_cstack_done3358:
    pop rx1636_rep, rx1636_bstack
    pop rx1636_pos, rx1636_bstack
    pop $I19, rx1636_bstack
    lt rx1636_pos, -1, rx1636_done3353
    lt rx1636_pos, 0, rx1636_fail3355
    eq $I19, 0, rx1636_fail3355
    nqp_islist $I20, rx1636_cstack
    unless $I20, rx1636_jump3356
    elements $I18, rx1636_bstack
    le $I18, 0, rx1636_cut3357
    dec $I18
    set $I18, rx1636_bstack[$I18]
  rx1636_cut3357:
    assign rx1636_cstack, $I18
  rx1636_jump3356:
    jump $I19
  rx1636_done3353:
    rx1636_cur."!cursor_fail"()
    .return (rx1636_cur) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_151_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1274
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1639_start
    .local string rx1639_tgt
    .local int rx1639_pos
    .local int rx1639_off
    .local int rx1639_eos
    .local int rx1639_rep
    .local pmc rx1639_cur
    .local pmc rx1639_curclass
    .local pmc rx1639_bstack
    .local pmc rx1639_cstack
    rx1639_start = self."!cursor_start_all"()
    set rx1639_cur, rx1639_start[0]
    set rx1639_tgt, rx1639_start[1]
    set rx1639_pos, rx1639_start[2]
    set rx1639_curclass, rx1639_start[3]
    set rx1639_bstack, rx1639_start[4]
    set $I19, rx1639_start[5]
    store_lex unicode:"$\x{a2}", rx1639_cur
    length rx1639_eos, rx1639_tgt
    eq $I19, 1, rx1639_restart3365
    gt rx1639_pos, rx1639_eos, rx1639_fail3366
    repr_get_attr_int $I11, self, rx1639_curclass, "$!from"
    ne $I11, -1, rxscan1640_done3372
    goto rxscan1640_scan3371
  rxscan1640_loop3370:
    inc rx1639_pos
    gt rx1639_pos, rx1639_eos, rx1639_fail3366
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!from", rx1639_pos
  rxscan1640_scan3371:
    nqp_rxmark rx1639_bstack, rxscan1640_loop3370, rx1639_pos, 0
  rxscan1640_done3372:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1641_03374
    nqp_push_label $P11, alt1641_13376
    nqp_rxmark rx1639_bstack, alt1641_end3373, -1, 0
    rx1639_cur."!alt"(rx1639_pos, "alt_nfa__37_1361537956.17671", $P11)
    goto rx1639_fail3366
  alt1641_03374:
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."quote"()
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail3366
    nqp_rxmark rx1639_bstack, rxsubrule1642_pass3375, -1, 0
  rxsubrule1642_pass3375:
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "quote")
    repr_get_attr_int rx1639_pos, $P11, rx1639_curclass, "$!pos"
    goto alt1641_end3373
  alt1641_13376:
    repr_bind_attr_int rx1639_cur, rx1639_curclass, "$!pos", rx1639_pos
    $P11 = rx1639_cur."number"()
    repr_get_attr_int $I11, $P11, rx1639_curclass, "$!pos"
    lt $I11, 0, rx1639_fail3366
    nqp_rxmark rx1639_bstack, rxsubrule1643_pass3377, -1, 0
  rxsubrule1643_pass3377:
    rx1639_cstack = rx1639_cur."!cursor_capture"($P11, "number")
    repr_get_attr_int rx1639_pos, $P11, rx1639_curclass, "$!pos"
    goto alt1641_end3373
  alt1641_end3373:
    rx1639_cur."!cursor_pass"(rx1639_pos, "value", 'backtrack'=>1)
    .return (rx1639_cur)
  rx1639_restart3365:
    repr_get_attr_obj rx1639_cstack, rx1639_cur, rx1639_curclass, "$!cstack"
  rx1639_fail3366:
    unless rx1639_bstack, rx1639_done3364
    pop $I19, rx1639_bstack
    if_null rx1639_cstack, rx1639_cstack_done3369
    unless rx1639_cstack, rx1639_cstack_done3369
    dec $I19
    set $P11, rx1639_cstack[$I19]
  rx1639_cstack_done3369:
    pop rx1639_rep, rx1639_bstack
    pop rx1639_pos, rx1639_bstack
    pop $I19, rx1639_bstack
    lt rx1639_pos, -1, rx1639_done3364
    lt rx1639_pos, 0, rx1639_fail3366
    eq $I19, 0, rx1639_fail3366
    nqp_islist $I20, rx1639_cstack
    unless $I20, rx1639_jump3367
    elements $I18, rx1639_bstack
    le $I18, 0, rx1639_cut3368
    dec $I18
    set $I18, rx1639_bstack[$I18]
  rx1639_cut3368:
    assign rx1639_cstack, $I18
  rx1639_jump3367:
    jump $I19
  rx1639_done3364:
    rx1639_cur."!cursor_fail"()
    .return (rx1639_cur) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_152_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1279
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1644_start
    .local string rx1644_tgt
    .local int rx1644_pos
    .local int rx1644_off
    .local int rx1644_eos
    .local int rx1644_rep
    .local pmc rx1644_cur
    .local pmc rx1644_curclass
    .local pmc rx1644_bstack
    .local pmc rx1644_cstack
    rx1644_start = self."!cursor_start_all"()
    set rx1644_cur, rx1644_start[0]
    set rx1644_tgt, rx1644_start[1]
    set rx1644_pos, rx1644_start[2]
    set rx1644_curclass, rx1644_start[3]
    set rx1644_bstack, rx1644_start[4]
    set $I19, rx1644_start[5]
    store_lex unicode:"$\x{a2}", rx1644_cur
    length rx1644_eos, rx1644_tgt
    eq $I19, 1, rx1644_restart3380
    gt rx1644_pos, rx1644_eos, rx1644_fail3381
    repr_get_attr_int $I11, self, rx1644_curclass, "$!from"
    ne $I11, -1, rxscan1645_done3387
    goto rxscan1645_scan3386
  rxscan1645_loop3385:
    inc rx1644_pos
    gt rx1644_pos, rx1644_eos, rx1644_fail3381
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!from", rx1644_pos
  rxscan1645_scan3386:
    nqp_rxmark rx1644_bstack, rxscan1645_loop3385, rx1644_pos, 0
  rxscan1645_done3387:
    nqp_rxmark rx1644_bstack, rxcap1646_fail3389, rx1644_pos, 0
    nqp_rxmark rx1644_bstack, rxquantr1647_done3391, rx1644_pos, 0
  rxquantr1647_loop3390:
  alt1648_03393:
    nqp_rxmark rx1644_bstack, alt1648_13394, rx1644_pos, 0
    add $I11, rx1644_pos, 1
    gt $I11, rx1644_eos, rx1644_fail3381
    substr $S10, rx1644_tgt, rx1644_pos, 1
    ne $S10, ucs4:"-", rx1644_fail3381
    add rx1644_pos, 1
    goto alt1648_end3392
  alt1648_13394:
    ge rx1644_pos, rx1644_eos, rx1644_fail3381
    substr $S11, rx1644_tgt, rx1644_pos, 1
    index $I11, ucs4:"+", $S11
    lt $I11, 0, rx1644_fail3381
    inc rx1644_pos
  alt1648_end3392:
    nqp_rxpeek $I19, rx1644_bstack, rxquantr1647_done3391
    inc $I19
    inc $I19
    set rx1644_rep, rx1644_bstack[$I19]
    nqp_rxcommit rx1644_bstack, rxquantr1647_done3391
    inc rx1644_rep
  rxquantr1647_done3391:
    nqp_rxpeek $I19, rx1644_bstack, rxcap1646_fail3389
    inc $I19
    set $I11, rx1644_bstack[$I19]
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1644_pos)
    rx1644_cstack = rx1644_cur."!cursor_capture"($P11, "sign")
    goto rxcap1646_done3388
  rxcap1646_fail3389:
    goto rx1644_fail3381
  rxcap1646_done3388:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1649_03396
    nqp_push_label $P11, alt1649_13398
    nqp_rxmark rx1644_bstack, alt1649_end3395, -1, 0
    rx1644_cur."!alt"(rx1644_pos, "alt_nfa__38_1361537956.22352", $P11)
    goto rx1644_fail3381
  alt1649_03396:
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."dec_number"()
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    lt $I11, 0, rx1644_fail3381
    nqp_rxmark rx1644_bstack, rxsubrule1650_pass3397, -1, 0
  rxsubrule1650_pass3397:
    rx1644_cstack = rx1644_cur."!cursor_capture"($P11, "dec_number")
    repr_get_attr_int rx1644_pos, $P11, rx1644_curclass, "$!pos"
    goto alt1649_end3395
  alt1649_13398:
    repr_bind_attr_int rx1644_cur, rx1644_curclass, "$!pos", rx1644_pos
    $P11 = rx1644_cur."integer"()
    repr_get_attr_int $I11, $P11, rx1644_curclass, "$!pos"
    lt $I11, 0, rx1644_fail3381
    nqp_rxmark rx1644_bstack, rxsubrule1651_pass3399, -1, 0
  rxsubrule1651_pass3399:
    rx1644_cstack = rx1644_cur."!cursor_capture"($P11, "integer")
    repr_get_attr_int rx1644_pos, $P11, rx1644_curclass, "$!pos"
    goto alt1649_end3395
  alt1649_end3395:
    nqp_rxcommit rx1644_bstack, alt1649_end3395
    rx1644_cur."!cursor_pass"(rx1644_pos, "number", 'backtrack'=>1)
    .return (rx1644_cur)
  rx1644_restart3380:
    repr_get_attr_obj rx1644_cstack, rx1644_cur, rx1644_curclass, "$!cstack"
  rx1644_fail3381:
    unless rx1644_bstack, rx1644_done3379
    pop $I19, rx1644_bstack
    if_null rx1644_cstack, rx1644_cstack_done3384
    unless rx1644_cstack, rx1644_cstack_done3384
    dec $I19
    set $P11, rx1644_cstack[$I19]
  rx1644_cstack_done3384:
    pop rx1644_rep, rx1644_bstack
    pop rx1644_pos, rx1644_bstack
    pop $I19, rx1644_bstack
    lt rx1644_pos, -1, rx1644_done3379
    lt rx1644_pos, 0, rx1644_fail3381
    eq $I19, 0, rx1644_fail3381
    nqp_islist $I20, rx1644_cstack
    unless $I20, rx1644_jump3382
    elements $I18, rx1644_bstack
    le $I18, 0, rx1644_cut3383
    dec $I18
    set $I18, rx1644_bstack[$I18]
  rx1644_cut3383:
    assign rx1644_cstack, $I18
  rx1644_jump3382:
    jump $I19
  rx1644_done3379:
    rx1644_cur."!cursor_fail"()
    .return (rx1644_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote" :subid("cuid_153_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1284
    .param pmc self 
    $P5001 = self."!protoregex"("quote")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_154_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1285
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1652_start
    .local string rx1652_tgt
    .local int rx1652_pos
    .local int rx1652_off
    .local int rx1652_eos
    .local int rx1652_rep
    .local pmc rx1652_cur
    .local pmc rx1652_curclass
    .local pmc rx1652_bstack
    .local pmc rx1652_cstack
    rx1652_start = self."!cursor_start_all"()
    set rx1652_cur, rx1652_start[0]
    set rx1652_tgt, rx1652_start[1]
    set rx1652_pos, rx1652_start[2]
    set rx1652_curclass, rx1652_start[3]
    set rx1652_bstack, rx1652_start[4]
    set $I19, rx1652_start[5]
    store_lex unicode:"$\x{a2}", rx1652_cur
    length rx1652_eos, rx1652_tgt
    eq $I19, 1, rx1652_restart3402
    gt rx1652_pos, rx1652_eos, rx1652_fail3403
    repr_get_attr_int $I11, self, rx1652_curclass, "$!from"
    ne $I11, -1, rxscan1653_done3409
    goto rxscan1653_scan3408
  rxscan1653_loop3407:
    inc rx1652_pos
    gt rx1652_pos, rx1652_eos, rx1652_fail3403
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!from", rx1652_pos
  rxscan1653_scan3408:
    nqp_rxmark rx1652_bstack, rxscan1653_loop3407, rx1652_pos, 0
  rxscan1653_done3409:
    ge rx1652_pos, rx1652_eos, rx1652_fail3403
    substr $S11, rx1652_tgt, rx1652_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx1652_fail3403
    repr_bind_attr_int rx1652_cur, rx1652_curclass, "$!pos", rx1652_pos
    $P11 = rx1652_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1652_curclass, "$!pos"
    lt $I11, 0, rx1652_fail3403
    nqp_rxmark rx1652_bstack, rxsubrule1654_pass3410, -1, 0
  rxsubrule1654_pass3410:
    rx1652_cstack = rx1652_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1652_pos, $P11, rx1652_curclass, "$!pos"
    rx1652_cur."!cursor_pass"(rx1652_pos, "quote:sym<apos>", 'backtrack'=>1)
    .return (rx1652_cur)
  rx1652_restart3402:
    repr_get_attr_obj rx1652_cstack, rx1652_cur, rx1652_curclass, "$!cstack"
  rx1652_fail3403:
    unless rx1652_bstack, rx1652_done3401
    pop $I19, rx1652_bstack
    if_null rx1652_cstack, rx1652_cstack_done3406
    unless rx1652_cstack, rx1652_cstack_done3406
    dec $I19
    set $P11, rx1652_cstack[$I19]
  rx1652_cstack_done3406:
    pop rx1652_rep, rx1652_bstack
    pop rx1652_pos, rx1652_bstack
    pop $I19, rx1652_bstack
    lt rx1652_pos, -1, rx1652_done3401
    lt rx1652_pos, 0, rx1652_fail3403
    eq $I19, 0, rx1652_fail3403
    nqp_islist $I20, rx1652_cstack
    unless $I20, rx1652_jump3404
    elements $I18, rx1652_bstack
    le $I18, 0, rx1652_cut3405
    dec $I18
    set $I18, rx1652_bstack[$I18]
  rx1652_cut3405:
    assign rx1652_cstack, $I18
  rx1652_jump3404:
    jump $I19
  rx1652_done3401:
    rx1652_cur."!cursor_fail"()
    .return (rx1652_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_155_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1286
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1655_start
    .local string rx1655_tgt
    .local int rx1655_pos
    .local int rx1655_off
    .local int rx1655_eos
    .local int rx1655_rep
    .local pmc rx1655_cur
    .local pmc rx1655_curclass
    .local pmc rx1655_bstack
    .local pmc rx1655_cstack
    rx1655_start = self."!cursor_start_all"()
    set rx1655_cur, rx1655_start[0]
    set rx1655_tgt, rx1655_start[1]
    set rx1655_pos, rx1655_start[2]
    set rx1655_curclass, rx1655_start[3]
    set rx1655_bstack, rx1655_start[4]
    set $I19, rx1655_start[5]
    store_lex unicode:"$\x{a2}", rx1655_cur
    length rx1655_eos, rx1655_tgt
    eq $I19, 1, rx1655_restart3413
    gt rx1655_pos, rx1655_eos, rx1655_fail3414
    repr_get_attr_int $I11, self, rx1655_curclass, "$!from"
    ne $I11, -1, rxscan1656_done3420
    goto rxscan1656_scan3419
  rxscan1656_loop3418:
    inc rx1655_pos
    gt rx1655_pos, rx1655_eos, rx1655_fail3414
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!from", rx1655_pos
  rxscan1656_scan3419:
    nqp_rxmark rx1655_bstack, rxscan1656_loop3418, rx1655_pos, 0
  rxscan1656_done3420:
    ge rx1655_pos, rx1655_eos, rx1655_fail3414
    substr $S11, rx1655_tgt, rx1655_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx1655_fail3414
    repr_bind_attr_int rx1655_cur, rx1655_curclass, "$!pos", rx1655_pos
    $P11 = rx1655_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1655_curclass, "$!pos"
    lt $I11, 0, rx1655_fail3414
    nqp_rxmark rx1655_bstack, rxsubrule1657_pass3421, -1, 0
  rxsubrule1657_pass3421:
    rx1655_cstack = rx1655_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1655_pos, $P11, rx1655_curclass, "$!pos"
    rx1655_cur."!cursor_pass"(rx1655_pos, "quote:sym<dblq>", 'backtrack'=>1)
    .return (rx1655_cur)
  rx1655_restart3413:
    repr_get_attr_obj rx1655_cstack, rx1655_cur, rx1655_curclass, "$!cstack"
  rx1655_fail3414:
    unless rx1655_bstack, rx1655_done3412
    pop $I19, rx1655_bstack
    if_null rx1655_cstack, rx1655_cstack_done3417
    unless rx1655_cstack, rx1655_cstack_done3417
    dec $I19
    set $P11, rx1655_cstack[$I19]
  rx1655_cstack_done3417:
    pop rx1655_rep, rx1655_bstack
    pop rx1655_pos, rx1655_bstack
    pop $I19, rx1655_bstack
    lt rx1655_pos, -1, rx1655_done3412
    lt rx1655_pos, 0, rx1655_fail3414
    eq $I19, 0, rx1655_fail3414
    nqp_islist $I20, rx1655_cstack
    unless $I20, rx1655_jump3415
    elements $I18, rx1655_bstack
    le $I18, 0, rx1655_cut3416
    dec $I18
    set $I18, rx1655_bstack[$I18]
  rx1655_cut3416:
    assign rx1655_cstack, $I18
  rx1655_jump3415:
    jump $I19
  rx1655_done3412:
    rx1655_cur."!cursor_fail"()
    .return (rx1655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_156_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1287
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1658_start
    .local string rx1658_tgt
    .local int rx1658_pos
    .local int rx1658_off
    .local int rx1658_eos
    .local int rx1658_rep
    .local pmc rx1658_cur
    .local pmc rx1658_curclass
    .local pmc rx1658_bstack
    .local pmc rx1658_cstack
    rx1658_start = self."!cursor_start_all"()
    set rx1658_cur, rx1658_start[0]
    set rx1658_tgt, rx1658_start[1]
    set rx1658_pos, rx1658_start[2]
    set rx1658_curclass, rx1658_start[3]
    set rx1658_bstack, rx1658_start[4]
    set $I19, rx1658_start[5]
    store_lex unicode:"$\x{a2}", rx1658_cur
    length rx1658_eos, rx1658_tgt
    eq $I19, 1, rx1658_restart3424
    gt rx1658_pos, rx1658_eos, rx1658_fail3425
    repr_get_attr_int $I11, self, rx1658_curclass, "$!from"
    ne $I11, -1, rxscan1659_done3431
    goto rxscan1659_scan3430
  rxscan1659_loop3429:
    inc rx1658_pos
    gt rx1658_pos, rx1658_eos, rx1658_fail3425
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!from", rx1658_pos
  rxscan1659_scan3430:
    nqp_rxmark rx1658_bstack, rxscan1659_loop3429, rx1658_pos, 0
  rxscan1659_done3431:
    nqp_rxmark rx1658_bstack, rxcap1660_fail3433, rx1658_pos, 0
    add $I11, rx1658_pos, 1
    gt $I11, rx1658_eos, rx1658_fail3425
    substr $S10, rx1658_tgt, rx1658_pos, 1
    ne $S10, ucs4:"q", rx1658_fail3425
    add rx1658_pos, 1
    nqp_rxpeek $I19, rx1658_bstack, rxcap1660_fail3433
    inc $I19
    set $I11, rx1658_bstack[$I19]
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1658_pos)
    rx1658_cstack = rx1658_cur."!cursor_capture"($P11, "sym")
    goto rxcap1660_done3432
  rxcap1660_fail3433:
    goto rx1658_fail3425
  rxcap1660_done3432:
    le rx1658_pos, 0, rx1658_fail3425
    is_cclass $I11, .CCLASS_WORD, rx1658_tgt, rx1658_pos
    if $I11, rx1658_fail3425
    sub $I11, rx1658_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1658_tgt, $I11
    unless $I11, rx1658_fail3425
    ge rx1658_pos, rx1658_eos, rx1658_fail3425
    substr $S11, rx1658_tgt, rx1658_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1658_fail3425
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1658_curclass, "$!pos"
    lt $I11, 0, rx1658_fail3425
    repr_get_attr_int rx1658_pos, $P11, rx1658_curclass, "$!pos"
    repr_bind_attr_int rx1658_cur, rx1658_curclass, "$!pos", rx1658_pos
    $P11 = rx1658_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1658_curclass, "$!pos"
    lt $I11, 0, rx1658_fail3425
    nqp_rxmark rx1658_bstack, rxsubrule1663_pass3436, -1, 0
  rxsubrule1663_pass3436:
    rx1658_cstack = rx1658_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1658_pos, $P11, rx1658_curclass, "$!pos"
    rx1658_cur."!cursor_pass"(rx1658_pos, "quote:sym<q>", 'backtrack'=>1)
    .return (rx1658_cur)
  rx1658_restart3424:
    repr_get_attr_obj rx1658_cstack, rx1658_cur, rx1658_curclass, "$!cstack"
  rx1658_fail3425:
    unless rx1658_bstack, rx1658_done3423
    pop $I19, rx1658_bstack
    if_null rx1658_cstack, rx1658_cstack_done3428
    unless rx1658_cstack, rx1658_cstack_done3428
    dec $I19
    set $P11, rx1658_cstack[$I19]
  rx1658_cstack_done3428:
    pop rx1658_rep, rx1658_bstack
    pop rx1658_pos, rx1658_bstack
    pop $I19, rx1658_bstack
    lt rx1658_pos, -1, rx1658_done3423
    lt rx1658_pos, 0, rx1658_fail3425
    eq $I19, 0, rx1658_fail3425
    nqp_islist $I20, rx1658_cstack
    unless $I20, rx1658_jump3426
    elements $I18, rx1658_bstack
    le $I18, 0, rx1658_cut3427
    dec $I18
    set $I18, rx1658_bstack[$I18]
  rx1658_cut3427:
    assign rx1658_cstack, $I18
  rx1658_jump3426:
    jump $I19
  rx1658_done3423:
    rx1658_cur."!cursor_fail"()
    .return (rx1658_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_157_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1288
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1664_start
    .local string rx1664_tgt
    .local int rx1664_pos
    .local int rx1664_off
    .local int rx1664_eos
    .local int rx1664_rep
    .local pmc rx1664_cur
    .local pmc rx1664_curclass
    .local pmc rx1664_bstack
    .local pmc rx1664_cstack
    rx1664_start = self."!cursor_start_all"()
    set rx1664_cur, rx1664_start[0]
    set rx1664_tgt, rx1664_start[1]
    set rx1664_pos, rx1664_start[2]
    set rx1664_curclass, rx1664_start[3]
    set rx1664_bstack, rx1664_start[4]
    set $I19, rx1664_start[5]
    store_lex unicode:"$\x{a2}", rx1664_cur
    length rx1664_eos, rx1664_tgt
    eq $I19, 1, rx1664_restart3439
    gt rx1664_pos, rx1664_eos, rx1664_fail3440
    repr_get_attr_int $I11, self, rx1664_curclass, "$!from"
    ne $I11, -1, rxscan1665_done3446
    goto rxscan1665_scan3445
  rxscan1665_loop3444:
    inc rx1664_pos
    gt rx1664_pos, rx1664_eos, rx1664_fail3440
    repr_bind_attr_int rx1664_cur, rx1664_curclass, "$!from", rx1664_pos
  rxscan1665_scan3445:
    nqp_rxmark rx1664_bstack, rxscan1665_loop3444, rx1664_pos, 0
  rxscan1665_done3446:
    nqp_rxmark rx1664_bstack, rxcap1666_fail3448, rx1664_pos, 0
    add $I11, rx1664_pos, 2
    gt $I11, rx1664_eos, rx1664_fail3440
    substr $S10, rx1664_tgt, rx1664_pos, 2
    ne $S10, ucs4:"qq", rx1664_fail3440
    add rx1664_pos, 2
    nqp_rxpeek $I19, rx1664_bstack, rxcap1666_fail3448
    inc $I19
    set $I11, rx1664_bstack[$I19]
    repr_bind_attr_int rx1664_cur, rx1664_curclass, "$!pos", rx1664_pos
    $P11 = rx1664_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1664_pos)
    rx1664_cstack = rx1664_cur."!cursor_capture"($P11, "sym")
    goto rxcap1666_done3447
  rxcap1666_fail3448:
    goto rx1664_fail3440
  rxcap1666_done3447:
    le rx1664_pos, 0, rx1664_fail3440
    is_cclass $I11, .CCLASS_WORD, rx1664_tgt, rx1664_pos
    if $I11, rx1664_fail3440
    sub $I11, rx1664_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1664_tgt, $I11
    unless $I11, rx1664_fail3440
    ge rx1664_pos, rx1664_eos, rx1664_fail3440
    substr $S11, rx1664_tgt, rx1664_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1664_fail3440
    repr_bind_attr_int rx1664_cur, rx1664_curclass, "$!pos", rx1664_pos
    $P11 = rx1664_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1664_curclass, "$!pos"
    lt $I11, 0, rx1664_fail3440
    repr_get_attr_int rx1664_pos, $P11, rx1664_curclass, "$!pos"
    repr_bind_attr_int rx1664_cur, rx1664_curclass, "$!pos", rx1664_pos
    $P11 = rx1664_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx1664_curclass, "$!pos"
    lt $I11, 0, rx1664_fail3440
    nqp_rxmark rx1664_bstack, rxsubrule1669_pass3451, -1, 0
  rxsubrule1669_pass3451:
    rx1664_cstack = rx1664_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1664_pos, $P11, rx1664_curclass, "$!pos"
    rx1664_cur."!cursor_pass"(rx1664_pos, "quote:sym<qq>", 'backtrack'=>1)
    .return (rx1664_cur)
  rx1664_restart3439:
    repr_get_attr_obj rx1664_cstack, rx1664_cur, rx1664_curclass, "$!cstack"
  rx1664_fail3440:
    unless rx1664_bstack, rx1664_done3438
    pop $I19, rx1664_bstack
    if_null rx1664_cstack, rx1664_cstack_done3443
    unless rx1664_cstack, rx1664_cstack_done3443
    dec $I19
    set $P11, rx1664_cstack[$I19]
  rx1664_cstack_done3443:
    pop rx1664_rep, rx1664_bstack
    pop rx1664_pos, rx1664_bstack
    pop $I19, rx1664_bstack
    lt rx1664_pos, -1, rx1664_done3438
    lt rx1664_pos, 0, rx1664_fail3440
    eq $I19, 0, rx1664_fail3440
    nqp_islist $I20, rx1664_cstack
    unless $I20, rx1664_jump3441
    elements $I18, rx1664_bstack
    le $I18, 0, rx1664_cut3442
    dec $I18
    set $I18, rx1664_bstack[$I18]
  rx1664_cut3442:
    assign rx1664_cstack, $I18
  rx1664_jump3441:
    jump $I19
  rx1664_done3438:
    rx1664_cur."!cursor_fail"()
    .return (rx1664_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_158_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1289
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1670_start
    .local string rx1670_tgt
    .local int rx1670_pos
    .local int rx1670_off
    .local int rx1670_eos
    .local int rx1670_rep
    .local pmc rx1670_cur
    .local pmc rx1670_curclass
    .local pmc rx1670_bstack
    .local pmc rx1670_cstack
    rx1670_start = self."!cursor_start_all"()
    set rx1670_cur, rx1670_start[0]
    set rx1670_tgt, rx1670_start[1]
    set rx1670_pos, rx1670_start[2]
    set rx1670_curclass, rx1670_start[3]
    set rx1670_bstack, rx1670_start[4]
    set $I19, rx1670_start[5]
    store_lex unicode:"$\x{a2}", rx1670_cur
    length rx1670_eos, rx1670_tgt
    eq $I19, 1, rx1670_restart3454
    gt rx1670_pos, rx1670_eos, rx1670_fail3455
    repr_get_attr_int $I11, self, rx1670_curclass, "$!from"
    ne $I11, -1, rxscan1671_done3461
    goto rxscan1671_scan3460
  rxscan1671_loop3459:
    inc rx1670_pos
    gt rx1670_pos, rx1670_eos, rx1670_fail3455
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!from", rx1670_pos
  rxscan1671_scan3460:
    nqp_rxmark rx1670_bstack, rxscan1671_loop3459, rx1670_pos, 0
  rxscan1671_done3461:
    nqp_rxmark rx1670_bstack, rxcap1672_fail3463, rx1670_pos, 0
    add $I11, rx1670_pos, 1
    gt $I11, rx1670_eos, rx1670_fail3455
    substr $S10, rx1670_tgt, rx1670_pos, 1
    ne $S10, ucs4:"Q", rx1670_fail3455
    add rx1670_pos, 1
    nqp_rxpeek $I19, rx1670_bstack, rxcap1672_fail3463
    inc $I19
    set $I11, rx1670_bstack[$I19]
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!pos", rx1670_pos
    $P11 = rx1670_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1670_pos)
    rx1670_cstack = rx1670_cur."!cursor_capture"($P11, "sym")
    goto rxcap1672_done3462
  rxcap1672_fail3463:
    goto rx1670_fail3455
  rxcap1672_done3462:
    le rx1670_pos, 0, rx1670_fail3455
    is_cclass $I11, .CCLASS_WORD, rx1670_tgt, rx1670_pos
    if $I11, rx1670_fail3455
    sub $I11, rx1670_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx1670_tgt, $I11
    unless $I11, rx1670_fail3455
    ge rx1670_pos, rx1670_eos, rx1670_fail3455
    substr $S11, rx1670_tgt, rx1670_pos, 1
    index $I11, ucs4:"(", $S11
    ge $I11, 0, rx1670_fail3455
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!pos", rx1670_pos
    $P11 = rx1670_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1670_curclass, "$!pos"
    lt $I11, 0, rx1670_fail3455
    repr_get_attr_int rx1670_pos, $P11, rx1670_curclass, "$!pos"
    repr_bind_attr_int rx1670_cur, rx1670_curclass, "$!pos", rx1670_pos
    $P11 = rx1670_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1670_curclass, "$!pos"
    lt $I11, 0, rx1670_fail3455
    nqp_rxmark rx1670_bstack, rxsubrule1675_pass3466, -1, 0
  rxsubrule1675_pass3466:
    rx1670_cstack = rx1670_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1670_pos, $P11, rx1670_curclass, "$!pos"
    rx1670_cur."!cursor_pass"(rx1670_pos, "quote:sym<Q>", 'backtrack'=>1)
    .return (rx1670_cur)
  rx1670_restart3454:
    repr_get_attr_obj rx1670_cstack, rx1670_cur, rx1670_curclass, "$!cstack"
  rx1670_fail3455:
    unless rx1670_bstack, rx1670_done3453
    pop $I19, rx1670_bstack
    if_null rx1670_cstack, rx1670_cstack_done3458
    unless rx1670_cstack, rx1670_cstack_done3458
    dec $I19
    set $P11, rx1670_cstack[$I19]
  rx1670_cstack_done3458:
    pop rx1670_rep, rx1670_bstack
    pop rx1670_pos, rx1670_bstack
    pop $I19, rx1670_bstack
    lt rx1670_pos, -1, rx1670_done3453
    lt rx1670_pos, 0, rx1670_fail3455
    eq $I19, 0, rx1670_fail3455
    nqp_islist $I20, rx1670_cstack
    unless $I20, rx1670_jump3456
    elements $I18, rx1670_bstack
    le $I18, 0, rx1670_cut3457
    dec $I18
    set $I18, rx1670_bstack[$I18]
  rx1670_cut3457:
    assign rx1670_cstack, $I18
  rx1670_jump3456:
    jump $I19
  rx1670_done3453:
    rx1670_cur."!cursor_fail"()
    .return (rx1670_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_159_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1290
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1676_start
    .local string rx1676_tgt
    .local int rx1676_pos
    .local int rx1676_off
    .local int rx1676_eos
    .local int rx1676_rep
    .local pmc rx1676_cur
    .local pmc rx1676_curclass
    .local pmc rx1676_bstack
    .local pmc rx1676_cstack
    rx1676_start = self."!cursor_start_all"()
    set rx1676_cur, rx1676_start[0]
    set rx1676_tgt, rx1676_start[1]
    set rx1676_pos, rx1676_start[2]
    set rx1676_curclass, rx1676_start[3]
    set rx1676_bstack, rx1676_start[4]
    set $I19, rx1676_start[5]
    store_lex unicode:"$\x{a2}", rx1676_cur
    length rx1676_eos, rx1676_tgt
    eq $I19, 1, rx1676_restart3469
    gt rx1676_pos, rx1676_eos, rx1676_fail3470
    repr_get_attr_int $I11, self, rx1676_curclass, "$!from"
    ne $I11, -1, rxscan1677_done3476
    goto rxscan1677_scan3475
  rxscan1677_loop3474:
    inc rx1676_pos
    gt rx1676_pos, rx1676_eos, rx1676_fail3470
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!from", rx1676_pos
  rxscan1677_scan3475:
    nqp_rxmark rx1676_bstack, rxscan1677_loop3474, rx1676_pos, 0
  rxscan1677_done3476:
    nqp_rxmark rx1676_bstack, rxcap1678_fail3478, rx1676_pos, 0
    add $I11, rx1676_pos, 5
    gt $I11, rx1676_eos, rx1676_fail3470
    substr $S10, rx1676_tgt, rx1676_pos, 5
    ne $S10, ucs4:"Q:PIR", rx1676_fail3470
    add rx1676_pos, 5
    nqp_rxpeek $I19, rx1676_bstack, rxcap1678_fail3478
    inc $I19
    set $I11, rx1676_bstack[$I19]
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!pos", rx1676_pos
    $P11 = rx1676_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1676_pos)
    rx1676_cstack = rx1676_cur."!cursor_capture"($P11, "sym")
    goto rxcap1678_done3477
  rxcap1678_fail3478:
    goto rx1676_fail3470
  rxcap1678_done3477:
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!pos", rx1676_pos
    $P11 = rx1676_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1676_curclass, "$!pos"
    lt $I11, 0, rx1676_fail3470
    repr_get_attr_int rx1676_pos, $P11, rx1676_curclass, "$!pos"
    repr_bind_attr_int rx1676_cur, rx1676_curclass, "$!pos", rx1676_pos
    $P11 = rx1676_cur."quote_EXPR"()
    repr_get_attr_int $I11, $P11, rx1676_curclass, "$!pos"
    lt $I11, 0, rx1676_fail3470
    nqp_rxmark rx1676_bstack, rxsubrule1680_pass3480, -1, 0
  rxsubrule1680_pass3480:
    rx1676_cstack = rx1676_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1676_pos, $P11, rx1676_curclass, "$!pos"
    rx1676_cur."!cursor_pass"(rx1676_pos, "quote:sym<Q:PIR>", 'backtrack'=>1)
    .return (rx1676_cur)
  rx1676_restart3469:
    repr_get_attr_obj rx1676_cstack, rx1676_cur, rx1676_curclass, "$!cstack"
  rx1676_fail3470:
    unless rx1676_bstack, rx1676_done3468
    pop $I19, rx1676_bstack
    if_null rx1676_cstack, rx1676_cstack_done3473
    unless rx1676_cstack, rx1676_cstack_done3473
    dec $I19
    set $P11, rx1676_cstack[$I19]
  rx1676_cstack_done3473:
    pop rx1676_rep, rx1676_bstack
    pop rx1676_pos, rx1676_bstack
    pop $I19, rx1676_bstack
    lt rx1676_pos, -1, rx1676_done3468
    lt rx1676_pos, 0, rx1676_fail3470
    eq $I19, 0, rx1676_fail3470
    nqp_islist $I20, rx1676_cstack
    unless $I20, rx1676_jump3471
    elements $I18, rx1676_bstack
    le $I18, 0, rx1676_cut3472
    dec $I18
    set $I18, rx1676_bstack[$I18]
  rx1676_cut3472:
    assign rx1676_cstack, $I18
  rx1676_jump3471:
    jump $I19
  rx1676_done3468:
    rx1676_cur."!cursor_fail"()
    .return (rx1676_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_160_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1291
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_273 
    .local pmc pkg_viv_tmp_31 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx1681_start
    .local string rx1681_tgt
    .local int rx1681_pos
    .local int rx1681_off
    .local int rx1681_eos
    .local int rx1681_rep
    .local pmc rx1681_cur
    .local pmc rx1681_curclass
    .local pmc rx1681_bstack
    .local pmc rx1681_cstack
    rx1681_start = self."!cursor_start_all"()
    set rx1681_cur, rx1681_start[0]
    set rx1681_tgt, rx1681_start[1]
    set rx1681_pos, rx1681_start[2]
    set rx1681_curclass, rx1681_start[3]
    set rx1681_bstack, rx1681_start[4]
    set $I19, rx1681_start[5]
    store_lex unicode:"$\x{a2}", rx1681_cur
    length rx1681_eos, rx1681_tgt
    eq $I19, 1, rx1681_restart3483
    gt rx1681_pos, rx1681_eos, rx1681_fail3484
    repr_get_attr_int $I11, self, rx1681_curclass, "$!from"
    ne $I11, -1, rxscan1682_done3490
    goto rxscan1682_scan3489
  rxscan1682_loop3488:
    inc rx1681_pos
    gt rx1681_pos, rx1681_eos, rx1681_fail3484
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!from", rx1681_pos
  rxscan1682_scan3489:
    nqp_rxmark rx1681_bstack, rxscan1682_loop3488, rx1681_pos, 0
  rxscan1682_done3490:
    add $I11, rx1681_pos, 1
    gt $I11, rx1681_eos, rx1681_fail3484
    substr $S10, rx1681_tgt, rx1681_pos, 1
    ne $S10, ucs4:"/", rx1681_fail3484
    add rx1681_pos, 1
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!pos", rx1681_pos
    $P11 = rx1681_cur."newpad"()
    repr_get_attr_int $I11, $P11, rx1681_curclass, "$!pos"
    lt $I11, 0, rx1681_fail3484
    repr_get_attr_int rx1681_pos, $P11, rx1681_curclass, "$!pos"
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!pos", rx1681_pos
    store_lex unicode:"$\x{a2}", rx1681_cur
    unless_null $P101, fallback3492
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_31, $P5002
    set fb_tmp_273, pkg_viv_tmp_31
    repr_defined $I5001, fb_tmp_273
    unless $I5001 goto if1684_else3493 
    set $P5004, fb_tmp_273["%RX"]
    set $P5006, $P5004
    goto if1684_end3494
  if1684_else3493:
    null $P5005
    set $P5006, $P5005
  if1684_end3494:
    unless_null $P5006, vivi_16853495
    new $P5007, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5007
    set $P5006, $P5007
  vivi_16853495:
    unless_null $P5006, vivi_16863496
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_16863496:
    set $P101, $P5006
  fallback3492:
    repr_bind_attr_int rx1681_cur, rx1681_curclass, "$!pos", rx1681_pos
    $P11 = rx1681_cur."LANG"("Regex", "nibbler")
    repr_get_attr_int $I11, $P11, rx1681_curclass, "$!pos"
    lt $I11, 0, rx1681_fail3484
    nqp_rxmark rx1681_bstack, rxsubrule1687_pass3497, -1, 0
  rxsubrule1687_pass3497:
    rx1681_cstack = rx1681_cur."!cursor_capture"($P11, "p6regex")
    repr_get_attr_int rx1681_pos, $P11, rx1681_curclass, "$!pos"
    add $I11, rx1681_pos, 1
    gt $I11, rx1681_eos, rx1681_fail3484
    substr $S10, rx1681_tgt, rx1681_pos, 1
    ne $S10, ucs4:"/", rx1681_fail3484
    add rx1681_pos, 1
    rx1681_cur."!cursor_pass"(rx1681_pos, "quote:sym</ />", 'backtrack'=>1)
    .return (rx1681_cur)
  rx1681_restart3483:
    repr_get_attr_obj rx1681_cstack, rx1681_cur, rx1681_curclass, "$!cstack"
  rx1681_fail3484:
    unless rx1681_bstack, rx1681_done3482
    pop $I19, rx1681_bstack
    if_null rx1681_cstack, rx1681_cstack_done3487
    unless rx1681_cstack, rx1681_cstack_done3487
    dec $I19
    set $P11, rx1681_cstack[$I19]
  rx1681_cstack_done3487:
    pop rx1681_rep, rx1681_bstack
    pop rx1681_pos, rx1681_bstack
    pop $I19, rx1681_bstack
    lt rx1681_pos, -1, rx1681_done3482
    lt rx1681_pos, 0, rx1681_fail3484
    eq $I19, 0, rx1681_fail3484
    nqp_islist $I20, rx1681_cstack
    unless $I20, rx1681_jump3485
    elements $I18, rx1681_bstack
    le $I18, 0, rx1681_cut3486
    dec $I18
    set $I18, rx1681_bstack[$I18]
  rx1681_cut3486:
    assign rx1681_cstack, $I18
  rx1681_jump3485:
    jump $I19
  rx1681_done3482:
    rx1681_cur."!cursor_fail"()
    .return (rx1681_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_161_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1299
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1688_start
    .local string rx1688_tgt
    .local int rx1688_pos
    .local int rx1688_off
    .local int rx1688_eos
    .local int rx1688_rep
    .local pmc rx1688_cur
    .local pmc rx1688_curclass
    .local pmc rx1688_bstack
    .local pmc rx1688_cstack
    rx1688_start = self."!cursor_start_all"()
    set rx1688_cur, rx1688_start[0]
    set rx1688_tgt, rx1688_start[1]
    set rx1688_pos, rx1688_start[2]
    set rx1688_curclass, rx1688_start[3]
    set rx1688_bstack, rx1688_start[4]
    set $I19, rx1688_start[5]
    store_lex unicode:"$\x{a2}", rx1688_cur
    length rx1688_eos, rx1688_tgt
    eq $I19, 1, rx1688_restart3500
    gt rx1688_pos, rx1688_eos, rx1688_fail3501
    repr_get_attr_int $I11, self, rx1688_curclass, "$!from"
    ne $I11, -1, rxscan1689_done3507
    goto rxscan1689_scan3506
  rxscan1689_loop3505:
    inc rx1688_pos
    gt rx1688_pos, rx1688_eos, rx1688_fail3501
    repr_bind_attr_int rx1688_cur, rx1688_curclass, "$!from", rx1688_pos
  rxscan1689_scan3506:
    nqp_rxmark rx1688_bstack, rxscan1689_loop3505, rx1688_pos, 0
  rxscan1689_done3507:
    ge rx1688_pos, rx1688_eos, rx1688_fail3501
    substr $S11, rx1688_tgt, rx1688_pos, 1
    index $I11, ucs4:"$", $S11
    lt $I11, 0, rx1688_fail3501
    repr_bind_attr_int rx1688_cur, rx1688_curclass, "$!pos", rx1688_pos
    $P11 = rx1688_cur."quotemod_check"("s")
    repr_get_attr_int $I11, $P11, rx1688_curclass, "$!pos"
    lt $I11, 0, rx1688_fail3501
    repr_bind_attr_int rx1688_cur, rx1688_curclass, "$!pos", rx1688_pos
    $P11 = rx1688_cur."variable"()
    repr_get_attr_int $I11, $P11, rx1688_curclass, "$!pos"
    lt $I11, 0, rx1688_fail3501
    nqp_rxmark rx1688_bstack, rxsubrule1690_pass3508, -1, 0
  rxsubrule1690_pass3508:
    rx1688_cstack = rx1688_cur."!cursor_capture"($P11, "variable")
    repr_get_attr_int rx1688_pos, $P11, rx1688_curclass, "$!pos"
    rx1688_cur."!cursor_pass"(rx1688_pos, "quote_escape:sym<$>", 'backtrack'=>1)
    .return (rx1688_cur)
  rx1688_restart3500:
    repr_get_attr_obj rx1688_cstack, rx1688_cur, rx1688_curclass, "$!cstack"
  rx1688_fail3501:
    unless rx1688_bstack, rx1688_done3499
    pop $I19, rx1688_bstack
    if_null rx1688_cstack, rx1688_cstack_done3504
    unless rx1688_cstack, rx1688_cstack_done3504
    dec $I19
    set $P11, rx1688_cstack[$I19]
  rx1688_cstack_done3504:
    pop rx1688_rep, rx1688_bstack
    pop rx1688_pos, rx1688_bstack
    pop $I19, rx1688_bstack
    lt rx1688_pos, -1, rx1688_done3499
    lt rx1688_pos, 0, rx1688_fail3501
    eq $I19, 0, rx1688_fail3501
    nqp_islist $I20, rx1688_cstack
    unless $I20, rx1688_jump3502
    elements $I18, rx1688_bstack
    le $I18, 0, rx1688_cut3503
    dec $I18
    set $I18, rx1688_bstack[$I18]
  rx1688_cut3503:
    assign rx1688_cstack, $I18
  rx1688_jump3502:
    jump $I19
  rx1688_done3499:
    rx1688_cur."!cursor_fail"()
    .return (rx1688_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_162_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1300
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1691_start
    .local string rx1691_tgt
    .local int rx1691_pos
    .local int rx1691_off
    .local int rx1691_eos
    .local int rx1691_rep
    .local pmc rx1691_cur
    .local pmc rx1691_curclass
    .local pmc rx1691_bstack
    .local pmc rx1691_cstack
    rx1691_start = self."!cursor_start_all"()
    set rx1691_cur, rx1691_start[0]
    set rx1691_tgt, rx1691_start[1]
    set rx1691_pos, rx1691_start[2]
    set rx1691_curclass, rx1691_start[3]
    set rx1691_bstack, rx1691_start[4]
    set $I19, rx1691_start[5]
    store_lex unicode:"$\x{a2}", rx1691_cur
    length rx1691_eos, rx1691_tgt
    eq $I19, 1, rx1691_restart3511
    gt rx1691_pos, rx1691_eos, rx1691_fail3512
    repr_get_attr_int $I11, self, rx1691_curclass, "$!from"
    ne $I11, -1, rxscan1692_done3518
    goto rxscan1692_scan3517
  rxscan1692_loop3516:
    inc rx1691_pos
    gt rx1691_pos, rx1691_eos, rx1691_fail3512
    repr_bind_attr_int rx1691_cur, rx1691_curclass, "$!from", rx1691_pos
  rxscan1692_scan3517:
    nqp_rxmark rx1691_bstack, rxscan1692_loop3516, rx1691_pos, 0
  rxscan1692_done3518:
    ge rx1691_pos, rx1691_eos, rx1691_fail3512
    substr $S11, rx1691_tgt, rx1691_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1691_fail3512
    repr_bind_attr_int rx1691_cur, rx1691_curclass, "$!pos", rx1691_pos
    $P11 = rx1691_cur."quotemod_check"("c")
    repr_get_attr_int $I11, $P11, rx1691_curclass, "$!pos"
    lt $I11, 0, rx1691_fail3512
    repr_bind_attr_int rx1691_cur, rx1691_curclass, "$!pos", rx1691_pos
    $P11 = rx1691_cur."block"()
    repr_get_attr_int $I11, $P11, rx1691_curclass, "$!pos"
    lt $I11, 0, rx1691_fail3512
    nqp_rxmark rx1691_bstack, rxsubrule1693_pass3519, -1, 0
  rxsubrule1693_pass3519:
    rx1691_cstack = rx1691_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx1691_pos, $P11, rx1691_curclass, "$!pos"
    rx1691_cur."!cursor_pass"(rx1691_pos, "quote_escape:sym<{ }>", 'backtrack'=>1)
    .return (rx1691_cur)
  rx1691_restart3511:
    repr_get_attr_obj rx1691_cstack, rx1691_cur, rx1691_curclass, "$!cstack"
  rx1691_fail3512:
    unless rx1691_bstack, rx1691_done3510
    pop $I19, rx1691_bstack
    if_null rx1691_cstack, rx1691_cstack_done3515
    unless rx1691_cstack, rx1691_cstack_done3515
    dec $I19
    set $P11, rx1691_cstack[$I19]
  rx1691_cstack_done3515:
    pop rx1691_rep, rx1691_bstack
    pop rx1691_pos, rx1691_bstack
    pop $I19, rx1691_bstack
    lt rx1691_pos, -1, rx1691_done3510
    lt rx1691_pos, 0, rx1691_fail3512
    eq $I19, 0, rx1691_fail3512
    nqp_islist $I20, rx1691_cstack
    unless $I20, rx1691_jump3513
    elements $I18, rx1691_bstack
    le $I18, 0, rx1691_cut3514
    dec $I18
    set $I18, rx1691_bstack[$I18]
  rx1691_cut3514:
    assign rx1691_cstack, $I18
  rx1691_jump3513:
    jump $I19
  rx1691_done3510:
    rx1691_cur."!cursor_fail"()
    .return (rx1691_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_163_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1301
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1694_start
    .local string rx1694_tgt
    .local int rx1694_pos
    .local int rx1694_off
    .local int rx1694_eos
    .local int rx1694_rep
    .local pmc rx1694_cur
    .local pmc rx1694_curclass
    .local pmc rx1694_bstack
    .local pmc rx1694_cstack
    rx1694_start = self."!cursor_start_all"()
    set rx1694_cur, rx1694_start[0]
    set rx1694_tgt, rx1694_start[1]
    set rx1694_pos, rx1694_start[2]
    set rx1694_curclass, rx1694_start[3]
    set rx1694_bstack, rx1694_start[4]
    set $I19, rx1694_start[5]
    store_lex unicode:"$\x{a2}", rx1694_cur
    length rx1694_eos, rx1694_tgt
    eq $I19, 1, rx1694_restart3522
    gt rx1694_pos, rx1694_eos, rx1694_fail3523
    repr_get_attr_int $I11, self, rx1694_curclass, "$!from"
    ne $I11, -1, rxscan1695_done3529
    goto rxscan1695_scan3528
  rxscan1695_loop3527:
    inc rx1694_pos
    gt rx1694_pos, rx1694_eos, rx1694_fail3523
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!from", rx1694_pos
  rxscan1695_scan3528:
    nqp_rxmark rx1694_bstack, rxscan1695_loop3527, rx1694_pos, 0
  rxscan1695_done3529:
    add $I11, rx1694_pos, 2
    gt $I11, rx1694_eos, rx1694_fail3523
    substr $S10, rx1694_tgt, rx1694_pos, 2
    ne $S10, ucs4:"\\e", rx1694_fail3523
    add rx1694_pos, 2
    repr_bind_attr_int rx1694_cur, rx1694_curclass, "$!pos", rx1694_pos
    $P11 = rx1694_cur."quotemod_check"("b")
    repr_get_attr_int $I11, $P11, rx1694_curclass, "$!pos"
    lt $I11, 0, rx1694_fail3523
    rx1694_cur."!cursor_pass"(rx1694_pos, "quote_escape:sym<esc>", 'backtrack'=>1)
    .return (rx1694_cur)
  rx1694_restart3522:
    repr_get_attr_obj rx1694_cstack, rx1694_cur, rx1694_curclass, "$!cstack"
  rx1694_fail3523:
    unless rx1694_bstack, rx1694_done3521
    pop $I19, rx1694_bstack
    if_null rx1694_cstack, rx1694_cstack_done3526
    unless rx1694_cstack, rx1694_cstack_done3526
    dec $I19
    set $P11, rx1694_cstack[$I19]
  rx1694_cstack_done3526:
    pop rx1694_rep, rx1694_bstack
    pop rx1694_pos, rx1694_bstack
    pop $I19, rx1694_bstack
    lt rx1694_pos, -1, rx1694_done3521
    lt rx1694_pos, 0, rx1694_fail3523
    eq $I19, 0, rx1694_fail3523
    nqp_islist $I20, rx1694_cstack
    unless $I20, rx1694_jump3524
    elements $I18, rx1694_bstack
    le $I18, 0, rx1694_cut3525
    dec $I18
    set $I18, rx1694_bstack[$I18]
  rx1694_cut3525:
    assign rx1694_cstack, $I18
  rx1694_jump3524:
    jump $I19
  rx1694_done3521:
    rx1694_cur."!cursor_fail"()
    .return (rx1694_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_164_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1303
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1696_start
    .local string rx1696_tgt
    .local int rx1696_pos
    .local int rx1696_off
    .local int rx1696_eos
    .local int rx1696_rep
    .local pmc rx1696_cur
    .local pmc rx1696_curclass
    .local pmc rx1696_bstack
    .local pmc rx1696_cstack
    rx1696_start = self."!cursor_start_all"()
    set rx1696_cur, rx1696_start[0]
    set rx1696_tgt, rx1696_start[1]
    set rx1696_pos, rx1696_start[2]
    set rx1696_curclass, rx1696_start[3]
    set rx1696_bstack, rx1696_start[4]
    set $I19, rx1696_start[5]
    store_lex unicode:"$\x{a2}", rx1696_cur
    length rx1696_eos, rx1696_tgt
    eq $I19, 1, rx1696_restart3532
    gt rx1696_pos, rx1696_eos, rx1696_fail3533
    repr_get_attr_int $I11, self, rx1696_curclass, "$!from"
    ne $I11, -1, rxscan1697_done3539
    goto rxscan1697_scan3538
  rxscan1697_loop3537:
    inc rx1696_pos
    gt rx1696_pos, rx1696_eos, rx1696_fail3533
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!from", rx1696_pos
  rxscan1697_scan3538:
    nqp_rxmark rx1696_bstack, rxscan1697_loop3537, rx1696_pos, 0
  rxscan1697_done3539:
    add $I11, rx1696_pos, 1
    gt $I11, rx1696_eos, rx1696_fail3533
    substr $S10, rx1696_tgt, rx1696_pos, 1
    ne $S10, ucs4:"(", rx1696_fail3533
    add rx1696_pos, 1
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!pos", rx1696_pos
    $P11 = rx1696_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1696_curclass, "$!pos"
    lt $I11, 0, rx1696_fail3533
    repr_get_attr_int rx1696_pos, $P11, rx1696_curclass, "$!pos"
    nqp_rxmark rx1696_bstack, rxquantr1699_done3542, rx1696_pos, 0
  rxquantr1699_loop3541:
    repr_bind_attr_int rx1696_cur, rx1696_curclass, "$!pos", rx1696_pos
    $P11 = rx1696_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1696_curclass, "$!pos"
    lt $I11, 0, rx1696_fail3533
    goto rxsubrule1700_pass3543
  rxsubrule1700_back3544:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1696_curclass, "$!pos"
    lt $I11, 0, rx1696_fail3533
  rxsubrule1700_pass3543:
    rx1696_cstack = rx1696_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1700_back3544
    push rx1696_bstack, $I11
    push rx1696_bstack, 0
    push rx1696_bstack, rx1696_pos
    elements $I11, rx1696_cstack
    push rx1696_bstack, $I11
    repr_get_attr_int rx1696_pos, $P11, rx1696_curclass, "$!pos"
    nqp_rxpeek $I19, rx1696_bstack, rxquantr1699_done3542
    inc $I19
    inc $I19
    set rx1696_rep, rx1696_bstack[$I19]
    nqp_rxcommit rx1696_bstack, rxquantr1699_done3542
    inc rx1696_rep
  rxquantr1699_done3542:
    add $I11, rx1696_pos, 1
    gt $I11, rx1696_eos, rx1696_fail3533
    substr $S10, rx1696_tgt, rx1696_pos, 1
    ne $S10, ucs4:")", rx1696_fail3533
    add rx1696_pos, 1
    rx1696_cur."!cursor_pass"(rx1696_pos, "circumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1696_cur)
  rx1696_restart3532:
    repr_get_attr_obj rx1696_cstack, rx1696_cur, rx1696_curclass, "$!cstack"
  rx1696_fail3533:
    unless rx1696_bstack, rx1696_done3531
    pop $I19, rx1696_bstack
    if_null rx1696_cstack, rx1696_cstack_done3536
    unless rx1696_cstack, rx1696_cstack_done3536
    dec $I19
    set $P11, rx1696_cstack[$I19]
  rx1696_cstack_done3536:
    pop rx1696_rep, rx1696_bstack
    pop rx1696_pos, rx1696_bstack
    pop $I19, rx1696_bstack
    lt rx1696_pos, -1, rx1696_done3531
    lt rx1696_pos, 0, rx1696_fail3533
    eq $I19, 0, rx1696_fail3533
    nqp_islist $I20, rx1696_cstack
    unless $I20, rx1696_jump3534
    elements $I18, rx1696_bstack
    le $I18, 0, rx1696_cut3535
    dec $I18
    set $I18, rx1696_bstack[$I18]
  rx1696_cut3535:
    assign rx1696_cstack, $I18
  rx1696_jump3534:
    jump $I19
  rx1696_done3531:
    rx1696_cur."!cursor_fail"()
    .return (rx1696_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_165_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1304
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1701_start
    .local string rx1701_tgt
    .local int rx1701_pos
    .local int rx1701_off
    .local int rx1701_eos
    .local int rx1701_rep
    .local pmc rx1701_cur
    .local pmc rx1701_curclass
    .local pmc rx1701_bstack
    .local pmc rx1701_cstack
    rx1701_start = self."!cursor_start_all"()
    set rx1701_cur, rx1701_start[0]
    set rx1701_tgt, rx1701_start[1]
    set rx1701_pos, rx1701_start[2]
    set rx1701_curclass, rx1701_start[3]
    set rx1701_bstack, rx1701_start[4]
    set $I19, rx1701_start[5]
    store_lex unicode:"$\x{a2}", rx1701_cur
    length rx1701_eos, rx1701_tgt
    eq $I19, 1, rx1701_restart3547
    gt rx1701_pos, rx1701_eos, rx1701_fail3548
    repr_get_attr_int $I11, self, rx1701_curclass, "$!from"
    ne $I11, -1, rxscan1702_done3554
    goto rxscan1702_scan3553
  rxscan1702_loop3552:
    inc rx1701_pos
    gt rx1701_pos, rx1701_eos, rx1701_fail3548
    repr_bind_attr_int rx1701_cur, rx1701_curclass, "$!from", rx1701_pos
  rxscan1702_scan3553:
    nqp_rxmark rx1701_bstack, rxscan1702_loop3552, rx1701_pos, 0
  rxscan1702_done3554:
    add $I11, rx1701_pos, 1
    gt $I11, rx1701_eos, rx1701_fail3548
    substr $S10, rx1701_tgt, rx1701_pos, 1
    ne $S10, ucs4:"[", rx1701_fail3548
    add rx1701_pos, 1
    repr_bind_attr_int rx1701_cur, rx1701_curclass, "$!pos", rx1701_pos
    $P11 = rx1701_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1701_curclass, "$!pos"
    lt $I11, 0, rx1701_fail3548
    repr_get_attr_int rx1701_pos, $P11, rx1701_curclass, "$!pos"
    nqp_rxmark rx1701_bstack, rxquantr1704_done3557, rx1701_pos, 0
  rxquantr1704_loop3556:
    repr_bind_attr_int rx1701_cur, rx1701_curclass, "$!pos", rx1701_pos
    $P11 = rx1701_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1701_curclass, "$!pos"
    lt $I11, 0, rx1701_fail3548
    goto rxsubrule1705_pass3558
  rxsubrule1705_back3559:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx1701_curclass, "$!pos"
    lt $I11, 0, rx1701_fail3548
  rxsubrule1705_pass3558:
    rx1701_cstack = rx1701_cur."!cursor_capture"($P11, "EXPR")
    set_addr $I11, rxsubrule1705_back3559
    push rx1701_bstack, $I11
    push rx1701_bstack, 0
    push rx1701_bstack, rx1701_pos
    elements $I11, rx1701_cstack
    push rx1701_bstack, $I11
    repr_get_attr_int rx1701_pos, $P11, rx1701_curclass, "$!pos"
    nqp_rxpeek $I19, rx1701_bstack, rxquantr1704_done3557
    inc $I19
    inc $I19
    set rx1701_rep, rx1701_bstack[$I19]
    nqp_rxcommit rx1701_bstack, rxquantr1704_done3557
    inc rx1701_rep
  rxquantr1704_done3557:
    add $I11, rx1701_pos, 1
    gt $I11, rx1701_eos, rx1701_fail3548
    substr $S10, rx1701_tgt, rx1701_pos, 1
    ne $S10, ucs4:"]", rx1701_fail3548
    add rx1701_pos, 1
    rx1701_cur."!cursor_pass"(rx1701_pos, "circumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1701_cur)
  rx1701_restart3547:
    repr_get_attr_obj rx1701_cstack, rx1701_cur, rx1701_curclass, "$!cstack"
  rx1701_fail3548:
    unless rx1701_bstack, rx1701_done3546
    pop $I19, rx1701_bstack
    if_null rx1701_cstack, rx1701_cstack_done3551
    unless rx1701_cstack, rx1701_cstack_done3551
    dec $I19
    set $P11, rx1701_cstack[$I19]
  rx1701_cstack_done3551:
    pop rx1701_rep, rx1701_bstack
    pop rx1701_pos, rx1701_bstack
    pop $I19, rx1701_bstack
    lt rx1701_pos, -1, rx1701_done3546
    lt rx1701_pos, 0, rx1701_fail3548
    eq $I19, 0, rx1701_fail3548
    nqp_islist $I20, rx1701_cstack
    unless $I20, rx1701_jump3549
    elements $I18, rx1701_bstack
    le $I18, 0, rx1701_cut3550
    dec $I18
    set $I18, rx1701_bstack[$I18]
  rx1701_cut3550:
    assign rx1701_cstack, $I18
  rx1701_jump3549:
    jump $I19
  rx1701_done3546:
    rx1701_cur."!cursor_fail"()
    .return (rx1701_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_166_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1305
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1706_start
    .local string rx1706_tgt
    .local int rx1706_pos
    .local int rx1706_off
    .local int rx1706_eos
    .local int rx1706_rep
    .local pmc rx1706_cur
    .local pmc rx1706_curclass
    .local pmc rx1706_bstack
    .local pmc rx1706_cstack
    rx1706_start = self."!cursor_start_all"()
    set rx1706_cur, rx1706_start[0]
    set rx1706_tgt, rx1706_start[1]
    set rx1706_pos, rx1706_start[2]
    set rx1706_curclass, rx1706_start[3]
    set rx1706_bstack, rx1706_start[4]
    set $I19, rx1706_start[5]
    store_lex unicode:"$\x{a2}", rx1706_cur
    length rx1706_eos, rx1706_tgt
    eq $I19, 1, rx1706_restart3562
    gt rx1706_pos, rx1706_eos, rx1706_fail3563
    repr_get_attr_int $I11, self, rx1706_curclass, "$!from"
    ne $I11, -1, rxscan1707_done3569
    goto rxscan1707_scan3568
  rxscan1707_loop3567:
    inc rx1706_pos
    gt rx1706_pos, rx1706_eos, rx1706_fail3563
    repr_bind_attr_int rx1706_cur, rx1706_curclass, "$!from", rx1706_pos
  rxscan1707_scan3568:
    nqp_rxmark rx1706_bstack, rxscan1707_loop3567, rx1706_pos, 0
  rxscan1707_done3569:
    ge rx1706_pos, rx1706_eos, rx1706_fail3563
    substr $S11, rx1706_tgt, rx1706_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1706_fail3563
    repr_bind_attr_int rx1706_cur, rx1706_curclass, "$!pos", rx1706_pos
    $P11 = rx1706_cur."quote_EXPR"(":q", ":w")
    repr_get_attr_int $I11, $P11, rx1706_curclass, "$!pos"
    lt $I11, 0, rx1706_fail3563
    nqp_rxmark rx1706_bstack, rxsubrule1708_pass3570, -1, 0
  rxsubrule1708_pass3570:
    rx1706_cstack = rx1706_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1706_pos, $P11, rx1706_curclass, "$!pos"
    rx1706_cur."!cursor_pass"(rx1706_pos, "circumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1706_cur)
  rx1706_restart3562:
    repr_get_attr_obj rx1706_cstack, rx1706_cur, rx1706_curclass, "$!cstack"
  rx1706_fail3563:
    unless rx1706_bstack, rx1706_done3561
    pop $I19, rx1706_bstack
    if_null rx1706_cstack, rx1706_cstack_done3566
    unless rx1706_cstack, rx1706_cstack_done3566
    dec $I19
    set $P11, rx1706_cstack[$I19]
  rx1706_cstack_done3566:
    pop rx1706_rep, rx1706_bstack
    pop rx1706_pos, rx1706_bstack
    pop $I19, rx1706_bstack
    lt rx1706_pos, -1, rx1706_done3561
    lt rx1706_pos, 0, rx1706_fail3563
    eq $I19, 0, rx1706_fail3563
    nqp_islist $I20, rx1706_cstack
    unless $I20, rx1706_jump3564
    elements $I18, rx1706_bstack
    le $I18, 0, rx1706_cut3565
    dec $I18
    set $I18, rx1706_bstack[$I18]
  rx1706_cut3565:
    assign rx1706_cstack, $I18
  rx1706_jump3564:
    jump $I19
  rx1706_done3561:
    rx1706_cur."!cursor_fail"()
    .return (rx1706_cur) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_167_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1306
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1709_start
    .local string rx1709_tgt
    .local int rx1709_pos
    .local int rx1709_off
    .local int rx1709_eos
    .local int rx1709_rep
    .local pmc rx1709_cur
    .local pmc rx1709_curclass
    .local pmc rx1709_bstack
    .local pmc rx1709_cstack
    rx1709_start = self."!cursor_start_all"()
    set rx1709_cur, rx1709_start[0]
    set rx1709_tgt, rx1709_start[1]
    set rx1709_pos, rx1709_start[2]
    set rx1709_curclass, rx1709_start[3]
    set rx1709_bstack, rx1709_start[4]
    set $I19, rx1709_start[5]
    store_lex unicode:"$\x{a2}", rx1709_cur
    length rx1709_eos, rx1709_tgt
    eq $I19, 1, rx1709_restart3573
    gt rx1709_pos, rx1709_eos, rx1709_fail3574
    repr_get_attr_int $I11, self, rx1709_curclass, "$!from"
    ne $I11, -1, rxscan1710_done3580
    goto rxscan1710_scan3579
  rxscan1710_loop3578:
    inc rx1709_pos
    gt rx1709_pos, rx1709_eos, rx1709_fail3574
    repr_bind_attr_int rx1709_cur, rx1709_curclass, "$!from", rx1709_pos
  rxscan1710_scan3579:
    nqp_rxmark rx1709_bstack, rxscan1710_loop3578, rx1709_pos, 0
  rxscan1710_done3580:
    ge rx1709_pos, rx1709_eos, rx1709_fail3574
    substr $S11, rx1709_tgt, rx1709_pos, 1
    index $I11, ucs4:"\x{ab}", $S11
    lt $I11, 0, rx1709_fail3574
    repr_bind_attr_int rx1709_cur, rx1709_curclass, "$!pos", rx1709_pos
    $P11 = rx1709_cur."quote_EXPR"(":qq", ":w")
    repr_get_attr_int $I11, $P11, rx1709_curclass, "$!pos"
    lt $I11, 0, rx1709_fail3574
    nqp_rxmark rx1709_bstack, rxsubrule1711_pass3581, -1, 0
  rxsubrule1711_pass3581:
    rx1709_cstack = rx1709_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1709_pos, $P11, rx1709_curclass, "$!pos"
    rx1709_cur."!cursor_pass"(rx1709_pos, utf8:"circumfix:sym<\x{ab} \x{bb}>", 'backtrack'=>1)
    .return (rx1709_cur)
  rx1709_restart3573:
    repr_get_attr_obj rx1709_cstack, rx1709_cur, rx1709_curclass, "$!cstack"
  rx1709_fail3574:
    unless rx1709_bstack, rx1709_done3572
    pop $I19, rx1709_bstack
    if_null rx1709_cstack, rx1709_cstack_done3577
    unless rx1709_cstack, rx1709_cstack_done3577
    dec $I19
    set $P11, rx1709_cstack[$I19]
  rx1709_cstack_done3577:
    pop rx1709_rep, rx1709_bstack
    pop rx1709_pos, rx1709_bstack
    pop $I19, rx1709_bstack
    lt rx1709_pos, -1, rx1709_done3572
    lt rx1709_pos, 0, rx1709_fail3574
    eq $I19, 0, rx1709_fail3574
    nqp_islist $I20, rx1709_cstack
    unless $I20, rx1709_jump3575
    elements $I18, rx1709_bstack
    le $I18, 0, rx1709_cut3576
    dec $I18
    set $I18, rx1709_bstack[$I18]
  rx1709_cut3576:
    assign rx1709_cstack, $I18
  rx1709_jump3575:
    jump $I19
  rx1709_done3572:
    rx1709_cur."!cursor_fail"()
    .return (rx1709_cur) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_168_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1307
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1712_start
    .local string rx1712_tgt
    .local int rx1712_pos
    .local int rx1712_off
    .local int rx1712_eos
    .local int rx1712_rep
    .local pmc rx1712_cur
    .local pmc rx1712_curclass
    .local pmc rx1712_bstack
    .local pmc rx1712_cstack
    rx1712_start = self."!cursor_start_all"()
    set rx1712_cur, rx1712_start[0]
    set rx1712_tgt, rx1712_start[1]
    set rx1712_pos, rx1712_start[2]
    set rx1712_curclass, rx1712_start[3]
    set rx1712_bstack, rx1712_start[4]
    set $I19, rx1712_start[5]
    store_lex unicode:"$\x{a2}", rx1712_cur
    length rx1712_eos, rx1712_tgt
    eq $I19, 1, rx1712_restart3584
    gt rx1712_pos, rx1712_eos, rx1712_fail3585
    repr_get_attr_int $I11, self, rx1712_curclass, "$!from"
    ne $I11, -1, rxscan1713_done3591
    goto rxscan1713_scan3590
  rxscan1713_loop3589:
    inc rx1712_pos
    gt rx1712_pos, rx1712_eos, rx1712_fail3585
    repr_bind_attr_int rx1712_cur, rx1712_curclass, "$!from", rx1712_pos
  rxscan1713_scan3590:
    nqp_rxmark rx1712_bstack, rxscan1713_loop3589, rx1712_pos, 0
  rxscan1713_done3591:
    ge rx1712_pos, rx1712_eos, rx1712_fail3585
    substr $S11, rx1712_tgt, rx1712_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1712_fail3585
    repr_bind_attr_int rx1712_cur, rx1712_curclass, "$!pos", rx1712_pos
    $P11 = rx1712_cur."pblock"()
    repr_get_attr_int $I11, $P11, rx1712_curclass, "$!pos"
    lt $I11, 0, rx1712_fail3585
    nqp_rxmark rx1712_bstack, rxsubrule1714_pass3592, -1, 0
  rxsubrule1714_pass3592:
    rx1712_cstack = rx1712_cur."!cursor_capture"($P11, "pblock")
    repr_get_attr_int rx1712_pos, $P11, rx1712_curclass, "$!pos"
    rx1712_cur."!cursor_pass"(rx1712_pos, "circumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1712_cur)
  rx1712_restart3584:
    repr_get_attr_obj rx1712_cstack, rx1712_cur, rx1712_curclass, "$!cstack"
  rx1712_fail3585:
    unless rx1712_bstack, rx1712_done3583
    pop $I19, rx1712_bstack
    if_null rx1712_cstack, rx1712_cstack_done3588
    unless rx1712_cstack, rx1712_cstack_done3588
    dec $I19
    set $P11, rx1712_cstack[$I19]
  rx1712_cstack_done3588:
    pop rx1712_rep, rx1712_bstack
    pop rx1712_pos, rx1712_bstack
    pop $I19, rx1712_bstack
    lt rx1712_pos, -1, rx1712_done3583
    lt rx1712_pos, 0, rx1712_fail3585
    eq $I19, 0, rx1712_fail3585
    nqp_islist $I20, rx1712_cstack
    unless $I20, rx1712_jump3586
    elements $I18, rx1712_bstack
    le $I18, 0, rx1712_cut3587
    dec $I18
    set $I18, rx1712_bstack[$I18]
  rx1712_cut3587:
    assign rx1712_cstack, $I18
  rx1712_jump3586:
    jump $I19
  rx1712_done3583:
    rx1712_cur."!cursor_fail"()
    .return (rx1712_cur) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_169_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1309
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1715_start
    .local string rx1715_tgt
    .local int rx1715_pos
    .local int rx1715_off
    .local int rx1715_eos
    .local int rx1715_rep
    .local pmc rx1715_cur
    .local pmc rx1715_curclass
    .local pmc rx1715_bstack
    .local pmc rx1715_cstack
    rx1715_start = self."!cursor_start_all"()
    set rx1715_cur, rx1715_start[0]
    set rx1715_tgt, rx1715_start[1]
    set rx1715_pos, rx1715_start[2]
    set rx1715_curclass, rx1715_start[3]
    set rx1715_bstack, rx1715_start[4]
    set $I19, rx1715_start[5]
    store_lex unicode:"$\x{a2}", rx1715_cur
    length rx1715_eos, rx1715_tgt
    eq $I19, 1, rx1715_restart3595
    gt rx1715_pos, rx1715_eos, rx1715_fail3596
    repr_get_attr_int $I11, self, rx1715_curclass, "$!from"
    ne $I11, -1, rxscan1716_done3602
    goto rxscan1716_scan3601
  rxscan1716_loop3600:
    inc rx1715_pos
    gt rx1715_pos, rx1715_eos, rx1715_fail3596
    repr_bind_attr_int rx1715_cur, rx1715_curclass, "$!from", rx1715_pos
  rxscan1716_scan3601:
    nqp_rxmark rx1715_bstack, rxscan1716_loop3600, rx1715_pos, 0
  rxscan1716_done3602:
    repr_bind_attr_int rx1715_cur, rx1715_curclass, "$!pos", rx1715_pos
    $P11 = rx1715_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1715_curclass, "$!pos"
    lt $I11, 0, rx1715_fail3596
    repr_get_attr_int rx1715_pos, $P11, rx1715_curclass, "$!pos"
    repr_bind_attr_int rx1715_cur, rx1715_curclass, "$!pos", rx1715_pos
    $P11 = rx1715_cur."statement"()
    repr_get_attr_int $I11, $P11, rx1715_curclass, "$!pos"
    lt $I11, 0, rx1715_fail3596
    nqp_rxmark rx1715_bstack, rxsubrule1718_pass3604, -1, 0
  rxsubrule1718_pass3604:
    rx1715_cstack = rx1715_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1715_pos, $P11, rx1715_curclass, "$!pos"
    repr_bind_attr_int rx1715_cur, rx1715_curclass, "$!pos", rx1715_pos
    $P11 = rx1715_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1715_curclass, "$!pos"
    lt $I11, 0, rx1715_fail3596
    repr_get_attr_int rx1715_pos, $P11, rx1715_curclass, "$!pos"
    rx1715_cur."!cursor_pass"(rx1715_pos, "semilist", 'backtrack'=>1)
    .return (rx1715_cur)
  rx1715_restart3595:
    repr_get_attr_obj rx1715_cstack, rx1715_cur, rx1715_curclass, "$!cstack"
  rx1715_fail3596:
    unless rx1715_bstack, rx1715_done3594
    pop $I19, rx1715_bstack
    if_null rx1715_cstack, rx1715_cstack_done3599
    unless rx1715_cstack, rx1715_cstack_done3599
    dec $I19
    set $P11, rx1715_cstack[$I19]
  rx1715_cstack_done3599:
    pop rx1715_rep, rx1715_bstack
    pop rx1715_pos, rx1715_bstack
    pop $I19, rx1715_bstack
    lt rx1715_pos, -1, rx1715_done3594
    lt rx1715_pos, 0, rx1715_fail3596
    eq $I19, 0, rx1715_fail3596
    nqp_islist $I20, rx1715_cstack
    unless $I20, rx1715_jump3597
    elements $I18, rx1715_bstack
    le $I18, 0, rx1715_cut3598
    dec $I18
    set $I18, rx1715_bstack[$I18]
  rx1715_cut3598:
    assign rx1715_cstack, $I18
  rx1715_jump3597:
    jump $I19
  rx1715_done3594:
    rx1715_cur."!cursor_fail"()
    .return (rx1715_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixish" :subid("cuid_170_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1332
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1720_start
    .local string rx1720_tgt
    .local int rx1720_pos
    .local int rx1720_off
    .local int rx1720_eos
    .local int rx1720_rep
    .local pmc rx1720_cur
    .local pmc rx1720_curclass
    .local pmc rx1720_bstack
    .local pmc rx1720_cstack
    rx1720_start = self."!cursor_start_all"()
    set rx1720_cur, rx1720_start[0]
    set rx1720_tgt, rx1720_start[1]
    set rx1720_pos, rx1720_start[2]
    set rx1720_curclass, rx1720_start[3]
    set rx1720_bstack, rx1720_start[4]
    set $I19, rx1720_start[5]
    store_lex unicode:"$\x{a2}", rx1720_cur
    length rx1720_eos, rx1720_tgt
    eq $I19, 1, rx1720_restart3608
    gt rx1720_pos, rx1720_eos, rx1720_fail3609
    repr_get_attr_int $I11, self, rx1720_curclass, "$!from"
    ne $I11, -1, rxscan1721_done3615
    goto rxscan1721_scan3614
  rxscan1721_loop3613:
    inc rx1720_pos
    gt rx1720_pos, rx1720_eos, rx1720_fail3609
    repr_bind_attr_int rx1720_cur, rx1720_curclass, "$!from", rx1720_pos
  rxscan1721_scan3614:
    nqp_rxmark rx1720_bstack, rxscan1721_loop3613, rx1720_pos, 0
  rxscan1721_done3615:
    repr_bind_attr_int rx1720_cur, rx1720_curclass, "$!pos", rx1720_pos
    $P11 = rx1720_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx1720_curclass, "$!pos"
    ge $I11, 0, rx1720_fail3609
    repr_bind_attr_int rx1720_cur, rx1720_curclass, "$!pos", rx1720_pos
    $P11 = rx1720_cur."infix"()
    repr_get_attr_int $I11, $P11, rx1720_curclass, "$!pos"
    lt $I11, 0, rx1720_fail3609
    nqp_rxmark rx1720_bstack, rxsubrule1722_pass3616, -1, 0
  rxsubrule1722_pass3616:
    rx1720_cstack = rx1720_cur."!cursor_capture"($P11, "OPER=infix")
    repr_get_attr_int rx1720_pos, $P11, rx1720_curclass, "$!pos"
    rx1720_cur."!cursor_pass"(rx1720_pos, "infixish", 'backtrack'=>1)
    .return (rx1720_cur)
  rx1720_restart3608:
    repr_get_attr_obj rx1720_cstack, rx1720_cur, rx1720_curclass, "$!cstack"
  rx1720_fail3609:
    unless rx1720_bstack, rx1720_done3607
    pop $I19, rx1720_bstack
    if_null rx1720_cstack, rx1720_cstack_done3612
    unless rx1720_cstack, rx1720_cstack_done3612
    dec $I19
    set $P11, rx1720_cstack[$I19]
  rx1720_cstack_done3612:
    pop rx1720_rep, rx1720_bstack
    pop rx1720_pos, rx1720_bstack
    pop $I19, rx1720_bstack
    lt rx1720_pos, -1, rx1720_done3607
    lt rx1720_pos, 0, rx1720_fail3609
    eq $I19, 0, rx1720_fail3609
    nqp_islist $I20, rx1720_cstack
    unless $I20, rx1720_jump3610
    elements $I18, rx1720_bstack
    le $I18, 0, rx1720_cut3611
    dec $I18
    set $I18, rx1720_bstack[$I18]
  rx1720_cut3611:
    assign rx1720_cstack, $I18
  rx1720_jump3610:
    jump $I19
  rx1720_done3607:
    rx1720_cur."!cursor_fail"()
    .return (rx1720_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_171_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1333
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1723_start
    .local string rx1723_tgt
    .local int rx1723_pos
    .local int rx1723_off
    .local int rx1723_eos
    .local int rx1723_rep
    .local pmc rx1723_cur
    .local pmc rx1723_curclass
    .local pmc rx1723_bstack
    .local pmc rx1723_cstack
    rx1723_start = self."!cursor_start_all"()
    set rx1723_cur, rx1723_start[0]
    set rx1723_tgt, rx1723_start[1]
    set rx1723_pos, rx1723_start[2]
    set rx1723_curclass, rx1723_start[3]
    set rx1723_bstack, rx1723_start[4]
    set $I19, rx1723_start[5]
    store_lex unicode:"$\x{a2}", rx1723_cur
    length rx1723_eos, rx1723_tgt
    eq $I19, 1, rx1723_restart3619
    gt rx1723_pos, rx1723_eos, rx1723_fail3620
    repr_get_attr_int $I11, self, rx1723_curclass, "$!from"
    ne $I11, -1, rxscan1724_done3626
    goto rxscan1724_scan3625
  rxscan1724_loop3624:
    inc rx1723_pos
    gt rx1723_pos, rx1723_eos, rx1723_fail3620
    repr_bind_attr_int rx1723_cur, rx1723_curclass, "$!from", rx1723_pos
  rxscan1724_scan3625:
    nqp_rxmark rx1723_bstack, rxscan1724_loop3624, rx1723_pos, 0
  rxscan1724_done3626:
    repr_bind_attr_int rx1723_cur, rx1723_curclass, "$!pos", rx1723_pos
    $P11 = rx1723_cur."lambda"()
    repr_get_attr_int $I11, $P11, rx1723_curclass, "$!pos"
    lt $I11, 0, rx1723_fail3620
    rx1723_cur."!cursor_pass"(rx1723_pos, "infixstopper", 'backtrack'=>1)
    .return (rx1723_cur)
  rx1723_restart3619:
    repr_get_attr_obj rx1723_cstack, rx1723_cur, rx1723_curclass, "$!cstack"
  rx1723_fail3620:
    unless rx1723_bstack, rx1723_done3618
    pop $I19, rx1723_bstack
    if_null rx1723_cstack, rx1723_cstack_done3623
    unless rx1723_cstack, rx1723_cstack_done3623
    dec $I19
    set $P11, rx1723_cstack[$I19]
  rx1723_cstack_done3623:
    pop rx1723_rep, rx1723_bstack
    pop rx1723_pos, rx1723_bstack
    pop $I19, rx1723_bstack
    lt rx1723_pos, -1, rx1723_done3618
    lt rx1723_pos, 0, rx1723_fail3620
    eq $I19, 0, rx1723_fail3620
    nqp_islist $I20, rx1723_cstack
    unless $I20, rx1723_jump3621
    elements $I18, rx1723_bstack
    le $I18, 0, rx1723_cut3622
    dec $I18
    set $I18, rx1723_bstack[$I18]
  rx1723_cut3622:
    assign rx1723_cstack, $I18
  rx1723_jump3621:
    jump $I19
  rx1723_done3618:
    rx1723_cur."!cursor_fail"()
    .return (rx1723_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_172_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1335
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1725_start
    .local string rx1725_tgt
    .local int rx1725_pos
    .local int rx1725_off
    .local int rx1725_eos
    .local int rx1725_rep
    .local pmc rx1725_cur
    .local pmc rx1725_curclass
    .local pmc rx1725_bstack
    .local pmc rx1725_cstack
    rx1725_start = self."!cursor_start_all"()
    set rx1725_cur, rx1725_start[0]
    set rx1725_tgt, rx1725_start[1]
    set rx1725_pos, rx1725_start[2]
    set rx1725_curclass, rx1725_start[3]
    set rx1725_bstack, rx1725_start[4]
    set $I19, rx1725_start[5]
    store_lex unicode:"$\x{a2}", rx1725_cur
    length rx1725_eos, rx1725_tgt
    eq $I19, 1, rx1725_restart3629
    gt rx1725_pos, rx1725_eos, rx1725_fail3630
    repr_get_attr_int $I11, self, rx1725_curclass, "$!from"
    ne $I11, -1, rxscan1726_done3636
    goto rxscan1726_scan3635
  rxscan1726_loop3634:
    inc rx1725_pos
    gt rx1725_pos, rx1725_eos, rx1725_fail3630
    repr_bind_attr_int rx1725_cur, rx1725_curclass, "$!from", rx1725_pos
  rxscan1726_scan3635:
    nqp_rxmark rx1725_bstack, rxscan1726_loop3634, rx1725_pos, 0
  rxscan1726_done3636:
    add $I11, rx1725_pos, 1
    gt $I11, rx1725_eos, rx1725_fail3630
    substr $S10, rx1725_tgt, rx1725_pos, 1
    ne $S10, ucs4:"[", rx1725_fail3630
    add rx1725_pos, 1
    repr_bind_attr_int rx1725_cur, rx1725_curclass, "$!pos", rx1725_pos
    $P11 = rx1725_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1725_curclass, "$!pos"
    lt $I11, 0, rx1725_fail3630
    repr_get_attr_int rx1725_pos, $P11, rx1725_curclass, "$!pos"
    repr_bind_attr_int rx1725_cur, rx1725_curclass, "$!pos", rx1725_pos
    $P11 = rx1725_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1725_curclass, "$!pos"
    lt $I11, 0, rx1725_fail3630
    nqp_rxmark rx1725_bstack, rxsubrule1728_pass3638, -1, 0
  rxsubrule1728_pass3638:
    rx1725_cstack = rx1725_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1725_pos, $P11, rx1725_curclass, "$!pos"
    add $I11, rx1725_pos, 1
    gt $I11, rx1725_eos, rx1725_fail3630
    substr $S10, rx1725_tgt, rx1725_pos, 1
    ne $S10, ucs4:"]", rx1725_fail3630
    add rx1725_pos, 1
    repr_bind_attr_int rx1725_cur, rx1725_curclass, "$!pos", rx1725_pos
    $P11 = rx1725_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1725_curclass, "$!pos"
    lt $I11, 0, rx1725_fail3630
    nqp_rxmark rx1725_bstack, rxsubrule1729_pass3639, -1, 0
  rxsubrule1729_pass3639:
    rx1725_cstack = rx1725_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1725_pos, $P11, rx1725_curclass, "$!pos"
    rx1725_cur."!cursor_pass"(rx1725_pos, "postcircumfix:sym<[ ]>", 'backtrack'=>1)
    .return (rx1725_cur)
  rx1725_restart3629:
    repr_get_attr_obj rx1725_cstack, rx1725_cur, rx1725_curclass, "$!cstack"
  rx1725_fail3630:
    unless rx1725_bstack, rx1725_done3628
    pop $I19, rx1725_bstack
    if_null rx1725_cstack, rx1725_cstack_done3633
    unless rx1725_cstack, rx1725_cstack_done3633
    dec $I19
    set $P11, rx1725_cstack[$I19]
  rx1725_cstack_done3633:
    pop rx1725_rep, rx1725_bstack
    pop rx1725_pos, rx1725_bstack
    pop $I19, rx1725_bstack
    lt rx1725_pos, -1, rx1725_done3628
    lt rx1725_pos, 0, rx1725_fail3630
    eq $I19, 0, rx1725_fail3630
    nqp_islist $I20, rx1725_cstack
    unless $I20, rx1725_jump3631
    elements $I18, rx1725_bstack
    le $I18, 0, rx1725_cut3632
    dec $I18
    set $I18, rx1725_bstack[$I18]
  rx1725_cut3632:
    assign rx1725_cstack, $I18
  rx1725_jump3631:
    jump $I19
  rx1725_done3628:
    rx1725_cur."!cursor_fail"()
    .return (rx1725_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_173_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1340
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1730_start
    .local string rx1730_tgt
    .local int rx1730_pos
    .local int rx1730_off
    .local int rx1730_eos
    .local int rx1730_rep
    .local pmc rx1730_cur
    .local pmc rx1730_curclass
    .local pmc rx1730_bstack
    .local pmc rx1730_cstack
    rx1730_start = self."!cursor_start_all"()
    set rx1730_cur, rx1730_start[0]
    set rx1730_tgt, rx1730_start[1]
    set rx1730_pos, rx1730_start[2]
    set rx1730_curclass, rx1730_start[3]
    set rx1730_bstack, rx1730_start[4]
    set $I19, rx1730_start[5]
    store_lex unicode:"$\x{a2}", rx1730_cur
    length rx1730_eos, rx1730_tgt
    eq $I19, 1, rx1730_restart3642
    gt rx1730_pos, rx1730_eos, rx1730_fail3643
    repr_get_attr_int $I11, self, rx1730_curclass, "$!from"
    ne $I11, -1, rxscan1731_done3649
    goto rxscan1731_scan3648
  rxscan1731_loop3647:
    inc rx1730_pos
    gt rx1730_pos, rx1730_eos, rx1730_fail3643
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!from", rx1730_pos
  rxscan1731_scan3648:
    nqp_rxmark rx1730_bstack, rxscan1731_loop3647, rx1730_pos, 0
  rxscan1731_done3649:
    add $I11, rx1730_pos, 1
    gt $I11, rx1730_eos, rx1730_fail3643
    substr $S10, rx1730_tgt, rx1730_pos, 1
    ne $S10, ucs4:"{", rx1730_fail3643
    add rx1730_pos, 1
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!pos", rx1730_pos
    $P11 = rx1730_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1730_curclass, "$!pos"
    lt $I11, 0, rx1730_fail3643
    repr_get_attr_int rx1730_pos, $P11, rx1730_curclass, "$!pos"
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!pos", rx1730_pos
    $P11 = rx1730_cur."EXPR"()
    repr_get_attr_int $I11, $P11, rx1730_curclass, "$!pos"
    lt $I11, 0, rx1730_fail3643
    nqp_rxmark rx1730_bstack, rxsubrule1733_pass3651, -1, 0
  rxsubrule1733_pass3651:
    rx1730_cstack = rx1730_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1730_pos, $P11, rx1730_curclass, "$!pos"
    add $I11, rx1730_pos, 1
    gt $I11, rx1730_eos, rx1730_fail3643
    substr $S10, rx1730_tgt, rx1730_pos, 1
    ne $S10, ucs4:"}", rx1730_fail3643
    add rx1730_pos, 1
    repr_bind_attr_int rx1730_cur, rx1730_curclass, "$!pos", rx1730_pos
    $P11 = rx1730_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1730_curclass, "$!pos"
    lt $I11, 0, rx1730_fail3643
    nqp_rxmark rx1730_bstack, rxsubrule1734_pass3652, -1, 0
  rxsubrule1734_pass3652:
    rx1730_cstack = rx1730_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1730_pos, $P11, rx1730_curclass, "$!pos"
    rx1730_cur."!cursor_pass"(rx1730_pos, "postcircumfix:sym<{ }>", 'backtrack'=>1)
    .return (rx1730_cur)
  rx1730_restart3642:
    repr_get_attr_obj rx1730_cstack, rx1730_cur, rx1730_curclass, "$!cstack"
  rx1730_fail3643:
    unless rx1730_bstack, rx1730_done3641
    pop $I19, rx1730_bstack
    if_null rx1730_cstack, rx1730_cstack_done3646
    unless rx1730_cstack, rx1730_cstack_done3646
    dec $I19
    set $P11, rx1730_cstack[$I19]
  rx1730_cstack_done3646:
    pop rx1730_rep, rx1730_bstack
    pop rx1730_pos, rx1730_bstack
    pop $I19, rx1730_bstack
    lt rx1730_pos, -1, rx1730_done3641
    lt rx1730_pos, 0, rx1730_fail3643
    eq $I19, 0, rx1730_fail3643
    nqp_islist $I20, rx1730_cstack
    unless $I20, rx1730_jump3644
    elements $I18, rx1730_bstack
    le $I18, 0, rx1730_cut3645
    dec $I18
    set $I18, rx1730_bstack[$I18]
  rx1730_cut3645:
    assign rx1730_cstack, $I18
  rx1730_jump3644:
    jump $I19
  rx1730_done3641:
    rx1730_cur."!cursor_fail"()
    .return (rx1730_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_174_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1345
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1735_start
    .local string rx1735_tgt
    .local int rx1735_pos
    .local int rx1735_off
    .local int rx1735_eos
    .local int rx1735_rep
    .local pmc rx1735_cur
    .local pmc rx1735_curclass
    .local pmc rx1735_bstack
    .local pmc rx1735_cstack
    rx1735_start = self."!cursor_start_all"()
    set rx1735_cur, rx1735_start[0]
    set rx1735_tgt, rx1735_start[1]
    set rx1735_pos, rx1735_start[2]
    set rx1735_curclass, rx1735_start[3]
    set rx1735_bstack, rx1735_start[4]
    set $I19, rx1735_start[5]
    store_lex unicode:"$\x{a2}", rx1735_cur
    length rx1735_eos, rx1735_tgt
    eq $I19, 1, rx1735_restart3655
    gt rx1735_pos, rx1735_eos, rx1735_fail3656
    repr_get_attr_int $I11, self, rx1735_curclass, "$!from"
    ne $I11, -1, rxscan1736_done3662
    goto rxscan1736_scan3661
  rxscan1736_loop3660:
    inc rx1735_pos
    gt rx1735_pos, rx1735_eos, rx1735_fail3656
    repr_bind_attr_int rx1735_cur, rx1735_curclass, "$!from", rx1735_pos
  rxscan1736_scan3661:
    nqp_rxmark rx1735_bstack, rxscan1736_loop3660, rx1735_pos, 0
  rxscan1736_done3662:
    ge rx1735_pos, rx1735_eos, rx1735_fail3656
    substr $S11, rx1735_tgt, rx1735_pos, 1
    index $I11, ucs4:"<", $S11
    lt $I11, 0, rx1735_fail3656
    repr_bind_attr_int rx1735_cur, rx1735_curclass, "$!pos", rx1735_pos
    $P11 = rx1735_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx1735_curclass, "$!pos"
    lt $I11, 0, rx1735_fail3656
    nqp_rxmark rx1735_bstack, rxsubrule1737_pass3663, -1, 0
  rxsubrule1737_pass3663:
    rx1735_cstack = rx1735_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx1735_pos, $P11, rx1735_curclass, "$!pos"
    repr_bind_attr_int rx1735_cur, rx1735_curclass, "$!pos", rx1735_pos
    $P11 = rx1735_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1735_curclass, "$!pos"
    lt $I11, 0, rx1735_fail3656
    nqp_rxmark rx1735_bstack, rxsubrule1738_pass3664, -1, 0
  rxsubrule1738_pass3664:
    rx1735_cstack = rx1735_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1735_pos, $P11, rx1735_curclass, "$!pos"
    rx1735_cur."!cursor_pass"(rx1735_pos, "postcircumfix:sym<ang>", 'backtrack'=>1)
    .return (rx1735_cur)
  rx1735_restart3655:
    repr_get_attr_obj rx1735_cstack, rx1735_cur, rx1735_curclass, "$!cstack"
  rx1735_fail3656:
    unless rx1735_bstack, rx1735_done3654
    pop $I19, rx1735_bstack
    if_null rx1735_cstack, rx1735_cstack_done3659
    unless rx1735_cstack, rx1735_cstack_done3659
    dec $I19
    set $P11, rx1735_cstack[$I19]
  rx1735_cstack_done3659:
    pop rx1735_rep, rx1735_bstack
    pop rx1735_pos, rx1735_bstack
    pop $I19, rx1735_bstack
    lt rx1735_pos, -1, rx1735_done3654
    lt rx1735_pos, 0, rx1735_fail3656
    eq $I19, 0, rx1735_fail3656
    nqp_islist $I20, rx1735_cstack
    unless $I20, rx1735_jump3657
    elements $I18, rx1735_bstack
    le $I18, 0, rx1735_cut3658
    dec $I18
    set $I18, rx1735_bstack[$I18]
  rx1735_cut3658:
    assign rx1735_cstack, $I18
  rx1735_jump3657:
    jump $I19
  rx1735_done3654:
    rx1735_cur."!cursor_fail"()
    .return (rx1735_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_175_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1350
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1739_start
    .local string rx1739_tgt
    .local int rx1739_pos
    .local int rx1739_off
    .local int rx1739_eos
    .local int rx1739_rep
    .local pmc rx1739_cur
    .local pmc rx1739_curclass
    .local pmc rx1739_bstack
    .local pmc rx1739_cstack
    rx1739_start = self."!cursor_start_all"()
    set rx1739_cur, rx1739_start[0]
    set rx1739_tgt, rx1739_start[1]
    set rx1739_pos, rx1739_start[2]
    set rx1739_curclass, rx1739_start[3]
    set rx1739_bstack, rx1739_start[4]
    set $I19, rx1739_start[5]
    store_lex unicode:"$\x{a2}", rx1739_cur
    length rx1739_eos, rx1739_tgt
    eq $I19, 1, rx1739_restart3667
    gt rx1739_pos, rx1739_eos, rx1739_fail3668
    repr_get_attr_int $I11, self, rx1739_curclass, "$!from"
    ne $I11, -1, rxscan1740_done3674
    goto rxscan1740_scan3673
  rxscan1740_loop3672:
    inc rx1739_pos
    gt rx1739_pos, rx1739_eos, rx1739_fail3668
    repr_bind_attr_int rx1739_cur, rx1739_curclass, "$!from", rx1739_pos
  rxscan1740_scan3673:
    nqp_rxmark rx1739_bstack, rxscan1740_loop3672, rx1739_pos, 0
  rxscan1740_done3674:
    add $I11, rx1739_pos, 1
    gt $I11, rx1739_eos, rx1739_fail3668
    substr $S10, rx1739_tgt, rx1739_pos, 1
    ne $S10, ucs4:"(", rx1739_fail3668
    add rx1739_pos, 1
    repr_bind_attr_int rx1739_cur, rx1739_curclass, "$!pos", rx1739_pos
    $P11 = rx1739_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1739_curclass, "$!pos"
    lt $I11, 0, rx1739_fail3668
    repr_get_attr_int rx1739_pos, $P11, rx1739_curclass, "$!pos"
    repr_bind_attr_int rx1739_cur, rx1739_curclass, "$!pos", rx1739_pos
    $P11 = rx1739_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1739_curclass, "$!pos"
    lt $I11, 0, rx1739_fail3668
    nqp_rxmark rx1739_bstack, rxsubrule1742_pass3676, -1, 0
  rxsubrule1742_pass3676:
    rx1739_cstack = rx1739_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1739_pos, $P11, rx1739_curclass, "$!pos"
    add $I11, rx1739_pos, 1
    gt $I11, rx1739_eos, rx1739_fail3668
    substr $S10, rx1739_tgt, rx1739_pos, 1
    ne $S10, ucs4:")", rx1739_fail3668
    add rx1739_pos, 1
    repr_bind_attr_int rx1739_cur, rx1739_curclass, "$!pos", rx1739_pos
    $P11 = rx1739_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1739_curclass, "$!pos"
    lt $I11, 0, rx1739_fail3668
    nqp_rxmark rx1739_bstack, rxsubrule1743_pass3677, -1, 0
  rxsubrule1743_pass3677:
    rx1739_cstack = rx1739_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1739_pos, $P11, rx1739_curclass, "$!pos"
    rx1739_cur."!cursor_pass"(rx1739_pos, "postcircumfix:sym<( )>", 'backtrack'=>1)
    .return (rx1739_cur)
  rx1739_restart3667:
    repr_get_attr_obj rx1739_cstack, rx1739_cur, rx1739_curclass, "$!cstack"
  rx1739_fail3668:
    unless rx1739_bstack, rx1739_done3666
    pop $I19, rx1739_bstack
    if_null rx1739_cstack, rx1739_cstack_done3671
    unless rx1739_cstack, rx1739_cstack_done3671
    dec $I19
    set $P11, rx1739_cstack[$I19]
  rx1739_cstack_done3671:
    pop rx1739_rep, rx1739_bstack
    pop rx1739_pos, rx1739_bstack
    pop $I19, rx1739_bstack
    lt rx1739_pos, -1, rx1739_done3666
    lt rx1739_pos, 0, rx1739_fail3668
    eq $I19, 0, rx1739_fail3668
    nqp_islist $I20, rx1739_cstack
    unless $I20, rx1739_jump3669
    elements $I18, rx1739_bstack
    le $I18, 0, rx1739_cut3670
    dec $I18
    set $I18, rx1739_bstack[$I18]
  rx1739_cut3670:
    assign rx1739_cstack, $I18
  rx1739_jump3669:
    jump $I19
  rx1739_done3666:
    rx1739_cur."!cursor_fail"()
    .return (rx1739_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_176_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1355
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1744_start
    .local string rx1744_tgt
    .local int rx1744_pos
    .local int rx1744_off
    .local int rx1744_eos
    .local int rx1744_rep
    .local pmc rx1744_cur
    .local pmc rx1744_curclass
    .local pmc rx1744_bstack
    .local pmc rx1744_cstack
    rx1744_start = self."!cursor_start_all"()
    set rx1744_cur, rx1744_start[0]
    set rx1744_tgt, rx1744_start[1]
    set rx1744_pos, rx1744_start[2]
    set rx1744_curclass, rx1744_start[3]
    set rx1744_bstack, rx1744_start[4]
    set $I19, rx1744_start[5]
    store_lex unicode:"$\x{a2}", rx1744_cur
    length rx1744_eos, rx1744_tgt
    eq $I19, 1, rx1744_restart3680
    gt rx1744_pos, rx1744_eos, rx1744_fail3681
    repr_get_attr_int $I11, self, rx1744_curclass, "$!from"
    ne $I11, -1, rxscan1745_done3687
    goto rxscan1745_scan3686
  rxscan1745_loop3685:
    inc rx1744_pos
    gt rx1744_pos, rx1744_eos, rx1744_fail3681
    repr_bind_attr_int rx1744_cur, rx1744_curclass, "$!from", rx1744_pos
  rxscan1745_scan3686:
    nqp_rxmark rx1744_bstack, rxscan1745_loop3685, rx1744_pos, 0
  rxscan1745_done3687:
    repr_bind_attr_int rx1744_cur, rx1744_curclass, "$!pos", rx1744_pos
    $P11 = rx1744_cur."dotty"()
    repr_get_attr_int $I11, $P11, rx1744_curclass, "$!pos"
    lt $I11, 0, rx1744_fail3681
    nqp_rxmark rx1744_bstack, rxsubrule1746_pass3688, -1, 0
  rxsubrule1746_pass3688:
    rx1744_cstack = rx1744_cur."!cursor_capture"($P11, "dotty")
    repr_get_attr_int rx1744_pos, $P11, rx1744_curclass, "$!pos"
    repr_bind_attr_int rx1744_cur, rx1744_curclass, "$!pos", rx1744_pos
    $P11 = rx1744_cur."O"("%methodop")
    repr_get_attr_int $I11, $P11, rx1744_curclass, "$!pos"
    lt $I11, 0, rx1744_fail3681
    nqp_rxmark rx1744_bstack, rxsubrule1747_pass3689, -1, 0
  rxsubrule1747_pass3689:
    rx1744_cstack = rx1744_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1744_pos, $P11, rx1744_curclass, "$!pos"
    rx1744_cur."!cursor_pass"(rx1744_pos, "postfix:sym<.>", 'backtrack'=>1)
    .return (rx1744_cur)
  rx1744_restart3680:
    repr_get_attr_obj rx1744_cstack, rx1744_cur, rx1744_curclass, "$!cstack"
  rx1744_fail3681:
    unless rx1744_bstack, rx1744_done3679
    pop $I19, rx1744_bstack
    if_null rx1744_cstack, rx1744_cstack_done3684
    unless rx1744_cstack, rx1744_cstack_done3684
    dec $I19
    set $P11, rx1744_cstack[$I19]
  rx1744_cstack_done3684:
    pop rx1744_rep, rx1744_bstack
    pop rx1744_pos, rx1744_bstack
    pop $I19, rx1744_bstack
    lt rx1744_pos, -1, rx1744_done3679
    lt rx1744_pos, 0, rx1744_fail3681
    eq $I19, 0, rx1744_fail3681
    nqp_islist $I20, rx1744_cstack
    unless $I20, rx1744_jump3682
    elements $I18, rx1744_bstack
    le $I18, 0, rx1744_cut3683
    dec $I18
    set $I18, rx1744_bstack[$I18]
  rx1744_cut3683:
    assign rx1744_cstack, $I18
  rx1744_jump3682:
    jump $I19
  rx1744_done3679:
    rx1744_cur."!cursor_fail"()
    .return (rx1744_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<++>" :subid("cuid_177_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1357
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1748_start
    .local string rx1748_tgt
    .local int rx1748_pos
    .local int rx1748_off
    .local int rx1748_eos
    .local int rx1748_rep
    .local pmc rx1748_cur
    .local pmc rx1748_curclass
    .local pmc rx1748_bstack
    .local pmc rx1748_cstack
    rx1748_start = self."!cursor_start_all"()
    set rx1748_cur, rx1748_start[0]
    set rx1748_tgt, rx1748_start[1]
    set rx1748_pos, rx1748_start[2]
    set rx1748_curclass, rx1748_start[3]
    set rx1748_bstack, rx1748_start[4]
    set $I19, rx1748_start[5]
    store_lex unicode:"$\x{a2}", rx1748_cur
    length rx1748_eos, rx1748_tgt
    eq $I19, 1, rx1748_restart3692
    gt rx1748_pos, rx1748_eos, rx1748_fail3693
    repr_get_attr_int $I11, self, rx1748_curclass, "$!from"
    ne $I11, -1, rxscan1749_done3699
    goto rxscan1749_scan3698
  rxscan1749_loop3697:
    inc rx1748_pos
    gt rx1748_pos, rx1748_eos, rx1748_fail3693
    repr_bind_attr_int rx1748_cur, rx1748_curclass, "$!from", rx1748_pos
  rxscan1749_scan3698:
    nqp_rxmark rx1748_bstack, rxscan1749_loop3697, rx1748_pos, 0
  rxscan1749_done3699:
    nqp_rxmark rx1748_bstack, rxcap1750_fail3701, rx1748_pos, 0
    add $I11, rx1748_pos, 2
    gt $I11, rx1748_eos, rx1748_fail3693
    substr $S10, rx1748_tgt, rx1748_pos, 2
    ne $S10, ucs4:"++", rx1748_fail3693
    add rx1748_pos, 2
    nqp_rxpeek $I19, rx1748_bstack, rxcap1750_fail3701
    inc $I19
    set $I11, rx1748_bstack[$I19]
    repr_bind_attr_int rx1748_cur, rx1748_curclass, "$!pos", rx1748_pos
    $P11 = rx1748_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1748_pos)
    rx1748_cstack = rx1748_cur."!cursor_capture"($P11, "sym")
    goto rxcap1750_done3700
  rxcap1750_fail3701:
    goto rx1748_fail3693
  rxcap1750_done3700:
    repr_bind_attr_int rx1748_cur, rx1748_curclass, "$!pos", rx1748_pos
    $P11 = rx1748_cur."O"("%autoincrement, :op<preinc>")
    repr_get_attr_int $I11, $P11, rx1748_curclass, "$!pos"
    lt $I11, 0, rx1748_fail3693
    nqp_rxmark rx1748_bstack, rxsubrule1751_pass3702, -1, 0
  rxsubrule1751_pass3702:
    rx1748_cstack = rx1748_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1748_pos, $P11, rx1748_curclass, "$!pos"
    rx1748_cur."!cursor_pass"(rx1748_pos, "prefix:sym<++>", 'backtrack'=>1)
    .return (rx1748_cur)
  rx1748_restart3692:
    repr_get_attr_obj rx1748_cstack, rx1748_cur, rx1748_curclass, "$!cstack"
  rx1748_fail3693:
    unless rx1748_bstack, rx1748_done3691
    pop $I19, rx1748_bstack
    if_null rx1748_cstack, rx1748_cstack_done3696
    unless rx1748_cstack, rx1748_cstack_done3696
    dec $I19
    set $P11, rx1748_cstack[$I19]
  rx1748_cstack_done3696:
    pop rx1748_rep, rx1748_bstack
    pop rx1748_pos, rx1748_bstack
    pop $I19, rx1748_bstack
    lt rx1748_pos, -1, rx1748_done3691
    lt rx1748_pos, 0, rx1748_fail3693
    eq $I19, 0, rx1748_fail3693
    nqp_islist $I20, rx1748_cstack
    unless $I20, rx1748_jump3694
    elements $I18, rx1748_bstack
    le $I18, 0, rx1748_cut3695
    dec $I18
    set $I18, rx1748_bstack[$I18]
  rx1748_cut3695:
    assign rx1748_cstack, $I18
  rx1748_jump3694:
    jump $I19
  rx1748_done3691:
    rx1748_cur."!cursor_fail"()
    .return (rx1748_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<-->" :subid("cuid_178_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1358
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1752_start
    .local string rx1752_tgt
    .local int rx1752_pos
    .local int rx1752_off
    .local int rx1752_eos
    .local int rx1752_rep
    .local pmc rx1752_cur
    .local pmc rx1752_curclass
    .local pmc rx1752_bstack
    .local pmc rx1752_cstack
    rx1752_start = self."!cursor_start_all"()
    set rx1752_cur, rx1752_start[0]
    set rx1752_tgt, rx1752_start[1]
    set rx1752_pos, rx1752_start[2]
    set rx1752_curclass, rx1752_start[3]
    set rx1752_bstack, rx1752_start[4]
    set $I19, rx1752_start[5]
    store_lex unicode:"$\x{a2}", rx1752_cur
    length rx1752_eos, rx1752_tgt
    eq $I19, 1, rx1752_restart3705
    gt rx1752_pos, rx1752_eos, rx1752_fail3706
    repr_get_attr_int $I11, self, rx1752_curclass, "$!from"
    ne $I11, -1, rxscan1753_done3712
    goto rxscan1753_scan3711
  rxscan1753_loop3710:
    inc rx1752_pos
    gt rx1752_pos, rx1752_eos, rx1752_fail3706
    repr_bind_attr_int rx1752_cur, rx1752_curclass, "$!from", rx1752_pos
  rxscan1753_scan3711:
    nqp_rxmark rx1752_bstack, rxscan1753_loop3710, rx1752_pos, 0
  rxscan1753_done3712:
    nqp_rxmark rx1752_bstack, rxcap1754_fail3714, rx1752_pos, 0
    add $I11, rx1752_pos, 2
    gt $I11, rx1752_eos, rx1752_fail3706
    substr $S10, rx1752_tgt, rx1752_pos, 2
    ne $S10, ucs4:"--", rx1752_fail3706
    add rx1752_pos, 2
    nqp_rxpeek $I19, rx1752_bstack, rxcap1754_fail3714
    inc $I19
    set $I11, rx1752_bstack[$I19]
    repr_bind_attr_int rx1752_cur, rx1752_curclass, "$!pos", rx1752_pos
    $P11 = rx1752_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1752_pos)
    rx1752_cstack = rx1752_cur."!cursor_capture"($P11, "sym")
    goto rxcap1754_done3713
  rxcap1754_fail3714:
    goto rx1752_fail3706
  rxcap1754_done3713:
    repr_bind_attr_int rx1752_cur, rx1752_curclass, "$!pos", rx1752_pos
    $P11 = rx1752_cur."O"("%autoincrement, :op<predec>")
    repr_get_attr_int $I11, $P11, rx1752_curclass, "$!pos"
    lt $I11, 0, rx1752_fail3706
    nqp_rxmark rx1752_bstack, rxsubrule1755_pass3715, -1, 0
  rxsubrule1755_pass3715:
    rx1752_cstack = rx1752_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1752_pos, $P11, rx1752_curclass, "$!pos"
    rx1752_cur."!cursor_pass"(rx1752_pos, "prefix:sym<-->", 'backtrack'=>1)
    .return (rx1752_cur)
  rx1752_restart3705:
    repr_get_attr_obj rx1752_cstack, rx1752_cur, rx1752_curclass, "$!cstack"
  rx1752_fail3706:
    unless rx1752_bstack, rx1752_done3704
    pop $I19, rx1752_bstack
    if_null rx1752_cstack, rx1752_cstack_done3709
    unless rx1752_cstack, rx1752_cstack_done3709
    dec $I19
    set $P11, rx1752_cstack[$I19]
  rx1752_cstack_done3709:
    pop rx1752_rep, rx1752_bstack
    pop rx1752_pos, rx1752_bstack
    pop $I19, rx1752_bstack
    lt rx1752_pos, -1, rx1752_done3704
    lt rx1752_pos, 0, rx1752_fail3706
    eq $I19, 0, rx1752_fail3706
    nqp_islist $I20, rx1752_cstack
    unless $I20, rx1752_jump3707
    elements $I18, rx1752_bstack
    le $I18, 0, rx1752_cut3708
    dec $I18
    set $I18, rx1752_bstack[$I18]
  rx1752_cut3708:
    assign rx1752_cstack, $I18
  rx1752_jump3707:
    jump $I19
  rx1752_done3704:
    rx1752_cur."!cursor_fail"()
    .return (rx1752_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<++>" :subid("cuid_179_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1360
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1756_start
    .local string rx1756_tgt
    .local int rx1756_pos
    .local int rx1756_off
    .local int rx1756_eos
    .local int rx1756_rep
    .local pmc rx1756_cur
    .local pmc rx1756_curclass
    .local pmc rx1756_bstack
    .local pmc rx1756_cstack
    rx1756_start = self."!cursor_start_all"()
    set rx1756_cur, rx1756_start[0]
    set rx1756_tgt, rx1756_start[1]
    set rx1756_pos, rx1756_start[2]
    set rx1756_curclass, rx1756_start[3]
    set rx1756_bstack, rx1756_start[4]
    set $I19, rx1756_start[5]
    store_lex unicode:"$\x{a2}", rx1756_cur
    length rx1756_eos, rx1756_tgt
    eq $I19, 1, rx1756_restart3718
    gt rx1756_pos, rx1756_eos, rx1756_fail3719
    repr_get_attr_int $I11, self, rx1756_curclass, "$!from"
    ne $I11, -1, rxscan1757_done3725
    goto rxscan1757_scan3724
  rxscan1757_loop3723:
    inc rx1756_pos
    gt rx1756_pos, rx1756_eos, rx1756_fail3719
    repr_bind_attr_int rx1756_cur, rx1756_curclass, "$!from", rx1756_pos
  rxscan1757_scan3724:
    nqp_rxmark rx1756_bstack, rxscan1757_loop3723, rx1756_pos, 0
  rxscan1757_done3725:
    nqp_rxmark rx1756_bstack, rxcap1758_fail3727, rx1756_pos, 0
    add $I11, rx1756_pos, 2
    gt $I11, rx1756_eos, rx1756_fail3719
    substr $S10, rx1756_tgt, rx1756_pos, 2
    ne $S10, ucs4:"++", rx1756_fail3719
    add rx1756_pos, 2
    nqp_rxpeek $I19, rx1756_bstack, rxcap1758_fail3727
    inc $I19
    set $I11, rx1756_bstack[$I19]
    repr_bind_attr_int rx1756_cur, rx1756_curclass, "$!pos", rx1756_pos
    $P11 = rx1756_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1756_pos)
    rx1756_cstack = rx1756_cur."!cursor_capture"($P11, "sym")
    goto rxcap1758_done3726
  rxcap1758_fail3727:
    goto rx1756_fail3719
  rxcap1758_done3726:
    repr_bind_attr_int rx1756_cur, rx1756_curclass, "$!pos", rx1756_pos
    $P11 = rx1756_cur."O"("%autoincrement, :op<postinc>")
    repr_get_attr_int $I11, $P11, rx1756_curclass, "$!pos"
    lt $I11, 0, rx1756_fail3719
    nqp_rxmark rx1756_bstack, rxsubrule1759_pass3728, -1, 0
  rxsubrule1759_pass3728:
    rx1756_cstack = rx1756_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1756_pos, $P11, rx1756_curclass, "$!pos"
    rx1756_cur."!cursor_pass"(rx1756_pos, "postfix:sym<++>", 'backtrack'=>1)
    .return (rx1756_cur)
  rx1756_restart3718:
    repr_get_attr_obj rx1756_cstack, rx1756_cur, rx1756_curclass, "$!cstack"
  rx1756_fail3719:
    unless rx1756_bstack, rx1756_done3717
    pop $I19, rx1756_bstack
    if_null rx1756_cstack, rx1756_cstack_done3722
    unless rx1756_cstack, rx1756_cstack_done3722
    dec $I19
    set $P11, rx1756_cstack[$I19]
  rx1756_cstack_done3722:
    pop rx1756_rep, rx1756_bstack
    pop rx1756_pos, rx1756_bstack
    pop $I19, rx1756_bstack
    lt rx1756_pos, -1, rx1756_done3717
    lt rx1756_pos, 0, rx1756_fail3719
    eq $I19, 0, rx1756_fail3719
    nqp_islist $I20, rx1756_cstack
    unless $I20, rx1756_jump3720
    elements $I18, rx1756_bstack
    le $I18, 0, rx1756_cut3721
    dec $I18
    set $I18, rx1756_bstack[$I18]
  rx1756_cut3721:
    assign rx1756_cstack, $I18
  rx1756_jump3720:
    jump $I19
  rx1756_done3717:
    rx1756_cur."!cursor_fail"()
    .return (rx1756_cur) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<-->" :subid("cuid_180_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1361
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1760_start
    .local string rx1760_tgt
    .local int rx1760_pos
    .local int rx1760_off
    .local int rx1760_eos
    .local int rx1760_rep
    .local pmc rx1760_cur
    .local pmc rx1760_curclass
    .local pmc rx1760_bstack
    .local pmc rx1760_cstack
    rx1760_start = self."!cursor_start_all"()
    set rx1760_cur, rx1760_start[0]
    set rx1760_tgt, rx1760_start[1]
    set rx1760_pos, rx1760_start[2]
    set rx1760_curclass, rx1760_start[3]
    set rx1760_bstack, rx1760_start[4]
    set $I19, rx1760_start[5]
    store_lex unicode:"$\x{a2}", rx1760_cur
    length rx1760_eos, rx1760_tgt
    eq $I19, 1, rx1760_restart3731
    gt rx1760_pos, rx1760_eos, rx1760_fail3732
    repr_get_attr_int $I11, self, rx1760_curclass, "$!from"
    ne $I11, -1, rxscan1761_done3738
    goto rxscan1761_scan3737
  rxscan1761_loop3736:
    inc rx1760_pos
    gt rx1760_pos, rx1760_eos, rx1760_fail3732
    repr_bind_attr_int rx1760_cur, rx1760_curclass, "$!from", rx1760_pos
  rxscan1761_scan3737:
    nqp_rxmark rx1760_bstack, rxscan1761_loop3736, rx1760_pos, 0
  rxscan1761_done3738:
    nqp_rxmark rx1760_bstack, rxcap1762_fail3740, rx1760_pos, 0
    add $I11, rx1760_pos, 2
    gt $I11, rx1760_eos, rx1760_fail3732
    substr $S10, rx1760_tgt, rx1760_pos, 2
    ne $S10, ucs4:"--", rx1760_fail3732
    add rx1760_pos, 2
    nqp_rxpeek $I19, rx1760_bstack, rxcap1762_fail3740
    inc $I19
    set $I11, rx1760_bstack[$I19]
    repr_bind_attr_int rx1760_cur, rx1760_curclass, "$!pos", rx1760_pos
    $P11 = rx1760_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1760_pos)
    rx1760_cstack = rx1760_cur."!cursor_capture"($P11, "sym")
    goto rxcap1762_done3739
  rxcap1762_fail3740:
    goto rx1760_fail3732
  rxcap1762_done3739:
    repr_bind_attr_int rx1760_cur, rx1760_curclass, "$!pos", rx1760_pos
    $P11 = rx1760_cur."O"("%autoincrement, :op<postdec>")
    repr_get_attr_int $I11, $P11, rx1760_curclass, "$!pos"
    lt $I11, 0, rx1760_fail3732
    nqp_rxmark rx1760_bstack, rxsubrule1763_pass3741, -1, 0
  rxsubrule1763_pass3741:
    rx1760_cstack = rx1760_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1760_pos, $P11, rx1760_curclass, "$!pos"
    rx1760_cur."!cursor_pass"(rx1760_pos, "postfix:sym<-->", 'backtrack'=>1)
    .return (rx1760_cur)
  rx1760_restart3731:
    repr_get_attr_obj rx1760_cstack, rx1760_cur, rx1760_curclass, "$!cstack"
  rx1760_fail3732:
    unless rx1760_bstack, rx1760_done3730
    pop $I19, rx1760_bstack
    if_null rx1760_cstack, rx1760_cstack_done3735
    unless rx1760_cstack, rx1760_cstack_done3735
    dec $I19
    set $P11, rx1760_cstack[$I19]
  rx1760_cstack_done3735:
    pop rx1760_rep, rx1760_bstack
    pop rx1760_pos, rx1760_bstack
    pop $I19, rx1760_bstack
    lt rx1760_pos, -1, rx1760_done3730
    lt rx1760_pos, 0, rx1760_fail3732
    eq $I19, 0, rx1760_fail3732
    nqp_islist $I20, rx1760_cstack
    unless $I20, rx1760_jump3733
    elements $I18, rx1760_bstack
    le $I18, 0, rx1760_cut3734
    dec $I18
    set $I18, rx1760_bstack[$I18]
  rx1760_cut3734:
    assign rx1760_cstack, $I18
  rx1760_jump3733:
    jump $I19
  rx1760_done3730:
    rx1760_cur."!cursor_fail"()
    .return (rx1760_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<**>" :subid("cuid_181_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1363
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1764_start
    .local string rx1764_tgt
    .local int rx1764_pos
    .local int rx1764_off
    .local int rx1764_eos
    .local int rx1764_rep
    .local pmc rx1764_cur
    .local pmc rx1764_curclass
    .local pmc rx1764_bstack
    .local pmc rx1764_cstack
    rx1764_start = self."!cursor_start_all"()
    set rx1764_cur, rx1764_start[0]
    set rx1764_tgt, rx1764_start[1]
    set rx1764_pos, rx1764_start[2]
    set rx1764_curclass, rx1764_start[3]
    set rx1764_bstack, rx1764_start[4]
    set $I19, rx1764_start[5]
    store_lex unicode:"$\x{a2}", rx1764_cur
    length rx1764_eos, rx1764_tgt
    eq $I19, 1, rx1764_restart3744
    gt rx1764_pos, rx1764_eos, rx1764_fail3745
    repr_get_attr_int $I11, self, rx1764_curclass, "$!from"
    ne $I11, -1, rxscan1765_done3751
    goto rxscan1765_scan3750
  rxscan1765_loop3749:
    inc rx1764_pos
    gt rx1764_pos, rx1764_eos, rx1764_fail3745
    repr_bind_attr_int rx1764_cur, rx1764_curclass, "$!from", rx1764_pos
  rxscan1765_scan3750:
    nqp_rxmark rx1764_bstack, rxscan1765_loop3749, rx1764_pos, 0
  rxscan1765_done3751:
    nqp_rxmark rx1764_bstack, rxcap1766_fail3753, rx1764_pos, 0
    add $I11, rx1764_pos, 2
    gt $I11, rx1764_eos, rx1764_fail3745
    substr $S10, rx1764_tgt, rx1764_pos, 2
    ne $S10, ucs4:"**", rx1764_fail3745
    add rx1764_pos, 2
    nqp_rxpeek $I19, rx1764_bstack, rxcap1766_fail3753
    inc $I19
    set $I11, rx1764_bstack[$I19]
    repr_bind_attr_int rx1764_cur, rx1764_curclass, "$!pos", rx1764_pos
    $P11 = rx1764_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1764_pos)
    rx1764_cstack = rx1764_cur."!cursor_capture"($P11, "sym")
    goto rxcap1766_done3752
  rxcap1766_fail3753:
    goto rx1764_fail3745
  rxcap1766_done3752:
    repr_bind_attr_int rx1764_cur, rx1764_curclass, "$!pos", rx1764_pos
    $P11 = rx1764_cur."O"("%exponentiation, :op<pow_n>")
    repr_get_attr_int $I11, $P11, rx1764_curclass, "$!pos"
    lt $I11, 0, rx1764_fail3745
    nqp_rxmark rx1764_bstack, rxsubrule1767_pass3754, -1, 0
  rxsubrule1767_pass3754:
    rx1764_cstack = rx1764_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1764_pos, $P11, rx1764_curclass, "$!pos"
    rx1764_cur."!cursor_pass"(rx1764_pos, "infix:sym<**>", 'backtrack'=>1)
    .return (rx1764_cur)
  rx1764_restart3744:
    repr_get_attr_obj rx1764_cstack, rx1764_cur, rx1764_curclass, "$!cstack"
  rx1764_fail3745:
    unless rx1764_bstack, rx1764_done3743
    pop $I19, rx1764_bstack
    if_null rx1764_cstack, rx1764_cstack_done3748
    unless rx1764_cstack, rx1764_cstack_done3748
    dec $I19
    set $P11, rx1764_cstack[$I19]
  rx1764_cstack_done3748:
    pop rx1764_rep, rx1764_bstack
    pop rx1764_pos, rx1764_bstack
    pop $I19, rx1764_bstack
    lt rx1764_pos, -1, rx1764_done3743
    lt rx1764_pos, 0, rx1764_fail3745
    eq $I19, 0, rx1764_fail3745
    nqp_islist $I20, rx1764_cstack
    unless $I20, rx1764_jump3746
    elements $I18, rx1764_bstack
    le $I18, 0, rx1764_cut3747
    dec $I18
    set $I18, rx1764_bstack[$I18]
  rx1764_cut3747:
    assign rx1764_cstack, $I18
  rx1764_jump3746:
    jump $I19
  rx1764_done3743:
    rx1764_cur."!cursor_fail"()
    .return (rx1764_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<+>" :subid("cuid_182_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1365
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1768_start
    .local string rx1768_tgt
    .local int rx1768_pos
    .local int rx1768_off
    .local int rx1768_eos
    .local int rx1768_rep
    .local pmc rx1768_cur
    .local pmc rx1768_curclass
    .local pmc rx1768_bstack
    .local pmc rx1768_cstack
    rx1768_start = self."!cursor_start_all"()
    set rx1768_cur, rx1768_start[0]
    set rx1768_tgt, rx1768_start[1]
    set rx1768_pos, rx1768_start[2]
    set rx1768_curclass, rx1768_start[3]
    set rx1768_bstack, rx1768_start[4]
    set $I19, rx1768_start[5]
    store_lex unicode:"$\x{a2}", rx1768_cur
    length rx1768_eos, rx1768_tgt
    eq $I19, 1, rx1768_restart3757
    gt rx1768_pos, rx1768_eos, rx1768_fail3758
    repr_get_attr_int $I11, self, rx1768_curclass, "$!from"
    ne $I11, -1, rxscan1769_done3764
    goto rxscan1769_scan3763
  rxscan1769_loop3762:
    inc rx1768_pos
    gt rx1768_pos, rx1768_eos, rx1768_fail3758
    repr_bind_attr_int rx1768_cur, rx1768_curclass, "$!from", rx1768_pos
  rxscan1769_scan3763:
    nqp_rxmark rx1768_bstack, rxscan1769_loop3762, rx1768_pos, 0
  rxscan1769_done3764:
    nqp_rxmark rx1768_bstack, rxcap1770_fail3766, rx1768_pos, 0
    add $I11, rx1768_pos, 1
    gt $I11, rx1768_eos, rx1768_fail3758
    substr $S10, rx1768_tgt, rx1768_pos, 1
    ne $S10, ucs4:"+", rx1768_fail3758
    add rx1768_pos, 1
    nqp_rxpeek $I19, rx1768_bstack, rxcap1770_fail3766
    inc $I19
    set $I11, rx1768_bstack[$I19]
    repr_bind_attr_int rx1768_cur, rx1768_curclass, "$!pos", rx1768_pos
    $P11 = rx1768_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1768_pos)
    rx1768_cstack = rx1768_cur."!cursor_capture"($P11, "sym")
    goto rxcap1770_done3765
  rxcap1770_fail3766:
    goto rx1768_fail3758
  rxcap1770_done3765:
    repr_bind_attr_int rx1768_cur, rx1768_curclass, "$!pos", rx1768_pos
    $P11 = rx1768_cur."O"("%symbolic_unary, :op<numify>")
    repr_get_attr_int $I11, $P11, rx1768_curclass, "$!pos"
    lt $I11, 0, rx1768_fail3758
    nqp_rxmark rx1768_bstack, rxsubrule1771_pass3767, -1, 0
  rxsubrule1771_pass3767:
    rx1768_cstack = rx1768_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1768_pos, $P11, rx1768_curclass, "$!pos"
    rx1768_cur."!cursor_pass"(rx1768_pos, "prefix:sym<+>", 'backtrack'=>1)
    .return (rx1768_cur)
  rx1768_restart3757:
    repr_get_attr_obj rx1768_cstack, rx1768_cur, rx1768_curclass, "$!cstack"
  rx1768_fail3758:
    unless rx1768_bstack, rx1768_done3756
    pop $I19, rx1768_bstack
    if_null rx1768_cstack, rx1768_cstack_done3761
    unless rx1768_cstack, rx1768_cstack_done3761
    dec $I19
    set $P11, rx1768_cstack[$I19]
  rx1768_cstack_done3761:
    pop rx1768_rep, rx1768_bstack
    pop rx1768_pos, rx1768_bstack
    pop $I19, rx1768_bstack
    lt rx1768_pos, -1, rx1768_done3756
    lt rx1768_pos, 0, rx1768_fail3758
    eq $I19, 0, rx1768_fail3758
    nqp_islist $I20, rx1768_cstack
    unless $I20, rx1768_jump3759
    elements $I18, rx1768_bstack
    le $I18, 0, rx1768_cut3760
    dec $I18
    set $I18, rx1768_bstack[$I18]
  rx1768_cut3760:
    assign rx1768_cstack, $I18
  rx1768_jump3759:
    jump $I19
  rx1768_done3756:
    rx1768_cur."!cursor_fail"()
    .return (rx1768_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<~>" :subid("cuid_183_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1772_start
    .local string rx1772_tgt
    .local int rx1772_pos
    .local int rx1772_off
    .local int rx1772_eos
    .local int rx1772_rep
    .local pmc rx1772_cur
    .local pmc rx1772_curclass
    .local pmc rx1772_bstack
    .local pmc rx1772_cstack
    rx1772_start = self."!cursor_start_all"()
    set rx1772_cur, rx1772_start[0]
    set rx1772_tgt, rx1772_start[1]
    set rx1772_pos, rx1772_start[2]
    set rx1772_curclass, rx1772_start[3]
    set rx1772_bstack, rx1772_start[4]
    set $I19, rx1772_start[5]
    store_lex unicode:"$\x{a2}", rx1772_cur
    length rx1772_eos, rx1772_tgt
    eq $I19, 1, rx1772_restart3770
    gt rx1772_pos, rx1772_eos, rx1772_fail3771
    repr_get_attr_int $I11, self, rx1772_curclass, "$!from"
    ne $I11, -1, rxscan1773_done3777
    goto rxscan1773_scan3776
  rxscan1773_loop3775:
    inc rx1772_pos
    gt rx1772_pos, rx1772_eos, rx1772_fail3771
    repr_bind_attr_int rx1772_cur, rx1772_curclass, "$!from", rx1772_pos
  rxscan1773_scan3776:
    nqp_rxmark rx1772_bstack, rxscan1773_loop3775, rx1772_pos, 0
  rxscan1773_done3777:
    nqp_rxmark rx1772_bstack, rxcap1774_fail3779, rx1772_pos, 0
    add $I11, rx1772_pos, 1
    gt $I11, rx1772_eos, rx1772_fail3771
    substr $S10, rx1772_tgt, rx1772_pos, 1
    ne $S10, ucs4:"~", rx1772_fail3771
    add rx1772_pos, 1
    nqp_rxpeek $I19, rx1772_bstack, rxcap1774_fail3779
    inc $I19
    set $I11, rx1772_bstack[$I19]
    repr_bind_attr_int rx1772_cur, rx1772_curclass, "$!pos", rx1772_pos
    $P11 = rx1772_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1772_pos)
    rx1772_cstack = rx1772_cur."!cursor_capture"($P11, "sym")
    goto rxcap1774_done3778
  rxcap1774_fail3779:
    goto rx1772_fail3771
  rxcap1774_done3778:
    repr_bind_attr_int rx1772_cur, rx1772_curclass, "$!pos", rx1772_pos
    $P11 = rx1772_cur."O"("%symbolic_unary, :op<stringify>")
    repr_get_attr_int $I11, $P11, rx1772_curclass, "$!pos"
    lt $I11, 0, rx1772_fail3771
    nqp_rxmark rx1772_bstack, rxsubrule1775_pass3780, -1, 0
  rxsubrule1775_pass3780:
    rx1772_cstack = rx1772_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1772_pos, $P11, rx1772_curclass, "$!pos"
    rx1772_cur."!cursor_pass"(rx1772_pos, "prefix:sym<~>", 'backtrack'=>1)
    .return (rx1772_cur)
  rx1772_restart3770:
    repr_get_attr_obj rx1772_cstack, rx1772_cur, rx1772_curclass, "$!cstack"
  rx1772_fail3771:
    unless rx1772_bstack, rx1772_done3769
    pop $I19, rx1772_bstack
    if_null rx1772_cstack, rx1772_cstack_done3774
    unless rx1772_cstack, rx1772_cstack_done3774
    dec $I19
    set $P11, rx1772_cstack[$I19]
  rx1772_cstack_done3774:
    pop rx1772_rep, rx1772_bstack
    pop rx1772_pos, rx1772_bstack
    pop $I19, rx1772_bstack
    lt rx1772_pos, -1, rx1772_done3769
    lt rx1772_pos, 0, rx1772_fail3771
    eq $I19, 0, rx1772_fail3771
    nqp_islist $I20, rx1772_cstack
    unless $I20, rx1772_jump3772
    elements $I18, rx1772_bstack
    le $I18, 0, rx1772_cut3773
    dec $I18
    set $I18, rx1772_bstack[$I18]
  rx1772_cut3773:
    assign rx1772_cstack, $I18
  rx1772_jump3772:
    jump $I19
  rx1772_done3769:
    rx1772_cur."!cursor_fail"()
    .return (rx1772_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<->" :subid("cuid_184_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1367
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1776_start
    .local string rx1776_tgt
    .local int rx1776_pos
    .local int rx1776_off
    .local int rx1776_eos
    .local int rx1776_rep
    .local pmc rx1776_cur
    .local pmc rx1776_curclass
    .local pmc rx1776_bstack
    .local pmc rx1776_cstack
    rx1776_start = self."!cursor_start_all"()
    set rx1776_cur, rx1776_start[0]
    set rx1776_tgt, rx1776_start[1]
    set rx1776_pos, rx1776_start[2]
    set rx1776_curclass, rx1776_start[3]
    set rx1776_bstack, rx1776_start[4]
    set $I19, rx1776_start[5]
    store_lex unicode:"$\x{a2}", rx1776_cur
    length rx1776_eos, rx1776_tgt
    eq $I19, 1, rx1776_restart3783
    gt rx1776_pos, rx1776_eos, rx1776_fail3784
    repr_get_attr_int $I11, self, rx1776_curclass, "$!from"
    ne $I11, -1, rxscan1777_done3790
    goto rxscan1777_scan3789
  rxscan1777_loop3788:
    inc rx1776_pos
    gt rx1776_pos, rx1776_eos, rx1776_fail3784
    repr_bind_attr_int rx1776_cur, rx1776_curclass, "$!from", rx1776_pos
  rxscan1777_scan3789:
    nqp_rxmark rx1776_bstack, rxscan1777_loop3788, rx1776_pos, 0
  rxscan1777_done3790:
    nqp_rxmark rx1776_bstack, rxcap1778_fail3792, rx1776_pos, 0
    add $I11, rx1776_pos, 1
    gt $I11, rx1776_eos, rx1776_fail3784
    substr $S10, rx1776_tgt, rx1776_pos, 1
    ne $S10, ucs4:"-", rx1776_fail3784
    add rx1776_pos, 1
    nqp_rxpeek $I19, rx1776_bstack, rxcap1778_fail3792
    inc $I19
    set $I11, rx1776_bstack[$I19]
    repr_bind_attr_int rx1776_cur, rx1776_curclass, "$!pos", rx1776_pos
    $P11 = rx1776_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1776_pos)
    rx1776_cstack = rx1776_cur."!cursor_capture"($P11, "sym")
    goto rxcap1778_done3791
  rxcap1778_fail3792:
    goto rx1776_fail3784
  rxcap1778_done3791:
    ge rx1776_pos, rx1776_eos, rx1776_fail3784
    substr $S11, rx1776_tgt, rx1776_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx1776_fail3784
    repr_bind_attr_int rx1776_cur, rx1776_curclass, "$!pos", rx1776_pos
    $P11 = rx1776_cur."number"()
    repr_get_attr_int $I11, $P11, rx1776_curclass, "$!pos"
    ge $I11, 0, rx1776_fail3784
    repr_bind_attr_int rx1776_cur, rx1776_curclass, "$!pos", rx1776_pos
    $P11 = rx1776_cur."O"("%symbolic_unary, :op<neg_n>")
    repr_get_attr_int $I11, $P11, rx1776_curclass, "$!pos"
    lt $I11, 0, rx1776_fail3784
    nqp_rxmark rx1776_bstack, rxsubrule1779_pass3793, -1, 0
  rxsubrule1779_pass3793:
    rx1776_cstack = rx1776_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1776_pos, $P11, rx1776_curclass, "$!pos"
    rx1776_cur."!cursor_pass"(rx1776_pos, "prefix:sym<->", 'backtrack'=>1)
    .return (rx1776_cur)
  rx1776_restart3783:
    repr_get_attr_obj rx1776_cstack, rx1776_cur, rx1776_curclass, "$!cstack"
  rx1776_fail3784:
    unless rx1776_bstack, rx1776_done3782
    pop $I19, rx1776_bstack
    if_null rx1776_cstack, rx1776_cstack_done3787
    unless rx1776_cstack, rx1776_cstack_done3787
    dec $I19
    set $P11, rx1776_cstack[$I19]
  rx1776_cstack_done3787:
    pop rx1776_rep, rx1776_bstack
    pop rx1776_pos, rx1776_bstack
    pop $I19, rx1776_bstack
    lt rx1776_pos, -1, rx1776_done3782
    lt rx1776_pos, 0, rx1776_fail3784
    eq $I19, 0, rx1776_fail3784
    nqp_islist $I20, rx1776_cstack
    unless $I20, rx1776_jump3785
    elements $I18, rx1776_bstack
    le $I18, 0, rx1776_cut3786
    dec $I18
    set $I18, rx1776_bstack[$I18]
  rx1776_cut3786:
    assign rx1776_cstack, $I18
  rx1776_jump3785:
    jump $I19
  rx1776_done3782:
    rx1776_cur."!cursor_fail"()
    .return (rx1776_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<?>" :subid("cuid_185_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1368
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1780_start
    .local string rx1780_tgt
    .local int rx1780_pos
    .local int rx1780_off
    .local int rx1780_eos
    .local int rx1780_rep
    .local pmc rx1780_cur
    .local pmc rx1780_curclass
    .local pmc rx1780_bstack
    .local pmc rx1780_cstack
    rx1780_start = self."!cursor_start_all"()
    set rx1780_cur, rx1780_start[0]
    set rx1780_tgt, rx1780_start[1]
    set rx1780_pos, rx1780_start[2]
    set rx1780_curclass, rx1780_start[3]
    set rx1780_bstack, rx1780_start[4]
    set $I19, rx1780_start[5]
    store_lex unicode:"$\x{a2}", rx1780_cur
    length rx1780_eos, rx1780_tgt
    eq $I19, 1, rx1780_restart3796
    gt rx1780_pos, rx1780_eos, rx1780_fail3797
    repr_get_attr_int $I11, self, rx1780_curclass, "$!from"
    ne $I11, -1, rxscan1781_done3803
    goto rxscan1781_scan3802
  rxscan1781_loop3801:
    inc rx1780_pos
    gt rx1780_pos, rx1780_eos, rx1780_fail3797
    repr_bind_attr_int rx1780_cur, rx1780_curclass, "$!from", rx1780_pos
  rxscan1781_scan3802:
    nqp_rxmark rx1780_bstack, rxscan1781_loop3801, rx1780_pos, 0
  rxscan1781_done3803:
    nqp_rxmark rx1780_bstack, rxcap1782_fail3805, rx1780_pos, 0
    add $I11, rx1780_pos, 1
    gt $I11, rx1780_eos, rx1780_fail3797
    substr $S10, rx1780_tgt, rx1780_pos, 1
    ne $S10, ucs4:"?", rx1780_fail3797
    add rx1780_pos, 1
    nqp_rxpeek $I19, rx1780_bstack, rxcap1782_fail3805
    inc $I19
    set $I11, rx1780_bstack[$I19]
    repr_bind_attr_int rx1780_cur, rx1780_curclass, "$!pos", rx1780_pos
    $P11 = rx1780_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1780_pos)
    rx1780_cstack = rx1780_cur."!cursor_capture"($P11, "sym")
    goto rxcap1782_done3804
  rxcap1782_fail3805:
    goto rx1780_fail3797
  rxcap1782_done3804:
    repr_bind_attr_int rx1780_cur, rx1780_curclass, "$!pos", rx1780_pos
    $P11 = rx1780_cur."O"("%symbolic_unary, :op<istrue>")
    repr_get_attr_int $I11, $P11, rx1780_curclass, "$!pos"
    lt $I11, 0, rx1780_fail3797
    nqp_rxmark rx1780_bstack, rxsubrule1783_pass3806, -1, 0
  rxsubrule1783_pass3806:
    rx1780_cstack = rx1780_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1780_pos, $P11, rx1780_curclass, "$!pos"
    rx1780_cur."!cursor_pass"(rx1780_pos, "prefix:sym<?>", 'backtrack'=>1)
    .return (rx1780_cur)
  rx1780_restart3796:
    repr_get_attr_obj rx1780_cstack, rx1780_cur, rx1780_curclass, "$!cstack"
  rx1780_fail3797:
    unless rx1780_bstack, rx1780_done3795
    pop $I19, rx1780_bstack
    if_null rx1780_cstack, rx1780_cstack_done3800
    unless rx1780_cstack, rx1780_cstack_done3800
    dec $I19
    set $P11, rx1780_cstack[$I19]
  rx1780_cstack_done3800:
    pop rx1780_rep, rx1780_bstack
    pop rx1780_pos, rx1780_bstack
    pop $I19, rx1780_bstack
    lt rx1780_pos, -1, rx1780_done3795
    lt rx1780_pos, 0, rx1780_fail3797
    eq $I19, 0, rx1780_fail3797
    nqp_islist $I20, rx1780_cstack
    unless $I20, rx1780_jump3798
    elements $I18, rx1780_bstack
    le $I18, 0, rx1780_cut3799
    dec $I18
    set $I18, rx1780_bstack[$I18]
  rx1780_cut3799:
    assign rx1780_cstack, $I18
  rx1780_jump3798:
    jump $I19
  rx1780_done3795:
    rx1780_cur."!cursor_fail"()
    .return (rx1780_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<!>" :subid("cuid_186_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1369
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1784_start
    .local string rx1784_tgt
    .local int rx1784_pos
    .local int rx1784_off
    .local int rx1784_eos
    .local int rx1784_rep
    .local pmc rx1784_cur
    .local pmc rx1784_curclass
    .local pmc rx1784_bstack
    .local pmc rx1784_cstack
    rx1784_start = self."!cursor_start_all"()
    set rx1784_cur, rx1784_start[0]
    set rx1784_tgt, rx1784_start[1]
    set rx1784_pos, rx1784_start[2]
    set rx1784_curclass, rx1784_start[3]
    set rx1784_bstack, rx1784_start[4]
    set $I19, rx1784_start[5]
    store_lex unicode:"$\x{a2}", rx1784_cur
    length rx1784_eos, rx1784_tgt
    eq $I19, 1, rx1784_restart3809
    gt rx1784_pos, rx1784_eos, rx1784_fail3810
    repr_get_attr_int $I11, self, rx1784_curclass, "$!from"
    ne $I11, -1, rxscan1785_done3816
    goto rxscan1785_scan3815
  rxscan1785_loop3814:
    inc rx1784_pos
    gt rx1784_pos, rx1784_eos, rx1784_fail3810
    repr_bind_attr_int rx1784_cur, rx1784_curclass, "$!from", rx1784_pos
  rxscan1785_scan3815:
    nqp_rxmark rx1784_bstack, rxscan1785_loop3814, rx1784_pos, 0
  rxscan1785_done3816:
    nqp_rxmark rx1784_bstack, rxcap1786_fail3818, rx1784_pos, 0
    add $I11, rx1784_pos, 1
    gt $I11, rx1784_eos, rx1784_fail3810
    substr $S10, rx1784_tgt, rx1784_pos, 1
    ne $S10, ucs4:"!", rx1784_fail3810
    add rx1784_pos, 1
    nqp_rxpeek $I19, rx1784_bstack, rxcap1786_fail3818
    inc $I19
    set $I11, rx1784_bstack[$I19]
    repr_bind_attr_int rx1784_cur, rx1784_curclass, "$!pos", rx1784_pos
    $P11 = rx1784_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1784_pos)
    rx1784_cstack = rx1784_cur."!cursor_capture"($P11, "sym")
    goto rxcap1786_done3817
  rxcap1786_fail3818:
    goto rx1784_fail3810
  rxcap1786_done3817:
    repr_bind_attr_int rx1784_cur, rx1784_curclass, "$!pos", rx1784_pos
    $P11 = rx1784_cur."O"("%symbolic_unary, :op<falsey>")
    repr_get_attr_int $I11, $P11, rx1784_curclass, "$!pos"
    lt $I11, 0, rx1784_fail3810
    nqp_rxmark rx1784_bstack, rxsubrule1787_pass3819, -1, 0
  rxsubrule1787_pass3819:
    rx1784_cstack = rx1784_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1784_pos, $P11, rx1784_curclass, "$!pos"
    rx1784_cur."!cursor_pass"(rx1784_pos, "prefix:sym<!>", 'backtrack'=>1)
    .return (rx1784_cur)
  rx1784_restart3809:
    repr_get_attr_obj rx1784_cstack, rx1784_cur, rx1784_curclass, "$!cstack"
  rx1784_fail3810:
    unless rx1784_bstack, rx1784_done3808
    pop $I19, rx1784_bstack
    if_null rx1784_cstack, rx1784_cstack_done3813
    unless rx1784_cstack, rx1784_cstack_done3813
    dec $I19
    set $P11, rx1784_cstack[$I19]
  rx1784_cstack_done3813:
    pop rx1784_rep, rx1784_bstack
    pop rx1784_pos, rx1784_bstack
    pop $I19, rx1784_bstack
    lt rx1784_pos, -1, rx1784_done3808
    lt rx1784_pos, 0, rx1784_fail3810
    eq $I19, 0, rx1784_fail3810
    nqp_islist $I20, rx1784_cstack
    unless $I20, rx1784_jump3811
    elements $I18, rx1784_bstack
    le $I18, 0, rx1784_cut3812
    dec $I18
    set $I18, rx1784_bstack[$I18]
  rx1784_cut3812:
    assign rx1784_cstack, $I18
  rx1784_jump3811:
    jump $I19
  rx1784_done3808:
    rx1784_cur."!cursor_fail"()
    .return (rx1784_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<|>" :subid("cuid_187_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1370
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1788_start
    .local string rx1788_tgt
    .local int rx1788_pos
    .local int rx1788_off
    .local int rx1788_eos
    .local int rx1788_rep
    .local pmc rx1788_cur
    .local pmc rx1788_curclass
    .local pmc rx1788_bstack
    .local pmc rx1788_cstack
    rx1788_start = self."!cursor_start_all"()
    set rx1788_cur, rx1788_start[0]
    set rx1788_tgt, rx1788_start[1]
    set rx1788_pos, rx1788_start[2]
    set rx1788_curclass, rx1788_start[3]
    set rx1788_bstack, rx1788_start[4]
    set $I19, rx1788_start[5]
    store_lex unicode:"$\x{a2}", rx1788_cur
    length rx1788_eos, rx1788_tgt
    eq $I19, 1, rx1788_restart3822
    gt rx1788_pos, rx1788_eos, rx1788_fail3823
    repr_get_attr_int $I11, self, rx1788_curclass, "$!from"
    ne $I11, -1, rxscan1789_done3829
    goto rxscan1789_scan3828
  rxscan1789_loop3827:
    inc rx1788_pos
    gt rx1788_pos, rx1788_eos, rx1788_fail3823
    repr_bind_attr_int rx1788_cur, rx1788_curclass, "$!from", rx1788_pos
  rxscan1789_scan3828:
    nqp_rxmark rx1788_bstack, rxscan1789_loop3827, rx1788_pos, 0
  rxscan1789_done3829:
    nqp_rxmark rx1788_bstack, rxcap1790_fail3831, rx1788_pos, 0
    add $I11, rx1788_pos, 1
    gt $I11, rx1788_eos, rx1788_fail3823
    substr $S10, rx1788_tgt, rx1788_pos, 1
    ne $S10, ucs4:"|", rx1788_fail3823
    add rx1788_pos, 1
    nqp_rxpeek $I19, rx1788_bstack, rxcap1790_fail3831
    inc $I19
    set $I11, rx1788_bstack[$I19]
    repr_bind_attr_int rx1788_cur, rx1788_curclass, "$!pos", rx1788_pos
    $P11 = rx1788_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1788_pos)
    rx1788_cstack = rx1788_cur."!cursor_capture"($P11, "sym")
    goto rxcap1790_done3830
  rxcap1790_fail3831:
    goto rx1788_fail3823
  rxcap1790_done3830:
    repr_bind_attr_int rx1788_cur, rx1788_curclass, "$!pos", rx1788_pos
    $P11 = rx1788_cur."O"("%symbolic_unary")
    repr_get_attr_int $I11, $P11, rx1788_curclass, "$!pos"
    lt $I11, 0, rx1788_fail3823
    nqp_rxmark rx1788_bstack, rxsubrule1791_pass3832, -1, 0
  rxsubrule1791_pass3832:
    rx1788_cstack = rx1788_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1788_pos, $P11, rx1788_curclass, "$!pos"
    rx1788_cur."!cursor_pass"(rx1788_pos, "prefix:sym<|>", 'backtrack'=>1)
    .return (rx1788_cur)
  rx1788_restart3822:
    repr_get_attr_obj rx1788_cstack, rx1788_cur, rx1788_curclass, "$!cstack"
  rx1788_fail3823:
    unless rx1788_bstack, rx1788_done3821
    pop $I19, rx1788_bstack
    if_null rx1788_cstack, rx1788_cstack_done3826
    unless rx1788_cstack, rx1788_cstack_done3826
    dec $I19
    set $P11, rx1788_cstack[$I19]
  rx1788_cstack_done3826:
    pop rx1788_rep, rx1788_bstack
    pop rx1788_pos, rx1788_bstack
    pop $I19, rx1788_bstack
    lt rx1788_pos, -1, rx1788_done3821
    lt rx1788_pos, 0, rx1788_fail3823
    eq $I19, 0, rx1788_fail3823
    nqp_islist $I20, rx1788_cstack
    unless $I20, rx1788_jump3824
    elements $I18, rx1788_bstack
    le $I18, 0, rx1788_cut3825
    dec $I18
    set $I18, rx1788_bstack[$I18]
  rx1788_cut3825:
    assign rx1788_cstack, $I18
  rx1788_jump3824:
    jump $I19
  rx1788_done3821:
    rx1788_cur."!cursor_fail"()
    .return (rx1788_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<*>" :subid("cuid_188_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1372
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1792_start
    .local string rx1792_tgt
    .local int rx1792_pos
    .local int rx1792_off
    .local int rx1792_eos
    .local int rx1792_rep
    .local pmc rx1792_cur
    .local pmc rx1792_curclass
    .local pmc rx1792_bstack
    .local pmc rx1792_cstack
    rx1792_start = self."!cursor_start_all"()
    set rx1792_cur, rx1792_start[0]
    set rx1792_tgt, rx1792_start[1]
    set rx1792_pos, rx1792_start[2]
    set rx1792_curclass, rx1792_start[3]
    set rx1792_bstack, rx1792_start[4]
    set $I19, rx1792_start[5]
    store_lex unicode:"$\x{a2}", rx1792_cur
    length rx1792_eos, rx1792_tgt
    eq $I19, 1, rx1792_restart3835
    gt rx1792_pos, rx1792_eos, rx1792_fail3836
    repr_get_attr_int $I11, self, rx1792_curclass, "$!from"
    ne $I11, -1, rxscan1793_done3842
    goto rxscan1793_scan3841
  rxscan1793_loop3840:
    inc rx1792_pos
    gt rx1792_pos, rx1792_eos, rx1792_fail3836
    repr_bind_attr_int rx1792_cur, rx1792_curclass, "$!from", rx1792_pos
  rxscan1793_scan3841:
    nqp_rxmark rx1792_bstack, rxscan1793_loop3840, rx1792_pos, 0
  rxscan1793_done3842:
    nqp_rxmark rx1792_bstack, rxcap1794_fail3844, rx1792_pos, 0
    add $I11, rx1792_pos, 1
    gt $I11, rx1792_eos, rx1792_fail3836
    substr $S10, rx1792_tgt, rx1792_pos, 1
    ne $S10, ucs4:"*", rx1792_fail3836
    add rx1792_pos, 1
    nqp_rxpeek $I19, rx1792_bstack, rxcap1794_fail3844
    inc $I19
    set $I11, rx1792_bstack[$I19]
    repr_bind_attr_int rx1792_cur, rx1792_curclass, "$!pos", rx1792_pos
    $P11 = rx1792_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1792_pos)
    rx1792_cstack = rx1792_cur."!cursor_capture"($P11, "sym")
    goto rxcap1794_done3843
  rxcap1794_fail3844:
    goto rx1792_fail3836
  rxcap1794_done3843:
    repr_bind_attr_int rx1792_cur, rx1792_curclass, "$!pos", rx1792_pos
    $P11 = rx1792_cur."O"("%multiplicative, :op<mul_n>")
    repr_get_attr_int $I11, $P11, rx1792_curclass, "$!pos"
    lt $I11, 0, rx1792_fail3836
    nqp_rxmark rx1792_bstack, rxsubrule1795_pass3845, -1, 0
  rxsubrule1795_pass3845:
    rx1792_cstack = rx1792_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1792_pos, $P11, rx1792_curclass, "$!pos"
    rx1792_cur."!cursor_pass"(rx1792_pos, "infix:sym<*>", 'backtrack'=>1)
    .return (rx1792_cur)
  rx1792_restart3835:
    repr_get_attr_obj rx1792_cstack, rx1792_cur, rx1792_curclass, "$!cstack"
  rx1792_fail3836:
    unless rx1792_bstack, rx1792_done3834
    pop $I19, rx1792_bstack
    if_null rx1792_cstack, rx1792_cstack_done3839
    unless rx1792_cstack, rx1792_cstack_done3839
    dec $I19
    set $P11, rx1792_cstack[$I19]
  rx1792_cstack_done3839:
    pop rx1792_rep, rx1792_bstack
    pop rx1792_pos, rx1792_bstack
    pop $I19, rx1792_bstack
    lt rx1792_pos, -1, rx1792_done3834
    lt rx1792_pos, 0, rx1792_fail3836
    eq $I19, 0, rx1792_fail3836
    nqp_islist $I20, rx1792_cstack
    unless $I20, rx1792_jump3837
    elements $I18, rx1792_bstack
    le $I18, 0, rx1792_cut3838
    dec $I18
    set $I18, rx1792_bstack[$I18]
  rx1792_cut3838:
    assign rx1792_cstack, $I18
  rx1792_jump3837:
    jump $I19
  rx1792_done3834:
    rx1792_cur."!cursor_fail"()
    .return (rx1792_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym</>" :subid("cuid_189_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1373
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1796_start
    .local string rx1796_tgt
    .local int rx1796_pos
    .local int rx1796_off
    .local int rx1796_eos
    .local int rx1796_rep
    .local pmc rx1796_cur
    .local pmc rx1796_curclass
    .local pmc rx1796_bstack
    .local pmc rx1796_cstack
    rx1796_start = self."!cursor_start_all"()
    set rx1796_cur, rx1796_start[0]
    set rx1796_tgt, rx1796_start[1]
    set rx1796_pos, rx1796_start[2]
    set rx1796_curclass, rx1796_start[3]
    set rx1796_bstack, rx1796_start[4]
    set $I19, rx1796_start[5]
    store_lex unicode:"$\x{a2}", rx1796_cur
    length rx1796_eos, rx1796_tgt
    eq $I19, 1, rx1796_restart3848
    gt rx1796_pos, rx1796_eos, rx1796_fail3849
    repr_get_attr_int $I11, self, rx1796_curclass, "$!from"
    ne $I11, -1, rxscan1797_done3855
    goto rxscan1797_scan3854
  rxscan1797_loop3853:
    inc rx1796_pos
    gt rx1796_pos, rx1796_eos, rx1796_fail3849
    repr_bind_attr_int rx1796_cur, rx1796_curclass, "$!from", rx1796_pos
  rxscan1797_scan3854:
    nqp_rxmark rx1796_bstack, rxscan1797_loop3853, rx1796_pos, 0
  rxscan1797_done3855:
    nqp_rxmark rx1796_bstack, rxcap1798_fail3857, rx1796_pos, 0
    add $I11, rx1796_pos, 1
    gt $I11, rx1796_eos, rx1796_fail3849
    substr $S10, rx1796_tgt, rx1796_pos, 1
    ne $S10, ucs4:"/", rx1796_fail3849
    add rx1796_pos, 1
    nqp_rxpeek $I19, rx1796_bstack, rxcap1798_fail3857
    inc $I19
    set $I11, rx1796_bstack[$I19]
    repr_bind_attr_int rx1796_cur, rx1796_curclass, "$!pos", rx1796_pos
    $P11 = rx1796_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1796_pos)
    rx1796_cstack = rx1796_cur."!cursor_capture"($P11, "sym")
    goto rxcap1798_done3856
  rxcap1798_fail3857:
    goto rx1796_fail3849
  rxcap1798_done3856:
    repr_bind_attr_int rx1796_cur, rx1796_curclass, "$!pos", rx1796_pos
    $P11 = rx1796_cur."O"("%multiplicative, :op<div_n>")
    repr_get_attr_int $I11, $P11, rx1796_curclass, "$!pos"
    lt $I11, 0, rx1796_fail3849
    nqp_rxmark rx1796_bstack, rxsubrule1799_pass3858, -1, 0
  rxsubrule1799_pass3858:
    rx1796_cstack = rx1796_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1796_pos, $P11, rx1796_curclass, "$!pos"
    rx1796_cur."!cursor_pass"(rx1796_pos, "infix:sym</>", 'backtrack'=>1)
    .return (rx1796_cur)
  rx1796_restart3848:
    repr_get_attr_obj rx1796_cstack, rx1796_cur, rx1796_curclass, "$!cstack"
  rx1796_fail3849:
    unless rx1796_bstack, rx1796_done3847
    pop $I19, rx1796_bstack
    if_null rx1796_cstack, rx1796_cstack_done3852
    unless rx1796_cstack, rx1796_cstack_done3852
    dec $I19
    set $P11, rx1796_cstack[$I19]
  rx1796_cstack_done3852:
    pop rx1796_rep, rx1796_bstack
    pop rx1796_pos, rx1796_bstack
    pop $I19, rx1796_bstack
    lt rx1796_pos, -1, rx1796_done3847
    lt rx1796_pos, 0, rx1796_fail3849
    eq $I19, 0, rx1796_fail3849
    nqp_islist $I20, rx1796_cstack
    unless $I20, rx1796_jump3850
    elements $I18, rx1796_bstack
    le $I18, 0, rx1796_cut3851
    dec $I18
    set $I18, rx1796_bstack[$I18]
  rx1796_cut3851:
    assign rx1796_cstack, $I18
  rx1796_jump3850:
    jump $I19
  rx1796_done3847:
    rx1796_cur."!cursor_fail"()
    .return (rx1796_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<%>" :subid("cuid_190_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1374
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1800_start
    .local string rx1800_tgt
    .local int rx1800_pos
    .local int rx1800_off
    .local int rx1800_eos
    .local int rx1800_rep
    .local pmc rx1800_cur
    .local pmc rx1800_curclass
    .local pmc rx1800_bstack
    .local pmc rx1800_cstack
    rx1800_start = self."!cursor_start_all"()
    set rx1800_cur, rx1800_start[0]
    set rx1800_tgt, rx1800_start[1]
    set rx1800_pos, rx1800_start[2]
    set rx1800_curclass, rx1800_start[3]
    set rx1800_bstack, rx1800_start[4]
    set $I19, rx1800_start[5]
    store_lex unicode:"$\x{a2}", rx1800_cur
    length rx1800_eos, rx1800_tgt
    eq $I19, 1, rx1800_restart3861
    gt rx1800_pos, rx1800_eos, rx1800_fail3862
    repr_get_attr_int $I11, self, rx1800_curclass, "$!from"
    ne $I11, -1, rxscan1801_done3868
    goto rxscan1801_scan3867
  rxscan1801_loop3866:
    inc rx1800_pos
    gt rx1800_pos, rx1800_eos, rx1800_fail3862
    repr_bind_attr_int rx1800_cur, rx1800_curclass, "$!from", rx1800_pos
  rxscan1801_scan3867:
    nqp_rxmark rx1800_bstack, rxscan1801_loop3866, rx1800_pos, 0
  rxscan1801_done3868:
    nqp_rxmark rx1800_bstack, rxcap1802_fail3870, rx1800_pos, 0
    add $I11, rx1800_pos, 1
    gt $I11, rx1800_eos, rx1800_fail3862
    substr $S10, rx1800_tgt, rx1800_pos, 1
    ne $S10, ucs4:"%", rx1800_fail3862
    add rx1800_pos, 1
    nqp_rxpeek $I19, rx1800_bstack, rxcap1802_fail3870
    inc $I19
    set $I11, rx1800_bstack[$I19]
    repr_bind_attr_int rx1800_cur, rx1800_curclass, "$!pos", rx1800_pos
    $P11 = rx1800_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1800_pos)
    rx1800_cstack = rx1800_cur."!cursor_capture"($P11, "sym")
    goto rxcap1802_done3869
  rxcap1802_fail3870:
    goto rx1800_fail3862
  rxcap1802_done3869:
    repr_bind_attr_int rx1800_cur, rx1800_curclass, "$!pos", rx1800_pos
    $P11 = rx1800_cur."O"("%multiplicative, :op<mod_n>")
    repr_get_attr_int $I11, $P11, rx1800_curclass, "$!pos"
    lt $I11, 0, rx1800_fail3862
    nqp_rxmark rx1800_bstack, rxsubrule1803_pass3871, -1, 0
  rxsubrule1803_pass3871:
    rx1800_cstack = rx1800_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1800_pos, $P11, rx1800_curclass, "$!pos"
    rx1800_cur."!cursor_pass"(rx1800_pos, "infix:sym<%>", 'backtrack'=>1)
    .return (rx1800_cur)
  rx1800_restart3861:
    repr_get_attr_obj rx1800_cstack, rx1800_cur, rx1800_curclass, "$!cstack"
  rx1800_fail3862:
    unless rx1800_bstack, rx1800_done3860
    pop $I19, rx1800_bstack
    if_null rx1800_cstack, rx1800_cstack_done3865
    unless rx1800_cstack, rx1800_cstack_done3865
    dec $I19
    set $P11, rx1800_cstack[$I19]
  rx1800_cstack_done3865:
    pop rx1800_rep, rx1800_bstack
    pop rx1800_pos, rx1800_bstack
    pop $I19, rx1800_bstack
    lt rx1800_pos, -1, rx1800_done3860
    lt rx1800_pos, 0, rx1800_fail3862
    eq $I19, 0, rx1800_fail3862
    nqp_islist $I20, rx1800_cstack
    unless $I20, rx1800_jump3863
    elements $I18, rx1800_bstack
    le $I18, 0, rx1800_cut3864
    dec $I18
    set $I18, rx1800_bstack[$I18]
  rx1800_cut3864:
    assign rx1800_cstack, $I18
  rx1800_jump3863:
    jump $I19
  rx1800_done3860:
    rx1800_cur."!cursor_fail"()
    .return (rx1800_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+&>" :subid("cuid_191_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1804_start
    .local string rx1804_tgt
    .local int rx1804_pos
    .local int rx1804_off
    .local int rx1804_eos
    .local int rx1804_rep
    .local pmc rx1804_cur
    .local pmc rx1804_curclass
    .local pmc rx1804_bstack
    .local pmc rx1804_cstack
    rx1804_start = self."!cursor_start_all"()
    set rx1804_cur, rx1804_start[0]
    set rx1804_tgt, rx1804_start[1]
    set rx1804_pos, rx1804_start[2]
    set rx1804_curclass, rx1804_start[3]
    set rx1804_bstack, rx1804_start[4]
    set $I19, rx1804_start[5]
    store_lex unicode:"$\x{a2}", rx1804_cur
    length rx1804_eos, rx1804_tgt
    eq $I19, 1, rx1804_restart3874
    gt rx1804_pos, rx1804_eos, rx1804_fail3875
    repr_get_attr_int $I11, self, rx1804_curclass, "$!from"
    ne $I11, -1, rxscan1805_done3881
    goto rxscan1805_scan3880
  rxscan1805_loop3879:
    inc rx1804_pos
    gt rx1804_pos, rx1804_eos, rx1804_fail3875
    repr_bind_attr_int rx1804_cur, rx1804_curclass, "$!from", rx1804_pos
  rxscan1805_scan3880:
    nqp_rxmark rx1804_bstack, rxscan1805_loop3879, rx1804_pos, 0
  rxscan1805_done3881:
    nqp_rxmark rx1804_bstack, rxcap1806_fail3883, rx1804_pos, 0
    add $I11, rx1804_pos, 2
    gt $I11, rx1804_eos, rx1804_fail3875
    substr $S10, rx1804_tgt, rx1804_pos, 2
    ne $S10, ucs4:"+&", rx1804_fail3875
    add rx1804_pos, 2
    nqp_rxpeek $I19, rx1804_bstack, rxcap1806_fail3883
    inc $I19
    set $I11, rx1804_bstack[$I19]
    repr_bind_attr_int rx1804_cur, rx1804_curclass, "$!pos", rx1804_pos
    $P11 = rx1804_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1804_pos)
    rx1804_cstack = rx1804_cur."!cursor_capture"($P11, "sym")
    goto rxcap1806_done3882
  rxcap1806_fail3883:
    goto rx1804_fail3875
  rxcap1806_done3882:
    repr_bind_attr_int rx1804_cur, rx1804_curclass, "$!pos", rx1804_pos
    $P11 = rx1804_cur."O"("%multiplicative, :op<bitand_i>")
    repr_get_attr_int $I11, $P11, rx1804_curclass, "$!pos"
    lt $I11, 0, rx1804_fail3875
    nqp_rxmark rx1804_bstack, rxsubrule1807_pass3884, -1, 0
  rxsubrule1807_pass3884:
    rx1804_cstack = rx1804_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1804_pos, $P11, rx1804_curclass, "$!pos"
    rx1804_cur."!cursor_pass"(rx1804_pos, "infix:sym<+&>", 'backtrack'=>1)
    .return (rx1804_cur)
  rx1804_restart3874:
    repr_get_attr_obj rx1804_cstack, rx1804_cur, rx1804_curclass, "$!cstack"
  rx1804_fail3875:
    unless rx1804_bstack, rx1804_done3873
    pop $I19, rx1804_bstack
    if_null rx1804_cstack, rx1804_cstack_done3878
    unless rx1804_cstack, rx1804_cstack_done3878
    dec $I19
    set $P11, rx1804_cstack[$I19]
  rx1804_cstack_done3878:
    pop rx1804_rep, rx1804_bstack
    pop rx1804_pos, rx1804_bstack
    pop $I19, rx1804_bstack
    lt rx1804_pos, -1, rx1804_done3873
    lt rx1804_pos, 0, rx1804_fail3875
    eq $I19, 0, rx1804_fail3875
    nqp_islist $I20, rx1804_cstack
    unless $I20, rx1804_jump3876
    elements $I18, rx1804_bstack
    le $I18, 0, rx1804_cut3877
    dec $I18
    set $I18, rx1804_bstack[$I18]
  rx1804_cut3877:
    assign rx1804_cstack, $I18
  rx1804_jump3876:
    jump $I19
  rx1804_done3873:
    rx1804_cur."!cursor_fail"()
    .return (rx1804_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+>" :subid("cuid_192_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1377
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1808_start
    .local string rx1808_tgt
    .local int rx1808_pos
    .local int rx1808_off
    .local int rx1808_eos
    .local int rx1808_rep
    .local pmc rx1808_cur
    .local pmc rx1808_curclass
    .local pmc rx1808_bstack
    .local pmc rx1808_cstack
    rx1808_start = self."!cursor_start_all"()
    set rx1808_cur, rx1808_start[0]
    set rx1808_tgt, rx1808_start[1]
    set rx1808_pos, rx1808_start[2]
    set rx1808_curclass, rx1808_start[3]
    set rx1808_bstack, rx1808_start[4]
    set $I19, rx1808_start[5]
    store_lex unicode:"$\x{a2}", rx1808_cur
    length rx1808_eos, rx1808_tgt
    eq $I19, 1, rx1808_restart3887
    gt rx1808_pos, rx1808_eos, rx1808_fail3888
    repr_get_attr_int $I11, self, rx1808_curclass, "$!from"
    ne $I11, -1, rxscan1809_done3894
    goto rxscan1809_scan3893
  rxscan1809_loop3892:
    inc rx1808_pos
    gt rx1808_pos, rx1808_eos, rx1808_fail3888
    repr_bind_attr_int rx1808_cur, rx1808_curclass, "$!from", rx1808_pos
  rxscan1809_scan3893:
    nqp_rxmark rx1808_bstack, rxscan1809_loop3892, rx1808_pos, 0
  rxscan1809_done3894:
    nqp_rxmark rx1808_bstack, rxcap1810_fail3896, rx1808_pos, 0
    add $I11, rx1808_pos, 1
    gt $I11, rx1808_eos, rx1808_fail3888
    substr $S10, rx1808_tgt, rx1808_pos, 1
    ne $S10, ucs4:"+", rx1808_fail3888
    add rx1808_pos, 1
    nqp_rxpeek $I19, rx1808_bstack, rxcap1810_fail3896
    inc $I19
    set $I11, rx1808_bstack[$I19]
    repr_bind_attr_int rx1808_cur, rx1808_curclass, "$!pos", rx1808_pos
    $P11 = rx1808_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1808_pos)
    rx1808_cstack = rx1808_cur."!cursor_capture"($P11, "sym")
    goto rxcap1810_done3895
  rxcap1810_fail3896:
    goto rx1808_fail3888
  rxcap1810_done3895:
    repr_bind_attr_int rx1808_cur, rx1808_curclass, "$!pos", rx1808_pos
    $P11 = rx1808_cur."O"("%additive, :op<add_n>")
    repr_get_attr_int $I11, $P11, rx1808_curclass, "$!pos"
    lt $I11, 0, rx1808_fail3888
    nqp_rxmark rx1808_bstack, rxsubrule1811_pass3897, -1, 0
  rxsubrule1811_pass3897:
    rx1808_cstack = rx1808_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1808_pos, $P11, rx1808_curclass, "$!pos"
    rx1808_cur."!cursor_pass"(rx1808_pos, "infix:sym<+>", 'backtrack'=>1)
    .return (rx1808_cur)
  rx1808_restart3887:
    repr_get_attr_obj rx1808_cstack, rx1808_cur, rx1808_curclass, "$!cstack"
  rx1808_fail3888:
    unless rx1808_bstack, rx1808_done3886
    pop $I19, rx1808_bstack
    if_null rx1808_cstack, rx1808_cstack_done3891
    unless rx1808_cstack, rx1808_cstack_done3891
    dec $I19
    set $P11, rx1808_cstack[$I19]
  rx1808_cstack_done3891:
    pop rx1808_rep, rx1808_bstack
    pop rx1808_pos, rx1808_bstack
    pop $I19, rx1808_bstack
    lt rx1808_pos, -1, rx1808_done3886
    lt rx1808_pos, 0, rx1808_fail3888
    eq $I19, 0, rx1808_fail3888
    nqp_islist $I20, rx1808_cstack
    unless $I20, rx1808_jump3889
    elements $I18, rx1808_bstack
    le $I18, 0, rx1808_cut3890
    dec $I18
    set $I18, rx1808_bstack[$I18]
  rx1808_cut3890:
    assign rx1808_cstack, $I18
  rx1808_jump3889:
    jump $I19
  rx1808_done3886:
    rx1808_cur."!cursor_fail"()
    .return (rx1808_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<->" :subid("cuid_193_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1378
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1812_start
    .local string rx1812_tgt
    .local int rx1812_pos
    .local int rx1812_off
    .local int rx1812_eos
    .local int rx1812_rep
    .local pmc rx1812_cur
    .local pmc rx1812_curclass
    .local pmc rx1812_bstack
    .local pmc rx1812_cstack
    rx1812_start = self."!cursor_start_all"()
    set rx1812_cur, rx1812_start[0]
    set rx1812_tgt, rx1812_start[1]
    set rx1812_pos, rx1812_start[2]
    set rx1812_curclass, rx1812_start[3]
    set rx1812_bstack, rx1812_start[4]
    set $I19, rx1812_start[5]
    store_lex unicode:"$\x{a2}", rx1812_cur
    length rx1812_eos, rx1812_tgt
    eq $I19, 1, rx1812_restart3900
    gt rx1812_pos, rx1812_eos, rx1812_fail3901
    repr_get_attr_int $I11, self, rx1812_curclass, "$!from"
    ne $I11, -1, rxscan1813_done3907
    goto rxscan1813_scan3906
  rxscan1813_loop3905:
    inc rx1812_pos
    gt rx1812_pos, rx1812_eos, rx1812_fail3901
    repr_bind_attr_int rx1812_cur, rx1812_curclass, "$!from", rx1812_pos
  rxscan1813_scan3906:
    nqp_rxmark rx1812_bstack, rxscan1813_loop3905, rx1812_pos, 0
  rxscan1813_done3907:
    nqp_rxmark rx1812_bstack, rxcap1814_fail3909, rx1812_pos, 0
    add $I11, rx1812_pos, 1
    gt $I11, rx1812_eos, rx1812_fail3901
    substr $S10, rx1812_tgt, rx1812_pos, 1
    ne $S10, ucs4:"-", rx1812_fail3901
    add rx1812_pos, 1
    nqp_rxpeek $I19, rx1812_bstack, rxcap1814_fail3909
    inc $I19
    set $I11, rx1812_bstack[$I19]
    repr_bind_attr_int rx1812_cur, rx1812_curclass, "$!pos", rx1812_pos
    $P11 = rx1812_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1812_pos)
    rx1812_cstack = rx1812_cur."!cursor_capture"($P11, "sym")
    goto rxcap1814_done3908
  rxcap1814_fail3909:
    goto rx1812_fail3901
  rxcap1814_done3908:
    repr_bind_attr_int rx1812_cur, rx1812_curclass, "$!pos", rx1812_pos
    $P11 = rx1812_cur."O"("%additive, :op<sub_n>")
    repr_get_attr_int $I11, $P11, rx1812_curclass, "$!pos"
    lt $I11, 0, rx1812_fail3901
    nqp_rxmark rx1812_bstack, rxsubrule1815_pass3910, -1, 0
  rxsubrule1815_pass3910:
    rx1812_cstack = rx1812_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1812_pos, $P11, rx1812_curclass, "$!pos"
    rx1812_cur."!cursor_pass"(rx1812_pos, "infix:sym<->", 'backtrack'=>1)
    .return (rx1812_cur)
  rx1812_restart3900:
    repr_get_attr_obj rx1812_cstack, rx1812_cur, rx1812_curclass, "$!cstack"
  rx1812_fail3901:
    unless rx1812_bstack, rx1812_done3899
    pop $I19, rx1812_bstack
    if_null rx1812_cstack, rx1812_cstack_done3904
    unless rx1812_cstack, rx1812_cstack_done3904
    dec $I19
    set $P11, rx1812_cstack[$I19]
  rx1812_cstack_done3904:
    pop rx1812_rep, rx1812_bstack
    pop rx1812_pos, rx1812_bstack
    pop $I19, rx1812_bstack
    lt rx1812_pos, -1, rx1812_done3899
    lt rx1812_pos, 0, rx1812_fail3901
    eq $I19, 0, rx1812_fail3901
    nqp_islist $I20, rx1812_cstack
    unless $I20, rx1812_jump3902
    elements $I18, rx1812_bstack
    le $I18, 0, rx1812_cut3903
    dec $I18
    set $I18, rx1812_bstack[$I18]
  rx1812_cut3903:
    assign rx1812_cstack, $I18
  rx1812_jump3902:
    jump $I19
  rx1812_done3899:
    rx1812_cur."!cursor_fail"()
    .return (rx1812_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+|>" :subid("cuid_194_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1379
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1816_start
    .local string rx1816_tgt
    .local int rx1816_pos
    .local int rx1816_off
    .local int rx1816_eos
    .local int rx1816_rep
    .local pmc rx1816_cur
    .local pmc rx1816_curclass
    .local pmc rx1816_bstack
    .local pmc rx1816_cstack
    rx1816_start = self."!cursor_start_all"()
    set rx1816_cur, rx1816_start[0]
    set rx1816_tgt, rx1816_start[1]
    set rx1816_pos, rx1816_start[2]
    set rx1816_curclass, rx1816_start[3]
    set rx1816_bstack, rx1816_start[4]
    set $I19, rx1816_start[5]
    store_lex unicode:"$\x{a2}", rx1816_cur
    length rx1816_eos, rx1816_tgt
    eq $I19, 1, rx1816_restart3913
    gt rx1816_pos, rx1816_eos, rx1816_fail3914
    repr_get_attr_int $I11, self, rx1816_curclass, "$!from"
    ne $I11, -1, rxscan1817_done3920
    goto rxscan1817_scan3919
  rxscan1817_loop3918:
    inc rx1816_pos
    gt rx1816_pos, rx1816_eos, rx1816_fail3914
    repr_bind_attr_int rx1816_cur, rx1816_curclass, "$!from", rx1816_pos
  rxscan1817_scan3919:
    nqp_rxmark rx1816_bstack, rxscan1817_loop3918, rx1816_pos, 0
  rxscan1817_done3920:
    nqp_rxmark rx1816_bstack, rxcap1818_fail3922, rx1816_pos, 0
    add $I11, rx1816_pos, 2
    gt $I11, rx1816_eos, rx1816_fail3914
    substr $S10, rx1816_tgt, rx1816_pos, 2
    ne $S10, ucs4:"+|", rx1816_fail3914
    add rx1816_pos, 2
    nqp_rxpeek $I19, rx1816_bstack, rxcap1818_fail3922
    inc $I19
    set $I11, rx1816_bstack[$I19]
    repr_bind_attr_int rx1816_cur, rx1816_curclass, "$!pos", rx1816_pos
    $P11 = rx1816_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1816_pos)
    rx1816_cstack = rx1816_cur."!cursor_capture"($P11, "sym")
    goto rxcap1818_done3921
  rxcap1818_fail3922:
    goto rx1816_fail3914
  rxcap1818_done3921:
    repr_bind_attr_int rx1816_cur, rx1816_curclass, "$!pos", rx1816_pos
    $P11 = rx1816_cur."O"("%additive, :op<bitor_i>")
    repr_get_attr_int $I11, $P11, rx1816_curclass, "$!pos"
    lt $I11, 0, rx1816_fail3914
    nqp_rxmark rx1816_bstack, rxsubrule1819_pass3923, -1, 0
  rxsubrule1819_pass3923:
    rx1816_cstack = rx1816_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1816_pos, $P11, rx1816_curclass, "$!pos"
    rx1816_cur."!cursor_pass"(rx1816_pos, "infix:sym<+|>", 'backtrack'=>1)
    .return (rx1816_cur)
  rx1816_restart3913:
    repr_get_attr_obj rx1816_cstack, rx1816_cur, rx1816_curclass, "$!cstack"
  rx1816_fail3914:
    unless rx1816_bstack, rx1816_done3912
    pop $I19, rx1816_bstack
    if_null rx1816_cstack, rx1816_cstack_done3917
    unless rx1816_cstack, rx1816_cstack_done3917
    dec $I19
    set $P11, rx1816_cstack[$I19]
  rx1816_cstack_done3917:
    pop rx1816_rep, rx1816_bstack
    pop rx1816_pos, rx1816_bstack
    pop $I19, rx1816_bstack
    lt rx1816_pos, -1, rx1816_done3912
    lt rx1816_pos, 0, rx1816_fail3914
    eq $I19, 0, rx1816_fail3914
    nqp_islist $I20, rx1816_cstack
    unless $I20, rx1816_jump3915
    elements $I18, rx1816_bstack
    le $I18, 0, rx1816_cut3916
    dec $I18
    set $I18, rx1816_bstack[$I18]
  rx1816_cut3916:
    assign rx1816_cstack, $I18
  rx1816_jump3915:
    jump $I19
  rx1816_done3912:
    rx1816_cur."!cursor_fail"()
    .return (rx1816_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<+^>" :subid("cuid_195_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1380
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1820_start
    .local string rx1820_tgt
    .local int rx1820_pos
    .local int rx1820_off
    .local int rx1820_eos
    .local int rx1820_rep
    .local pmc rx1820_cur
    .local pmc rx1820_curclass
    .local pmc rx1820_bstack
    .local pmc rx1820_cstack
    rx1820_start = self."!cursor_start_all"()
    set rx1820_cur, rx1820_start[0]
    set rx1820_tgt, rx1820_start[1]
    set rx1820_pos, rx1820_start[2]
    set rx1820_curclass, rx1820_start[3]
    set rx1820_bstack, rx1820_start[4]
    set $I19, rx1820_start[5]
    store_lex unicode:"$\x{a2}", rx1820_cur
    length rx1820_eos, rx1820_tgt
    eq $I19, 1, rx1820_restart3926
    gt rx1820_pos, rx1820_eos, rx1820_fail3927
    repr_get_attr_int $I11, self, rx1820_curclass, "$!from"
    ne $I11, -1, rxscan1821_done3933
    goto rxscan1821_scan3932
  rxscan1821_loop3931:
    inc rx1820_pos
    gt rx1820_pos, rx1820_eos, rx1820_fail3927
    repr_bind_attr_int rx1820_cur, rx1820_curclass, "$!from", rx1820_pos
  rxscan1821_scan3932:
    nqp_rxmark rx1820_bstack, rxscan1821_loop3931, rx1820_pos, 0
  rxscan1821_done3933:
    nqp_rxmark rx1820_bstack, rxcap1822_fail3935, rx1820_pos, 0
    add $I11, rx1820_pos, 2
    gt $I11, rx1820_eos, rx1820_fail3927
    substr $S10, rx1820_tgt, rx1820_pos, 2
    ne $S10, ucs4:"+^", rx1820_fail3927
    add rx1820_pos, 2
    nqp_rxpeek $I19, rx1820_bstack, rxcap1822_fail3935
    inc $I19
    set $I11, rx1820_bstack[$I19]
    repr_bind_attr_int rx1820_cur, rx1820_curclass, "$!pos", rx1820_pos
    $P11 = rx1820_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1820_pos)
    rx1820_cstack = rx1820_cur."!cursor_capture"($P11, "sym")
    goto rxcap1822_done3934
  rxcap1822_fail3935:
    goto rx1820_fail3927
  rxcap1822_done3934:
    repr_bind_attr_int rx1820_cur, rx1820_curclass, "$!pos", rx1820_pos
    $P11 = rx1820_cur."O"("%additive, :op<bitxor_i>")
    repr_get_attr_int $I11, $P11, rx1820_curclass, "$!pos"
    lt $I11, 0, rx1820_fail3927
    nqp_rxmark rx1820_bstack, rxsubrule1823_pass3936, -1, 0
  rxsubrule1823_pass3936:
    rx1820_cstack = rx1820_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1820_pos, $P11, rx1820_curclass, "$!pos"
    rx1820_cur."!cursor_pass"(rx1820_pos, "infix:sym<+^>", 'backtrack'=>1)
    .return (rx1820_cur)
  rx1820_restart3926:
    repr_get_attr_obj rx1820_cstack, rx1820_cur, rx1820_curclass, "$!cstack"
  rx1820_fail3927:
    unless rx1820_bstack, rx1820_done3925
    pop $I19, rx1820_bstack
    if_null rx1820_cstack, rx1820_cstack_done3930
    unless rx1820_cstack, rx1820_cstack_done3930
    dec $I19
    set $P11, rx1820_cstack[$I19]
  rx1820_cstack_done3930:
    pop rx1820_rep, rx1820_bstack
    pop rx1820_pos, rx1820_bstack
    pop $I19, rx1820_bstack
    lt rx1820_pos, -1, rx1820_done3925
    lt rx1820_pos, 0, rx1820_fail3927
    eq $I19, 0, rx1820_fail3927
    nqp_islist $I20, rx1820_cstack
    unless $I20, rx1820_jump3928
    elements $I18, rx1820_bstack
    le $I18, 0, rx1820_cut3929
    dec $I18
    set $I18, rx1820_bstack[$I18]
  rx1820_cut3929:
    assign rx1820_cstack, $I18
  rx1820_jump3928:
    jump $I19
  rx1820_done3925:
    rx1820_cur."!cursor_fail"()
    .return (rx1820_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~>" :subid("cuid_196_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1382
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1824_start
    .local string rx1824_tgt
    .local int rx1824_pos
    .local int rx1824_off
    .local int rx1824_eos
    .local int rx1824_rep
    .local pmc rx1824_cur
    .local pmc rx1824_curclass
    .local pmc rx1824_bstack
    .local pmc rx1824_cstack
    rx1824_start = self."!cursor_start_all"()
    set rx1824_cur, rx1824_start[0]
    set rx1824_tgt, rx1824_start[1]
    set rx1824_pos, rx1824_start[2]
    set rx1824_curclass, rx1824_start[3]
    set rx1824_bstack, rx1824_start[4]
    set $I19, rx1824_start[5]
    store_lex unicode:"$\x{a2}", rx1824_cur
    length rx1824_eos, rx1824_tgt
    eq $I19, 1, rx1824_restart3939
    gt rx1824_pos, rx1824_eos, rx1824_fail3940
    repr_get_attr_int $I11, self, rx1824_curclass, "$!from"
    ne $I11, -1, rxscan1825_done3946
    goto rxscan1825_scan3945
  rxscan1825_loop3944:
    inc rx1824_pos
    gt rx1824_pos, rx1824_eos, rx1824_fail3940
    repr_bind_attr_int rx1824_cur, rx1824_curclass, "$!from", rx1824_pos
  rxscan1825_scan3945:
    nqp_rxmark rx1824_bstack, rxscan1825_loop3944, rx1824_pos, 0
  rxscan1825_done3946:
    nqp_rxmark rx1824_bstack, rxcap1826_fail3948, rx1824_pos, 0
    add $I11, rx1824_pos, 1
    gt $I11, rx1824_eos, rx1824_fail3940
    substr $S10, rx1824_tgt, rx1824_pos, 1
    ne $S10, ucs4:"~", rx1824_fail3940
    add rx1824_pos, 1
    nqp_rxpeek $I19, rx1824_bstack, rxcap1826_fail3948
    inc $I19
    set $I11, rx1824_bstack[$I19]
    repr_bind_attr_int rx1824_cur, rx1824_curclass, "$!pos", rx1824_pos
    $P11 = rx1824_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1824_pos)
    rx1824_cstack = rx1824_cur."!cursor_capture"($P11, "sym")
    goto rxcap1826_done3947
  rxcap1826_fail3948:
    goto rx1824_fail3940
  rxcap1826_done3947:
    repr_bind_attr_int rx1824_cur, rx1824_curclass, "$!pos", rx1824_pos
    $P11 = rx1824_cur."O"("%concatenation , :op<concat>")
    repr_get_attr_int $I11, $P11, rx1824_curclass, "$!pos"
    lt $I11, 0, rx1824_fail3940
    nqp_rxmark rx1824_bstack, rxsubrule1827_pass3949, -1, 0
  rxsubrule1827_pass3949:
    rx1824_cstack = rx1824_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1824_pos, $P11, rx1824_curclass, "$!pos"
    rx1824_cur."!cursor_pass"(rx1824_pos, "infix:sym<~>", 'backtrack'=>1)
    .return (rx1824_cur)
  rx1824_restart3939:
    repr_get_attr_obj rx1824_cstack, rx1824_cur, rx1824_curclass, "$!cstack"
  rx1824_fail3940:
    unless rx1824_bstack, rx1824_done3938
    pop $I19, rx1824_bstack
    if_null rx1824_cstack, rx1824_cstack_done3943
    unless rx1824_cstack, rx1824_cstack_done3943
    dec $I19
    set $P11, rx1824_cstack[$I19]
  rx1824_cstack_done3943:
    pop rx1824_rep, rx1824_bstack
    pop rx1824_pos, rx1824_bstack
    pop $I19, rx1824_bstack
    lt rx1824_pos, -1, rx1824_done3938
    lt rx1824_pos, 0, rx1824_fail3940
    eq $I19, 0, rx1824_fail3940
    nqp_islist $I20, rx1824_cstack
    unless $I20, rx1824_jump3941
    elements $I18, rx1824_bstack
    le $I18, 0, rx1824_cut3942
    dec $I18
    set $I18, rx1824_bstack[$I18]
  rx1824_cut3942:
    assign rx1824_cstack, $I18
  rx1824_jump3941:
    jump $I19
  rx1824_done3938:
    rx1824_cur."!cursor_fail"()
    .return (rx1824_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<==>" :subid("cuid_197_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1384
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1828_start
    .local string rx1828_tgt
    .local int rx1828_pos
    .local int rx1828_off
    .local int rx1828_eos
    .local int rx1828_rep
    .local pmc rx1828_cur
    .local pmc rx1828_curclass
    .local pmc rx1828_bstack
    .local pmc rx1828_cstack
    rx1828_start = self."!cursor_start_all"()
    set rx1828_cur, rx1828_start[0]
    set rx1828_tgt, rx1828_start[1]
    set rx1828_pos, rx1828_start[2]
    set rx1828_curclass, rx1828_start[3]
    set rx1828_bstack, rx1828_start[4]
    set $I19, rx1828_start[5]
    store_lex unicode:"$\x{a2}", rx1828_cur
    length rx1828_eos, rx1828_tgt
    eq $I19, 1, rx1828_restart3952
    gt rx1828_pos, rx1828_eos, rx1828_fail3953
    repr_get_attr_int $I11, self, rx1828_curclass, "$!from"
    ne $I11, -1, rxscan1829_done3959
    goto rxscan1829_scan3958
  rxscan1829_loop3957:
    inc rx1828_pos
    gt rx1828_pos, rx1828_eos, rx1828_fail3953
    repr_bind_attr_int rx1828_cur, rx1828_curclass, "$!from", rx1828_pos
  rxscan1829_scan3958:
    nqp_rxmark rx1828_bstack, rxscan1829_loop3957, rx1828_pos, 0
  rxscan1829_done3959:
    nqp_rxmark rx1828_bstack, rxcap1830_fail3961, rx1828_pos, 0
    add $I11, rx1828_pos, 2
    gt $I11, rx1828_eos, rx1828_fail3953
    substr $S10, rx1828_tgt, rx1828_pos, 2
    ne $S10, ucs4:"==", rx1828_fail3953
    add rx1828_pos, 2
    nqp_rxpeek $I19, rx1828_bstack, rxcap1830_fail3961
    inc $I19
    set $I11, rx1828_bstack[$I19]
    repr_bind_attr_int rx1828_cur, rx1828_curclass, "$!pos", rx1828_pos
    $P11 = rx1828_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1828_pos)
    rx1828_cstack = rx1828_cur."!cursor_capture"($P11, "sym")
    goto rxcap1830_done3960
  rxcap1830_fail3961:
    goto rx1828_fail3953
  rxcap1830_done3960:
    repr_bind_attr_int rx1828_cur, rx1828_curclass, "$!pos", rx1828_pos
    $P11 = rx1828_cur."O"("%relational, :op<iseq_n>")
    repr_get_attr_int $I11, $P11, rx1828_curclass, "$!pos"
    lt $I11, 0, rx1828_fail3953
    nqp_rxmark rx1828_bstack, rxsubrule1831_pass3962, -1, 0
  rxsubrule1831_pass3962:
    rx1828_cstack = rx1828_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1828_pos, $P11, rx1828_curclass, "$!pos"
    rx1828_cur."!cursor_pass"(rx1828_pos, "infix:sym<==>", 'backtrack'=>1)
    .return (rx1828_cur)
  rx1828_restart3952:
    repr_get_attr_obj rx1828_cstack, rx1828_cur, rx1828_curclass, "$!cstack"
  rx1828_fail3953:
    unless rx1828_bstack, rx1828_done3951
    pop $I19, rx1828_bstack
    if_null rx1828_cstack, rx1828_cstack_done3956
    unless rx1828_cstack, rx1828_cstack_done3956
    dec $I19
    set $P11, rx1828_cstack[$I19]
  rx1828_cstack_done3956:
    pop rx1828_rep, rx1828_bstack
    pop rx1828_pos, rx1828_bstack
    pop $I19, rx1828_bstack
    lt rx1828_pos, -1, rx1828_done3951
    lt rx1828_pos, 0, rx1828_fail3953
    eq $I19, 0, rx1828_fail3953
    nqp_islist $I20, rx1828_cstack
    unless $I20, rx1828_jump3954
    elements $I18, rx1828_bstack
    le $I18, 0, rx1828_cut3955
    dec $I18
    set $I18, rx1828_bstack[$I18]
  rx1828_cut3955:
    assign rx1828_cstack, $I18
  rx1828_jump3954:
    jump $I19
  rx1828_done3951:
    rx1828_cur."!cursor_fail"()
    .return (rx1828_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<!=>" :subid("cuid_198_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1385
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1832_start
    .local string rx1832_tgt
    .local int rx1832_pos
    .local int rx1832_off
    .local int rx1832_eos
    .local int rx1832_rep
    .local pmc rx1832_cur
    .local pmc rx1832_curclass
    .local pmc rx1832_bstack
    .local pmc rx1832_cstack
    rx1832_start = self."!cursor_start_all"()
    set rx1832_cur, rx1832_start[0]
    set rx1832_tgt, rx1832_start[1]
    set rx1832_pos, rx1832_start[2]
    set rx1832_curclass, rx1832_start[3]
    set rx1832_bstack, rx1832_start[4]
    set $I19, rx1832_start[5]
    store_lex unicode:"$\x{a2}", rx1832_cur
    length rx1832_eos, rx1832_tgt
    eq $I19, 1, rx1832_restart3965
    gt rx1832_pos, rx1832_eos, rx1832_fail3966
    repr_get_attr_int $I11, self, rx1832_curclass, "$!from"
    ne $I11, -1, rxscan1833_done3972
    goto rxscan1833_scan3971
  rxscan1833_loop3970:
    inc rx1832_pos
    gt rx1832_pos, rx1832_eos, rx1832_fail3966
    repr_bind_attr_int rx1832_cur, rx1832_curclass, "$!from", rx1832_pos
  rxscan1833_scan3971:
    nqp_rxmark rx1832_bstack, rxscan1833_loop3970, rx1832_pos, 0
  rxscan1833_done3972:
    nqp_rxmark rx1832_bstack, rxcap1834_fail3974, rx1832_pos, 0
    add $I11, rx1832_pos, 2
    gt $I11, rx1832_eos, rx1832_fail3966
    substr $S10, rx1832_tgt, rx1832_pos, 2
    ne $S10, ucs4:"!=", rx1832_fail3966
    add rx1832_pos, 2
    nqp_rxpeek $I19, rx1832_bstack, rxcap1834_fail3974
    inc $I19
    set $I11, rx1832_bstack[$I19]
    repr_bind_attr_int rx1832_cur, rx1832_curclass, "$!pos", rx1832_pos
    $P11 = rx1832_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1832_pos)
    rx1832_cstack = rx1832_cur."!cursor_capture"($P11, "sym")
    goto rxcap1834_done3973
  rxcap1834_fail3974:
    goto rx1832_fail3966
  rxcap1834_done3973:
    repr_bind_attr_int rx1832_cur, rx1832_curclass, "$!pos", rx1832_pos
    $P11 = rx1832_cur."O"("%relational, :op<isne_n>")
    repr_get_attr_int $I11, $P11, rx1832_curclass, "$!pos"
    lt $I11, 0, rx1832_fail3966
    nqp_rxmark rx1832_bstack, rxsubrule1835_pass3975, -1, 0
  rxsubrule1835_pass3975:
    rx1832_cstack = rx1832_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1832_pos, $P11, rx1832_curclass, "$!pos"
    rx1832_cur."!cursor_pass"(rx1832_pos, "infix:sym<!=>", 'backtrack'=>1)
    .return (rx1832_cur)
  rx1832_restart3965:
    repr_get_attr_obj rx1832_cstack, rx1832_cur, rx1832_curclass, "$!cstack"
  rx1832_fail3966:
    unless rx1832_bstack, rx1832_done3964
    pop $I19, rx1832_bstack
    if_null rx1832_cstack, rx1832_cstack_done3969
    unless rx1832_cstack, rx1832_cstack_done3969
    dec $I19
    set $P11, rx1832_cstack[$I19]
  rx1832_cstack_done3969:
    pop rx1832_rep, rx1832_bstack
    pop rx1832_pos, rx1832_bstack
    pop $I19, rx1832_bstack
    lt rx1832_pos, -1, rx1832_done3964
    lt rx1832_pos, 0, rx1832_fail3966
    eq $I19, 0, rx1832_fail3966
    nqp_islist $I20, rx1832_cstack
    unless $I20, rx1832_jump3967
    elements $I18, rx1832_bstack
    le $I18, 0, rx1832_cut3968
    dec $I18
    set $I18, rx1832_bstack[$I18]
  rx1832_cut3968:
    assign rx1832_cstack, $I18
  rx1832_jump3967:
    jump $I19
  rx1832_done3964:
    rx1832_cur."!cursor_fail"()
    .return (rx1832_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<=>" :subid("cuid_199_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1386
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1836_start
    .local string rx1836_tgt
    .local int rx1836_pos
    .local int rx1836_off
    .local int rx1836_eos
    .local int rx1836_rep
    .local pmc rx1836_cur
    .local pmc rx1836_curclass
    .local pmc rx1836_bstack
    .local pmc rx1836_cstack
    rx1836_start = self."!cursor_start_all"()
    set rx1836_cur, rx1836_start[0]
    set rx1836_tgt, rx1836_start[1]
    set rx1836_pos, rx1836_start[2]
    set rx1836_curclass, rx1836_start[3]
    set rx1836_bstack, rx1836_start[4]
    set $I19, rx1836_start[5]
    store_lex unicode:"$\x{a2}", rx1836_cur
    length rx1836_eos, rx1836_tgt
    eq $I19, 1, rx1836_restart3978
    gt rx1836_pos, rx1836_eos, rx1836_fail3979
    repr_get_attr_int $I11, self, rx1836_curclass, "$!from"
    ne $I11, -1, rxscan1837_done3985
    goto rxscan1837_scan3984
  rxscan1837_loop3983:
    inc rx1836_pos
    gt rx1836_pos, rx1836_eos, rx1836_fail3979
    repr_bind_attr_int rx1836_cur, rx1836_curclass, "$!from", rx1836_pos
  rxscan1837_scan3984:
    nqp_rxmark rx1836_bstack, rxscan1837_loop3983, rx1836_pos, 0
  rxscan1837_done3985:
    nqp_rxmark rx1836_bstack, rxcap1838_fail3987, rx1836_pos, 0
    add $I11, rx1836_pos, 2
    gt $I11, rx1836_eos, rx1836_fail3979
    substr $S10, rx1836_tgt, rx1836_pos, 2
    ne $S10, ucs4:"<=", rx1836_fail3979
    add rx1836_pos, 2
    nqp_rxpeek $I19, rx1836_bstack, rxcap1838_fail3987
    inc $I19
    set $I11, rx1836_bstack[$I19]
    repr_bind_attr_int rx1836_cur, rx1836_curclass, "$!pos", rx1836_pos
    $P11 = rx1836_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1836_pos)
    rx1836_cstack = rx1836_cur."!cursor_capture"($P11, "sym")
    goto rxcap1838_done3986
  rxcap1838_fail3987:
    goto rx1836_fail3979
  rxcap1838_done3986:
    repr_bind_attr_int rx1836_cur, rx1836_curclass, "$!pos", rx1836_pos
    $P11 = rx1836_cur."O"("%relational, :op<isle_n>")
    repr_get_attr_int $I11, $P11, rx1836_curclass, "$!pos"
    lt $I11, 0, rx1836_fail3979
    nqp_rxmark rx1836_bstack, rxsubrule1839_pass3988, -1, 0
  rxsubrule1839_pass3988:
    rx1836_cstack = rx1836_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1836_pos, $P11, rx1836_curclass, "$!pos"
    rx1836_cur."!cursor_pass"(rx1836_pos, "infix:sym<<=>", 'backtrack'=>1)
    .return (rx1836_cur)
  rx1836_restart3978:
    repr_get_attr_obj rx1836_cstack, rx1836_cur, rx1836_curclass, "$!cstack"
  rx1836_fail3979:
    unless rx1836_bstack, rx1836_done3977
    pop $I19, rx1836_bstack
    if_null rx1836_cstack, rx1836_cstack_done3982
    unless rx1836_cstack, rx1836_cstack_done3982
    dec $I19
    set $P11, rx1836_cstack[$I19]
  rx1836_cstack_done3982:
    pop rx1836_rep, rx1836_bstack
    pop rx1836_pos, rx1836_bstack
    pop $I19, rx1836_bstack
    lt rx1836_pos, -1, rx1836_done3977
    lt rx1836_pos, 0, rx1836_fail3979
    eq $I19, 0, rx1836_fail3979
    nqp_islist $I20, rx1836_cstack
    unless $I20, rx1836_jump3980
    elements $I18, rx1836_bstack
    le $I18, 0, rx1836_cut3981
    dec $I18
    set $I18, rx1836_bstack[$I18]
  rx1836_cut3981:
    assign rx1836_cstack, $I18
  rx1836_jump3980:
    jump $I19
  rx1836_done3977:
    rx1836_cur."!cursor_fail"()
    .return (rx1836_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>=>" :subid("cuid_200_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1387
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1840_start
    .local string rx1840_tgt
    .local int rx1840_pos
    .local int rx1840_off
    .local int rx1840_eos
    .local int rx1840_rep
    .local pmc rx1840_cur
    .local pmc rx1840_curclass
    .local pmc rx1840_bstack
    .local pmc rx1840_cstack
    rx1840_start = self."!cursor_start_all"()
    set rx1840_cur, rx1840_start[0]
    set rx1840_tgt, rx1840_start[1]
    set rx1840_pos, rx1840_start[2]
    set rx1840_curclass, rx1840_start[3]
    set rx1840_bstack, rx1840_start[4]
    set $I19, rx1840_start[5]
    store_lex unicode:"$\x{a2}", rx1840_cur
    length rx1840_eos, rx1840_tgt
    eq $I19, 1, rx1840_restart3991
    gt rx1840_pos, rx1840_eos, rx1840_fail3992
    repr_get_attr_int $I11, self, rx1840_curclass, "$!from"
    ne $I11, -1, rxscan1841_done3998
    goto rxscan1841_scan3997
  rxscan1841_loop3996:
    inc rx1840_pos
    gt rx1840_pos, rx1840_eos, rx1840_fail3992
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!from", rx1840_pos
  rxscan1841_scan3997:
    nqp_rxmark rx1840_bstack, rxscan1841_loop3996, rx1840_pos, 0
  rxscan1841_done3998:
    nqp_rxmark rx1840_bstack, rxcap1842_fail4000, rx1840_pos, 0
    add $I11, rx1840_pos, 2
    gt $I11, rx1840_eos, rx1840_fail3992
    substr $S10, rx1840_tgt, rx1840_pos, 2
    ne $S10, ucs4:">=", rx1840_fail3992
    add rx1840_pos, 2
    nqp_rxpeek $I19, rx1840_bstack, rxcap1842_fail4000
    inc $I19
    set $I11, rx1840_bstack[$I19]
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!pos", rx1840_pos
    $P11 = rx1840_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1840_pos)
    rx1840_cstack = rx1840_cur."!cursor_capture"($P11, "sym")
    goto rxcap1842_done3999
  rxcap1842_fail4000:
    goto rx1840_fail3992
  rxcap1842_done3999:
    repr_bind_attr_int rx1840_cur, rx1840_curclass, "$!pos", rx1840_pos
    $P11 = rx1840_cur."O"("%relational, :op<isge_n>")
    repr_get_attr_int $I11, $P11, rx1840_curclass, "$!pos"
    lt $I11, 0, rx1840_fail3992
    nqp_rxmark rx1840_bstack, rxsubrule1843_pass4001, -1, 0
  rxsubrule1843_pass4001:
    rx1840_cstack = rx1840_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1840_pos, $P11, rx1840_curclass, "$!pos"
    rx1840_cur."!cursor_pass"(rx1840_pos, "infix:sym<>=>", 'backtrack'=>1)
    .return (rx1840_cur)
  rx1840_restart3991:
    repr_get_attr_obj rx1840_cstack, rx1840_cur, rx1840_curclass, "$!cstack"
  rx1840_fail3992:
    unless rx1840_bstack, rx1840_done3990
    pop $I19, rx1840_bstack
    if_null rx1840_cstack, rx1840_cstack_done3995
    unless rx1840_cstack, rx1840_cstack_done3995
    dec $I19
    set $P11, rx1840_cstack[$I19]
  rx1840_cstack_done3995:
    pop rx1840_rep, rx1840_bstack
    pop rx1840_pos, rx1840_bstack
    pop $I19, rx1840_bstack
    lt rx1840_pos, -1, rx1840_done3990
    lt rx1840_pos, 0, rx1840_fail3992
    eq $I19, 0, rx1840_fail3992
    nqp_islist $I20, rx1840_cstack
    unless $I20, rx1840_jump3993
    elements $I18, rx1840_bstack
    le $I18, 0, rx1840_cut3994
    dec $I18
    set $I18, rx1840_bstack[$I18]
  rx1840_cut3994:
    assign rx1840_cstack, $I18
  rx1840_jump3993:
    jump $I19
  rx1840_done3990:
    rx1840_cur."!cursor_fail"()
    .return (rx1840_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<<>" :subid("cuid_201_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1388
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1844_start
    .local string rx1844_tgt
    .local int rx1844_pos
    .local int rx1844_off
    .local int rx1844_eos
    .local int rx1844_rep
    .local pmc rx1844_cur
    .local pmc rx1844_curclass
    .local pmc rx1844_bstack
    .local pmc rx1844_cstack
    rx1844_start = self."!cursor_start_all"()
    set rx1844_cur, rx1844_start[0]
    set rx1844_tgt, rx1844_start[1]
    set rx1844_pos, rx1844_start[2]
    set rx1844_curclass, rx1844_start[3]
    set rx1844_bstack, rx1844_start[4]
    set $I19, rx1844_start[5]
    store_lex unicode:"$\x{a2}", rx1844_cur
    length rx1844_eos, rx1844_tgt
    eq $I19, 1, rx1844_restart4004
    gt rx1844_pos, rx1844_eos, rx1844_fail4005
    repr_get_attr_int $I11, self, rx1844_curclass, "$!from"
    ne $I11, -1, rxscan1845_done4011
    goto rxscan1845_scan4010
  rxscan1845_loop4009:
    inc rx1844_pos
    gt rx1844_pos, rx1844_eos, rx1844_fail4005
    repr_bind_attr_int rx1844_cur, rx1844_curclass, "$!from", rx1844_pos
  rxscan1845_scan4010:
    nqp_rxmark rx1844_bstack, rxscan1845_loop4009, rx1844_pos, 0
  rxscan1845_done4011:
    nqp_rxmark rx1844_bstack, rxcap1846_fail4013, rx1844_pos, 0
    add $I11, rx1844_pos, 1
    gt $I11, rx1844_eos, rx1844_fail4005
    substr $S10, rx1844_tgt, rx1844_pos, 1
    ne $S10, ucs4:"<", rx1844_fail4005
    add rx1844_pos, 1
    nqp_rxpeek $I19, rx1844_bstack, rxcap1846_fail4013
    inc $I19
    set $I11, rx1844_bstack[$I19]
    repr_bind_attr_int rx1844_cur, rx1844_curclass, "$!pos", rx1844_pos
    $P11 = rx1844_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1844_pos)
    rx1844_cstack = rx1844_cur."!cursor_capture"($P11, "sym")
    goto rxcap1846_done4012
  rxcap1846_fail4013:
    goto rx1844_fail4005
  rxcap1846_done4012:
    repr_bind_attr_int rx1844_cur, rx1844_curclass, "$!pos", rx1844_pos
    $P11 = rx1844_cur."O"("%relational, :op<islt_n>")
    repr_get_attr_int $I11, $P11, rx1844_curclass, "$!pos"
    lt $I11, 0, rx1844_fail4005
    nqp_rxmark rx1844_bstack, rxsubrule1847_pass4014, -1, 0
  rxsubrule1847_pass4014:
    rx1844_cstack = rx1844_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1844_pos, $P11, rx1844_curclass, "$!pos"
    rx1844_cur."!cursor_pass"(rx1844_pos, "infix:sym<<>", 'backtrack'=>1)
    .return (rx1844_cur)
  rx1844_restart4004:
    repr_get_attr_obj rx1844_cstack, rx1844_cur, rx1844_curclass, "$!cstack"
  rx1844_fail4005:
    unless rx1844_bstack, rx1844_done4003
    pop $I19, rx1844_bstack
    if_null rx1844_cstack, rx1844_cstack_done4008
    unless rx1844_cstack, rx1844_cstack_done4008
    dec $I19
    set $P11, rx1844_cstack[$I19]
  rx1844_cstack_done4008:
    pop rx1844_rep, rx1844_bstack
    pop rx1844_pos, rx1844_bstack
    pop $I19, rx1844_bstack
    lt rx1844_pos, -1, rx1844_done4003
    lt rx1844_pos, 0, rx1844_fail4005
    eq $I19, 0, rx1844_fail4005
    nqp_islist $I20, rx1844_cstack
    unless $I20, rx1844_jump4006
    elements $I18, rx1844_bstack
    le $I18, 0, rx1844_cut4007
    dec $I18
    set $I18, rx1844_bstack[$I18]
  rx1844_cut4007:
    assign rx1844_cstack, $I18
  rx1844_jump4006:
    jump $I19
  rx1844_done4003:
    rx1844_cur."!cursor_fail"()
    .return (rx1844_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<>>" :subid("cuid_202_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1389
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1848_start
    .local string rx1848_tgt
    .local int rx1848_pos
    .local int rx1848_off
    .local int rx1848_eos
    .local int rx1848_rep
    .local pmc rx1848_cur
    .local pmc rx1848_curclass
    .local pmc rx1848_bstack
    .local pmc rx1848_cstack
    rx1848_start = self."!cursor_start_all"()
    set rx1848_cur, rx1848_start[0]
    set rx1848_tgt, rx1848_start[1]
    set rx1848_pos, rx1848_start[2]
    set rx1848_curclass, rx1848_start[3]
    set rx1848_bstack, rx1848_start[4]
    set $I19, rx1848_start[5]
    store_lex unicode:"$\x{a2}", rx1848_cur
    length rx1848_eos, rx1848_tgt
    eq $I19, 1, rx1848_restart4017
    gt rx1848_pos, rx1848_eos, rx1848_fail4018
    repr_get_attr_int $I11, self, rx1848_curclass, "$!from"
    ne $I11, -1, rxscan1849_done4024
    goto rxscan1849_scan4023
  rxscan1849_loop4022:
    inc rx1848_pos
    gt rx1848_pos, rx1848_eos, rx1848_fail4018
    repr_bind_attr_int rx1848_cur, rx1848_curclass, "$!from", rx1848_pos
  rxscan1849_scan4023:
    nqp_rxmark rx1848_bstack, rxscan1849_loop4022, rx1848_pos, 0
  rxscan1849_done4024:
    nqp_rxmark rx1848_bstack, rxcap1850_fail4026, rx1848_pos, 0
    add $I11, rx1848_pos, 1
    gt $I11, rx1848_eos, rx1848_fail4018
    substr $S10, rx1848_tgt, rx1848_pos, 1
    ne $S10, ucs4:">", rx1848_fail4018
    add rx1848_pos, 1
    nqp_rxpeek $I19, rx1848_bstack, rxcap1850_fail4026
    inc $I19
    set $I11, rx1848_bstack[$I19]
    repr_bind_attr_int rx1848_cur, rx1848_curclass, "$!pos", rx1848_pos
    $P11 = rx1848_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1848_pos)
    rx1848_cstack = rx1848_cur."!cursor_capture"($P11, "sym")
    goto rxcap1850_done4025
  rxcap1850_fail4026:
    goto rx1848_fail4018
  rxcap1850_done4025:
    repr_bind_attr_int rx1848_cur, rx1848_curclass, "$!pos", rx1848_pos
    $P11 = rx1848_cur."O"("%relational, :op<isgt_n>")
    repr_get_attr_int $I11, $P11, rx1848_curclass, "$!pos"
    lt $I11, 0, rx1848_fail4018
    nqp_rxmark rx1848_bstack, rxsubrule1851_pass4027, -1, 0
  rxsubrule1851_pass4027:
    rx1848_cstack = rx1848_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1848_pos, $P11, rx1848_curclass, "$!pos"
    rx1848_cur."!cursor_pass"(rx1848_pos, "infix:sym<>>", 'backtrack'=>1)
    .return (rx1848_cur)
  rx1848_restart4017:
    repr_get_attr_obj rx1848_cstack, rx1848_cur, rx1848_curclass, "$!cstack"
  rx1848_fail4018:
    unless rx1848_bstack, rx1848_done4016
    pop $I19, rx1848_bstack
    if_null rx1848_cstack, rx1848_cstack_done4021
    unless rx1848_cstack, rx1848_cstack_done4021
    dec $I19
    set $P11, rx1848_cstack[$I19]
  rx1848_cstack_done4021:
    pop rx1848_rep, rx1848_bstack
    pop rx1848_pos, rx1848_bstack
    pop $I19, rx1848_bstack
    lt rx1848_pos, -1, rx1848_done4016
    lt rx1848_pos, 0, rx1848_fail4018
    eq $I19, 0, rx1848_fail4018
    nqp_islist $I20, rx1848_cstack
    unless $I20, rx1848_jump4019
    elements $I18, rx1848_bstack
    le $I18, 0, rx1848_cut4020
    dec $I18
    set $I18, rx1848_bstack[$I18]
  rx1848_cut4020:
    assign rx1848_cstack, $I18
  rx1848_jump4019:
    jump $I19
  rx1848_done4016:
    rx1848_cur."!cursor_fail"()
    .return (rx1848_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<eq>" :subid("cuid_203_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1390
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1852_start
    .local string rx1852_tgt
    .local int rx1852_pos
    .local int rx1852_off
    .local int rx1852_eos
    .local int rx1852_rep
    .local pmc rx1852_cur
    .local pmc rx1852_curclass
    .local pmc rx1852_bstack
    .local pmc rx1852_cstack
    rx1852_start = self."!cursor_start_all"()
    set rx1852_cur, rx1852_start[0]
    set rx1852_tgt, rx1852_start[1]
    set rx1852_pos, rx1852_start[2]
    set rx1852_curclass, rx1852_start[3]
    set rx1852_bstack, rx1852_start[4]
    set $I19, rx1852_start[5]
    store_lex unicode:"$\x{a2}", rx1852_cur
    length rx1852_eos, rx1852_tgt
    eq $I19, 1, rx1852_restart4030
    gt rx1852_pos, rx1852_eos, rx1852_fail4031
    repr_get_attr_int $I11, self, rx1852_curclass, "$!from"
    ne $I11, -1, rxscan1853_done4037
    goto rxscan1853_scan4036
  rxscan1853_loop4035:
    inc rx1852_pos
    gt rx1852_pos, rx1852_eos, rx1852_fail4031
    repr_bind_attr_int rx1852_cur, rx1852_curclass, "$!from", rx1852_pos
  rxscan1853_scan4036:
    nqp_rxmark rx1852_bstack, rxscan1853_loop4035, rx1852_pos, 0
  rxscan1853_done4037:
    nqp_rxmark rx1852_bstack, rxcap1854_fail4039, rx1852_pos, 0
    add $I11, rx1852_pos, 2
    gt $I11, rx1852_eos, rx1852_fail4031
    substr $S10, rx1852_tgt, rx1852_pos, 2
    ne $S10, ucs4:"eq", rx1852_fail4031
    add rx1852_pos, 2
    nqp_rxpeek $I19, rx1852_bstack, rxcap1854_fail4039
    inc $I19
    set $I11, rx1852_bstack[$I19]
    repr_bind_attr_int rx1852_cur, rx1852_curclass, "$!pos", rx1852_pos
    $P11 = rx1852_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1852_pos)
    rx1852_cstack = rx1852_cur."!cursor_capture"($P11, "sym")
    goto rxcap1854_done4038
  rxcap1854_fail4039:
    goto rx1852_fail4031
  rxcap1854_done4038:
    repr_bind_attr_int rx1852_cur, rx1852_curclass, "$!pos", rx1852_pos
    $P11 = rx1852_cur."O"("%relational, :op<iseq_s>")
    repr_get_attr_int $I11, $P11, rx1852_curclass, "$!pos"
    lt $I11, 0, rx1852_fail4031
    nqp_rxmark rx1852_bstack, rxsubrule1855_pass4040, -1, 0
  rxsubrule1855_pass4040:
    rx1852_cstack = rx1852_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1852_pos, $P11, rx1852_curclass, "$!pos"
    rx1852_cur."!cursor_pass"(rx1852_pos, "infix:sym<eq>", 'backtrack'=>1)
    .return (rx1852_cur)
  rx1852_restart4030:
    repr_get_attr_obj rx1852_cstack, rx1852_cur, rx1852_curclass, "$!cstack"
  rx1852_fail4031:
    unless rx1852_bstack, rx1852_done4029
    pop $I19, rx1852_bstack
    if_null rx1852_cstack, rx1852_cstack_done4034
    unless rx1852_cstack, rx1852_cstack_done4034
    dec $I19
    set $P11, rx1852_cstack[$I19]
  rx1852_cstack_done4034:
    pop rx1852_rep, rx1852_bstack
    pop rx1852_pos, rx1852_bstack
    pop $I19, rx1852_bstack
    lt rx1852_pos, -1, rx1852_done4029
    lt rx1852_pos, 0, rx1852_fail4031
    eq $I19, 0, rx1852_fail4031
    nqp_islist $I20, rx1852_cstack
    unless $I20, rx1852_jump4032
    elements $I18, rx1852_bstack
    le $I18, 0, rx1852_cut4033
    dec $I18
    set $I18, rx1852_bstack[$I18]
  rx1852_cut4033:
    assign rx1852_cstack, $I18
  rx1852_jump4032:
    jump $I19
  rx1852_done4029:
    rx1852_cur."!cursor_fail"()
    .return (rx1852_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ne>" :subid("cuid_204_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1391
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1856_start
    .local string rx1856_tgt
    .local int rx1856_pos
    .local int rx1856_off
    .local int rx1856_eos
    .local int rx1856_rep
    .local pmc rx1856_cur
    .local pmc rx1856_curclass
    .local pmc rx1856_bstack
    .local pmc rx1856_cstack
    rx1856_start = self."!cursor_start_all"()
    set rx1856_cur, rx1856_start[0]
    set rx1856_tgt, rx1856_start[1]
    set rx1856_pos, rx1856_start[2]
    set rx1856_curclass, rx1856_start[3]
    set rx1856_bstack, rx1856_start[4]
    set $I19, rx1856_start[5]
    store_lex unicode:"$\x{a2}", rx1856_cur
    length rx1856_eos, rx1856_tgt
    eq $I19, 1, rx1856_restart4043
    gt rx1856_pos, rx1856_eos, rx1856_fail4044
    repr_get_attr_int $I11, self, rx1856_curclass, "$!from"
    ne $I11, -1, rxscan1857_done4050
    goto rxscan1857_scan4049
  rxscan1857_loop4048:
    inc rx1856_pos
    gt rx1856_pos, rx1856_eos, rx1856_fail4044
    repr_bind_attr_int rx1856_cur, rx1856_curclass, "$!from", rx1856_pos
  rxscan1857_scan4049:
    nqp_rxmark rx1856_bstack, rxscan1857_loop4048, rx1856_pos, 0
  rxscan1857_done4050:
    nqp_rxmark rx1856_bstack, rxcap1858_fail4052, rx1856_pos, 0
    add $I11, rx1856_pos, 2
    gt $I11, rx1856_eos, rx1856_fail4044
    substr $S10, rx1856_tgt, rx1856_pos, 2
    ne $S10, ucs4:"ne", rx1856_fail4044
    add rx1856_pos, 2
    nqp_rxpeek $I19, rx1856_bstack, rxcap1858_fail4052
    inc $I19
    set $I11, rx1856_bstack[$I19]
    repr_bind_attr_int rx1856_cur, rx1856_curclass, "$!pos", rx1856_pos
    $P11 = rx1856_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1856_pos)
    rx1856_cstack = rx1856_cur."!cursor_capture"($P11, "sym")
    goto rxcap1858_done4051
  rxcap1858_fail4052:
    goto rx1856_fail4044
  rxcap1858_done4051:
    repr_bind_attr_int rx1856_cur, rx1856_curclass, "$!pos", rx1856_pos
    $P11 = rx1856_cur."O"("%relational, :op<isne_s>")
    repr_get_attr_int $I11, $P11, rx1856_curclass, "$!pos"
    lt $I11, 0, rx1856_fail4044
    nqp_rxmark rx1856_bstack, rxsubrule1859_pass4053, -1, 0
  rxsubrule1859_pass4053:
    rx1856_cstack = rx1856_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1856_pos, $P11, rx1856_curclass, "$!pos"
    rx1856_cur."!cursor_pass"(rx1856_pos, "infix:sym<ne>", 'backtrack'=>1)
    .return (rx1856_cur)
  rx1856_restart4043:
    repr_get_attr_obj rx1856_cstack, rx1856_cur, rx1856_curclass, "$!cstack"
  rx1856_fail4044:
    unless rx1856_bstack, rx1856_done4042
    pop $I19, rx1856_bstack
    if_null rx1856_cstack, rx1856_cstack_done4047
    unless rx1856_cstack, rx1856_cstack_done4047
    dec $I19
    set $P11, rx1856_cstack[$I19]
  rx1856_cstack_done4047:
    pop rx1856_rep, rx1856_bstack
    pop rx1856_pos, rx1856_bstack
    pop $I19, rx1856_bstack
    lt rx1856_pos, -1, rx1856_done4042
    lt rx1856_pos, 0, rx1856_fail4044
    eq $I19, 0, rx1856_fail4044
    nqp_islist $I20, rx1856_cstack
    unless $I20, rx1856_jump4045
    elements $I18, rx1856_bstack
    le $I18, 0, rx1856_cut4046
    dec $I18
    set $I18, rx1856_bstack[$I18]
  rx1856_cut4046:
    assign rx1856_cstack, $I18
  rx1856_jump4045:
    jump $I19
  rx1856_done4042:
    rx1856_cur."!cursor_fail"()
    .return (rx1856_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<le>" :subid("cuid_205_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1392
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1860_start
    .local string rx1860_tgt
    .local int rx1860_pos
    .local int rx1860_off
    .local int rx1860_eos
    .local int rx1860_rep
    .local pmc rx1860_cur
    .local pmc rx1860_curclass
    .local pmc rx1860_bstack
    .local pmc rx1860_cstack
    rx1860_start = self."!cursor_start_all"()
    set rx1860_cur, rx1860_start[0]
    set rx1860_tgt, rx1860_start[1]
    set rx1860_pos, rx1860_start[2]
    set rx1860_curclass, rx1860_start[3]
    set rx1860_bstack, rx1860_start[4]
    set $I19, rx1860_start[5]
    store_lex unicode:"$\x{a2}", rx1860_cur
    length rx1860_eos, rx1860_tgt
    eq $I19, 1, rx1860_restart4056
    gt rx1860_pos, rx1860_eos, rx1860_fail4057
    repr_get_attr_int $I11, self, rx1860_curclass, "$!from"
    ne $I11, -1, rxscan1861_done4063
    goto rxscan1861_scan4062
  rxscan1861_loop4061:
    inc rx1860_pos
    gt rx1860_pos, rx1860_eos, rx1860_fail4057
    repr_bind_attr_int rx1860_cur, rx1860_curclass, "$!from", rx1860_pos
  rxscan1861_scan4062:
    nqp_rxmark rx1860_bstack, rxscan1861_loop4061, rx1860_pos, 0
  rxscan1861_done4063:
    nqp_rxmark rx1860_bstack, rxcap1862_fail4065, rx1860_pos, 0
    add $I11, rx1860_pos, 2
    gt $I11, rx1860_eos, rx1860_fail4057
    substr $S10, rx1860_tgt, rx1860_pos, 2
    ne $S10, ucs4:"le", rx1860_fail4057
    add rx1860_pos, 2
    nqp_rxpeek $I19, rx1860_bstack, rxcap1862_fail4065
    inc $I19
    set $I11, rx1860_bstack[$I19]
    repr_bind_attr_int rx1860_cur, rx1860_curclass, "$!pos", rx1860_pos
    $P11 = rx1860_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1860_pos)
    rx1860_cstack = rx1860_cur."!cursor_capture"($P11, "sym")
    goto rxcap1862_done4064
  rxcap1862_fail4065:
    goto rx1860_fail4057
  rxcap1862_done4064:
    repr_bind_attr_int rx1860_cur, rx1860_curclass, "$!pos", rx1860_pos
    $P11 = rx1860_cur."O"("%relational, :op<isle_s>")
    repr_get_attr_int $I11, $P11, rx1860_curclass, "$!pos"
    lt $I11, 0, rx1860_fail4057
    nqp_rxmark rx1860_bstack, rxsubrule1863_pass4066, -1, 0
  rxsubrule1863_pass4066:
    rx1860_cstack = rx1860_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1860_pos, $P11, rx1860_curclass, "$!pos"
    rx1860_cur."!cursor_pass"(rx1860_pos, "infix:sym<le>", 'backtrack'=>1)
    .return (rx1860_cur)
  rx1860_restart4056:
    repr_get_attr_obj rx1860_cstack, rx1860_cur, rx1860_curclass, "$!cstack"
  rx1860_fail4057:
    unless rx1860_bstack, rx1860_done4055
    pop $I19, rx1860_bstack
    if_null rx1860_cstack, rx1860_cstack_done4060
    unless rx1860_cstack, rx1860_cstack_done4060
    dec $I19
    set $P11, rx1860_cstack[$I19]
  rx1860_cstack_done4060:
    pop rx1860_rep, rx1860_bstack
    pop rx1860_pos, rx1860_bstack
    pop $I19, rx1860_bstack
    lt rx1860_pos, -1, rx1860_done4055
    lt rx1860_pos, 0, rx1860_fail4057
    eq $I19, 0, rx1860_fail4057
    nqp_islist $I20, rx1860_cstack
    unless $I20, rx1860_jump4058
    elements $I18, rx1860_bstack
    le $I18, 0, rx1860_cut4059
    dec $I18
    set $I18, rx1860_bstack[$I18]
  rx1860_cut4059:
    assign rx1860_cstack, $I18
  rx1860_jump4058:
    jump $I19
  rx1860_done4055:
    rx1860_cur."!cursor_fail"()
    .return (rx1860_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<ge>" :subid("cuid_206_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1393
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1864_start
    .local string rx1864_tgt
    .local int rx1864_pos
    .local int rx1864_off
    .local int rx1864_eos
    .local int rx1864_rep
    .local pmc rx1864_cur
    .local pmc rx1864_curclass
    .local pmc rx1864_bstack
    .local pmc rx1864_cstack
    rx1864_start = self."!cursor_start_all"()
    set rx1864_cur, rx1864_start[0]
    set rx1864_tgt, rx1864_start[1]
    set rx1864_pos, rx1864_start[2]
    set rx1864_curclass, rx1864_start[3]
    set rx1864_bstack, rx1864_start[4]
    set $I19, rx1864_start[5]
    store_lex unicode:"$\x{a2}", rx1864_cur
    length rx1864_eos, rx1864_tgt
    eq $I19, 1, rx1864_restart4069
    gt rx1864_pos, rx1864_eos, rx1864_fail4070
    repr_get_attr_int $I11, self, rx1864_curclass, "$!from"
    ne $I11, -1, rxscan1865_done4076
    goto rxscan1865_scan4075
  rxscan1865_loop4074:
    inc rx1864_pos
    gt rx1864_pos, rx1864_eos, rx1864_fail4070
    repr_bind_attr_int rx1864_cur, rx1864_curclass, "$!from", rx1864_pos
  rxscan1865_scan4075:
    nqp_rxmark rx1864_bstack, rxscan1865_loop4074, rx1864_pos, 0
  rxscan1865_done4076:
    nqp_rxmark rx1864_bstack, rxcap1866_fail4078, rx1864_pos, 0
    add $I11, rx1864_pos, 2
    gt $I11, rx1864_eos, rx1864_fail4070
    substr $S10, rx1864_tgt, rx1864_pos, 2
    ne $S10, ucs4:"ge", rx1864_fail4070
    add rx1864_pos, 2
    nqp_rxpeek $I19, rx1864_bstack, rxcap1866_fail4078
    inc $I19
    set $I11, rx1864_bstack[$I19]
    repr_bind_attr_int rx1864_cur, rx1864_curclass, "$!pos", rx1864_pos
    $P11 = rx1864_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1864_pos)
    rx1864_cstack = rx1864_cur."!cursor_capture"($P11, "sym")
    goto rxcap1866_done4077
  rxcap1866_fail4078:
    goto rx1864_fail4070
  rxcap1866_done4077:
    repr_bind_attr_int rx1864_cur, rx1864_curclass, "$!pos", rx1864_pos
    $P11 = rx1864_cur."O"("%relational, :op<isge_s>")
    repr_get_attr_int $I11, $P11, rx1864_curclass, "$!pos"
    lt $I11, 0, rx1864_fail4070
    nqp_rxmark rx1864_bstack, rxsubrule1867_pass4079, -1, 0
  rxsubrule1867_pass4079:
    rx1864_cstack = rx1864_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1864_pos, $P11, rx1864_curclass, "$!pos"
    rx1864_cur."!cursor_pass"(rx1864_pos, "infix:sym<ge>", 'backtrack'=>1)
    .return (rx1864_cur)
  rx1864_restart4069:
    repr_get_attr_obj rx1864_cstack, rx1864_cur, rx1864_curclass, "$!cstack"
  rx1864_fail4070:
    unless rx1864_bstack, rx1864_done4068
    pop $I19, rx1864_bstack
    if_null rx1864_cstack, rx1864_cstack_done4073
    unless rx1864_cstack, rx1864_cstack_done4073
    dec $I19
    set $P11, rx1864_cstack[$I19]
  rx1864_cstack_done4073:
    pop rx1864_rep, rx1864_bstack
    pop rx1864_pos, rx1864_bstack
    pop $I19, rx1864_bstack
    lt rx1864_pos, -1, rx1864_done4068
    lt rx1864_pos, 0, rx1864_fail4070
    eq $I19, 0, rx1864_fail4070
    nqp_islist $I20, rx1864_cstack
    unless $I20, rx1864_jump4071
    elements $I18, rx1864_bstack
    le $I18, 0, rx1864_cut4072
    dec $I18
    set $I18, rx1864_bstack[$I18]
  rx1864_cut4072:
    assign rx1864_cstack, $I18
  rx1864_jump4071:
    jump $I19
  rx1864_done4068:
    rx1864_cur."!cursor_fail"()
    .return (rx1864_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<lt>" :subid("cuid_207_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1394
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1868_start
    .local string rx1868_tgt
    .local int rx1868_pos
    .local int rx1868_off
    .local int rx1868_eos
    .local int rx1868_rep
    .local pmc rx1868_cur
    .local pmc rx1868_curclass
    .local pmc rx1868_bstack
    .local pmc rx1868_cstack
    rx1868_start = self."!cursor_start_all"()
    set rx1868_cur, rx1868_start[0]
    set rx1868_tgt, rx1868_start[1]
    set rx1868_pos, rx1868_start[2]
    set rx1868_curclass, rx1868_start[3]
    set rx1868_bstack, rx1868_start[4]
    set $I19, rx1868_start[5]
    store_lex unicode:"$\x{a2}", rx1868_cur
    length rx1868_eos, rx1868_tgt
    eq $I19, 1, rx1868_restart4082
    gt rx1868_pos, rx1868_eos, rx1868_fail4083
    repr_get_attr_int $I11, self, rx1868_curclass, "$!from"
    ne $I11, -1, rxscan1869_done4089
    goto rxscan1869_scan4088
  rxscan1869_loop4087:
    inc rx1868_pos
    gt rx1868_pos, rx1868_eos, rx1868_fail4083
    repr_bind_attr_int rx1868_cur, rx1868_curclass, "$!from", rx1868_pos
  rxscan1869_scan4088:
    nqp_rxmark rx1868_bstack, rxscan1869_loop4087, rx1868_pos, 0
  rxscan1869_done4089:
    nqp_rxmark rx1868_bstack, rxcap1870_fail4091, rx1868_pos, 0
    add $I11, rx1868_pos, 2
    gt $I11, rx1868_eos, rx1868_fail4083
    substr $S10, rx1868_tgt, rx1868_pos, 2
    ne $S10, ucs4:"lt", rx1868_fail4083
    add rx1868_pos, 2
    nqp_rxpeek $I19, rx1868_bstack, rxcap1870_fail4091
    inc $I19
    set $I11, rx1868_bstack[$I19]
    repr_bind_attr_int rx1868_cur, rx1868_curclass, "$!pos", rx1868_pos
    $P11 = rx1868_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1868_pos)
    rx1868_cstack = rx1868_cur."!cursor_capture"($P11, "sym")
    goto rxcap1870_done4090
  rxcap1870_fail4091:
    goto rx1868_fail4083
  rxcap1870_done4090:
    repr_bind_attr_int rx1868_cur, rx1868_curclass, "$!pos", rx1868_pos
    $P11 = rx1868_cur."O"("%relational, :op<islt_s>")
    repr_get_attr_int $I11, $P11, rx1868_curclass, "$!pos"
    lt $I11, 0, rx1868_fail4083
    nqp_rxmark rx1868_bstack, rxsubrule1871_pass4092, -1, 0
  rxsubrule1871_pass4092:
    rx1868_cstack = rx1868_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1868_pos, $P11, rx1868_curclass, "$!pos"
    rx1868_cur."!cursor_pass"(rx1868_pos, "infix:sym<lt>", 'backtrack'=>1)
    .return (rx1868_cur)
  rx1868_restart4082:
    repr_get_attr_obj rx1868_cstack, rx1868_cur, rx1868_curclass, "$!cstack"
  rx1868_fail4083:
    unless rx1868_bstack, rx1868_done4081
    pop $I19, rx1868_bstack
    if_null rx1868_cstack, rx1868_cstack_done4086
    unless rx1868_cstack, rx1868_cstack_done4086
    dec $I19
    set $P11, rx1868_cstack[$I19]
  rx1868_cstack_done4086:
    pop rx1868_rep, rx1868_bstack
    pop rx1868_pos, rx1868_bstack
    pop $I19, rx1868_bstack
    lt rx1868_pos, -1, rx1868_done4081
    lt rx1868_pos, 0, rx1868_fail4083
    eq $I19, 0, rx1868_fail4083
    nqp_islist $I20, rx1868_cstack
    unless $I20, rx1868_jump4084
    elements $I18, rx1868_bstack
    le $I18, 0, rx1868_cut4085
    dec $I18
    set $I18, rx1868_bstack[$I18]
  rx1868_cut4085:
    assign rx1868_cstack, $I18
  rx1868_jump4084:
    jump $I19
  rx1868_done4081:
    rx1868_cur."!cursor_fail"()
    .return (rx1868_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<gt>" :subid("cuid_208_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1395
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1872_start
    .local string rx1872_tgt
    .local int rx1872_pos
    .local int rx1872_off
    .local int rx1872_eos
    .local int rx1872_rep
    .local pmc rx1872_cur
    .local pmc rx1872_curclass
    .local pmc rx1872_bstack
    .local pmc rx1872_cstack
    rx1872_start = self."!cursor_start_all"()
    set rx1872_cur, rx1872_start[0]
    set rx1872_tgt, rx1872_start[1]
    set rx1872_pos, rx1872_start[2]
    set rx1872_curclass, rx1872_start[3]
    set rx1872_bstack, rx1872_start[4]
    set $I19, rx1872_start[5]
    store_lex unicode:"$\x{a2}", rx1872_cur
    length rx1872_eos, rx1872_tgt
    eq $I19, 1, rx1872_restart4095
    gt rx1872_pos, rx1872_eos, rx1872_fail4096
    repr_get_attr_int $I11, self, rx1872_curclass, "$!from"
    ne $I11, -1, rxscan1873_done4102
    goto rxscan1873_scan4101
  rxscan1873_loop4100:
    inc rx1872_pos
    gt rx1872_pos, rx1872_eos, rx1872_fail4096
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!from", rx1872_pos
  rxscan1873_scan4101:
    nqp_rxmark rx1872_bstack, rxscan1873_loop4100, rx1872_pos, 0
  rxscan1873_done4102:
    nqp_rxmark rx1872_bstack, rxcap1874_fail4104, rx1872_pos, 0
    add $I11, rx1872_pos, 2
    gt $I11, rx1872_eos, rx1872_fail4096
    substr $S10, rx1872_tgt, rx1872_pos, 2
    ne $S10, ucs4:"gt", rx1872_fail4096
    add rx1872_pos, 2
    nqp_rxpeek $I19, rx1872_bstack, rxcap1874_fail4104
    inc $I19
    set $I11, rx1872_bstack[$I19]
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1872_pos)
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "sym")
    goto rxcap1874_done4103
  rxcap1874_fail4104:
    goto rx1872_fail4096
  rxcap1874_done4103:
    repr_bind_attr_int rx1872_cur, rx1872_curclass, "$!pos", rx1872_pos
    $P11 = rx1872_cur."O"("%relational, :op<isgt_s>")
    repr_get_attr_int $I11, $P11, rx1872_curclass, "$!pos"
    lt $I11, 0, rx1872_fail4096
    nqp_rxmark rx1872_bstack, rxsubrule1875_pass4105, -1, 0
  rxsubrule1875_pass4105:
    rx1872_cstack = rx1872_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1872_pos, $P11, rx1872_curclass, "$!pos"
    rx1872_cur."!cursor_pass"(rx1872_pos, "infix:sym<gt>", 'backtrack'=>1)
    .return (rx1872_cur)
  rx1872_restart4095:
    repr_get_attr_obj rx1872_cstack, rx1872_cur, rx1872_curclass, "$!cstack"
  rx1872_fail4096:
    unless rx1872_bstack, rx1872_done4094
    pop $I19, rx1872_bstack
    if_null rx1872_cstack, rx1872_cstack_done4099
    unless rx1872_cstack, rx1872_cstack_done4099
    dec $I19
    set $P11, rx1872_cstack[$I19]
  rx1872_cstack_done4099:
    pop rx1872_rep, rx1872_bstack
    pop rx1872_pos, rx1872_bstack
    pop $I19, rx1872_bstack
    lt rx1872_pos, -1, rx1872_done4094
    lt rx1872_pos, 0, rx1872_fail4096
    eq $I19, 0, rx1872_fail4096
    nqp_islist $I20, rx1872_cstack
    unless $I20, rx1872_jump4097
    elements $I18, rx1872_bstack
    le $I18, 0, rx1872_cut4098
    dec $I18
    set $I18, rx1872_bstack[$I18]
  rx1872_cut4098:
    assign rx1872_cstack, $I18
  rx1872_jump4097:
    jump $I19
  rx1872_done4094:
    rx1872_cur."!cursor_fail"()
    .return (rx1872_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=:=>" :subid("cuid_209_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1396
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1876_start
    .local string rx1876_tgt
    .local int rx1876_pos
    .local int rx1876_off
    .local int rx1876_eos
    .local int rx1876_rep
    .local pmc rx1876_cur
    .local pmc rx1876_curclass
    .local pmc rx1876_bstack
    .local pmc rx1876_cstack
    rx1876_start = self."!cursor_start_all"()
    set rx1876_cur, rx1876_start[0]
    set rx1876_tgt, rx1876_start[1]
    set rx1876_pos, rx1876_start[2]
    set rx1876_curclass, rx1876_start[3]
    set rx1876_bstack, rx1876_start[4]
    set $I19, rx1876_start[5]
    store_lex unicode:"$\x{a2}", rx1876_cur
    length rx1876_eos, rx1876_tgt
    eq $I19, 1, rx1876_restart4108
    gt rx1876_pos, rx1876_eos, rx1876_fail4109
    repr_get_attr_int $I11, self, rx1876_curclass, "$!from"
    ne $I11, -1, rxscan1877_done4115
    goto rxscan1877_scan4114
  rxscan1877_loop4113:
    inc rx1876_pos
    gt rx1876_pos, rx1876_eos, rx1876_fail4109
    repr_bind_attr_int rx1876_cur, rx1876_curclass, "$!from", rx1876_pos
  rxscan1877_scan4114:
    nqp_rxmark rx1876_bstack, rxscan1877_loop4113, rx1876_pos, 0
  rxscan1877_done4115:
    nqp_rxmark rx1876_bstack, rxcap1878_fail4117, rx1876_pos, 0
    add $I11, rx1876_pos, 3
    gt $I11, rx1876_eos, rx1876_fail4109
    substr $S10, rx1876_tgt, rx1876_pos, 3
    ne $S10, ucs4:"=:=", rx1876_fail4109
    add rx1876_pos, 3
    nqp_rxpeek $I19, rx1876_bstack, rxcap1878_fail4117
    inc $I19
    set $I11, rx1876_bstack[$I19]
    repr_bind_attr_int rx1876_cur, rx1876_curclass, "$!pos", rx1876_pos
    $P11 = rx1876_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1876_pos)
    rx1876_cstack = rx1876_cur."!cursor_capture"($P11, "sym")
    goto rxcap1878_done4116
  rxcap1878_fail4117:
    goto rx1876_fail4109
  rxcap1878_done4116:
    repr_bind_attr_int rx1876_cur, rx1876_curclass, "$!pos", rx1876_pos
    $P11 = rx1876_cur."O"("%relational, :op<eqaddr>")
    repr_get_attr_int $I11, $P11, rx1876_curclass, "$!pos"
    lt $I11, 0, rx1876_fail4109
    nqp_rxmark rx1876_bstack, rxsubrule1879_pass4118, -1, 0
  rxsubrule1879_pass4118:
    rx1876_cstack = rx1876_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1876_pos, $P11, rx1876_curclass, "$!pos"
    rx1876_cur."!cursor_pass"(rx1876_pos, "infix:sym<=:=>", 'backtrack'=>1)
    .return (rx1876_cur)
  rx1876_restart4108:
    repr_get_attr_obj rx1876_cstack, rx1876_cur, rx1876_curclass, "$!cstack"
  rx1876_fail4109:
    unless rx1876_bstack, rx1876_done4107
    pop $I19, rx1876_bstack
    if_null rx1876_cstack, rx1876_cstack_done4112
    unless rx1876_cstack, rx1876_cstack_done4112
    dec $I19
    set $P11, rx1876_cstack[$I19]
  rx1876_cstack_done4112:
    pop rx1876_rep, rx1876_bstack
    pop rx1876_pos, rx1876_bstack
    pop $I19, rx1876_bstack
    lt rx1876_pos, -1, rx1876_done4107
    lt rx1876_pos, 0, rx1876_fail4109
    eq $I19, 0, rx1876_fail4109
    nqp_islist $I20, rx1876_cstack
    unless $I20, rx1876_jump4110
    elements $I18, rx1876_bstack
    le $I18, 0, rx1876_cut4111
    dec $I18
    set $I18, rx1876_bstack[$I18]
  rx1876_cut4111:
    assign rx1876_cstack, $I18
  rx1876_jump4110:
    jump $I19
  rx1876_done4107:
    rx1876_cur."!cursor_fail"()
    .return (rx1876_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_210_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1397
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1880_start
    .local string rx1880_tgt
    .local int rx1880_pos
    .local int rx1880_off
    .local int rx1880_eos
    .local int rx1880_rep
    .local pmc rx1880_cur
    .local pmc rx1880_curclass
    .local pmc rx1880_bstack
    .local pmc rx1880_cstack
    rx1880_start = self."!cursor_start_all"()
    set rx1880_cur, rx1880_start[0]
    set rx1880_tgt, rx1880_start[1]
    set rx1880_pos, rx1880_start[2]
    set rx1880_curclass, rx1880_start[3]
    set rx1880_bstack, rx1880_start[4]
    set $I19, rx1880_start[5]
    store_lex unicode:"$\x{a2}", rx1880_cur
    length rx1880_eos, rx1880_tgt
    eq $I19, 1, rx1880_restart4121
    gt rx1880_pos, rx1880_eos, rx1880_fail4122
    repr_get_attr_int $I11, self, rx1880_curclass, "$!from"
    ne $I11, -1, rxscan1881_done4128
    goto rxscan1881_scan4127
  rxscan1881_loop4126:
    inc rx1880_pos
    gt rx1880_pos, rx1880_eos, rx1880_fail4122
    repr_bind_attr_int rx1880_cur, rx1880_curclass, "$!from", rx1880_pos
  rxscan1881_scan4127:
    nqp_rxmark rx1880_bstack, rxscan1881_loop4126, rx1880_pos, 0
  rxscan1881_done4128:
    nqp_rxmark rx1880_bstack, rxcap1882_fail4130, rx1880_pos, 0
    add $I11, rx1880_pos, 2
    gt $I11, rx1880_eos, rx1880_fail4122
    substr $S10, rx1880_tgt, rx1880_pos, 2
    ne $S10, ucs4:"~~", rx1880_fail4122
    add rx1880_pos, 2
    nqp_rxpeek $I19, rx1880_bstack, rxcap1882_fail4130
    inc $I19
    set $I11, rx1880_bstack[$I19]
    repr_bind_attr_int rx1880_cur, rx1880_curclass, "$!pos", rx1880_pos
    $P11 = rx1880_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1880_pos)
    rx1880_cstack = rx1880_cur."!cursor_capture"($P11, "sym")
    goto rxcap1882_done4129
  rxcap1882_fail4130:
    goto rx1880_fail4122
  rxcap1882_done4129:
    repr_bind_attr_int rx1880_cur, rx1880_curclass, "$!pos", rx1880_pos
    $P11 = rx1880_cur."O"("%relational, :reducecheck<smartmatch>")
    repr_get_attr_int $I11, $P11, rx1880_curclass, "$!pos"
    lt $I11, 0, rx1880_fail4122
    nqp_rxmark rx1880_bstack, rxsubrule1883_pass4131, -1, 0
  rxsubrule1883_pass4131:
    rx1880_cstack = rx1880_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1880_pos, $P11, rx1880_curclass, "$!pos"
    rx1880_cur."!cursor_pass"(rx1880_pos, "infix:sym<~~>", 'backtrack'=>1)
    .return (rx1880_cur)
  rx1880_restart4121:
    repr_get_attr_obj rx1880_cstack, rx1880_cur, rx1880_curclass, "$!cstack"
  rx1880_fail4122:
    unless rx1880_bstack, rx1880_done4120
    pop $I19, rx1880_bstack
    if_null rx1880_cstack, rx1880_cstack_done4125
    unless rx1880_cstack, rx1880_cstack_done4125
    dec $I19
    set $P11, rx1880_cstack[$I19]
  rx1880_cstack_done4125:
    pop rx1880_rep, rx1880_bstack
    pop rx1880_pos, rx1880_bstack
    pop $I19, rx1880_bstack
    lt rx1880_pos, -1, rx1880_done4120
    lt rx1880_pos, 0, rx1880_fail4122
    eq $I19, 0, rx1880_fail4122
    nqp_islist $I20, rx1880_cstack
    unless $I20, rx1880_jump4123
    elements $I18, rx1880_bstack
    le $I18, 0, rx1880_cut4124
    dec $I18
    set $I18, rx1880_bstack[$I18]
  rx1880_cut4124:
    assign rx1880_cstack, $I18
  rx1880_jump4123:
    jump $I19
  rx1880_done4120:
    rx1880_cur."!cursor_fail"()
    .return (rx1880_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<&&>" :subid("cuid_211_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1399
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1884_start
    .local string rx1884_tgt
    .local int rx1884_pos
    .local int rx1884_off
    .local int rx1884_eos
    .local int rx1884_rep
    .local pmc rx1884_cur
    .local pmc rx1884_curclass
    .local pmc rx1884_bstack
    .local pmc rx1884_cstack
    rx1884_start = self."!cursor_start_all"()
    set rx1884_cur, rx1884_start[0]
    set rx1884_tgt, rx1884_start[1]
    set rx1884_pos, rx1884_start[2]
    set rx1884_curclass, rx1884_start[3]
    set rx1884_bstack, rx1884_start[4]
    set $I19, rx1884_start[5]
    store_lex unicode:"$\x{a2}", rx1884_cur
    length rx1884_eos, rx1884_tgt
    eq $I19, 1, rx1884_restart4134
    gt rx1884_pos, rx1884_eos, rx1884_fail4135
    repr_get_attr_int $I11, self, rx1884_curclass, "$!from"
    ne $I11, -1, rxscan1885_done4141
    goto rxscan1885_scan4140
  rxscan1885_loop4139:
    inc rx1884_pos
    gt rx1884_pos, rx1884_eos, rx1884_fail4135
    repr_bind_attr_int rx1884_cur, rx1884_curclass, "$!from", rx1884_pos
  rxscan1885_scan4140:
    nqp_rxmark rx1884_bstack, rxscan1885_loop4139, rx1884_pos, 0
  rxscan1885_done4141:
    nqp_rxmark rx1884_bstack, rxcap1886_fail4143, rx1884_pos, 0
    add $I11, rx1884_pos, 2
    gt $I11, rx1884_eos, rx1884_fail4135
    substr $S10, rx1884_tgt, rx1884_pos, 2
    ne $S10, ucs4:"&&", rx1884_fail4135
    add rx1884_pos, 2
    nqp_rxpeek $I19, rx1884_bstack, rxcap1886_fail4143
    inc $I19
    set $I11, rx1884_bstack[$I19]
    repr_bind_attr_int rx1884_cur, rx1884_curclass, "$!pos", rx1884_pos
    $P11 = rx1884_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1884_pos)
    rx1884_cstack = rx1884_cur."!cursor_capture"($P11, "sym")
    goto rxcap1886_done4142
  rxcap1886_fail4143:
    goto rx1884_fail4135
  rxcap1886_done4142:
    repr_bind_attr_int rx1884_cur, rx1884_curclass, "$!pos", rx1884_pos
    $P11 = rx1884_cur."O"("%tight_and, :op<if>")
    repr_get_attr_int $I11, $P11, rx1884_curclass, "$!pos"
    lt $I11, 0, rx1884_fail4135
    nqp_rxmark rx1884_bstack, rxsubrule1887_pass4144, -1, 0
  rxsubrule1887_pass4144:
    rx1884_cstack = rx1884_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1884_pos, $P11, rx1884_curclass, "$!pos"
    rx1884_cur."!cursor_pass"(rx1884_pos, "infix:sym<&&>", 'backtrack'=>1)
    .return (rx1884_cur)
  rx1884_restart4134:
    repr_get_attr_obj rx1884_cstack, rx1884_cur, rx1884_curclass, "$!cstack"
  rx1884_fail4135:
    unless rx1884_bstack, rx1884_done4133
    pop $I19, rx1884_bstack
    if_null rx1884_cstack, rx1884_cstack_done4138
    unless rx1884_cstack, rx1884_cstack_done4138
    dec $I19
    set $P11, rx1884_cstack[$I19]
  rx1884_cstack_done4138:
    pop rx1884_rep, rx1884_bstack
    pop rx1884_pos, rx1884_bstack
    pop $I19, rx1884_bstack
    lt rx1884_pos, -1, rx1884_done4133
    lt rx1884_pos, 0, rx1884_fail4135
    eq $I19, 0, rx1884_fail4135
    nqp_islist $I20, rx1884_cstack
    unless $I20, rx1884_jump4136
    elements $I18, rx1884_bstack
    le $I18, 0, rx1884_cut4137
    dec $I18
    set $I18, rx1884_bstack[$I18]
  rx1884_cut4137:
    assign rx1884_cstack, $I18
  rx1884_jump4136:
    jump $I19
  rx1884_done4133:
    rx1884_cur."!cursor_fail"()
    .return (rx1884_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<||>" :subid("cuid_212_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1401
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1888_start
    .local string rx1888_tgt
    .local int rx1888_pos
    .local int rx1888_off
    .local int rx1888_eos
    .local int rx1888_rep
    .local pmc rx1888_cur
    .local pmc rx1888_curclass
    .local pmc rx1888_bstack
    .local pmc rx1888_cstack
    rx1888_start = self."!cursor_start_all"()
    set rx1888_cur, rx1888_start[0]
    set rx1888_tgt, rx1888_start[1]
    set rx1888_pos, rx1888_start[2]
    set rx1888_curclass, rx1888_start[3]
    set rx1888_bstack, rx1888_start[4]
    set $I19, rx1888_start[5]
    store_lex unicode:"$\x{a2}", rx1888_cur
    length rx1888_eos, rx1888_tgt
    eq $I19, 1, rx1888_restart4147
    gt rx1888_pos, rx1888_eos, rx1888_fail4148
    repr_get_attr_int $I11, self, rx1888_curclass, "$!from"
    ne $I11, -1, rxscan1889_done4154
    goto rxscan1889_scan4153
  rxscan1889_loop4152:
    inc rx1888_pos
    gt rx1888_pos, rx1888_eos, rx1888_fail4148
    repr_bind_attr_int rx1888_cur, rx1888_curclass, "$!from", rx1888_pos
  rxscan1889_scan4153:
    nqp_rxmark rx1888_bstack, rxscan1889_loop4152, rx1888_pos, 0
  rxscan1889_done4154:
    nqp_rxmark rx1888_bstack, rxcap1890_fail4156, rx1888_pos, 0
    add $I11, rx1888_pos, 2
    gt $I11, rx1888_eos, rx1888_fail4148
    substr $S10, rx1888_tgt, rx1888_pos, 2
    ne $S10, ucs4:"||", rx1888_fail4148
    add rx1888_pos, 2
    nqp_rxpeek $I19, rx1888_bstack, rxcap1890_fail4156
    inc $I19
    set $I11, rx1888_bstack[$I19]
    repr_bind_attr_int rx1888_cur, rx1888_curclass, "$!pos", rx1888_pos
    $P11 = rx1888_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1888_pos)
    rx1888_cstack = rx1888_cur."!cursor_capture"($P11, "sym")
    goto rxcap1890_done4155
  rxcap1890_fail4156:
    goto rx1888_fail4148
  rxcap1890_done4155:
    repr_bind_attr_int rx1888_cur, rx1888_curclass, "$!pos", rx1888_pos
    $P11 = rx1888_cur."O"("%tight_or, :op<unless>")
    repr_get_attr_int $I11, $P11, rx1888_curclass, "$!pos"
    lt $I11, 0, rx1888_fail4148
    nqp_rxmark rx1888_bstack, rxsubrule1891_pass4157, -1, 0
  rxsubrule1891_pass4157:
    rx1888_cstack = rx1888_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1888_pos, $P11, rx1888_curclass, "$!pos"
    rx1888_cur."!cursor_pass"(rx1888_pos, "infix:sym<||>", 'backtrack'=>1)
    .return (rx1888_cur)
  rx1888_restart4147:
    repr_get_attr_obj rx1888_cstack, rx1888_cur, rx1888_curclass, "$!cstack"
  rx1888_fail4148:
    unless rx1888_bstack, rx1888_done4146
    pop $I19, rx1888_bstack
    if_null rx1888_cstack, rx1888_cstack_done4151
    unless rx1888_cstack, rx1888_cstack_done4151
    dec $I19
    set $P11, rx1888_cstack[$I19]
  rx1888_cstack_done4151:
    pop rx1888_rep, rx1888_bstack
    pop rx1888_pos, rx1888_bstack
    pop $I19, rx1888_bstack
    lt rx1888_pos, -1, rx1888_done4146
    lt rx1888_pos, 0, rx1888_fail4148
    eq $I19, 0, rx1888_fail4148
    nqp_islist $I20, rx1888_cstack
    unless $I20, rx1888_jump4149
    elements $I18, rx1888_bstack
    le $I18, 0, rx1888_cut4150
    dec $I18
    set $I18, rx1888_bstack[$I18]
  rx1888_cut4150:
    assign rx1888_cstack, $I18
  rx1888_jump4149:
    jump $I19
  rx1888_done4146:
    rx1888_cur."!cursor_fail"()
    .return (rx1888_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<//>" :subid("cuid_213_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1402
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1892_start
    .local string rx1892_tgt
    .local int rx1892_pos
    .local int rx1892_off
    .local int rx1892_eos
    .local int rx1892_rep
    .local pmc rx1892_cur
    .local pmc rx1892_curclass
    .local pmc rx1892_bstack
    .local pmc rx1892_cstack
    rx1892_start = self."!cursor_start_all"()
    set rx1892_cur, rx1892_start[0]
    set rx1892_tgt, rx1892_start[1]
    set rx1892_pos, rx1892_start[2]
    set rx1892_curclass, rx1892_start[3]
    set rx1892_bstack, rx1892_start[4]
    set $I19, rx1892_start[5]
    store_lex unicode:"$\x{a2}", rx1892_cur
    length rx1892_eos, rx1892_tgt
    eq $I19, 1, rx1892_restart4160
    gt rx1892_pos, rx1892_eos, rx1892_fail4161
    repr_get_attr_int $I11, self, rx1892_curclass, "$!from"
    ne $I11, -1, rxscan1893_done4167
    goto rxscan1893_scan4166
  rxscan1893_loop4165:
    inc rx1892_pos
    gt rx1892_pos, rx1892_eos, rx1892_fail4161
    repr_bind_attr_int rx1892_cur, rx1892_curclass, "$!from", rx1892_pos
  rxscan1893_scan4166:
    nqp_rxmark rx1892_bstack, rxscan1893_loop4165, rx1892_pos, 0
  rxscan1893_done4167:
    nqp_rxmark rx1892_bstack, rxcap1894_fail4169, rx1892_pos, 0
    add $I11, rx1892_pos, 2
    gt $I11, rx1892_eos, rx1892_fail4161
    substr $S10, rx1892_tgt, rx1892_pos, 2
    ne $S10, ucs4:"//", rx1892_fail4161
    add rx1892_pos, 2
    nqp_rxpeek $I19, rx1892_bstack, rxcap1894_fail4169
    inc $I19
    set $I11, rx1892_bstack[$I19]
    repr_bind_attr_int rx1892_cur, rx1892_curclass, "$!pos", rx1892_pos
    $P11 = rx1892_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1892_pos)
    rx1892_cstack = rx1892_cur."!cursor_capture"($P11, "sym")
    goto rxcap1894_done4168
  rxcap1894_fail4169:
    goto rx1892_fail4161
  rxcap1894_done4168:
    repr_bind_attr_int rx1892_cur, rx1892_curclass, "$!pos", rx1892_pos
    $P11 = rx1892_cur."O"("%tight_or, :op<defor>")
    repr_get_attr_int $I11, $P11, rx1892_curclass, "$!pos"
    lt $I11, 0, rx1892_fail4161
    nqp_rxmark rx1892_bstack, rxsubrule1895_pass4170, -1, 0
  rxsubrule1895_pass4170:
    rx1892_cstack = rx1892_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1892_pos, $P11, rx1892_curclass, "$!pos"
    rx1892_cur."!cursor_pass"(rx1892_pos, "infix:sym<//>", 'backtrack'=>1)
    .return (rx1892_cur)
  rx1892_restart4160:
    repr_get_attr_obj rx1892_cstack, rx1892_cur, rx1892_curclass, "$!cstack"
  rx1892_fail4161:
    unless rx1892_bstack, rx1892_done4159
    pop $I19, rx1892_bstack
    if_null rx1892_cstack, rx1892_cstack_done4164
    unless rx1892_cstack, rx1892_cstack_done4164
    dec $I19
    set $P11, rx1892_cstack[$I19]
  rx1892_cstack_done4164:
    pop rx1892_rep, rx1892_bstack
    pop rx1892_pos, rx1892_bstack
    pop $I19, rx1892_bstack
    lt rx1892_pos, -1, rx1892_done4159
    lt rx1892_pos, 0, rx1892_fail4161
    eq $I19, 0, rx1892_fail4161
    nqp_islist $I20, rx1892_cstack
    unless $I20, rx1892_jump4162
    elements $I18, rx1892_bstack
    le $I18, 0, rx1892_cut4163
    dec $I18
    set $I18, rx1892_bstack[$I18]
  rx1892_cut4163:
    assign rx1892_cstack, $I18
  rx1892_jump4162:
    jump $I19
  rx1892_done4159:
    rx1892_cur."!cursor_fail"()
    .return (rx1892_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<?? !!>" :subid("cuid_214_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1404
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1896_start
    .local string rx1896_tgt
    .local int rx1896_pos
    .local int rx1896_off
    .local int rx1896_eos
    .local int rx1896_rep
    .local pmc rx1896_cur
    .local pmc rx1896_curclass
    .local pmc rx1896_bstack
    .local pmc rx1896_cstack
    rx1896_start = self."!cursor_start_all"()
    set rx1896_cur, rx1896_start[0]
    set rx1896_tgt, rx1896_start[1]
    set rx1896_pos, rx1896_start[2]
    set rx1896_curclass, rx1896_start[3]
    set rx1896_bstack, rx1896_start[4]
    set $I19, rx1896_start[5]
    store_lex unicode:"$\x{a2}", rx1896_cur
    length rx1896_eos, rx1896_tgt
    eq $I19, 1, rx1896_restart4173
    gt rx1896_pos, rx1896_eos, rx1896_fail4174
    repr_get_attr_int $I11, self, rx1896_curclass, "$!from"
    ne $I11, -1, rxscan1897_done4180
    goto rxscan1897_scan4179
  rxscan1897_loop4178:
    inc rx1896_pos
    gt rx1896_pos, rx1896_eos, rx1896_fail4174
    repr_bind_attr_int rx1896_cur, rx1896_curclass, "$!from", rx1896_pos
  rxscan1897_scan4179:
    nqp_rxmark rx1896_bstack, rxscan1897_loop4178, rx1896_pos, 0
  rxscan1897_done4180:
    add $I11, rx1896_pos, 2
    gt $I11, rx1896_eos, rx1896_fail4174
    substr $S10, rx1896_tgt, rx1896_pos, 2
    ne $S10, ucs4:"??", rx1896_fail4174
    add rx1896_pos, 2
    repr_bind_attr_int rx1896_cur, rx1896_curclass, "$!pos", rx1896_pos
    $P11 = rx1896_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1896_curclass, "$!pos"
    lt $I11, 0, rx1896_fail4174
    repr_get_attr_int rx1896_pos, $P11, rx1896_curclass, "$!pos"
    repr_bind_attr_int rx1896_cur, rx1896_curclass, "$!pos", rx1896_pos
    $P11 = rx1896_cur."EXPR"("i=")
    repr_get_attr_int $I11, $P11, rx1896_curclass, "$!pos"
    lt $I11, 0, rx1896_fail4174
    nqp_rxmark rx1896_bstack, rxsubrule1899_pass4182, -1, 0
  rxsubrule1899_pass4182:
    rx1896_cstack = rx1896_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx1896_pos, $P11, rx1896_curclass, "$!pos"
    add $I11, rx1896_pos, 2
    gt $I11, rx1896_eos, rx1896_fail4174
    substr $S10, rx1896_tgt, rx1896_pos, 2
    ne $S10, ucs4:"!!", rx1896_fail4174
    add rx1896_pos, 2
    repr_bind_attr_int rx1896_cur, rx1896_curclass, "$!pos", rx1896_pos
    $P11 = rx1896_cur."O"("%conditional, :reducecheck<ternary>, :op<if>")
    repr_get_attr_int $I11, $P11, rx1896_curclass, "$!pos"
    lt $I11, 0, rx1896_fail4174
    nqp_rxmark rx1896_bstack, rxsubrule1900_pass4183, -1, 0
  rxsubrule1900_pass4183:
    rx1896_cstack = rx1896_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1896_pos, $P11, rx1896_curclass, "$!pos"
    rx1896_cur."!cursor_pass"(rx1896_pos, "infix:sym<?? !!>", 'backtrack'=>1)
    .return (rx1896_cur)
  rx1896_restart4173:
    repr_get_attr_obj rx1896_cstack, rx1896_cur, rx1896_curclass, "$!cstack"
  rx1896_fail4174:
    unless rx1896_bstack, rx1896_done4172
    pop $I19, rx1896_bstack
    if_null rx1896_cstack, rx1896_cstack_done4177
    unless rx1896_cstack, rx1896_cstack_done4177
    dec $I19
    set $P11, rx1896_cstack[$I19]
  rx1896_cstack_done4177:
    pop rx1896_rep, rx1896_bstack
    pop rx1896_pos, rx1896_bstack
    pop $I19, rx1896_bstack
    lt rx1896_pos, -1, rx1896_done4172
    lt rx1896_pos, 0, rx1896_fail4174
    eq $I19, 0, rx1896_fail4174
    nqp_islist $I20, rx1896_cstack
    unless $I20, rx1896_jump4175
    elements $I18, rx1896_bstack
    le $I18, 0, rx1896_cut4176
    dec $I18
    set $I18, rx1896_bstack[$I18]
  rx1896_cut4176:
    assign rx1896_cstack, $I18
  rx1896_jump4175:
    jump $I19
  rx1896_done4172:
    rx1896_cur."!cursor_fail"()
    .return (rx1896_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<=>" :subid("cuid_215_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1412
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1901_start
    .local string rx1901_tgt
    .local int rx1901_pos
    .local int rx1901_off
    .local int rx1901_eos
    .local int rx1901_rep
    .local pmc rx1901_cur
    .local pmc rx1901_curclass
    .local pmc rx1901_bstack
    .local pmc rx1901_cstack
    rx1901_start = self."!cursor_start_all"()
    set rx1901_cur, rx1901_start[0]
    set rx1901_tgt, rx1901_start[1]
    set rx1901_pos, rx1901_start[2]
    set rx1901_curclass, rx1901_start[3]
    set rx1901_bstack, rx1901_start[4]
    set $I19, rx1901_start[5]
    store_lex unicode:"$\x{a2}", rx1901_cur
    length rx1901_eos, rx1901_tgt
    eq $I19, 1, rx1901_restart4186
    gt rx1901_pos, rx1901_eos, rx1901_fail4187
    repr_get_attr_int $I11, self, rx1901_curclass, "$!from"
    ne $I11, -1, rxscan1902_done4193
    goto rxscan1902_scan4192
  rxscan1902_loop4191:
    inc rx1901_pos
    gt rx1901_pos, rx1901_eos, rx1901_fail4187
    repr_bind_attr_int rx1901_cur, rx1901_curclass, "$!from", rx1901_pos
  rxscan1902_scan4192:
    nqp_rxmark rx1901_bstack, rxscan1902_loop4191, rx1901_pos, 0
  rxscan1902_done4193:
    nqp_rxmark rx1901_bstack, rxcap1903_fail4195, rx1901_pos, 0
    add $I11, rx1901_pos, 1
    gt $I11, rx1901_eos, rx1901_fail4187
    substr $S10, rx1901_tgt, rx1901_pos, 1
    ne $S10, ucs4:"=", rx1901_fail4187
    add rx1901_pos, 1
    nqp_rxpeek $I19, rx1901_bstack, rxcap1903_fail4195
    inc $I19
    set $I11, rx1901_bstack[$I19]
    repr_bind_attr_int rx1901_cur, rx1901_curclass, "$!pos", rx1901_pos
    $P11 = rx1901_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1901_pos)
    rx1901_cstack = rx1901_cur."!cursor_capture"($P11, "sym")
    goto rxcap1903_done4194
  rxcap1903_fail4195:
    goto rx1901_fail4187
  rxcap1903_done4194:
    repr_bind_attr_int rx1901_cur, rx1901_curclass, "$!pos", rx1901_pos
    $P11 = rx1901_cur."panic"("Assignment (\"=\") not supported in NQP, use \":=\" instead")
    repr_get_attr_int $I11, $P11, rx1901_curclass, "$!pos"
    lt $I11, 0, rx1901_fail4187
    repr_get_attr_int rx1901_pos, $P11, rx1901_curclass, "$!pos"
    rx1901_cur."!cursor_pass"(rx1901_pos, "infix:sym<=>", 'backtrack'=>1)
    .return (rx1901_cur)
  rx1901_restart4186:
    repr_get_attr_obj rx1901_cstack, rx1901_cur, rx1901_curclass, "$!cstack"
  rx1901_fail4187:
    unless rx1901_bstack, rx1901_done4185
    pop $I19, rx1901_bstack
    if_null rx1901_cstack, rx1901_cstack_done4190
    unless rx1901_cstack, rx1901_cstack_done4190
    dec $I19
    set $P11, rx1901_cstack[$I19]
  rx1901_cstack_done4190:
    pop rx1901_rep, rx1901_bstack
    pop rx1901_pos, rx1901_bstack
    pop $I19, rx1901_bstack
    lt rx1901_pos, -1, rx1901_done4185
    lt rx1901_pos, 0, rx1901_fail4187
    eq $I19, 0, rx1901_fail4187
    nqp_islist $I20, rx1901_cstack
    unless $I20, rx1901_jump4188
    elements $I18, rx1901_bstack
    le $I18, 0, rx1901_cut4189
    dec $I18
    set $I18, rx1901_bstack[$I18]
  rx1901_cut4189:
    assign rx1901_cstack, $I18
  rx1901_jump4188:
    jump $I19
  rx1901_done4185:
    rx1901_cur."!cursor_fail"()
    .return (rx1901_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<:=>" :subid("cuid_216_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1415
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1905_start
    .local string rx1905_tgt
    .local int rx1905_pos
    .local int rx1905_off
    .local int rx1905_eos
    .local int rx1905_rep
    .local pmc rx1905_cur
    .local pmc rx1905_curclass
    .local pmc rx1905_bstack
    .local pmc rx1905_cstack
    rx1905_start = self."!cursor_start_all"()
    set rx1905_cur, rx1905_start[0]
    set rx1905_tgt, rx1905_start[1]
    set rx1905_pos, rx1905_start[2]
    set rx1905_curclass, rx1905_start[3]
    set rx1905_bstack, rx1905_start[4]
    set $I19, rx1905_start[5]
    store_lex unicode:"$\x{a2}", rx1905_cur
    length rx1905_eos, rx1905_tgt
    eq $I19, 1, rx1905_restart4199
    gt rx1905_pos, rx1905_eos, rx1905_fail4200
    repr_get_attr_int $I11, self, rx1905_curclass, "$!from"
    ne $I11, -1, rxscan1906_done4206
    goto rxscan1906_scan4205
  rxscan1906_loop4204:
    inc rx1905_pos
    gt rx1905_pos, rx1905_eos, rx1905_fail4200
    repr_bind_attr_int rx1905_cur, rx1905_curclass, "$!from", rx1905_pos
  rxscan1906_scan4205:
    nqp_rxmark rx1905_bstack, rxscan1906_loop4204, rx1905_pos, 0
  rxscan1906_done4206:
    nqp_rxmark rx1905_bstack, rxcap1907_fail4208, rx1905_pos, 0
    add $I11, rx1905_pos, 2
    gt $I11, rx1905_eos, rx1905_fail4200
    substr $S10, rx1905_tgt, rx1905_pos, 2
    ne $S10, ucs4:":=", rx1905_fail4200
    add rx1905_pos, 2
    nqp_rxpeek $I19, rx1905_bstack, rxcap1907_fail4208
    inc $I19
    set $I11, rx1905_bstack[$I19]
    repr_bind_attr_int rx1905_cur, rx1905_curclass, "$!pos", rx1905_pos
    $P11 = rx1905_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1905_pos)
    rx1905_cstack = rx1905_cur."!cursor_capture"($P11, "sym")
    goto rxcap1907_done4207
  rxcap1907_fail4208:
    goto rx1905_fail4200
  rxcap1907_done4207:
    repr_bind_attr_int rx1905_cur, rx1905_curclass, "$!pos", rx1905_pos
    $P11 = rx1905_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1905_curclass, "$!pos"
    lt $I11, 0, rx1905_fail4200
    nqp_rxmark rx1905_bstack, rxsubrule1908_pass4209, -1, 0
  rxsubrule1908_pass4209:
    rx1905_cstack = rx1905_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1905_pos, $P11, rx1905_curclass, "$!pos"
    rx1905_cur."!cursor_pass"(rx1905_pos, "infix:sym<:=>", 'backtrack'=>1)
    .return (rx1905_cur)
  rx1905_restart4199:
    repr_get_attr_obj rx1905_cstack, rx1905_cur, rx1905_curclass, "$!cstack"
  rx1905_fail4200:
    unless rx1905_bstack, rx1905_done4198
    pop $I19, rx1905_bstack
    if_null rx1905_cstack, rx1905_cstack_done4203
    unless rx1905_cstack, rx1905_cstack_done4203
    dec $I19
    set $P11, rx1905_cstack[$I19]
  rx1905_cstack_done4203:
    pop rx1905_rep, rx1905_bstack
    pop rx1905_pos, rx1905_bstack
    pop $I19, rx1905_bstack
    lt rx1905_pos, -1, rx1905_done4198
    lt rx1905_pos, 0, rx1905_fail4200
    eq $I19, 0, rx1905_fail4200
    nqp_islist $I20, rx1905_cstack
    unless $I20, rx1905_jump4201
    elements $I18, rx1905_bstack
    le $I18, 0, rx1905_cut4202
    dec $I18
    set $I18, rx1905_bstack[$I18]
  rx1905_cut4202:
    assign rx1905_cstack, $I18
  rx1905_jump4201:
    jump $I19
  rx1905_done4198:
    rx1905_cur."!cursor_fail"()
    .return (rx1905_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<::=>" :subid("cuid_217_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1416
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1909_start
    .local string rx1909_tgt
    .local int rx1909_pos
    .local int rx1909_off
    .local int rx1909_eos
    .local int rx1909_rep
    .local pmc rx1909_cur
    .local pmc rx1909_curclass
    .local pmc rx1909_bstack
    .local pmc rx1909_cstack
    rx1909_start = self."!cursor_start_all"()
    set rx1909_cur, rx1909_start[0]
    set rx1909_tgt, rx1909_start[1]
    set rx1909_pos, rx1909_start[2]
    set rx1909_curclass, rx1909_start[3]
    set rx1909_bstack, rx1909_start[4]
    set $I19, rx1909_start[5]
    store_lex unicode:"$\x{a2}", rx1909_cur
    length rx1909_eos, rx1909_tgt
    eq $I19, 1, rx1909_restart4212
    gt rx1909_pos, rx1909_eos, rx1909_fail4213
    repr_get_attr_int $I11, self, rx1909_curclass, "$!from"
    ne $I11, -1, rxscan1910_done4219
    goto rxscan1910_scan4218
  rxscan1910_loop4217:
    inc rx1909_pos
    gt rx1909_pos, rx1909_eos, rx1909_fail4213
    repr_bind_attr_int rx1909_cur, rx1909_curclass, "$!from", rx1909_pos
  rxscan1910_scan4218:
    nqp_rxmark rx1909_bstack, rxscan1910_loop4217, rx1909_pos, 0
  rxscan1910_done4219:
    nqp_rxmark rx1909_bstack, rxcap1911_fail4221, rx1909_pos, 0
    add $I11, rx1909_pos, 3
    gt $I11, rx1909_eos, rx1909_fail4213
    substr $S10, rx1909_tgt, rx1909_pos, 3
    ne $S10, ucs4:"::=", rx1909_fail4213
    add rx1909_pos, 3
    nqp_rxpeek $I19, rx1909_bstack, rxcap1911_fail4221
    inc $I19
    set $I11, rx1909_bstack[$I19]
    repr_bind_attr_int rx1909_cur, rx1909_curclass, "$!pos", rx1909_pos
    $P11 = rx1909_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1909_pos)
    rx1909_cstack = rx1909_cur."!cursor_capture"($P11, "sym")
    goto rxcap1911_done4220
  rxcap1911_fail4221:
    goto rx1909_fail4213
  rxcap1911_done4220:
    repr_bind_attr_int rx1909_cur, rx1909_curclass, "$!pos", rx1909_pos
    $P11 = rx1909_cur."O"("%assignment, :op<bind>")
    repr_get_attr_int $I11, $P11, rx1909_curclass, "$!pos"
    lt $I11, 0, rx1909_fail4213
    nqp_rxmark rx1909_bstack, rxsubrule1912_pass4222, -1, 0
  rxsubrule1912_pass4222:
    rx1909_cstack = rx1909_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1909_pos, $P11, rx1909_curclass, "$!pos"
    rx1909_cur."!cursor_pass"(rx1909_pos, "infix:sym<::=>", 'backtrack'=>1)
    .return (rx1909_cur)
  rx1909_restart4212:
    repr_get_attr_obj rx1909_cstack, rx1909_cur, rx1909_curclass, "$!cstack"
  rx1909_fail4213:
    unless rx1909_bstack, rx1909_done4211
    pop $I19, rx1909_bstack
    if_null rx1909_cstack, rx1909_cstack_done4216
    unless rx1909_cstack, rx1909_cstack_done4216
    dec $I19
    set $P11, rx1909_cstack[$I19]
  rx1909_cstack_done4216:
    pop rx1909_rep, rx1909_bstack
    pop rx1909_pos, rx1909_bstack
    pop $I19, rx1909_bstack
    lt rx1909_pos, -1, rx1909_done4211
    lt rx1909_pos, 0, rx1909_fail4213
    eq $I19, 0, rx1909_fail4213
    nqp_islist $I20, rx1909_cstack
    unless $I20, rx1909_jump4214
    elements $I18, rx1909_bstack
    le $I18, 0, rx1909_cut4215
    dec $I18
    set $I18, rx1909_bstack[$I18]
  rx1909_cut4215:
    assign rx1909_cstack, $I18
  rx1909_jump4214:
    jump $I19
  rx1909_done4211:
    rx1909_cur."!cursor_fail"()
    .return (rx1909_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<,>" :subid("cuid_218_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1418
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1913_start
    .local string rx1913_tgt
    .local int rx1913_pos
    .local int rx1913_off
    .local int rx1913_eos
    .local int rx1913_rep
    .local pmc rx1913_cur
    .local pmc rx1913_curclass
    .local pmc rx1913_bstack
    .local pmc rx1913_cstack
    rx1913_start = self."!cursor_start_all"()
    set rx1913_cur, rx1913_start[0]
    set rx1913_tgt, rx1913_start[1]
    set rx1913_pos, rx1913_start[2]
    set rx1913_curclass, rx1913_start[3]
    set rx1913_bstack, rx1913_start[4]
    set $I19, rx1913_start[5]
    store_lex unicode:"$\x{a2}", rx1913_cur
    length rx1913_eos, rx1913_tgt
    eq $I19, 1, rx1913_restart4225
    gt rx1913_pos, rx1913_eos, rx1913_fail4226
    repr_get_attr_int $I11, self, rx1913_curclass, "$!from"
    ne $I11, -1, rxscan1914_done4232
    goto rxscan1914_scan4231
  rxscan1914_loop4230:
    inc rx1913_pos
    gt rx1913_pos, rx1913_eos, rx1913_fail4226
    repr_bind_attr_int rx1913_cur, rx1913_curclass, "$!from", rx1913_pos
  rxscan1914_scan4231:
    nqp_rxmark rx1913_bstack, rxscan1914_loop4230, rx1913_pos, 0
  rxscan1914_done4232:
    nqp_rxmark rx1913_bstack, rxcap1915_fail4234, rx1913_pos, 0
    add $I11, rx1913_pos, 1
    gt $I11, rx1913_eos, rx1913_fail4226
    substr $S10, rx1913_tgt, rx1913_pos, 1
    ne $S10, ucs4:",", rx1913_fail4226
    add rx1913_pos, 1
    nqp_rxpeek $I19, rx1913_bstack, rxcap1915_fail4234
    inc $I19
    set $I11, rx1913_bstack[$I19]
    repr_bind_attr_int rx1913_cur, rx1913_curclass, "$!pos", rx1913_pos
    $P11 = rx1913_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1913_pos)
    rx1913_cstack = rx1913_cur."!cursor_capture"($P11, "sym")
    goto rxcap1915_done4233
  rxcap1915_fail4234:
    goto rx1913_fail4226
  rxcap1915_done4233:
    repr_bind_attr_int rx1913_cur, rx1913_curclass, "$!pos", rx1913_pos
    $P11 = rx1913_cur."O"("%comma, :op<list>")
    repr_get_attr_int $I11, $P11, rx1913_curclass, "$!pos"
    lt $I11, 0, rx1913_fail4226
    nqp_rxmark rx1913_bstack, rxsubrule1916_pass4235, -1, 0
  rxsubrule1916_pass4235:
    rx1913_cstack = rx1913_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1913_pos, $P11, rx1913_curclass, "$!pos"
    rx1913_cur."!cursor_pass"(rx1913_pos, "infix:sym<,>", 'backtrack'=>1)
    .return (rx1913_cur)
  rx1913_restart4225:
    repr_get_attr_obj rx1913_cstack, rx1913_cur, rx1913_curclass, "$!cstack"
  rx1913_fail4226:
    unless rx1913_bstack, rx1913_done4224
    pop $I19, rx1913_bstack
    if_null rx1913_cstack, rx1913_cstack_done4229
    unless rx1913_cstack, rx1913_cstack_done4229
    dec $I19
    set $P11, rx1913_cstack[$I19]
  rx1913_cstack_done4229:
    pop rx1913_rep, rx1913_bstack
    pop rx1913_pos, rx1913_bstack
    pop $I19, rx1913_bstack
    lt rx1913_pos, -1, rx1913_done4224
    lt rx1913_pos, 0, rx1913_fail4226
    eq $I19, 0, rx1913_fail4226
    nqp_islist $I20, rx1913_cstack
    unless $I20, rx1913_jump4227
    elements $I18, rx1913_bstack
    le $I18, 0, rx1913_cut4228
    dec $I18
    set $I18, rx1913_bstack[$I18]
  rx1913_cut4228:
    assign rx1913_cstack, $I18
  rx1913_jump4227:
    jump $I19
  rx1913_done4224:
    rx1913_cur."!cursor_fail"()
    .return (rx1913_cur) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_219_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1420
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_413_1361537952.49511' 
    capture_lex $P5004 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1917_start
    .local string rx1917_tgt
    .local int rx1917_pos
    .local int rx1917_off
    .local int rx1917_eos
    .local int rx1917_rep
    .local pmc rx1917_cur
    .local pmc rx1917_curclass
    .local pmc rx1917_bstack
    .local pmc rx1917_cstack
    rx1917_start = self."!cursor_start_all"()
    set rx1917_cur, rx1917_start[0]
    set rx1917_tgt, rx1917_start[1]
    set rx1917_pos, rx1917_start[2]
    set rx1917_curclass, rx1917_start[3]
    set rx1917_bstack, rx1917_start[4]
    set $I19, rx1917_start[5]
    store_lex unicode:"$\x{a2}", rx1917_cur
    length rx1917_eos, rx1917_tgt
    eq $I19, 1, rx1917_restart4238
    gt rx1917_pos, rx1917_eos, rx1917_fail4239
    repr_get_attr_int $I11, self, rx1917_curclass, "$!from"
    ne $I11, -1, rxscan1918_done4245
    goto rxscan1918_scan4244
  rxscan1918_loop4243:
    inc rx1917_pos
    gt rx1917_pos, rx1917_eos, rx1917_fail4239
    repr_bind_attr_int rx1917_cur, rx1917_curclass, "$!from", rx1917_pos
  rxscan1918_scan4244:
    nqp_rxmark rx1917_bstack, rxscan1918_loop4243, rx1917_pos, 0
  rxscan1918_done4245:
    nqp_rxmark rx1917_bstack, rxcap1919_fail4247, rx1917_pos, 0
    add $I11, rx1917_pos, 6
    gt $I11, rx1917_eos, rx1917_fail4239
    substr $S10, rx1917_tgt, rx1917_pos, 6
    ne $S10, ucs4:"return", rx1917_fail4239
    add rx1917_pos, 6
    nqp_rxpeek $I19, rx1917_bstack, rxcap1919_fail4247
    inc $I19
    set $I11, rx1917_bstack[$I19]
    repr_bind_attr_int rx1917_cur, rx1917_curclass, "$!pos", rx1917_pos
    $P11 = rx1917_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1917_pos)
    rx1917_cstack = rx1917_cur."!cursor_capture"($P11, "sym")
    goto rxcap1919_done4246
  rxcap1919_fail4247:
    goto rx1917_fail4239
  rxcap1919_done4246:
    ge rx1917_pos, rx1917_eos, rx1917_fail4239
    is_cclass $I11, .CCLASS_WHITESPACE, rx1917_tgt, rx1917_pos
    unless $I11, rx1917_fail4239
    add rx1917_pos, 1
    repr_bind_attr_int rx1917_cur, rx1917_curclass, "$!pos", rx1917_pos
    $P11 = rx1917_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1917_curclass, "$!pos"
    lt $I11, 0, rx1917_fail4239
    nqp_rxmark rx1917_bstack, rxsubrule1920_pass4248, -1, 0
  rxsubrule1920_pass4248:
    rx1917_cstack = rx1917_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1917_pos, $P11, rx1917_curclass, "$!pos"
    repr_bind_attr_int rx1917_cur, rx1917_curclass, "$!pos", rx1917_pos
    store_lex unicode:"$\x{a2}", rx1917_cur
    $P5001 = $P101."MATCH"()
    set $P102, $P5001
    .const 'Sub' $P5002 = 'cuid_413_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
    rx1917_cur."!cursor_pass"(rx1917_pos, "prefix:sym<return>", 'backtrack'=>1)
    .return (rx1917_cur)
  rx1917_restart4238:
    repr_get_attr_obj rx1917_cstack, rx1917_cur, rx1917_curclass, "$!cstack"
  rx1917_fail4239:
    unless rx1917_bstack, rx1917_done4237
    pop $I19, rx1917_bstack
    if_null rx1917_cstack, rx1917_cstack_done4242
    unless rx1917_cstack, rx1917_cstack_done4242
    dec $I19
    set $P11, rx1917_cstack[$I19]
  rx1917_cstack_done4242:
    pop rx1917_rep, rx1917_bstack
    pop rx1917_pos, rx1917_bstack
    pop $I19, rx1917_bstack
    lt rx1917_pos, -1, rx1917_done4237
    lt rx1917_pos, 0, rx1917_fail4239
    eq $I19, 0, rx1917_fail4239
    nqp_islist $I20, rx1917_cstack
    unless $I20, rx1917_jump4240
    elements $I18, rx1917_bstack
    le $I18, 0, rx1917_cut4241
    dec $I18
    set $I18, rx1917_bstack[$I18]
  rx1917_cut4241:
    assign rx1917_cstack, $I18
  rx1917_jump4240:
    jump $I19
  rx1917_done4237:
    rx1917_cur."!cursor_fail"()
    .return (rx1917_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_413_1361537952.49511") :anon :lex :outer("cuid_219_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1420

    box $P5001, 1
    store_dynamic_lex "$*RETURN_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_220_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1421
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1921_start
    .local string rx1921_tgt
    .local int rx1921_pos
    .local int rx1921_off
    .local int rx1921_eos
    .local int rx1921_rep
    .local pmc rx1921_cur
    .local pmc rx1921_curclass
    .local pmc rx1921_bstack
    .local pmc rx1921_cstack
    rx1921_start = self."!cursor_start_all"()
    set rx1921_cur, rx1921_start[0]
    set rx1921_tgt, rx1921_start[1]
    set rx1921_pos, rx1921_start[2]
    set rx1921_curclass, rx1921_start[3]
    set rx1921_bstack, rx1921_start[4]
    set $I19, rx1921_start[5]
    store_lex unicode:"$\x{a2}", rx1921_cur
    length rx1921_eos, rx1921_tgt
    eq $I19, 1, rx1921_restart4251
    gt rx1921_pos, rx1921_eos, rx1921_fail4252
    repr_get_attr_int $I11, self, rx1921_curclass, "$!from"
    ne $I11, -1, rxscan1922_done4258
    goto rxscan1922_scan4257
  rxscan1922_loop4256:
    inc rx1921_pos
    gt rx1921_pos, rx1921_eos, rx1921_fail4252
    repr_bind_attr_int rx1921_cur, rx1921_curclass, "$!from", rx1921_pos
  rxscan1922_scan4257:
    nqp_rxmark rx1921_bstack, rxscan1922_loop4256, rx1921_pos, 0
  rxscan1922_done4258:
    nqp_rxmark rx1921_bstack, rxcap1923_fail4260, rx1921_pos, 0
    add $I11, rx1921_pos, 4
    gt $I11, rx1921_eos, rx1921_fail4252
    substr $S10, rx1921_tgt, rx1921_pos, 4
    ne $S10, ucs4:"make", rx1921_fail4252
    add rx1921_pos, 4
    nqp_rxpeek $I19, rx1921_bstack, rxcap1923_fail4260
    inc $I19
    set $I11, rx1921_bstack[$I19]
    repr_bind_attr_int rx1921_cur, rx1921_curclass, "$!pos", rx1921_pos
    $P11 = rx1921_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1921_pos)
    rx1921_cstack = rx1921_cur."!cursor_capture"($P11, "sym")
    goto rxcap1923_done4259
  rxcap1923_fail4260:
    goto rx1921_fail4252
  rxcap1923_done4259:
    ge rx1921_pos, rx1921_eos, rx1921_fail4252
    is_cclass $I11, .CCLASS_WHITESPACE, rx1921_tgt, rx1921_pos
    unless $I11, rx1921_fail4252
    add rx1921_pos, 1
    repr_bind_attr_int rx1921_cur, rx1921_curclass, "$!pos", rx1921_pos
    $P11 = rx1921_cur."O"("%list_prefix")
    repr_get_attr_int $I11, $P11, rx1921_curclass, "$!pos"
    lt $I11, 0, rx1921_fail4252
    nqp_rxmark rx1921_bstack, rxsubrule1924_pass4261, -1, 0
  rxsubrule1924_pass4261:
    rx1921_cstack = rx1921_cur."!cursor_capture"($P11, "O")
    repr_get_attr_int rx1921_pos, $P11, rx1921_curclass, "$!pos"
    rx1921_cur."!cursor_pass"(rx1921_pos, "prefix:sym<make>", 'backtrack'=>1)
    .return (rx1921_cur)
  rx1921_restart4251:
    repr_get_attr_obj rx1921_cstack, rx1921_cur, rx1921_curclass, "$!cstack"
  rx1921_fail4252:
    unless rx1921_bstack, rx1921_done4250
    pop $I19, rx1921_bstack
    if_null rx1921_cstack, rx1921_cstack_done4255
    unless rx1921_cstack, rx1921_cstack_done4255
    dec $I19
    set $P11, rx1921_cstack[$I19]
  rx1921_cstack_done4255:
    pop rx1921_rep, rx1921_bstack
    pop rx1921_pos, rx1921_bstack
    pop $I19, rx1921_bstack
    lt rx1921_pos, -1, rx1921_done4250
    lt rx1921_pos, 0, rx1921_fail4252
    eq $I19, 0, rx1921_fail4252
    nqp_islist $I20, rx1921_cstack
    unless $I20, rx1921_jump4253
    elements $I18, rx1921_bstack
    le $I18, 0, rx1921_cut4254
    dec $I18
    set $I18, rx1921_bstack[$I18]
  rx1921_cut4254:
    assign rx1921_cstack, $I18
  rx1921_jump4253:
    jump $I19
  rx1921_done4250:
    rx1921_cur."!cursor_fail"()
    .return (rx1921_cur) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_221_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1422
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_222_1361537952.49511' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_414_1361537952.49511' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1925_start
    .local string rx1925_tgt
    .local int rx1925_pos
    .local int rx1925_off
    .local int rx1925_eos
    .local int rx1925_rep
    .local pmc rx1925_cur
    .local pmc rx1925_curclass
    .local pmc rx1925_bstack
    .local pmc rx1925_cstack
    rx1925_start = self."!cursor_start_all"()
    set rx1925_cur, rx1925_start[0]
    set rx1925_tgt, rx1925_start[1]
    set rx1925_pos, rx1925_start[2]
    set rx1925_curclass, rx1925_start[3]
    set rx1925_bstack, rx1925_start[4]
    set $I19, rx1925_start[5]
    store_lex unicode:"$\x{a2}", rx1925_cur
    length rx1925_eos, rx1925_tgt
    eq $I19, 1, rx1925_restart4264
    gt rx1925_pos, rx1925_eos, rx1925_fail4265
    repr_get_attr_int $I11, self, rx1925_curclass, "$!from"
    ne $I11, -1, rxscan1926_done4271
    goto rxscan1926_scan4270
  rxscan1926_loop4269:
    inc rx1925_pos
    gt rx1925_pos, rx1925_eos, rx1925_fail4265
    repr_bind_attr_int rx1925_cur, rx1925_curclass, "$!from", rx1925_pos
  rxscan1926_scan4270:
    nqp_rxmark rx1925_bstack, rxscan1926_loop4269, rx1925_pos, 0
  rxscan1926_done4271:
    nqp_rxmark rx1925_bstack, rxcap1927_fail4273, rx1925_pos, 0
    add $I11, rx1925_pos, 4
    gt $I11, rx1925_eos, rx1925_fail4265
    substr $S10, rx1925_tgt, rx1925_pos, 4
    ne $S10, ucs4:"last", rx1925_fail4265
    add rx1925_pos, 4
    nqp_rxpeek $I19, rx1925_bstack, rxcap1927_fail4273
    inc $I19
    set $I11, rx1925_bstack[$I19]
    repr_bind_attr_int rx1925_cur, rx1925_curclass, "$!pos", rx1925_pos
    $P11 = rx1925_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1925_pos)
    rx1925_cstack = rx1925_cur."!cursor_capture"($P11, "sym")
    goto rxcap1927_done4272
  rxcap1927_fail4273:
    goto rx1925_fail4265
  rxcap1927_done4272:
    .const 'Sub' $P5001 = 'cuid_222_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1925_cur, rx1925_curclass, "$!pos", rx1925_pos
    $P11 = rx1925_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1925_curclass, "$!pos"
    ge $I11, 0, rx1925_fail4265
    repr_bind_attr_int rx1925_cur, rx1925_curclass, "$!pos", rx1925_pos
    store_lex unicode:"$\x{a2}", rx1925_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_414_1361537952.49511' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1925_cur."!cursor_pass"(rx1925_pos, "term:sym<last>", 'backtrack'=>1)
    .return (rx1925_cur)
  rx1925_restart4264:
    repr_get_attr_obj rx1925_cstack, rx1925_cur, rx1925_curclass, "$!cstack"
  rx1925_fail4265:
    unless rx1925_bstack, rx1925_done4263
    pop $I19, rx1925_bstack
    if_null rx1925_cstack, rx1925_cstack_done4268
    unless rx1925_cstack, rx1925_cstack_done4268
    dec $I19
    set $P11, rx1925_cstack[$I19]
  rx1925_cstack_done4268:
    pop rx1925_rep, rx1925_bstack
    pop rx1925_pos, rx1925_bstack
    pop $I19, rx1925_bstack
    lt rx1925_pos, -1, rx1925_done4263
    lt rx1925_pos, 0, rx1925_fail4265
    eq $I19, 0, rx1925_fail4265
    nqp_islist $I20, rx1925_cstack
    unless $I20, rx1925_jump4266
    elements $I18, rx1925_bstack
    le $I18, 0, rx1925_cut4267
    dec $I18
    set $I18, rx1925_bstack[$I18]
  rx1925_cut4267:
    assign rx1925_cstack, $I18
  rx1925_jump4266:
    jump $I19
  rx1925_done4263:
    rx1925_cur."!cursor_fail"()
    .return (rx1925_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1361537952.49511") :anon :lex :outer("cuid_221_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1928_start
    .local string rx1928_tgt
    .local int rx1928_pos
    .local int rx1928_off
    .local int rx1928_eos
    .local int rx1928_rep
    .local pmc rx1928_cur
    .local pmc rx1928_curclass
    .local pmc rx1928_bstack
    .local pmc rx1928_cstack
    rx1928_start = self."!cursor_start_all"()
    set rx1928_cur, rx1928_start[0]
    set rx1928_tgt, rx1928_start[1]
    set rx1928_pos, rx1928_start[2]
    set rx1928_curclass, rx1928_start[3]
    set rx1928_bstack, rx1928_start[4]
    set $I19, rx1928_start[5]
    store_lex unicode:"$\x{a2}", rx1928_cur
    length rx1928_eos, rx1928_tgt
    eq $I19, 1, rx1928_restart4276
    gt rx1928_pos, rx1928_eos, rx1928_fail4277
    repr_get_attr_int $I11, self, rx1928_curclass, "$!from"
    ne $I11, -1, rxscan1929_done4283
    goto rxscan1929_scan4282
  rxscan1929_loop4281:
    inc rx1928_pos
    gt rx1928_pos, rx1928_eos, rx1928_fail4277
    repr_bind_attr_int rx1928_cur, rx1928_curclass, "$!from", rx1928_pos
  rxscan1929_scan4282:
    nqp_rxmark rx1928_bstack, rxscan1929_loop4281, rx1928_pos, 0
  rxscan1929_done4283:
    repr_bind_attr_int rx1928_cur, rx1928_curclass, "$!pos", rx1928_pos
    $P11 = rx1928_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1928_curclass, "$!pos"
    lt $I11, 0, rx1928_fail4277
    nqp_rxmark rx1928_bstack, rxsubrule1930_pass4284, -1, 0
  rxsubrule1930_pass4284:
    rx1928_cstack = rx1928_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1928_pos, $P11, rx1928_curclass, "$!pos"
    rx1928_cur."!cursor_pass"(rx1928_pos, 'backtrack'=>1)
    .return (rx1928_cur)
  rx1928_restart4276:
    repr_get_attr_obj rx1928_cstack, rx1928_cur, rx1928_curclass, "$!cstack"
  rx1928_fail4277:
    unless rx1928_bstack, rx1928_done4275
    pop $I19, rx1928_bstack
    if_null rx1928_cstack, rx1928_cstack_done4280
    unless rx1928_cstack, rx1928_cstack_done4280
    dec $I19
    set $P11, rx1928_cstack[$I19]
  rx1928_cstack_done4280:
    pop rx1928_rep, rx1928_bstack
    pop rx1928_pos, rx1928_bstack
    pop $I19, rx1928_bstack
    lt rx1928_pos, -1, rx1928_done4275
    lt rx1928_pos, 0, rx1928_fail4277
    eq $I19, 0, rx1928_fail4277
    nqp_islist $I20, rx1928_cstack
    unless $I20, rx1928_jump4278
    elements $I18, rx1928_bstack
    le $I18, 0, rx1928_cut4279
    dec $I18
    set $I18, rx1928_bstack[$I18]
  rx1928_cut4279:
    assign rx1928_cstack, $I18
  rx1928_jump4278:
    jump $I19
  rx1928_done4275:
    rx1928_cur."!cursor_fail"()
    .return (rx1928_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_414_1361537952.49511") :anon :lex :outer("cuid_221_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1422

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_223_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1423
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_224_1361537952.49511' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_415_1361537952.49511' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1931_start
    .local string rx1931_tgt
    .local int rx1931_pos
    .local int rx1931_off
    .local int rx1931_eos
    .local int rx1931_rep
    .local pmc rx1931_cur
    .local pmc rx1931_curclass
    .local pmc rx1931_bstack
    .local pmc rx1931_cstack
    rx1931_start = self."!cursor_start_all"()
    set rx1931_cur, rx1931_start[0]
    set rx1931_tgt, rx1931_start[1]
    set rx1931_pos, rx1931_start[2]
    set rx1931_curclass, rx1931_start[3]
    set rx1931_bstack, rx1931_start[4]
    set $I19, rx1931_start[5]
    store_lex unicode:"$\x{a2}", rx1931_cur
    length rx1931_eos, rx1931_tgt
    eq $I19, 1, rx1931_restart4287
    gt rx1931_pos, rx1931_eos, rx1931_fail4288
    repr_get_attr_int $I11, self, rx1931_curclass, "$!from"
    ne $I11, -1, rxscan1932_done4294
    goto rxscan1932_scan4293
  rxscan1932_loop4292:
    inc rx1931_pos
    gt rx1931_pos, rx1931_eos, rx1931_fail4288
    repr_bind_attr_int rx1931_cur, rx1931_curclass, "$!from", rx1931_pos
  rxscan1932_scan4293:
    nqp_rxmark rx1931_bstack, rxscan1932_loop4292, rx1931_pos, 0
  rxscan1932_done4294:
    nqp_rxmark rx1931_bstack, rxcap1933_fail4296, rx1931_pos, 0
    add $I11, rx1931_pos, 4
    gt $I11, rx1931_eos, rx1931_fail4288
    substr $S10, rx1931_tgt, rx1931_pos, 4
    ne $S10, ucs4:"next", rx1931_fail4288
    add rx1931_pos, 4
    nqp_rxpeek $I19, rx1931_bstack, rxcap1933_fail4296
    inc $I19
    set $I11, rx1931_bstack[$I19]
    repr_bind_attr_int rx1931_cur, rx1931_curclass, "$!pos", rx1931_pos
    $P11 = rx1931_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1931_pos)
    rx1931_cstack = rx1931_cur."!cursor_capture"($P11, "sym")
    goto rxcap1933_done4295
  rxcap1933_fail4296:
    goto rx1931_fail4288
  rxcap1933_done4295:
    .const 'Sub' $P5001 = 'cuid_224_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1931_cur, rx1931_curclass, "$!pos", rx1931_pos
    $P11 = rx1931_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1931_curclass, "$!pos"
    ge $I11, 0, rx1931_fail4288
    repr_bind_attr_int rx1931_cur, rx1931_curclass, "$!pos", rx1931_pos
    store_lex unicode:"$\x{a2}", rx1931_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_415_1361537952.49511' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1931_cur."!cursor_pass"(rx1931_pos, "term:sym<next>", 'backtrack'=>1)
    .return (rx1931_cur)
  rx1931_restart4287:
    repr_get_attr_obj rx1931_cstack, rx1931_cur, rx1931_curclass, "$!cstack"
  rx1931_fail4288:
    unless rx1931_bstack, rx1931_done4286
    pop $I19, rx1931_bstack
    if_null rx1931_cstack, rx1931_cstack_done4291
    unless rx1931_cstack, rx1931_cstack_done4291
    dec $I19
    set $P11, rx1931_cstack[$I19]
  rx1931_cstack_done4291:
    pop rx1931_rep, rx1931_bstack
    pop rx1931_pos, rx1931_bstack
    pop $I19, rx1931_bstack
    lt rx1931_pos, -1, rx1931_done4286
    lt rx1931_pos, 0, rx1931_fail4288
    eq $I19, 0, rx1931_fail4288
    nqp_islist $I20, rx1931_cstack
    unless $I20, rx1931_jump4289
    elements $I18, rx1931_bstack
    le $I18, 0, rx1931_cut4290
    dec $I18
    set $I18, rx1931_bstack[$I18]
  rx1931_cut4290:
    assign rx1931_cstack, $I18
  rx1931_jump4289:
    jump $I19
  rx1931_done4286:
    rx1931_cur."!cursor_fail"()
    .return (rx1931_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1361537952.49511") :anon :lex :outer("cuid_223_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1934_start
    .local string rx1934_tgt
    .local int rx1934_pos
    .local int rx1934_off
    .local int rx1934_eos
    .local int rx1934_rep
    .local pmc rx1934_cur
    .local pmc rx1934_curclass
    .local pmc rx1934_bstack
    .local pmc rx1934_cstack
    rx1934_start = self."!cursor_start_all"()
    set rx1934_cur, rx1934_start[0]
    set rx1934_tgt, rx1934_start[1]
    set rx1934_pos, rx1934_start[2]
    set rx1934_curclass, rx1934_start[3]
    set rx1934_bstack, rx1934_start[4]
    set $I19, rx1934_start[5]
    store_lex unicode:"$\x{a2}", rx1934_cur
    length rx1934_eos, rx1934_tgt
    eq $I19, 1, rx1934_restart4299
    gt rx1934_pos, rx1934_eos, rx1934_fail4300
    repr_get_attr_int $I11, self, rx1934_curclass, "$!from"
    ne $I11, -1, rxscan1935_done4306
    goto rxscan1935_scan4305
  rxscan1935_loop4304:
    inc rx1934_pos
    gt rx1934_pos, rx1934_eos, rx1934_fail4300
    repr_bind_attr_int rx1934_cur, rx1934_curclass, "$!from", rx1934_pos
  rxscan1935_scan4305:
    nqp_rxmark rx1934_bstack, rxscan1935_loop4304, rx1934_pos, 0
  rxscan1935_done4306:
    repr_bind_attr_int rx1934_cur, rx1934_curclass, "$!pos", rx1934_pos
    $P11 = rx1934_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1934_curclass, "$!pos"
    lt $I11, 0, rx1934_fail4300
    nqp_rxmark rx1934_bstack, rxsubrule1936_pass4307, -1, 0
  rxsubrule1936_pass4307:
    rx1934_cstack = rx1934_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1934_pos, $P11, rx1934_curclass, "$!pos"
    rx1934_cur."!cursor_pass"(rx1934_pos, 'backtrack'=>1)
    .return (rx1934_cur)
  rx1934_restart4299:
    repr_get_attr_obj rx1934_cstack, rx1934_cur, rx1934_curclass, "$!cstack"
  rx1934_fail4300:
    unless rx1934_bstack, rx1934_done4298
    pop $I19, rx1934_bstack
    if_null rx1934_cstack, rx1934_cstack_done4303
    unless rx1934_cstack, rx1934_cstack_done4303
    dec $I19
    set $P11, rx1934_cstack[$I19]
  rx1934_cstack_done4303:
    pop rx1934_rep, rx1934_bstack
    pop rx1934_pos, rx1934_bstack
    pop $I19, rx1934_bstack
    lt rx1934_pos, -1, rx1934_done4298
    lt rx1934_pos, 0, rx1934_fail4300
    eq $I19, 0, rx1934_fail4300
    nqp_islist $I20, rx1934_cstack
    unless $I20, rx1934_jump4301
    elements $I18, rx1934_bstack
    le $I18, 0, rx1934_cut4302
    dec $I18
    set $I18, rx1934_bstack[$I18]
  rx1934_cut4302:
    assign rx1934_cstack, $I18
  rx1934_jump4301:
    jump $I19
  rx1934_done4298:
    rx1934_cur."!cursor_fail"()
    .return (rx1934_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_415_1361537952.49511") :anon :lex :outer("cuid_223_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1423

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_225_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1424
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_226_1361537952.49511' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_416_1361537952.49511' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1937_start
    .local string rx1937_tgt
    .local int rx1937_pos
    .local int rx1937_off
    .local int rx1937_eos
    .local int rx1937_rep
    .local pmc rx1937_cur
    .local pmc rx1937_curclass
    .local pmc rx1937_bstack
    .local pmc rx1937_cstack
    rx1937_start = self."!cursor_start_all"()
    set rx1937_cur, rx1937_start[0]
    set rx1937_tgt, rx1937_start[1]
    set rx1937_pos, rx1937_start[2]
    set rx1937_curclass, rx1937_start[3]
    set rx1937_bstack, rx1937_start[4]
    set $I19, rx1937_start[5]
    store_lex unicode:"$\x{a2}", rx1937_cur
    length rx1937_eos, rx1937_tgt
    eq $I19, 1, rx1937_restart4310
    gt rx1937_pos, rx1937_eos, rx1937_fail4311
    repr_get_attr_int $I11, self, rx1937_curclass, "$!from"
    ne $I11, -1, rxscan1938_done4317
    goto rxscan1938_scan4316
  rxscan1938_loop4315:
    inc rx1937_pos
    gt rx1937_pos, rx1937_eos, rx1937_fail4311
    repr_bind_attr_int rx1937_cur, rx1937_curclass, "$!from", rx1937_pos
  rxscan1938_scan4316:
    nqp_rxmark rx1937_bstack, rxscan1938_loop4315, rx1937_pos, 0
  rxscan1938_done4317:
    nqp_rxmark rx1937_bstack, rxcap1939_fail4319, rx1937_pos, 0
    add $I11, rx1937_pos, 4
    gt $I11, rx1937_eos, rx1937_fail4311
    substr $S10, rx1937_tgt, rx1937_pos, 4
    ne $S10, ucs4:"redo", rx1937_fail4311
    add rx1937_pos, 4
    nqp_rxpeek $I19, rx1937_bstack, rxcap1939_fail4319
    inc $I19
    set $I11, rx1937_bstack[$I19]
    repr_bind_attr_int rx1937_cur, rx1937_curclass, "$!pos", rx1937_pos
    $P11 = rx1937_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1937_pos)
    rx1937_cstack = rx1937_cur."!cursor_capture"($P11, "sym")
    goto rxcap1939_done4318
  rxcap1939_fail4319:
    goto rx1937_fail4311
  rxcap1939_done4318:
    .const 'Sub' $P5001 = 'cuid_226_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1937_cur, rx1937_curclass, "$!pos", rx1937_pos
    $P11 = rx1937_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1937_curclass, "$!pos"
    ge $I11, 0, rx1937_fail4311
    repr_bind_attr_int rx1937_cur, rx1937_curclass, "$!pos", rx1937_pos
    store_lex unicode:"$\x{a2}", rx1937_cur
    $P5002 = $P101."MATCH"()
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_416_1361537952.49511' 
    capture_lex $P5003
    $P5004 = $P5003()
    rx1937_cur."!cursor_pass"(rx1937_pos, "term:sym<redo>", 'backtrack'=>1)
    .return (rx1937_cur)
  rx1937_restart4310:
    repr_get_attr_obj rx1937_cstack, rx1937_cur, rx1937_curclass, "$!cstack"
  rx1937_fail4311:
    unless rx1937_bstack, rx1937_done4309
    pop $I19, rx1937_bstack
    if_null rx1937_cstack, rx1937_cstack_done4314
    unless rx1937_cstack, rx1937_cstack_done4314
    dec $I19
    set $P11, rx1937_cstack[$I19]
  rx1937_cstack_done4314:
    pop rx1937_rep, rx1937_bstack
    pop rx1937_pos, rx1937_bstack
    pop $I19, rx1937_bstack
    lt rx1937_pos, -1, rx1937_done4309
    lt rx1937_pos, 0, rx1937_fail4311
    eq $I19, 0, rx1937_fail4311
    nqp_islist $I20, rx1937_cstack
    unless $I20, rx1937_jump4312
    elements $I18, rx1937_bstack
    le $I18, 0, rx1937_cut4313
    dec $I18
    set $I18, rx1937_bstack[$I18]
  rx1937_cut4313:
    assign rx1937_cstack, $I18
  rx1937_jump4312:
    jump $I19
  rx1937_done4309:
    rx1937_cur."!cursor_fail"()
    .return (rx1937_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1361537952.49511") :anon :lex :outer("cuid_225_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1940_start
    .local string rx1940_tgt
    .local int rx1940_pos
    .local int rx1940_off
    .local int rx1940_eos
    .local int rx1940_rep
    .local pmc rx1940_cur
    .local pmc rx1940_curclass
    .local pmc rx1940_bstack
    .local pmc rx1940_cstack
    rx1940_start = self."!cursor_start_all"()
    set rx1940_cur, rx1940_start[0]
    set rx1940_tgt, rx1940_start[1]
    set rx1940_pos, rx1940_start[2]
    set rx1940_curclass, rx1940_start[3]
    set rx1940_bstack, rx1940_start[4]
    set $I19, rx1940_start[5]
    store_lex unicode:"$\x{a2}", rx1940_cur
    length rx1940_eos, rx1940_tgt
    eq $I19, 1, rx1940_restart4322
    gt rx1940_pos, rx1940_eos, rx1940_fail4323
    repr_get_attr_int $I11, self, rx1940_curclass, "$!from"
    ne $I11, -1, rxscan1941_done4329
    goto rxscan1941_scan4328
  rxscan1941_loop4327:
    inc rx1940_pos
    gt rx1940_pos, rx1940_eos, rx1940_fail4323
    repr_bind_attr_int rx1940_cur, rx1940_curclass, "$!from", rx1940_pos
  rxscan1941_scan4328:
    nqp_rxmark rx1940_bstack, rxscan1941_loop4327, rx1940_pos, 0
  rxscan1941_done4329:
    repr_bind_attr_int rx1940_cur, rx1940_curclass, "$!pos", rx1940_pos
    $P11 = rx1940_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1940_curclass, "$!pos"
    lt $I11, 0, rx1940_fail4323
    nqp_rxmark rx1940_bstack, rxsubrule1942_pass4330, -1, 0
  rxsubrule1942_pass4330:
    rx1940_cstack = rx1940_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx1940_pos, $P11, rx1940_curclass, "$!pos"
    rx1940_cur."!cursor_pass"(rx1940_pos, 'backtrack'=>1)
    .return (rx1940_cur)
  rx1940_restart4322:
    repr_get_attr_obj rx1940_cstack, rx1940_cur, rx1940_curclass, "$!cstack"
  rx1940_fail4323:
    unless rx1940_bstack, rx1940_done4321
    pop $I19, rx1940_bstack
    if_null rx1940_cstack, rx1940_cstack_done4326
    unless rx1940_cstack, rx1940_cstack_done4326
    dec $I19
    set $P11, rx1940_cstack[$I19]
  rx1940_cstack_done4326:
    pop rx1940_rep, rx1940_bstack
    pop rx1940_pos, rx1940_bstack
    pop $I19, rx1940_bstack
    lt rx1940_pos, -1, rx1940_done4321
    lt rx1940_pos, 0, rx1940_fail4323
    eq $I19, 0, rx1940_fail4323
    nqp_islist $I20, rx1940_cstack
    unless $I20, rx1940_jump4324
    elements $I18, rx1940_bstack
    le $I18, 0, rx1940_cut4325
    dec $I18
    set $I18, rx1940_bstack[$I18]
  rx1940_cut4325:
    assign rx1940_cstack, $I18
  rx1940_jump4324:
    jump $I19
  rx1940_done4321:
    rx1940_cur."!cursor_fail"()
    .return (rx1940_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_416_1361537952.49511") :anon :lex :outer("cuid_225_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1424

    box $P5001, 1
    store_dynamic_lex "$*CONTROL_USED", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "smartmatch" :subid("cuid_227_1361537952.49511") :anon :lex :outer("cuid_398_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$t", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set fb_tmp_274, _lex_param_1
    repr_defined $I5001, fb_tmp_274
    unless $I5001 goto if1943_else4331 
    set $P5002, fb_tmp_274[0]
    set $P5004, $P5002
    goto if1943_end4332
  if1943_else4331:
    null $P5003
    set $P5004, $P5003
  if1943_end4332:
    unless_null $P5004, vivi_19444333
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_19444333:
    set $P101, $P5004
    set fb_tmp_275, _lex_param_1
    repr_defined $I5002, fb_tmp_275
    unless $I5002 goto if1945_else4334 
    set $P5006, fb_tmp_275[1]
    set $P5008, $P5006
    goto if1945_end4335
  if1945_else4334:
    null $P5007
    set $P5008, $P5007
  if1945_end4335:
    unless_null $P5008, vivi_19464336
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_19464336:
    set _lex_param_1[0], $P5008
    set _lex_param_1[1], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_417_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1432
    .const 'Sub' $P5013 = 'cuid_228_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_229_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_231_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_232_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_234_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_235_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_238_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_241_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_243_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_245_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_246_1361537952.49511' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_247_1361537952.49511' 
    capture_lex $P5013 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_228_1361537952.49511' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_229_1361537952.49511' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_231_1361537952.49511' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_232_1361537952.49511' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_234_1361537952.49511' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_235_1361537952.49511' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_238_1361537952.49511' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_241_1361537952.49511' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_243_1361537952.49511' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_245_1361537952.49511' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_246_1361537952.49511' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_247_1361537952.49511' 
    capture_lex $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_228_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1433
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1947_start
    .local string rx1947_tgt
    .local int rx1947_pos
    .local int rx1947_off
    .local int rx1947_eos
    .local int rx1947_rep
    .local pmc rx1947_cur
    .local pmc rx1947_curclass
    .local pmc rx1947_bstack
    .local pmc rx1947_cstack
    rx1947_start = self."!cursor_start_all"()
    set rx1947_cur, rx1947_start[0]
    set rx1947_tgt, rx1947_start[1]
    set rx1947_pos, rx1947_start[2]
    set rx1947_curclass, rx1947_start[3]
    set rx1947_bstack, rx1947_start[4]
    set $I19, rx1947_start[5]
    store_lex unicode:"$\x{a2}", rx1947_cur
    length rx1947_eos, rx1947_tgt
    eq $I19, 1, rx1947_restart4339
    gt rx1947_pos, rx1947_eos, rx1947_fail4340
    repr_get_attr_int $I11, self, rx1947_curclass, "$!from"
    ne $I11, -1, rxscan1948_done4346
    goto rxscan1948_scan4345
  rxscan1948_loop4344:
    inc rx1947_pos
    gt rx1947_pos, rx1947_eos, rx1947_fail4340
    repr_bind_attr_int rx1947_cur, rx1947_curclass, "$!from", rx1947_pos
  rxscan1948_scan4345:
    nqp_rxmark rx1947_bstack, rxscan1948_loop4344, rx1947_pos, 0
  rxscan1948_done4346:
    ge rx1947_pos, rx1947_eos, rx1947_fail4340
    substr $S11, rx1947_tgt, rx1947_pos, 1
    index $I11, ucs4:"}/", $S11
    lt $I11, 0, rx1947_fail4340
    inc rx1947_pos
    rx1947_cur."!cursor_pass"(rx1947_pos, "rxstopper", 'backtrack'=>1)
    .return (rx1947_cur)
  rx1947_restart4339:
    repr_get_attr_obj rx1947_cstack, rx1947_cur, rx1947_curclass, "$!cstack"
  rx1947_fail4340:
    unless rx1947_bstack, rx1947_done4338
    pop $I19, rx1947_bstack
    if_null rx1947_cstack, rx1947_cstack_done4343
    unless rx1947_cstack, rx1947_cstack_done4343
    dec $I19
    set $P11, rx1947_cstack[$I19]
  rx1947_cstack_done4343:
    pop rx1947_rep, rx1947_bstack
    pop rx1947_pos, rx1947_bstack
    pop $I19, rx1947_bstack
    lt rx1947_pos, -1, rx1947_done4338
    lt rx1947_pos, 0, rx1947_fail4340
    eq $I19, 0, rx1947_fail4340
    nqp_islist $I20, rx1947_cstack
    unless $I20, rx1947_jump4341
    elements $I18, rx1947_bstack
    le $I18, 0, rx1947_cut4342
    dec $I18
    set $I18, rx1947_bstack[$I18]
  rx1947_cut4342:
    assign rx1947_cstack, $I18
  rx1947_jump4341:
    jump $I19
  rx1947_done4338:
    rx1947_cur."!cursor_fail"()
    .return (rx1947_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_229_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1437
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_230_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1949_start
    .local string rx1949_tgt
    .local int rx1949_pos
    .local int rx1949_off
    .local int rx1949_eos
    .local int rx1949_rep
    .local pmc rx1949_cur
    .local pmc rx1949_curclass
    .local pmc rx1949_bstack
    .local pmc rx1949_cstack
    rx1949_start = self."!cursor_start_all"()
    set rx1949_cur, rx1949_start[0]
    set rx1949_tgt, rx1949_start[1]
    set rx1949_pos, rx1949_start[2]
    set rx1949_curclass, rx1949_start[3]
    set rx1949_bstack, rx1949_start[4]
    set $I19, rx1949_start[5]
    store_lex unicode:"$\x{a2}", rx1949_cur
    length rx1949_eos, rx1949_tgt
    eq $I19, 1, rx1949_restart4349
    gt rx1949_pos, rx1949_eos, rx1949_fail4350
    repr_get_attr_int $I11, self, rx1949_curclass, "$!from"
    ne $I11, -1, rxscan1950_done4356
    goto rxscan1950_scan4355
  rxscan1950_loop4354:
    inc rx1949_pos
    gt rx1949_pos, rx1949_eos, rx1949_fail4350
    repr_bind_attr_int rx1949_cur, rx1949_curclass, "$!from", rx1949_pos
  rxscan1950_scan4355:
    nqp_rxmark rx1949_bstack, rxscan1950_loop4354, rx1949_pos, 0
  rxscan1950_done4356:
    add $I11, rx1949_pos, 1
    gt $I11, rx1949_eos, rx1949_fail4350
    substr $S10, rx1949_tgt, rx1949_pos, 1
    ne $S10, ucs4:":", rx1949_fail4350
    add rx1949_pos, 1
    .const 'Sub' $P5001 = 'cuid_230_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1949_cur, rx1949_curclass, "$!pos", rx1949_pos
    $P11 = rx1949_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1949_curclass, "$!pos"
    lt $I11, 0, rx1949_fail4350
    repr_bind_attr_int rx1949_cur, rx1949_curclass, "$!pos", rx1949_pos
    $P11 = rx1949_cur."LANG"("MAIN", "statement")
    repr_get_attr_int $I11, $P11, rx1949_curclass, "$!pos"
    lt $I11, 0, rx1949_fail4350
    nqp_rxmark rx1949_bstack, rxsubrule1953_pass4367, -1, 0
  rxsubrule1953_pass4367:
    rx1949_cstack = rx1949_cur."!cursor_capture"($P11, "statement")
    repr_get_attr_int rx1949_pos, $P11, rx1949_curclass, "$!pos"
    repr_bind_attr_int rx1949_cur, rx1949_curclass, "$!pos", rx1949_pos
    $P11 = rx1949_cur."ws"()
    repr_get_attr_int $I11, $P11, rx1949_curclass, "$!pos"
    lt $I11, 0, rx1949_fail4350
    repr_get_attr_int rx1949_pos, $P11, rx1949_curclass, "$!pos"
    add $I11, rx1949_pos, 1
    gt $I11, rx1949_eos, rx1949_fail4350
    substr $S10, rx1949_tgt, rx1949_pos, 1
    ne $S10, ucs4:";", rx1949_fail4350
    add rx1949_pos, 1
    rx1949_cur."!cursor_pass"(rx1949_pos, "metachar:sym<:my>", 'backtrack'=>1)
    .return (rx1949_cur)
  rx1949_restart4349:
    repr_get_attr_obj rx1949_cstack, rx1949_cur, rx1949_curclass, "$!cstack"
  rx1949_fail4350:
    unless rx1949_bstack, rx1949_done4348
    pop $I19, rx1949_bstack
    if_null rx1949_cstack, rx1949_cstack_done4353
    unless rx1949_cstack, rx1949_cstack_done4353
    dec $I19
    set $P11, rx1949_cstack[$I19]
  rx1949_cstack_done4353:
    pop rx1949_rep, rx1949_bstack
    pop rx1949_pos, rx1949_bstack
    pop $I19, rx1949_bstack
    lt rx1949_pos, -1, rx1949_done4348
    lt rx1949_pos, 0, rx1949_fail4350
    eq $I19, 0, rx1949_fail4350
    nqp_islist $I20, rx1949_cstack
    unless $I20, rx1949_jump4351
    elements $I18, rx1949_bstack
    le $I18, 0, rx1949_cut4352
    dec $I18
    set $I18, rx1949_bstack[$I18]
  rx1949_cut4352:
    assign rx1949_cstack, $I18
  rx1949_jump4351:
    jump $I19
  rx1949_done4348:
    rx1949_cur."!cursor_fail"()
    .return (rx1949_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1361537952.49511") :anon :lex :outer("cuid_229_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1951_start
    .local string rx1951_tgt
    .local int rx1951_pos
    .local int rx1951_off
    .local int rx1951_eos
    .local int rx1951_rep
    .local pmc rx1951_cur
    .local pmc rx1951_curclass
    .local pmc rx1951_bstack
    .local pmc rx1951_cstack
    rx1951_start = self."!cursor_start_all"()
    set rx1951_cur, rx1951_start[0]
    set rx1951_tgt, rx1951_start[1]
    set rx1951_pos, rx1951_start[2]
    set rx1951_curclass, rx1951_start[3]
    set rx1951_bstack, rx1951_start[4]
    set $I19, rx1951_start[5]
    store_lex unicode:"$\x{a2}", rx1951_cur
    length rx1951_eos, rx1951_tgt
    eq $I19, 1, rx1951_restart4359
    gt rx1951_pos, rx1951_eos, rx1951_fail4360
    repr_get_attr_int $I11, self, rx1951_curclass, "$!from"
    ne $I11, -1, rxscan1952_done4366
    goto rxscan1952_scan4365
  rxscan1952_loop4364:
    inc rx1951_pos
    gt rx1951_pos, rx1951_eos, rx1951_fail4360
    repr_bind_attr_int rx1951_cur, rx1951_curclass, "$!from", rx1951_pos
  rxscan1952_scan4365:
    nqp_rxmark rx1951_bstack, rxscan1952_loop4364, rx1951_pos, 0
  rxscan1952_done4366:
    add $I11, rx1951_pos, 2
    gt $I11, rx1951_eos, rx1951_fail4360
    substr $S10, rx1951_tgt, rx1951_pos, 2
    ne $S10, ucs4:"my", rx1951_fail4360
    add rx1951_pos, 2
    rx1951_cur."!cursor_pass"(rx1951_pos, 'backtrack'=>1)
    .return (rx1951_cur)
  rx1951_restart4359:
    repr_get_attr_obj rx1951_cstack, rx1951_cur, rx1951_curclass, "$!cstack"
  rx1951_fail4360:
    unless rx1951_bstack, rx1951_done4358
    pop $I19, rx1951_bstack
    if_null rx1951_cstack, rx1951_cstack_done4363
    unless rx1951_cstack, rx1951_cstack_done4363
    dec $I19
    set $P11, rx1951_cstack[$I19]
  rx1951_cstack_done4363:
    pop rx1951_rep, rx1951_bstack
    pop rx1951_pos, rx1951_bstack
    pop $I19, rx1951_bstack
    lt rx1951_pos, -1, rx1951_done4358
    lt rx1951_pos, 0, rx1951_fail4360
    eq $I19, 0, rx1951_fail4360
    nqp_islist $I20, rx1951_cstack
    unless $I20, rx1951_jump4361
    elements $I18, rx1951_bstack
    le $I18, 0, rx1951_cut4362
    dec $I18
    set $I18, rx1951_bstack[$I18]
  rx1951_cut4362:
    assign rx1951_cstack, $I18
  rx1951_jump4361:
    jump $I19
  rx1951_done4358:
    rx1951_cur."!cursor_fail"()
    .return (rx1951_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_231_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1441
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1955_start
    .local string rx1955_tgt
    .local int rx1955_pos
    .local int rx1955_off
    .local int rx1955_eos
    .local int rx1955_rep
    .local pmc rx1955_cur
    .local pmc rx1955_curclass
    .local pmc rx1955_bstack
    .local pmc rx1955_cstack
    rx1955_start = self."!cursor_start_all"()
    set rx1955_cur, rx1955_start[0]
    set rx1955_tgt, rx1955_start[1]
    set rx1955_pos, rx1955_start[2]
    set rx1955_curclass, rx1955_start[3]
    set rx1955_bstack, rx1955_start[4]
    set $I19, rx1955_start[5]
    store_lex unicode:"$\x{a2}", rx1955_cur
    length rx1955_eos, rx1955_tgt
    eq $I19, 1, rx1955_restart4371
    gt rx1955_pos, rx1955_eos, rx1955_fail4372
    repr_get_attr_int $I11, self, rx1955_curclass, "$!from"
    ne $I11, -1, rxscan1956_done4378
    goto rxscan1956_scan4377
  rxscan1956_loop4376:
    inc rx1955_pos
    gt rx1955_pos, rx1955_eos, rx1955_fail4372
    repr_bind_attr_int rx1955_cur, rx1955_curclass, "$!from", rx1955_pos
  rxscan1956_scan4377:
    nqp_rxmark rx1955_bstack, rxscan1956_loop4376, rx1955_pos, 0
  rxscan1956_done4378:
    ge rx1955_pos, rx1955_eos, rx1955_fail4372
    substr $S11, rx1955_tgt, rx1955_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1955_fail4372
    repr_bind_attr_int rx1955_cur, rx1955_curclass, "$!pos", rx1955_pos
    $P11 = rx1955_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1955_curclass, "$!pos"
    lt $I11, 0, rx1955_fail4372
    nqp_rxmark rx1955_bstack, rxsubrule1957_pass4379, -1, 0
  rxsubrule1957_pass4379:
    rx1955_cstack = rx1955_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1955_pos, $P11, rx1955_curclass, "$!pos"
    rx1955_cur."!cursor_pass"(rx1955_pos, "metachar:sym<{ }>", 'backtrack'=>1)
    .return (rx1955_cur)
  rx1955_restart4371:
    repr_get_attr_obj rx1955_cstack, rx1955_cur, rx1955_curclass, "$!cstack"
  rx1955_fail4372:
    unless rx1955_bstack, rx1955_done4370
    pop $I19, rx1955_bstack
    if_null rx1955_cstack, rx1955_cstack_done4375
    unless rx1955_cstack, rx1955_cstack_done4375
    dec $I19
    set $P11, rx1955_cstack[$I19]
  rx1955_cstack_done4375:
    pop rx1955_rep, rx1955_bstack
    pop rx1955_pos, rx1955_bstack
    pop $I19, rx1955_bstack
    lt rx1955_pos, -1, rx1955_done4370
    lt rx1955_pos, 0, rx1955_fail4372
    eq $I19, 0, rx1955_fail4372
    nqp_islist $I20, rx1955_cstack
    unless $I20, rx1955_jump4373
    elements $I18, rx1955_bstack
    le $I18, 0, rx1955_cut4374
    dec $I18
    set $I18, rx1955_bstack[$I18]
  rx1955_cut4374:
    assign rx1955_cstack, $I18
  rx1955_jump4373:
    jump $I19
  rx1955_done4370:
    rx1955_cur."!cursor_fail"()
    .return (rx1955_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_232_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1445
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_233_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1958_start
    .local string rx1958_tgt
    .local int rx1958_pos
    .local int rx1958_off
    .local int rx1958_eos
    .local int rx1958_rep
    .local pmc rx1958_cur
    .local pmc rx1958_curclass
    .local pmc rx1958_bstack
    .local pmc rx1958_cstack
    rx1958_start = self."!cursor_start_all"()
    set rx1958_cur, rx1958_start[0]
    set rx1958_tgt, rx1958_start[1]
    set rx1958_pos, rx1958_start[2]
    set rx1958_curclass, rx1958_start[3]
    set rx1958_bstack, rx1958_start[4]
    set $I19, rx1958_start[5]
    store_lex unicode:"$\x{a2}", rx1958_cur
    length rx1958_eos, rx1958_tgt
    eq $I19, 1, rx1958_restart4382
    gt rx1958_pos, rx1958_eos, rx1958_fail4383
    repr_get_attr_int $I11, self, rx1958_curclass, "$!from"
    ne $I11, -1, rxscan1959_done4389
    goto rxscan1959_scan4388
  rxscan1959_loop4387:
    inc rx1958_pos
    gt rx1958_pos, rx1958_eos, rx1958_fail4383
    repr_bind_attr_int rx1958_cur, rx1958_curclass, "$!from", rx1958_pos
  rxscan1959_scan4388:
    nqp_rxmark rx1958_bstack, rxscan1959_loop4387, rx1958_pos, 0
  rxscan1959_done4389:
    .const 'Sub' $P5001 = 'cuid_233_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1958_cur, rx1958_curclass, "$!pos", rx1958_pos
    $P11 = rx1958_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1958_curclass, "$!pos"
    lt $I11, 0, rx1958_fail4383
    repr_bind_attr_int rx1958_cur, rx1958_curclass, "$!pos", rx1958_pos
    $P11 = rx1958_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx1958_curclass, "$!pos"
    lt $I11, 0, rx1958_fail4383
    nqp_rxmark rx1958_bstack, rxsubrule1964_pass4404, -1, 0
  rxsubrule1964_pass4404:
    rx1958_cstack = rx1958_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx1958_pos, $P11, rx1958_curclass, "$!pos"
    rx1958_cur."!cursor_pass"(rx1958_pos, "metachar:sym<nqpvar>", 'backtrack'=>1)
    .return (rx1958_cur)
  rx1958_restart4382:
    repr_get_attr_obj rx1958_cstack, rx1958_cur, rx1958_curclass, "$!cstack"
  rx1958_fail4383:
    unless rx1958_bstack, rx1958_done4381
    pop $I19, rx1958_bstack
    if_null rx1958_cstack, rx1958_cstack_done4386
    unless rx1958_cstack, rx1958_cstack_done4386
    dec $I19
    set $P11, rx1958_cstack[$I19]
  rx1958_cstack_done4386:
    pop rx1958_rep, rx1958_bstack
    pop rx1958_pos, rx1958_bstack
    pop $I19, rx1958_bstack
    lt rx1958_pos, -1, rx1958_done4381
    lt rx1958_pos, 0, rx1958_fail4383
    eq $I19, 0, rx1958_fail4383
    nqp_islist $I20, rx1958_cstack
    unless $I20, rx1958_jump4384
    elements $I18, rx1958_bstack
    le $I18, 0, rx1958_cut4385
    dec $I18
    set $I18, rx1958_bstack[$I18]
  rx1958_cut4385:
    assign rx1958_cstack, $I18
  rx1958_jump4384:
    jump $I19
  rx1958_done4381:
    rx1958_cur."!cursor_fail"()
    .return (rx1958_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1361537952.49511") :anon :lex :outer("cuid_232_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1960_start
    .local string rx1960_tgt
    .local int rx1960_pos
    .local int rx1960_off
    .local int rx1960_eos
    .local int rx1960_rep
    .local pmc rx1960_cur
    .local pmc rx1960_curclass
    .local pmc rx1960_bstack
    .local pmc rx1960_cstack
    rx1960_start = self."!cursor_start_all"()
    set rx1960_cur, rx1960_start[0]
    set rx1960_tgt, rx1960_start[1]
    set rx1960_pos, rx1960_start[2]
    set rx1960_curclass, rx1960_start[3]
    set rx1960_bstack, rx1960_start[4]
    set $I19, rx1960_start[5]
    store_lex unicode:"$\x{a2}", rx1960_cur
    length rx1960_eos, rx1960_tgt
    eq $I19, 1, rx1960_restart4392
    gt rx1960_pos, rx1960_eos, rx1960_fail4393
    repr_get_attr_int $I11, self, rx1960_curclass, "$!from"
    ne $I11, -1, rxscan1961_done4399
    goto rxscan1961_scan4398
  rxscan1961_loop4397:
    inc rx1960_pos
    gt rx1960_pos, rx1960_eos, rx1960_fail4393
    repr_bind_attr_int rx1960_cur, rx1960_curclass, "$!from", rx1960_pos
  rxscan1961_scan4398:
    nqp_rxmark rx1960_bstack, rxscan1961_loop4397, rx1960_pos, 0
  rxscan1961_done4399:
    repr_bind_attr_int rx1960_cur, rx1960_curclass, "$!pos", rx1960_pos
    $P11 = rx1960_cur."sigil"()
    repr_get_attr_int $I11, $P11, rx1960_curclass, "$!pos"
    lt $I11, 0, rx1960_fail4393
    nqp_rxmark rx1960_bstack, rxsubrule1962_pass4400, -1, 0
  rxsubrule1962_pass4400:
    rx1960_cstack = rx1960_cur."!cursor_capture"($P11, "sigil")
    repr_get_attr_int rx1960_pos, $P11, rx1960_curclass, "$!pos"
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1963_04402
    nqp_push_label $P11, alt1963_14403
    nqp_rxmark rx1960_bstack, alt1963_end4401, -1, 0
    rx1960_cur."!alt"(rx1960_pos, "alt_nfa__39_1361537957.26872", $P11)
    goto rx1960_fail4393
  alt1963_04402:
    ge rx1960_pos, rx1960_eos, rx1960_fail4393
    is_cclass $I11, .CCLASS_WORD, rx1960_tgt, rx1960_pos
    if $I11, rx1960_fail4393
    add rx1960_pos, 1
    ge rx1960_pos, rx1960_eos, rx1960_fail4393
    is_cclass $I11, .CCLASS_WORD, rx1960_tgt, rx1960_pos
    unless $I11, rx1960_fail4393
    add rx1960_pos, 1
    goto alt1963_end4401
  alt1963_14403:
    ge rx1960_pos, rx1960_eos, rx1960_fail4393
    is_cclass $I11, .CCLASS_WORD, rx1960_tgt, rx1960_pos
    unless $I11, rx1960_fail4393
    add rx1960_pos, 1
    goto alt1963_end4401
  alt1963_end4401:
    nqp_rxcommit rx1960_bstack, alt1963_end4401
    rx1960_cur."!cursor_pass"(rx1960_pos, 'backtrack'=>1)
    .return (rx1960_cur)
  rx1960_restart4392:
    repr_get_attr_obj rx1960_cstack, rx1960_cur, rx1960_curclass, "$!cstack"
  rx1960_fail4393:
    unless rx1960_bstack, rx1960_done4391
    pop $I19, rx1960_bstack
    if_null rx1960_cstack, rx1960_cstack_done4396
    unless rx1960_cstack, rx1960_cstack_done4396
    dec $I19
    set $P11, rx1960_cstack[$I19]
  rx1960_cstack_done4396:
    pop rx1960_rep, rx1960_bstack
    pop rx1960_pos, rx1960_bstack
    pop $I19, rx1960_bstack
    lt rx1960_pos, -1, rx1960_done4391
    lt rx1960_pos, 0, rx1960_fail4393
    eq $I19, 0, rx1960_fail4393
    nqp_islist $I20, rx1960_cstack
    unless $I20, rx1960_jump4394
    elements $I18, rx1960_bstack
    le $I18, 0, rx1960_cut4395
    dec $I18
    set $I18, rx1960_bstack[$I18]
  rx1960_cut4395:
    assign rx1960_cstack, $I18
  rx1960_jump4394:
    jump $I19
  rx1960_done4391:
    rx1960_cur."!cursor_fail"()
    .return (rx1960_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_234_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1449
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1965_start
    .local string rx1965_tgt
    .local int rx1965_pos
    .local int rx1965_off
    .local int rx1965_eos
    .local int rx1965_rep
    .local pmc rx1965_cur
    .local pmc rx1965_curclass
    .local pmc rx1965_bstack
    .local pmc rx1965_cstack
    rx1965_start = self."!cursor_start_all"()
    set rx1965_cur, rx1965_start[0]
    set rx1965_tgt, rx1965_start[1]
    set rx1965_pos, rx1965_start[2]
    set rx1965_curclass, rx1965_start[3]
    set rx1965_bstack, rx1965_start[4]
    set $I19, rx1965_start[5]
    store_lex unicode:"$\x{a2}", rx1965_cur
    length rx1965_eos, rx1965_tgt
    eq $I19, 1, rx1965_restart4407
    gt rx1965_pos, rx1965_eos, rx1965_fail4408
    repr_get_attr_int $I11, self, rx1965_curclass, "$!from"
    ne $I11, -1, rxscan1966_done4414
    goto rxscan1966_scan4413
  rxscan1966_loop4412:
    inc rx1965_pos
    gt rx1965_pos, rx1965_eos, rx1965_fail4408
    repr_bind_attr_int rx1965_cur, rx1965_curclass, "$!from", rx1965_pos
  rxscan1966_scan4413:
    nqp_rxmark rx1965_bstack, rxscan1966_loop4412, rx1965_pos, 0
  rxscan1966_done4414:
    ge rx1965_pos, rx1965_eos, rx1965_fail4408
    substr $S11, rx1965_tgt, rx1965_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx1965_fail4408
    repr_bind_attr_int rx1965_cur, rx1965_curclass, "$!pos", rx1965_pos
    $P11 = rx1965_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1965_curclass, "$!pos"
    lt $I11, 0, rx1965_fail4408
    nqp_rxmark rx1965_bstack, rxsubrule1967_pass4415, -1, 0
  rxsubrule1967_pass4415:
    rx1965_cstack = rx1965_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1965_pos, $P11, rx1965_curclass, "$!pos"
    rx1965_cur."!cursor_pass"(rx1965_pos, "assertion:sym<{ }>", 'backtrack'=>1)
    .return (rx1965_cur)
  rx1965_restart4407:
    repr_get_attr_obj rx1965_cstack, rx1965_cur, rx1965_curclass, "$!cstack"
  rx1965_fail4408:
    unless rx1965_bstack, rx1965_done4406
    pop $I19, rx1965_bstack
    if_null rx1965_cstack, rx1965_cstack_done4411
    unless rx1965_cstack, rx1965_cstack_done4411
    dec $I19
    set $P11, rx1965_cstack[$I19]
  rx1965_cstack_done4411:
    pop rx1965_rep, rx1965_bstack
    pop rx1965_pos, rx1965_bstack
    pop $I19, rx1965_bstack
    lt rx1965_pos, -1, rx1965_done4406
    lt rx1965_pos, 0, rx1965_fail4408
    eq $I19, 0, rx1965_fail4408
    nqp_islist $I20, rx1965_cstack
    unless $I20, rx1965_jump4409
    elements $I18, rx1965_bstack
    le $I18, 0, rx1965_cut4410
    dec $I18
    set $I18, rx1965_bstack[$I18]
  rx1965_cut4410:
    assign rx1965_cstack, $I18
  rx1965_jump4409:
    jump $I19
  rx1965_done4406:
    rx1965_cur."!cursor_fail"()
    .return (rx1965_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_235_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1453
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_236_1361537952.49511' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_237_1361537952.49511' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1968_start
    .local string rx1968_tgt
    .local int rx1968_pos
    .local int rx1968_off
    .local int rx1968_eos
    .local int rx1968_rep
    .local pmc rx1968_cur
    .local pmc rx1968_curclass
    .local pmc rx1968_bstack
    .local pmc rx1968_cstack
    rx1968_start = self."!cursor_start_all"()
    set rx1968_cur, rx1968_start[0]
    set rx1968_tgt, rx1968_start[1]
    set rx1968_pos, rx1968_start[2]
    set rx1968_curclass, rx1968_start[3]
    set rx1968_bstack, rx1968_start[4]
    set $I19, rx1968_start[5]
    store_lex unicode:"$\x{a2}", rx1968_cur
    length rx1968_eos, rx1968_tgt
    eq $I19, 1, rx1968_restart4418
    gt rx1968_pos, rx1968_eos, rx1968_fail4419
    repr_get_attr_int $I11, self, rx1968_curclass, "$!from"
    ne $I11, -1, rxscan1969_done4425
    goto rxscan1969_scan4424
  rxscan1969_loop4423:
    inc rx1968_pos
    gt rx1968_pos, rx1968_eos, rx1968_fail4419
    repr_bind_attr_int rx1968_cur, rx1968_curclass, "$!from", rx1968_pos
  rxscan1969_scan4424:
    nqp_rxmark rx1968_bstack, rxscan1969_loop4423, rx1968_pos, 0
  rxscan1969_done4425:
    add $I11, rx1968_pos, 1
    gt $I11, rx1968_eos, rx1968_fail4419
    substr $S10, rx1968_tgt, rx1968_pos, 1
    ne $S10, ucs4:"?", rx1968_fail4419
    add rx1968_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1970_04427
    nqp_push_label $P11, alt1970_14438
    nqp_rxmark rx1968_bstack, alt1970_end4426, -1, 0
    rx1968_cur."!alt"(rx1968_pos, "alt_nfa__40_1361537957.29992", $P11)
    goto rx1968_fail4419
  alt1970_04427:
    .const 'Sub' $P5001 = 'cuid_236_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1968_cur, rx1968_curclass, "$!pos", rx1968_pos
    $P11 = rx1968_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1968_curclass, "$!pos"
    lt $I11, 0, rx1968_fail4419
    goto alt1970_end4426
  alt1970_14438:
    .const 'Sub' $P5002 = 'cuid_237_1361537952.49511' 
    capture_lex $P5002
    repr_bind_attr_int rx1968_cur, rx1968_curclass, "$!pos", rx1968_pos
    $P11 = rx1968_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1968_curclass, "$!pos"
    ge $I11, 0, rx1968_fail4419
    repr_bind_attr_int rx1968_cur, rx1968_curclass, "$!pos", rx1968_pos
    $P11 = rx1968_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1968_curclass, "$!pos"
    lt $I11, 0, rx1968_fail4419
    nqp_rxmark rx1968_bstack, rxsubrule1975_pass4449, -1, 0
  rxsubrule1975_pass4449:
    rx1968_cstack = rx1968_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1968_pos, $P11, rx1968_curclass, "$!pos"
    goto alt1970_end4426
  alt1970_end4426:
    nqp_rxcommit rx1968_bstack, alt1970_end4426
    rx1968_cur."!cursor_pass"(rx1968_pos, "assertion:sym<?>", 'backtrack'=>1)
    .return (rx1968_cur)
  rx1968_restart4418:
    repr_get_attr_obj rx1968_cstack, rx1968_cur, rx1968_curclass, "$!cstack"
  rx1968_fail4419:
    unless rx1968_bstack, rx1968_done4417
    pop $I19, rx1968_bstack
    if_null rx1968_cstack, rx1968_cstack_done4422
    unless rx1968_cstack, rx1968_cstack_done4422
    dec $I19
    set $P11, rx1968_cstack[$I19]
  rx1968_cstack_done4422:
    pop rx1968_rep, rx1968_bstack
    pop rx1968_pos, rx1968_bstack
    pop $I19, rx1968_bstack
    lt rx1968_pos, -1, rx1968_done4417
    lt rx1968_pos, 0, rx1968_fail4419
    eq $I19, 0, rx1968_fail4419
    nqp_islist $I20, rx1968_cstack
    unless $I20, rx1968_jump4420
    elements $I18, rx1968_bstack
    le $I18, 0, rx1968_cut4421
    dec $I18
    set $I18, rx1968_bstack[$I18]
  rx1968_cut4421:
    assign rx1968_cstack, $I18
  rx1968_jump4420:
    jump $I19
  rx1968_done4417:
    rx1968_cur."!cursor_fail"()
    .return (rx1968_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_236_1361537952.49511") :anon :lex :outer("cuid_235_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1971_start
    .local string rx1971_tgt
    .local int rx1971_pos
    .local int rx1971_off
    .local int rx1971_eos
    .local int rx1971_rep
    .local pmc rx1971_cur
    .local pmc rx1971_curclass
    .local pmc rx1971_bstack
    .local pmc rx1971_cstack
    rx1971_start = self."!cursor_start_all"()
    set rx1971_cur, rx1971_start[0]
    set rx1971_tgt, rx1971_start[1]
    set rx1971_pos, rx1971_start[2]
    set rx1971_curclass, rx1971_start[3]
    set rx1971_bstack, rx1971_start[4]
    set $I19, rx1971_start[5]
    store_lex unicode:"$\x{a2}", rx1971_cur
    length rx1971_eos, rx1971_tgt
    eq $I19, 1, rx1971_restart4430
    gt rx1971_pos, rx1971_eos, rx1971_fail4431
    repr_get_attr_int $I11, self, rx1971_curclass, "$!from"
    ne $I11, -1, rxscan1972_done4437
    goto rxscan1972_scan4436
  rxscan1972_loop4435:
    inc rx1971_pos
    gt rx1971_pos, rx1971_eos, rx1971_fail4431
    repr_bind_attr_int rx1971_cur, rx1971_curclass, "$!from", rx1971_pos
  rxscan1972_scan4436:
    nqp_rxmark rx1971_bstack, rxscan1972_loop4435, rx1971_pos, 0
  rxscan1972_done4437:
    add $I11, rx1971_pos, 1
    gt $I11, rx1971_eos, rx1971_fail4431
    substr $S10, rx1971_tgt, rx1971_pos, 1
    ne $S10, ucs4:">", rx1971_fail4431
    add rx1971_pos, 1
    rx1971_cur."!cursor_pass"(rx1971_pos, 'backtrack'=>1)
    .return (rx1971_cur)
  rx1971_restart4430:
    repr_get_attr_obj rx1971_cstack, rx1971_cur, rx1971_curclass, "$!cstack"
  rx1971_fail4431:
    unless rx1971_bstack, rx1971_done4429
    pop $I19, rx1971_bstack
    if_null rx1971_cstack, rx1971_cstack_done4434
    unless rx1971_cstack, rx1971_cstack_done4434
    dec $I19
    set $P11, rx1971_cstack[$I19]
  rx1971_cstack_done4434:
    pop rx1971_rep, rx1971_bstack
    pop rx1971_pos, rx1971_bstack
    pop $I19, rx1971_bstack
    lt rx1971_pos, -1, rx1971_done4429
    lt rx1971_pos, 0, rx1971_fail4431
    eq $I19, 0, rx1971_fail4431
    nqp_islist $I20, rx1971_cstack
    unless $I20, rx1971_jump4432
    elements $I18, rx1971_bstack
    le $I18, 0, rx1971_cut4433
    dec $I18
    set $I18, rx1971_bstack[$I18]
  rx1971_cut4433:
    assign rx1971_cstack, $I18
  rx1971_jump4432:
    jump $I19
  rx1971_done4429:
    rx1971_cur."!cursor_fail"()
    .return (rx1971_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1361537952.49511") :anon :lex :outer("cuid_235_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1973_start
    .local string rx1973_tgt
    .local int rx1973_pos
    .local int rx1973_off
    .local int rx1973_eos
    .local int rx1973_rep
    .local pmc rx1973_cur
    .local pmc rx1973_curclass
    .local pmc rx1973_bstack
    .local pmc rx1973_cstack
    rx1973_start = self."!cursor_start_all"()
    set rx1973_cur, rx1973_start[0]
    set rx1973_tgt, rx1973_start[1]
    set rx1973_pos, rx1973_start[2]
    set rx1973_curclass, rx1973_start[3]
    set rx1973_bstack, rx1973_start[4]
    set $I19, rx1973_start[5]
    store_lex unicode:"$\x{a2}", rx1973_cur
    length rx1973_eos, rx1973_tgt
    eq $I19, 1, rx1973_restart4441
    gt rx1973_pos, rx1973_eos, rx1973_fail4442
    repr_get_attr_int $I11, self, rx1973_curclass, "$!from"
    ne $I11, -1, rxscan1974_done4448
    goto rxscan1974_scan4447
  rxscan1974_loop4446:
    inc rx1973_pos
    gt rx1973_pos, rx1973_eos, rx1973_fail4442
    repr_bind_attr_int rx1973_cur, rx1973_curclass, "$!from", rx1973_pos
  rxscan1974_scan4447:
    nqp_rxmark rx1973_bstack, rxscan1974_loop4446, rx1973_pos, 0
  rxscan1974_done4448:
    add $I11, rx1973_pos, 1
    gt $I11, rx1973_eos, rx1973_fail4442
    substr $S10, rx1973_tgt, rx1973_pos, 1
    ne $S10, ucs4:"{", rx1973_fail4442
    add rx1973_pos, 1
    rx1973_cur."!cursor_pass"(rx1973_pos, 'backtrack'=>1)
    .return (rx1973_cur)
  rx1973_restart4441:
    repr_get_attr_obj rx1973_cstack, rx1973_cur, rx1973_curclass, "$!cstack"
  rx1973_fail4442:
    unless rx1973_bstack, rx1973_done4440
    pop $I19, rx1973_bstack
    if_null rx1973_cstack, rx1973_cstack_done4445
    unless rx1973_cstack, rx1973_cstack_done4445
    dec $I19
    set $P11, rx1973_cstack[$I19]
  rx1973_cstack_done4445:
    pop rx1973_rep, rx1973_bstack
    pop rx1973_pos, rx1973_bstack
    pop $I19, rx1973_bstack
    lt rx1973_pos, -1, rx1973_done4440
    lt rx1973_pos, 0, rx1973_fail4442
    eq $I19, 0, rx1973_fail4442
    nqp_islist $I20, rx1973_cstack
    unless $I20, rx1973_jump4443
    elements $I18, rx1973_bstack
    le $I18, 0, rx1973_cut4444
    dec $I18
    set $I18, rx1973_bstack[$I18]
  rx1973_cut4444:
    assign rx1973_cstack, $I18
  rx1973_jump4443:
    jump $I19
  rx1973_done4440:
    rx1973_cur."!cursor_fail"()
    .return (rx1973_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_238_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1454
    .param pmc _lex_param_0 
    .const 'Sub' $P5003 = 'cuid_239_1361537952.49511' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_240_1361537952.49511' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1976_start
    .local string rx1976_tgt
    .local int rx1976_pos
    .local int rx1976_off
    .local int rx1976_eos
    .local int rx1976_rep
    .local pmc rx1976_cur
    .local pmc rx1976_curclass
    .local pmc rx1976_bstack
    .local pmc rx1976_cstack
    rx1976_start = self."!cursor_start_all"()
    set rx1976_cur, rx1976_start[0]
    set rx1976_tgt, rx1976_start[1]
    set rx1976_pos, rx1976_start[2]
    set rx1976_curclass, rx1976_start[3]
    set rx1976_bstack, rx1976_start[4]
    set $I19, rx1976_start[5]
    store_lex unicode:"$\x{a2}", rx1976_cur
    length rx1976_eos, rx1976_tgt
    eq $I19, 1, rx1976_restart4452
    gt rx1976_pos, rx1976_eos, rx1976_fail4453
    repr_get_attr_int $I11, self, rx1976_curclass, "$!from"
    ne $I11, -1, rxscan1977_done4459
    goto rxscan1977_scan4458
  rxscan1977_loop4457:
    inc rx1976_pos
    gt rx1976_pos, rx1976_eos, rx1976_fail4453
    repr_bind_attr_int rx1976_cur, rx1976_curclass, "$!from", rx1976_pos
  rxscan1977_scan4458:
    nqp_rxmark rx1976_bstack, rxscan1977_loop4457, rx1976_pos, 0
  rxscan1977_done4459:
    add $I11, rx1976_pos, 1
    gt $I11, rx1976_eos, rx1976_fail4453
    substr $S10, rx1976_tgt, rx1976_pos, 1
    ne $S10, ucs4:"!", rx1976_fail4453
    add rx1976_pos, 1
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1978_04461
    nqp_push_label $P11, alt1978_14472
    nqp_rxmark rx1976_bstack, alt1978_end4460, -1, 0
    rx1976_cur."!alt"(rx1976_pos, "alt_nfa__41_1361537957.31552", $P11)
    goto rx1976_fail4453
  alt1978_04461:
    .const 'Sub' $P5001 = 'cuid_239_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1976_cur, rx1976_curclass, "$!pos", rx1976_pos
    $P11 = rx1976_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1976_curclass, "$!pos"
    lt $I11, 0, rx1976_fail4453
    goto alt1978_end4460
  alt1978_14472:
    .const 'Sub' $P5002 = 'cuid_240_1361537952.49511' 
    capture_lex $P5002
    repr_bind_attr_int rx1976_cur, rx1976_curclass, "$!pos", rx1976_pos
    $P11 = rx1976_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx1976_curclass, "$!pos"
    ge $I11, 0, rx1976_fail4453
    repr_bind_attr_int rx1976_cur, rx1976_curclass, "$!pos", rx1976_pos
    $P11 = rx1976_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1976_curclass, "$!pos"
    lt $I11, 0, rx1976_fail4453
    nqp_rxmark rx1976_bstack, rxsubrule1983_pass4483, -1, 0
  rxsubrule1983_pass4483:
    rx1976_cstack = rx1976_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1976_pos, $P11, rx1976_curclass, "$!pos"
    goto alt1978_end4460
  alt1978_end4460:
    nqp_rxcommit rx1976_bstack, alt1978_end4460
    rx1976_cur."!cursor_pass"(rx1976_pos, "assertion:sym<!>", 'backtrack'=>1)
    .return (rx1976_cur)
  rx1976_restart4452:
    repr_get_attr_obj rx1976_cstack, rx1976_cur, rx1976_curclass, "$!cstack"
  rx1976_fail4453:
    unless rx1976_bstack, rx1976_done4451
    pop $I19, rx1976_bstack
    if_null rx1976_cstack, rx1976_cstack_done4456
    unless rx1976_cstack, rx1976_cstack_done4456
    dec $I19
    set $P11, rx1976_cstack[$I19]
  rx1976_cstack_done4456:
    pop rx1976_rep, rx1976_bstack
    pop rx1976_pos, rx1976_bstack
    pop $I19, rx1976_bstack
    lt rx1976_pos, -1, rx1976_done4451
    lt rx1976_pos, 0, rx1976_fail4453
    eq $I19, 0, rx1976_fail4453
    nqp_islist $I20, rx1976_cstack
    unless $I20, rx1976_jump4454
    elements $I18, rx1976_bstack
    le $I18, 0, rx1976_cut4455
    dec $I18
    set $I18, rx1976_bstack[$I18]
  rx1976_cut4455:
    assign rx1976_cstack, $I18
  rx1976_jump4454:
    jump $I19
  rx1976_done4451:
    rx1976_cur."!cursor_fail"()
    .return (rx1976_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1361537952.49511") :anon :lex :outer("cuid_238_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1979_start
    .local string rx1979_tgt
    .local int rx1979_pos
    .local int rx1979_off
    .local int rx1979_eos
    .local int rx1979_rep
    .local pmc rx1979_cur
    .local pmc rx1979_curclass
    .local pmc rx1979_bstack
    .local pmc rx1979_cstack
    rx1979_start = self."!cursor_start_all"()
    set rx1979_cur, rx1979_start[0]
    set rx1979_tgt, rx1979_start[1]
    set rx1979_pos, rx1979_start[2]
    set rx1979_curclass, rx1979_start[3]
    set rx1979_bstack, rx1979_start[4]
    set $I19, rx1979_start[5]
    store_lex unicode:"$\x{a2}", rx1979_cur
    length rx1979_eos, rx1979_tgt
    eq $I19, 1, rx1979_restart4464
    gt rx1979_pos, rx1979_eos, rx1979_fail4465
    repr_get_attr_int $I11, self, rx1979_curclass, "$!from"
    ne $I11, -1, rxscan1980_done4471
    goto rxscan1980_scan4470
  rxscan1980_loop4469:
    inc rx1979_pos
    gt rx1979_pos, rx1979_eos, rx1979_fail4465
    repr_bind_attr_int rx1979_cur, rx1979_curclass, "$!from", rx1979_pos
  rxscan1980_scan4470:
    nqp_rxmark rx1979_bstack, rxscan1980_loop4469, rx1979_pos, 0
  rxscan1980_done4471:
    add $I11, rx1979_pos, 1
    gt $I11, rx1979_eos, rx1979_fail4465
    substr $S10, rx1979_tgt, rx1979_pos, 1
    ne $S10, ucs4:">", rx1979_fail4465
    add rx1979_pos, 1
    rx1979_cur."!cursor_pass"(rx1979_pos, 'backtrack'=>1)
    .return (rx1979_cur)
  rx1979_restart4464:
    repr_get_attr_obj rx1979_cstack, rx1979_cur, rx1979_curclass, "$!cstack"
  rx1979_fail4465:
    unless rx1979_bstack, rx1979_done4463
    pop $I19, rx1979_bstack
    if_null rx1979_cstack, rx1979_cstack_done4468
    unless rx1979_cstack, rx1979_cstack_done4468
    dec $I19
    set $P11, rx1979_cstack[$I19]
  rx1979_cstack_done4468:
    pop rx1979_rep, rx1979_bstack
    pop rx1979_pos, rx1979_bstack
    pop $I19, rx1979_bstack
    lt rx1979_pos, -1, rx1979_done4463
    lt rx1979_pos, 0, rx1979_fail4465
    eq $I19, 0, rx1979_fail4465
    nqp_islist $I20, rx1979_cstack
    unless $I20, rx1979_jump4466
    elements $I18, rx1979_bstack
    le $I18, 0, rx1979_cut4467
    dec $I18
    set $I18, rx1979_bstack[$I18]
  rx1979_cut4467:
    assign rx1979_cstack, $I18
  rx1979_jump4466:
    jump $I19
  rx1979_done4463:
    rx1979_cur."!cursor_fail"()
    .return (rx1979_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1361537952.49511") :anon :lex :outer("cuid_238_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1981_start
    .local string rx1981_tgt
    .local int rx1981_pos
    .local int rx1981_off
    .local int rx1981_eos
    .local int rx1981_rep
    .local pmc rx1981_cur
    .local pmc rx1981_curclass
    .local pmc rx1981_bstack
    .local pmc rx1981_cstack
    rx1981_start = self."!cursor_start_all"()
    set rx1981_cur, rx1981_start[0]
    set rx1981_tgt, rx1981_start[1]
    set rx1981_pos, rx1981_start[2]
    set rx1981_curclass, rx1981_start[3]
    set rx1981_bstack, rx1981_start[4]
    set $I19, rx1981_start[5]
    store_lex unicode:"$\x{a2}", rx1981_cur
    length rx1981_eos, rx1981_tgt
    eq $I19, 1, rx1981_restart4475
    gt rx1981_pos, rx1981_eos, rx1981_fail4476
    repr_get_attr_int $I11, self, rx1981_curclass, "$!from"
    ne $I11, -1, rxscan1982_done4482
    goto rxscan1982_scan4481
  rxscan1982_loop4480:
    inc rx1981_pos
    gt rx1981_pos, rx1981_eos, rx1981_fail4476
    repr_bind_attr_int rx1981_cur, rx1981_curclass, "$!from", rx1981_pos
  rxscan1982_scan4481:
    nqp_rxmark rx1981_bstack, rxscan1982_loop4480, rx1981_pos, 0
  rxscan1982_done4482:
    add $I11, rx1981_pos, 1
    gt $I11, rx1981_eos, rx1981_fail4476
    substr $S10, rx1981_tgt, rx1981_pos, 1
    ne $S10, ucs4:"{", rx1981_fail4476
    add rx1981_pos, 1
    rx1981_cur."!cursor_pass"(rx1981_pos, 'backtrack'=>1)
    .return (rx1981_cur)
  rx1981_restart4475:
    repr_get_attr_obj rx1981_cstack, rx1981_cur, rx1981_curclass, "$!cstack"
  rx1981_fail4476:
    unless rx1981_bstack, rx1981_done4474
    pop $I19, rx1981_bstack
    if_null rx1981_cstack, rx1981_cstack_done4479
    unless rx1981_cstack, rx1981_cstack_done4479
    dec $I19
    set $P11, rx1981_cstack[$I19]
  rx1981_cstack_done4479:
    pop rx1981_rep, rx1981_bstack
    pop rx1981_pos, rx1981_bstack
    pop $I19, rx1981_bstack
    lt rx1981_pos, -1, rx1981_done4474
    lt rx1981_pos, 0, rx1981_fail4476
    eq $I19, 0, rx1981_fail4476
    nqp_islist $I20, rx1981_cstack
    unless $I20, rx1981_jump4477
    elements $I18, rx1981_bstack
    le $I18, 0, rx1981_cut4478
    dec $I18
    set $I18, rx1981_bstack[$I18]
  rx1981_cut4478:
    assign rx1981_cstack, $I18
  rx1981_jump4477:
    jump $I19
  rx1981_done4474:
    rx1981_cur."!cursor_fail"()
    .return (rx1981_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_241_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1456
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_242_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1984_start
    .local string rx1984_tgt
    .local int rx1984_pos
    .local int rx1984_off
    .local int rx1984_eos
    .local int rx1984_rep
    .local pmc rx1984_cur
    .local pmc rx1984_curclass
    .local pmc rx1984_bstack
    .local pmc rx1984_cstack
    rx1984_start = self."!cursor_start_all"()
    set rx1984_cur, rx1984_start[0]
    set rx1984_tgt, rx1984_start[1]
    set rx1984_pos, rx1984_start[2]
    set rx1984_curclass, rx1984_start[3]
    set rx1984_bstack, rx1984_start[4]
    set $I19, rx1984_start[5]
    store_lex unicode:"$\x{a2}", rx1984_cur
    length rx1984_eos, rx1984_tgt
    eq $I19, 1, rx1984_restart4486
    gt rx1984_pos, rx1984_eos, rx1984_fail4487
    repr_get_attr_int $I11, self, rx1984_curclass, "$!from"
    ne $I11, -1, rxscan1985_done4493
    goto rxscan1985_scan4492
  rxscan1985_loop4491:
    inc rx1984_pos
    gt rx1984_pos, rx1984_eos, rx1984_fail4487
    repr_bind_attr_int rx1984_cur, rx1984_curclass, "$!from", rx1984_pos
  rxscan1985_scan4492:
    nqp_rxmark rx1984_bstack, rxscan1985_loop4491, rx1984_pos, 0
  rxscan1985_done4493:
    nqp_rxmark rx1984_bstack, rxcap1986_fail4495, rx1984_pos, 0
    ge rx1984_pos, rx1984_eos, rx1984_fail4487
    substr $S11, rx1984_tgt, rx1984_pos, 1
    index $I11, ucs4:"?!", $S11
    lt $I11, 0, rx1984_fail4487
    inc rx1984_pos
    .const 'Sub' $P5001 = 'cuid_242_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1984_cur, rx1984_curclass, "$!pos", rx1984_pos
    $P11 = rx1984_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1984_curclass, "$!pos"
    lt $I11, 0, rx1984_fail4487
    nqp_rxpeek $I19, rx1984_bstack, rxcap1986_fail4495
    inc $I19
    set $I11, rx1984_bstack[$I19]
    repr_bind_attr_int rx1984_cur, rx1984_curclass, "$!pos", rx1984_pos
    $P11 = rx1984_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx1984_pos)
    rx1984_cstack = rx1984_cur."!cursor_capture"($P11, "zw")
    goto rxcap1986_done4494
  rxcap1986_fail4495:
    goto rx1984_fail4487
  rxcap1986_done4494:
    repr_bind_attr_int rx1984_cur, rx1984_curclass, "$!pos", rx1984_pos
    $P11 = rx1984_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx1984_curclass, "$!pos"
    lt $I11, 0, rx1984_fail4487
    nqp_rxmark rx1984_bstack, rxsubrule1989_pass4506, -1, 0
  rxsubrule1989_pass4506:
    rx1984_cstack = rx1984_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx1984_pos, $P11, rx1984_curclass, "$!pos"
    rx1984_cur."!cursor_pass"(rx1984_pos, "assertion:sym<?{ }>", 'backtrack'=>1)
    .return (rx1984_cur)
  rx1984_restart4486:
    repr_get_attr_obj rx1984_cstack, rx1984_cur, rx1984_curclass, "$!cstack"
  rx1984_fail4487:
    unless rx1984_bstack, rx1984_done4485
    pop $I19, rx1984_bstack
    if_null rx1984_cstack, rx1984_cstack_done4490
    unless rx1984_cstack, rx1984_cstack_done4490
    dec $I19
    set $P11, rx1984_cstack[$I19]
  rx1984_cstack_done4490:
    pop rx1984_rep, rx1984_bstack
    pop rx1984_pos, rx1984_bstack
    pop $I19, rx1984_bstack
    lt rx1984_pos, -1, rx1984_done4485
    lt rx1984_pos, 0, rx1984_fail4487
    eq $I19, 0, rx1984_fail4487
    nqp_islist $I20, rx1984_cstack
    unless $I20, rx1984_jump4488
    elements $I18, rx1984_bstack
    le $I18, 0, rx1984_cut4489
    dec $I18
    set $I18, rx1984_bstack[$I18]
  rx1984_cut4489:
    assign rx1984_cstack, $I18
  rx1984_jump4488:
    jump $I19
  rx1984_done4485:
    rx1984_cur."!cursor_fail"()
    .return (rx1984_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1361537952.49511") :anon :lex :outer("cuid_241_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1987_start
    .local string rx1987_tgt
    .local int rx1987_pos
    .local int rx1987_off
    .local int rx1987_eos
    .local int rx1987_rep
    .local pmc rx1987_cur
    .local pmc rx1987_curclass
    .local pmc rx1987_bstack
    .local pmc rx1987_cstack
    rx1987_start = self."!cursor_start_all"()
    set rx1987_cur, rx1987_start[0]
    set rx1987_tgt, rx1987_start[1]
    set rx1987_pos, rx1987_start[2]
    set rx1987_curclass, rx1987_start[3]
    set rx1987_bstack, rx1987_start[4]
    set $I19, rx1987_start[5]
    store_lex unicode:"$\x{a2}", rx1987_cur
    length rx1987_eos, rx1987_tgt
    eq $I19, 1, rx1987_restart4498
    gt rx1987_pos, rx1987_eos, rx1987_fail4499
    repr_get_attr_int $I11, self, rx1987_curclass, "$!from"
    ne $I11, -1, rxscan1988_done4505
    goto rxscan1988_scan4504
  rxscan1988_loop4503:
    inc rx1987_pos
    gt rx1987_pos, rx1987_eos, rx1987_fail4499
    repr_bind_attr_int rx1987_cur, rx1987_curclass, "$!from", rx1987_pos
  rxscan1988_scan4504:
    nqp_rxmark rx1987_bstack, rxscan1988_loop4503, rx1987_pos, 0
  rxscan1988_done4505:
    add $I11, rx1987_pos, 1
    gt $I11, rx1987_eos, rx1987_fail4499
    substr $S10, rx1987_tgt, rx1987_pos, 1
    ne $S10, ucs4:"{", rx1987_fail4499
    add rx1987_pos, 1
    rx1987_cur."!cursor_pass"(rx1987_pos, 'backtrack'=>1)
    .return (rx1987_cur)
  rx1987_restart4498:
    repr_get_attr_obj rx1987_cstack, rx1987_cur, rx1987_curclass, "$!cstack"
  rx1987_fail4499:
    unless rx1987_bstack, rx1987_done4497
    pop $I19, rx1987_bstack
    if_null rx1987_cstack, rx1987_cstack_done4502
    unless rx1987_cstack, rx1987_cstack_done4502
    dec $I19
    set $P11, rx1987_cstack[$I19]
  rx1987_cstack_done4502:
    pop rx1987_rep, rx1987_bstack
    pop rx1987_pos, rx1987_bstack
    pop $I19, rx1987_bstack
    lt rx1987_pos, -1, rx1987_done4497
    lt rx1987_pos, 0, rx1987_fail4499
    eq $I19, 0, rx1987_fail4499
    nqp_islist $I20, rx1987_cstack
    unless $I20, rx1987_jump4500
    elements $I18, rx1987_bstack
    le $I18, 0, rx1987_cut4501
    dec $I18
    set $I18, rx1987_bstack[$I18]
  rx1987_cut4501:
    assign rx1987_cstack, $I18
  rx1987_jump4500:
    jump $I19
  rx1987_done4497:
    rx1987_cur."!cursor_fail"()
    .return (rx1987_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_243_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1460
    .param pmc _lex_param_0 
    .const 'Sub' $P5002 = 'cuid_244_1361537952.49511' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx1990_start
    .local string rx1990_tgt
    .local int rx1990_pos
    .local int rx1990_off
    .local int rx1990_eos
    .local int rx1990_rep
    .local pmc rx1990_cur
    .local pmc rx1990_curclass
    .local pmc rx1990_bstack
    .local pmc rx1990_cstack
    rx1990_start = self."!cursor_start_all"()
    set rx1990_cur, rx1990_start[0]
    set rx1990_tgt, rx1990_start[1]
    set rx1990_pos, rx1990_start[2]
    set rx1990_curclass, rx1990_start[3]
    set rx1990_bstack, rx1990_start[4]
    set $I19, rx1990_start[5]
    store_lex unicode:"$\x{a2}", rx1990_cur
    length rx1990_eos, rx1990_tgt
    eq $I19, 1, rx1990_restart4509
    gt rx1990_pos, rx1990_eos, rx1990_fail4510
    repr_get_attr_int $I11, self, rx1990_curclass, "$!from"
    ne $I11, -1, rxscan1991_done4516
    goto rxscan1991_scan4515
  rxscan1991_loop4514:
    inc rx1990_pos
    gt rx1990_pos, rx1990_eos, rx1990_fail4510
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!from", rx1990_pos
  rxscan1991_scan4515:
    nqp_rxmark rx1990_bstack, rxscan1991_loop4514, rx1990_pos, 0
  rxscan1991_done4516:
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    nqp_rxmark rx1990_bstack, rxsubrule1992_pass4517, -1, 0
  rxsubrule1992_pass4517:
    rx1990_cstack = rx1990_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    nqp_rxmark rx1990_bstack, rxquantr1993_done4519, rx1990_pos, 0
  rxquantr1993_loop4518:
    new $P11, "ResizableIntegerArray"
    nqp_push_label $P11, alt1994_04521
    nqp_push_label $P11, alt1994_14532
    nqp_push_label $P11, alt1994_24534
    nqp_push_label $P11, alt1994_34536
    nqp_push_label $P11, alt1994_44538
    nqp_rxmark rx1990_bstack, alt1994_end4520, -1, 0
    rx1990_cur."!alt"(rx1990_pos, "alt_nfa__42_1361537957.36232", $P11)
    goto rx1990_fail4510
  alt1994_04521:
    .const 'Sub' $P5001 = 'cuid_244_1361537952.49511' 
    capture_lex $P5001
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    goto alt1994_end4520
  alt1994_14532:
    add $I11, rx1990_pos, 1
    gt $I11, rx1990_eos, rx1990_fail4510
    substr $S10, rx1990_tgt, rx1990_pos, 1
    ne $S10, ucs4:"=", rx1990_fail4510
    add rx1990_pos, 1
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    nqp_rxmark rx1990_bstack, rxsubrule1997_pass4533, -1, 0
  rxsubrule1997_pass4533:
    rx1990_cstack = rx1990_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    goto alt1994_end4520
  alt1994_24534:
    add $I11, rx1990_pos, 1
    gt $I11, rx1990_eos, rx1990_fail4510
    substr $S10, rx1990_tgt, rx1990_pos, 1
    ne $S10, ucs4:":", rx1990_fail4510
    add rx1990_pos, 1
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    nqp_rxmark rx1990_bstack, rxsubrule1998_pass4535, -1, 0
  rxsubrule1998_pass4535:
    rx1990_cstack = rx1990_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    goto alt1994_end4520
  alt1994_34536:
    add $I11, rx1990_pos, 1
    gt $I11, rx1990_eos, rx1990_fail4510
    substr $S10, rx1990_tgt, rx1990_pos, 1
    ne $S10, ucs4:"(", rx1990_fail4510
    add rx1990_pos, 1
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."LANG"("MAIN", "arglist")
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    nqp_rxmark rx1990_bstack, rxsubrule1999_pass4537, -1, 0
  rxsubrule1999_pass4537:
    rx1990_cstack = rx1990_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    add $I11, rx1990_pos, 1
    gt $I11, rx1990_eos, rx1990_fail4510
    substr $S10, rx1990_tgt, rx1990_pos, 1
    ne $S10, ucs4:")", rx1990_fail4510
    add rx1990_pos, 1
    goto alt1994_end4520
  alt1994_44538:
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    repr_bind_attr_int rx1990_cur, rx1990_curclass, "$!pos", rx1990_pos
    $P11 = rx1990_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx1990_curclass, "$!pos"
    lt $I11, 0, rx1990_fail4510
    nqp_rxmark rx1990_bstack, rxsubrule2001_pass4540, -1, 0
  rxsubrule2001_pass4540:
    rx1990_cstack = rx1990_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx1990_pos, $P11, rx1990_curclass, "$!pos"
    goto alt1994_end4520
  alt1994_end4520:
    nqp_rxpeek $I19, rx1990_bstack, rxquantr1993_done4519
    inc $I19
    inc $I19
    set rx1990_rep, rx1990_bstack[$I19]
    nqp_rxcommit rx1990_bstack, rxquantr1993_done4519
    inc rx1990_rep
  rxquantr1993_done4519:
    rx1990_cur."!cursor_pass"(rx1990_pos, "assertion:sym<name>", 'backtrack'=>1)
    .return (rx1990_cur)
  rx1990_restart4509:
    repr_get_attr_obj rx1990_cstack, rx1990_cur, rx1990_curclass, "$!cstack"
  rx1990_fail4510:
    unless rx1990_bstack, rx1990_done4508
    pop $I19, rx1990_bstack
    if_null rx1990_cstack, rx1990_cstack_done4513
    unless rx1990_cstack, rx1990_cstack_done4513
    dec $I19
    set $P11, rx1990_cstack[$I19]
  rx1990_cstack_done4513:
    pop rx1990_rep, rx1990_bstack
    pop rx1990_pos, rx1990_bstack
    pop $I19, rx1990_bstack
    lt rx1990_pos, -1, rx1990_done4508
    lt rx1990_pos, 0, rx1990_fail4510
    eq $I19, 0, rx1990_fail4510
    nqp_islist $I20, rx1990_cstack
    unless $I20, rx1990_jump4511
    elements $I18, rx1990_bstack
    le $I18, 0, rx1990_cut4512
    dec $I18
    set $I18, rx1990_bstack[$I18]
  rx1990_cut4512:
    assign rx1990_cstack, $I18
  rx1990_jump4511:
    jump $I19
  rx1990_done4508:
    rx1990_cur."!cursor_fail"()
    .return (rx1990_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1361537952.49511") :anon :lex :outer("cuid_243_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx1995_start
    .local string rx1995_tgt
    .local int rx1995_pos
    .local int rx1995_off
    .local int rx1995_eos
    .local int rx1995_rep
    .local pmc rx1995_cur
    .local pmc rx1995_curclass
    .local pmc rx1995_bstack
    .local pmc rx1995_cstack
    rx1995_start = self."!cursor_start_all"()
    set rx1995_cur, rx1995_start[0]
    set rx1995_tgt, rx1995_start[1]
    set rx1995_pos, rx1995_start[2]
    set rx1995_curclass, rx1995_start[3]
    set rx1995_bstack, rx1995_start[4]
    set $I19, rx1995_start[5]
    store_lex unicode:"$\x{a2}", rx1995_cur
    length rx1995_eos, rx1995_tgt
    eq $I19, 1, rx1995_restart4524
    gt rx1995_pos, rx1995_eos, rx1995_fail4525
    repr_get_attr_int $I11, self, rx1995_curclass, "$!from"
    ne $I11, -1, rxscan1996_done4531
    goto rxscan1996_scan4530
  rxscan1996_loop4529:
    inc rx1995_pos
    gt rx1995_pos, rx1995_eos, rx1995_fail4525
    repr_bind_attr_int rx1995_cur, rx1995_curclass, "$!from", rx1995_pos
  rxscan1996_scan4530:
    nqp_rxmark rx1995_bstack, rxscan1996_loop4529, rx1995_pos, 0
  rxscan1996_done4531:
    add $I11, rx1995_pos, 1
    gt $I11, rx1995_eos, rx1995_fail4525
    substr $S10, rx1995_tgt, rx1995_pos, 1
    ne $S10, ucs4:">", rx1995_fail4525
    add rx1995_pos, 1
    rx1995_cur."!cursor_pass"(rx1995_pos, 'backtrack'=>1)
    .return (rx1995_cur)
  rx1995_restart4524:
    repr_get_attr_obj rx1995_cstack, rx1995_cur, rx1995_curclass, "$!cstack"
  rx1995_fail4525:
    unless rx1995_bstack, rx1995_done4523
    pop $I19, rx1995_bstack
    if_null rx1995_cstack, rx1995_cstack_done4528
    unless rx1995_cstack, rx1995_cstack_done4528
    dec $I19
    set $P11, rx1995_cstack[$I19]
  rx1995_cstack_done4528:
    pop rx1995_rep, rx1995_bstack
    pop rx1995_pos, rx1995_bstack
    pop $I19, rx1995_bstack
    lt rx1995_pos, -1, rx1995_done4523
    lt rx1995_pos, 0, rx1995_fail4525
    eq $I19, 0, rx1995_fail4525
    nqp_islist $I20, rx1995_cstack
    unless $I20, rx1995_jump4526
    elements $I18, rx1995_bstack
    le $I18, 0, rx1995_cut4527
    dec $I18
    set $I18, rx1995_bstack[$I18]
  rx1995_cut4527:
    assign rx1995_cstack, $I18
  rx1995_jump4526:
    jump $I19
  rx1995_done4523:
    rx1995_cur."!cursor_fail"()
    .return (rx1995_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_245_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1471
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx2002_start
    .local string rx2002_tgt
    .local int rx2002_pos
    .local int rx2002_off
    .local int rx2002_eos
    .local int rx2002_rep
    .local pmc rx2002_cur
    .local pmc rx2002_curclass
    .local pmc rx2002_bstack
    .local pmc rx2002_cstack
    rx2002_start = self."!cursor_start_all"()
    set rx2002_cur, rx2002_start[0]
    set rx2002_tgt, rx2002_start[1]
    set rx2002_pos, rx2002_start[2]
    set rx2002_curclass, rx2002_start[3]
    set rx2002_bstack, rx2002_start[4]
    set $I19, rx2002_start[5]
    store_lex unicode:"$\x{a2}", rx2002_cur
    length rx2002_eos, rx2002_tgt
    eq $I19, 1, rx2002_restart4543
    gt rx2002_pos, rx2002_eos, rx2002_fail4544
    repr_get_attr_int $I11, self, rx2002_curclass, "$!from"
    ne $I11, -1, rxscan2003_done4550
    goto rxscan2003_scan4549
  rxscan2003_loop4548:
    inc rx2002_pos
    gt rx2002_pos, rx2002_eos, rx2002_fail4544
    repr_bind_attr_int rx2002_cur, rx2002_curclass, "$!from", rx2002_pos
  rxscan2003_scan4549:
    nqp_rxmark rx2002_bstack, rxscan2003_loop4548, rx2002_pos, 0
  rxscan2003_done4550:
    ge rx2002_pos, rx2002_eos, rx2002_fail4544
    substr $S11, rx2002_tgt, rx2002_pos, 1
    index $I11, ucs4:"$@", $S11
    lt $I11, 0, rx2002_fail4544
    repr_bind_attr_int rx2002_cur, rx2002_curclass, "$!pos", rx2002_pos
    $P11 = rx2002_cur."LANG"("MAIN", "variable")
    repr_get_attr_int $I11, $P11, rx2002_curclass, "$!pos"
    lt $I11, 0, rx2002_fail4544
    nqp_rxmark rx2002_bstack, rxsubrule2004_pass4551, -1, 0
  rxsubrule2004_pass4551:
    rx2002_cstack = rx2002_cur."!cursor_capture"($P11, "var")
    repr_get_attr_int rx2002_pos, $P11, rx2002_curclass, "$!pos"
    rx2002_cur."!cursor_pass"(rx2002_pos, "assertion:sym<var>", 'backtrack'=>1)
    .return (rx2002_cur)
  rx2002_restart4543:
    repr_get_attr_obj rx2002_cstack, rx2002_cur, rx2002_curclass, "$!cstack"
  rx2002_fail4544:
    unless rx2002_bstack, rx2002_done4542
    pop $I19, rx2002_bstack
    if_null rx2002_cstack, rx2002_cstack_done4547
    unless rx2002_cstack, rx2002_cstack_done4547
    dec $I19
    set $P11, rx2002_cstack[$I19]
  rx2002_cstack_done4547:
    pop rx2002_rep, rx2002_bstack
    pop rx2002_pos, rx2002_bstack
    pop $I19, rx2002_bstack
    lt rx2002_pos, -1, rx2002_done4542
    lt rx2002_pos, 0, rx2002_fail4544
    eq $I19, 0, rx2002_fail4544
    nqp_islist $I20, rx2002_cstack
    unless $I20, rx2002_jump4545
    elements $I18, rx2002_bstack
    le $I18, 0, rx2002_cut4546
    dec $I18
    set $I18, rx2002_bstack[$I18]
  rx2002_cut4546:
    assign rx2002_cstack, $I18
  rx2002_jump4545:
    jump $I19
  rx2002_done4542:
    rx2002_cur."!cursor_fail"()
    .return (rx2002_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_246_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1475
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx2005_start
    .local string rx2005_tgt
    .local int rx2005_pos
    .local int rx2005_off
    .local int rx2005_eos
    .local int rx2005_rep
    .local pmc rx2005_cur
    .local pmc rx2005_curclass
    .local pmc rx2005_bstack
    .local pmc rx2005_cstack
    rx2005_start = self."!cursor_start_all"()
    set rx2005_cur, rx2005_start[0]
    set rx2005_tgt, rx2005_start[1]
    set rx2005_pos, rx2005_start[2]
    set rx2005_curclass, rx2005_start[3]
    set rx2005_bstack, rx2005_start[4]
    set $I19, rx2005_start[5]
    store_lex unicode:"$\x{a2}", rx2005_cur
    length rx2005_eos, rx2005_tgt
    eq $I19, 1, rx2005_restart4554
    gt rx2005_pos, rx2005_eos, rx2005_fail4555
    repr_get_attr_int $I11, self, rx2005_curclass, "$!from"
    ne $I11, -1, rxscan2006_done4561
    goto rxscan2006_scan4560
  rxscan2006_loop4559:
    inc rx2005_pos
    gt rx2005_pos, rx2005_eos, rx2005_fail4555
    repr_bind_attr_int rx2005_cur, rx2005_curclass, "$!from", rx2005_pos
  rxscan2006_scan4560:
    nqp_rxmark rx2005_bstack, rxscan2006_loop4559, rx2005_pos, 0
  rxscan2006_done4561:
    repr_bind_attr_int rx2005_cur, rx2005_curclass, "$!pos", rx2005_pos
    $P11 = rx2005_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx2005_curclass, "$!pos"
    lt $I11, 0, rx2005_fail4555
    nqp_rxmark rx2005_bstack, rxsubrule2007_pass4562, -1, 0
  rxsubrule2007_pass4562:
    rx2005_cstack = rx2005_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx2005_pos, $P11, rx2005_curclass, "$!pos"
    rx2005_cur."!cursor_pass"(rx2005_pos, "codeblock", 'backtrack'=>1)
    .return (rx2005_cur)
  rx2005_restart4554:
    repr_get_attr_obj rx2005_cstack, rx2005_cur, rx2005_curclass, "$!cstack"
  rx2005_fail4555:
    unless rx2005_bstack, rx2005_done4553
    pop $I19, rx2005_bstack
    if_null rx2005_cstack, rx2005_cstack_done4558
    unless rx2005_cstack, rx2005_cstack_done4558
    dec $I19
    set $P11, rx2005_cstack[$I19]
  rx2005_cstack_done4558:
    pop rx2005_rep, rx2005_bstack
    pop rx2005_pos, rx2005_bstack
    pop $I19, rx2005_bstack
    lt rx2005_pos, -1, rx2005_done4553
    lt rx2005_pos, 0, rx2005_fail4555
    eq $I19, 0, rx2005_fail4555
    nqp_islist $I20, rx2005_cstack
    unless $I20, rx2005_jump4556
    elements $I18, rx2005_bstack
    le $I18, 0, rx2005_cut4557
    dec $I18
    set $I18, rx2005_bstack[$I18]
  rx2005_cut4557:
    assign rx2005_cstack, $I18
  rx2005_jump4556:
    jump $I19
  rx2005_done4553:
    rx2005_cur."!cursor_fail"()
    .return (rx2005_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_247_1361537952.49511") :anon :lex :outer("cuid_417_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1479
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx2008_start
    .local string rx2008_tgt
    .local int rx2008_pos
    .local int rx2008_off
    .local int rx2008_eos
    .local int rx2008_rep
    .local pmc rx2008_cur
    .local pmc rx2008_curclass
    .local pmc rx2008_bstack
    .local pmc rx2008_cstack
    rx2008_start = self."!cursor_start_all"()
    set rx2008_cur, rx2008_start[0]
    set rx2008_tgt, rx2008_start[1]
    set rx2008_pos, rx2008_start[2]
    set rx2008_curclass, rx2008_start[3]
    set rx2008_bstack, rx2008_start[4]
    set $I19, rx2008_start[5]
    store_lex unicode:"$\x{a2}", rx2008_cur
    length rx2008_eos, rx2008_tgt
    eq $I19, 1, rx2008_restart4565
    gt rx2008_pos, rx2008_eos, rx2008_fail4566
    repr_get_attr_int $I11, self, rx2008_curclass, "$!from"
    ne $I11, -1, rxscan2009_done4572
    goto rxscan2009_scan4571
  rxscan2009_loop4570:
    inc rx2008_pos
    gt rx2008_pos, rx2008_eos, rx2008_fail4566
    repr_bind_attr_int rx2008_cur, rx2008_curclass, "$!from", rx2008_pos
  rxscan2009_scan4571:
    nqp_rxmark rx2008_bstack, rxscan2009_loop4570, rx2008_pos, 0
  rxscan2009_done4572:
    repr_bind_attr_int rx2008_cur, rx2008_curclass, "$!pos", rx2008_pos
    $P11 = rx2008_cur."LANG"("MAIN", "quote_EXPR")
    repr_get_attr_int $I11, $P11, rx2008_curclass, "$!pos"
    lt $I11, 0, rx2008_fail4566
    nqp_rxmark rx2008_bstack, rxsubrule2010_pass4573, -1, 0
  rxsubrule2010_pass4573:
    rx2008_cstack = rx2008_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx2008_pos, $P11, rx2008_curclass, "$!pos"
    rx2008_cur."!cursor_pass"(rx2008_pos, "arg", 'backtrack'=>1)
    .return (rx2008_cur)
  rx2008_restart4565:
    repr_get_attr_obj rx2008_cstack, rx2008_cur, rx2008_curclass, "$!cstack"
  rx2008_fail4566:
    unless rx2008_bstack, rx2008_done4564
    pop $I19, rx2008_bstack
    if_null rx2008_cstack, rx2008_cstack_done4569
    unless rx2008_cstack, rx2008_cstack_done4569
    dec $I19
    set $P11, rx2008_cstack[$I19]
  rx2008_cstack_done4569:
    pop rx2008_rep, rx2008_bstack
    pop rx2008_pos, rx2008_bstack
    pop $I19, rx2008_bstack
    lt rx2008_pos, -1, rx2008_done4564
    lt rx2008_pos, 0, rx2008_fail4566
    eq $I19, 0, rx2008_fail4566
    nqp_islist $I20, rx2008_cstack
    unless $I20, rx2008_jump4567
    elements $I18, rx2008_bstack
    le $I18, 0, rx2008_cut4568
    dec $I18
    set $I18, rx2008_bstack[$I18]
  rx2008_cut4568:
    assign rx2008_cstack, $I18
  rx2008_jump4567:
    jump $I19
  rx2008_done4564:
    rx2008_cur."!cursor_fail"()
    .return (rx2008_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_418_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1488
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc pkg_lookup_tmp_105 
    .local pmc fb_tmp_279 
    .local pmc pkg_lookup_tmp_106 
    .local pmc fb_tmp_280 
    .local pmc pkg_lookup_tmp_107 
    .local pmc fb_tmp_281 
    .local pmc pkg_lookup_tmp_108 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set fb_tmp_277, _lex_param_1
    repr_defined $I5001, fb_tmp_277
    unless $I5001 goto if2014_else4579 
    set $P5002, fb_tmp_277[0]
    set $P5004, $P5002
    goto if2014_end4580
  if2014_else4579:
    null $P5003
    set $P5004, $P5003
  if2014_end4580:
    unless_null $P5004, vivi_20154581
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_20154581:
    set $P101, $P5004
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_105, $P5007
    get_who $P5008, pkg_lookup_tmp_105
    exists $I5004, $P5008["QAST"]
    unless $I5004 goto if2018_else4586 
    get_who $P5010, pkg_lookup_tmp_105
    set $P5009, $P5010["QAST"]
    set $P5012, $P5009
    goto if2018_end4587
  if2018_else4586:
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5011
  if2018_end4587:
    get_who $P5006, $P5012
    set fb_tmp_278, $P5006
    repr_defined $I5003, fb_tmp_278
    unless $I5003 goto if2017_else4584 
    set $P5013, fb_tmp_278["Var"]
    set $P5015, $P5013
    goto if2017_end4585
  if2017_else4584:
    null $P5014
    set $P5015, $P5014
  if2017_end4585:
    unless_null $P5015, vivi_20194588
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_20194588:
    type_check $I5002, $P101, $P5015
    if $I5002 goto unless2016_end4583 
.annotate 'line', 1490
    box $P5017, "Pre-increment can only work on a variable"
    die $P5017
  unless2016_end4583:
.annotate 'line', 1493
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_106, $P5019
    get_who $P5020, pkg_lookup_tmp_106
    exists $I5006, $P5020["QAST"]
    unless $I5006 goto if2021_else4591 
    get_who $P5022, pkg_lookup_tmp_106
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if2021_end4592
  if2021_else4591:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if2021_end4592:
    get_who $P5018, $P5024
    set fb_tmp_279, $P5018
    repr_defined $I5005, fb_tmp_279
    unless $I5005 goto if2020_else4589 
    set $P5025, fb_tmp_279["Op"]
    set $P5027, $P5025
    goto if2020_end4590
  if2020_else4589:
    null $P5026
    set $P5027, $P5026
  if2020_end4590:
    unless_null $P5027, vivi_20224593
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_20224593:
.annotate 'line', 1496
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_107, $P5030
    get_who $P5031, pkg_lookup_tmp_107
    exists $I5008, $P5031["QAST"]
    unless $I5008 goto if2024_else4596 
    get_who $P5033, pkg_lookup_tmp_107
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if2024_end4597
  if2024_else4596:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if2024_end4597:
    get_who $P5029, $P5035
    set fb_tmp_280, $P5029
    repr_defined $I5007, fb_tmp_280
    unless $I5007 goto if2023_else4594 
    set $P5036, fb_tmp_280["Op"]
    set $P5038, $P5036
    goto if2023_end4595
  if2023_else4594:
    null $P5037
    set $P5038, $P5037
  if2023_end4595:
    unless_null $P5038, vivi_20254598
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_20254598:
.annotate 'line', 1499
    nqp_get_sc_object $P5041, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_108, $P5041
    get_who $P5042, pkg_lookup_tmp_108
    exists $I5010, $P5042["QAST"]
    unless $I5010 goto if2027_else4601 
    get_who $P5044, pkg_lookup_tmp_108
    set $P5043, $P5044["QAST"]
    set $P5046, $P5043
    goto if2027_end4602
  if2027_else4601:
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5045
  if2027_end4602:
    get_who $P5040, $P5046
    set fb_tmp_281, $P5040
    repr_defined $I5009, fb_tmp_281
    unless $I5009 goto if2026_else4599 
    set $P5047, fb_tmp_281["IVal"]
    set $P5049, $P5047
    goto if2026_end4600
  if2026_else4599:
    null $P5048
    set $P5049, $P5048
  if2026_end4600:
    unless_null $P5049, vivi_20284603
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_20284603:
    $P5051 = $P5049."new"(1 :named("value"))
    $P5052 = $P5038."new"($P101, $P5051, "add_n" :named("op"))
    $P5053 = $P5027."new"($P101, $P5052, "bind" :named("op"))
    $P5054 = _lex_param_0."as_post"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_419_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1503
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc pkg_lookup_tmp_109 
    .local pmc fb_tmp_284 
    .local pmc pkg_lookup_tmp_110 
    .local pmc fb_tmp_285 
    .local pmc pkg_lookup_tmp_111 
    .local pmc fb_tmp_286 
    .local pmc pkg_lookup_tmp_112 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    set fb_tmp_282, _lex_param_1
    repr_defined $I5001, fb_tmp_282
    unless $I5001 goto if2029_else4604 
    set $P5002, fb_tmp_282[0]
    set $P5004, $P5002
    goto if2029_end4605
  if2029_else4604:
    null $P5003
    set $P5004, $P5003
  if2029_end4605:
    unless_null $P5004, vivi_20304606
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_20304606:
    set $P101, $P5004
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_109, $P5007
    get_who $P5008, pkg_lookup_tmp_109
    exists $I5004, $P5008["QAST"]
    unless $I5004 goto if2033_else4611 
    get_who $P5010, pkg_lookup_tmp_109
    set $P5009, $P5010["QAST"]
    set $P5012, $P5009
    goto if2033_end4612
  if2033_else4611:
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5011
  if2033_end4612:
    get_who $P5006, $P5012
    set fb_tmp_283, $P5006
    repr_defined $I5003, fb_tmp_283
    unless $I5003 goto if2032_else4609 
    set $P5013, fb_tmp_283["Var"]
    set $P5015, $P5013
    goto if2032_end4610
  if2032_else4609:
    null $P5014
    set $P5015, $P5014
  if2032_end4610:
    unless_null $P5015, vivi_20344613
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_20344613:
    type_check $I5002, $P101, $P5015
    if $I5002 goto unless2031_end4608 
.annotate 'line', 1505
    box $P5017, "Pre-decrement can only work on a variable"
    die $P5017
  unless2031_end4608:
.annotate 'line', 1508
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_110, $P5019
    get_who $P5020, pkg_lookup_tmp_110
    exists $I5006, $P5020["QAST"]
    unless $I5006 goto if2036_else4616 
    get_who $P5022, pkg_lookup_tmp_110
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if2036_end4617
  if2036_else4616:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if2036_end4617:
    get_who $P5018, $P5024
    set fb_tmp_284, $P5018
    repr_defined $I5005, fb_tmp_284
    unless $I5005 goto if2035_else4614 
    set $P5025, fb_tmp_284["Op"]
    set $P5027, $P5025
    goto if2035_end4615
  if2035_else4614:
    null $P5026
    set $P5027, $P5026
  if2035_end4615:
    unless_null $P5027, vivi_20374618
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_20374618:
.annotate 'line', 1511
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_111, $P5030
    get_who $P5031, pkg_lookup_tmp_111
    exists $I5008, $P5031["QAST"]
    unless $I5008 goto if2039_else4621 
    get_who $P5033, pkg_lookup_tmp_111
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if2039_end4622
  if2039_else4621:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if2039_end4622:
    get_who $P5029, $P5035
    set fb_tmp_285, $P5029
    repr_defined $I5007, fb_tmp_285
    unless $I5007 goto if2038_else4619 
    set $P5036, fb_tmp_285["Op"]
    set $P5038, $P5036
    goto if2038_end4620
  if2038_else4619:
    null $P5037
    set $P5038, $P5037
  if2038_end4620:
    unless_null $P5038, vivi_20404623
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_20404623:
.annotate 'line', 1514
    nqp_get_sc_object $P5041, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_112, $P5041
    get_who $P5042, pkg_lookup_tmp_112
    exists $I5010, $P5042["QAST"]
    unless $I5010 goto if2042_else4626 
    get_who $P5044, pkg_lookup_tmp_112
    set $P5043, $P5044["QAST"]
    set $P5046, $P5043
    goto if2042_end4627
  if2042_else4626:
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5045
  if2042_end4627:
    get_who $P5040, $P5046
    set fb_tmp_286, $P5040
    repr_defined $I5009, fb_tmp_286
    unless $I5009 goto if2041_else4624 
    set $P5047, fb_tmp_286["IVal"]
    set $P5049, $P5047
    goto if2041_end4625
  if2041_else4624:
    null $P5048
    set $P5049, $P5048
  if2041_end4625:
    unless_null $P5049, vivi_20434628
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_20434628:
    $P5051 = $P5049."new"(1 :named("value"))
    $P5052 = $P5038."new"($P101, $P5051, "sub_n" :named("op"))
    $P5053 = $P5027."new"($P101, $P5052, "bind" :named("op"))
    $P5054 = _lex_param_0."as_post"($P5053)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_420_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1518
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc pkg_lookup_tmp_113 
    .local pmc fb_tmp_289 
    .local pmc pkg_lookup_tmp_114 
    .local pmc fb_tmp_290 
    .local pmc pkg_lookup_tmp_115 
    .local pmc fb_tmp_291 
    .local pmc pkg_lookup_tmp_116 
    .local pmc fb_tmp_292 
    .local pmc pkg_lookup_tmp_117 
    .local pmc fb_tmp_293 
    .local pmc pkg_lookup_tmp_118 
    .local pmc fb_tmp_294 
    .local pmc pkg_lookup_tmp_119 
    .local pmc fb_tmp_295 
    .local pmc pkg_lookup_tmp_120 
    .local pmc fb_tmp_296 
    .local pmc pkg_lookup_tmp_121 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set fb_tmp_287, _lex_param_1
    repr_defined $I5001, fb_tmp_287
    unless $I5001 goto if2044_else4629 
    set $P5003, fb_tmp_287[0]
    set $P5005, $P5003
    goto if2044_end4630
  if2044_else4629:
    null $P5004
    set $P5005, $P5004
  if2044_end4630:
    unless_null $P5005, vivi_20454631
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_20454631:
    set $P101, $P5005
.annotate 'line', 1520
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_113, $P5008
    get_who $P5009, pkg_lookup_tmp_113
    exists $I5003, $P5009["QAST"]
    unless $I5003 goto if2047_else4634 
    get_who $P5011, pkg_lookup_tmp_113
    set $P5010, $P5011["QAST"]
    set $P5013, $P5010
    goto if2047_end4635
  if2047_else4634:
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5012
  if2047_end4635:
    get_who $P5007, $P5013
    set fb_tmp_288, $P5007
    repr_defined $I5002, fb_tmp_288
    unless $I5002 goto if2046_else4632 
    set $P5014, fb_tmp_288["Op"]
    set $P5016, $P5014
    goto if2046_end4633
  if2046_else4632:
    null $P5015
    set $P5016, $P5015
  if2046_end4633:
    unless_null $P5016, vivi_20484636
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_20484636:
    $P5018 = $P5016."unique"("tmp")
    set $P102, $P5018
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_114, $P5020
    get_who $P5021, pkg_lookup_tmp_114
    exists $I5006, $P5021["QAST"]
    unless $I5006 goto if2051_else4641 
    get_who $P5023, pkg_lookup_tmp_114
    set $P5022, $P5023["QAST"]
    set $P5025, $P5022
    goto if2051_end4642
  if2051_else4641:
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5024
  if2051_end4642:
    get_who $P5019, $P5025
    set fb_tmp_289, $P5019
    repr_defined $I5005, fb_tmp_289
    unless $I5005 goto if2050_else4639 
    set $P5026, fb_tmp_289["Var"]
    set $P5028, $P5026
    goto if2050_end4640
  if2050_else4639:
    null $P5027
    set $P5028, $P5027
  if2050_end4640:
    unless_null $P5028, vivi_20524643
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_20524643:
    type_check $I5004, $P101, $P5028
    if $I5004 goto unless2049_end4638 
.annotate 'line', 1521
    box $P5030, "Post-increment can only work on a variable"
    die $P5030
  unless2049_end4638:
.annotate 'line', 1524
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_115, $P5032
    get_who $P5033, pkg_lookup_tmp_115
    exists $I5008, $P5033["QAST"]
    unless $I5008 goto if2054_else4646 
    get_who $P5035, pkg_lookup_tmp_115
    set $P5034, $P5035["QAST"]
    set $P5037, $P5034
    goto if2054_end4647
  if2054_else4646:
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5036
  if2054_end4647:
    get_who $P5031, $P5037
    set fb_tmp_290, $P5031
    repr_defined $I5007, fb_tmp_290
    unless $I5007 goto if2053_else4644 
    set $P5038, fb_tmp_290["Stmt"]
    set $P5040, $P5038
    goto if2053_end4645
  if2053_else4644:
    null $P5039
    set $P5040, $P5039
  if2053_end4645:
    unless_null $P5040, vivi_20554648
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_20554648:
.annotate 'line', 1526
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_116, $P5043
    get_who $P5044, pkg_lookup_tmp_116
    exists $I5010, $P5044["QAST"]
    unless $I5010 goto if2057_else4651 
    get_who $P5046, pkg_lookup_tmp_116
    set $P5045, $P5046["QAST"]
    set $P5048, $P5045
    goto if2057_end4652
  if2057_else4651:
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5047
  if2057_end4652:
    get_who $P5042, $P5048
    set fb_tmp_291, $P5042
    repr_defined $I5009, fb_tmp_291
    unless $I5009 goto if2056_else4649 
    set $P5049, fb_tmp_291["Op"]
    set $P5051, $P5049
    goto if2056_end4650
  if2056_else4649:
    null $P5050
    set $P5051, $P5050
  if2056_end4650:
    unless_null $P5051, vivi_20584653
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_20584653:
.annotate 'line', 1528
    nqp_get_sc_object $P5054, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_117, $P5054
    get_who $P5055, pkg_lookup_tmp_117
    exists $I5012, $P5055["QAST"]
    unless $I5012 goto if2060_else4656 
    get_who $P5057, pkg_lookup_tmp_117
    set $P5056, $P5057["QAST"]
    set $P5059, $P5056
    goto if2060_end4657
  if2060_else4656:
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5058
  if2060_end4657:
    get_who $P5053, $P5059
    set fb_tmp_292, $P5053
    repr_defined $I5011, fb_tmp_292
    unless $I5011 goto if2059_else4654 
    set $P5060, fb_tmp_292["Var"]
    set $P5062, $P5060
    goto if2059_end4655
  if2059_else4654:
    null $P5061
    set $P5062, $P5061
  if2059_end4655:
    unless_null $P5062, vivi_20614658
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5063
  vivi_20614658:
    $P5064 = $P101."returns"()
    $P5065 = $P5062."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"), $P5064 :named("returns"))
    $P5066 = $P5051."new"($P5065, $P101, "bind" :named("op"))
.annotate 'line', 1531
    nqp_get_sc_object $P5068, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_118, $P5068
    get_who $P5069, pkg_lookup_tmp_118
    exists $I5014, $P5069["QAST"]
    unless $I5014 goto if2063_else4661 
    get_who $P5071, pkg_lookup_tmp_118
    set $P5070, $P5071["QAST"]
    set $P5073, $P5070
    goto if2063_end4662
  if2063_else4661:
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5073, $P5072
  if2063_end4662:
    get_who $P5067, $P5073
    set fb_tmp_293, $P5067
    repr_defined $I5013, fb_tmp_293
    unless $I5013 goto if2062_else4659 
    set $P5074, fb_tmp_293["Op"]
    set $P5076, $P5074
    goto if2062_end4660
  if2062_else4659:
    null $P5075
    set $P5076, $P5075
  if2062_end4660:
    unless_null $P5076, vivi_20644663
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5076, $P5077
  vivi_20644663:
.annotate 'line', 1534
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_119, $P5079
    get_who $P5080, pkg_lookup_tmp_119
    exists $I5016, $P5080["QAST"]
    unless $I5016 goto if2066_else4666 
    get_who $P5082, pkg_lookup_tmp_119
    set $P5081, $P5082["QAST"]
    set $P5084, $P5081
    goto if2066_end4667
  if2066_else4666:
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5083
  if2066_end4667:
    get_who $P5078, $P5084
    set fb_tmp_294, $P5078
    repr_defined $I5015, fb_tmp_294
    unless $I5015 goto if2065_else4664 
    set $P5085, fb_tmp_294["Op"]
    set $P5087, $P5085
    goto if2065_end4665
  if2065_else4664:
    null $P5086
    set $P5087, $P5086
  if2065_end4665:
    unless_null $P5087, vivi_20674668
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_20674668:
.annotate 'line', 1536
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_120, $P5090
    get_who $P5091, pkg_lookup_tmp_120
    exists $I5018, $P5091["QAST"]
    unless $I5018 goto if2069_else4671 
    get_who $P5093, pkg_lookup_tmp_120
    set $P5092, $P5093["QAST"]
    set $P5095, $P5092
    goto if2069_end4672
  if2069_else4671:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if2069_end4672:
    get_who $P5089, $P5095
    set fb_tmp_295, $P5089
    repr_defined $I5017, fb_tmp_295
    unless $I5017 goto if2068_else4669 
    set $P5096, fb_tmp_295["Var"]
    set $P5098, $P5096
    goto if2068_end4670
  if2068_else4669:
    null $P5097
    set $P5098, $P5097
  if2068_end4670:
    unless_null $P5098, vivi_20704673
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_20704673:
    $P5100 = $P101."returns"()
    $P5101 = $P5098."new"($P102 :named("name"), "local" :named("scope"), $P5100 :named("returns"))
.annotate 'line', 1537
    nqp_get_sc_object $P5103, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_121, $P5103
    get_who $P5104, pkg_lookup_tmp_121
    exists $I5020, $P5104["QAST"]
    unless $I5020 goto if2072_else4676 
    get_who $P5106, pkg_lookup_tmp_121
    set $P5105, $P5106["QAST"]
    set $P5108, $P5105
    goto if2072_end4677
  if2072_else4676:
    nqp_get_sc_object $P5107, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5108, $P5107
  if2072_end4677:
    get_who $P5102, $P5108
    set fb_tmp_296, $P5102
    repr_defined $I5019, fb_tmp_296
    unless $I5019 goto if2071_else4674 
    set $P5109, fb_tmp_296["IVal"]
    set $P5111, $P5109
    goto if2071_end4675
  if2071_else4674:
    null $P5110
    set $P5111, $P5110
  if2071_end4675:
    unless_null $P5111, vivi_20734678
    nqp_get_sc_object $P5112, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5112
  vivi_20734678:
    $P5113 = $P5111."new"(1 :named("value"))
    $P5114 = $P5087."new"($P5101, $P5113, "add_n" :named("op"))
    $P5115 = $P5076."new"($P101, $P5114, "bind" :named("op"))
    $P5116 = $P5040."new"($P5066, $P5115, 0 :named("resultchild"))
    $P5117 = _lex_param_0."as_post"($P5116)
    .return ($P5117) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_421_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1542
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$var", $P101 
    .lex "$tmp", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc pkg_lookup_tmp_122 
    .local pmc fb_tmp_299 
    .local pmc pkg_lookup_tmp_123 
    .local pmc fb_tmp_300 
    .local pmc pkg_lookup_tmp_124 
    .local pmc fb_tmp_301 
    .local pmc pkg_lookup_tmp_125 
    .local pmc fb_tmp_302 
    .local pmc pkg_lookup_tmp_126 
    .local pmc fb_tmp_303 
    .local pmc pkg_lookup_tmp_127 
    .local pmc fb_tmp_304 
    .local pmc pkg_lookup_tmp_128 
    .local pmc fb_tmp_305 
    .local pmc pkg_lookup_tmp_129 
    .local pmc fb_tmp_306 
    .local pmc pkg_lookup_tmp_130 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set fb_tmp_297, _lex_param_1
    repr_defined $I5001, fb_tmp_297
    unless $I5001 goto if2074_else4679 
    set $P5003, fb_tmp_297[0]
    set $P5005, $P5003
    goto if2074_end4680
  if2074_else4679:
    null $P5004
    set $P5005, $P5004
  if2074_end4680:
    unless_null $P5005, vivi_20754681
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_20754681:
    set $P101, $P5005
.annotate 'line', 1544
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_122, $P5008
    get_who $P5009, pkg_lookup_tmp_122
    exists $I5003, $P5009["QAST"]
    unless $I5003 goto if2077_else4684 
    get_who $P5011, pkg_lookup_tmp_122
    set $P5010, $P5011["QAST"]
    set $P5013, $P5010
    goto if2077_end4685
  if2077_else4684:
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5012
  if2077_end4685:
    get_who $P5007, $P5013
    set fb_tmp_298, $P5007
    repr_defined $I5002, fb_tmp_298
    unless $I5002 goto if2076_else4682 
    set $P5014, fb_tmp_298["Op"]
    set $P5016, $P5014
    goto if2076_end4683
  if2076_else4682:
    null $P5015
    set $P5016, $P5015
  if2076_end4683:
    unless_null $P5016, vivi_20784686
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_20784686:
    $P5018 = $P5016."unique"("tmp")
    set $P102, $P5018
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_123, $P5020
    get_who $P5021, pkg_lookup_tmp_123
    exists $I5006, $P5021["QAST"]
    unless $I5006 goto if2081_else4691 
    get_who $P5023, pkg_lookup_tmp_123
    set $P5022, $P5023["QAST"]
    set $P5025, $P5022
    goto if2081_end4692
  if2081_else4691:
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5024
  if2081_end4692:
    get_who $P5019, $P5025
    set fb_tmp_299, $P5019
    repr_defined $I5005, fb_tmp_299
    unless $I5005 goto if2080_else4689 
    set $P5026, fb_tmp_299["Var"]
    set $P5028, $P5026
    goto if2080_end4690
  if2080_else4689:
    null $P5027
    set $P5028, $P5027
  if2080_end4690:
    unless_null $P5028, vivi_20824693
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_20824693:
    type_check $I5004, $P101, $P5028
    if $I5004 goto unless2079_end4688 
.annotate 'line', 1545
    box $P5030, "Post-decrement can only work on a variable"
    die $P5030
  unless2079_end4688:
.annotate 'line', 1548
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_124, $P5032
    get_who $P5033, pkg_lookup_tmp_124
    exists $I5008, $P5033["QAST"]
    unless $I5008 goto if2084_else4696 
    get_who $P5035, pkg_lookup_tmp_124
    set $P5034, $P5035["QAST"]
    set $P5037, $P5034
    goto if2084_end4697
  if2084_else4696:
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5036
  if2084_end4697:
    get_who $P5031, $P5037
    set fb_tmp_300, $P5031
    repr_defined $I5007, fb_tmp_300
    unless $I5007 goto if2083_else4694 
    set $P5038, fb_tmp_300["Stmt"]
    set $P5040, $P5038
    goto if2083_end4695
  if2083_else4694:
    null $P5039
    set $P5040, $P5039
  if2083_end4695:
    unless_null $P5040, vivi_20854698
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_20854698:
.annotate 'line', 1550
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_125, $P5043
    get_who $P5044, pkg_lookup_tmp_125
    exists $I5010, $P5044["QAST"]
    unless $I5010 goto if2087_else4701 
    get_who $P5046, pkg_lookup_tmp_125
    set $P5045, $P5046["QAST"]
    set $P5048, $P5045
    goto if2087_end4702
  if2087_else4701:
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5047
  if2087_end4702:
    get_who $P5042, $P5048
    set fb_tmp_301, $P5042
    repr_defined $I5009, fb_tmp_301
    unless $I5009 goto if2086_else4699 
    set $P5049, fb_tmp_301["Op"]
    set $P5051, $P5049
    goto if2086_end4700
  if2086_else4699:
    null $P5050
    set $P5051, $P5050
  if2086_end4700:
    unless_null $P5051, vivi_20884703
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_20884703:
.annotate 'line', 1552
    nqp_get_sc_object $P5054, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_126, $P5054
    get_who $P5055, pkg_lookup_tmp_126
    exists $I5012, $P5055["QAST"]
    unless $I5012 goto if2090_else4706 
    get_who $P5057, pkg_lookup_tmp_126
    set $P5056, $P5057["QAST"]
    set $P5059, $P5056
    goto if2090_end4707
  if2090_else4706:
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5058
  if2090_end4707:
    get_who $P5053, $P5059
    set fb_tmp_302, $P5053
    repr_defined $I5011, fb_tmp_302
    unless $I5011 goto if2089_else4704 
    set $P5060, fb_tmp_302["Var"]
    set $P5062, $P5060
    goto if2089_end4705
  if2089_else4704:
    null $P5061
    set $P5062, $P5061
  if2089_end4705:
    unless_null $P5062, vivi_20914708
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5063
  vivi_20914708:
    $P5064 = $P5062."new"($P102 :named("name"), "local" :named("scope"), "var" :named("decl"))
    $P5065 = $P5051."new"($P5064, $P101, "bind" :named("op"))
.annotate 'line', 1555
    nqp_get_sc_object $P5067, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_127, $P5067
    get_who $P5068, pkg_lookup_tmp_127
    exists $I5014, $P5068["QAST"]
    unless $I5014 goto if2093_else4711 
    get_who $P5070, pkg_lookup_tmp_127
    set $P5069, $P5070["QAST"]
    set $P5072, $P5069
    goto if2093_end4712
  if2093_else4711:
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5071
  if2093_end4712:
    get_who $P5066, $P5072
    set fb_tmp_303, $P5066
    repr_defined $I5013, fb_tmp_303
    unless $I5013 goto if2092_else4709 
    set $P5073, fb_tmp_303["Op"]
    set $P5075, $P5073
    goto if2092_end4710
  if2092_else4709:
    null $P5074
    set $P5075, $P5074
  if2092_end4710:
    unless_null $P5075, vivi_20944713
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_20944713:
.annotate 'line', 1558
    nqp_get_sc_object $P5078, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_128, $P5078
    get_who $P5079, pkg_lookup_tmp_128
    exists $I5016, $P5079["QAST"]
    unless $I5016 goto if2096_else4716 
    get_who $P5081, pkg_lookup_tmp_128
    set $P5080, $P5081["QAST"]
    set $P5083, $P5080
    goto if2096_end4717
  if2096_else4716:
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5083, $P5082
  if2096_end4717:
    get_who $P5077, $P5083
    set fb_tmp_304, $P5077
    repr_defined $I5015, fb_tmp_304
    unless $I5015 goto if2095_else4714 
    set $P5084, fb_tmp_304["Op"]
    set $P5086, $P5084
    goto if2095_end4715
  if2095_else4714:
    null $P5085
    set $P5086, $P5085
  if2095_end4715:
    unless_null $P5086, vivi_20974718
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5086, $P5087
  vivi_20974718:
.annotate 'line', 1560
    nqp_get_sc_object $P5089, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_129, $P5089
    get_who $P5090, pkg_lookup_tmp_129
    exists $I5018, $P5090["QAST"]
    unless $I5018 goto if2099_else4721 
    get_who $P5092, pkg_lookup_tmp_129
    set $P5091, $P5092["QAST"]
    set $P5094, $P5091
    goto if2099_end4722
  if2099_else4721:
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5094, $P5093
  if2099_end4722:
    get_who $P5088, $P5094
    set fb_tmp_305, $P5088
    repr_defined $I5017, fb_tmp_305
    unless $I5017 goto if2098_else4719 
    set $P5095, fb_tmp_305["Var"]
    set $P5097, $P5095
    goto if2098_end4720
  if2098_else4719:
    null $P5096
    set $P5097, $P5096
  if2098_end4720:
    unless_null $P5097, vivi_21004723
    nqp_get_sc_object $P5098, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5098
  vivi_21004723:
    $P5099 = $P5097."new"($P102 :named("name"), "local" :named("scope"))
.annotate 'line', 1561
    nqp_get_sc_object $P5101, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_130, $P5101
    get_who $P5102, pkg_lookup_tmp_130
    exists $I5020, $P5102["QAST"]
    unless $I5020 goto if2102_else4726 
    get_who $P5104, pkg_lookup_tmp_130
    set $P5103, $P5104["QAST"]
    set $P5106, $P5103
    goto if2102_end4727
  if2102_else4726:
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5106, $P5105
  if2102_end4727:
    get_who $P5100, $P5106
    set fb_tmp_306, $P5100
    repr_defined $I5019, fb_tmp_306
    unless $I5019 goto if2101_else4724 
    set $P5107, fb_tmp_306["IVal"]
    set $P5109, $P5107
    goto if2101_end4725
  if2101_else4724:
    null $P5108
    set $P5109, $P5108
  if2101_end4725:
    unless_null $P5109, vivi_21034728
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5110
  vivi_21034728:
    $P5111 = $P5109."new"(1 :named("value"))
    $P5112 = $P5086."new"($P5099, $P5111, "sub_n" :named("op"))
    $P5113 = $P5075."new"($P101, $P5112, "bind" :named("op"))
    $P5114 = $P5040."new"($P5065, $P5113, 0 :named("resultchild"))
    $P5115 = _lex_param_0."as_post"($P5114)
    .return ($P5115) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_422_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1566
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_307 
.annotate 'line', 1567
    set fb_tmp_307, _lex_param_1
    repr_defined $I5001, fb_tmp_307
    unless $I5001 goto if2104_else4729 
    set $P5001, fb_tmp_307[0]
    set $P5003, $P5001
    goto if2104_end4730
  if2104_else4729:
    null $P5002
    set $P5003, $P5002
  if2104_end4730:
    unless_null $P5003, vivi_21054731
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  vivi_21054731:
    $P5005 = _lex_param_0."as_post"($P5003, "n" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_423_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1570
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_308 
.annotate 'line', 1571
    set fb_tmp_308, _lex_param_1
    repr_defined $I5001, fb_tmp_308
    unless $I5001 goto if2106_else4732 
    set $P5001, fb_tmp_308[0]
    set $P5003, $P5001
    goto if2106_end4733
  if2106_else4732:
    null $P5002
    set $P5003, $P5002
  if2106_end4733:
    unless_null $P5003, vivi_21074734
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  vivi_21074734:
    $P5005 = _lex_param_0."as_post"($P5003, "s" :named("want"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_424_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1574
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_309 
    .local pmc pkg_lookup_tmp_131 
    .local pmc fb_tmp_310 
    .local pmc pkg_lookup_tmp_132 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc pkg_lookup_tmp_133 
    .local pmc fb_tmp_313 
.annotate 'line', 1575
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_131, $P5002
    get_who $P5003, pkg_lookup_tmp_131
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2109_else4737 
    get_who $P5005, pkg_lookup_tmp_131
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2109_end4738
  if2109_else4737:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2109_end4738:
    get_who $P5001, $P5007
    set fb_tmp_309, $P5001
    repr_defined $I5001, fb_tmp_309
    unless $I5001 goto if2108_else4735 
    set $P5008, fb_tmp_309["Op"]
    set $P5010, $P5008
    goto if2108_end4736
  if2108_else4735:
    null $P5009
    set $P5010, $P5009
  if2108_end4736:
    unless_null $P5010, vivi_21104739
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_21104739:
.annotate 'line', 1577
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_132, $P5013
    get_who $P5014, pkg_lookup_tmp_132
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if2112_else4742 
    get_who $P5016, pkg_lookup_tmp_132
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if2112_end4743
  if2112_else4742:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if2112_end4743:
    get_who $P5012, $P5018
    set fb_tmp_310, $P5012
    repr_defined $I5003, fb_tmp_310
    unless $I5003 goto if2111_else4740 
    set $P5019, fb_tmp_310["Op"]
    set $P5021, $P5019
    goto if2111_end4741
  if2111_else4740:
    null $P5020
    set $P5021, $P5020
  if2111_end4741:
    unless_null $P5021, vivi_21134744
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_21134744:
    set fb_tmp_311, _lex_param_1
    repr_defined $I5005, fb_tmp_311
    unless $I5005 goto if2114_else4745 
    set $P5023, fb_tmp_311[0]
    set $P5025, $P5023
    goto if2114_end4746
  if2114_else4745:
    null $P5024
    set $P5025, $P5024
  if2114_end4746:
    unless_null $P5025, vivi_21154747
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_21154747:
    $P5027 = $P5021."new"($P5025, "where" :named("op"))
.annotate 'line', 1578
    nqp_get_sc_object $P5029, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_133, $P5029
    get_who $P5030, pkg_lookup_tmp_133
    exists $I5007, $P5030["QAST"]
    unless $I5007 goto if2117_else4750 
    get_who $P5032, pkg_lookup_tmp_133
    set $P5031, $P5032["QAST"]
    set $P5034, $P5031
    goto if2117_end4751
  if2117_else4750:
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5033
  if2117_end4751:
    get_who $P5028, $P5034
    set fb_tmp_312, $P5028
    repr_defined $I5006, fb_tmp_312
    unless $I5006 goto if2116_else4748 
    set $P5035, fb_tmp_312["Op"]
    set $P5037, $P5035
    goto if2116_end4749
  if2116_else4748:
    null $P5036
    set $P5037, $P5036
  if2116_end4749:
    unless_null $P5037, vivi_21184752
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_21184752:
    set fb_tmp_313, _lex_param_1
    repr_defined $I5008, fb_tmp_313
    unless $I5008 goto if2119_else4753 
    set $P5039, fb_tmp_313[1]
    set $P5041, $P5039
    goto if2119_end4754
  if2119_else4753:
    null $P5040
    set $P5041, $P5040
  if2119_end4754:
    unless_null $P5041, vivi_21204755
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5041, $P5042
  vivi_21204755:
    $P5043 = $P5037."new"($P5041, "where" :named("op"))
    $P5044 = $P5010."new"($P5027, $P5043, "iseq_i" :named("op"))
    $P5045 = _lex_param_0."as_post"($P5044)
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_425_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1582
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$res", $P101 
    .lex "$ops", $P102 
    .lex "$arg_post", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_314 
    .local pmc fb_tmp_315 
    .local pmc pkg_lookup_tmp_134 
    .local pmc fb_tmp_316 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 1583
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback4756
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5005, $P5006
    set fb_tmp_314, $P5005
    repr_defined $I5001, fb_tmp_314
    unless $I5001 goto if2121_else4757 
    set $P5007, fb_tmp_314["$REGALLOC"]
    set $P5009, $P5007
    goto if2121_end4758
  if2121_else4757:
    null $P5008
    set $P5009, $P5008
  if2121_end4758:
    unless_null $P5009, vivi_21224759
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_21224759:
    unless_null $P5009, vivi_21234760
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_21234760:
    set $P5004, $P5009
  fallback4756:
    $P5012 = $P5004."fresh_i"()
    set $P101, $P5012
.annotate 'line', 1584
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_134, $P5014
    get_who $P5015, pkg_lookup_tmp_134
    exists $I5003, $P5015["PIRT"]
    unless $I5003 goto if2125_else4763 
    get_who $P5017, pkg_lookup_tmp_134
    set $P5016, $P5017["PIRT"]
    set $P5019, $P5016
    goto if2125_end4764
  if2125_else4763:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if2125_end4764:
    get_who $P5013, $P5019
    set fb_tmp_315, $P5013
    repr_defined $I5002, fb_tmp_315
    unless $I5002 goto if2124_else4761 
    set $P5020, fb_tmp_315["Ops"]
    set $P5022, $P5020
    goto if2124_end4762
  if2124_else4761:
    null $P5021
    set $P5022, $P5021
  if2124_end4762:
    unless_null $P5022, vivi_21264765
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_21264765:
    $P5024 = $P5022."new"($P101 :named("result"))
    set $P102, $P5024
.annotate 'line', 1585
    set fb_tmp_316, _lex_param_1
    repr_defined $I5004, fb_tmp_316
    unless $I5004 goto if2127_else4766 
    set $P5025, fb_tmp_316[0]
    set $P5027, $P5025
    goto if2127_end4767
  if2127_else4766:
    null $P5026
    set $P5027, $P5026
  if2127_end4767:
    unless_null $P5027, vivi_21284768
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_21284768:
    $P5029 = _lex_param_0."as_post"($P5027)
    set $P103, $P5029
.annotate 'line', 1586
    $P5030 = $P103."result"()
    $P5031 = _lex_param_0."infer_type"($P5030)
    set $S5002, $P5031
    downcase $S5001, $S5002
    iseq $I5005, $S5001, "i"
    unless $I5005 goto if2129_else4769 
.annotate 'line', 1587
    $P102."push"($P103)
.annotate 'line', 1588
    $P5032 = $P102."push_pirop"("not", $P101, $P103)
    goto if2129_end4770
  if2129_else4769:
.annotate 'line', 1590
.annotate 'line', 1591
    $P5033 = _lex_param_0."coerce"($P103, "P")
    set $P103, $P5033
.annotate 'line', 1592
    $P102."push"($P103)
.annotate 'line', 1593
    $P5034 = $P102."push_pirop"("isfalse", $P101, $P103)
  if2129_end4770:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_427_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1599
    .const 'Sub' $P5124 = 'cuid_426_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_430_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_433_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_434_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_437_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_439_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_440_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_441_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_443_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_444_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_450_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_248_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_249_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_250_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_251_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_252_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_253_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_254_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_255_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_256_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_257_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_258_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_259_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_260_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_261_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_262_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_263_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_264_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_265_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_266_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_267_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_268_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_269_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_270_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_271_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_272_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_273_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_274_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_275_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_276_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_277_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_278_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_279_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_280_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_281_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_282_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_283_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_284_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_285_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_286_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_287_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_288_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_289_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_290_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_291_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_292_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_293_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_294_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_295_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_296_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_297_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_298_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_299_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_300_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_301_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_302_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_303_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_304_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_305_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_306_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_307_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_308_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_309_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_310_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_311_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_312_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_313_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_314_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_315_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_316_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_317_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_318_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_319_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_320_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_321_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_322_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_323_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_324_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_325_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_326_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_327_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_328_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_329_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_330_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_331_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_332_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_333_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_334_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_335_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_336_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_337_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_338_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_339_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_340_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_341_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_342_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_343_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_344_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_345_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_346_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_347_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_348_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_349_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_350_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_351_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_352_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_353_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_354_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_355_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_356_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_357_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_358_1361537952.49511' 
    capture_lex $P5124 
    .const 'Sub' $P5124 = 'cuid_359_1361537952.49511' 
    capture_lex $P5124 
    .lex "&xblock_immediate", $P101 
    .lex "&block_immediate", $P102 
    .lex "&default_for", $P103 
    .lex "&default_value_for_prim", $P104 
    .lex "&colonpair_str", $P105 
    .lex "&import_HOW_exports", $P106 
    .lex "&set_block_handler", $P107 
    .lex "&only_star_block", $P108 
    .lex "&attach_multi_signature", $P109 
    .lex "&wrap_return_handler", $P110 
    .lex "&lexical_package_lookup", $P111 
    .lex "$?PACKAGE", $P112 
    .lex "$?CLASS", $P113 
    .const 'Sub' $P5001 = 'cuid_426_1361537952.49511' 
    capture_lex $P5001
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_430_1361537952.49511' 
    capture_lex $P5002
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_433_1361537952.49511' 
    capture_lex $P5003
    set $P103, $P5003
    .const 'Sub' $P5004 = 'cuid_434_1361537952.49511' 
    capture_lex $P5004
    set $P104, $P5004
    .const 'Sub' $P5005 = 'cuid_437_1361537952.49511' 
    capture_lex $P5005
    set $P105, $P5005
    .const 'Sub' $P5006 = 'cuid_439_1361537952.49511' 
    capture_lex $P5006
    set $P106, $P5006
    .const 'Sub' $P5007 = 'cuid_440_1361537952.49511' 
    capture_lex $P5007
    set $P107, $P5007
    .const 'Sub' $P5008 = 'cuid_441_1361537952.49511' 
    capture_lex $P5008
    set $P108, $P5008
    .const 'Sub' $P5009 = 'cuid_443_1361537952.49511' 
    capture_lex $P5009
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_444_1361537952.49511' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_450_1361537952.49511' 
    capture_lex $P5011
    set $P111, $P5011
    .const 'Sub' $P5012 = 'cuid_248_1361537952.49511' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_249_1361537952.49511' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_250_1361537952.49511' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_251_1361537952.49511' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_252_1361537952.49511' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_253_1361537952.49511' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_254_1361537952.49511' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_255_1361537952.49511' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_256_1361537952.49511' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_257_1361537952.49511' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_258_1361537952.49511' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_259_1361537952.49511' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_260_1361537952.49511' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_261_1361537952.49511' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_262_1361537952.49511' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_263_1361537952.49511' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_264_1361537952.49511' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_265_1361537952.49511' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_266_1361537952.49511' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_267_1361537952.49511' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_268_1361537952.49511' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_269_1361537952.49511' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_270_1361537952.49511' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_271_1361537952.49511' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_272_1361537952.49511' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_273_1361537952.49511' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_274_1361537952.49511' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_275_1361537952.49511' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_276_1361537952.49511' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_277_1361537952.49511' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_278_1361537952.49511' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_279_1361537952.49511' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_280_1361537952.49511' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_281_1361537952.49511' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_282_1361537952.49511' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_283_1361537952.49511' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_284_1361537952.49511' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_285_1361537952.49511' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_286_1361537952.49511' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_287_1361537952.49511' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_288_1361537952.49511' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_289_1361537952.49511' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_290_1361537952.49511' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_291_1361537952.49511' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_292_1361537952.49511' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_293_1361537952.49511' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_294_1361537952.49511' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_295_1361537952.49511' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_296_1361537952.49511' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_297_1361537952.49511' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_298_1361537952.49511' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_299_1361537952.49511' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_300_1361537952.49511' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_301_1361537952.49511' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_302_1361537952.49511' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_303_1361537952.49511' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_304_1361537952.49511' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_305_1361537952.49511' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_306_1361537952.49511' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_307_1361537952.49511' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_308_1361537952.49511' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_309_1361537952.49511' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_310_1361537952.49511' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_311_1361537952.49511' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_312_1361537952.49511' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_313_1361537952.49511' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_314_1361537952.49511' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_315_1361537952.49511' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_316_1361537952.49511' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_317_1361537952.49511' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_318_1361537952.49511' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_319_1361537952.49511' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_320_1361537952.49511' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_321_1361537952.49511' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_322_1361537952.49511' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_323_1361537952.49511' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_324_1361537952.49511' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_325_1361537952.49511' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_326_1361537952.49511' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_327_1361537952.49511' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_328_1361537952.49511' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_329_1361537952.49511' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_330_1361537952.49511' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_331_1361537952.49511' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_332_1361537952.49511' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_333_1361537952.49511' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_334_1361537952.49511' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_335_1361537952.49511' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_336_1361537952.49511' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_337_1361537952.49511' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_338_1361537952.49511' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_339_1361537952.49511' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_340_1361537952.49511' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_341_1361537952.49511' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_342_1361537952.49511' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_343_1361537952.49511' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_344_1361537952.49511' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_345_1361537952.49511' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_346_1361537952.49511' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_347_1361537952.49511' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_348_1361537952.49511' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_349_1361537952.49511' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_350_1361537952.49511' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_351_1361537952.49511' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_352_1361537952.49511' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_353_1361537952.49511' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_354_1361537952.49511' 
    capture_lex $P5118
    .const 'Sub' $P5119 = 'cuid_355_1361537952.49511' 
    capture_lex $P5119
    .const 'Sub' $P5120 = 'cuid_356_1361537952.49511' 
    capture_lex $P5120
    .const 'Sub' $P5121 = 'cuid_357_1361537952.49511' 
    capture_lex $P5121
    .const 'Sub' $P5122 = 'cuid_358_1361537952.49511' 
    capture_lex $P5122
    .const 'Sub' $P5123 = 'cuid_359_1361537952.49511' 
    capture_lex $P5123
    .return ($P111) 
.end
.HLL "nqp"
.namespace []
.sub "xblock_immediate" :subid("cuid_426_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1600
    .param pmc _lex_param_0 
    .lex "$xblock", _lex_param_0 
    .local pmc fb_tmp_317 
.annotate 'line', 1601
    set fb_tmp_317, _lex_param_0
    repr_defined $I5001, fb_tmp_317
    unless $I5001 goto if2130_else4771 
    set $P5001, fb_tmp_317[1]
    set $P5003, $P5001
    goto if2130_end4772
  if2130_else4771:
    null $P5002
    set $P5003, $P5002
  if2130_end4772:
    unless_null $P5003, vivi_21314773
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  vivi_21314773:
    $P5005 = "&block_immediate"($P5003)
    set _lex_param_0[1], $P5005
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "block_immediate" :subid("cuid_430_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1605
    .param pmc _lex_param_0 
    .const 'Sub' $P5004 = 'cuid_429_1361537952.49511' 
    capture_lex $P5004 
    .lex "$block", _lex_param_0 
.annotate 'line', 1606
    _lex_param_0."blocktype"("immediate")
.annotate 'line', 1607
    $P5001 = _lex_param_0."symtable"()
    if $P5001 goto unless2132_end4775 
    .const 'Sub' $P5002 = 'cuid_429_1361537952.49511' 
    capture_lex $P5002
    $P5003 = $P5002()
  unless2132_end4775:
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_429_1361537952.49511") :anon :lex :outer("cuid_430_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1607
    .const 'Sub' $P5023 = 'cuid_428_1361537952.49511' 
    capture_lex $P5023 
    .lex "$stmts", $P101 
    .local pmc fb_tmp_318 
    .local pmc pkg_lookup_tmp_135 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1608
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_135, $P5003
    get_who $P5004, pkg_lookup_tmp_135
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2134_else4778 
    get_who $P5006, pkg_lookup_tmp_135
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2134_end4779
  if2134_else4778:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2134_end4779:
    get_who $P5002, $P5008
    set fb_tmp_318, $P5002
    repr_defined $I5001, fb_tmp_318
    unless $I5001 goto if2133_else4776 
    set $P5009, fb_tmp_318["Stmts"]
    set $P5011, $P5009
    goto if2133_end4777
  if2133_else4776:
    null $P5010
    set $P5011, $P5010
  if2133_end4777:
    unless_null $P5011, vivi_21354780
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_21354780:
    find_lex $P5013, "$block"
    $P5014 = $P5013."node"()
    $P5015 = $P5011."new"($P5014 :named("node"))
    set $P101, $P5015
.annotate 'line', 1609
    find_lex $P5019, "$block"
    $P5020 = $P5019."list"()
    set $P5016, $P5020
    iter $P5018, $P5020
  for_next4781:
    unless $P5018, for_done4783
    shift $P5022, $P5018
  for_redo4782:
    .const 'Sub' $P5021 = 'cuid_428_1361537952.49511' 
    capture_lex $P5021
    $P5016 = $P5021($P5022)
    goto for_next4781
  for_done4783:
    store_lex "$block", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_428_1361537952.49511") :anon :lex :outer("cuid_429_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1609
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$stmts"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "default_for" :subid("cuid_433_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1615
    .param pmc _lex_param_0 
    .const 'Sub' $P5029 = 'cuid_432_1361537952.49511' 
    capture_lex $P5029 
    .lex "$sigil", _lex_param_0 
    .local pmc fb_tmp_319 
    .local pmc pkg_lookup_tmp_136 
    .local pmc fb_tmp_320 
    .local pmc pkg_lookup_tmp_137 
    set $S5001, _lex_param_0
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2136_else4784 
.annotate 'line', 1616
.annotate 'line', 1617
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_136, $P5002
    get_who $P5003, pkg_lookup_tmp_136
    exists $I5003, $P5003["QAST"]
    unless $I5003 goto if2138_else4788 
    get_who $P5005, pkg_lookup_tmp_136
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2138_end4789
  if2138_else4788:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2138_end4789:
    get_who $P5001, $P5007
    set fb_tmp_319, $P5001
    repr_defined $I5002, fb_tmp_319
    unless $I5002 goto if2137_else4786 
    set $P5008, fb_tmp_319["Op"]
    set $P5010, $P5008
    goto if2137_end4787
  if2137_else4786:
    null $P5009
    set $P5010, $P5009
  if2137_end4787:
    unless_null $P5010, vivi_21394790
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_21394790:
    $P5012 = $P5010."new"("list" :named("op"))
    set $P5028, $P5012
    goto if2136_end4785
  if2136_else4784:
    set $S5002, _lex_param_0
    iseq $I5004, $S5002, "%"
    unless $I5004 goto if2140_else4791 
.annotate 'line', 1619
.annotate 'line', 1620
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_137, $P5014
    get_who $P5015, pkg_lookup_tmp_137
    exists $I5006, $P5015["QAST"]
    unless $I5006 goto if2142_else4795 
    get_who $P5017, pkg_lookup_tmp_137
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if2142_end4796
  if2142_else4795:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if2142_end4796:
    get_who $P5013, $P5019
    set fb_tmp_320, $P5013
    repr_defined $I5005, fb_tmp_320
    unless $I5005 goto if2141_else4793 
    set $P5020, fb_tmp_320["Op"]
    set $P5022, $P5020
    goto if2141_end4794
  if2141_else4793:
    null $P5021
    set $P5022, $P5021
  if2141_end4794:
    unless_null $P5022, vivi_21434797
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_21434797:
    $P5024 = $P5022."new"("hash" :named("op"))
    set $P5027, $P5024
    goto if2140_end4792
  if2140_else4791:
    .const 'Sub' $P5025 = 'cuid_432_1361537952.49511' 
    capture_lex $P5025
    $P5026 = $P5025()
    set $P5027, $P5026
  if2140_end4792:
    set $P5028, $P5027
  if2136_end4785:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_432_1361537952.49511") :anon :lex :outer("cuid_433_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1622
    .const 'Sub' $P5030 = 'cuid_431_1361537952.49511' 
    capture_lex $P5030 
    .lex "$default", $P101 
    .local pmc fb_tmp_321 
    .local pmc pkg_lookup_tmp_138 
    .local pmc fb_tmp_322 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_21564816
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 1624
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_21514809
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 1625
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_138, $P5003
    get_who $P5004, pkg_lookup_tmp_138
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2145_else4800 
    get_who $P5006, pkg_lookup_tmp_138
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2145_end4801
  if2145_else4800:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2145_end4801:
    get_who $P5002, $P5008
    set fb_tmp_321, $P5002
    repr_defined $I5001, fb_tmp_321
    unless $I5001 goto if2144_else4798 
    set $P5009, fb_tmp_321["WVal"]
    set $P5011, $P5009
    goto if2144_end4799
  if2144_else4798:
    null $P5010
    set $P5011, $P5010
  if2144_end4799:
    unless_null $P5011, vivi_21464802
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_21464802:
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback4803
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5014, $P5015
    set fb_tmp_322, $P5014
    repr_defined $I5003, fb_tmp_322
    unless $I5003 goto if2147_else4804 
    set $P5016, fb_tmp_322["$W"]
    set $P5018, $P5016
    goto if2147_end4805
  if2147_else4804:
    null $P5017
    set $P5018, $P5017
  if2147_end4805:
    unless_null $P5018, vivi_21484806
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_21484806:
    unless_null $P5018, vivi_21494807
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_21494807:
    set $P5013, $P5018
  fallback4803:
    new $P5021, 'ResizablePMCArray'
    box $P5022, "NQPMu"
    push $P5021, $P5022
    $P5023 = $P5013."find_sym"($P5021)
    $P5024 = $P5011."new"($P5023 :named("value"))
    set $P101, $P5024
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_21504808
  catch_handler_21514809:
    .get_results ($P5026) 
    .const 'Sub' $P10001 = 'cuid_431_1361537952.49511' 
    capture_lex $P10001
    $P10001($P5026)
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10002
    goto skip_handler_21504808
  skip_handler_21504808:
    set $P5029, $P5027
    pop_eh 
    goto skip_handler_21554815
  catch_handler_21564816:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_21554815
  skip_handler_21554815:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_431_1361537952.49511") :anon :lex :outer("cuid_432_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1626
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_323 
    .local pmc pkg_lookup_tmp_139 
    set $P101, _lex_param_0
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_139, $P5002
    get_who $P5003, pkg_lookup_tmp_139
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2153_else4812 
    get_who $P5005, pkg_lookup_tmp_139
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2153_end4813
  if2153_else4812:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2153_end4813:
    get_who $P5001, $P5007
    set fb_tmp_323, $P5001
    repr_defined $I5001, fb_tmp_323
    unless $I5001 goto if2152_else4810 
    set $P5008, fb_tmp_323["Op"]
    set $P5010, $P5008
    goto if2152_end4811
  if2152_else4810:
    null $P5009
    set $P5010, $P5009
  if2152_end4811:
    unless_null $P5010, vivi_21544814
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_21544814:
    $P5012 = $P5010."new"("null" :named("op"))
    store_lex "$default", $P5012
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "default_value_for_prim" :subid("cuid_434_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1632
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_324 
    .local pmc pkg_lookup_tmp_140 
    .local pmc fb_tmp_325 
    .local pmc pkg_lookup_tmp_141 
    .local pmc fb_tmp_326 
    .local pmc pkg_lookup_tmp_142 
    set $N5001, _lex_param_0
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if2157_else4817 
.annotate 'line', 1633
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_140, $P5002
    get_who $P5003, pkg_lookup_tmp_140
    exists $I5003, $P5003["QAST"]
    unless $I5003 goto if2159_else4821 
    get_who $P5005, pkg_lookup_tmp_140
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2159_end4822
  if2159_else4821:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2159_end4822:
    get_who $P5001, $P5007
    set fb_tmp_324, $P5001
    repr_defined $I5002, fb_tmp_324
    unless $I5002 goto if2158_else4819 
    set $P5008, fb_tmp_324["IVal"]
    set $P5010, $P5008
    goto if2158_end4820
  if2158_else4819:
    null $P5009
    set $P5010, $P5009
  if2158_end4820:
    unless_null $P5010, vivi_21604823
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_21604823:
    $P5012 = $P5010."new"(0 :named("value"))
    set $P5038, $P5012
    goto if2157_end4818
  if2157_else4817:
    set $N5003, _lex_param_0
    set $N5004, 2
    iseq $I5004, $N5003, $N5004
    unless $I5004 goto if2161_else4824 
.annotate 'line', 1634
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_141, $P5014
    get_who $P5015, pkg_lookup_tmp_141
    exists $I5006, $P5015["QAST"]
    unless $I5006 goto if2163_else4828 
    get_who $P5017, pkg_lookup_tmp_141
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if2163_end4829
  if2163_else4828:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if2163_end4829:
    get_who $P5013, $P5019
    set fb_tmp_325, $P5013
    repr_defined $I5005, fb_tmp_325
    unless $I5005 goto if2162_else4826 
    set $P5020, fb_tmp_325["NVal"]
    set $P5022, $P5020
    goto if2162_end4827
  if2162_else4826:
    null $P5021
    set $P5022, $P5021
  if2162_end4827:
    unless_null $P5022, vivi_21644830
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_21644830:
    $P5024 = $P5022."new"(0.0 :named("value"))
    set $P5037, $P5024
    goto if2161_end4825
  if2161_else4824:
.annotate 'line', 1635
    nqp_get_sc_object $P5026, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_142, $P5026
    get_who $P5027, pkg_lookup_tmp_142
    exists $I5008, $P5027["QAST"]
    unless $I5008 goto if2166_else4833 
    get_who $P5029, pkg_lookup_tmp_142
    set $P5028, $P5029["QAST"]
    set $P5031, $P5028
    goto if2166_end4834
  if2166_else4833:
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5030
  if2166_end4834:
    get_who $P5025, $P5031
    set fb_tmp_326, $P5025
    repr_defined $I5007, fb_tmp_326
    unless $I5007 goto if2165_else4831 
    set $P5032, fb_tmp_326["SVal"]
    set $P5034, $P5032
    goto if2165_end4832
  if2165_else4831:
    null $P5033
    set $P5034, $P5033
  if2165_end4832:
    unless_null $P5034, vivi_21674835
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_21674835:
    $P5036 = $P5034."new"("" :named("value"))
    set $P5037, $P5036
  if2161_end4825:
    set $P5038, $P5037
  if2157_end4818:
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair_str" :subid("cuid_437_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1647
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_436_1361537952.49511' 
    capture_lex $P5016 
    .lex "$ast", _lex_param_0 
    .local pmc fb_tmp_327 
    .local pmc pkg_lookup_tmp_143 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_143, $P5002
    get_who $P5003, pkg_lookup_tmp_143
    exists $I5003, $P5003["QAST"]
    unless $I5003 goto if2170_else4840 
    get_who $P5005, pkg_lookup_tmp_143
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2170_end4841
  if2170_else4840:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2170_end4841:
    get_who $P5001, $P5007
    set fb_tmp_327, $P5001
    repr_defined $I5002, fb_tmp_327
    unless $I5002 goto if2169_else4838 
    set $P5008, fb_tmp_327["Op"]
    set $P5010, $P5008
    goto if2169_end4839
  if2169_else4838:
    null $P5009
    set $P5010, $P5009
  if2169_end4839:
    unless_null $P5010, vivi_21714842
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_21714842:
    type_check $I5001, _lex_param_0, $P5010
    unless $I5001 goto if2168_else4836 
    .const 'Sub' $P5012 = 'cuid_436_1361537952.49511' 
    capture_lex $P5012
    $P5013 = $P5012()
    set $P5015, $P5013
    goto if2168_end4837
  if2168_else4836:
.annotate 'line', 1652
.annotate 'line', 1653
    $P5014 = _lex_param_0."value"()
    set $P5015, $P5014
  if2168_end4837:
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_436_1361537952.49511") :anon :lex :outer("cuid_437_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1648
    .const 'Sub' $P5009 = 'cuid_435_1361537952.49511' 
    capture_lex $P5009 
    .lex "@parts", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1650
    find_lex $P5005, "$ast"
    $P5006 = $P5005."list"()
    set $P5002, $P5006
    iter $P5004, $P5006
  for_next4843:
    unless $P5004, for_done4845
    shift $P5008, $P5004
  for_redo4844:
    .const 'Sub' $P5007 = 'cuid_435_1361537952.49511' 
    capture_lex $P5007
    $P5002 = $P5007($P5008)
    goto for_next4843
  for_done4845:
    join $S5001, " ", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_435_1361537952.49511") :anon :lex :outer("cuid_436_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1650
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
    $P5002 = _lex_param_0."value"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "import_HOW_exports" :subid("cuid_439_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1839
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_438_1361537952.49511' 
    capture_lex $P5013 
    .lex "$UNIT", _lex_param_0 
    .local pmc fb_tmp_328 
    exists $I5001, _lex_param_0["EXPORTHOW"]
    box $P5012, $I5001
    set $P5011, $P5012
    unless $I5001 goto if2172_end4847 
.annotate 'line', 1841
    set fb_tmp_328, _lex_param_0
    repr_defined $I5002, fb_tmp_328
    unless $I5002 goto if2173_else4848 
    set $P5005, fb_tmp_328["EXPORTHOW"]
    set $P5007, $P5005
    goto if2173_end4849
  if2173_else4848:
    null $P5006
    set $P5007, $P5006
  if2173_end4849:
    unless_null $P5007, vivi_21744850
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_21744850:
    get_who $P5004, $P5007
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next4856:
    unless $P5003, for_done4858
    shift $P5010, $P5003
  for_redo4857:
    .const 'Sub' $P5009 = 'cuid_438_1361537952.49511' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next4856
  for_done4858:
    set $P5011, $P5001
  if2172_end4847:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_438_1361537952.49511") :anon :lex :outer("cuid_439_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1842
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_329 
    .local pmc pkg_viv_tmp_41 
    find_dynamic_lex $P5001, "%*HOW"
    unless_null $P5001, fallback4851
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_41, $P5002
    set fb_tmp_329, pkg_viv_tmp_41
    repr_defined $I5001, fb_tmp_329
    unless $I5001 goto if2175_else4852 
    set $P5004, fb_tmp_329["%HOW"]
    set $P5006, $P5004
    goto if2175_end4853
  if2175_else4852:
    null $P5005
    set $P5006, $P5005
  if2175_end4853:
    unless_null $P5006, vivi_21764854
    new $P5007, 'Hash'
    set pkg_viv_tmp_41["%HOW"], $P5007
    set $P5006, $P5007
  vivi_21764854:
    unless_null $P5006, vivi_21774855
    die "Contextual %*HOW not found"
    box $P5008, "Contextual %*HOW not found"
    set $P5006, $P5008
  vivi_21774855:
    set $P5001, $P5006
  fallback4851:
.annotate 'line', 1843
    $P5009 = _lex_param_0."key"()
    set $S5001, $P5009
    $P5010 = _lex_param_0."value"()
    set $P5001[$S5001], $P5010
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_block_handler" :subid("cuid_440_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1941
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$/", _lex_param_0 
    .lex "$block", _lex_param_1 
    .lex "$type", _lex_param_2 
    .local pmc fb_tmp_330 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_331 
    .local pmc pkg_lookup_tmp_173 
    .local pmc fb_tmp_332 
    .local pmc pkg_lookup_tmp_174 
    .local pmc fb_tmp_333 
    .local pmc pkg_lookup_tmp_175 
    .local pmc fb_tmp_334 
    .local pmc pkg_lookup_tmp_176 
    .local pmc fb_tmp_335 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_336 
    .local pmc pkg_lookup_tmp_177 
    .local pmc fb_tmp_337 
    .local pmc pkg_lookup_tmp_178 
    .local pmc fb_tmp_338 
    .local pmc pkg_lookup_tmp_179 
    .local pmc fb_tmp_339 
    .local pmc pkg_lookup_tmp_180 
    .local pmc fb_tmp_340 
    .local pmc pkg_lookup_tmp_181 
    .local pmc fb_tmp_341 
    .local pmc pkg_lookup_tmp_182 
    .local pmc fb_tmp_342 
    .local pmc pkg_lookup_tmp_183 
    find_dynamic_lex $P5001, "%*HANDLERS"
    unless_null $P5001, fallback4861
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_42, $P5002
    set fb_tmp_330, pkg_viv_tmp_42
    repr_defined $I5002, fb_tmp_330
    unless $I5002 goto if2179_else4862 
    set $P5004, fb_tmp_330["%HANDLERS"]
    set $P5006, $P5004
    goto if2179_end4863
  if2179_else4862:
    null $P5005
    set $P5006, $P5005
  if2179_end4863:
    unless_null $P5006, vivi_21804864
    new $P5007, 'Hash'
    set pkg_viv_tmp_42["%HANDLERS"], $P5007
    set $P5006, $P5007
  vivi_21804864:
    unless_null $P5006, vivi_21814865
    die "Contextual %*HANDLERS not found"
    box $P5008, "Contextual %*HANDLERS not found"
    set $P5006, $P5008
  vivi_21814865:
    set $P5001, $P5006
  fallback4861:
    set $S5001, _lex_param_2
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if2178_end4860 
.annotate 'line', 1942
    set $S5004, _lex_param_2
    concat $S5003, "Duplicate ", $S5004
    concat $S5002, $S5003, " handler in block"
    box $P5009, $S5002
    die $P5009
  if2178_end4860:
.annotate 'line', 1945
    $P5010 = _lex_param_1."arity"()
    if $P5010 goto unless2182_end4867 
.annotate 'line', 1946
.annotate 'line', 1947
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_173, $P5012
    get_who $P5013, pkg_lookup_tmp_173
    exists $I5004, $P5013["QAST"]
    unless $I5004 goto if2184_else4870 
    get_who $P5015, pkg_lookup_tmp_173
    set $P5014, $P5015["QAST"]
    set $P5017, $P5014
    goto if2184_end4871
  if2184_else4870:
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5016
  if2184_end4871:
    get_who $P5011, $P5017
    set fb_tmp_331, $P5011
    repr_defined $I5003, fb_tmp_331
    unless $I5003 goto if2183_else4868 
    set $P5018, fb_tmp_331["Op"]
    set $P5020, $P5018
    goto if2183_end4869
  if2183_else4868:
    null $P5019
    set $P5020, $P5019
  if2183_end4869:
    unless_null $P5020, vivi_21854872
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_21854872:
.annotate 'line', 1948
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_174, $P5023
    get_who $P5024, pkg_lookup_tmp_174
    exists $I5006, $P5024["QAST"]
    unless $I5006 goto if2187_else4875 
    get_who $P5026, pkg_lookup_tmp_174
    set $P5025, $P5026["QAST"]
    set $P5028, $P5025
    goto if2187_end4876
  if2187_else4875:
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5027
  if2187_end4876:
    get_who $P5022, $P5028
    set fb_tmp_332, $P5022
    repr_defined $I5005, fb_tmp_332
    unless $I5005 goto if2186_else4873 
    set $P5029, fb_tmp_332["Var"]
    set $P5031, $P5029
    goto if2186_end4874
  if2186_else4873:
    null $P5030
    set $P5031, $P5030
  if2186_end4874:
    unless_null $P5031, vivi_21884877
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_21884877:
    $P5033 = $P5031."new"("lexical" :named("scope"), "$!" :named("name"), "var" :named("decl"))
.annotate 'line', 1949
    nqp_get_sc_object $P5035, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_175, $P5035
    get_who $P5036, pkg_lookup_tmp_175
    exists $I5008, $P5036["QAST"]
    unless $I5008 goto if2190_else4880 
    get_who $P5038, pkg_lookup_tmp_175
    set $P5037, $P5038["QAST"]
    set $P5040, $P5037
    goto if2190_end4881
  if2190_else4880:
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5039
  if2190_end4881:
    get_who $P5034, $P5040
    set fb_tmp_333, $P5034
    repr_defined $I5007, fb_tmp_333
    unless $I5007 goto if2189_else4878 
    set $P5041, fb_tmp_333["Var"]
    set $P5043, $P5041
    goto if2189_end4879
  if2189_else4878:
    null $P5042
    set $P5043, $P5042
  if2189_end4879:
    unless_null $P5043, vivi_21914882
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_21914882:
    $P5045 = $P5043."new"("lexical" :named("scope"), "$_" :named("name"))
    $P5046 = $P5020."new"($P5033, $P5045, "bind" :named("op"))
    _lex_param_1."unshift"($P5046)
.annotate 'line', 1952
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_176, $P5048
    get_who $P5049, pkg_lookup_tmp_176
    exists $I5010, $P5049["QAST"]
    unless $I5010 goto if2193_else4885 
    get_who $P5051, pkg_lookup_tmp_176
    set $P5050, $P5051["QAST"]
    set $P5053, $P5050
    goto if2193_end4886
  if2193_else4885:
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5052
  if2193_end4886:
    get_who $P5047, $P5053
    set fb_tmp_334, $P5047
    repr_defined $I5009, fb_tmp_334
    unless $I5009 goto if2192_else4883 
    set $P5054, fb_tmp_334["Var"]
    set $P5056, $P5054
    goto if2192_end4884
  if2192_else4883:
    null $P5055
    set $P5056, $P5055
  if2192_end4884:
    unless_null $P5056, vivi_21944887
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_21944887:
    $P5058 = $P5056."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    _lex_param_1."unshift"($P5058)
.annotate 'line', 1953
    _lex_param_1."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1954
    _lex_param_1."symbol"("$!", "lexical" :named("scope"))
.annotate 'line', 1955
    $P5059 = _lex_param_1."arity"(1)
  unless2182_end4867:
.annotate 'line', 1957
    _lex_param_1."blocktype"("declaration")
    find_dynamic_lex $P5060, "%*HANDLERS"
    unless_null $P5060, fallback4888
    nqp_get_sc_object $P5062, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_43, $P5061
    set fb_tmp_335, pkg_viv_tmp_43
    repr_defined $I5011, fb_tmp_335
    unless $I5011 goto if2195_else4889 
    set $P5063, fb_tmp_335["%HANDLERS"]
    set $P5065, $P5063
    goto if2195_end4890
  if2195_else4889:
    null $P5064
    set $P5065, $P5064
  if2195_end4890:
    unless_null $P5065, vivi_21964891
    new $P5066, 'Hash'
    set pkg_viv_tmp_43["%HANDLERS"], $P5066
    set $P5065, $P5066
  vivi_21964891:
    unless_null $P5065, vivi_21974892
    die "Contextual %*HANDLERS not found"
    box $P5067, "Contextual %*HANDLERS not found"
    set $P5065, $P5067
  vivi_21974892:
    set $P5060, $P5065
  fallback4888:
    set $S5005, _lex_param_2
.annotate 'line', 1958
    nqp_get_sc_object $P5069, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_177, $P5069
    get_who $P5070, pkg_lookup_tmp_177
    exists $I5013, $P5070["QAST"]
    unless $I5013 goto if2199_else4895 
    get_who $P5072, pkg_lookup_tmp_177
    set $P5071, $P5072["QAST"]
    set $P5074, $P5071
    goto if2199_end4896
  if2199_else4895:
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5073
  if2199_end4896:
    get_who $P5068, $P5074
    set fb_tmp_336, $P5068
    repr_defined $I5012, fb_tmp_336
    unless $I5012 goto if2198_else4893 
    set $P5075, fb_tmp_336["Stmts"]
    set $P5077, $P5075
    goto if2198_end4894
  if2198_else4893:
    null $P5076
    set $P5077, $P5076
  if2198_end4894:
    unless_null $P5077, vivi_22004897
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5078
  vivi_22004897:
.annotate 'line', 1959
    nqp_get_sc_object $P5080, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_178, $P5080
    get_who $P5081, pkg_lookup_tmp_178
    exists $I5015, $P5081["QAST"]
    unless $I5015 goto if2202_else4900 
    get_who $P5083, pkg_lookup_tmp_178
    set $P5082, $P5083["QAST"]
    set $P5085, $P5082
    goto if2202_end4901
  if2202_else4900:
    nqp_get_sc_object $P5084, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5085, $P5084
  if2202_end4901:
    get_who $P5079, $P5085
    set fb_tmp_337, $P5079
    repr_defined $I5014, fb_tmp_337
    unless $I5014 goto if2201_else4898 
    set $P5086, fb_tmp_337["Op"]
    set $P5088, $P5086
    goto if2201_end4899
  if2201_else4898:
    null $P5087
    set $P5088, $P5087
  if2201_end4899:
    unless_null $P5088, vivi_22034902
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_22034902:
.annotate 'line', 1961
    nqp_get_sc_object $P5091, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_179, $P5091
    get_who $P5092, pkg_lookup_tmp_179
    exists $I5017, $P5092["QAST"]
    unless $I5017 goto if2205_else4905 
    get_who $P5094, pkg_lookup_tmp_179
    set $P5093, $P5094["QAST"]
    set $P5096, $P5093
    goto if2205_end4906
  if2205_else4905:
    nqp_get_sc_object $P5095, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5095
  if2205_end4906:
    get_who $P5090, $P5096
    set fb_tmp_338, $P5090
    repr_defined $I5016, fb_tmp_338
    unless $I5016 goto if2204_else4903 
    set $P5097, fb_tmp_338["Op"]
    set $P5099, $P5097
    goto if2204_end4904
  if2204_else4903:
    null $P5098
    set $P5099, $P5098
  if2204_end4904:
    unless_null $P5099, vivi_22064907
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5099, $P5100
  vivi_22064907:
    $P5101 = $P5099."new"("exception" :named("op"))
    $P5102 = $P5088."new"(_lex_param_1, $P5101, "call" :named("op"))
.annotate 'line', 1963
    nqp_get_sc_object $P5104, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_180, $P5104
    get_who $P5105, pkg_lookup_tmp_180
    exists $I5019, $P5105["QAST"]
    unless $I5019 goto if2208_else4910 
    get_who $P5107, pkg_lookup_tmp_180
    set $P5106, $P5107["QAST"]
    set $P5109, $P5106
    goto if2208_end4911
  if2208_else4910:
    nqp_get_sc_object $P5108, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5108
  if2208_end4911:
    get_who $P5103, $P5109
    set fb_tmp_339, $P5103
    repr_defined $I5018, fb_tmp_339
    unless $I5018 goto if2207_else4908 
    set $P5110, fb_tmp_339["Op"]
    set $P5112, $P5110
    goto if2207_end4909
  if2207_else4908:
    null $P5111
    set $P5112, $P5111
  if2207_end4909:
    unless_null $P5112, vivi_22094912
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5112, $P5113
  vivi_22094912:
.annotate 'line', 1965
    nqp_get_sc_object $P5115, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_181, $P5115
    get_who $P5116, pkg_lookup_tmp_181
    exists $I5021, $P5116["QAST"]
    unless $I5021 goto if2211_else4915 
    get_who $P5118, pkg_lookup_tmp_181
    set $P5117, $P5118["QAST"]
    set $P5120, $P5117
    goto if2211_end4916
  if2211_else4915:
    nqp_get_sc_object $P5119, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5120, $P5119
  if2211_end4916:
    get_who $P5114, $P5120
    set fb_tmp_340, $P5114
    repr_defined $I5020, fb_tmp_340
    unless $I5020 goto if2210_else4913 
    set $P5121, fb_tmp_340["Op"]
    set $P5123, $P5121
    goto if2210_end4914
  if2210_else4913:
    null $P5122
    set $P5123, $P5122
  if2210_end4914:
    unless_null $P5123, vivi_22124917
    nqp_get_sc_object $P5124, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5123, $P5124
  vivi_22124917:
    $P5125 = $P5123."new"("exception" :named("op"))
.annotate 'line', 1966
    nqp_get_sc_object $P5127, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_182, $P5127
    get_who $P5128, pkg_lookup_tmp_182
    exists $I5023, $P5128["QAST"]
    unless $I5023 goto if2214_else4920 
    get_who $P5130, pkg_lookup_tmp_182
    set $P5129, $P5130["QAST"]
    set $P5132, $P5129
    goto if2214_end4921
  if2214_else4920:
    nqp_get_sc_object $P5131, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5132, $P5131
  if2214_end4921:
    get_who $P5126, $P5132
    set fb_tmp_341, $P5126
    repr_defined $I5022, fb_tmp_341
    unless $I5022 goto if2213_else4918 
    set $P5133, fb_tmp_341["SVal"]
    set $P5135, $P5133
    goto if2213_end4919
  if2213_else4918:
    null $P5134
    set $P5135, $P5134
  if2213_end4919:
    unless_null $P5135, vivi_22154922
    nqp_get_sc_object $P5136, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5135, $P5136
  vivi_22154922:
    $P5137 = $P5135."new"("handled" :named("value"))
.annotate 'line', 1967
    nqp_get_sc_object $P5139, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_183, $P5139
    get_who $P5140, pkg_lookup_tmp_183
    exists $I5025, $P5140["QAST"]
    unless $I5025 goto if2217_else4925 
    get_who $P5142, pkg_lookup_tmp_183
    set $P5141, $P5142["QAST"]
    set $P5144, $P5141
    goto if2217_end4926
  if2217_else4925:
    nqp_get_sc_object $P5143, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5144, $P5143
  if2217_end4926:
    get_who $P5138, $P5144
    set fb_tmp_342, $P5138
    repr_defined $I5024, fb_tmp_342
    unless $I5024 goto if2216_else4923 
    set $P5145, fb_tmp_342["IVal"]
    set $P5147, $P5145
    goto if2216_end4924
  if2216_else4923:
    null $P5146
    set $P5147, $P5146
  if2216_end4924:
    unless_null $P5147, vivi_22184927
    nqp_get_sc_object $P5148, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5147, $P5148
  vivi_22184927:
    $P5149 = $P5147."new"(1 :named("value"))
    $P5150 = $P5112."new"($P5125, $P5137, $P5149, "bindkey_i" :named("op"))
.annotate 'line', 1969
    $P5151 = "&default_for"("$")
    $P5152 = $P5077."new"($P5102, $P5150, $P5151)
    set $P5060[$S5005], $P5152
    .return ($P5152) 
.end
.HLL "nqp"
.namespace []
.sub "only_star_block" :subid("cuid_441_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2606
    .lex "$past", $P101 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc pkg_lookup_tmp_238 
    .local pmc fb_tmp_345 
    .local pmc pkg_lookup_tmp_239 
    .local pmc fb_tmp_346 
    .local pmc pkg_lookup_tmp_240 
    .local pmc fb_tmp_347 
    .local pmc pkg_lookup_tmp_241 
    .local pmc fb_tmp_348 
    .local pmc pkg_lookup_tmp_242 
    .local pmc fb_tmp_349 
    .local pmc pkg_lookup_tmp_243 
    .local pmc fb_tmp_350 
    .local pmc pkg_lookup_tmp_244 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc pkg_lookup_tmp_245 
    .local pmc fb_tmp_353 
    .local pmc pkg_lookup_tmp_246 
    .local pmc fb_tmp_354 
    .local pmc pkg_lookup_tmp_247 
    .local pmc fb_tmp_355 
    .local pmc pkg_lookup_tmp_248 
    .local pmc fb_tmp_356 
    .local pmc pkg_lookup_tmp_249 
    .local pmc fb_tmp_357 
    .local pmc pkg_lookup_tmp_250 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2607
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback4928
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_343, $P5003
    repr_defined $I5001, fb_tmp_343
    unless $I5001 goto if2219_else4929 
    set $P5005, fb_tmp_343["$W"]
    set $P5007, $P5005
    goto if2219_end4930
  if2219_else4929:
    null $P5006
    set $P5007, $P5006
  if2219_end4930:
    unless_null $P5007, vivi_22204931
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_22204931:
    unless_null $P5007, vivi_22214932
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_22214932:
    set $P5002, $P5007
  fallback4928:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
.annotate 'line', 2608
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_238, $P5012
    get_who $P5013, pkg_lookup_tmp_238
    exists $I5003, $P5013["QAST"]
    unless $I5003 goto if2223_else4935 
    get_who $P5015, pkg_lookup_tmp_238
    set $P5014, $P5015["QAST"]
    set $P5017, $P5014
    goto if2223_end4936
  if2223_else4935:
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5016
  if2223_end4936:
    get_who $P5011, $P5017
    set fb_tmp_344, $P5011
    repr_defined $I5002, fb_tmp_344
    unless $I5002 goto if2222_else4933 
    set $P5018, fb_tmp_344["Op"]
    set $P5020, $P5018
    goto if2222_end4934
  if2222_else4933:
    null $P5019
    set $P5020, $P5019
  if2222_end4934:
    unless_null $P5020, vivi_22244937
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_22244937:
.annotate 'line', 2610
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_239, $P5023
    get_who $P5024, pkg_lookup_tmp_239
    exists $I5005, $P5024["QAST"]
    unless $I5005 goto if2226_else4940 
    get_who $P5026, pkg_lookup_tmp_239
    set $P5025, $P5026["QAST"]
    set $P5028, $P5025
    goto if2226_end4941
  if2226_else4940:
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5027
  if2226_end4941:
    get_who $P5022, $P5028
    set fb_tmp_345, $P5022
    repr_defined $I5004, fb_tmp_345
    unless $I5004 goto if2225_else4938 
    set $P5029, fb_tmp_345["Op"]
    set $P5031, $P5029
    goto if2225_end4939
  if2225_else4938:
    null $P5030
    set $P5031, $P5030
  if2225_end4939:
    unless_null $P5031, vivi_22274942
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_22274942:
.annotate 'line', 2612
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_240, $P5034
    get_who $P5035, pkg_lookup_tmp_240
    exists $I5007, $P5035["QAST"]
    unless $I5007 goto if2229_else4945 
    get_who $P5037, pkg_lookup_tmp_240
    set $P5036, $P5037["QAST"]
    set $P5039, $P5036
    goto if2229_end4946
  if2229_else4945:
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5038
  if2229_end4946:
    get_who $P5033, $P5039
    set fb_tmp_346, $P5033
    repr_defined $I5006, fb_tmp_346
    unless $I5006 goto if2228_else4943 
    set $P5040, fb_tmp_346["Op"]
    set $P5042, $P5040
    goto if2228_end4944
  if2228_else4943:
    null $P5041
    set $P5042, $P5041
  if2228_end4944:
    unless_null $P5042, vivi_22304947
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_22304947:
.annotate 'line', 2614
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_241, $P5045
    get_who $P5046, pkg_lookup_tmp_241
    exists $I5009, $P5046["QAST"]
    unless $I5009 goto if2232_else4950 
    get_who $P5048, pkg_lookup_tmp_241
    set $P5047, $P5048["QAST"]
    set $P5050, $P5047
    goto if2232_end4951
  if2232_else4950:
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5049
  if2232_end4951:
    get_who $P5044, $P5050
    set fb_tmp_347, $P5044
    repr_defined $I5008, fb_tmp_347
    unless $I5008 goto if2231_else4948 
    set $P5051, fb_tmp_347["Var"]
    set $P5053, $P5051
    goto if2231_end4949
  if2231_else4948:
    null $P5052
    set $P5053, $P5052
  if2231_end4949:
    unless_null $P5053, vivi_22334952
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_22334952:
.annotate 'line', 2616
    nqp_get_sc_object $P5056, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_242, $P5056
    get_who $P5057, pkg_lookup_tmp_242
    exists $I5011, $P5057["QAST"]
    unless $I5011 goto if2235_else4955 
    get_who $P5059, pkg_lookup_tmp_242
    set $P5058, $P5059["QAST"]
    set $P5061, $P5058
    goto if2235_end4956
  if2235_else4955:
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5060
  if2235_end4956:
    get_who $P5055, $P5061
    set fb_tmp_348, $P5055
    repr_defined $I5010, fb_tmp_348
    unless $I5010 goto if2234_else4953 
    set $P5062, fb_tmp_348["Op"]
    set $P5064, $P5062
    goto if2234_end4954
  if2234_else4953:
    null $P5063
    set $P5064, $P5063
  if2234_end4954:
    unless_null $P5064, vivi_22364957
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_22364957:
    nqp_get_sc_object $P5067, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_243, $P5067
    get_who $P5068, pkg_lookup_tmp_243
    exists $I5013, $P5068["QAST"]
    unless $I5013 goto if2238_else4960 
    get_who $P5070, pkg_lookup_tmp_243
    set $P5069, $P5070["QAST"]
    set $P5072, $P5069
    goto if2238_end4961
  if2238_else4960:
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5071
  if2238_end4961:
    get_who $P5066, $P5072
    set fb_tmp_349, $P5066
    repr_defined $I5012, fb_tmp_349
    unless $I5012 goto if2237_else4958 
    set $P5073, fb_tmp_349["Op"]
    set $P5075, $P5073
    goto if2237_end4959
  if2237_else4958:
    null $P5074
    set $P5075, $P5074
  if2237_end4959:
    unless_null $P5075, vivi_22394962
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_22394962:
    $P5077 = $P5075."new"("curcode" :named("op"))
    $P5078 = $P5064."new"($P5077, "getcodeobj" :named("op"))
.annotate 'line', 2617
    nqp_get_sc_object $P5080, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_244, $P5080
    get_who $P5081, pkg_lookup_tmp_244
    exists $I5015, $P5081["QAST"]
    unless $I5015 goto if2241_else4965 
    get_who $P5083, pkg_lookup_tmp_244
    set $P5082, $P5083["QAST"]
    set $P5085, $P5082
    goto if2241_end4966
  if2241_else4965:
    nqp_get_sc_object $P5084, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5085, $P5084
  if2241_end4966:
    get_who $P5079, $P5085
    set fb_tmp_350, $P5079
    repr_defined $I5014, fb_tmp_350
    unless $I5014 goto if2240_else4963 
    set $P5086, fb_tmp_350["WVal"]
    set $P5088, $P5086
    goto if2240_end4964
  if2240_else4963:
    null $P5087
    set $P5088, $P5087
  if2240_end4964:
    unless_null $P5088, vivi_22424967
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_22424967:
    find_dynamic_lex $P5090, "$*W"
    unless_null $P5090, fallback4968
    nqp_get_sc_object $P5092, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5091, $P5092
    set fb_tmp_351, $P5091
    repr_defined $I5016, fb_tmp_351
    unless $I5016 goto if2243_else4969 
    set $P5093, fb_tmp_351["$W"]
    set $P5095, $P5093
    goto if2243_end4970
  if2243_else4969:
    null $P5094
    set $P5095, $P5094
  if2243_end4970:
    unless_null $P5095, vivi_22444971
    nqp_get_sc_object $P5096, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5096
  vivi_22444971:
    unless_null $P5095, vivi_22454972
    die "Contextual $*W not found"
    box $P5097, "Contextual $*W not found"
    set $P5095, $P5097
  vivi_22454972:
    set $P5090, $P5095
  fallback4968:
    new $P5098, 'ResizablePMCArray'
    box $P5099, "NQPRoutine"
    push $P5098, $P5099
    $P5100 = $P5090."find_sym"($P5098)
    $P5101 = $P5088."new"($P5100 :named("value"))
    $P5102 = $P5053."new"($P5078, $P5101, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2619
    nqp_get_sc_object $P5104, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_245, $P5104
    get_who $P5105, pkg_lookup_tmp_245
    exists $I5018, $P5105["QAST"]
    unless $I5018 goto if2247_else4975 
    get_who $P5107, pkg_lookup_tmp_245
    set $P5106, $P5107["QAST"]
    set $P5109, $P5106
    goto if2247_end4976
  if2247_else4975:
    nqp_get_sc_object $P5108, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5108
  if2247_end4976:
    get_who $P5103, $P5109
    set fb_tmp_352, $P5103
    repr_defined $I5017, fb_tmp_352
    unless $I5017 goto if2246_else4973 
    set $P5110, fb_tmp_352["Op"]
    set $P5112, $P5110
    goto if2246_end4974
  if2246_else4973:
    null $P5111
    set $P5112, $P5111
  if2246_end4974:
    unless_null $P5112, vivi_22484977
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5112, $P5113
  vivi_22484977:
    $P5114 = $P5112."new"("usecapture" :named("op"))
    $P5115 = $P5042."new"($P5102, $P5114, "multicachefind" :named("op"))
.annotate 'line', 2621
    nqp_get_sc_object $P5117, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_246, $P5117
    get_who $P5118, pkg_lookup_tmp_246
    exists $I5020, $P5118["QAST"]
    unless $I5020 goto if2250_else4980 
    get_who $P5120, pkg_lookup_tmp_246
    set $P5119, $P5120["QAST"]
    set $P5122, $P5119
    goto if2250_end4981
  if2250_else4980:
    nqp_get_sc_object $P5121, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5122, $P5121
  if2250_end4981:
    get_who $P5116, $P5122
    set fb_tmp_353, $P5116
    repr_defined $I5019, fb_tmp_353
    unless $I5019 goto if2249_else4978 
    set $P5123, fb_tmp_353["Op"]
    set $P5125, $P5123
    goto if2249_end4979
  if2249_else4978:
    null $P5124
    set $P5125, $P5124
  if2249_end4979:
    unless_null $P5125, vivi_22514982
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5125, $P5126
  vivi_22514982:
.annotate 'line', 2623
    nqp_get_sc_object $P5128, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_247, $P5128
    get_who $P5129, pkg_lookup_tmp_247
    exists $I5022, $P5129["QAST"]
    unless $I5022 goto if2253_else4985 
    get_who $P5131, pkg_lookup_tmp_247
    set $P5130, $P5131["QAST"]
    set $P5133, $P5130
    goto if2253_end4986
  if2253_else4985:
    nqp_get_sc_object $P5132, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5133, $P5132
  if2253_end4986:
    get_who $P5127, $P5133
    set fb_tmp_354, $P5127
    repr_defined $I5021, fb_tmp_354
    unless $I5021 goto if2252_else4983 
    set $P5134, fb_tmp_354["Op"]
    set $P5136, $P5134
    goto if2252_end4984
  if2252_else4983:
    null $P5135
    set $P5136, $P5135
  if2252_end4984:
    unless_null $P5136, vivi_22544987
    nqp_get_sc_object $P5137, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5136, $P5137
  vivi_22544987:
    nqp_get_sc_object $P5139, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_248, $P5139
    get_who $P5140, pkg_lookup_tmp_248
    exists $I5024, $P5140["QAST"]
    unless $I5024 goto if2256_else4990 
    get_who $P5142, pkg_lookup_tmp_248
    set $P5141, $P5142["QAST"]
    set $P5144, $P5141
    goto if2256_end4991
  if2256_else4990:
    nqp_get_sc_object $P5143, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5144, $P5143
  if2256_end4991:
    get_who $P5138, $P5144
    set fb_tmp_355, $P5138
    repr_defined $I5023, fb_tmp_355
    unless $I5023 goto if2255_else4988 
    set $P5145, fb_tmp_355["Op"]
    set $P5147, $P5145
    goto if2255_end4989
  if2255_else4988:
    null $P5146
    set $P5147, $P5146
  if2255_end4989:
    unless_null $P5147, vivi_22574992
    nqp_get_sc_object $P5148, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5147, $P5148
  vivi_22574992:
    $P5149 = $P5147."new"("curcode" :named("op"))
    $P5150 = $P5136."new"($P5149, "getcodeobj" :named("op"))
.annotate 'line', 2624
    nqp_get_sc_object $P5152, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_249, $P5152
    get_who $P5153, pkg_lookup_tmp_249
    exists $I5026, $P5153["QAST"]
    unless $I5026 goto if2259_else4995 
    get_who $P5155, pkg_lookup_tmp_249
    set $P5154, $P5155["QAST"]
    set $P5157, $P5154
    goto if2259_end4996
  if2259_else4995:
    nqp_get_sc_object $P5156, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5157, $P5156
  if2259_end4996:
    get_who $P5151, $P5157
    set fb_tmp_356, $P5151
    repr_defined $I5025, fb_tmp_356
    unless $I5025 goto if2258_else4993 
    set $P5158, fb_tmp_356["Op"]
    set $P5160, $P5158
    goto if2258_end4994
  if2258_else4993:
    null $P5159
    set $P5160, $P5159
  if2258_end4994:
    unless_null $P5160, vivi_22604997
    nqp_get_sc_object $P5161, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5160, $P5161
  vivi_22604997:
    $P5162 = $P5160."new"("usecapture" :named("op"))
    $P5163 = $P5125."new"($P5150, $P5162, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5164 = $P5031."new"($P5115, $P5163, "ifnull" :named("op"))
.annotate 'line', 2627
    nqp_get_sc_object $P5166, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_250, $P5166
    get_who $P5167, pkg_lookup_tmp_250
    exists $I5028, $P5167["QAST"]
    unless $I5028 goto if2262_else5000 
    get_who $P5169, pkg_lookup_tmp_250
    set $P5168, $P5169["QAST"]
    set $P5171, $P5168
    goto if2262_end5001
  if2262_else5000:
    nqp_get_sc_object $P5170, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5171, $P5170
  if2262_end5001:
    get_who $P5165, $P5171
    set fb_tmp_357, $P5165
    repr_defined $I5027, fb_tmp_357
    unless $I5027 goto if2261_else4998 
    set $P5172, fb_tmp_357["Op"]
    set $P5174, $P5172
    goto if2261_end4999
  if2261_else4998:
    null $P5173
    set $P5174, $P5173
  if2261_end4999:
    unless_null $P5174, vivi_22635002
    nqp_get_sc_object $P5175, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5174, $P5175
  vivi_22635002:
    $P5176 = $P5174."new"("usecapture" :named("op"))
    $P5177 = $P5020."new"($P5164, $P5176, "invokewithcapture" :named("op"))
    $P101."push"($P5177)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "attach_multi_signature" :subid("cuid_443_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2632
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5024 = 'cuid_442_1361537952.49511' 
    capture_lex $P5024 
    .lex "$types", $P101 
    .lex "$definednesses", $P102 
    .lex "$code_obj", _lex_param_0 
    .lex "$routine", _lex_param_1 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_362 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P101, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P102, $P5004
    set fb_tmp_358, _lex_param_1
    repr_defined $I5001, fb_tmp_358
    unless $I5001 goto if2264_else5003 
    set $P5008, fb_tmp_358[0]
    set $P5010, $P5008
    goto if2264_end5004
  if2264_else5003:
    null $P5009
    set $P5010, $P5009
  if2264_end5004:
    unless_null $P5010, vivi_22655005
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_22655005:
    $P5012 = $P5010."list"()
    set $P5005, $P5012
    iter $P5007, $P5012
  for_next5029:
    unless $P5007, for_done5031
    shift $P5014, $P5007
  for_redo5030:
    .const 'Sub' $P5013 = 'cuid_442_1361537952.49511' 
    capture_lex $P5013
    $P5005 = $P5013($P5014)
    goto for_next5029
  for_done5031:
.annotate 'line', 2644
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5032
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_362, $P5016
    repr_defined $I5002, fb_tmp_362
    unless $I5002 goto if2279_else5033 
    set $P5018, fb_tmp_362["$W"]
    set $P5020, $P5018
    goto if2279_end5034
  if2279_else5033:
    null $P5019
    set $P5020, $P5019
  if2279_end5034:
    unless_null $P5020, vivi_22805035
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_22805035:
    unless_null $P5020, vivi_22815036
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_22815036:
    set $P5015, $P5020
  fallback5032:
    $P5023 = $P5015."set_routine_signature"(_lex_param_0, $P101, $P102)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_442_1361537952.49511") :anon :lex :outer("cuid_443_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2635
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_359 
    .local pmc pkg_lookup_tmp_251 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_251, $P5002
    get_who $P5003, pkg_lookup_tmp_251
    exists $I5003, $P5003["QAST"]
    unless $I5003 goto if2270_else5014 
    get_who $P5005, pkg_lookup_tmp_251
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2270_end5015
  if2270_else5014:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2270_end5015:
    get_who $P5001, $P5007
    set fb_tmp_359, $P5001
    repr_defined $I5002, fb_tmp_359
    unless $I5002 goto if2269_else5012 
    set $P5008, fb_tmp_359["Var"]
    set $P5010, $P5008
    goto if2269_end5013
  if2269_else5012:
    null $P5009
    set $P5010, $P5009
  if2269_end5013:
    unless_null $P5010, vivi_22715016
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_22715016:
    type_check $I5001, _lex_param_0, $P5010
    set $I5005, $I5001
    unless $I5001 goto if2268_end5011 
.annotate 'line', 2636
    $P5012 = _lex_param_0."decl"()
    set $S5001, $P5012
    iseq $I5004, $S5001, "param"
    set $I5005, $I5004
  if2268_end5011:
    set $I5007, $I5005
    unless $I5005 goto if2267_end5009 
    $P5013 = _lex_param_0."named"()
    isfalse $I5006, $P5013
    set $I5007, $I5006
  if2267_end5009:
    box $P5031, $I5007
    set $P5030, $P5031
    unless $I5007 goto if2266_end5007 
.annotate 'line', 2637
    find_lex $P5014, "$types"
    $P5015 = _lex_param_0."returns"()
    get_id $I5009, $P5015
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    get_id $I5010, $P5016
    iseq $I5008, $I5009, $I5010
    unless $I5008 goto if2272_else5017 
    null $P5017
    set $P5019, $P5017
    goto if2272_end5018
  if2272_else5017:
.annotate 'line', 2639
    $P5018 = _lex_param_0."returns"()
    set $P5019, $P5018
  if2272_end5018:
    $P5014."push"($P5019)
.annotate 'line', 2640
    find_lex $P5020, "$definednesses"
    set fb_tmp_360, _lex_param_0
    repr_defined $I5012, fb_tmp_360
    unless $I5012 goto if2274_else5021 
    set $P5021, fb_tmp_360["definedness"]
    set $P5023, $P5021
    goto if2274_end5022
  if2274_else5021:
    null $P5022
    set $P5023, $P5022
  if2274_end5022:
    unless_null $P5023, vivi_22755023
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_22755023:
    set $S5002, $P5023
    iseq $I5011, $S5002, "D"
    unless $I5011 goto if2273_else5019 
    set $I5016, 1
    goto if2273_end5020
  if2273_else5019:
    set fb_tmp_361, _lex_param_0
    repr_defined $I5014, fb_tmp_361
    unless $I5014 goto if2277_else5026 
    set $P5025, fb_tmp_361["definedness"]
    set $P5027, $P5025
    goto if2277_end5027
  if2277_else5026:
    null $P5026
    set $P5027, $P5026
  if2277_end5027:
    unless_null $P5027, vivi_22785028
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_22785028:
    set $S5003, $P5027
    iseq $I5013, $S5003, "U"
    unless $I5013 goto if2276_else5024 
    set $I5015, 2
    goto if2276_end5025
  if2276_else5024:
    set $I5015, 0
  if2276_end5025:
    set $I5016, $I5015
  if2273_end5020:
    $P5029 = $P5020."push"($I5016)
    set $P5030, $P5029
  if2266_end5007:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "wrap_return_handler" :subid("cuid_444_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2647
    .param pmc _lex_param_0 
    .lex "$past", _lex_param_0 
    .local pmc fb_tmp_363 
    .local pmc pkg_lookup_tmp_252 
.annotate 'line', 2648
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_252, $P5002
    get_who $P5003, pkg_lookup_tmp_252
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2283_else5039 
    get_who $P5005, pkg_lookup_tmp_252
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2283_end5040
  if2283_else5039:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2283_end5040:
    get_who $P5001, $P5007
    set fb_tmp_363, $P5001
    repr_defined $I5001, fb_tmp_363
    unless $I5001 goto if2282_else5037 
    set $P5008, fb_tmp_363["Op"]
    set $P5010, $P5008
    goto if2282_end5038
  if2282_else5037:
    null $P5009
    set $P5010, $P5009
  if2282_end5038:
    unless_null $P5010, vivi_22845041
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_22845041:
    $P5012 = $P5010."new"(_lex_param_0, "lexotic" :named("op"), "RETURN" :named("name"))
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_package_lookup" :subid("cuid_450_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3150
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5128 = 'cuid_447_1361537952.49511' 
    capture_lex $P5128 
    .lex "$final_name", $P101 
    .lex "$lookup", $P102 
    .lex "@name", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_364 
    .local pmc pkg_lookup_tmp_329 
    .local pmc fb_tmp_365 
    .local pmc pkg_lookup_tmp_330 
    .local pmc fb_tmp_366 
    .local pmc pkg_lookup_tmp_331 
    .local pmc fb_tmp_367 
    .local pmc pkg_lookup_tmp_332 
    .local pmc fb_tmp_368 
    .local pmc pkg_lookup_tmp_333 
    .local pmc fb_tmp_369 
    .local pmc pkg_lookup_tmp_334 
    .local pmc fb_tmp_370 
    .local pmc pkg_lookup_tmp_335 
    .local pmc fb_tmp_371 
    .local pmc pkg_lookup_tmp_336 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    .local pmc pkg_lookup_tmp_337 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    root_new $P103, ['parrot';'Continuation']
    set_label $P103, lexotic_5042
    .lex "RETURN", $P103
    set $N5001, _lex_param_0
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if2285_end5045 
.annotate 'line', 3152
    $P5003 = _lex_param_1."CURSOR"()
    $P5004 = $P5003."panic"("Cannot compile empty name")
  if2285_end5045:
.annotate 'line', 3156
    $P5005 = _lex_param_0."pop"()
    set $P101, $P5005
.annotate 'line', 3157
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_329, $P5007
    get_who $P5008, pkg_lookup_tmp_329
    exists $I5003, $P5008["QAST"]
    unless $I5003 goto if2287_else5048 
    get_who $P5010, pkg_lookup_tmp_329
    set $P5009, $P5010["QAST"]
    set $P5012, $P5009
    goto if2287_end5049
  if2287_else5048:
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5011
  if2287_end5049:
    get_who $P5006, $P5012
    set fb_tmp_364, $P5006
    repr_defined $I5002, fb_tmp_364
    unless $I5002 goto if2286_else5046 
    set $P5013, fb_tmp_364["VarWithFallback"]
    set $P5015, $P5013
    goto if2286_end5047
  if2286_else5046:
    null $P5014
    set $P5015, $P5014
  if2286_end5047:
    unless_null $P5015, vivi_22885050
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_22885050:
.annotate 'line', 3159
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_330, $P5018
    get_who $P5019, pkg_lookup_tmp_330
    exists $I5005, $P5019["QAST"]
    unless $I5005 goto if2290_else5053 
    get_who $P5021, pkg_lookup_tmp_330
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if2290_end5054
  if2290_else5053:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if2290_end5054:
    get_who $P5017, $P5023
    set fb_tmp_365, $P5017
    repr_defined $I5004, fb_tmp_365
    unless $I5004 goto if2289_else5051 
    set $P5024, fb_tmp_365["SVal"]
    set $P5026, $P5024
    goto if2289_end5052
  if2289_else5051:
    null $P5025
    set $P5026, $P5025
  if2289_end5052:
    unless_null $P5026, vivi_22915055
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_22915055:
    set $S5001, $P101
    $P5028 = $P5026."new"($S5001 :named("value"))
    $P5029 = $P5015."new"($P5028, "associative" :named("scope"))
    set $P102, $P5029
    set $N5003, _lex_param_0
    set $N5004, 0
    iseq $I5006, $N5003, $N5004
    unless $I5006 goto if2292_else5056 
.annotate 'line', 3164
.annotate 'line', 3165
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_331, $P5031
    get_who $P5032, pkg_lookup_tmp_331
    exists $I5008, $P5032["QAST"]
    unless $I5008 goto if2294_else5060 
    get_who $P5034, pkg_lookup_tmp_331
    set $P5033, $P5034["QAST"]
    set $P5036, $P5033
    goto if2294_end5061
  if2294_else5060:
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5035
  if2294_end5061:
    get_who $P5030, $P5036
    set fb_tmp_366, $P5030
    repr_defined $I5007, fb_tmp_366
    unless $I5007 goto if2293_else5058 
    set $P5037, fb_tmp_366["Op"]
    set $P5039, $P5037
    goto if2293_end5059
  if2293_else5058:
    null $P5038
    set $P5039, $P5038
  if2293_end5059:
    unless_null $P5039, vivi_22955062
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_22955062:
.annotate 'line', 3167
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_332, $P5042
    get_who $P5043, pkg_lookup_tmp_332
    exists $I5010, $P5043["QAST"]
    unless $I5010 goto if2297_else5065 
    get_who $P5045, pkg_lookup_tmp_332
    set $P5044, $P5045["QAST"]
    set $P5047, $P5044
    goto if2297_end5066
  if2297_else5065:
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5046
  if2297_end5066:
    get_who $P5041, $P5047
    set fb_tmp_367, $P5041
    repr_defined $I5009, fb_tmp_367
    unless $I5009 goto if2296_else5063 
    set $P5048, fb_tmp_367["Var"]
    set $P5050, $P5048
    goto if2296_end5064
  if2296_else5063:
    null $P5049
    set $P5050, $P5049
  if2296_end5064:
    unless_null $P5050, vivi_22985067
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_22985067:
    $P5052 = $P5050."new"("$?PACKAGE" :named("name"), "lexical" :named("scope"))
    $P5053 = $P5039."new"($P5052, "who" :named("op"))
    $P102."unshift"($P5053)
.annotate 'line', 3169
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_333, $P5055
    get_who $P5056, pkg_lookup_tmp_333
    exists $I5012, $P5056["QAST"]
    unless $I5012 goto if2300_else5070 
    get_who $P5058, pkg_lookup_tmp_333
    set $P5057, $P5058["QAST"]
    set $P5060, $P5057
    goto if2300_end5071
  if2300_else5070:
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5059
  if2300_end5071:
    get_who $P5054, $P5060
    set fb_tmp_368, $P5054
    repr_defined $I5011, fb_tmp_368
    unless $I5011 goto if2299_else5068 
    set $P5061, fb_tmp_368["Op"]
    set $P5063, $P5061
    goto if2299_end5069
  if2299_else5068:
    null $P5062
    set $P5063, $P5062
  if2299_end5069:
    unless_null $P5063, vivi_23015072
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_23015072:
.annotate 'line', 3171
    nqp_get_sc_object $P5066, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_334, $P5066
    get_who $P5067, pkg_lookup_tmp_334
    exists $I5014, $P5067["QAST"]
    unless $I5014 goto if2303_else5075 
    get_who $P5069, pkg_lookup_tmp_334
    set $P5068, $P5069["QAST"]
    set $P5071, $P5068
    goto if2303_end5076
  if2303_else5075:
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5070
  if2303_end5076:
    get_who $P5065, $P5071
    set fb_tmp_369, $P5065
    repr_defined $I5013, fb_tmp_369
    unless $I5013 goto if2302_else5073 
    set $P5072, fb_tmp_369["Op"]
    set $P5074, $P5072
    goto if2302_end5074
  if2302_else5073:
    null $P5073
    set $P5074, $P5073
  if2302_end5074:
    unless_null $P5074, vivi_23045077
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5075
  vivi_23045077:
.annotate 'line', 3173
    nqp_get_sc_object $P5077, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_335, $P5077
    get_who $P5078, pkg_lookup_tmp_335
    exists $I5016, $P5078["QAST"]
    unless $I5016 goto if2306_else5080 
    get_who $P5080, pkg_lookup_tmp_335
    set $P5079, $P5080["QAST"]
    set $P5082, $P5079
    goto if2306_end5081
  if2306_else5080:
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5081
  if2306_end5081:
    get_who $P5076, $P5082
    set fb_tmp_370, $P5076
    repr_defined $I5015, fb_tmp_370
    unless $I5015 goto if2305_else5078 
    set $P5083, fb_tmp_370["Op"]
    set $P5085, $P5083
    goto if2305_end5079
  if2305_else5078:
    null $P5084
    set $P5085, $P5084
  if2305_end5079:
    unless_null $P5085, vivi_23075082
    nqp_get_sc_object $P5086, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5085, $P5086
  vivi_23075082:
.annotate 'line', 3175
    nqp_get_sc_object $P5088, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_336, $P5088
    get_who $P5089, pkg_lookup_tmp_336
    exists $I5018, $P5089["QAST"]
    unless $I5018 goto if2309_else5085 
    get_who $P5091, pkg_lookup_tmp_336
    set $P5090, $P5091["QAST"]
    set $P5093, $P5090
    goto if2309_end5086
  if2309_else5085:
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5093, $P5092
  if2309_end5086:
    get_who $P5087, $P5093
    set fb_tmp_371, $P5087
    repr_defined $I5017, fb_tmp_371
    unless $I5017 goto if2308_else5083 
    set $P5094, fb_tmp_371["WVal"]
    set $P5096, $P5094
    goto if2308_end5084
  if2308_else5083:
    null $P5095
    set $P5096, $P5095
  if2308_end5084:
    unless_null $P5096, vivi_23105087
    nqp_get_sc_object $P5097, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5097
  vivi_23105087:
    find_dynamic_lex $P5098, "$*GLOBALish"
    unless_null $P5098, fallback5088
    nqp_get_sc_object $P5100, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5099, $P5100
    set fb_tmp_372, $P5099
    repr_defined $I5019, fb_tmp_372
    unless $I5019 goto if2311_else5089 
    set $P5101, fb_tmp_372["$GLOBALish"]
    set $P5103, $P5101
    goto if2311_end5090
  if2311_else5089:
    null $P5102
    set $P5103, $P5102
  if2311_end5090:
    unless_null $P5103, vivi_23125091
    nqp_get_sc_object $P5104, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5103, $P5104
  vivi_23125091:
    unless_null $P5103, vivi_23135092
    die "Contextual $*GLOBALish not found"
    box $P5105, "Contextual $*GLOBALish not found"
    set $P5103, $P5105
  vivi_23135092:
    set $P5098, $P5103
  fallback5088:
    $P5106 = $P5096."new"($P5098 :named("value"))
    $P5107 = $P5085."new"($P5106, "who" :named("op"))
.annotate 'line', 3177
    nqp_get_sc_object $P5109, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_337, $P5109
    get_who $P5110, pkg_lookup_tmp_337
    exists $I5021, $P5110["QAST"]
    unless $I5021 goto if2315_else5095 
    get_who $P5112, pkg_lookup_tmp_337
    set $P5111, $P5112["QAST"]
    set $P5114, $P5111
    goto if2315_end5096
  if2315_else5095:
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5113
  if2315_end5096:
    get_who $P5108, $P5114
    set fb_tmp_373, $P5108
    repr_defined $I5020, fb_tmp_373
    unless $I5020 goto if2314_else5093 
    set $P5115, fb_tmp_373["SVal"]
    set $P5117, $P5115
    goto if2314_end5094
  if2314_else5093:
    null $P5116
    set $P5117, $P5116
  if2314_end5094:
    unless_null $P5117, vivi_23165097
    nqp_get_sc_object $P5118, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5117, $P5118
  vivi_23165097:
    set $S5002, $P101
    $P5119 = $P5117."new"($S5002 :named("value"))
    $P5120 = $P5074."new"($P5107, $P5119, "atkey" :named("op"))
.annotate 'line', 3179
    set $S5004, $P101
    substr $S5003, $S5004, 0, 1
    $P5121 = "&default_for"($S5003)
    $P5122 = $P5063."new"($P5120, $P5121, "ifnull" :named("op"))
    $P5123 = $P102."fallback"($P5122)
    goto if2292_end5057
  if2292_else5056:
    .const 'Sub' $P5124 = 'cuid_447_1361537952.49511' 
    capture_lex $P5124
    $P5125 = $P5124()
  if2292_end5057:
    find_lex $P5126, "RETURN"
    $P5127 = $P5126($P102)
    goto lexotic_5043
  lexotic_5042:
    .get_results ($P5127)
  lexotic_5043:
    .return ($P5127) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_447_1361537952.49511") :anon :lex :outer("cuid_450_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3185
    .const 'Sub' $P5073 = 'cuid_446_1361537952.49511' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_448_1361537952.49511' 
    capture_lex $P5073 
    .const 'Sub' $P5073 = 'cuid_449_1361537952.49511' 
    capture_lex $P5073 
    .lex "$path", $P101 
    .lex "$sigil", $P102 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_379 
    .local pmc pkg_lookup_tmp_340 
    .local pmc fb_tmp_380 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_395 
    .local pmc pkg_lookup_tmp_354 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 3187
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback5100
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_374, $P5004
    repr_defined $I5001, fb_tmp_374
    unless $I5001 goto if2318_else5101 
    set $P5006, fb_tmp_374["$W"]
    set $P5008, $P5006
    goto if2318_end5102
  if2318_else5101:
    null $P5007
    set $P5008, $P5007
  if2318_end5102:
    unless_null $P5008, vivi_23195103
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_23195103:
    unless_null $P5008, vivi_23205104
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_23205104:
    set $P5003, $P5008
  fallback5100:
    find_lex $P5011, "@name"
    set fb_tmp_375, $P5011
    repr_defined $I5002, fb_tmp_375
    unless $I5002 goto if2321_else5105 
    set $P5012, fb_tmp_375[0]
    set $P5014, $P5012
    goto if2321_end5106
  if2321_else5105:
    null $P5013
    set $P5014, $P5013
  if2321_end5106:
    unless_null $P5014, vivi_23225107
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_23225107:
    $P5016 = $P5003."is_lexical"($P5014)
    unless $P5016 goto if2317_else5098 
    .const 'Sub' $P5017 = 'cuid_446_1361537952.49511' 
    capture_lex $P5017
    $P5018 = $P5017()
    goto if2317_end5099
  if2317_else5098:
.annotate 'line', 3196
.annotate 'line', 3197
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_340, $P5020
    get_who $P5021, pkg_lookup_tmp_340
    exists $I5004, $P5021["QAST"]
    unless $I5004 goto if2335_else5127 
    get_who $P5023, pkg_lookup_tmp_340
    set $P5022, $P5023["QAST"]
    set $P5025, $P5022
    goto if2335_end5128
  if2335_else5127:
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5024
  if2335_end5128:
    get_who $P5019, $P5025
    set fb_tmp_379, $P5019
    repr_defined $I5003, fb_tmp_379
    unless $I5003 goto if2334_else5125 
    set $P5026, fb_tmp_379["WVal"]
    set $P5028, $P5026
    goto if2334_end5126
  if2334_else5125:
    null $P5027
    set $P5028, $P5027
  if2334_end5126:
    unless_null $P5028, vivi_23365129
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_23365129:
    find_dynamic_lex $P5030, "$*GLOBALish"
    unless_null $P5030, fallback5130
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5031, $P5032
    set fb_tmp_380, $P5031
    repr_defined $I5005, fb_tmp_380
    unless $I5005 goto if2337_else5131 
    set $P5033, fb_tmp_380["$GLOBALish"]
    set $P5035, $P5033
    goto if2337_end5132
  if2337_else5131:
    null $P5034
    set $P5035, $P5034
  if2337_end5132:
    unless_null $P5035, vivi_23385133
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_23385133:
    unless_null $P5035, vivi_23395134
    die "Contextual $*GLOBALish not found"
    box $P5037, "Contextual $*GLOBALish not found"
    set $P5035, $P5037
  vivi_23395134:
    set $P5030, $P5035
  fallback5130:
    $P5038 = $P5028."new"($P5030 :named("value"))
    set $P101, $P5038
  if2317_end5099:
    find_lex $P5039, "@name"
    set fb_tmp_381, $P5039
    repr_defined $I5007, fb_tmp_381
    unless $I5007 goto if2341_else5137 
    set $P5040, fb_tmp_381[0]
    set $P5042, $P5040
    goto if2341_end5138
  if2341_else5137:
    null $P5041
    set $P5042, $P5041
  if2341_end5138:
    unless_null $P5042, vivi_23425139
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_23425139:
    set $S5001, $P5042
    iseq $I5006, $S5001, "GLOBAL"
    unless $I5006 goto if2340_end5136 
.annotate 'line', 3199
.annotate 'line', 3200
    find_lex $P5044, "@name"
    $P5045 = $P5044."shift"()
  if2340_end5136:
    find_lex $P5049, "@name"
    set $P5046, $P5049
    iter $P5048, $P5049
  for_next5205:
    unless $P5048, for_done5207
    shift $P5051, $P5048
  for_redo5206:
    .const 'Sub' $P5050 = 'cuid_448_1361537952.49511' 
    capture_lex $P5050
    $P5046 = $P5050($P5051)
    goto for_next5205
  for_done5207:
.annotate 'line', 3225
    find_lex $P5052, "$lookup"
    nqp_get_sc_object $P5054, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_354, $P5054
    get_who $P5055, pkg_lookup_tmp_354
    exists $I5009, $P5055["QAST"]
    unless $I5009 goto if2383_else5210 
    get_who $P5057, pkg_lookup_tmp_354
    set $P5056, $P5057["QAST"]
    set $P5059, $P5056
    goto if2383_end5211
  if2383_else5210:
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5058
  if2383_end5211:
    get_who $P5053, $P5059
    set fb_tmp_395, $P5053
    repr_defined $I5008, fb_tmp_395
    unless $I5008 goto if2382_else5208 
    set $P5060, fb_tmp_395["Op"]
    set $P5062, $P5060
    goto if2382_end5209
  if2382_else5208:
    null $P5061
    set $P5062, $P5061
  if2382_end5209:
    unless_null $P5062, vivi_23845212
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5063
  vivi_23845212:
    $P5064 = $P5062."new"($P101, "who" :named("op"))
    $P5052."unshift"($P5064)
    find_lex $P5065, "$final_name"
    set $S5003, $P5065
    substr $S5002, $S5003, 0, 1
    box $P5066, $S5002
    set $P102, $P5066
    set $S5004, $P102
    iseq $I5010, $S5004, "@"
    set $I5012, $I5010
    if $I5010 goto unless2386_end5216 
    set $S5005, $P102
    iseq $I5011, $S5005, "%"
    set $I5012, $I5011
  unless2386_end5216:
    unless $I5012 goto if2385_else5213 
    .const 'Sub' $P5067 = 'cuid_449_1361537952.49511' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5072, $P5068
    goto if2385_end5214
  if2385_else5213:
.annotate 'line', 3240
.annotate 'line', 3241
    find_lex $P5069, "$lookup"
    $P5070 = "&default_for"($P102)
    $P5071 = $P5069."fallback"($P5070)
    set $P5072, $P5071
  if2385_end5214:
    .return ($P5072) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_446_1361537952.49511") :anon :lex :outer("cuid_447_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3188
    .const 'Sub' $P5029 = 'cuid_445_1361537952.49511' 
    capture_lex $P5029 
    .lex "$first", $P101 
    .local pmc fb_tmp_376 
    .local pmc pkg_lookup_tmp_338 
    .local pmc fb_tmp_377 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5027, 'ExceptionHandler'
    set_label $P5027, catch_handler_23305119
    $P5027.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5027
.annotate 'line', 3189
    find_lex $P5002, "@name"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 3190
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_338, $P5005
    get_who $P5006, pkg_lookup_tmp_338
    exists $I5002, $P5006["QAST"]
    unless $I5002 goto if2324_else5110 
    get_who $P5008, pkg_lookup_tmp_338
    set $P5007, $P5008["QAST"]
    set $P5010, $P5007
    goto if2324_end5111
  if2324_else5110:
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5009
  if2324_end5111:
    get_who $P5004, $P5010
    set fb_tmp_376, $P5004
    repr_defined $I5001, fb_tmp_376
    unless $I5001 goto if2323_else5108 
    set $P5011, fb_tmp_376["WVal"]
    set $P5013, $P5011
    goto if2323_end5109
  if2323_else5108:
    null $P5012
    set $P5013, $P5012
  if2323_end5109:
    unless_null $P5013, vivi_23255112
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_23255112:
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback5113
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_377, $P5016
    repr_defined $I5003, fb_tmp_377
    unless $I5003 goto if2326_else5114 
    set $P5018, fb_tmp_377["$W"]
    set $P5020, $P5018
    goto if2326_end5115
  if2326_else5114:
    null $P5019
    set $P5020, $P5019
  if2326_end5115:
    unless_null $P5020, vivi_23275116
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_23275116:
    unless_null $P5020, vivi_23285117
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_23285117:
    set $P5015, $P5020
  fallback5113:
    new $P5023, 'ResizablePMCArray'
    push $P5023, $P101
    $P5024 = $P5015."find_sym"($P5023)
    $P5025 = $P5013."new"($P5024 :named("value"))
    store_lex "$path", $P5025
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5026
    pop_eh 
    goto skip_handler_23295118
  catch_handler_23305119:
    .get_results ($P5027) 
    .const 'Sub' $P10001 = 'cuid_445_1361537952.49511' 
    capture_lex $P10001
    $P10001($P5027)
    set $I10001, 1
    set $P5027["handled"], $I10001
    nqp_get_sc_object $P10002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5027
    pop_upto_eh $P5027
    pop_eh 
    set $P5028, $P10002
    goto skip_handler_23295118
  skip_handler_23295118:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_445_1361537952.49511") :anon :lex :outer("cuid_446_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3191
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_378 
    .local pmc pkg_lookup_tmp_339 
    set $P101, _lex_param_0
.annotate 'line', 3192
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_339, $P5002
    get_who $P5003, pkg_lookup_tmp_339
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2332_else5122 
    get_who $P5005, pkg_lookup_tmp_339
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2332_end5123
  if2332_else5122:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2332_end5123:
    get_who $P5001, $P5007
    set fb_tmp_378, $P5001
    repr_defined $I5001, fb_tmp_378
    unless $I5001 goto if2331_else5120 
    set $P5008, fb_tmp_378["Var"]
    set $P5010, $P5008
    goto if2331_end5121
  if2331_else5120:
    null $P5009
    set $P5010, $P5009
  if2331_end5121:
    unless_null $P5010, vivi_23335124
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_23335124:
    find_lex $P5012, "$first"
    $P5013 = $P5010."new"($P5012 :named("name"), "lexical" :named("scope"))
    store_lex "$path", $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_448_1361537952.49511") :anon :lex :outer("cuid_447_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3202
    .param pmc _lex_param_0 
    .lex "$path_temp", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_382 
    .local pmc pkg_lookup_tmp_341 
    .local pmc fb_tmp_383 
    .local pmc pkg_lookup_tmp_342 
    .local pmc fb_tmp_384 
    .local pmc pkg_lookup_tmp_343 
    .local pmc fb_tmp_385 
    .local pmc pkg_lookup_tmp_344 
    .local pmc fb_tmp_386 
    .local pmc pkg_lookup_tmp_345 
    .local pmc fb_tmp_387 
    .local pmc pkg_lookup_tmp_346 
    .local pmc fb_tmp_388 
    .local pmc pkg_lookup_tmp_347 
    .local pmc fb_tmp_389 
    .local pmc pkg_lookup_tmp_348 
    .local pmc fb_tmp_390 
    .local pmc pkg_lookup_tmp_349 
    .local pmc fb_tmp_391 
    .local pmc pkg_lookup_tmp_350 
    .local pmc fb_tmp_392 
    .local pmc pkg_lookup_tmp_351 
    .local pmc fb_tmp_393 
    .local pmc pkg_lookup_tmp_352 
    .local pmc fb_tmp_394 
    .local pmc pkg_lookup_tmp_353 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 3203
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_341, $P5003
    get_who $P5004, pkg_lookup_tmp_341
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2344_else5142 
    get_who $P5006, pkg_lookup_tmp_341
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2344_end5143
  if2344_else5142:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2344_end5143:
    get_who $P5002, $P5008
    set fb_tmp_382, $P5002
    repr_defined $I5001, fb_tmp_382
    unless $I5001 goto if2343_else5140 
    set $P5009, fb_tmp_382["Node"]
    set $P5011, $P5009
    goto if2343_end5141
  if2343_else5140:
    null $P5010
    set $P5011, $P5010
  if2343_end5141:
    unless_null $P5011, vivi_23455144
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_23455144:
    $P5013 = $P5011."unique"("pkg_lookup_tmp")
    set $P101, $P5013
.annotate 'line', 3204
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_342, $P5015
    get_who $P5016, pkg_lookup_tmp_342
    exists $I5004, $P5016["QAST"]
    unless $I5004 goto if2347_else5147 
    get_who $P5018, pkg_lookup_tmp_342
    set $P5017, $P5018["QAST"]
    set $P5020, $P5017
    goto if2347_end5148
  if2347_else5147:
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5019
  if2347_end5148:
    get_who $P5014, $P5020
    set fb_tmp_383, $P5014
    repr_defined $I5003, fb_tmp_383
    unless $I5003 goto if2346_else5145 
    set $P5021, fb_tmp_383["Stmts"]
    set $P5023, $P5021
    goto if2346_end5146
  if2346_else5145:
    null $P5022
    set $P5023, $P5022
  if2346_end5146:
    unless_null $P5023, vivi_23485149
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_23485149:
.annotate 'line', 3205
    nqp_get_sc_object $P5026, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_343, $P5026
    get_who $P5027, pkg_lookup_tmp_343
    exists $I5006, $P5027["QAST"]
    unless $I5006 goto if2350_else5152 
    get_who $P5029, pkg_lookup_tmp_343
    set $P5028, $P5029["QAST"]
    set $P5031, $P5028
    goto if2350_end5153
  if2350_else5152:
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5030
  if2350_end5153:
    get_who $P5025, $P5031
    set fb_tmp_384, $P5025
    repr_defined $I5005, fb_tmp_384
    unless $I5005 goto if2349_else5150 
    set $P5032, fb_tmp_384["Op"]
    set $P5034, $P5032
    goto if2349_end5151
  if2349_else5150:
    null $P5033
    set $P5034, $P5033
  if2349_end5151:
    unless_null $P5034, vivi_23515154
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_23515154:
.annotate 'line', 3207
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_344, $P5037
    get_who $P5038, pkg_lookup_tmp_344
    exists $I5008, $P5038["QAST"]
    unless $I5008 goto if2353_else5157 
    get_who $P5040, pkg_lookup_tmp_344
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if2353_end5158
  if2353_else5157:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if2353_end5158:
    get_who $P5036, $P5042
    set fb_tmp_385, $P5036
    repr_defined $I5007, fb_tmp_385
    unless $I5007 goto if2352_else5155 
    set $P5043, fb_tmp_385["Var"]
    set $P5045, $P5043
    goto if2352_end5156
  if2352_else5155:
    null $P5044
    set $P5045, $P5044
  if2352_end5156:
    unless_null $P5045, vivi_23545159
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_23545159:
    $P5047 = $P5045."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5048, "$path"
    $P5049 = $P5034."new"($P5047, $P5048, "bind" :named("op"))
.annotate 'line', 3210
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_345, $P5051
    get_who $P5052, pkg_lookup_tmp_345
    exists $I5010, $P5052["QAST"]
    unless $I5010 goto if2356_else5162 
    get_who $P5054, pkg_lookup_tmp_345
    set $P5053, $P5054["QAST"]
    set $P5056, $P5053
    goto if2356_end5163
  if2356_else5162:
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5055
  if2356_end5163:
    get_who $P5050, $P5056
    set fb_tmp_386, $P5050
    repr_defined $I5009, fb_tmp_386
    unless $I5009 goto if2355_else5160 
    set $P5057, fb_tmp_386["Op"]
    set $P5059, $P5057
    goto if2355_end5161
  if2355_else5160:
    null $P5058
    set $P5059, $P5058
  if2355_end5161:
    unless_null $P5059, vivi_23575164
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_23575164:
.annotate 'line', 3212
    nqp_get_sc_object $P5062, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_346, $P5062
    get_who $P5063, pkg_lookup_tmp_346
    exists $I5012, $P5063["QAST"]
    unless $I5012 goto if2359_else5167 
    get_who $P5065, pkg_lookup_tmp_346
    set $P5064, $P5065["QAST"]
    set $P5067, $P5064
    goto if2359_end5168
  if2359_else5167:
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5067, $P5066
  if2359_end5168:
    get_who $P5061, $P5067
    set fb_tmp_387, $P5061
    repr_defined $I5011, fb_tmp_387
    unless $I5011 goto if2358_else5165 
    set $P5068, fb_tmp_387["Op"]
    set $P5070, $P5068
    goto if2358_end5166
  if2358_else5165:
    null $P5069
    set $P5070, $P5069
  if2358_end5166:
    unless_null $P5070, vivi_23605169
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_23605169:
.annotate 'line', 3214
    nqp_get_sc_object $P5073, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_347, $P5073
    get_who $P5074, pkg_lookup_tmp_347
    exists $I5014, $P5074["QAST"]
    unless $I5014 goto if2362_else5172 
    get_who $P5076, pkg_lookup_tmp_347
    set $P5075, $P5076["QAST"]
    set $P5078, $P5075
    goto if2362_end5173
  if2362_else5172:
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5077
  if2362_end5173:
    get_who $P5072, $P5078
    set fb_tmp_388, $P5072
    repr_defined $I5013, fb_tmp_388
    unless $I5013 goto if2361_else5170 
    set $P5079, fb_tmp_388["Op"]
    set $P5081, $P5079
    goto if2361_end5171
  if2361_else5170:
    null $P5080
    set $P5081, $P5080
  if2361_end5171:
    unless_null $P5081, vivi_23635174
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5081, $P5082
  vivi_23635174:
    nqp_get_sc_object $P5084, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_348, $P5084
    get_who $P5085, pkg_lookup_tmp_348
    exists $I5016, $P5085["QAST"]
    unless $I5016 goto if2365_else5177 
    get_who $P5087, pkg_lookup_tmp_348
    set $P5086, $P5087["QAST"]
    set $P5089, $P5086
    goto if2365_end5178
  if2365_else5177:
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5089, $P5088
  if2365_end5178:
    get_who $P5083, $P5089
    set fb_tmp_389, $P5083
    repr_defined $I5015, fb_tmp_389
    unless $I5015 goto if2364_else5175 
    set $P5090, fb_tmp_389["Var"]
    set $P5092, $P5090
    goto if2364_end5176
  if2364_else5175:
    null $P5091
    set $P5092, $P5091
  if2364_end5176:
    unless_null $P5092, vivi_23665179
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5092, $P5093
  vivi_23665179:
    $P5094 = $P5092."new"($P101 :named("name"), "local" :named("scope"))
    $P5095 = $P5081."new"($P5094, "who" :named("op"))
.annotate 'line', 3215
    nqp_get_sc_object $P5097, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_349, $P5097
    get_who $P5098, pkg_lookup_tmp_349
    exists $I5018, $P5098["QAST"]
    unless $I5018 goto if2368_else5182 
    get_who $P5100, pkg_lookup_tmp_349
    set $P5099, $P5100["QAST"]
    set $P5102, $P5099
    goto if2368_end5183
  if2368_else5182:
    nqp_get_sc_object $P5101, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5102, $P5101
  if2368_end5183:
    get_who $P5096, $P5102
    set fb_tmp_390, $P5096
    repr_defined $I5017, fb_tmp_390
    unless $I5017 goto if2367_else5180 
    set $P5103, fb_tmp_390["SVal"]
    set $P5105, $P5103
    goto if2367_end5181
  if2367_else5180:
    null $P5104
    set $P5105, $P5104
  if2367_end5181:
    unless_null $P5105, vivi_23695184
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5105, $P5106
  vivi_23695184:
    set $S5001, _lex_param_0
    $P5107 = $P5105."new"($S5001 :named("value"))
    $P5108 = $P5070."new"($P5095, $P5107, "existskey" :named("op"))
.annotate 'line', 3217
    nqp_get_sc_object $P5110, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_350, $P5110
    get_who $P5111, pkg_lookup_tmp_350
    exists $I5020, $P5111["QAST"]
    unless $I5020 goto if2371_else5187 
    get_who $P5113, pkg_lookup_tmp_350
    set $P5112, $P5113["QAST"]
    set $P5115, $P5112
    goto if2371_end5188
  if2371_else5187:
    nqp_get_sc_object $P5114, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5115, $P5114
  if2371_end5188:
    get_who $P5109, $P5115
    set fb_tmp_391, $P5109
    repr_defined $I5019, fb_tmp_391
    unless $I5019 goto if2370_else5185 
    set $P5116, fb_tmp_391["Op"]
    set $P5118, $P5116
    goto if2370_end5186
  if2370_else5185:
    null $P5117
    set $P5118, $P5117
  if2370_end5186:
    unless_null $P5118, vivi_23725189
    nqp_get_sc_object $P5119, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5118, $P5119
  vivi_23725189:
.annotate 'line', 3219
    nqp_get_sc_object $P5121, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_351, $P5121
    get_who $P5122, pkg_lookup_tmp_351
    exists $I5022, $P5122["QAST"]
    unless $I5022 goto if2374_else5192 
    get_who $P5124, pkg_lookup_tmp_351
    set $P5123, $P5124["QAST"]
    set $P5126, $P5123
    goto if2374_end5193
  if2374_else5192:
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5125
  if2374_end5193:
    get_who $P5120, $P5126
    set fb_tmp_392, $P5120
    repr_defined $I5021, fb_tmp_392
    unless $I5021 goto if2373_else5190 
    set $P5127, fb_tmp_392["Op"]
    set $P5129, $P5127
    goto if2373_end5191
  if2373_else5190:
    null $P5128
    set $P5129, $P5128
  if2373_end5191:
    unless_null $P5129, vivi_23755194
    nqp_get_sc_object $P5130, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5129, $P5130
  vivi_23755194:
    nqp_get_sc_object $P5132, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_352, $P5132
    get_who $P5133, pkg_lookup_tmp_352
    exists $I5024, $P5133["QAST"]
    unless $I5024 goto if2377_else5197 
    get_who $P5135, pkg_lookup_tmp_352
    set $P5134, $P5135["QAST"]
    set $P5137, $P5134
    goto if2377_end5198
  if2377_else5197:
    nqp_get_sc_object $P5136, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5137, $P5136
  if2377_end5198:
    get_who $P5131, $P5137
    set fb_tmp_393, $P5131
    repr_defined $I5023, fb_tmp_393
    unless $I5023 goto if2376_else5195 
    set $P5138, fb_tmp_393["Var"]
    set $P5140, $P5138
    goto if2376_end5196
  if2376_else5195:
    null $P5139
    set $P5140, $P5139
  if2376_end5196:
    unless_null $P5140, vivi_23785199
    nqp_get_sc_object $P5141, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5140, $P5141
  vivi_23785199:
    $P5142 = $P5140."new"($P101 :named("name"), "local" :named("scope"))
    $P5143 = $P5129."new"($P5142, "who" :named("op"))
.annotate 'line', 3220
    nqp_get_sc_object $P5145, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_353, $P5145
    get_who $P5146, pkg_lookup_tmp_353
    exists $I5026, $P5146["QAST"]
    unless $I5026 goto if2380_else5202 
    get_who $P5148, pkg_lookup_tmp_353
    set $P5147, $P5148["QAST"]
    set $P5150, $P5147
    goto if2380_end5203
  if2380_else5202:
    nqp_get_sc_object $P5149, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5150, $P5149
  if2380_end5203:
    get_who $P5144, $P5150
    set fb_tmp_394, $P5144
    repr_defined $I5025, fb_tmp_394
    unless $I5025 goto if2379_else5200 
    set $P5151, fb_tmp_394["SVal"]
    set $P5153, $P5151
    goto if2379_end5201
  if2379_else5200:
    null $P5152
    set $P5153, $P5152
  if2379_end5201:
    unless_null $P5153, vivi_23815204
    nqp_get_sc_object $P5154, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5153, $P5154
  vivi_23815204:
    set $S5002, _lex_param_0
    $P5155 = $P5153."new"($S5002 :named("value"))
    $P5156 = $P5118."new"($P5143, $P5155, "atkey" :named("op"))
.annotate 'line', 3222
    $P5157 = "&default_for"("$")
    $P5158 = $P5059."new"($P5108, $P5156, $P5157, "if" :named("op"))
    $P5159 = $P5023."new"($P5049, $P5158)
    store_lex "$path", $P5159
    .return ($P5159) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_449_1361537952.49511") :anon :lex :outer("cuid_447_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3227
    .lex "$viv_temp", $P101 
    .local pmc fb_tmp_396 
    .local pmc pkg_lookup_tmp_355 
    .local pmc fb_tmp_397 
    .local pmc pkg_lookup_tmp_356 
    .local pmc fb_tmp_398 
    .local pmc pkg_lookup_tmp_357 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc pkg_lookup_tmp_358 
    .local pmc fb_tmp_401 
    .local pmc pkg_lookup_tmp_359 
    .local pmc fb_tmp_402 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 3228
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_355, $P5003
    get_who $P5004, pkg_lookup_tmp_355
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2388_else5219 
    get_who $P5006, pkg_lookup_tmp_355
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2388_end5220
  if2388_else5219:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2388_end5220:
    get_who $P5002, $P5008
    set fb_tmp_396, $P5002
    repr_defined $I5001, fb_tmp_396
    unless $I5001 goto if2387_else5217 
    set $P5009, fb_tmp_396["Node"]
    set $P5011, $P5009
    goto if2387_end5218
  if2387_else5217:
    null $P5010
    set $P5011, $P5010
  if2387_end5218:
    unless_null $P5011, vivi_23895221
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_23895221:
    $P5013 = $P5011."unique"("pkg_viv_tmp")
    set $P101, $P5013
    find_lex $P5014, "$lookup"
.annotate 'line', 3229
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_356, $P5016
    get_who $P5017, pkg_lookup_tmp_356
    exists $I5004, $P5017["QAST"]
    unless $I5004 goto if2391_else5224 
    get_who $P5019, pkg_lookup_tmp_356
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if2391_end5225
  if2391_else5224:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if2391_end5225:
    get_who $P5015, $P5021
    set fb_tmp_397, $P5015
    repr_defined $I5003, fb_tmp_397
    unless $I5003 goto if2390_else5222 
    set $P5022, fb_tmp_397["Op"]
    set $P5024, $P5022
    goto if2390_end5223
  if2390_else5222:
    null $P5023
    set $P5024, $P5023
  if2390_end5223:
    unless_null $P5024, vivi_23925226
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_23925226:
.annotate 'line', 3231
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_357, $P5027
    get_who $P5028, pkg_lookup_tmp_357
    exists $I5006, $P5028["QAST"]
    unless $I5006 goto if2394_else5229 
    get_who $P5030, pkg_lookup_tmp_357
    set $P5029, $P5030["QAST"]
    set $P5032, $P5029
    goto if2394_end5230
  if2394_else5229:
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5031
  if2394_end5230:
    get_who $P5026, $P5032
    set fb_tmp_398, $P5026
    repr_defined $I5005, fb_tmp_398
    unless $I5005 goto if2393_else5227 
    set $P5033, fb_tmp_398["Var"]
    set $P5035, $P5033
    goto if2393_end5228
  if2393_else5227:
    null $P5034
    set $P5035, $P5034
  if2393_end5228:
    unless_null $P5035, vivi_23955231
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_23955231:
    $P5037 = $P5035."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5038, "$lookup"
    set fb_tmp_399, $P5038
    repr_defined $I5007, fb_tmp_399
    unless $I5007 goto if2396_else5232 
    set $P5039, fb_tmp_399[0]
    set $P5041, $P5039
    goto if2396_end5233
  if2396_else5232:
    null $P5040
    set $P5041, $P5040
  if2396_end5233:
    unless_null $P5041, vivi_23975234
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5041, $P5042
  vivi_23975234:
    $P5043 = $P5024."new"($P5037, $P5041, "bind" :named("op"))
    set $P5014[0], $P5043
.annotate 'line', 3233
    find_lex $P5044, "$lookup"
    nqp_get_sc_object $P5046, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_358, $P5046
    get_who $P5047, pkg_lookup_tmp_358
    exists $I5009, $P5047["QAST"]
    unless $I5009 goto if2399_else5237 
    get_who $P5049, pkg_lookup_tmp_358
    set $P5048, $P5049["QAST"]
    set $P5051, $P5048
    goto if2399_end5238
  if2399_else5237:
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5050
  if2399_end5238:
    get_who $P5045, $P5051
    set fb_tmp_400, $P5045
    repr_defined $I5008, fb_tmp_400
    unless $I5008 goto if2398_else5235 
    set $P5052, fb_tmp_400["Op"]
    set $P5054, $P5052
    goto if2398_end5236
  if2398_else5235:
    null $P5053
    set $P5054, $P5053
  if2398_end5236:
    unless_null $P5054, vivi_24005239
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_24005239:
.annotate 'line', 3235
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_359, $P5057
    get_who $P5058, pkg_lookup_tmp_359
    exists $I5011, $P5058["QAST"]
    unless $I5011 goto if2402_else5242 
    get_who $P5060, pkg_lookup_tmp_359
    set $P5059, $P5060["QAST"]
    set $P5062, $P5059
    goto if2402_end5243
  if2402_else5242:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if2402_end5243:
    get_who $P5056, $P5062
    set fb_tmp_401, $P5056
    repr_defined $I5010, fb_tmp_401
    unless $I5010 goto if2401_else5240 
    set $P5063, fb_tmp_401["Var"]
    set $P5065, $P5063
    goto if2401_end5241
  if2401_else5240:
    null $P5064
    set $P5065, $P5064
  if2401_end5241:
    unless_null $P5065, vivi_24035244
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_24035244:
    $P5067 = $P5065."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5068, "$lookup"
    set fb_tmp_402, $P5068
    repr_defined $I5012, fb_tmp_402
    unless $I5012 goto if2404_else5245 
    set $P5069, fb_tmp_402[1]
    set $P5071, $P5069
    goto if2404_end5246
  if2404_else5245:
    null $P5070
    set $P5071, $P5070
  if2404_end5246:
    unless_null $P5071, vivi_24055247
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_24055247:
.annotate 'line', 3237
    find_lex $P5073, "$sigil"
    $P5074 = "&default_for"($P5073)
    $P5075 = $P5054."new"($P5067, $P5071, $P5074, "bindkey" :named("op"))
    $P5076 = $P5044."fallback"($P5075)
    .return ($P5076) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_248_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1638
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_403 
    unless_null _lex_param_1, fallback5250
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5250:
    set fb_tmp_403, _lex_param_1
    repr_defined $I5001, fb_tmp_403
    unless $I5001 goto if2406_else5248 
    set $P5002, fb_tmp_403["comp_unit"]
    set $P5004, $P5002
    goto if2406_end5249
  if2406_else5248:
    null $P5003
    set $P5004, $P5003
  if2406_end5249:
    unless_null $P5004, vivi_24075251
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_24075251:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "deflongname" :subid("cuid_249_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1640
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_404 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc fb_tmp_409 
.annotate 'line', 1641
    unless_null _lex_param_1, fallback5256
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5256:
    set fb_tmp_404, _lex_param_1
    repr_defined $I5001, fb_tmp_404
    unless $I5001 goto if2409_else5254 
    set $P5002, fb_tmp_404["colonpair"]
    set $P5004, $P5002
    goto if2409_end5255
  if2409_else5254:
    null $P5003
    set $P5004, $P5003
  if2409_end5255:
    unless_null $P5004, vivi_24105257
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_24105257:
    unless $P5004 goto if2408_else5252 
    unless_null _lex_param_1, fallback5260
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback5260:
    set fb_tmp_405, _lex_param_1
    repr_defined $I5002, fb_tmp_405
    unless $I5002 goto if2411_else5258 
    set $P5007, fb_tmp_405["identifier"]
    set $P5009, $P5007
    goto if2411_end5259
  if2411_else5258:
    null $P5008
    set $P5009, $P5008
  if2411_end5259:
    unless_null $P5009, vivi_24125261
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_24125261:
    set $S5006, $P5009
    concat $S5005, $S5006, ":"
.annotate 'line', 1642
    unless_null _lex_param_1, fallback5266
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5011
  fallback5266:
    set fb_tmp_407, _lex_param_1
    repr_defined $I5004, fb_tmp_407
    unless $I5004 goto if2414_else5264 
    set $P5012, fb_tmp_407["colonpair"]
    set $P5014, $P5012
    goto if2414_end5265
  if2414_else5264:
    null $P5013
    set $P5014, $P5013
  if2414_end5265:
    unless_null $P5014, vivi_24155267
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_24155267:
    set fb_tmp_406, $P5014
    repr_defined $I5003, fb_tmp_406
    unless $I5003 goto if2413_else5262 
    set $P5016, fb_tmp_406[0]
    set $P5018, $P5016
    goto if2413_end5263
  if2413_else5262:
    null $P5017
    set $P5018, $P5017
  if2413_end5263:
    unless_null $P5018, vivi_24165268
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_24165268:
    $P5020 = $P5018."ast"()
    $P5021 = $P5020."named"()
    set $S5007, $P5021
    concat $S5004, $S5005, $S5007
    concat $S5003, $S5004, "<"
.annotate 'line', 1643
    unless_null _lex_param_1, fallback5273
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5022
  fallback5273:
    set fb_tmp_409, _lex_param_1
    repr_defined $I5006, fb_tmp_409
    unless $I5006 goto if2418_else5271 
    set $P5023, fb_tmp_409["colonpair"]
    set $P5025, $P5023
    goto if2418_end5272
  if2418_else5271:
    null $P5024
    set $P5025, $P5024
  if2418_end5272:
    unless_null $P5025, vivi_24195274
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_24195274:
    set fb_tmp_408, $P5025
    repr_defined $I5005, fb_tmp_408
    unless $I5005 goto if2417_else5269 
    set $P5027, fb_tmp_408[0]
    set $P5029, $P5027
    goto if2417_end5270
  if2417_else5269:
    null $P5028
    set $P5029, $P5028
  if2417_end5270:
    unless_null $P5029, vivi_24205275
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_24205275:
    $P5031 = $P5029."ast"()
    $P5032 = "&colonpair_str"($P5031)
    set $S5008, $P5032
    concat $S5002, $S5003, $S5008
    concat $S5001, $S5002, ">"
    set $S5010, $S5001
    goto if2408_end5253
  if2408_else5252:
    set $S5009, _lex_param_1
    set $S5010, $S5009
  if2408_end5253:
    $P5033 = _lex_param_1."!make"($S5010)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "comp_unit" :subid("cuid_250_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1657
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$mainline", $P101 
    .lex "$unit", $P102 
    .lex "$compunit", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_410 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc fb_tmp_413 
    .local pmc pkg_lookup_tmp_144 
    .local pmc fb_tmp_414 
    .local pmc fb_tmp_415 
    .local pmc pkg_lookup_tmp_145 
    .local pmc fb_tmp_416 
    .local pmc pkg_lookup_tmp_146 
    .local pmc fb_tmp_417 
    .local pmc pkg_lookup_tmp_147 
    .local pmc fb_tmp_418 
    .local pmc pkg_lookup_tmp_148 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc pkg_lookup_tmp_149 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc pkg_lookup_tmp_150 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc pkg_lookup_tmp_151 
    .local pmc fb_tmp_429 
    .local pmc pkg_lookup_tmp_152 
    .local pmc fb_tmp_430 
    .local pmc pkg_lookup_tmp_153 
    .local pmc fb_tmp_431 
    .local pmc pkg_lookup_tmp_154 
    .local pmc fb_tmp_432 
    .local pmc pkg_lookup_tmp_155 
    .local pmc fb_tmp_433 
    .local pmc pkg_lookup_tmp_156 
    .local pmc fb_tmp_434 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 1658
    unless_null _lex_param_1, fallback5278
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5004
  fallback5278:
    set fb_tmp_410, _lex_param_1
    repr_defined $I5001, fb_tmp_410
    unless $I5001 goto if2421_else5276 
    set $P5005, fb_tmp_410["statementlist"]
    set $P5007, $P5005
    goto if2421_end5277
  if2421_else5276:
    null $P5006
    set $P5007, $P5006
  if2421_end5277:
    unless_null $P5007, vivi_24225279
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_24225279:
    $P5009 = $P5007."ast"()
    set $P101, $P5009
.annotate 'line', 1659
    find_dynamic_lex $P5010, "$*W"
    unless_null $P5010, fallback5280
    nqp_get_sc_object $P5012, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5011, $P5012
    set fb_tmp_411, $P5011
    repr_defined $I5002, fb_tmp_411
    unless $I5002 goto if2423_else5281 
    set $P5013, fb_tmp_411["$W"]
    set $P5015, $P5013
    goto if2423_end5282
  if2423_else5281:
    null $P5014
    set $P5015, $P5014
  if2423_end5282:
    unless_null $P5015, vivi_24245283
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_24245283:
    unless_null $P5015, vivi_24255284
    die "Contextual $*W not found"
    box $P5017, "Contextual $*W not found"
    set $P5015, $P5017
  vivi_24255284:
    set $P5010, $P5015
  fallback5280:
    $P5018 = $P5010."pop_lexpad"()
    set $P102, $P5018
    find_dynamic_lex $P5019, "$*HAS_YOU_ARE_HERE"
    unless_null $P5019, fallback5287
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5020, $P5021
    set fb_tmp_412, $P5020
    repr_defined $I5003, fb_tmp_412
    unless $I5003 goto if2427_else5288 
    set $P5022, fb_tmp_412["$HAS_YOU_ARE_HERE"]
    set $P5024, $P5022
    goto if2427_end5289
  if2427_else5288:
    null $P5023
    set $P5024, $P5023
  if2427_end5289:
    unless_null $P5024, vivi_24285290
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_24285290:
    unless_null $P5024, vivi_24295291
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5026, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5024, $P5026
  vivi_24295291:
    set $P5019, $P5024
  fallback5287:
    if $P5019 goto unless2426_end5286 
.annotate 'line', 1664
.annotate 'line', 1665
    nqp_decontainerize $P5027, _lex_param_0
    $P5028 = $P5027."CTXSAVE"()
    $P5029 = $P102."push"($P5028)
  unless2426_end5286:
.annotate 'line', 1672
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_144, $P5031
    get_who $P5032, pkg_lookup_tmp_144
    exists $I5005, $P5032["QAST"]
    unless $I5005 goto if2431_else5294 
    get_who $P5034, pkg_lookup_tmp_144
    set $P5033, $P5034["QAST"]
    set $P5036, $P5033
    goto if2431_end5295
  if2431_else5294:
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5035
  if2431_end5295:
    get_who $P5030, $P5036
    set fb_tmp_413, $P5030
    repr_defined $I5004, fb_tmp_413
    unless $I5004 goto if2430_else5292 
    set $P5037, fb_tmp_413["Var"]
    set $P5039, $P5037
    goto if2430_end5293
  if2430_else5292:
    null $P5038
    set $P5039, $P5038
  if2430_end5293:
    unless_null $P5039, vivi_24325296
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_24325296:
    $P5041 = $P5039."new"("lexical" :named("scope"), "@ARGS" :named("name"), "param" :named("decl"), 1 :named("slurpy"))
    $P102."unshift"($P5041)
    find_dynamic_lex $P5042, "$*MAIN_SUB"
    unless_null $P5042, fallback5299
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5043, $P5044
    set fb_tmp_414, $P5043
    repr_defined $I5006, fb_tmp_414
    unless $I5006 goto if2434_else5300 
    set $P5045, fb_tmp_414["$MAIN_SUB"]
    set $P5047, $P5045
    goto if2434_end5301
  if2434_else5300:
    null $P5046
    set $P5047, $P5046
  if2434_end5301:
    unless_null $P5047, vivi_24355302
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_24355302:
    unless_null $P5047, vivi_24365303
    die "Contextual $*MAIN_SUB not found"
    box $P5049, "Contextual $*MAIN_SUB not found"
    set $P5047, $P5049
  vivi_24365303:
    set $P5042, $P5047
  fallback5299:
    unless $P5042 goto if2433_end5298 
.annotate 'line', 1673
.annotate 'line', 1674
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_145, $P5051
    get_who $P5052, pkg_lookup_tmp_145
    exists $I5008, $P5052["QAST"]
    unless $I5008 goto if2438_else5306 
    get_who $P5054, pkg_lookup_tmp_145
    set $P5053, $P5054["QAST"]
    set $P5056, $P5053
    goto if2438_end5307
  if2438_else5306:
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5055
  if2438_end5307:
    get_who $P5050, $P5056
    set fb_tmp_415, $P5050
    repr_defined $I5007, fb_tmp_415
    unless $I5007 goto if2437_else5304 
    set $P5057, fb_tmp_415["Op"]
    set $P5059, $P5057
    goto if2437_end5305
  if2437_else5304:
    null $P5058
    set $P5059, $P5058
  if2437_end5305:
    unless_null $P5059, vivi_24395308
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_24395308:
.annotate 'line', 1676
    nqp_get_sc_object $P5062, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_146, $P5062
    get_who $P5063, pkg_lookup_tmp_146
    exists $I5010, $P5063["QAST"]
    unless $I5010 goto if2441_else5311 
    get_who $P5065, pkg_lookup_tmp_146
    set $P5064, $P5065["QAST"]
    set $P5067, $P5064
    goto if2441_end5312
  if2441_else5311:
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5067, $P5066
  if2441_end5312:
    get_who $P5061, $P5067
    set fb_tmp_416, $P5061
    repr_defined $I5009, fb_tmp_416
    unless $I5009 goto if2440_else5309 
    set $P5068, fb_tmp_416["Var"]
    set $P5070, $P5068
    goto if2440_end5310
  if2440_else5309:
    null $P5069
    set $P5070, $P5069
  if2440_end5310:
    unless_null $P5070, vivi_24425313
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_24425313:
    $P5072 = $P5070."new"("lexical" :named("scope"), "@ARGS" :named("name"))
.annotate 'line', 1677
    nqp_get_sc_object $P5074, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_147, $P5074
    get_who $P5075, pkg_lookup_tmp_147
    exists $I5012, $P5075["QAST"]
    unless $I5012 goto if2444_else5316 
    get_who $P5077, pkg_lookup_tmp_147
    set $P5076, $P5077["QAST"]
    set $P5079, $P5076
    goto if2444_end5317
  if2444_else5316:
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5078
  if2444_end5317:
    get_who $P5073, $P5079
    set fb_tmp_417, $P5073
    repr_defined $I5011, fb_tmp_417
    unless $I5011 goto if2443_else5314 
    set $P5080, fb_tmp_417["Op"]
    set $P5082, $P5080
    goto if2443_end5315
  if2443_else5314:
    null $P5081
    set $P5082, $P5081
  if2443_end5315:
    unless_null $P5082, vivi_24455318
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_24455318:
.annotate 'line', 1678
    nqp_get_sc_object $P5085, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_148, $P5085
    get_who $P5086, pkg_lookup_tmp_148
    exists $I5014, $P5086["QAST"]
    unless $I5014 goto if2447_else5321 
    get_who $P5088, pkg_lookup_tmp_148
    set $P5087, $P5088["QAST"]
    set $P5090, $P5087
    goto if2447_end5322
  if2447_else5321:
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5089
  if2447_end5322:
    get_who $P5084, $P5090
    set fb_tmp_418, $P5084
    repr_defined $I5013, fb_tmp_418
    unless $I5013 goto if2446_else5319 
    set $P5091, fb_tmp_418["BVal"]
    set $P5093, $P5091
    goto if2446_end5320
  if2446_else5319:
    null $P5092
    set $P5093, $P5092
  if2446_end5320:
    unless_null $P5093, vivi_24485323
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5093, $P5094
  vivi_24485323:
    find_dynamic_lex $P5095, "$*MAIN_SUB"
    unless_null $P5095, fallback5324
    nqp_get_sc_object $P5097, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5096, $P5097
    set fb_tmp_419, $P5096
    repr_defined $I5015, fb_tmp_419
    unless $I5015 goto if2449_else5325 
    set $P5098, fb_tmp_419["$MAIN_SUB"]
    set $P5100, $P5098
    goto if2449_end5326
  if2449_else5325:
    null $P5099
    set $P5100, $P5099
  if2449_end5326:
    unless_null $P5100, vivi_24505327
    nqp_get_sc_object $P5101, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5100, $P5101
  vivi_24505327:
    unless_null $P5100, vivi_24515328
    die "Contextual $*MAIN_SUB not found"
    box $P5102, "Contextual $*MAIN_SUB not found"
    set $P5100, $P5102
  vivi_24515328:
    set $P5095, $P5100
  fallback5324:
    $P5103 = $P5093."new"($P5095 :named("value"))
.annotate 'line', 1679
    nqp_get_sc_object $P5105, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_149, $P5105
    get_who $P5106, pkg_lookup_tmp_149
    exists $I5017, $P5106["QAST"]
    unless $I5017 goto if2453_else5331 
    get_who $P5108, pkg_lookup_tmp_149
    set $P5107, $P5108["QAST"]
    set $P5110, $P5107
    goto if2453_end5332
  if2453_else5331:
    nqp_get_sc_object $P5109, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5110, $P5109
  if2453_end5332:
    get_who $P5104, $P5110
    set fb_tmp_420, $P5104
    repr_defined $I5016, fb_tmp_420
    unless $I5016 goto if2452_else5329 
    set $P5111, fb_tmp_420["Var"]
    set $P5113, $P5111
    goto if2452_end5330
  if2452_else5329:
    null $P5112
    set $P5113, $P5112
  if2452_end5330:
    unless_null $P5113, vivi_24545333
    nqp_get_sc_object $P5114, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5113, $P5114
  vivi_24545333:
    $P5115 = $P5113."new"("lexical" :named("scope"), "@ARGS" :named("name"), 1 :named("flat"))
    $P5116 = $P5082."new"($P5103, $P5115, "call" :named("op"))
    $P5117 = $P5059."new"($P5072, $P5116, "if" :named("op"))
    $P5118 = $P101."push"($P5117)
  if2433_end5298:
.annotate 'line', 1685
    $P102."push"($P101)
.annotate 'line', 1688
    find_dynamic_lex $P5119, "$*W"
    unless_null $P5119, fallback5334
    nqp_get_sc_object $P5121, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5120, $P5121
    set fb_tmp_421, $P5120
    repr_defined $I5018, fb_tmp_421
    unless $I5018 goto if2455_else5335 
    set $P5122, fb_tmp_421["$W"]
    set $P5124, $P5122
    goto if2455_end5336
  if2455_else5335:
    null $P5123
    set $P5124, $P5123
  if2455_end5336:
    unless_null $P5124, vivi_24565337
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5124, $P5125
  vivi_24565337:
    unless_null $P5124, vivi_24575338
    die "Contextual $*W not found"
    box $P5126, "Contextual $*W not found"
    set $P5124, $P5126
  vivi_24575338:
    set $P5119, $P5124
  fallback5334:
    $P5127 = $P5119."libs"()
    $P102."push"($P5127)
.annotate 'line', 1691
    nqp_get_sc_object $P5129, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_150, $P5129
    get_who $P5130, pkg_lookup_tmp_150
    exists $I5020, $P5130["QAST"]
    unless $I5020 goto if2459_else5341 
    get_who $P5132, pkg_lookup_tmp_150
    set $P5131, $P5132["QAST"]
    set $P5134, $P5131
    goto if2459_end5342
  if2459_else5341:
    nqp_get_sc_object $P5133, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5134, $P5133
  if2459_end5342:
    get_who $P5128, $P5134
    set fb_tmp_422, $P5128
    repr_defined $I5019, fb_tmp_422
    unless $I5019 goto if2458_else5339 
    set $P5135, fb_tmp_422["CompUnit"]
    set $P5137, $P5135
    goto if2458_end5340
  if2458_else5339:
    null $P5136
    set $P5137, $P5136
  if2458_end5340:
    unless_null $P5137, vivi_24605343
    nqp_get_sc_object $P5138, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5137, $P5138
  vivi_24605343:
.annotate 'line', 1695
    find_dynamic_lex $P5139, "$*W"
    unless_null $P5139, fallback5344
    nqp_get_sc_object $P5141, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5140, $P5141
    set fb_tmp_423, $P5140
    repr_defined $I5021, fb_tmp_423
    unless $I5021 goto if2461_else5345 
    set $P5142, fb_tmp_423["$W"]
    set $P5144, $P5142
    goto if2461_end5346
  if2461_else5345:
    null $P5143
    set $P5144, $P5143
  if2461_end5346:
    unless_null $P5144, vivi_24625347
    nqp_get_sc_object $P5145, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5144, $P5145
  vivi_24625347:
    unless_null $P5144, vivi_24635348
    die "Contextual $*W not found"
    box $P5146, "Contextual $*W not found"
    set $P5144, $P5146
  vivi_24635348:
    set $P5139, $P5144
  fallback5344:
    $P5147 = $P5139."sc"()
.annotate 'line', 1696
    find_dynamic_lex $P5148, "$*W"
    unless_null $P5148, fallback5349
    nqp_get_sc_object $P5150, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5149, $P5150
    set fb_tmp_424, $P5149
    repr_defined $I5022, fb_tmp_424
    unless $I5022 goto if2464_else5350 
    set $P5151, fb_tmp_424["$W"]
    set $P5153, $P5151
    goto if2464_end5351
  if2464_else5350:
    null $P5152
    set $P5153, $P5152
  if2464_end5351:
    unless_null $P5153, vivi_24655352
    nqp_get_sc_object $P5154, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5153, $P5154
  vivi_24655352:
    unless_null $P5153, vivi_24665353
    die "Contextual $*W not found"
    box $P5155, "Contextual $*W not found"
    set $P5153, $P5155
  vivi_24665353:
    set $P5148, $P5153
  fallback5349:
    $P5156 = $P5148."code_ref_blocks"()
.annotate 'line', 1697
    find_dynamic_lex $P5157, "$*W"
    unless_null $P5157, fallback5354
    nqp_get_sc_object $P5159, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5158, $P5159
    set fb_tmp_425, $P5158
    repr_defined $I5023, fb_tmp_425
    unless $I5023 goto if2467_else5355 
    set $P5160, fb_tmp_425["$W"]
    set $P5162, $P5160
    goto if2467_end5356
  if2467_else5355:
    null $P5161
    set $P5162, $P5161
  if2467_end5356:
    unless_null $P5162, vivi_24685357
    nqp_get_sc_object $P5163, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5162, $P5163
  vivi_24685357:
    unless_null $P5162, vivi_24695358
    die "Contextual $*W not found"
    box $P5164, "Contextual $*W not found"
    set $P5162, $P5164
  vivi_24695358:
    set $P5157, $P5162
  fallback5354:
    $P5165 = $P5157."is_precompilation_mode"()
.annotate 'line', 1698
    find_dynamic_lex $P5166, "$*W"
    unless_null $P5166, fallback5359
    nqp_get_sc_object $P5168, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5167, $P5168
    set fb_tmp_426, $P5167
    repr_defined $I5024, fb_tmp_426
    unless $I5024 goto if2470_else5360 
    set $P5169, fb_tmp_426["$W"]
    set $P5171, $P5169
    goto if2470_end5361
  if2470_else5360:
    null $P5170
    set $P5171, $P5170
  if2470_end5361:
    unless_null $P5171, vivi_24715362
    nqp_get_sc_object $P5172, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5171, $P5172
  vivi_24715362:
    unless_null $P5171, vivi_24725363
    die "Contextual $*W not found"
    box $P5173, "Contextual $*W not found"
    set $P5171, $P5173
  vivi_24725363:
    set $P5166, $P5171
  fallback5359:
    $P5174 = $P5166."load_dependency_tasks"()
.annotate 'line', 1699
    find_dynamic_lex $P5175, "$*W"
    unless_null $P5175, fallback5364
    nqp_get_sc_object $P5177, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5176, $P5177
    set fb_tmp_427, $P5176
    repr_defined $I5025, fb_tmp_427
    unless $I5025 goto if2473_else5365 
    set $P5178, fb_tmp_427["$W"]
    set $P5180, $P5178
    goto if2473_end5366
  if2473_else5365:
    null $P5179
    set $P5180, $P5179
  if2473_end5366:
    unless_null $P5180, vivi_24745367
    nqp_get_sc_object $P5181, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5180, $P5181
  vivi_24745367:
    unless_null $P5180, vivi_24755368
    die "Contextual $*W not found"
    box $P5182, "Contextual $*W not found"
    set $P5180, $P5182
  vivi_24755368:
    set $P5175, $P5180
  fallback5364:
    $P5183 = $P5175."fixup_tasks"()
.annotate 'line', 1704
    nqp_get_sc_object $P5185, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_151, $P5185
    get_who $P5186, pkg_lookup_tmp_151
    exists $I5027, $P5186["QAST"]
    unless $I5027 goto if2477_else5371 
    get_who $P5188, pkg_lookup_tmp_151
    set $P5187, $P5188["QAST"]
    set $P5190, $P5187
    goto if2477_end5372
  if2477_else5371:
    nqp_get_sc_object $P5189, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5190, $P5189
  if2477_end5372:
    get_who $P5184, $P5190
    set fb_tmp_428, $P5184
    repr_defined $I5026, fb_tmp_428
    unless $I5026 goto if2476_else5369 
    set $P5191, fb_tmp_428["Op"]
    set $P5193, $P5191
    goto if2476_end5370
  if2476_else5369:
    null $P5192
    set $P5193, $P5192
  if2476_end5370:
    unless_null $P5193, vivi_24785373
    nqp_get_sc_object $P5194, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5193, $P5194
  vivi_24785373:
.annotate 'line', 1706
    nqp_get_sc_object $P5196, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_152, $P5196
    get_who $P5197, pkg_lookup_tmp_152
    exists $I5029, $P5197["QAST"]
    unless $I5029 goto if2480_else5376 
    get_who $P5199, pkg_lookup_tmp_152
    set $P5198, $P5199["QAST"]
    set $P5201, $P5198
    goto if2480_end5377
  if2480_else5376:
    nqp_get_sc_object $P5200, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5201, $P5200
  if2480_end5377:
    get_who $P5195, $P5201
    set fb_tmp_429, $P5195
    repr_defined $I5028, fb_tmp_429
    unless $I5028 goto if2479_else5374 
    set $P5202, fb_tmp_429["BVal"]
    set $P5204, $P5202
    goto if2479_end5375
  if2479_else5374:
    null $P5203
    set $P5204, $P5203
  if2479_end5375:
    unless_null $P5204, vivi_24815378
    nqp_get_sc_object $P5205, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5204, $P5205
  vivi_24815378:
    $P5206 = $P5204."new"($P102 :named("value"))
    $P5207 = $P5193."new"($P5206, "call" :named("op"))
.annotate 'line', 1711
    nqp_get_sc_object $P5209, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_153, $P5209
    get_who $P5210, pkg_lookup_tmp_153
    exists $I5031, $P5210["QAST"]
    unless $I5031 goto if2483_else5381 
    get_who $P5212, pkg_lookup_tmp_153
    set $P5211, $P5212["QAST"]
    set $P5214, $P5211
    goto if2483_end5382
  if2483_else5381:
    nqp_get_sc_object $P5213, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5214, $P5213
  if2483_end5382:
    get_who $P5208, $P5214
    set fb_tmp_430, $P5208
    repr_defined $I5030, fb_tmp_430
    unless $I5030 goto if2482_else5379 
    set $P5215, fb_tmp_430["Stmts"]
    set $P5217, $P5215
    goto if2482_end5380
  if2482_else5379:
    null $P5216
    set $P5217, $P5216
  if2482_end5380:
    unless_null $P5217, vivi_24845383
    nqp_get_sc_object $P5218, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5217, $P5218
  vivi_24845383:
.annotate 'line', 1712
    nqp_get_sc_object $P5220, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_154, $P5220
    get_who $P5221, pkg_lookup_tmp_154
    exists $I5033, $P5221["QAST"]
    unless $I5033 goto if2486_else5386 
    get_who $P5223, pkg_lookup_tmp_154
    set $P5222, $P5223["QAST"]
    set $P5225, $P5222
    goto if2486_end5387
  if2486_else5386:
    nqp_get_sc_object $P5224, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5225, $P5224
  if2486_end5387:
    get_who $P5219, $P5225
    set fb_tmp_431, $P5219
    repr_defined $I5032, fb_tmp_431
    unless $I5032 goto if2485_else5384 
    set $P5226, fb_tmp_431["Op"]
    set $P5228, $P5226
    goto if2485_end5385
  if2485_else5384:
    null $P5227
    set $P5228, $P5227
  if2485_end5385:
    unless_null $P5228, vivi_24875388
    nqp_get_sc_object $P5229, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5228, $P5229
  vivi_24875388:
.annotate 'line', 1714
    nqp_get_sc_object $P5231, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_155, $P5231
    get_who $P5232, pkg_lookup_tmp_155
    exists $I5035, $P5232["QAST"]
    unless $I5035 goto if2489_else5391 
    get_who $P5234, pkg_lookup_tmp_155
    set $P5233, $P5234["QAST"]
    set $P5236, $P5233
    goto if2489_end5392
  if2489_else5391:
    nqp_get_sc_object $P5235, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5236, $P5235
  if2489_end5392:
    get_who $P5230, $P5236
    set fb_tmp_432, $P5230
    repr_defined $I5034, fb_tmp_432
    unless $I5034 goto if2488_else5389 
    set $P5237, fb_tmp_432["BVal"]
    set $P5239, $P5237
    goto if2488_end5390
  if2488_else5389:
    null $P5238
    set $P5239, $P5238
  if2488_end5390:
    unless_null $P5239, vivi_24905393
    nqp_get_sc_object $P5240, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5239, $P5240
  vivi_24905393:
    $P5241 = $P5239."new"($P102 :named("value"))
.annotate 'line', 1715
    nqp_get_sc_object $P5243, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_156, $P5243
    get_who $P5244, pkg_lookup_tmp_156
    exists $I5037, $P5244["QAST"]
    unless $I5037 goto if2492_else5396 
    get_who $P5246, pkg_lookup_tmp_156
    set $P5245, $P5246["QAST"]
    set $P5248, $P5245
    goto if2492_end5397
  if2492_else5396:
    nqp_get_sc_object $P5247, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5248, $P5247
  if2492_end5397:
    get_who $P5242, $P5248
    set fb_tmp_433, $P5242
    repr_defined $I5036, fb_tmp_433
    unless $I5036 goto if2491_else5394 
    set $P5249, fb_tmp_433["Var"]
    set $P5251, $P5249
    goto if2491_end5395
  if2491_else5394:
    null $P5250
    set $P5251, $P5250
  if2491_end5395:
    unless_null $P5251, vivi_24935398
    nqp_get_sc_object $P5252, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5251, $P5252
  vivi_24935398:
    $P5253 = $P5251."new"("ARGS" :named("name"), "local" :named("scope"), "param" :named("decl"), 1 :named("slurpy"), 1 :named("flat"))
    $P5254 = $P5228."new"($P5241, $P5253, "call" :named("op"))
    $P5255 = $P5217."new"($P5254)
    $P5256 = $P5137."new"($P102, "nqp" :named("hll"), $P5147 :named("sc"), $P5156 :named("code_ref_blocks"), $P5165 :named("compilation_mode"), $P5174 :named("pre_deserialize"), $P5183 :named("post_deserialize"), $P5207 :named("load"), $P5255 :named("main"))
    set $P103, $P5256
.annotate 'line', 1724
    find_dynamic_lex $P5257, "$*W"
    unless_null $P5257, fallback5399
    nqp_get_sc_object $P5259, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5258, $P5259
    set fb_tmp_434, $P5258
    repr_defined $I5038, fb_tmp_434
    unless $I5038 goto if2494_else5400 
    set $P5260, fb_tmp_434["$W"]
    set $P5262, $P5260
    goto if2494_end5401
  if2494_else5400:
    null $P5261
    set $P5262, $P5261
  if2494_end5401:
    unless_null $P5262, vivi_24955402
    nqp_get_sc_object $P5263, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5262, $P5263
  vivi_24955402:
    unless_null $P5262, vivi_24965403
    die "Contextual $*W not found"
    box $P5264, "Contextual $*W not found"
    set $P5262, $P5264
  vivi_24965403:
    set $P5257, $P5262
  fallback5399:
    $P5257."cleanup"()
.annotate 'line', 1726
    $P5265 = _lex_param_1."!make"($P103)
    .return ($P5265) 
.end
.HLL "nqp"
.namespace []
.sub "statementlist" :subid("cuid_251_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1729
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5032 = 'cuid_451_1361537952.49511' 
    capture_lex $P5032 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_435 
    .local pmc pkg_lookup_tmp_157 
    .local pmc fb_tmp_436 
    .local pmc fb_tmp_437 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1730
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_157, $P5003
    get_who $P5004, pkg_lookup_tmp_157
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2498_else5406 
    get_who $P5006, pkg_lookup_tmp_157
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2498_end5407
  if2498_else5406:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2498_end5407:
    get_who $P5002, $P5008
    set fb_tmp_435, $P5002
    repr_defined $I5001, fb_tmp_435
    unless $I5001 goto if2497_else5404 
    set $P5009, fb_tmp_435["Stmts"]
    set $P5011, $P5009
    goto if2497_end5405
  if2497_else5404:
    null $P5010
    set $P5011, $P5010
  if2497_end5405:
    unless_null $P5011, vivi_24995408
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_24995408:
    $P5013 = $P5011."new"(_lex_param_1 :named("node"))
    set $P101, $P5013
    unless_null _lex_param_1, fallback5413
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5014
  fallback5413:
    set fb_tmp_436, _lex_param_1
    repr_defined $I5003, fb_tmp_436
    unless $I5003 goto if2501_else5411 
    set $P5015, fb_tmp_436["statement"]
    set $P5017, $P5015
    goto if2501_end5412
  if2501_else5411:
    null $P5016
    set $P5017, $P5016
  if2501_end5412:
    unless_null $P5017, vivi_25025414
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_25025414:
    unless $P5017 goto if2500_else5409 
.annotate 'line', 1731
    unless_null _lex_param_1, fallback5417
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5022
  fallback5417:
    set fb_tmp_437, _lex_param_1
    repr_defined $I5004, fb_tmp_437
    unless $I5004 goto if2503_else5415 
    set $P5023, fb_tmp_437["statement"]
    set $P5025, $P5023
    goto if2503_end5416
  if2503_else5415:
    null $P5024
    set $P5025, $P5024
  if2503_end5416:
    unless_null $P5025, vivi_25045418
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_25045418:
    set $P5019, $P5025
    iter $P5021, $P5025
  for_next5447:
    unless $P5021, for_done5449
    shift $P5028, $P5021
  for_redo5448:
    .const 'Sub' $P5027 = 'cuid_451_1361537952.49511' 
    capture_lex $P5027
    $P5019 = $P5027($P5028)
    goto for_next5447
  for_done5449:
    goto if2500_end5410
  if2500_else5409:
.annotate 'line', 1740
.annotate 'line', 1741
    $P5029 = "&default_for"("$")
    $P5030 = $P101."push"($P5029)
  if2500_end5410:
.annotate 'line', 1743
    $P5031 = _lex_param_1."!make"($P101)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_451_1361537952.49511") :anon :lex :outer("cuid_251_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1732
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_438 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc pkg_lookup_tmp_159 
    .local pmc fb_tmp_443 
    .local pmc pkg_lookup_tmp_158 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1733
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
    set fb_tmp_438, $P101
    repr_defined $I5002, fb_tmp_438
    unless $I5002 goto if2506_else5421 
    set $P5003, fb_tmp_438["sink"]
    set $P5005, $P5003
    goto if2506_end5422
  if2506_else5421:
    null $P5004
    set $P5005, $P5004
  if2506_end5422:
    unless_null $P5005, vivi_25075423
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_25075423:
    defined $I5001, $P5005
    unless $I5001 goto if2505_end5420 
    set fb_tmp_439, $P101
    repr_defined $I5003, fb_tmp_439
    unless $I5003 goto if2508_else5424 
    set $P5007, fb_tmp_439["sink"]
    set $P5009, $P5007
    goto if2508_end5425
  if2508_else5424:
    null $P5008
    set $P5009, $P5008
  if2508_end5425:
    unless_null $P5009, vivi_25095426
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_25095426:
    set $P101, $P5009
  if2505_end5420:
    set fb_tmp_440, $P101
    repr_defined $I5004, fb_tmp_440
    unless $I5004 goto if2511_else5429 
    set $P5011, fb_tmp_440["bareblock"]
    set $P5013, $P5011
    goto if2511_end5430
  if2511_else5429:
    null $P5012
    set $P5013, $P5012
  if2511_end5430:
    unless_null $P5013, vivi_25125431
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_25125431:
    unless $P5013 goto if2510_end5428 
.annotate 'line', 1735
    set fb_tmp_441, $P101
    repr_defined $I5005, fb_tmp_441
    unless $I5005 goto if2513_else5432 
    set $P5015, fb_tmp_441[0]
    set $P5017, $P5015
    goto if2513_end5433
  if2513_else5432:
    null $P5016
    set $P5017, $P5016
  if2513_end5433:
    unless_null $P5017, vivi_25145434
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_25145434:
    $P5019 = "&block_immediate"($P5017)
    set $P101, $P5019
  if2510_end5428:
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_159, $P5021
    get_who $P5022, pkg_lookup_tmp_159
    exists $I5008, $P5022["QAST"]
    unless $I5008 goto if2517_else5439 
    get_who $P5024, pkg_lookup_tmp_159
    set $P5023, $P5024["QAST"]
    set $P5026, $P5023
    goto if2517_end5440
  if2517_else5439:
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5025
  if2517_end5440:
    get_who $P5020, $P5026
    set fb_tmp_442, $P5020
    repr_defined $I5007, fb_tmp_442
    unless $I5007 goto if2516_else5437 
    set $P5027, fb_tmp_442["Node"]
    set $P5029, $P5027
    goto if2516_end5438
  if2516_else5437:
    null $P5028
    set $P5029, $P5028
  if2516_end5438:
    unless_null $P5029, vivi_25185441
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_25185441:
    type_check $I5006, $P101, $P5029
    unless $I5006 goto if2515_end5436 
.annotate 'line', 1736
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_158, $P5032
    get_who $P5033, pkg_lookup_tmp_158
    exists $I5010, $P5033["QAST"]
    unless $I5010 goto if2520_else5444 
    get_who $P5035, pkg_lookup_tmp_158
    set $P5034, $P5035["QAST"]
    set $P5037, $P5034
    goto if2520_end5445
  if2520_else5444:
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5036
  if2520_end5445:
    get_who $P5031, $P5037
    set fb_tmp_443, $P5031
    repr_defined $I5009, fb_tmp_443
    unless $I5009 goto if2519_else5442 
    set $P5038, fb_tmp_443["Stmts"]
    set $P5040, $P5038
    goto if2519_end5443
  if2519_else5442:
    null $P5039
    set $P5040, $P5039
  if2519_end5443:
    unless_null $P5040, vivi_25215446
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_25215446:
    $P5042 = $P5040."new"($P101)
    set $P101, $P5042
  if2515_end5436:
.annotate 'line', 1737
    find_lex $P5043, "$past"
    $P5044 = $P5043."push"($P101)
    .return ($P5044) 
.end
.HLL "nqp"
.namespace []
.sub "statement" :subid("cuid_252_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1746
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_4 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_452_1361537952.49511' 
    capture_lex $P5024 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_444 
    .local pmc fb_tmp_462 
    .local pmc fb_tmp_463 
    if haz_param_4, default5536
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_2, $P5023
  default5536:
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback5454
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5454:
    set fb_tmp_444, _lex_param_1
    repr_defined $I5001, fb_tmp_444
    unless $I5001 goto if2523_else5452 
    set $P5003, fb_tmp_444["EXPR"]
    set $P5005, $P5003
    goto if2523_end5453
  if2523_else5452:
    null $P5004
    set $P5005, $P5004
  if2523_end5453:
    unless_null $P5005, vivi_25245455
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_25245455:
    unless $P5005 goto if2522_else5450 
    .const 'Sub' $P5007 = 'cuid_452_1361537952.49511' 
    capture_lex $P5007
    $P5008 = $P5007()
    goto if2522_end5451
  if2522_else5450:
    unless_null _lex_param_1, fallback5530
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback5530:
    set fb_tmp_462, _lex_param_1
    repr_defined $I5002, fb_tmp_462
    unless $I5002 goto if2568_else5528 
    set $P5010, fb_tmp_462["statement_control"]
    set $P5012, $P5010
    goto if2568_end5529
  if2568_else5528:
    null $P5011
    set $P5012, $P5011
  if2568_end5529:
    unless_null $P5012, vivi_25695531
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_25695531:
    unless $P5012 goto if2567_else5526 
.annotate 'line', 1769
    unless_null _lex_param_1, fallback5534
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5014
  fallback5534:
    set fb_tmp_463, _lex_param_1
    repr_defined $I5003, fb_tmp_463
    unless $I5003 goto if2570_else5532 
    set $P5015, fb_tmp_463["statement_control"]
    set $P5017, $P5015
    goto if2570_end5533
  if2570_else5532:
    null $P5016
    set $P5017, $P5016
  if2570_end5533:
    unless_null $P5017, vivi_25715535
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_25715535:
    $P5019 = $P5017."ast"()
    set $P101, $P5019
    set $P5021, $P101
    goto if2567_end5527
  if2567_else5526:
.annotate 'line', 1770
    box $P5020, 0
    set $P101, $P5020
    set $P5021, $P101
  if2567_end5527:
  if2522_end5451:
.annotate 'line', 1771
    $P5022 = _lex_param_1."!make"($P101)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_452_1361537952.49511") :anon :lex :outer("cuid_252_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1748
    .lex "$mc", $P101 
    .lex "$ml", $P102 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc pkg_lookup_tmp_160 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc pkg_lookup_tmp_161 
    .local pmc fb_tmp_455 
    .local pmc pkg_lookup_tmp_162 
    .local pmc fb_tmp_456 
    .local pmc pkg_lookup_tmp_163 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc fb_tmp_459 
    .local pmc pkg_lookup_tmp_164 
    .local pmc fb_tmp_460 
    .local pmc fb_tmp_461 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5460
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  fallback5460:
    set fb_tmp_446, $P5003
    repr_defined $I5002, fb_tmp_446
    unless $I5002 goto if2526_else5458 
    set $P5005, fb_tmp_446["statement_mod_cond"]
    set $P5007, $P5005
    goto if2526_end5459
  if2526_else5458:
    null $P5006
    set $P5007, $P5006
  if2526_end5459:
    unless_null $P5007, vivi_25275461
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_25275461:
    set fb_tmp_445, $P5007
    repr_defined $I5001, fb_tmp_445
    unless $I5001 goto if2525_else5456 
    set $P5009, fb_tmp_445[0]
    set $P5011, $P5009
    goto if2525_end5457
  if2525_else5456:
    null $P5010
    set $P5011, $P5010
  if2525_end5457:
    unless_null $P5011, vivi_25285462
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_25285462:
    set $P101, $P5011
    find_lex $P5013, "$/"
    unless_null $P5013, fallback5467
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  fallback5467:
    set fb_tmp_448, $P5013
    repr_defined $I5004, fb_tmp_448
    unless $I5004 goto if2530_else5465 
    set $P5015, fb_tmp_448["statement_mod_loop"]
    set $P5017, $P5015
    goto if2530_end5466
  if2530_else5465:
    null $P5016
    set $P5017, $P5016
  if2530_end5466:
    unless_null $P5017, vivi_25315468
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_25315468:
    set fb_tmp_447, $P5017
    repr_defined $I5003, fb_tmp_447
    unless $I5003 goto if2529_else5463 
    set $P5019, fb_tmp_447[0]
    set $P5021, $P5019
    goto if2529_end5464
  if2529_else5463:
    null $P5020
    set $P5021, $P5020
  if2529_end5464:
    unless_null $P5021, vivi_25325469
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_25325469:
    set $P102, $P5021
.annotate 'line', 1751
    find_lex $P5023, "$/"
    unless_null $P5023, fallback5472
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  fallback5472:
    set fb_tmp_449, $P5023
    repr_defined $I5005, fb_tmp_449
    unless $I5005 goto if2533_else5470 
    set $P5025, fb_tmp_449["EXPR"]
    set $P5027, $P5025
    goto if2533_end5471
  if2533_else5470:
    null $P5026
    set $P5027, $P5026
  if2533_end5471:
    unless_null $P5027, vivi_25345473
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_25345473:
    $P5029 = $P5027."ast"()
    store_lex "$past", $P5029
    unless $P101 goto if2535_end5475 
.annotate 'line', 1752
.annotate 'line', 1753
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_160, $P5031
    get_who $P5032, pkg_lookup_tmp_160
    exists $I5007, $P5032["QAST"]
    unless $I5007 goto if2537_else5478 
    get_who $P5034, pkg_lookup_tmp_160
    set $P5033, $P5034["QAST"]
    set $P5036, $P5033
    goto if2537_end5479
  if2537_else5478:
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5035
  if2537_end5479:
    get_who $P5030, $P5036
    set fb_tmp_450, $P5030
    repr_defined $I5006, fb_tmp_450
    unless $I5006 goto if2536_else5476 
    set $P5037, fb_tmp_450["Op"]
    set $P5039, $P5037
    goto if2536_end5477
  if2536_else5476:
    null $P5038
    set $P5039, $P5038
  if2536_end5477:
    unless_null $P5039, vivi_25385480
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_25385480:
    set fb_tmp_451, $P101
    repr_defined $I5008, fb_tmp_451
    unless $I5008 goto if2539_else5481 
    set $P5041, fb_tmp_451["cond"]
    set $P5043, $P5041
    goto if2539_end5482
  if2539_else5481:
    null $P5042
    set $P5043, $P5042
  if2539_end5482:
    unless_null $P5043, vivi_25405483
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_25405483:
    $P5045 = $P5043."ast"()
    find_lex $P5046, "$past"
    set fb_tmp_452, $P101
    repr_defined $I5009, fb_tmp_452
    unless $I5009 goto if2541_else5484 
    set $P5047, fb_tmp_452["sym"]
    set $P5049, $P5047
    goto if2541_end5485
  if2541_else5484:
    null $P5048
    set $P5049, $P5048
  if2541_end5485:
    unless_null $P5049, vivi_25425486
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_25425486:
    set $S5001, $P5049
    find_lex $P5051, "$/"
    $P5052 = $P5039."new"($P5045, $P5046, $S5001 :named("op"), $P5051 :named("node"))
    store_lex "$past", $P5052
  if2535_end5475:
    set $P5131, $P102
    unless $P102 goto if2543_end5488 
.annotate 'line', 1755
    set fb_tmp_453, $P102
    repr_defined $I5011, fb_tmp_453
    unless $I5011 goto if2545_else5491 
    set $P5053, fb_tmp_453["sym"]
    set $P5055, $P5053
    goto if2545_end5492
  if2545_else5491:
    null $P5054
    set $P5055, $P5054
  if2545_end5492:
    unless_null $P5055, vivi_25465493
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_25465493:
    set $S5002, $P5055
    iseq $I5010, $S5002, "for"
    unless $I5010 goto if2544_else5489 
.annotate 'line', 1756
.annotate 'line', 1757
    nqp_get_sc_object $P5058, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_161, $P5058
    get_who $P5059, pkg_lookup_tmp_161
    exists $I5013, $P5059["QAST"]
    unless $I5013 goto if2548_else5496 
    get_who $P5061, pkg_lookup_tmp_161
    set $P5060, $P5061["QAST"]
    set $P5063, $P5060
    goto if2548_end5497
  if2548_else5496:
    nqp_get_sc_object $P5062, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5062
  if2548_end5497:
    get_who $P5057, $P5063
    set fb_tmp_454, $P5057
    repr_defined $I5012, fb_tmp_454
    unless $I5012 goto if2547_else5494 
    set $P5064, fb_tmp_454["Block"]
    set $P5066, $P5064
    goto if2547_end5495
  if2547_else5494:
    null $P5065
    set $P5066, $P5065
  if2547_end5495:
    unless_null $P5066, vivi_25495498
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5066, $P5067
  vivi_25495498:
.annotate 'line', 1758
    nqp_get_sc_object $P5069, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_162, $P5069
    get_who $P5070, pkg_lookup_tmp_162
    exists $I5015, $P5070["QAST"]
    unless $I5015 goto if2551_else5501 
    get_who $P5072, pkg_lookup_tmp_162
    set $P5071, $P5072["QAST"]
    set $P5074, $P5071
    goto if2551_end5502
  if2551_else5501:
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5073
  if2551_end5502:
    get_who $P5068, $P5074
    set fb_tmp_455, $P5068
    repr_defined $I5014, fb_tmp_455
    unless $I5014 goto if2550_else5499 
    set $P5075, fb_tmp_455["Var"]
    set $P5077, $P5075
    goto if2550_end5500
  if2550_else5499:
    null $P5076
    set $P5077, $P5076
  if2550_end5500:
    unless_null $P5077, vivi_25525503
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5078
  vivi_25525503:
    $P5079 = $P5077."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    find_lex $P5080, "$past"
    $P5081 = $P5066."new"($P5079, $P5080, "immediate" :named("blocktype"))
    store_lex "$past", $P5081
.annotate 'line', 1760
    find_lex $P5082, "$past"
    $P5082."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1761
    find_lex $P5083, "$past"
    $P5083."arity"(1)
.annotate 'line', 1762
    nqp_get_sc_object $P5085, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_163, $P5085
    get_who $P5086, pkg_lookup_tmp_163
    exists $I5017, $P5086["QAST"]
    unless $I5017 goto if2554_else5506 
    get_who $P5088, pkg_lookup_tmp_163
    set $P5087, $P5088["QAST"]
    set $P5090, $P5087
    goto if2554_end5507
  if2554_else5506:
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5089
  if2554_end5507:
    get_who $P5084, $P5090
    set fb_tmp_456, $P5084
    repr_defined $I5016, fb_tmp_456
    unless $I5016 goto if2553_else5504 
    set $P5091, fb_tmp_456["Op"]
    set $P5093, $P5091
    goto if2553_end5505
  if2553_else5504:
    null $P5092
    set $P5093, $P5092
  if2553_end5505:
    unless_null $P5093, vivi_25555508
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5093, $P5094
  vivi_25555508:
    set fb_tmp_457, $P102
    repr_defined $I5018, fb_tmp_457
    unless $I5018 goto if2556_else5509 
    set $P5095, fb_tmp_457["cond"]
    set $P5097, $P5095
    goto if2556_end5510
  if2556_else5509:
    null $P5096
    set $P5097, $P5096
  if2556_end5510:
    unless_null $P5097, vivi_25575511
    nqp_get_sc_object $P5098, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5098
  vivi_25575511:
    $P5099 = $P5097."ast"()
    find_lex $P5100, "$past"
    set fb_tmp_458, $P102
    repr_defined $I5019, fb_tmp_458
    unless $I5019 goto if2558_else5512 
    set $P5101, fb_tmp_458["sym"]
    set $P5103, $P5101
    goto if2558_end5513
  if2558_else5512:
    null $P5102
    set $P5103, $P5102
  if2558_end5513:
    unless_null $P5103, vivi_25595514
    nqp_get_sc_object $P5104, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5103, $P5104
  vivi_25595514:
    set $S5003, $P5103
    find_lex $P5105, "$/"
    $P5106 = $P5093."new"($P5099, $P5100, $S5003 :named("op"), $P5105 :named("node"))
    store_lex "$past", $P5106
    set $P5130, $P5106
    goto if2544_end5490
  if2544_else5489:
.annotate 'line', 1764
.annotate 'line', 1765
    nqp_get_sc_object $P5108, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_164, $P5108
    get_who $P5109, pkg_lookup_tmp_164
    exists $I5021, $P5109["QAST"]
    unless $I5021 goto if2561_else5517 
    get_who $P5111, pkg_lookup_tmp_164
    set $P5110, $P5111["QAST"]
    set $P5113, $P5110
    goto if2561_end5518
  if2561_else5517:
    nqp_get_sc_object $P5112, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5113, $P5112
  if2561_end5518:
    get_who $P5107, $P5113
    set fb_tmp_459, $P5107
    repr_defined $I5020, fb_tmp_459
    unless $I5020 goto if2560_else5515 
    set $P5114, fb_tmp_459["Op"]
    set $P5116, $P5114
    goto if2560_end5516
  if2560_else5515:
    null $P5115
    set $P5116, $P5115
  if2560_end5516:
    unless_null $P5116, vivi_25625519
    nqp_get_sc_object $P5117, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5116, $P5117
  vivi_25625519:
    set fb_tmp_460, $P102
    repr_defined $I5022, fb_tmp_460
    unless $I5022 goto if2563_else5520 
    set $P5118, fb_tmp_460["cond"]
    set $P5120, $P5118
    goto if2563_end5521
  if2563_else5520:
    null $P5119
    set $P5120, $P5119
  if2563_end5521:
    unless_null $P5120, vivi_25645522
    nqp_get_sc_object $P5121, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5120, $P5121
  vivi_25645522:
    $P5122 = $P5120."ast"()
    find_lex $P5123, "$past"
    set fb_tmp_461, $P102
    repr_defined $I5023, fb_tmp_461
    unless $I5023 goto if2565_else5523 
    set $P5124, fb_tmp_461["sym"]
    set $P5126, $P5124
    goto if2565_end5524
  if2565_else5523:
    null $P5125
    set $P5126, $P5125
  if2565_end5524:
    unless_null $P5126, vivi_25665525
    nqp_get_sc_object $P5127, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5127
  vivi_25665525:
    set $S5004, $P5126
    find_lex $P5128, "$/"
    $P5129 = $P5116."new"($P5122, $P5123, $S5004 :named("op"), $P5128 :named("node"))
    store_lex "$past", $P5129
    set $P5130, $P5129
  if2544_end5490:
    set $P5131, $P5130
  if2543_end5488:
    .return ($P5131) 
.end
.HLL "nqp"
.namespace []
.sub "xblock" :subid("cuid_253_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_464 
    .local pmc pkg_lookup_tmp_165 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
.annotate 'line', 1775
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_165, $P5002
    get_who $P5003, pkg_lookup_tmp_165
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2573_else5539 
    get_who $P5005, pkg_lookup_tmp_165
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2573_end5540
  if2573_else5539:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2573_end5540:
    get_who $P5001, $P5007
    set fb_tmp_464, $P5001
    repr_defined $I5001, fb_tmp_464
    unless $I5001 goto if2572_else5537 
    set $P5008, fb_tmp_464["Op"]
    set $P5010, $P5008
    goto if2572_end5538
  if2572_else5537:
    null $P5009
    set $P5010, $P5009
  if2572_end5538:
    unless_null $P5010, vivi_25745541
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_25745541:
    unless_null _lex_param_1, fallback5544
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback5544:
    set fb_tmp_465, _lex_param_1
    repr_defined $I5003, fb_tmp_465
    unless $I5003 goto if2575_else5542 
    set $P5013, fb_tmp_465["EXPR"]
    set $P5015, $P5013
    goto if2575_end5543
  if2575_else5542:
    null $P5014
    set $P5015, $P5014
  if2575_end5543:
    unless_null $P5015, vivi_25765545
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_25765545:
    $P5017 = $P5015."ast"()
    unless_null _lex_param_1, fallback5548
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5018
  fallback5548:
    set fb_tmp_466, _lex_param_1
    repr_defined $I5004, fb_tmp_466
    unless $I5004 goto if2577_else5546 
    set $P5019, fb_tmp_466["pblock"]
    set $P5021, $P5019
    goto if2577_end5547
  if2577_else5546:
    null $P5020
    set $P5021, $P5020
  if2577_end5547:
    unless_null $P5021, vivi_25785549
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_25785549:
    $P5023 = $P5021."ast"()
    $P5024 = $P5010."new"($P5017, $P5023, "if" :named("op"), _lex_param_1 :named("node"))
    $P5025 = _lex_param_1."!make"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "pblock" :subid("cuid_254_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1778
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_467 
.annotate 'line', 1779
    unless_null _lex_param_1, fallback5552
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5552:
    set fb_tmp_467, _lex_param_1
    repr_defined $I5001, fb_tmp_467
    unless $I5001 goto if2579_else5550 
    set $P5002, fb_tmp_467["blockoid"]
    set $P5004, $P5002
    goto if2579_end5551
  if2579_else5550:
    null $P5003
    set $P5004, $P5003
  if2579_end5551:
    unless_null $P5004, vivi_25805553
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_25805553:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "block" :subid("cuid_255_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1782
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_468 
.annotate 'line', 1783
    unless_null _lex_param_1, fallback5556
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5556:
    set fb_tmp_468, _lex_param_1
    repr_defined $I5001, fb_tmp_468
    unless $I5001 goto if2581_else5554 
    set $P5002, fb_tmp_468["blockoid"]
    set $P5004, $P5002
    goto if2581_end5555
  if2581_else5554:
    null $P5003
    set $P5004, $P5003
  if2581_end5555:
    unless_null $P5004, vivi_25825557
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_25825557:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "blockoid" :subid("cuid_256_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1786
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5037 = 'cuid_454_1361537952.49511' 
    capture_lex $P5037 
    .lex "$BLOCK", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1787
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5558
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_469, $P5003
    repr_defined $I5001, fb_tmp_469
    unless $I5001 goto if2583_else5559 
    set $P5005, fb_tmp_469["$W"]
    set $P5007, $P5005
    goto if2583_end5560
  if2583_else5559:
    null $P5006
    set $P5007, $P5006
  if2583_end5560:
    unless_null $P5007, vivi_25845561
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_25845561:
    unless_null $P5007, vivi_25855562
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_25855562:
    set $P5002, $P5007
  fallback5558:
    $P5010 = $P5002."pop_lexpad"()
    set $P101, $P5010
    unless_null _lex_param_1, fallback5567
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5011
  fallback5567:
    set fb_tmp_470, _lex_param_1
    repr_defined $I5002, fb_tmp_470
    unless $I5002 goto if2587_else5565 
    set $P5012, fb_tmp_470["statementlist"]
    set $P5014, $P5012
    goto if2587_end5566
  if2587_else5565:
    null $P5013
    set $P5014, $P5013
  if2587_end5566:
    unless_null $P5014, vivi_25885568
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_25885568:
    unless $P5014 goto if2586_else5563 
    .const 'Sub' $P5016 = 'cuid_454_1361537952.49511' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5036, $P5017
    goto if2586_end5564
  if2586_else5563:
.annotate 'line', 1802
    find_dynamic_lex $P5018, "$*HAS_YOU_ARE_HERE"
    unless_null $P5018, fallback5607
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5019, $P5020
    set fb_tmp_477, $P5019
    repr_defined $I5003, fb_tmp_477
    unless $I5003 goto if2609_else5608 
    set $P5021, fb_tmp_477["$HAS_YOU_ARE_HERE"]
    set $P5023, $P5021
    goto if2609_end5609
  if2609_else5608:
    null $P5022
    set $P5023, $P5022
  if2609_end5609:
    unless_null $P5023, vivi_26105610
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_26105610:
    unless_null $P5023, vivi_26115611
    die "Contextual $*HAS_YOU_ARE_HERE not found"
    box $P5025, "Contextual $*HAS_YOU_ARE_HERE not found"
    set $P5023, $P5025
  vivi_26115611:
    set $P5018, $P5023
  fallback5607:
    unless $P5018 goto if2608_end5606 
.annotate 'line', 1803
.annotate 'line', 1804
    $P5026 = _lex_param_1."CURSOR"()
    $P5027 = $P5026."panic"("{YOU_ARE_HERE} may only appear once in a setting")
  if2608_end5606:
    box $P5028, 1
    store_dynamic_lex "$*HAS_YOU_ARE_HERE", $P5028
.annotate 'line', 1807
    unless_null _lex_param_1, fallback5614
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5029
  fallback5614:
    set fb_tmp_478, _lex_param_1
    repr_defined $I5004, fb_tmp_478
    unless $I5004 goto if2612_else5612 
    set $P5030, fb_tmp_478["you_are_here"]
    set $P5032, $P5030
    goto if2612_end5613
  if2612_else5612:
    null $P5031
    set $P5032, $P5031
  if2612_end5613:
    unless_null $P5032, vivi_26135615
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_26135615:
    $P5034 = $P5032."ast"()
    $P5035 = _lex_param_1."!make"($P5034)
    set $P5036, $P5035
  if2586_end5564:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_454_1361537952.49511") :anon :lex :outer("cuid_256_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1788
    .const 'Sub' $P5065 = 'cuid_453_1361537952.49511' 
    capture_lex $P5065 
    .lex "$past", $P101 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_473 
    .local pmc pkg_lookup_tmp_166 
    .local pmc fb_tmp_474 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_475 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_476 
    .local pmc pkg_viv_tmp_34 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1789
    find_lex $P5002, "$/"
    unless_null $P5002, fallback5571
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback5571:
    set fb_tmp_471, $P5002
    repr_defined $I5001, fb_tmp_471
    unless $I5001 goto if2589_else5569 
    set $P5004, fb_tmp_471["statementlist"]
    set $P5006, $P5004
    goto if2589_end5570
  if2589_else5569:
    null $P5005
    set $P5006, $P5005
  if2589_end5570:
    unless_null $P5006, vivi_25905572
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_25905572:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    find_dynamic_lex $P5009, "%*HANDLERS"
    unless_null $P5009, fallback5575
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_32, $P5010
    set fb_tmp_472, pkg_viv_tmp_32
    repr_defined $I5002, fb_tmp_472
    unless $I5002 goto if2592_else5576 
    set $P5012, fb_tmp_472["%HANDLERS"]
    set $P5014, $P5012
    goto if2592_end5577
  if2592_else5576:
    null $P5013
    set $P5014, $P5013
  if2592_end5577:
    unless_null $P5014, vivi_25935578
    new $P5015, 'Hash'
    set pkg_viv_tmp_32["%HANDLERS"], $P5015
    set $P5014, $P5015
  vivi_25935578:
    unless_null $P5014, vivi_25945579
    die "Contextual %*HANDLERS not found"
    box $P5016, "Contextual %*HANDLERS not found"
    set $P5014, $P5016
  vivi_25945579:
    set $P5009, $P5014
  fallback5575:
    unless $P5009 goto if2591_end5574 
.annotate 'line', 1790
.annotate 'line', 1791
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_166, $P5018
    get_who $P5019, pkg_lookup_tmp_166
    exists $I5004, $P5019["QAST"]
    unless $I5004 goto if2596_else5582 
    get_who $P5021, pkg_lookup_tmp_166
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if2596_end5583
  if2596_else5582:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if2596_end5583:
    get_who $P5017, $P5023
    set fb_tmp_473, $P5017
    repr_defined $I5003, fb_tmp_473
    unless $I5003 goto if2595_else5580 
    set $P5024, fb_tmp_473["Op"]
    set $P5026, $P5024
    goto if2595_end5581
  if2595_else5580:
    null $P5025
    set $P5026, $P5025
  if2595_end5581:
    unless_null $P5026, vivi_25975584
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_25975584:
    $P5028 = $P5026."new"($P101, "handle" :named("op"))
    set $P101, $P5028
    find_dynamic_lex $P5032, "%*HANDLERS"
    unless_null $P5032, fallback5585
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5033, $P5034
    set pkg_viv_tmp_33, $P5033
    set fb_tmp_474, pkg_viv_tmp_33
    repr_defined $I5005, fb_tmp_474
    unless $I5005 goto if2598_else5586 
    set $P5035, fb_tmp_474["%HANDLERS"]
    set $P5037, $P5035
    goto if2598_end5587
  if2598_else5586:
    null $P5036
    set $P5037, $P5036
  if2598_end5587:
    unless_null $P5037, vivi_25995588
    new $P5038, 'Hash'
    set pkg_viv_tmp_33["%HANDLERS"], $P5038
    set $P5037, $P5038
  vivi_25995588:
    unless_null $P5037, vivi_26005589
    die "Contextual %*HANDLERS not found"
    box $P5039, "Contextual %*HANDLERS not found"
    set $P5037, $P5039
  vivi_26005589:
    set $P5032, $P5037
  fallback5585:
    set $P5029, $P5032
    iter $P5031, $P5032
  for_next5590:
    unless $P5031, for_done5592
    shift $P5041, $P5031
  for_redo5591:
    .const 'Sub' $P5040 = 'cuid_453_1361537952.49511' 
    capture_lex $P5040
    $P5029 = $P5040($P5041)
    goto for_next5590
  for_done5592:
  if2591_end5574:
.annotate 'line', 1797
    find_lex $P5042, "$BLOCK"
    $P5042."push"($P101)
.annotate 'line', 1798
    find_lex $P5043, "$BLOCK"
    find_lex $P5044, "$/"
    $P5043."node"($P5044)
    find_dynamic_lex $P5045, "%*HANDLERS"
    unless_null $P5045, fallback5595
    nqp_get_sc_object $P5047, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_35, $P5046
    set fb_tmp_475, pkg_viv_tmp_35
    repr_defined $I5006, fb_tmp_475
    unless $I5006 goto if2602_else5596 
    set $P5048, fb_tmp_475["%HANDLERS"]
    set $P5050, $P5048
    goto if2602_end5597
  if2602_else5596:
    null $P5049
    set $P5050, $P5049
  if2602_end5597:
    unless_null $P5050, vivi_26035598
    new $P5051, 'Hash'
    set pkg_viv_tmp_35["%HANDLERS"], $P5051
    set $P5050, $P5051
  vivi_26035598:
    unless_null $P5050, vivi_26045599
    die "Contextual %*HANDLERS not found"
    box $P5052, "Contextual %*HANDLERS not found"
    set $P5050, $P5052
  vivi_26045599:
    set $P5045, $P5050
  fallback5595:
    unless $P5045 goto if2601_end5594 
    find_lex $P5053, "$BLOCK"
    find_dynamic_lex $P5054, "%*HANDLERS"
    unless_null $P5054, fallback5600
    nqp_get_sc_object $P5056, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5055, $P5056
    set pkg_viv_tmp_34, $P5055
    set fb_tmp_476, pkg_viv_tmp_34
    repr_defined $I5007, fb_tmp_476
    unless $I5007 goto if2605_else5601 
    set $P5057, fb_tmp_476["%HANDLERS"]
    set $P5059, $P5057
    goto if2605_end5602
  if2605_else5601:
    null $P5058
    set $P5059, $P5058
  if2605_end5602:
    unless_null $P5059, vivi_26065603
    new $P5060, 'Hash'
    set pkg_viv_tmp_34["%HANDLERS"], $P5060
    set $P5059, $P5060
  vivi_26065603:
    unless_null $P5059, vivi_26075604
    die "Contextual %*HANDLERS not found"
    box $P5061, "Contextual %*HANDLERS not found"
    set $P5059, $P5061
  vivi_26075604:
    set $P5054, $P5059
  fallback5600:
    set $P5053["handlers"], $P5054
  if2601_end5594:
.annotate 'line', 1800
    find_dynamic_lex $P5062, "$/"
    find_lex $P5063, "$BLOCK"
    $P5064 = $P5062."!make"($P5063)
    .return ($P5064) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_453_1361537952.49511") :anon :lex :outer("cuid_454_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1792
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1793
    find_lex $P5001, "$past"
    $P5002 = _lex_param_0."key"()
    $P5001."push"($P5002)
.annotate 'line', 1794
    find_lex $P5003, "$past"
    $P5004 = _lex_param_0."value"()
    $P5005 = $P5003."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "newpad" :subid("cuid_257_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1811
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_479 
.annotate 'line', 1812
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5616
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_479, $P5002
    repr_defined $I5001, fb_tmp_479
    unless $I5001 goto if2614_else5617 
    set $P5004, fb_tmp_479["$W"]
    set $P5006, $P5004
    goto if2614_end5618
  if2614_else5617:
    null $P5005
    set $P5006, $P5005
  if2614_end5618:
    unless_null $P5006, vivi_26155619
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_26155619:
    unless_null $P5006, vivi_26165620
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_26165620:
    set $P5001, $P5006
  fallback5616:
    $P5009 = $P5001."push_lexpad"(_lex_param_1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "outerctx" :subid("cuid_258_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1815
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_456_1361537952.49511' 
    capture_lex $P5030 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc fb_tmp_482 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_500 
    find_dynamic_lex $P5001, "%*COMPILING"
    unless_null $P5001, fallback5627
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_36, $P5002
    set fb_tmp_482, pkg_viv_tmp_36
    repr_defined $I5004, fb_tmp_482
    unless $I5004 goto if2620_else5628 
    set $P5004, fb_tmp_482["%COMPILING"]
    set $P5006, $P5004
    goto if2620_end5629
  if2620_else5628:
    null $P5005
    set $P5006, $P5005
  if2620_end5629:
    unless_null $P5006, vivi_26215630
    new $P5007, 'Hash'
    set pkg_viv_tmp_36["%COMPILING"], $P5007
    set $P5006, $P5007
  vivi_26215630:
    unless_null $P5006, vivi_26225631
    die "Contextual %*COMPILING not found"
    box $P5008, "Contextual %*COMPILING not found"
    set $P5006, $P5008
  vivi_26225631:
    set $P5001, $P5006
  fallback5627:
    set fb_tmp_481, $P5001
    repr_defined $I5003, fb_tmp_481
    unless $I5003 goto if2619_else5625 
    set $P5009, fb_tmp_481["%?OPTIONS"]
    set $P5011, $P5009
    goto if2619_end5626
  if2619_else5625:
    null $P5010
    set $P5011, $P5010
  if2619_end5626:
    unless_null $P5011, vivi_26235632
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_26235632:
    set fb_tmp_480, $P5011
    repr_defined $I5002, fb_tmp_480
    unless $I5002 goto if2618_else5623 
    set $P5013, fb_tmp_480["outer_ctx"]
    set $P5015, $P5013
    goto if2618_end5624
  if2618_else5623:
    null $P5014
    set $P5015, $P5014
  if2618_end5624:
    unless_null $P5015, vivi_26245633
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_26245633:
    defined $I5001, $P5015
    if $I5001 goto unless2617_end5622 
    .const 'Sub' $P5017 = 'cuid_456_1361537952.49511' 
    capture_lex $P5017
    $P5018 = $P5017()
  unless2617_end5622:
.annotate 'line', 1836
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback5710
    nqp_get_sc_object $P5022, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5021, $P5022
    set fb_tmp_500, $P5021
    repr_defined $I5005, fb_tmp_500
    unless $I5005 goto if2671_else5711 
    set $P5023, fb_tmp_500["$W"]
    set $P5025, $P5023
    goto if2671_end5712
  if2671_else5711:
    null $P5024
    set $P5025, $P5024
  if2671_end5712:
    unless_null $P5025, vivi_26725713
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_26725713:
    unless_null $P5025, vivi_26735714
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_26735714:
    set $P5020, $P5025
  fallback5710:
    $P5028 = $P5020."cur_lexpad"()
    $P5029 = $P5019."SET_BLOCK_OUTER_CTX"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_456_1361537952.49511") :anon :lex :outer("cuid_258_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1816
    .const 'Sub' $P5100 = 'cuid_455_1361537952.49511' 
    capture_lex $P5100 
    .lex "$SETTING", $P101 
    .local pmc fb_tmp_483 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc fb_tmp_486 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_487 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc fb_tmp_492 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_493 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1819
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5634
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_483, $P5003
    repr_defined $I5001, fb_tmp_483
    unless $I5001 goto if2625_else5635 
    set $P5005, fb_tmp_483["$W"]
    set $P5007, $P5005
    goto if2625_end5636
  if2625_else5635:
    null $P5006
    set $P5007, $P5006
  if2625_end5636:
    unless_null $P5007, vivi_26265637
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_26265637:
    unless_null $P5007, vivi_26275638
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26275638:
    set $P5002, $P5007
  fallback5634:
    find_dynamic_lex $P5011, "%*COMPILING"
    unless_null $P5011, fallback5644
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_37, $P5012
    set fb_tmp_486, pkg_viv_tmp_37
    repr_defined $I5005, fb_tmp_486
    unless $I5005 goto if2630_else5645 
    set $P5014, fb_tmp_486["%COMPILING"]
    set $P5016, $P5014
    goto if2630_end5646
  if2630_else5645:
    null $P5015
    set $P5016, $P5015
  if2630_end5646:
    unless_null $P5016, vivi_26315647
    new $P5017, 'Hash'
    set pkg_viv_tmp_37["%COMPILING"], $P5017
    set $P5016, $P5017
  vivi_26315647:
    unless_null $P5016, vivi_26325648
    die "Contextual %*COMPILING not found"
    box $P5018, "Contextual %*COMPILING not found"
    set $P5016, $P5018
  vivi_26325648:
    set $P5011, $P5016
  fallback5644:
    set fb_tmp_485, $P5011
    repr_defined $I5004, fb_tmp_485
    unless $I5004 goto if2629_else5642 
    set $P5019, fb_tmp_485["%?OPTIONS"]
    set $P5021, $P5019
    goto if2629_end5643
  if2629_else5642:
    null $P5020
    set $P5021, $P5020
  if2629_end5643:
    unless_null $P5021, vivi_26335649
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_26335649:
    set fb_tmp_484, $P5021
    repr_defined $I5003, fb_tmp_484
    unless $I5003 goto if2628_else5640 
    set $P5023, fb_tmp_484["setting"]
    set $P5025, $P5023
    goto if2628_end5641
  if2628_else5640:
    null $P5024
    set $P5025, $P5024
  if2628_end5641:
    unless_null $P5025, vivi_26345650
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_26345650:
    set $P5010, $P5025
    defined $I5002, $P5010
    if $I5002, defor5639
    box $P5027, "NQPCORE"
    set $P5010, $P5027
  defor5639:
    $P5028 = $P5002."load_setting"($P5010)
    set $P101, $P5028
    find_dynamic_lex $P5029, "%*COMPILING"
    unless_null $P5029, fallback5657
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_38, $P5030
    set fb_tmp_489, pkg_viv_tmp_38
    repr_defined $I5009, fb_tmp_489
    unless $I5009 goto if2638_else5658 
    set $P5032, fb_tmp_489["%COMPILING"]
    set $P5034, $P5032
    goto if2638_end5659
  if2638_else5658:
    null $P5033
    set $P5034, $P5033
  if2638_end5659:
    unless_null $P5034, vivi_26395660
    new $P5035, 'Hash'
    set pkg_viv_tmp_38["%COMPILING"], $P5035
    set $P5034, $P5035
  vivi_26395660:
    unless_null $P5034, vivi_26405661
    die "Contextual %*COMPILING not found"
    box $P5036, "Contextual %*COMPILING not found"
    set $P5034, $P5036
  vivi_26405661:
    set $P5029, $P5034
  fallback5657:
    set fb_tmp_488, $P5029
    repr_defined $I5008, fb_tmp_488
    unless $I5008 goto if2637_else5655 
    set $P5037, fb_tmp_488["%?OPTIONS"]
    set $P5039, $P5037
    goto if2637_end5656
  if2637_else5655:
    null $P5038
    set $P5039, $P5038
  if2637_end5656:
    unless_null $P5039, vivi_26415662
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_26415662:
    set fb_tmp_487, $P5039
    repr_defined $I5007, fb_tmp_487
    unless $I5007 goto if2636_else5653 
    set $P5041, fb_tmp_487["setting"]
    set $P5043, $P5041
    goto if2636_end5654
  if2636_else5653:
    null $P5042
    set $P5043, $P5042
  if2636_end5654:
    unless_null $P5043, vivi_26425663
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_26425663:
    set $S5001, $P5043
    iseq $I5006, $S5001, "NULL"
    box $P5099, $I5006
    set $P5098, $P5099
    if $I5006 goto unless2635_end5652 
.annotate 'line', 1824
.annotate 'line', 1825
    "&import_HOW_exports"($P101)
    find_dynamic_lex $P5045, "%*COMPILING"
    unless_null $P5045, fallback5670
    nqp_get_sc_object $P5047, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_39, $P5046
    set fb_tmp_492, pkg_viv_tmp_39
    repr_defined $I5012, fb_tmp_492
    unless $I5012 goto if2646_else5671 
    set $P5048, fb_tmp_492["%COMPILING"]
    set $P5050, $P5048
    goto if2646_end5672
  if2646_else5671:
    null $P5049
    set $P5050, $P5049
  if2646_end5672:
    unless_null $P5050, vivi_26475673
    new $P5051, 'Hash'
    set pkg_viv_tmp_39["%COMPILING"], $P5051
    set $P5050, $P5051
  vivi_26475673:
    unless_null $P5050, vivi_26485674
    die "Contextual %*COMPILING not found"
    box $P5052, "Contextual %*COMPILING not found"
    set $P5050, $P5052
  vivi_26485674:
    set $P5045, $P5050
  fallback5670:
    set fb_tmp_491, $P5045
    repr_defined $I5011, fb_tmp_491
    unless $I5011 goto if2645_else5668 
    set $P5053, fb_tmp_491["%?OPTIONS"]
    set $P5055, $P5053
    goto if2645_end5669
  if2645_else5668:
    null $P5054
    set $P5055, $P5054
  if2645_end5669:
    unless_null $P5055, vivi_26495675
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_26495675:
    set fb_tmp_490, $P5055
    repr_defined $I5010, fb_tmp_490
    unless $I5010 goto if2644_else5666 
    set $P5057, fb_tmp_490["no-regex-lib"]
    set $P5059, $P5057
    goto if2644_end5667
  if2644_else5666:
    null $P5058
    set $P5059, $P5058
  if2644_end5667:
    unless_null $P5059, vivi_26505676
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_26505676:
    set $P5097, $P5059
    if $P5059 goto unless2643_end5665 
.annotate 'line', 1826
    find_dynamic_lex $P5061, "%*COMPILING"
    unless_null $P5061, fallback5683
    nqp_get_sc_object $P5063, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_40, $P5062
    set fb_tmp_495, pkg_viv_tmp_40
    repr_defined $I5015, fb_tmp_495
    unless $I5015 goto if2654_else5684 
    set $P5064, fb_tmp_495["%COMPILING"]
    set $P5066, $P5064
    goto if2654_end5685
  if2654_else5684:
    null $P5065
    set $P5066, $P5065
  if2654_end5685:
    unless_null $P5066, vivi_26555686
    new $P5067, 'Hash'
    set pkg_viv_tmp_40["%COMPILING"], $P5067
    set $P5066, $P5067
  vivi_26555686:
    unless_null $P5066, vivi_26565687
    die "Contextual %*COMPILING not found"
    box $P5068, "Contextual %*COMPILING not found"
    set $P5066, $P5068
  vivi_26565687:
    set $P5061, $P5066
  fallback5683:
    set fb_tmp_494, $P5061
    repr_defined $I5014, fb_tmp_494
    unless $I5014 goto if2653_else5681 
    set $P5069, fb_tmp_494["%?OPTIONS"]
    set $P5071, $P5069
    goto if2653_end5682
  if2653_else5681:
    null $P5070
    set $P5071, $P5070
  if2653_end5682:
    unless_null $P5071, vivi_26575688
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_26575688:
    set fb_tmp_493, $P5071
    repr_defined $I5013, fb_tmp_493
    unless $I5013 goto if2652_else5679 
    set $P5073, fb_tmp_493["custom-regex-lib"]
    set $P5075, $P5073
    goto if2652_end5680
  if2652_else5679:
    null $P5074
    set $P5075, $P5074
  if2652_end5680:
    unless_null $P5075, vivi_26585689
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_26585689:
    unless $P5075 goto if2651_else5677 
    .const 'Sub' $P5077 = 'cuid_455_1361537952.49511' 
    capture_lex $P5077
    $P5078 = $P5077($P5075)
    set $P5096, $P5078
    goto if2651_end5678
  if2651_else5677:
.annotate 'line', 1830
.annotate 'line', 1831
    find_dynamic_lex $P5079, "$*W"
    unless_null $P5079, fallback5700
    nqp_get_sc_object $P5081, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5080, $P5081
    set fb_tmp_498, $P5080
    repr_defined $I5016, fb_tmp_498
    unless $I5016 goto if2665_else5701 
    set $P5082, fb_tmp_498["$W"]
    set $P5084, $P5082
    goto if2665_end5702
  if2665_else5701:
    null $P5083
    set $P5084, $P5083
  if2665_end5702:
    unless_null $P5084, vivi_26665703
    nqp_get_sc_object $P5085, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5085
  vivi_26665703:
    unless_null $P5084, vivi_26675704
    die "Contextual $*W not found"
    box $P5086, "Contextual $*W not found"
    set $P5084, $P5086
  vivi_26675704:
    set $P5079, $P5084
  fallback5700:
    find_dynamic_lex $P5087, "$*GLOBALish"
    unless_null $P5087, fallback5705
    nqp_get_sc_object $P5089, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5088, $P5089
    set fb_tmp_499, $P5088
    repr_defined $I5017, fb_tmp_499
    unless $I5017 goto if2668_else5706 
    set $P5090, fb_tmp_499["$GLOBALish"]
    set $P5092, $P5090
    goto if2668_end5707
  if2668_else5706:
    null $P5091
    set $P5092, $P5091
  if2668_end5707:
    unless_null $P5092, vivi_26695708
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5092, $P5093
  vivi_26695708:
    unless_null $P5092, vivi_26705709
    die "Contextual $*GLOBALish not found"
    box $P5094, "Contextual $*GLOBALish not found"
    set $P5092, $P5094
  vivi_26705709:
    set $P5087, $P5092
  fallback5705:
    $P5095 = $P5079."load_module"("NQPP6QRegex", $P5087)
    set $P5096, $P5095
  if2651_end5678:
    set $P5097, $P5096
  unless2643_end5665:
    set $P5098, $P5097
  unless2635_end5652:
    .return ($P5098) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_455_1361537952.49511") :anon :lex :outer("cuid_456_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1827
    .param pmc _lex_param_0 
    .lex "$lib", _lex_param_0 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
.annotate 'line', 1828
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5690
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_496, $P5002
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if2659_else5691 
    set $P5004, fb_tmp_496["$W"]
    set $P5006, $P5004
    goto if2659_end5692
  if2659_else5691:
    null $P5005
    set $P5006, $P5005
  if2659_end5692:
    unless_null $P5006, vivi_26605693
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_26605693:
    unless_null $P5006, vivi_26615694
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_26615694:
    set $P5001, $P5006
  fallback5690:
    find_dynamic_lex $P5009, "$*GLOBALish"
    unless_null $P5009, fallback5695
    nqp_get_sc_object $P5011, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5010, $P5011
    set fb_tmp_497, $P5010
    repr_defined $I5002, fb_tmp_497
    unless $I5002 goto if2662_else5696 
    set $P5012, fb_tmp_497["$GLOBALish"]
    set $P5014, $P5012
    goto if2662_end5697
  if2662_else5696:
    null $P5013
    set $P5014, $P5013
  if2662_end5697:
    unless_null $P5014, vivi_26635698
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_26635698:
    unless_null $P5014, vivi_26645699
    die "Contextual $*GLOBALish not found"
    box $P5016, "Contextual $*GLOBALish not found"
    set $P5014, $P5016
  vivi_26645699:
    set $P5009, $P5014
  fallback5695:
    $P5017 = $P5001."load_module"(_lex_param_0, $P5009)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "you_are_here" :subid("cuid_259_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1848
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
.annotate 'line', 1849
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."CTXSAVE"()
    $P5003 = _lex_param_1."!make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<use>" :subid("cuid_260_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1854
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$module", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_501 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc fb_tmp_508 
    .local pmc pkg_lookup_tmp_167 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1855
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback5715
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_501, $P5003
    repr_defined $I5001, fb_tmp_501
    unless $I5001 goto if2674_else5716 
    set $P5005, fb_tmp_501["$W"]
    set $P5007, $P5005
    goto if2674_end5717
  if2674_else5716:
    null $P5006
    set $P5007, $P5006
  if2674_end5717:
    unless_null $P5007, vivi_26755718
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_26755718:
    unless_null $P5007, vivi_26765719
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_26765719:
    set $P5002, $P5007
  fallback5715:
    unless_null _lex_param_1, fallback5722
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5010
  fallback5722:
    set fb_tmp_502, _lex_param_1
    repr_defined $I5002, fb_tmp_502
    unless $I5002 goto if2677_else5720 
    set $P5011, fb_tmp_502["name"]
    set $P5013, $P5011
    goto if2677_end5721
  if2677_else5720:
    null $P5012
    set $P5013, $P5012
  if2677_end5721:
    unless_null $P5013, vivi_26785723
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_26785723:
    set $S5001, $P5013
    find_dynamic_lex $P5015, "$*GLOBALish"
    unless_null $P5015, fallback5724
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_503, $P5016
    repr_defined $I5003, fb_tmp_503
    unless $I5003 goto if2679_else5725 
    set $P5018, fb_tmp_503["$GLOBALish"]
    set $P5020, $P5018
    goto if2679_end5726
  if2679_else5725:
    null $P5019
    set $P5020, $P5019
  if2679_end5726:
    unless_null $P5020, vivi_26805727
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_26805727:
    unless_null $P5020, vivi_26815728
    die "Contextual $*GLOBALish not found"
    box $P5022, "Contextual $*GLOBALish not found"
    set $P5020, $P5022
  vivi_26815728:
    set $P5015, $P5020
  fallback5724:
    $P5023 = $P5002."load_module"($S5001, $P5015)
    set $P101, $P5023
    defined $I5004, $P101
    unless $I5004 goto if2682_end5730 
.annotate 'line', 1856
    exists $I5005, $P101["EXPORT"]
    set $I5008, $I5005
    unless $I5005 goto if2684_end5734 
    set fb_tmp_504, $P101
    repr_defined $I5007, fb_tmp_504
    unless $I5007 goto if2685_else5735 
    set $P5025, fb_tmp_504["EXPORT"]
    set $P5027, $P5025
    goto if2685_end5736
  if2685_else5735:
    null $P5026
    set $P5027, $P5026
  if2685_end5736:
    unless_null $P5027, vivi_26865737
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_26865737:
    get_who $P5024, $P5027
    exists $I5006, $P5024["DEFAULT"]
    set $I5008, $I5006
  if2684_end5734:
    unless $I5008 goto if2683_end5732 
.annotate 'line', 1857
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback5738
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5030, $P5031
    set fb_tmp_505, $P5030
    repr_defined $I5009, fb_tmp_505
    unless $I5009 goto if2687_else5739 
    set $P5032, fb_tmp_505["$W"]
    set $P5034, $P5032
    goto if2687_end5740
  if2687_else5739:
    null $P5033
    set $P5034, $P5033
  if2687_end5740:
    unless_null $P5034, vivi_26885741
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_26885741:
    unless_null $P5034, vivi_26895742
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_26895742:
    set $P5029, $P5034
  fallback5738:
    set fb_tmp_507, $P101
    repr_defined $I5011, fb_tmp_507
    unless $I5011 goto if2691_else5745 
    set $P5039, fb_tmp_507["EXPORT"]
    set $P5041, $P5039
    goto if2691_end5746
  if2691_else5745:
    null $P5040
    set $P5041, $P5040
  if2691_end5746:
    unless_null $P5041, vivi_26925747
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5041, $P5042
  vivi_26925747:
    get_who $P5038, $P5041
    set fb_tmp_506, $P5038
    repr_defined $I5010, fb_tmp_506
    unless $I5010 goto if2690_else5743 
    set $P5043, fb_tmp_506["DEFAULT"]
    set $P5045, $P5043
    goto if2690_end5744
  if2690_else5743:
    null $P5044
    set $P5045, $P5044
  if2690_end5744:
    unless_null $P5045, vivi_26935748
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_26935748:
    get_who $P5037, $P5045
    $P5047 = $P5029."import"($P5037)
  if2683_end5732:
.annotate 'line', 1860
    $P5048 = "&import_HOW_exports"($P101)
  if2682_end5730:
.annotate 'line', 1862
    nqp_get_sc_object $P5050, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_167, $P5050
    get_who $P5051, pkg_lookup_tmp_167
    exists $I5013, $P5051["QAST"]
    unless $I5013 goto if2695_else5751 
    get_who $P5053, pkg_lookup_tmp_167
    set $P5052, $P5053["QAST"]
    set $P5055, $P5052
    goto if2695_end5752
  if2695_else5751:
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5054
  if2695_end5752:
    get_who $P5049, $P5055
    set fb_tmp_508, $P5049
    repr_defined $I5012, fb_tmp_508
    unless $I5012 goto if2694_else5749 
    set $P5056, fb_tmp_508["Stmts"]
    set $P5058, $P5056
    goto if2694_end5750
  if2694_else5749:
    null $P5057
    set $P5058, $P5057
  if2694_end5750:
    unless_null $P5058, vivi_26965753
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5059
  vivi_26965753:
    $P5060 = $P5058."new"()
    $P5061 = _lex_param_1."!make"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<if>" :subid("cuid_261_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1865
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_457_1361537952.49511' 
    capture_lex $P5042 
    .lex "$count", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_509 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc fb_tmp_514 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback5756
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback5756:
    set fb_tmp_509, _lex_param_1
    repr_defined $I5001, fb_tmp_509
    unless $I5001 goto if2697_else5754 
    set $P5004, fb_tmp_509["xblock"]
    set $P5006, $P5004
    goto if2697_end5755
  if2697_else5754:
    null $P5005
    set $P5006, $P5005
  if2697_end5755:
    unless_null $P5006, vivi_26985757
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_26985757:
    set $N5002, $P5006
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5008, $N5001
    set $P101, $P5008
.annotate 'line', 1867
    unless_null _lex_param_1, fallback5762
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback5762:
    set fb_tmp_511, _lex_param_1
    repr_defined $I5003, fb_tmp_511
    unless $I5003 goto if2700_else5760 
    set $P5010, fb_tmp_511["xblock"]
    set $P5012, $P5010
    goto if2700_end5761
  if2700_else5760:
    null $P5011
    set $P5012, $P5011
  if2700_end5761:
    unless_null $P5012, vivi_27015763
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_27015763:
    set fb_tmp_510, $P5012
    repr_defined $I5002, fb_tmp_510
    unless $I5002 goto if2699_else5758 
    set $I5004, $P101
    set $P5014, fb_tmp_510[$I5004]
    set $P5016, $P5014
    goto if2699_end5759
  if2699_else5758:
    null $P5015
    set $P5016, $P5015
  if2699_end5759:
    unless_null $P5016, vivi_27025764
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_27025764:
    $P5018 = $P5016."ast"()
    $P5019 = "&xblock_immediate"($P5018)
    set $P102, $P5019
    unless_null _lex_param_1, fallback5769
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5020
  fallback5769:
    set fb_tmp_512, _lex_param_1
    repr_defined $I5005, fb_tmp_512
    unless $I5005 goto if2704_else5767 
    set $P5021, fb_tmp_512["else"]
    set $P5023, $P5021
    goto if2704_end5768
  if2704_else5767:
    null $P5022
    set $P5023, $P5022
  if2704_end5768:
    unless_null $P5023, vivi_27055770
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_27055770:
    unless $P5023 goto if2703_end5766 
.annotate 'line', 1868
.annotate 'line', 1869
    unless_null _lex_param_1, fallback5775
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5025
  fallback5775:
    set fb_tmp_514, _lex_param_1
    repr_defined $I5007, fb_tmp_514
    unless $I5007 goto if2707_else5773 
    set $P5026, fb_tmp_514["else"]
    set $P5028, $P5026
    goto if2707_end5774
  if2707_else5773:
    null $P5027
    set $P5028, $P5027
  if2707_end5774:
    unless_null $P5028, vivi_27085776
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_27085776:
    set fb_tmp_513, $P5028
    repr_defined $I5006, fb_tmp_513
    unless $I5006 goto if2706_else5771 
    set $P5030, fb_tmp_513[0]
    set $P5032, $P5030
    goto if2706_end5772
  if2706_else5771:
    null $P5031
    set $P5032, $P5031
  if2706_end5772:
    unless_null $P5032, vivi_27095777
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_27095777:
    $P5034 = $P5032."ast"()
    $P5035 = "&block_immediate"($P5034)
    $P5036 = $P102."push"($P5035)
  if2703_end5766:
  while2710_test5778:
    set $N5004, $P101
    set $N5005, 0
    isgt $I5008, $N5004, $N5005
    box $P5040, $I5008
    set $P5039, $P5040
    unless $I5008 goto while2710_done5782 
  while2710_redo5780:
    .const 'Sub' $P5037 = 'cuid_457_1361537952.49511' 
    capture_lex $P5037
    $P5038 = $P5037()
    set $P5039, $P5038
    goto while2710_test5778 
  while2710_done5782:
.annotate 'line', 1878
    $P5041 = _lex_param_1."!make"($P102)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_457_1361537952.49511") :anon :lex :outer("cuid_261_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1872
    .lex "$else", $P101 
    .local pmc tmp_1 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_lex $P5002, "$count"
    set tmp_1, $P5002
    set $N5002, tmp_1
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5003, $N5001
    store_lex "$count", $P5003
    find_lex $P5002, "$past"
    set $P101, $P5002
.annotate 'line', 1875
    find_lex $P5003, "$/"
    unless_null $P5003, fallback5787
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  fallback5787:
    set fb_tmp_516, $P5003
    repr_defined $I5002, fb_tmp_516
    unless $I5002 goto if2712_else5785 
    set $P5005, fb_tmp_516["xblock"]
    set $P5007, $P5005
    goto if2712_end5786
  if2712_else5785:
    null $P5006
    set $P5007, $P5006
  if2712_end5786:
    unless_null $P5007, vivi_27135788
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_27135788:
    set fb_tmp_515, $P5007
    repr_defined $I5001, fb_tmp_515
    unless $I5001 goto if2711_else5783 
    find_lex $P5010, "$count"
    set $I5003, $P5010
    set $P5009, fb_tmp_515[$I5003]
    set $P5012, $P5009
    goto if2711_end5784
  if2711_else5783:
    null $P5011
    set $P5012, $P5011
  if2711_end5784:
    unless_null $P5012, vivi_27145789
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_27145789:
    $P5014 = $P5012."ast"()
    $P5015 = "&xblock_immediate"($P5014)
    store_lex "$past", $P5015
.annotate 'line', 1876
    find_lex $P5016, "$past"
    $P5017 = $P5016."push"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<unless>" :subid("cuid_262_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1881
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_517 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1882
    unless_null _lex_param_1, fallback5792
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5792:
    set fb_tmp_517, _lex_param_1
    repr_defined $I5001, fb_tmp_517
    unless $I5001 goto if2715_else5790 
    set $P5003, fb_tmp_517["xblock"]
    set $P5005, $P5003
    goto if2715_end5791
  if2715_else5790:
    null $P5004
    set $P5005, $P5004
  if2715_end5791:
    unless_null $P5005, vivi_27165793
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_27165793:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1883
    $P101."op"("unless")
.annotate 'line', 1884
    $P5009 = _lex_param_1."!make"($P101)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<while>" :subid("cuid_263_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1887
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_518 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc fb_tmp_521 
    .local pmc pkg_lookup_tmp_168 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1888
    unless_null _lex_param_1, fallback5796
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5796:
    set fb_tmp_518, _lex_param_1
    repr_defined $I5001, fb_tmp_518
    unless $I5001 goto if2717_else5794 
    set $P5003, fb_tmp_518["xblock"]
    set $P5005, $P5003
    goto if2717_end5795
  if2717_else5794:
    null $P5004
    set $P5005, $P5004
  if2717_end5795:
    unless_null $P5005, vivi_27185797
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_27185797:
    $P5007 = $P5005."ast"()
    $P5008 = "&xblock_immediate"($P5007)
    set $P101, $P5008
.annotate 'line', 1889
    unless_null _lex_param_1, fallback5800
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback5800:
    set fb_tmp_519, _lex_param_1
    repr_defined $I5002, fb_tmp_519
    unless $I5002 goto if2719_else5798 
    set $P5010, fb_tmp_519["sym"]
    set $P5012, $P5010
    goto if2719_end5799
  if2719_else5798:
    null $P5011
    set $P5012, $P5011
  if2719_end5799:
    unless_null $P5012, vivi_27205801
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_27205801:
    set $S5001, $P5012
    $P101."op"($S5001)
    find_dynamic_lex $P5014, "$*CONTROL_USED"
    unless_null $P5014, fallback5804
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5015, $P5016
    set fb_tmp_520, $P5015
    repr_defined $I5003, fb_tmp_520
    unless $I5003 goto if2722_else5805 
    set $P5017, fb_tmp_520["$CONTROL_USED"]
    set $P5019, $P5017
    goto if2722_end5806
  if2722_else5805:
    null $P5018
    set $P5019, $P5018
  if2722_end5806:
    unless_null $P5019, vivi_27235807
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_27235807:
    unless_null $P5019, vivi_27245808
    die "Contextual $*CONTROL_USED not found"
    box $P5021, "Contextual $*CONTROL_USED not found"
    set $P5019, $P5021
  vivi_27245808:
    set $P5014, $P5019
  fallback5804:
    if $P5014 goto unless2721_end5803 
.annotate 'line', 1890
.annotate 'line', 1891
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_168, $P5023
    get_who $P5024, pkg_lookup_tmp_168
    exists $I5005, $P5024["QAST"]
    unless $I5005 goto if2726_else5811 
    get_who $P5026, pkg_lookup_tmp_168
    set $P5025, $P5026["QAST"]
    set $P5028, $P5025
    goto if2726_end5812
  if2726_else5811:
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5027
  if2726_end5812:
    get_who $P5022, $P5028
    set fb_tmp_521, $P5022
    repr_defined $I5004, fb_tmp_521
    unless $I5004 goto if2725_else5809 
    set $P5029, fb_tmp_521["IVal"]
    set $P5031, $P5029
    goto if2725_end5810
  if2725_else5809:
    null $P5030
    set $P5031, $P5030
  if2725_end5810:
    unless_null $P5031, vivi_27275813
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_27275813:
    $P5033 = $P5031."new"(1 :named("value"), "nohandler" :named("named"))
    $P5034 = $P101."push"($P5033)
  unless2721_end5803:
.annotate 'line', 1893
    $P5035 = _lex_param_1."!make"($P101)
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<repeat>" :subid("cuid_264_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1896
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_522 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc fb_tmp_525 
    .local pmc pkg_lookup_tmp_169 
    .local pmc fb_tmp_526 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc fb_tmp_529 
    .local pmc pkg_lookup_tmp_170 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback5816
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback5816:
    set fb_tmp_522, _lex_param_1
    repr_defined $I5001, fb_tmp_522
    unless $I5001 goto if2728_else5814 
    set $P5004, fb_tmp_522["wu"]
    set $P5006, $P5004
    goto if2728_end5815
  if2728_else5814:
    null $P5005
    set $P5006, $P5005
  if2728_end5815:
    unless_null $P5006, vivi_27295817
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_27295817:
    set $S5002, $P5006
    concat $S5001, "repeat_", $S5002
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback5822
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback5822:
    set fb_tmp_523, _lex_param_1
    repr_defined $I5002, fb_tmp_523
    unless $I5002 goto if2731_else5820 
    set $P5010, fb_tmp_523["xblock"]
    set $P5012, $P5010
    goto if2731_end5821
  if2731_else5820:
    null $P5011
    set $P5012, $P5011
  if2731_end5821:
    unless_null $P5012, vivi_27325823
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_27325823:
    unless $P5012 goto if2730_else5818 
.annotate 'line', 1899
.annotate 'line', 1900
    unless_null _lex_param_1, fallback5826
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5014
  fallback5826:
    set fb_tmp_524, _lex_param_1
    repr_defined $I5003, fb_tmp_524
    unless $I5003 goto if2733_else5824 
    set $P5015, fb_tmp_524["xblock"]
    set $P5017, $P5015
    goto if2733_end5825
  if2733_else5824:
    null $P5016
    set $P5017, $P5016
  if2733_end5825:
    unless_null $P5017, vivi_27345827
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_27345827:
    $P5019 = $P5017."ast"()
    $P5020 = "&xblock_immediate"($P5019)
    set $P102, $P5020
.annotate 'line', 1901
    $P5021 = $P102."op"($P101)
    goto if2730_end5819
  if2730_else5818:
.annotate 'line', 1903
.annotate 'line', 1904
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_169, $P5023
    get_who $P5024, pkg_lookup_tmp_169
    exists $I5005, $P5024["QAST"]
    unless $I5005 goto if2736_else5830 
    get_who $P5026, pkg_lookup_tmp_169
    set $P5025, $P5026["QAST"]
    set $P5028, $P5025
    goto if2736_end5831
  if2736_else5830:
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5027
  if2736_end5831:
    get_who $P5022, $P5028
    set fb_tmp_525, $P5022
    repr_defined $I5004, fb_tmp_525
    unless $I5004 goto if2735_else5828 
    set $P5029, fb_tmp_525["Op"]
    set $P5031, $P5029
    goto if2735_end5829
  if2735_else5828:
    null $P5030
    set $P5031, $P5030
  if2735_end5829:
    unless_null $P5031, vivi_27375832
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_27375832:
    unless_null _lex_param_1, fallback5835
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5033
  fallback5835:
    set fb_tmp_526, _lex_param_1
    repr_defined $I5006, fb_tmp_526
    unless $I5006 goto if2738_else5833 
    set $P5034, fb_tmp_526["EXPR"]
    set $P5036, $P5034
    goto if2738_end5834
  if2738_else5833:
    null $P5035
    set $P5036, $P5035
  if2738_end5834:
    unless_null $P5036, vivi_27395836
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_27395836:
    $P5038 = $P5036."ast"()
    unless_null _lex_param_1, fallback5839
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5039
  fallback5839:
    set fb_tmp_527, _lex_param_1
    repr_defined $I5007, fb_tmp_527
    unless $I5007 goto if2740_else5837 
    set $P5040, fb_tmp_527["pblock"]
    set $P5042, $P5040
    goto if2740_end5838
  if2740_else5837:
    null $P5041
    set $P5042, $P5041
  if2740_end5838:
    unless_null $P5042, vivi_27415840
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_27415840:
    $P5044 = $P5042."ast"()
    $P5045 = "&block_immediate"($P5044)
    $P5046 = $P5031."new"($P5038, $P5045, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P102, $P5046
  if2730_end5819:
    find_dynamic_lex $P5047, "$*CONTROL_USED"
    unless_null $P5047, fallback5843
    nqp_get_sc_object $P5049, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5048, $P5049
    set fb_tmp_528, $P5048
    repr_defined $I5008, fb_tmp_528
    unless $I5008 goto if2743_else5844 
    set $P5050, fb_tmp_528["$CONTROL_USED"]
    set $P5052, $P5050
    goto if2743_end5845
  if2743_else5844:
    null $P5051
    set $P5052, $P5051
  if2743_end5845:
    unless_null $P5052, vivi_27445846
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_27445846:
    unless_null $P5052, vivi_27455847
    die "Contextual $*CONTROL_USED not found"
    box $P5054, "Contextual $*CONTROL_USED not found"
    set $P5052, $P5054
  vivi_27455847:
    set $P5047, $P5052
  fallback5843:
    if $P5047 goto unless2742_end5842 
.annotate 'line', 1907
.annotate 'line', 1908
    nqp_get_sc_object $P5056, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_170, $P5056
    get_who $P5057, pkg_lookup_tmp_170
    exists $I5010, $P5057["QAST"]
    unless $I5010 goto if2747_else5850 
    get_who $P5059, pkg_lookup_tmp_170
    set $P5058, $P5059["QAST"]
    set $P5061, $P5058
    goto if2747_end5851
  if2747_else5850:
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5060
  if2747_end5851:
    get_who $P5055, $P5061
    set fb_tmp_529, $P5055
    repr_defined $I5009, fb_tmp_529
    unless $I5009 goto if2746_else5848 
    set $P5062, fb_tmp_529["IVal"]
    set $P5064, $P5062
    goto if2746_end5849
  if2746_else5848:
    null $P5063
    set $P5064, $P5063
  if2746_end5849:
    unless_null $P5064, vivi_27485852
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_27485852:
    $P5066 = $P5064."new"(1 :named("value"), "nohandler" :named("named"))
    $P5067 = $P102."push"($P5066)
  unless2742_end5842:
.annotate 'line', 1910
    $P5068 = _lex_param_1."!make"($P102)
    .return ($P5068) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<for>" :subid("cuid_265_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1913
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc pkg_lookup_tmp_171 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc pkg_lookup_tmp_172 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 1914
    unless_null _lex_param_1, fallback5855
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback5855:
    set fb_tmp_530, _lex_param_1
    repr_defined $I5001, fb_tmp_530
    unless $I5001 goto if2749_else5853 
    set $P5004, fb_tmp_530["xblock"]
    set $P5006, $P5004
    goto if2749_end5854
  if2749_else5853:
    null $P5005
    set $P5006, $P5005
  if2749_end5854:
    unless_null $P5006, vivi_27505856
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_27505856:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 1915
    $P101."op"("for")
    set fb_tmp_531, $P101
    repr_defined $I5002, fb_tmp_531
    unless $I5002 goto if2751_else5857 
    set $P5009, fb_tmp_531[1]
    set $P5011, $P5009
    goto if2751_end5858
  if2751_else5857:
    null $P5010
    set $P5011, $P5010
  if2751_end5858:
    unless_null $P5011, vivi_27525859
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_27525859:
    set $P102, $P5011
.annotate 'line', 1917
    $P5013 = $P102."arity"()
    if $P5013 goto unless2753_end5861 
.annotate 'line', 1918
    set fb_tmp_532, $P102
    repr_defined $I5003, fb_tmp_532
    unless $I5003 goto if2754_else5862 
    set $P5014, fb_tmp_532[0]
    set $P5016, $P5014
    goto if2754_end5863
  if2754_else5862:
    null $P5015
    set $P5016, $P5015
  if2754_end5863:
    unless_null $P5016, vivi_27555864
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_27555864:
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_171, $P5019
    get_who $P5020, pkg_lookup_tmp_171
    exists $I5005, $P5020["QAST"]
    unless $I5005 goto if2757_else5867 
    get_who $P5022, pkg_lookup_tmp_171
    set $P5021, $P5022["QAST"]
    set $P5024, $P5021
    goto if2757_end5868
  if2757_else5867:
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5023
  if2757_end5868:
    get_who $P5018, $P5024
    set fb_tmp_533, $P5018
    repr_defined $I5004, fb_tmp_533
    unless $I5004 goto if2756_else5865 
    set $P5025, fb_tmp_533["Var"]
    set $P5027, $P5025
    goto if2756_end5866
  if2756_else5865:
    null $P5026
    set $P5027, $P5026
  if2756_end5866:
    unless_null $P5027, vivi_27585869
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_27585869:
    $P5029 = $P5027."new"("$_" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5016."push"($P5029)
.annotate 'line', 1919
    $P102."symbol"("$_", "lexical" :named("scope"))
.annotate 'line', 1920
    $P5030 = $P102."arity"(1)
  unless2753_end5861:
.annotate 'line', 1922
    $P102."blocktype"("immediate")
    find_dynamic_lex $P5031, "$*CONTROL_USED"
    unless_null $P5031, fallback5872
    nqp_get_sc_object $P5033, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5032, $P5033
    set fb_tmp_534, $P5032
    repr_defined $I5006, fb_tmp_534
    unless $I5006 goto if2760_else5873 
    set $P5034, fb_tmp_534["$CONTROL_USED"]
    set $P5036, $P5034
    goto if2760_end5874
  if2760_else5873:
    null $P5035
    set $P5036, $P5035
  if2760_end5874:
    unless_null $P5036, vivi_27615875
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_27615875:
    unless_null $P5036, vivi_27625876
    die "Contextual $*CONTROL_USED not found"
    box $P5038, "Contextual $*CONTROL_USED not found"
    set $P5036, $P5038
  vivi_27625876:
    set $P5031, $P5036
  fallback5872:
    if $P5031 goto unless2759_end5871 
.annotate 'line', 1923
.annotate 'line', 1924
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_172, $P5040
    get_who $P5041, pkg_lookup_tmp_172
    exists $I5008, $P5041["QAST"]
    unless $I5008 goto if2764_else5879 
    get_who $P5043, pkg_lookup_tmp_172
    set $P5042, $P5043["QAST"]
    set $P5045, $P5042
    goto if2764_end5880
  if2764_else5879:
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5044
  if2764_end5880:
    get_who $P5039, $P5045
    set fb_tmp_535, $P5039
    repr_defined $I5007, fb_tmp_535
    unless $I5007 goto if2763_else5877 
    set $P5046, fb_tmp_535["IVal"]
    set $P5048, $P5046
    goto if2763_end5878
  if2763_else5877:
    null $P5047
    set $P5048, $P5047
  if2763_end5878:
    unless_null $P5048, vivi_27655881
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_27655881:
    $P5050 = $P5048."new"(1 :named("value"), "nohandler" :named("named"))
    $P5051 = $P101."push"($P5050)
  unless2759_end5871:
.annotate 'line', 1926
    $P5052 = _lex_param_1."!make"($P101)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CATCH>" :subid("cuid_266_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1929
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_536 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1930
    unless_null _lex_param_1, fallback5884
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5884:
    set fb_tmp_536, _lex_param_1
    repr_defined $I5001, fb_tmp_536
    unless $I5001 goto if2766_else5882 
    set $P5003, fb_tmp_536["block"]
    set $P5005, $P5003
    goto if2766_end5883
  if2766_else5882:
    null $P5004
    set $P5005, $P5004
  if2766_end5883:
    unless_null $P5005, vivi_27675885
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_27675885:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1931
    "&set_block_handler"(_lex_param_1, $P101, "CATCH")
.annotate 'line', 1932
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_control:sym<CONTROL>" :subid("cuid_267_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1935
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_537 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 1936
    unless_null _lex_param_1, fallback5888
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5888:
    set fb_tmp_537, _lex_param_1
    repr_defined $I5001, fb_tmp_537
    unless $I5001 goto if2768_else5886 
    set $P5003, fb_tmp_537["block"]
    set $P5005, $P5003
    goto if2768_end5887
  if2768_else5886:
    null $P5004
    set $P5005, $P5004
  if2768_end5887:
    unless_null $P5005, vivi_27695889
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_27695889:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 1937
    "&set_block_handler"(_lex_param_1, $P101, "CONTROL")
.annotate 'line', 1938
    $P5008 = "&default_for"("$")
    $P5009 = _lex_param_1."!make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<BEGIN>" :subid("cuid_268_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1972
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
.annotate 'line', 1973
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5890
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_538, $P5002
    repr_defined $I5001, fb_tmp_538
    unless $I5001 goto if2770_else5891 
    set $P5004, fb_tmp_538["$W"]
    set $P5006, $P5004
    goto if2770_end5892
  if2770_else5891:
    null $P5005
    set $P5006, $P5005
  if2770_end5892:
    unless_null $P5006, vivi_27715893
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_27715893:
    unless_null $P5006, vivi_27725894
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_27725894:
    set $P5001, $P5006
  fallback5890:
    unless_null _lex_param_1, fallback5897
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback5897:
    set fb_tmp_539, _lex_param_1
    repr_defined $I5002, fb_tmp_539
    unless $I5002 goto if2773_else5895 
    set $P5010, fb_tmp_539["blorst"]
    set $P5012, $P5010
    goto if2773_end5896
  if2773_else5895:
    null $P5011
    set $P5012, $P5011
  if2773_end5896:
    unless_null $P5012, vivi_27745898
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_27745898:
    $P5014 = $P5012."ast"()
    $P5015 = $P5001."run_begin_block"($P5014)
    $P5016 = _lex_param_1."!make"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<INIT>" :subid("cuid_269_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1976
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc fb_tmp_542 
    .local pmc pkg_lookup_tmp_184 
.annotate 'line', 1977
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback5899
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_540, $P5002
    repr_defined $I5001, fb_tmp_540
    unless $I5001 goto if2775_else5900 
    set $P5004, fb_tmp_540["$W"]
    set $P5006, $P5004
    goto if2775_end5901
  if2775_else5900:
    null $P5005
    set $P5006, $P5005
  if2775_end5901:
    unless_null $P5006, vivi_27765902
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_27765902:
    unless_null $P5006, vivi_27775903
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_27775903:
    set $P5001, $P5006
  fallback5899:
    $P5009 = $P5001."cur_lexpad"()
    unless_null _lex_param_1, fallback5906
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5010
  fallback5906:
    set fb_tmp_541, _lex_param_1
    repr_defined $I5002, fb_tmp_541
    unless $I5002 goto if2778_else5904 
    set $P5011, fb_tmp_541["blorst"]
    set $P5013, $P5011
    goto if2778_end5905
  if2778_else5904:
    null $P5012
    set $P5013, $P5012
  if2778_end5905:
    unless_null $P5013, vivi_27795907
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_27795907:
    $P5015 = $P5013."ast"()
    $P5009."push"($P5015)
.annotate 'line', 1978
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_184, $P5017
    get_who $P5018, pkg_lookup_tmp_184
    exists $I5004, $P5018["QAST"]
    unless $I5004 goto if2781_else5910 
    get_who $P5020, pkg_lookup_tmp_184
    set $P5019, $P5020["QAST"]
    set $P5022, $P5019
    goto if2781_end5911
  if2781_else5910:
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5021
  if2781_end5911:
    get_who $P5016, $P5022
    set fb_tmp_542, $P5016
    repr_defined $I5003, fb_tmp_542
    unless $I5003 goto if2780_else5908 
    set $P5023, fb_tmp_542["Stmts"]
    set $P5025, $P5023
    goto if2780_end5909
  if2780_else5908:
    null $P5024
    set $P5025, $P5024
  if2780_end5909:
    unless_null $P5025, vivi_27825912
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_27825912:
    $P5027 = $P5025."new"()
    $P5028 = _lex_param_1."!make"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "statement_prefix:sym<try>" :subid("cuid_270_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 1981
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_543 
    .local pmc fb_tmp_544 
    .local pmc pkg_lookup_tmp_185 
    .local pmc fb_tmp_545 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc pkg_lookup_tmp_186 
    .local pmc fb_tmp_548 
    .local pmc pkg_lookup_tmp_187 
    .local pmc fb_tmp_549 
    .local pmc pkg_lookup_tmp_188 
    .local pmc fb_tmp_550 
    .local pmc pkg_lookup_tmp_189 
    .local pmc fb_tmp_551 
    .local pmc pkg_lookup_tmp_190 
    .local pmc fb_tmp_552 
    .local pmc pkg_lookup_tmp_191 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_5913
    .lex "RETURN", $P102
.annotate 'line', 1982
    unless_null _lex_param_1, fallback5917
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback5917:
    set fb_tmp_543, _lex_param_1
    repr_defined $I5001, fb_tmp_543
    unless $I5001 goto if2783_else5915 
    set $P5003, fb_tmp_543["blorst"]
    set $P5005, $P5003
    goto if2783_end5916
  if2783_else5915:
    null $P5004
    set $P5005, $P5004
  if2783_end5916:
    unless_null $P5005, vivi_27845918
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_27845918:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
    nqp_get_sc_object $P5009, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_185, $P5009
    get_who $P5010, pkg_lookup_tmp_185
    exists $I5004, $P5010["QAST"]
    unless $I5004 goto if2787_else5923 
    get_who $P5012, pkg_lookup_tmp_185
    set $P5011, $P5012["QAST"]
    set $P5014, $P5011
    goto if2787_end5924
  if2787_else5923:
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5013
  if2787_end5924:
    get_who $P5008, $P5014
    set fb_tmp_544, $P5008
    repr_defined $I5003, fb_tmp_544
    unless $I5003 goto if2786_else5921 
    set $P5015, fb_tmp_544["Block"]
    set $P5017, $P5015
    goto if2786_end5922
  if2786_else5921:
    null $P5016
    set $P5017, $P5016
  if2786_end5922:
    unless_null $P5017, vivi_27885925
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_27885925:
    type_check $I5002, $P101, $P5017
    unless $I5002 goto if2785_end5920 
.annotate 'line', 1983
    set fb_tmp_545, $P101
    repr_defined $I5005, fb_tmp_545
    unless $I5005 goto if2791_else5930 
    set $P5019, fb_tmp_545["handlers"]
    set $P5021, $P5019
    goto if2791_end5931
  if2791_else5930:
    null $P5020
    set $P5021, $P5020
  if2791_end5931:
    unless_null $P5021, vivi_27925932
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_27925932:
    set $P5027, $P5021
    unless $P5021 goto if2790_end5929 
    set fb_tmp_546, $P101
    repr_defined $I5007, fb_tmp_546
    unless $I5007 goto if2793_else5933 
    set $P5023, fb_tmp_546["handlers"]
    set $P5025, $P5023
    goto if2793_end5934
  if2793_else5933:
    null $P5024
    set $P5025, $P5024
  if2793_end5934:
    unless_null $P5025, vivi_27945935
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_27945935:
    exists $I5006, $P5025["CATCH"]
    box $P5028, $I5006
    set $P5027, $P5028
  if2790_end5929:
    unless $P5027 goto if2789_else5926 
.annotate 'line', 1984
.annotate 'line', 1985
    _lex_param_1."!make"($P101)
    find_lex $P5029, "RETURN"
    $P5030 = $P5029(1)
    set $P5032, $P5030
    goto if2789_end5927
  if2789_else5926:
.annotate 'line', 1988
.annotate 'line', 1989
    $P5031 = $P101."blocktype"("immediate")
    set $P5032, $P5031
  if2789_end5927:
  if2785_end5920:
.annotate 'line', 1992
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_186, $P5034
    get_who $P5035, pkg_lookup_tmp_186
    exists $I5009, $P5035["QAST"]
    unless $I5009 goto if2796_else5938 
    get_who $P5037, pkg_lookup_tmp_186
    set $P5036, $P5037["QAST"]
    set $P5039, $P5036
    goto if2796_end5939
  if2796_else5938:
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5038
  if2796_end5939:
    get_who $P5033, $P5039
    set fb_tmp_547, $P5033
    repr_defined $I5008, fb_tmp_547
    unless $I5008 goto if2795_else5936 
    set $P5040, fb_tmp_547["Op"]
    set $P5042, $P5040
    goto if2795_end5937
  if2795_else5936:
    null $P5041
    set $P5042, $P5041
  if2795_end5937:
    unless_null $P5042, vivi_27975940
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_27975940:
.annotate 'line', 1996
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_187, $P5045
    get_who $P5046, pkg_lookup_tmp_187
    exists $I5011, $P5046["QAST"]
    unless $I5011 goto if2799_else5943 
    get_who $P5048, pkg_lookup_tmp_187
    set $P5047, $P5048["QAST"]
    set $P5050, $P5047
    goto if2799_end5944
  if2799_else5943:
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5049
  if2799_end5944:
    get_who $P5044, $P5050
    set fb_tmp_548, $P5044
    repr_defined $I5010, fb_tmp_548
    unless $I5010 goto if2798_else5941 
    set $P5051, fb_tmp_548["Stmts"]
    set $P5053, $P5051
    goto if2798_end5942
  if2798_else5941:
    null $P5052
    set $P5053, $P5052
  if2798_end5942:
    unless_null $P5053, vivi_28005945
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_28005945:
.annotate 'line', 1997
    nqp_get_sc_object $P5056, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_188, $P5056
    get_who $P5057, pkg_lookup_tmp_188
    exists $I5013, $P5057["QAST"]
    unless $I5013 goto if2802_else5948 
    get_who $P5059, pkg_lookup_tmp_188
    set $P5058, $P5059["QAST"]
    set $P5061, $P5058
    goto if2802_end5949
  if2802_else5948:
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5060
  if2802_end5949:
    get_who $P5055, $P5061
    set fb_tmp_549, $P5055
    repr_defined $I5012, fb_tmp_549
    unless $I5012 goto if2801_else5946 
    set $P5062, fb_tmp_549["Op"]
    set $P5064, $P5062
    goto if2801_end5947
  if2801_else5946:
    null $P5063
    set $P5064, $P5063
  if2801_end5947:
    unless_null $P5064, vivi_28035950
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_28035950:
.annotate 'line', 1999
    nqp_get_sc_object $P5067, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_189, $P5067
    get_who $P5068, pkg_lookup_tmp_189
    exists $I5015, $P5068["QAST"]
    unless $I5015 goto if2805_else5953 
    get_who $P5070, pkg_lookup_tmp_189
    set $P5069, $P5070["QAST"]
    set $P5072, $P5069
    goto if2805_end5954
  if2805_else5953:
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5071
  if2805_end5954:
    get_who $P5066, $P5072
    set fb_tmp_550, $P5066
    repr_defined $I5014, fb_tmp_550
    unless $I5014 goto if2804_else5951 
    set $P5073, fb_tmp_550["Op"]
    set $P5075, $P5073
    goto if2804_end5952
  if2804_else5951:
    null $P5074
    set $P5075, $P5074
  if2804_end5952:
    unless_null $P5075, vivi_28065955
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_28065955:
    $P5077 = $P5075."new"("exception" :named("op"))
.annotate 'line', 2000
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_190, $P5079
    get_who $P5080, pkg_lookup_tmp_190
    exists $I5017, $P5080["QAST"]
    unless $I5017 goto if2808_else5958 
    get_who $P5082, pkg_lookup_tmp_190
    set $P5081, $P5082["QAST"]
    set $P5084, $P5081
    goto if2808_end5959
  if2808_else5958:
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5083
  if2808_end5959:
    get_who $P5078, $P5084
    set fb_tmp_551, $P5078
    repr_defined $I5016, fb_tmp_551
    unless $I5016 goto if2807_else5956 
    set $P5085, fb_tmp_551["SVal"]
    set $P5087, $P5085
    goto if2807_end5957
  if2807_else5956:
    null $P5086
    set $P5087, $P5086
  if2807_end5957:
    unless_null $P5087, vivi_28095960
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_28095960:
    $P5089 = $P5087."new"("handled" :named("value"))
.annotate 'line', 2001
    nqp_get_sc_object $P5091, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_191, $P5091
    get_who $P5092, pkg_lookup_tmp_191
    exists $I5019, $P5092["QAST"]
    unless $I5019 goto if2811_else5963 
    get_who $P5094, pkg_lookup_tmp_191
    set $P5093, $P5094["QAST"]
    set $P5096, $P5093
    goto if2811_end5964
  if2811_else5963:
    nqp_get_sc_object $P5095, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5095
  if2811_end5964:
    get_who $P5090, $P5096
    set fb_tmp_552, $P5090
    repr_defined $I5018, fb_tmp_552
    unless $I5018 goto if2810_else5961 
    set $P5097, fb_tmp_552["IVal"]
    set $P5099, $P5097
    goto if2810_end5962
  if2810_else5961:
    null $P5098
    set $P5099, $P5098
  if2810_end5962:
    unless_null $P5099, vivi_28125965
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5099, $P5100
  vivi_28125965:
    $P5101 = $P5099."new"(1 :named("value"))
    $P5102 = $P5064."new"($P5077, $P5089, $P5101, "bindkey_i" :named("op"))
.annotate 'line', 2003
    $P5103 = "&default_for"("$")
    $P5104 = $P5053."new"($P5102, $P5103)
    $P5105 = $P5042."new"($P101, "CATCH", $P5104, "handle" :named("op"))
    $P5106 = _lex_param_1."!make"($P5105)
    goto lexotic_5914
  lexotic_5913:
    .get_results ($P5106)
  lexotic_5914:
    .return ($P5106) 
.end
.HLL "nqp"
.namespace []
.sub "blorst" :subid("cuid_271_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2007
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc fb_tmp_555 
.annotate 'line', 2008
    unless_null _lex_param_1, fallback5970
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5970:
    set fb_tmp_553, _lex_param_1
    repr_defined $I5001, fb_tmp_553
    unless $I5001 goto if2814_else5968 
    set $P5002, fb_tmp_553["block"]
    set $P5004, $P5002
    goto if2814_end5969
  if2814_else5968:
    null $P5003
    set $P5004, $P5003
  if2814_end5969:
    unless_null $P5004, vivi_28155971
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28155971:
    unless $P5004 goto if2813_else5966 
.annotate 'line', 2009
    unless_null _lex_param_1, fallback5974
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback5974:
    set fb_tmp_554, _lex_param_1
    repr_defined $I5002, fb_tmp_554
    unless $I5002 goto if2816_else5972 
    set $P5007, fb_tmp_554["block"]
    set $P5009, $P5007
    goto if2816_end5973
  if2816_else5972:
    null $P5008
    set $P5009, $P5008
  if2816_end5973:
    unless_null $P5009, vivi_28175975
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_28175975:
    $P5011 = $P5009."ast"()
    $P5012 = "&block_immediate"($P5011)
    set $P5019, $P5012
    goto if2813_end5967
  if2813_else5966:
.annotate 'line', 2010
    unless_null _lex_param_1, fallback5978
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5013
  fallback5978:
    set fb_tmp_555, _lex_param_1
    repr_defined $I5003, fb_tmp_555
    unless $I5003 goto if2818_else5976 
    set $P5014, fb_tmp_555["statement"]
    set $P5016, $P5014
    goto if2818_end5977
  if2818_else5976:
    null $P5015
    set $P5016, $P5015
  if2818_end5977:
    unless_null $P5016, vivi_28195979
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_28195979:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if2813_end5967:
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<if>" :subid("cuid_272_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2015
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_556 
    unless_null _lex_param_1, fallback5982
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5982:
    set fb_tmp_556, _lex_param_1
    repr_defined $I5001, fb_tmp_556
    unless $I5001 goto if2820_else5980 
    set $P5002, fb_tmp_556["cond"]
    set $P5004, $P5002
    goto if2820_end5981
  if2820_else5980:
    null $P5003
    set $P5004, $P5003
  if2820_end5981:
    unless_null $P5004, vivi_28215983
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28215983:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_cond:sym<unless>" :subid("cuid_273_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2016
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_557 
    unless_null _lex_param_1, fallback5986
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5986:
    set fb_tmp_557, _lex_param_1
    repr_defined $I5001, fb_tmp_557
    unless $I5001 goto if2822_else5984 
    set $P5002, fb_tmp_557["cond"]
    set $P5004, $P5002
    goto if2822_end5985
  if2822_else5984:
    null $P5003
    set $P5004, $P5003
  if2822_end5985:
    unless_null $P5004, vivi_28235987
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28235987:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<while>" :subid("cuid_274_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_558 
    unless_null _lex_param_1, fallback5990
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5990:
    set fb_tmp_558, _lex_param_1
    repr_defined $I5001, fb_tmp_558
    unless $I5001 goto if2824_else5988 
    set $P5002, fb_tmp_558["cond"]
    set $P5004, $P5002
    goto if2824_end5989
  if2824_else5988:
    null $P5003
    set $P5004, $P5003
  if2824_end5989:
    unless_null $P5004, vivi_28255991
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28255991:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "statement_mod_loop:sym<until>" :subid("cuid_275_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2019
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_559 
    unless_null _lex_param_1, fallback5994
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5994:
    set fb_tmp_559, _lex_param_1
    repr_defined $I5001, fb_tmp_559
    unless $I5001 goto if2826_else5992 
    set $P5002, fb_tmp_559["cond"]
    set $P5004, $P5002
    goto if2826_end5993
  if2826_else5992:
    null $P5003
    set $P5004, $P5003
  if2826_end5993:
    unless_null $P5004, vivi_28275995
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28275995:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<fatarrow>" :subid("cuid_276_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2023
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_560 
    unless_null _lex_param_1, fallback5998
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback5998:
    set fb_tmp_560, _lex_param_1
    repr_defined $I5001, fb_tmp_560
    unless $I5001 goto if2828_else5996 
    set $P5002, fb_tmp_560["fatarrow"]
    set $P5004, $P5002
    goto if2828_end5997
  if2828_else5996:
    null $P5003
    set $P5004, $P5003
  if2828_end5997:
    unless_null $P5004, vivi_28295999
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28295999:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<colonpair>" :subid("cuid_277_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_561 
    unless_null _lex_param_1, fallback6002
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6002:
    set fb_tmp_561, _lex_param_1
    repr_defined $I5001, fb_tmp_561
    unless $I5001 goto if2830_else6000 
    set $P5002, fb_tmp_561["colonpair"]
    set $P5004, $P5002
    goto if2830_end6001
  if2830_else6000:
    null $P5003
    set $P5004, $P5003
  if2830_end6001:
    unless_null $P5004, vivi_28316003
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28316003:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<variable>" :subid("cuid_278_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2025
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_562 
    unless_null _lex_param_1, fallback6006
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6006:
    set fb_tmp_562, _lex_param_1
    repr_defined $I5001, fb_tmp_562
    unless $I5001 goto if2832_else6004 
    set $P5002, fb_tmp_562["variable"]
    set $P5004, $P5002
    goto if2832_end6005
  if2832_else6004:
    null $P5003
    set $P5004, $P5003
  if2832_end6005:
    unless_null $P5004, vivi_28336007
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28336007:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<package_declarator>" :subid("cuid_279_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2026
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_563 
    unless_null _lex_param_1, fallback6010
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6010:
    set fb_tmp_563, _lex_param_1
    repr_defined $I5001, fb_tmp_563
    unless $I5001 goto if2834_else6008 
    set $P5002, fb_tmp_563["package_declarator"]
    set $P5004, $P5002
    goto if2834_end6009
  if2834_else6008:
    null $P5003
    set $P5004, $P5003
  if2834_end6009:
    unless_null $P5004, vivi_28356011
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28356011:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<scope_declarator>" :subid("cuid_280_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2027
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_564 
    unless_null _lex_param_1, fallback6014
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6014:
    set fb_tmp_564, _lex_param_1
    repr_defined $I5001, fb_tmp_564
    unless $I5001 goto if2836_else6012 
    set $P5002, fb_tmp_564["scope_declarator"]
    set $P5004, $P5002
    goto if2836_end6013
  if2836_else6012:
    null $P5003
    set $P5004, $P5003
  if2836_end6013:
    unless_null $P5004, vivi_28376015
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28376015:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<routine_declarator>" :subid("cuid_281_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2028
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_565 
    unless_null _lex_param_1, fallback6018
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6018:
    set fb_tmp_565, _lex_param_1
    repr_defined $I5001, fb_tmp_565
    unless $I5001 goto if2838_else6016 
    set $P5002, fb_tmp_565["routine_declarator"]
    set $P5004, $P5002
    goto if2838_end6017
  if2838_else6016:
    null $P5003
    set $P5004, $P5003
  if2838_end6017:
    unless_null $P5004, vivi_28396019
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28396019:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<regex_declarator>" :subid("cuid_282_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2029
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_566 
    unless_null _lex_param_1, fallback6022
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6022:
    set fb_tmp_566, _lex_param_1
    repr_defined $I5001, fb_tmp_566
    unless $I5001 goto if2840_else6020 
    set $P5002, fb_tmp_566["regex_declarator"]
    set $P5004, $P5002
    goto if2840_end6021
  if2840_else6020:
    null $P5003
    set $P5004, $P5003
  if2840_end6021:
    unless_null $P5004, vivi_28416023
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28416023:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<statement_prefix>" :subid("cuid_283_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2030
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_567 
    unless_null _lex_param_1, fallback6026
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6026:
    set fb_tmp_567, _lex_param_1
    repr_defined $I5001, fb_tmp_567
    unless $I5001 goto if2842_else6024 
    set $P5002, fb_tmp_567["statement_prefix"]
    set $P5004, $P5002
    goto if2842_end6025
  if2842_else6024:
    null $P5003
    set $P5004, $P5003
  if2842_end6025:
    unless_null $P5004, vivi_28436027
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28436027:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<lambda>" :subid("cuid_284_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2031
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_568 
    .local pmc pkg_lookup_tmp_192 
    .local pmc fb_tmp_569 
.annotate 'line', 2032
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_192, $P5002
    get_who $P5003, pkg_lookup_tmp_192
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if2845_else6030 
    get_who $P5005, pkg_lookup_tmp_192
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if2845_end6031
  if2845_else6030:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if2845_end6031:
    get_who $P5001, $P5007
    set fb_tmp_568, $P5001
    repr_defined $I5001, fb_tmp_568
    unless $I5001 goto if2844_else6028 
    set $P5008, fb_tmp_568["Op"]
    set $P5010, $P5008
    goto if2844_end6029
  if2844_else6028:
    null $P5009
    set $P5010, $P5009
  if2844_end6029:
    unless_null $P5010, vivi_28466032
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_28466032:
    unless_null _lex_param_1, fallback6035
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6035:
    set fb_tmp_569, _lex_param_1
    repr_defined $I5003, fb_tmp_569
    unless $I5003 goto if2847_else6033 
    set $P5013, fb_tmp_569["pblock"]
    set $P5015, $P5013
    goto if2847_end6034
  if2847_else6033:
    null $P5014
    set $P5015, $P5014
  if2847_end6034:
    unless_null $P5015, vivi_28486036
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_28486036:
    $P5017 = $P5015."ast"()
    $P5018 = $P5010."new"($P5017, "takeclosure" :named("op"))
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "fatarrow" :subid("cuid_285_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2035
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_570 
    .local pmc fb_tmp_571 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2036
    unless_null _lex_param_1, fallback6039
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback6039:
    set fb_tmp_570, _lex_param_1
    repr_defined $I5001, fb_tmp_570
    unless $I5001 goto if2849_else6037 
    set $P5003, fb_tmp_570["val"]
    set $P5005, $P5003
    goto if2849_end6038
  if2849_else6037:
    null $P5004
    set $P5005, $P5004
  if2849_end6038:
    unless_null $P5005, vivi_28506040
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_28506040:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2037
    unless_null _lex_param_1, fallback6043
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback6043:
    set fb_tmp_571, _lex_param_1
    repr_defined $I5002, fb_tmp_571
    unless $I5002 goto if2851_else6041 
    set $P5009, fb_tmp_571["key"]
    set $P5011, $P5009
    goto if2851_end6042
  if2851_else6041:
    null $P5010
    set $P5011, $P5010
  if2851_end6042:
    unless_null $P5011, vivi_28526044
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_28526044:
    $P5013 = $P5011."Str"()
    $P101."named"($P5013)
.annotate 'line', 2038
    $P5014 = _lex_param_1."!make"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "colonpair" :subid("cuid_286_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2041
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5031 = 'cuid_458_1361537952.49511' 
    capture_lex $P5031 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc fb_tmp_576 
    unless_null _lex_param_1, fallback6049
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6049:
    set fb_tmp_572, _lex_param_1
    repr_defined $I5001, fb_tmp_572
    unless $I5001 goto if2854_else6047 
    set $P5002, fb_tmp_572["variable"]
    set $P5004, $P5002
    goto if2854_end6048
  if2854_else6047:
    null $P5003
    set $P5004, $P5003
  if2854_end6048:
    unless_null $P5004, vivi_28556050
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_28556050:
    unless $P5004 goto if2853_else6045 
.annotate 'line', 2042
.annotate 'line', 2043
    unless_null _lex_param_1, fallback6053
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6053:
    set fb_tmp_573, _lex_param_1
    repr_defined $I5002, fb_tmp_573
    unless $I5002 goto if2856_else6051 
    set $P5007, fb_tmp_573["variable"]
    set $P5009, $P5007
    goto if2856_end6052
  if2856_else6051:
    null $P5008
    set $P5009, $P5008
  if2856_end6052:
    unless_null $P5009, vivi_28576054
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_28576054:
    $P5011 = $P5009."ast"()
    unless_null _lex_param_1, fallback6059
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6059:
    set fb_tmp_575, _lex_param_1
    repr_defined $I5004, fb_tmp_575
    unless $I5004 goto if2859_else6057 
    set $P5013, fb_tmp_575["variable"]
    set $P5015, $P5013
    goto if2859_end6058
  if2859_else6057:
    null $P5014
    set $P5015, $P5014
  if2859_end6058:
    unless_null $P5015, vivi_28606060
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_28606060:
    set fb_tmp_574, $P5015
    repr_defined $I5003, fb_tmp_574
    unless $I5003 goto if2858_else6055 
    set $P5017, fb_tmp_574["desigilname"]
    set $P5019, $P5017
    goto if2858_end6056
  if2858_else6055:
    null $P5018
    set $P5019, $P5018
  if2858_end6056:
    unless_null $P5019, vivi_28616061
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_28616061:
    set $S5001, $P5019
    $P5011."named"($S5001)
.annotate 'line', 2044
    unless_null _lex_param_1, fallback6064
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5021
  fallback6064:
    set fb_tmp_576, _lex_param_1
    repr_defined $I5005, fb_tmp_576
    unless $I5005 goto if2862_else6062 
    set $P5022, fb_tmp_576["variable"]
    set $P5024, $P5022
    goto if2862_end6063
  if2862_else6062:
    null $P5023
    set $P5024, $P5023
  if2862_end6063:
    unless_null $P5024, vivi_28636065
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_28636065:
    $P5026 = $P5024."ast"()
    $P5027 = _lex_param_1."!make"($P5026)
    set $P5030, $P5027
    goto if2853_end6046
  if2853_else6045:
    .const 'Sub' $P5028 = 'cuid_458_1361537952.49511' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
  if2853_end6046:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_458_1361537952.49511") :anon :lex :outer("cuid_286_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2045
    .lex "$past", $P101 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc pkg_lookup_tmp_193 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6070
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback6070:
    set fb_tmp_577, $P5002
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if2865_else6068 
    set $P5004, fb_tmp_577["circumfix"]
    set $P5006, $P5004
    goto if2865_end6069
  if2865_else6068:
    null $P5005
    set $P5006, $P5005
  if2865_end6069:
    unless_null $P5006, vivi_28666071
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_28666071:
    unless $P5006 goto if2864_else6066 
.annotate 'line', 2047
    find_lex $P5008, "$/"
    unless_null $P5008, fallback6076
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  fallback6076:
    set fb_tmp_579, $P5008
    repr_defined $I5003, fb_tmp_579
    unless $I5003 goto if2868_else6074 
    set $P5010, fb_tmp_579["circumfix"]
    set $P5012, $P5010
    goto if2868_end6075
  if2868_else6074:
    null $P5011
    set $P5012, $P5011
  if2868_end6075:
    unless_null $P5012, vivi_28696077
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_28696077:
    set fb_tmp_578, $P5012
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if2867_else6072 
    set $P5014, fb_tmp_578[0]
    set $P5016, $P5014
    goto if2867_end6073
  if2867_else6072:
    null $P5015
    set $P5016, $P5015
  if2867_end6073:
    unless_null $P5016, vivi_28706078
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_28706078:
    $P5018 = $P5016."ast"()
    set $P5037, $P5018
    goto if2864_end6067
  if2864_else6066:
.annotate 'line', 2048
    nqp_get_sc_object $P5020, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_193, $P5020
    get_who $P5021, pkg_lookup_tmp_193
    exists $I5005, $P5021["QAST"]
    unless $I5005 goto if2872_else6081 
    get_who $P5023, pkg_lookup_tmp_193
    set $P5022, $P5023["QAST"]
    set $P5025, $P5022
    goto if2872_end6082
  if2872_else6081:
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5024
  if2872_end6082:
    get_who $P5019, $P5025
    set fb_tmp_580, $P5019
    repr_defined $I5004, fb_tmp_580
    unless $I5004 goto if2871_else6079 
    set $P5026, fb_tmp_580["IVal"]
    set $P5028, $P5026
    goto if2871_end6080
  if2871_else6079:
    null $P5027
    set $P5028, $P5027
  if2871_end6080:
    unless_null $P5028, vivi_28736083
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_28736083:
    find_lex $P5030, "$/"
    unless_null $P5030, fallback6086
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  fallback6086:
    set fb_tmp_581, $P5030
    repr_defined $I5007, fb_tmp_581
    unless $I5007 goto if2874_else6084 
    set $P5032, fb_tmp_581["not"]
    set $P5034, $P5032
    goto if2874_end6085
  if2874_else6084:
    null $P5033
    set $P5034, $P5033
  if2874_end6085:
    unless_null $P5034, vivi_28756087
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_28756087:
    isfalse $I5006, $P5034
    $P5036 = $P5028."new"($I5006 :named("value"))
    set $P5037, $P5036
  if2864_end6067:
    set $P101, $P5037
.annotate 'line', 2049
    find_lex $P5038, "$/"
    unless_null $P5038, fallback6090
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  fallback6090:
    set fb_tmp_582, $P5038
    repr_defined $I5008, fb_tmp_582
    unless $I5008 goto if2876_else6088 
    set $P5040, fb_tmp_582["identifier"]
    set $P5042, $P5040
    goto if2876_end6089
  if2876_else6088:
    null $P5041
    set $P5042, $P5041
  if2876_end6089:
    unless_null $P5042, vivi_28776091
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_28776091:
    set $S5001, $P5042
    $P101."named"($S5001)
.annotate 'line', 2050
    find_dynamic_lex $P5044, "$/"
    $P5045 = $P5044."!make"($P101)
    .return ($P5045) 
.end
.HLL "nqp"
.namespace []
.sub "variable" :subid("cuid_287_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2054
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_460_1361537952.49511' 
    capture_lex $P5030 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc fb_tmp_585 
    .local pmc pkg_lookup_tmp_194 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback6096
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback6096:
    set fb_tmp_583, _lex_param_1
    repr_defined $I5001, fb_tmp_583
    unless $I5001 goto if2879_else6094 
    set $P5003, fb_tmp_583["postcircumfix"]
    set $P5005, $P5003
    goto if2879_end6095
  if2879_else6094:
    null $P5004
    set $P5005, $P5004
  if2879_end6095:
    unless_null $P5005, vivi_28806097
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_28806097:
    unless $P5005 goto if2878_else6092 
.annotate 'line', 2056
.annotate 'line', 2057
    unless_null _lex_param_1, fallback6100
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5007
  fallback6100:
    set fb_tmp_584, _lex_param_1
    repr_defined $I5002, fb_tmp_584
    unless $I5002 goto if2881_else6098 
    set $P5008, fb_tmp_584["postcircumfix"]
    set $P5010, $P5008
    goto if2881_end6099
  if2881_else6098:
    null $P5009
    set $P5010, $P5009
  if2881_end6099:
    unless_null $P5010, vivi_28826101
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_28826101:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2058
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_194, $P5014
    get_who $P5015, pkg_lookup_tmp_194
    exists $I5004, $P5015["QAST"]
    unless $I5004 goto if2884_else6104 
    get_who $P5017, pkg_lookup_tmp_194
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if2884_end6105
  if2884_else6104:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if2884_end6105:
    get_who $P5013, $P5019
    set fb_tmp_585, $P5013
    repr_defined $I5003, fb_tmp_585
    unless $I5003 goto if2883_else6102 
    set $P5020, fb_tmp_585["VarWithFallback"]
    set $P5022, $P5020
    goto if2883_end6103
  if2883_else6102:
    null $P5021
    set $P5022, $P5021
  if2883_end6103:
    unless_null $P5022, vivi_28856106
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_28856106:
.annotate 'line', 2059
    $P5024 = "&default_for"("$")
    $P5025 = $P5022."new"("$/" :named("name"), "lexical" :named("scope"), $P5024 :named("fallback"))
    $P5026 = $P101."unshift"($P5025)
    goto if2878_end6093
  if2878_else6092:
    .const 'Sub' $P5027 = 'cuid_460_1361537952.49511' 
    capture_lex $P5027
    $P5028 = $P5027()
  if2878_end6093:
.annotate 'line', 2140
    $P5029 = _lex_param_1."!make"($P101)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_460_1361537952.49511") :anon :lex :outer("cuid_287_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2062
    .const 'Sub' $P5089 = 'cuid_459_1361537952.49511' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_463_1361537952.49511' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_464_1361537952.49511' 
    capture_lex $P5089 
    .const 'Sub' $P5089 = 'cuid_465_1361537952.49511' 
    capture_lex $P5089 
    .lex "@name", $P101 
    .local pmc fb_tmp_586 
    .local pmc pkg_lookup_tmp_195 
    .local pmc fb_tmp_587 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_614 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 2063
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_195, $P5003
    get_who $P5004, pkg_lookup_tmp_195
    exists $I5002, $P5004["NQP"]
    unless $I5002 goto if2887_else6109 
    get_who $P5006, pkg_lookup_tmp_195
    set $P5005, $P5006["NQP"]
    set $P5008, $P5005
    goto if2887_end6110
  if2887_else6109:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2887_end6110:
    get_who $P5002, $P5008
    set fb_tmp_586, $P5002
    repr_defined $I5001, fb_tmp_586
    unless $I5001 goto if2886_else6107 
    set $P5009, fb_tmp_586["Compiler"]
    set $P5011, $P5009
    goto if2886_end6108
  if2886_else6107:
    null $P5010
    set $P5011, $P5010
  if2886_end6108:
    unless_null $P5011, vivi_28886111
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_28886111:
    find_lex $P5013, "$/"
    set $S5001, $P5013
    $P5014 = $P5011."parse_name"($S5001)
    set $P101, $P5014
    set $N5001, $P101
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if2889_else6112 
.annotate 'line', 2064
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6118
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  fallback6118:
    set fb_tmp_587, $P5015
    repr_defined $I5004, fb_tmp_587
    unless $I5004 goto if2891_else6116 
    set $P5017, fb_tmp_587["twigil"]
    set $P5019, $P5017
    goto if2891_end6117
  if2891_else6116:
    null $P5018
    set $P5019, $P5018
  if2891_end6117:
    unless_null $P5019, vivi_28926119
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_28926119:
    unless $P5019 goto if2890_end6115 
.annotate 'line', 2065
.annotate 'line', 2066
    find_lex $P5021, "$/"
    $P5022 = $P5021."CURSOR"()
    $P5023 = $P5022."panic"("Twigil not allowed on multi-part name")
  if2890_end6115:
.annotate 'line', 2068
    find_lex $P5024, "$/"
    $P5025 = "&lexical_package_lookup"($P101, $P5024)
    store_lex "$past", $P5025
    set $P5088, $P5025
    goto if2889_end6113
  if2889_else6112:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback6126
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  fallback6126:
    set fb_tmp_589, $P5026
    repr_defined $I5007, fb_tmp_589
    unless $I5007 goto if2895_else6124 
    set $P5028, fb_tmp_589["twigil"]
    set $P5030, $P5028
    goto if2895_end6125
  if2895_else6124:
    null $P5029
    set $P5030, $P5029
  if2895_end6125:
    unless_null $P5030, vivi_28966127
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  vivi_28966127:
    set fb_tmp_588, $P5030
    repr_defined $I5006, fb_tmp_588
    unless $I5006 goto if2894_else6122 
    set $P5032, fb_tmp_588[0]
    set $P5034, $P5032
    goto if2894_end6123
  if2894_else6122:
    null $P5033
    set $P5034, $P5033
  if2894_end6123:
    unless_null $P5034, vivi_28976128
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_28976128:
    set $S5002, $P5034
    iseq $I5005, $S5002, "*"
    unless $I5005 goto if2893_else6120 
    .const 'Sub' $P5036 = 'cuid_459_1361537952.49511' 
    capture_lex $P5036
    $P5037 = $P5036()
    set $P5087, $P5037
    goto if2893_end6121
  if2893_else6120:
    find_lex $P5038, "$/"
    unless_null $P5038, fallback6163
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  fallback6163:
    set fb_tmp_597, $P5038
    repr_defined $I5010, fb_tmp_597
    unless $I5010 goto if2916_else6161 
    set $P5040, fb_tmp_597["twigil"]
    set $P5042, $P5040
    goto if2916_end6162
  if2916_else6161:
    null $P5041
    set $P5042, $P5041
  if2916_end6162:
    unless_null $P5042, vivi_29176164
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_29176164:
    set fb_tmp_596, $P5042
    repr_defined $I5009, fb_tmp_596
    unless $I5009 goto if2915_else6159 
    set $P5044, fb_tmp_596[0]
    set $P5046, $P5044
    goto if2915_end6160
  if2915_else6159:
    null $P5045
    set $P5046, $P5045
  if2915_end6160:
    unless_null $P5046, vivi_29186165
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5047
  vivi_29186165:
    set $S5003, $P5046
    iseq $I5008, $S5003, "!"
    unless $I5008 goto if2914_else6157 
    .const 'Sub' $P5048 = 'cuid_463_1361537952.49511' 
    capture_lex $P5048
    $P5049 = $P5048()
    set $P5086, $P5049
    goto if2914_end6158
  if2914_else6157:
    find_lex $P5050, "$/"
    unless_null $P5050, fallback6239
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  fallback6239:
    set fb_tmp_609, $P5050
    repr_defined $I5011, fb_tmp_609
    unless $I5011 goto if2958_else6237 
    set $P5052, fb_tmp_609["semilist"]
    set $P5054, $P5052
    goto if2958_end6238
  if2958_else6237:
    null $P5053
    set $P5054, $P5053
  if2958_end6238:
    unless_null $P5054, vivi_29596240
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_29596240:
    unless $P5054 goto if2957_else6235 
    .const 'Sub' $P5056 = 'cuid_464_1361537952.49511' 
    capture_lex $P5056
    $P5057 = $P5056()
    set $P5085, $P5057
    goto if2957_end6236
  if2957_else6235:
.annotate 'line', 2125
    find_dynamic_lex $P5058, "$*W"
    unless_null $P5058, fallback6264
    nqp_get_sc_object $P5060, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5059, $P5060
    set fb_tmp_614, $P5059
    repr_defined $I5012, fb_tmp_614
    unless $I5012 goto if2972_else6265 
    set $P5061, fb_tmp_614["$W"]
    set $P5063, $P5061
    goto if2972_end6266
  if2972_else6265:
    null $P5062
    set $P5063, $P5062
  if2972_end6266:
    unless_null $P5063, vivi_29736267
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_29736267:
    unless_null $P5063, vivi_29746268
    die "Contextual $*W not found"
    box $P5065, "Contextual $*W not found"
    set $P5063, $P5065
  vivi_29746268:
    set $P5058, $P5063
  fallback6264:
    set fb_tmp_615, $P101
    repr_defined $I5013, fb_tmp_615
    unless $I5013 goto if2975_else6269 
    set $P5066, fb_tmp_615[0]
    set $P5068, $P5066
    goto if2975_end6270
  if2975_else6269:
    null $P5067
    set $P5068, $P5067
  if2975_end6270:
    unless_null $P5068, vivi_29766271
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_29766271:
    set $S5004, $P5068
    $P5070 = $P5058."is_package"($S5004)
    unless $P5070 goto if2971_else6262 
.annotate 'line', 2126
    find_lex $P5071, "$/"
    $P5072 = "&lexical_package_lookup"($P101, $P5071)
    store_lex "$past", $P5072
.annotate 'line', 2127
    find_lex $P5073, "$past"
    find_lex $P5074, "$/"
    unless_null $P5074, fallback6274
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5075
  fallback6274:
    set fb_tmp_616, $P5074
    repr_defined $I5014, fb_tmp_616
    unless $I5014 goto if2977_else6272 
    set $P5076, fb_tmp_616["sigil"]
    set $P5078, $P5076
    goto if2977_end6273
  if2977_else6272:
    null $P5077
    set $P5078, $P5077
  if2977_end6273:
    unless_null $P5078, vivi_29786275
    nqp_get_sc_object $P5079, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5079
  vivi_29786275:
    $P5080 = "&default_for"($P5078)
    $P5081 = $P5073."fallback"($P5080)
    set $P5084, $P5081
    goto if2971_end6263
  if2971_else6262:
    .const 'Sub' $P5082 = 'cuid_465_1361537952.49511' 
    capture_lex $P5082
    $P5083 = $P5082()
    set $P5084, $P5083
  if2971_end6263:
    set $P5085, $P5084
  if2957_end6236:
    set $P5086, $P5085
  if2914_end6158:
    set $P5087, $P5086
  if2893_end6121:
    set $P5088, $P5087
  if2889_end6113:
    .return ($P5088) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_459_1361537952.49511") :anon :lex :outer("cuid_460_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2070
    .lex "$global_fallback", $P101 
    .local pmc fb_tmp_590 
    .local pmc pkg_lookup_tmp_196 
    .local pmc fb_tmp_591 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc pkg_lookup_tmp_197 
    .local pmc fb_tmp_594 
    .local pmc pkg_lookup_tmp_198 
    .local pmc fb_tmp_595 
    .local pmc pkg_lookup_tmp_199 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2071
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_196, $P5003
    get_who $P5004, pkg_lookup_tmp_196
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if2899_else6131 
    get_who $P5006, pkg_lookup_tmp_196
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if2899_end6132
  if2899_else6131:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if2899_end6132:
    get_who $P5002, $P5008
    set fb_tmp_590, $P5002
    repr_defined $I5001, fb_tmp_590
    unless $I5001 goto if2898_else6129 
    set $P5009, fb_tmp_590["Op"]
    set $P5011, $P5009
    goto if2898_end6130
  if2898_else6129:
    null $P5010
    set $P5011, $P5010
  if2898_end6130:
    unless_null $P5011, vivi_29006133
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_29006133:
.annotate 'line', 2073
    new $P5013, 'ResizablePMCArray'
    box $P5014, "GLOBAL"
    push $P5013, $P5014
    find_lex $P5015, "$/"
    unless_null $P5015, fallback6136
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  fallback6136:
    set fb_tmp_591, $P5015
    repr_defined $I5003, fb_tmp_591
    unless $I5003 goto if2901_else6134 
    set $P5017, fb_tmp_591["sigil"]
    set $P5019, $P5017
    goto if2901_end6135
  if2901_else6134:
    null $P5018
    set $P5019, $P5018
  if2901_end6135:
    unless_null $P5019, vivi_29026137
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_29026137:
    set $S5002, $P5019
    find_lex $P5021, "$/"
    unless_null $P5021, fallback6140
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  fallback6140:
    set fb_tmp_592, $P5021
    repr_defined $I5004, fb_tmp_592
    unless $I5004 goto if2903_else6138 
    set $P5023, fb_tmp_592["desigilname"]
    set $P5025, $P5023
    goto if2903_end6139
  if2903_else6138:
    null $P5024
    set $P5025, $P5024
  if2903_end6139:
    unless_null $P5025, vivi_29046141
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_29046141:
    set $S5003, $P5025
    concat $S5001, $S5002, $S5003
    box $P5027, $S5001
    push $P5013, $P5027
    find_lex $P5028, "$/"
    $P5029 = "&lexical_package_lookup"($P5013, $P5028)
.annotate 'line', 2074
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_197, $P5031
    get_who $P5032, pkg_lookup_tmp_197
    exists $I5006, $P5032["QAST"]
    unless $I5006 goto if2906_else6144 
    get_who $P5034, pkg_lookup_tmp_197
    set $P5033, $P5034["QAST"]
    set $P5036, $P5033
    goto if2906_end6145
  if2906_else6144:
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5035
  if2906_end6145:
    get_who $P5030, $P5036
    set fb_tmp_593, $P5030
    repr_defined $I5005, fb_tmp_593
    unless $I5005 goto if2905_else6142 
    set $P5037, fb_tmp_593["Op"]
    set $P5039, $P5037
    goto if2905_end6143
  if2905_else6142:
    null $P5038
    set $P5039, $P5038
  if2905_end6143:
    unless_null $P5039, vivi_29076146
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_29076146:
.annotate 'line', 2076
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_198, $P5042
    get_who $P5043, pkg_lookup_tmp_198
    exists $I5008, $P5043["QAST"]
    unless $I5008 goto if2909_else6149 
    get_who $P5045, pkg_lookup_tmp_198
    set $P5044, $P5045["QAST"]
    set $P5047, $P5044
    goto if2909_end6150
  if2909_else6149:
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5046
  if2909_end6150:
    get_who $P5041, $P5047
    set fb_tmp_594, $P5041
    repr_defined $I5007, fb_tmp_594
    unless $I5007 goto if2908_else6147 
    set $P5048, fb_tmp_594["SVal"]
    set $P5050, $P5048
    goto if2908_end6148
  if2908_else6147:
    null $P5049
    set $P5050, $P5049
  if2908_end6148:
    unless_null $P5050, vivi_29106151
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_29106151:
    find_lex $P5052, "$/"
    set $S5006, $P5052
    concat $S5005, "Contextual ", $S5006
    concat $S5004, $S5005, " not found"
    $P5053 = $P5050."new"($S5004 :named("value"))
    $P5054 = $P5039."new"($P5053, "die_s" :named("op"))
    $P5055 = $P5011."new"($P5029, $P5054, "ifnull" :named("op"))
    set $P101, $P5055
.annotate 'line', 2078
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_199, $P5057
    get_who $P5058, pkg_lookup_tmp_199
    exists $I5010, $P5058["QAST"]
    unless $I5010 goto if2912_else6154 
    get_who $P5060, pkg_lookup_tmp_199
    set $P5059, $P5060["QAST"]
    set $P5062, $P5059
    goto if2912_end6155
  if2912_else6154:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if2912_end6155:
    get_who $P5056, $P5062
    set fb_tmp_595, $P5056
    repr_defined $I5009, fb_tmp_595
    unless $I5009 goto if2911_else6152 
    set $P5063, fb_tmp_595["VarWithFallback"]
    set $P5065, $P5063
    goto if2911_end6153
  if2911_else6152:
    null $P5064
    set $P5065, $P5064
  if2911_end6153:
    unless_null $P5065, vivi_29136156
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_29136156:
.annotate 'line', 2079
    find_lex $P5067, "@name"
    $P5068 = $P5067."pop"()
    set $S5007, $P5068
    $P5069 = $P5065."new"($S5007 :named("name"), "contextual" :named("scope"), $P101 :named("fallback"))
    store_lex "$past", $P5069
    .return ($P5069) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_463_1361537952.49511") :anon :lex :outer("cuid_460_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2083
    .const 'Sub' $P5102 = 'cuid_462_1361537952.49511' 
    capture_lex $P5102 
    .lex "$name", $P101 
    .lex "$ch", $P102 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc pkg_lookup_tmp_200 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    .local pmc pkg_lookup_tmp_201 
    .local pmc fb_tmp_602 
    .local pmc fb_tmp_603 
    .local pmc pkg_lookup_tmp_202 
    .local pmc fb_tmp_604 
    .local pmc pkg_lookup_tmp_203 
    .local pmc fb_tmp_605 
    .local pmc pkg_lookup_tmp_204 
    .local pmc fb_tmp_606 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2084
    find_lex $P5003, "@name"
    $P5004 = $P5003."pop"()
    set $S5001, $P5004
    box $P5005, $S5001
    set $P101, $P5005
    find_dynamic_lex $P5006, "$*PKGDECL"
    unless_null $P5006, fallback6168
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5007, $P5008
    set fb_tmp_598, $P5007
    repr_defined $I5002, fb_tmp_598
    unless $I5002 goto if2920_else6169 
    set $P5009, fb_tmp_598["$PKGDECL"]
    set $P5011, $P5009
    goto if2920_end6170
  if2920_else6169:
    null $P5010
    set $P5011, $P5010
  if2920_end6170:
    unless_null $P5011, vivi_29216171
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_29216171:
    unless_null $P5011, vivi_29226172
    die "Contextual $*PKGDECL not found"
    box $P5013, "Contextual $*PKGDECL not found"
    set $P5011, $P5013
  vivi_29226172:
    set $P5006, $P5011
  fallback6168:
    set $S5002, $P5006
    iseq $I5001, $S5002, "role"
    unless $I5001 goto if2919_else6166 
.annotate 'line', 2086
.annotate 'line', 2087
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_200, $P5015
    get_who $P5016, pkg_lookup_tmp_200
    exists $I5004, $P5016["QAST"]
    unless $I5004 goto if2924_else6175 
    get_who $P5018, pkg_lookup_tmp_200
    set $P5017, $P5018["QAST"]
    set $P5020, $P5017
    goto if2924_end6176
  if2924_else6175:
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5019
  if2924_end6176:
    get_who $P5014, $P5020
    set fb_tmp_599, $P5014
    repr_defined $I5003, fb_tmp_599
    unless $I5003 goto if2923_else6173 
    set $P5021, fb_tmp_599["Var"]
    set $P5023, $P5021
    goto if2923_end6174
  if2923_else6173:
    null $P5022
    set $P5023, $P5022
  if2923_end6174:
    unless_null $P5023, vivi_29256177
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_29256177:
    $P5025 = $P5023."new"("$?CLASS" :named("name"), "lexical" :named("scope"))
    set $P102, $P5025
.annotate 'line', 2088
    find_dynamic_lex $P5026, "$*PACKAGE"
    unless_null $P5026, fallback6178
    nqp_get_sc_object $P5028, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5027, $P5028
    set fb_tmp_600, $P5027
    repr_defined $I5005, fb_tmp_600
    unless $I5005 goto if2926_else6179 
    set $P5029, fb_tmp_600["$PACKAGE"]
    set $P5031, $P5029
    goto if2926_end6180
  if2926_else6179:
    null $P5030
    set $P5031, $P5030
  if2926_end6180:
    unless_null $P5031, vivi_29276181
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_29276181:
    unless_null $P5031, vivi_29286182
    die "Contextual $*PACKAGE not found"
    box $P5033, "Contextual $*PACKAGE not found"
    set $P5031, $P5033
  vivi_29286182:
    set $P5026, $P5031
  fallback6178:
    $P5034 = $P102."set_compile_time_value"($P5026)
    goto if2919_end6167
  if2919_else6166:
.annotate 'line', 2090
.annotate 'line', 2091
    nqp_get_sc_object $P5036, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_201, $P5036
    get_who $P5037, pkg_lookup_tmp_201
    exists $I5007, $P5037["QAST"]
    unless $I5007 goto if2930_else6185 
    get_who $P5039, pkg_lookup_tmp_201
    set $P5038, $P5039["QAST"]
    set $P5041, $P5038
    goto if2930_end6186
  if2930_else6185:
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5041, $P5040
  if2930_end6186:
    get_who $P5035, $P5041
    set fb_tmp_601, $P5035
    repr_defined $I5006, fb_tmp_601
    unless $I5006 goto if2929_else6183 
    set $P5042, fb_tmp_601["WVal"]
    set $P5044, $P5042
    goto if2929_end6184
  if2929_else6183:
    null $P5043
    set $P5044, $P5043
  if2929_end6184:
    unless_null $P5044, vivi_29316187
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5045
  vivi_29316187:
    find_dynamic_lex $P5046, "$*PACKAGE"
    unless_null $P5046, fallback6188
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5047, $P5048
    set fb_tmp_602, $P5047
    repr_defined $I5008, fb_tmp_602
    unless $I5008 goto if2932_else6189 
    set $P5049, fb_tmp_602["$PACKAGE"]
    set $P5051, $P5049
    goto if2932_end6190
  if2932_else6189:
    null $P5050
    set $P5051, $P5050
  if2932_end6190:
    unless_null $P5051, vivi_29336191
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_29336191:
    unless_null $P5051, vivi_29346192
    die "Contextual $*PACKAGE not found"
    box $P5053, "Contextual $*PACKAGE not found"
    set $P5051, $P5053
  vivi_29346192:
    set $P5046, $P5051
  fallback6188:
    $P5054 = $P5044."new"($P5046 :named("value"))
    set $P102, $P5054
  if2919_end6167:
.annotate 'line', 2093
    nqp_get_sc_object $P5056, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_202, $P5056
    get_who $P5057, pkg_lookup_tmp_202
    exists $I5010, $P5057["QAST"]
    unless $I5010 goto if2936_else6195 
    get_who $P5059, pkg_lookup_tmp_202
    set $P5058, $P5059["QAST"]
    set $P5061, $P5058
    goto if2936_end6196
  if2936_else6195:
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5061, $P5060
  if2936_end6196:
    get_who $P5055, $P5061
    set fb_tmp_603, $P5055
    repr_defined $I5009, fb_tmp_603
    unless $I5009 goto if2935_else6193 
    set $P5062, fb_tmp_603["Var"]
    set $P5064, $P5062
    goto if2935_end6194
  if2935_else6193:
    null $P5063
    set $P5064, $P5063
  if2935_end6194:
    unless_null $P5064, vivi_29376197
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_29376197:
.annotate 'line', 2095
    nqp_get_sc_object $P5067, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_203, $P5067
    get_who $P5068, pkg_lookup_tmp_203
    exists $I5012, $P5068["QAST"]
    unless $I5012 goto if2939_else6200 
    get_who $P5070, pkg_lookup_tmp_203
    set $P5069, $P5070["QAST"]
    set $P5072, $P5069
    goto if2939_end6201
  if2939_else6200:
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5071
  if2939_end6201:
    get_who $P5066, $P5072
    set fb_tmp_604, $P5066
    repr_defined $I5011, fb_tmp_604
    unless $I5011 goto if2938_else6198 
    set $P5073, fb_tmp_604["Op"]
    set $P5075, $P5073
    goto if2938_end6199
  if2938_else6198:
    null $P5074
    set $P5075, $P5074
  if2938_end6199:
    unless_null $P5075, vivi_29406202
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_29406202:
.annotate 'line', 2096
    nqp_get_sc_object $P5078, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_204, $P5078
    get_who $P5079, pkg_lookup_tmp_204
    exists $I5014, $P5079["QAST"]
    unless $I5014 goto if2942_else6205 
    get_who $P5081, pkg_lookup_tmp_204
    set $P5080, $P5081["QAST"]
    set $P5083, $P5080
    goto if2942_end6206
  if2942_else6205:
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5083, $P5082
  if2942_end6206:
    get_who $P5077, $P5083
    set fb_tmp_605, $P5077
    repr_defined $I5013, fb_tmp_605
    unless $I5013 goto if2941_else6203 
    set $P5084, fb_tmp_605["Var"]
    set $P5086, $P5084
    goto if2941_end6204
  if2941_else6203:
    null $P5085
    set $P5086, $P5085
  if2941_end6204:
    unless_null $P5086, vivi_29436207
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5086, $P5087
  vivi_29436207:
    $P5088 = $P5086."new"("self" :named("name"), "lexical" :named("scope"))
    $P5089 = $P5075."new"($P5088, "decont" :named("op"))
    $P5090 = $P5064."new"($P5089, $P102, $P101 :named("name"), "attribute" :named("scope"))
    store_lex "$past", $P5090
    find_dynamic_lex $P5091, "$*IN_DECL"
    unless_null $P5091, fallback6210
    nqp_get_sc_object $P5093, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5092, $P5093
    set fb_tmp_606, $P5092
    repr_defined $I5015, fb_tmp_606
    unless $I5015 goto if2945_else6211 
    set $P5094, fb_tmp_606["$IN_DECL"]
    set $P5096, $P5094
    goto if2945_end6212
  if2945_else6211:
    null $P5095
    set $P5096, $P5095
  if2945_end6212:
    unless_null $P5096, vivi_29466213
    nqp_get_sc_object $P5097, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5097
  vivi_29466213:
    unless_null $P5096, vivi_29476214
    die "Contextual $*IN_DECL not found"
    box $P5098, "Contextual $*IN_DECL not found"
    set $P5096, $P5098
  vivi_29476214:
    set $P5091, $P5096
  fallback6210:
    set $P5101, $P5091
    if $P5091 goto unless2944_end6209 
    .const 'Sub' $P5099 = 'cuid_462_1361537952.49511' 
    capture_lex $P5099
    $P5100 = $P5099()
    set $P5101, $P5100
  unless2944_end6209:
    .return ($P5101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_462_1361537952.49511") :anon :lex :outer("cuid_463_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2101
    .const 'Sub' $P5036 = 'cuid_461_1361537952.49511' 
    capture_lex $P5036 
    .lex "$attr", $P101 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2103
    find_dynamic_lex $P5006, "$*PACKAGE"
    unless_null $P5006, fallback6215
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5007, $P5008
    set fb_tmp_607, $P5007
    repr_defined $I5001, fb_tmp_607
    unless $I5001 goto if2948_else6216 
    set $P5009, fb_tmp_607["$PACKAGE"]
    set $P5011, $P5009
    goto if2948_end6217
  if2948_else6216:
    null $P5010
    set $P5011, $P5010
  if2948_end6217:
    unless_null $P5011, vivi_29496218
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_29496218:
    unless_null $P5011, vivi_29506219
    die "Contextual $*PACKAGE not found"
    box $P5013, "Contextual $*PACKAGE not found"
    set $P5011, $P5013
  vivi_29506219:
    set $P5006, $P5011
  fallback6215:
    get_how $P5005, $P5006
    find_dynamic_lex $P5014, "$*PACKAGE"
    unless_null $P5014, fallback6220
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5015, $P5016
    set fb_tmp_608, $P5015
    repr_defined $I5002, fb_tmp_608
    unless $I5002 goto if2951_else6221 
    set $P5017, fb_tmp_608["$PACKAGE"]
    set $P5019, $P5017
    goto if2951_end6222
  if2951_else6221:
    null $P5018
    set $P5019, $P5018
  if2951_end6222:
    unless_null $P5019, vivi_29526223
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_29526223:
    unless_null $P5019, vivi_29536224
    die "Contextual $*PACKAGE not found"
    box $P5021, "Contextual $*PACKAGE not found"
    set $P5019, $P5021
  vivi_29536224:
    set $P5014, $P5019
  fallback6220:
    $P5022 = $P5005."attributes"($P5014, 1 :named("local"))
    set $P5002, $P5022
    iter $P5004, $P5022
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, for_handlers6227
    push_eh $P5024
  for_next6228:
    unless $P5004, for_done6230
    shift $P5025, $P5004
  for_redo6229:
    .const 'Sub' $P5023 = 'cuid_461_1361537952.49511' 
    capture_lex $P5023
    $P5002 = $P5023($P5025)
    goto for_next6228
  for_handlers6227:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5024, $P5024, 'type'
    eq $P5024, .CONTROL_LOOP_NEXT, for_next6228
    eq $P5024, .CONTROL_LOOP_REDO, for_redo6229
  for_done6230:
    pop_eh 
    defined $I5003, $P101
    unless $I5003 goto if2955_else6231 
.annotate 'line', 2109
    can $I5004, $P101, "type"
    box $P5030, $I5004
    set $P5029, $P5030
    unless $I5004 goto if2956_end6234 
.annotate 'line', 2110
.annotate 'line', 2111
    find_lex $P5026, "$past"
    $P5027 = $P101."type"()
    $P5028 = $P5026."returns"($P5027)
    set $P5029, $P5028
  if2956_end6234:
    set $P5035, $P5029
    goto if2955_end6232
  if2955_else6231:
.annotate 'line', 2114
.annotate 'line', 2115
    find_lex $P5031, "$/"
    $P5032 = $P5031."CURSOR"()
    find_lex $P5033, "$name"
    set $S5003, $P5033
    concat $S5002, "Attribute '", $S5003
    concat $S5001, $S5002, "' not declared"
    $P5034 = $P5032."panic"($S5001)
    set $P5035, $P5034
  if2955_end6232:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_461_1361537952.49511") :anon :lex :outer("cuid_462_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2103
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2104
    $P5001 = _lex_param_0."name"()
    set $S5001, $P5001
    find_lex $P5002, "$name"
    set $S5002, $P5002
    iseq $I5001, $S5001, $S5002
    set $I5002, $I5001
    unless $I5001 goto if2954_end6226 
    store_lex "$attr", _lex_param_0
    die 0, .CONTROL_LOOP_LAST
    set $I5002, 0
  if2954_end6226:
    .return ($I5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_464_1361537952.49511") :anon :lex :outer("cuid_460_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2119
    .lex "$name", $P101 
    .local pmc fb_tmp_610 
    .local pmc fb_tmp_611 
    .local pmc fb_tmp_612 
    .local pmc pkg_lookup_tmp_205 
    .local pmc fb_tmp_613 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback6245
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback6245:
    set fb_tmp_610, $P5002
    repr_defined $I5002, fb_tmp_610
    unless $I5002 goto if2961_else6243 
    set $P5004, fb_tmp_610["sigil"]
    set $P5006, $P5004
    goto if2961_end6244
  if2961_else6243:
    null $P5005
    set $P5006, $P5005
  if2961_end6244:
    unless_null $P5006, vivi_29626246
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_29626246:
    set $S5001, $P5006
    iseq $I5001, $S5001, "@"
    unless $I5001 goto if2960_else6241 
    set $S5004, "list"
    goto if2960_end6242
  if2960_else6241:
    find_lex $P5008, "$/"
    unless_null $P5008, fallback6251
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  fallback6251:
    set fb_tmp_611, $P5008
    repr_defined $I5004, fb_tmp_611
    unless $I5004 goto if2964_else6249 
    set $P5010, fb_tmp_611["sigil"]
    set $P5012, $P5010
    goto if2964_end6250
  if2964_else6249:
    null $P5011
    set $P5012, $P5011
  if2964_end6250:
    unless_null $P5012, vivi_29656252
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_29656252:
    set $S5002, $P5012
    iseq $I5003, $S5002, "%"
    unless $I5003 goto if2963_else6247 
    set $S5003, "hash"
    goto if2963_end6248
  if2963_else6247:
    set $S5003, "item"
  if2963_end6248:
    set $S5004, $S5003
  if2960_end6242:
    box $P5014, $S5004
    set $P101, $P5014
.annotate 'line', 2123
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_205, $P5016
    get_who $P5017, pkg_lookup_tmp_205
    exists $I5006, $P5017["QAST"]
    unless $I5006 goto if2967_else6255 
    get_who $P5019, pkg_lookup_tmp_205
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if2967_end6256
  if2967_else6255:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if2967_end6256:
    get_who $P5015, $P5021
    set fb_tmp_612, $P5015
    repr_defined $I5005, fb_tmp_612
    unless $I5005 goto if2966_else6253 
    set $P5022, fb_tmp_612["Op"]
    set $P5024, $P5022
    goto if2966_end6254
  if2966_else6253:
    null $P5023
    set $P5024, $P5023
  if2966_end6254:
    unless_null $P5024, vivi_29686257
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_29686257:
    find_lex $P5026, "$/"
    unless_null $P5026, fallback6260
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  fallback6260:
    set fb_tmp_613, $P5026
    repr_defined $I5007, fb_tmp_613
    unless $I5007 goto if2969_else6258 
    set $P5028, fb_tmp_613["semilist"]
    set $P5030, $P5028
    goto if2969_end6259
  if2969_else6258:
    null $P5029
    set $P5030, $P5029
  if2969_end6259:
    unless_null $P5030, vivi_29706261
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  vivi_29706261:
    $P5032 = $P5030."ast"()
    $P5033 = $P5024."new"($P5032, "callmethod" :named("op"), $P101 :named("name"))
    store_lex "$past", $P5033
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_465_1361537952.49511") :anon :lex :outer("cuid_460_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2129
    .lex "$name", $P101 
    .local pmc fb_tmp_617 
    .local pmc fb_tmp_618 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc fb_tmp_621 
    .local pmc pkg_lookup_tmp_206 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2130
    find_lex $P5002, "@name"
    $P5003 = $P5002."pop"()
    set $S5001, $P5003
    box $P5004, $S5001
    set $P101, $P5004
    find_dynamic_lex $P5005, "$*IN_DECL"
    unless_null $P5005, fallback6288
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5006, $P5007
    set fb_tmp_617, $P5006
    repr_defined $I5002, fb_tmp_617
    unless $I5002 goto if2985_else6289 
    set $P5008, fb_tmp_617["$IN_DECL"]
    set $P5010, $P5008
    goto if2985_end6290
  if2985_else6289:
    null $P5009
    set $P5010, $P5009
  if2985_end6290:
    unless_null $P5010, vivi_29866291
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_29866291:
    unless_null $P5010, vivi_29876292
    die "Contextual $*IN_DECL not found"
    box $P5012, "Contextual $*IN_DECL not found"
    set $P5010, $P5012
  vivi_29876292:
    set $P5005, $P5010
  fallback6288:
    set $S5002, $P5005
    iseq $I5001, $S5002, "variable"
    set $I5004, $I5001
    if $I5001 goto unless2984_end6287 
    set $S5003, $P101
    iseq $I5003, $S5003, "$_"
    set $I5004, $I5003
  unless2984_end6287:
    set $I5006, $I5004
    if $I5004 goto unless2983_end6285 
    set $S5004, $P101
    iseq $I5005, $S5004, "$/"
    set $I5006, $I5005
  unless2983_end6285:
    set $I5008, $I5006
    if $I5006 goto unless2982_end6283 
    set $S5005, $P101
    iseq $I5007, $S5005, "$!"
    set $I5008, $I5007
  unless2982_end6283:
    set $I5012, $I5008
    if $I5008 goto unless2981_end6281 
    find_lex $P5013, "$/"
    unless_null $P5013, fallback6297
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  fallback6297:
    set fb_tmp_619, $P5013
    repr_defined $I5011, fb_tmp_619
    unless $I5011 goto if2989_else6295 
    set $P5015, fb_tmp_619["twigil"]
    set $P5017, $P5015
    goto if2989_end6296
  if2989_else6295:
    null $P5016
    set $P5017, $P5016
  if2989_end6296:
    unless_null $P5017, vivi_29906298
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_29906298:
    set fb_tmp_618, $P5017
    repr_defined $I5010, fb_tmp_618
    unless $I5010 goto if2988_else6293 
    set $P5019, fb_tmp_618[0]
    set $P5021, $P5019
    goto if2988_end6294
  if2988_else6293:
    null $P5020
    set $P5021, $P5020
  if2988_end6294:
    unless_null $P5021, vivi_29916299
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_29916299:
    set $S5006, $P5021
    iseq $I5009, $S5006, "?"
    set $I5012, $I5009
  unless2981_end6281:
    box $P5033, $I5012
    set $P5032, $P5033
    if $I5012 goto unless2980_end6279 
.annotate 'line', 2132
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback6300
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5024, $P5025
    set fb_tmp_620, $P5024
    repr_defined $I5013, fb_tmp_620
    unless $I5013 goto if2992_else6301 
    set $P5026, fb_tmp_620["$W"]
    set $P5028, $P5026
    goto if2992_end6302
  if2992_else6301:
    null $P5027
    set $P5028, $P5027
  if2992_end6302:
    unless_null $P5028, vivi_29936303
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_29936303:
    unless_null $P5028, vivi_29946304
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_29946304:
    set $P5023, $P5028
  fallback6300:
    $P5031 = $P5023."is_lexical"($P101)
    set $P5032, $P5031
  unless2980_end6279:
    unless $P5032 goto if2979_else6276 
.annotate 'line', 2133
    nqp_get_sc_object $P5035, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_206, $P5035
    get_who $P5036, pkg_lookup_tmp_206
    exists $I5015, $P5036["QAST"]
    unless $I5015 goto if2996_else6307 
    get_who $P5038, pkg_lookup_tmp_206
    set $P5037, $P5038["QAST"]
    set $P5040, $P5037
    goto if2996_end6308
  if2996_else6307:
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5039
  if2996_end6308:
    get_who $P5034, $P5040
    set fb_tmp_621, $P5034
    repr_defined $I5014, fb_tmp_621
    unless $I5014 goto if2995_else6305 
    set $P5041, fb_tmp_621["Var"]
    set $P5043, $P5041
    goto if2995_end6306
  if2995_else6305:
    null $P5042
    set $P5043, $P5042
  if2995_end6306:
    unless_null $P5043, vivi_29976309
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_29976309:
    $P5045 = $P5043."new"($P101 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5045
    set $P5049, $P5045
    goto if2979_end6277
  if2979_else6276:
.annotate 'line', 2135
.annotate 'line', 2136
    find_lex $P5046, "$/"
    $P5047 = $P5046."CURSOR"()
    set $S5009, $P101
    concat $S5008, "Use of undeclared variable '", $S5009
    concat $S5007, $S5008, "'"
    $P5048 = $P5047."panic"($S5007)
    set $P5049, $P5048
  if2979_end6277:
    .return ($P5049) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<module>" :subid("cuid_288_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2143
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_622 
    unless_null _lex_param_1, fallback6312
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6312:
    set fb_tmp_622, _lex_param_1
    repr_defined $I5001, fb_tmp_622
    unless $I5001 goto if2998_else6310 
    set $P5002, fb_tmp_622["package_def"]
    set $P5004, $P5002
    goto if2998_end6311
  if2998_else6310:
    null $P5003
    set $P5004, $P5003
  if2998_end6311:
    unless_null $P5004, vivi_29996313
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_29996313:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<knowhow>" :subid("cuid_289_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_623 
    unless_null _lex_param_1, fallback6316
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6316:
    set fb_tmp_623, _lex_param_1
    repr_defined $I5001, fb_tmp_623
    unless $I5001 goto if3000_else6314 
    set $P5002, fb_tmp_623["package_def"]
    set $P5004, $P5002
    goto if3000_end6315
  if3000_else6314:
    null $P5003
    set $P5004, $P5003
  if3000_end6315:
    unless_null $P5004, vivi_30016317
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_30016317:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<class>" :subid("cuid_290_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_624 
    unless_null _lex_param_1, fallback6320
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6320:
    set fb_tmp_624, _lex_param_1
    repr_defined $I5001, fb_tmp_624
    unless $I5001 goto if3002_else6318 
    set $P5002, fb_tmp_624["package_def"]
    set $P5004, $P5002
    goto if3002_end6319
  if3002_else6318:
    null $P5003
    set $P5004, $P5003
  if3002_end6319:
    unless_null $P5004, vivi_30036321
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_30036321:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<grammar>" :subid("cuid_291_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2146
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_625 
    unless_null _lex_param_1, fallback6324
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6324:
    set fb_tmp_625, _lex_param_1
    repr_defined $I5001, fb_tmp_625
    unless $I5001 goto if3004_else6322 
    set $P5002, fb_tmp_625["package_def"]
    set $P5004, $P5002
    goto if3004_end6323
  if3004_else6322:
    null $P5003
    set $P5004, $P5003
  if3004_end6323:
    unless_null $P5004, vivi_30056325
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_30056325:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<role>" :subid("cuid_292_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2147
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_626 
    unless_null _lex_param_1, fallback6328
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6328:
    set fb_tmp_626, _lex_param_1
    repr_defined $I5001, fb_tmp_626
    unless $I5001 goto if3006_else6326 
    set $P5002, fb_tmp_626["package_def"]
    set $P5004, $P5002
    goto if3006_end6327
  if3006_else6326:
    null $P5003
    set $P5004, $P5003
  if3006_end6327:
    unless_null $P5004, vivi_30076329
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_30076329:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<native>" :subid("cuid_293_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2148
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_627 
    unless_null _lex_param_1, fallback6332
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6332:
    set fb_tmp_627, _lex_param_1
    repr_defined $I5001, fb_tmp_627
    unless $I5001 goto if3008_else6330 
    set $P5002, fb_tmp_627["package_def"]
    set $P5004, $P5002
    goto if3008_end6331
  if3008_else6330:
    null $P5003
    set $P5004, $P5003
  if3008_end6331:
    unless_null $P5004, vivi_30096333
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_30096333:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "package_declarator:sym<stub>" :subid("cuid_294_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2150
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$HOW", $P101 
    .lex "$PACKAGE", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_628 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_630 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc fb_tmp_656 
    .local pmc pkg_lookup_tmp_207 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2153
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6334
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_628, $P5004
    repr_defined $I5001, fb_tmp_628
    unless $I5001 goto if3010_else6335 
    set $P5006, fb_tmp_628["$W"]
    set $P5008, $P5006
    goto if3010_end6336
  if3010_else6335:
    null $P5007
    set $P5008, $P5007
  if3010_end6336:
    unless_null $P5008, vivi_30116337
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_30116337:
    unless_null $P5008, vivi_30126338
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_30126338:
    set $P5003, $P5008
  fallback6334:
    unless_null _lex_param_1, fallback6343
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5011
  fallback6343:
    set fb_tmp_630, _lex_param_1
    repr_defined $I5003, fb_tmp_630
    unless $I5003 goto if3014_else6341 
    set $P5012, fb_tmp_630["metaclass"]
    set $P5014, $P5012
    goto if3014_end6342
  if3014_else6341:
    null $P5013
    set $P5014, $P5013
  if3014_end6342:
    unless_null $P5014, vivi_30156344
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_30156344:
    set fb_tmp_629, $P5014
    repr_defined $I5002, fb_tmp_629
    unless $I5002 goto if3013_else6339 
    set $P5016, fb_tmp_629["identifier"]
    set $P5018, $P5016
    goto if3013_end6340
  if3013_else6339:
    null $P5017
    set $P5018, $P5017
  if3013_end6340:
    unless_null $P5018, vivi_30166345
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_30166345:
    $P5020 = $P5003."find_sym"($P5018)
    set $P101, $P5020
.annotate 'line', 2154
    find_dynamic_lex $P5021, "$*W"
    unless_null $P5021, fallback6346
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5022, $P5023
    set fb_tmp_631, $P5022
    repr_defined $I5004, fb_tmp_631
    unless $I5004 goto if3017_else6347 
    set $P5024, fb_tmp_631["$W"]
    set $P5026, $P5024
    goto if3017_end6348
  if3017_else6347:
    null $P5025
    set $P5026, $P5025
  if3017_end6348:
    unless_null $P5026, vivi_30186349
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_30186349:
    unless_null $P5026, vivi_30196350
    die "Contextual $*W not found"
    box $P5028, "Contextual $*W not found"
    set $P5026, $P5028
  vivi_30196350:
    set $P5021, $P5026
  fallback6346:
    unless_null _lex_param_1, fallback6353
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5029
  fallback6353:
    set fb_tmp_632, _lex_param_1
    repr_defined $I5005, fb_tmp_632
    unless $I5005 goto if3020_else6351 
    set $P5030, fb_tmp_632["name"]
    set $P5032, $P5030
    goto if3020_end6352
  if3020_else6351:
    null $P5031
    set $P5032, $P5031
  if3020_end6352:
    unless_null $P5032, vivi_30216354
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_30216354:
    set $S5001, $P5032
    $P5034 = $P5021."pkg_create_mo"($P101, $S5001 :named("name"))
    set $P102, $P5034
    find_dynamic_lex $P5035, "$*SCOPE"
    unless_null $P5035, fallback6359
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5036, $P5037
    set fb_tmp_633, $P5036
    repr_defined $I5007, fb_tmp_633
    unless $I5007 goto if3024_else6360 
    set $P5038, fb_tmp_633["$SCOPE"]
    set $P5040, $P5038
    goto if3024_end6361
  if3024_else6360:
    null $P5039
    set $P5040, $P5039
  if3024_end6361:
    unless_null $P5040, vivi_30256362
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_30256362:
    unless_null $P5040, vivi_30266363
    die "Contextual $*SCOPE not found"
    box $P5042, "Contextual $*SCOPE not found"
    set $P5040, $P5042
  vivi_30266363:
    set $P5035, $P5040
  fallback6359:
    set $S5002, $P5035
    iseq $I5006, $S5002, "our"
    set $I5010, $I5006
    if $I5006 goto unless3023_end6358 
    find_dynamic_lex $P5043, "$*SCOPE"
    unless_null $P5043, fallback6364
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5044, $P5045
    set fb_tmp_634, $P5044
    repr_defined $I5009, fb_tmp_634
    unless $I5009 goto if3027_else6365 
    set $P5046, fb_tmp_634["$SCOPE"]
    set $P5048, $P5046
    goto if3027_end6366
  if3027_else6365:
    null $P5047
    set $P5048, $P5047
  if3027_end6366:
    unless_null $P5048, vivi_30286367
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_30286367:
    unless_null $P5048, vivi_30296368
    die "Contextual $*SCOPE not found"
    box $P5050, "Contextual $*SCOPE not found"
    set $P5048, $P5050
  vivi_30296368:
    set $P5043, $P5048
  fallback6364:
    set $S5003, $P5043
    iseq $I5008, $S5003, ""
    set $I5010, $I5008
  unless3023_end6358:
    unless $I5010 goto if3022_else6355 
.annotate 'line', 2157
.annotate 'line', 2158
    find_dynamic_lex $P5051, "$*W"
    unless_null $P5051, fallback6369
    nqp_get_sc_object $P5053, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5052, $P5053
    set fb_tmp_635, $P5052
    repr_defined $I5011, fb_tmp_635
    unless $I5011 goto if3030_else6370 
    set $P5054, fb_tmp_635["$W"]
    set $P5056, $P5054
    goto if3030_end6371
  if3030_else6370:
    null $P5055
    set $P5056, $P5055
  if3030_end6371:
    unless_null $P5056, vivi_30316372
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_30316372:
    unless_null $P5056, vivi_30326373
    die "Contextual $*W not found"
    box $P5058, "Contextual $*W not found"
    set $P5056, $P5058
  vivi_30326373:
    set $P5051, $P5056
  fallback6369:
    find_dynamic_lex $P5059, "$*OUTERPACKAGE"
    unless_null $P5059, fallback6374
    nqp_get_sc_object $P5061, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5060, $P5061
    set fb_tmp_636, $P5060
    repr_defined $I5012, fb_tmp_636
    unless $I5012 goto if3033_else6375 
    set $P5062, fb_tmp_636["$OUTERPACKAGE"]
    set $P5064, $P5062
    goto if3033_end6376
  if3033_else6375:
    null $P5063
    set $P5064, $P5063
  if3033_end6376:
    unless_null $P5064, vivi_30346377
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_30346377:
    unless_null $P5064, vivi_30356378
    die "Contextual $*OUTERPACKAGE not found"
    box $P5066, "Contextual $*OUTERPACKAGE not found"
    set $P5064, $P5066
  vivi_30356378:
    set $P5059, $P5064
  fallback6374:
    unless_null _lex_param_1, fallback6383
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5067
  fallback6383:
    set fb_tmp_638, _lex_param_1
    repr_defined $I5014, fb_tmp_638
    unless $I5014 goto if3037_else6381 
    set $P5068, fb_tmp_638["name"]
    set $P5070, $P5068
    goto if3037_end6382
  if3037_else6381:
    null $P5069
    set $P5070, $P5069
  if3037_end6382:
    unless_null $P5070, vivi_30386384
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_30386384:
    set fb_tmp_637, $P5070
    repr_defined $I5013, fb_tmp_637
    unless $I5013 goto if3036_else6379 
    set $P5072, fb_tmp_637["identifier"]
    set $P5074, $P5072
    goto if3036_end6380
  if3036_else6379:
    null $P5073
    set $P5074, $P5073
  if3036_end6380:
    unless_null $P5074, vivi_30396385
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5075
  vivi_30396385:
    $P5051."install_package_symbol"($P5059, $P5074, $P102)
    unless_null _lex_param_1, fallback6392
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5076
  fallback6392:
    set fb_tmp_640, _lex_param_1
    repr_defined $I5017, fb_tmp_640
    unless $I5017 goto if3042_else6390 
    set $P5077, fb_tmp_640["name"]
    set $P5079, $P5077
    goto if3042_end6391
  if3042_else6390:
    null $P5078
    set $P5079, $P5078
  if3042_end6391:
    unless_null $P5079, vivi_30436393
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_30436393:
    set fb_tmp_639, $P5079
    repr_defined $I5016, fb_tmp_639
    unless $I5016 goto if3041_else6388 
    set $P5081, fb_tmp_639["identifier"]
    set $P5083, $P5081
    goto if3041_end6389
  if3041_else6388:
    null $P5082
    set $P5083, $P5082
  if3041_end6389:
    unless_null $P5083, vivi_30446394
    nqp_get_sc_object $P5084, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5083, $P5084
  vivi_30446394:
    set $N5001, $P5083
    set $N5002, 1
    iseq $I5015, $N5001, $N5002
    box $P5117, $I5015
    set $P5116, $P5117
    unless $I5015 goto if3040_end6387 
.annotate 'line', 2159
.annotate 'line', 2160
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback6395
    nqp_get_sc_object $P5087, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5086, $P5087
    set fb_tmp_641, $P5086
    repr_defined $I5018, fb_tmp_641
    unless $I5018 goto if3045_else6396 
    set $P5088, fb_tmp_641["$W"]
    set $P5090, $P5088
    goto if3045_end6397
  if3045_else6396:
    null $P5089
    set $P5090, $P5089
  if3045_end6397:
    unless_null $P5090, vivi_30466398
    nqp_get_sc_object $P5091, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5091
  vivi_30466398:
    unless_null $P5090, vivi_30476399
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_30476399:
    set $P5085, $P5090
  fallback6395:
    find_dynamic_lex $P5093, "$*W"
    unless_null $P5093, fallback6400
    nqp_get_sc_object $P5095, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5094, $P5095
    set fb_tmp_642, $P5094
    repr_defined $I5019, fb_tmp_642
    unless $I5019 goto if3048_else6401 
    set $P5096, fb_tmp_642["$W"]
    set $P5098, $P5096
    goto if3048_end6402
  if3048_else6401:
    null $P5097
    set $P5098, $P5097
  if3048_end6402:
    unless_null $P5098, vivi_30496403
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_30496403:
    unless_null $P5098, vivi_30506404
    die "Contextual $*W not found"
    box $P5100, "Contextual $*W not found"
    set $P5098, $P5100
  vivi_30506404:
    set $P5093, $P5098
  fallback6400:
    $P5101 = $P5093."cur_lexpad"()
    unless_null _lex_param_1, fallback6411
    nqp_get_sc_object $P5102, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5102
  fallback6411:
    set fb_tmp_645, _lex_param_1
    repr_defined $I5022, fb_tmp_645
    unless $I5022 goto if3053_else6409 
    set $P5103, fb_tmp_645["name"]
    set $P5105, $P5103
    goto if3053_end6410
  if3053_else6409:
    null $P5104
    set $P5105, $P5104
  if3053_end6410:
    unless_null $P5105, vivi_30546412
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5105, $P5106
  vivi_30546412:
    set fb_tmp_644, $P5105
    repr_defined $I5021, fb_tmp_644
    unless $I5021 goto if3052_else6407 
    set $P5107, fb_tmp_644["identifier"]
    set $P5109, $P5107
    goto if3052_end6408
  if3052_else6407:
    null $P5108
    set $P5109, $P5108
  if3052_end6408:
    unless_null $P5109, vivi_30556413
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5109, $P5110
  vivi_30556413:
    set fb_tmp_643, $P5109
    repr_defined $I5020, fb_tmp_643
    unless $I5020 goto if3051_else6405 
    set $P5111, fb_tmp_643[0]
    set $P5113, $P5111
    goto if3051_end6406
  if3051_else6405:
    null $P5112
    set $P5113, $P5112
  if3051_end6406:
    unless_null $P5113, vivi_30566414
    nqp_get_sc_object $P5114, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5113, $P5114
  vivi_30566414:
    $P5115 = $P5085."install_lexical_symbol"($P5101, $P5113, $P102)
    set $P5116, $P5115
  if3040_end6387:
    goto if3022_end6356
  if3022_else6355:
    find_dynamic_lex $P5118, "$*SCOPE"
    unless_null $P5118, fallback6417
    nqp_get_sc_object $P5120, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5119, $P5120
    set fb_tmp_646, $P5119
    repr_defined $I5024, fb_tmp_646
    unless $I5024 goto if3058_else6418 
    set $P5121, fb_tmp_646["$SCOPE"]
    set $P5123, $P5121
    goto if3058_end6419
  if3058_else6418:
    null $P5122
    set $P5123, $P5122
  if3058_end6419:
    unless_null $P5123, vivi_30596420
    nqp_get_sc_object $P5124, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5123, $P5124
  vivi_30596420:
    unless_null $P5123, vivi_30606421
    die "Contextual $*SCOPE not found"
    box $P5125, "Contextual $*SCOPE not found"
    set $P5123, $P5125
  vivi_30606421:
    set $P5118, $P5123
  fallback6417:
    set $S5004, $P5118
    iseq $I5023, $S5004, "my"
    unless $I5023 goto if3057_else6415 
.annotate 'line', 2163
    unless_null _lex_param_1, fallback6428
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5126
  fallback6428:
    set fb_tmp_648, _lex_param_1
    repr_defined $I5027, fb_tmp_648
    unless $I5027 goto if3063_else6426 
    set $P5127, fb_tmp_648["name"]
    set $P5129, $P5127
    goto if3063_end6427
  if3063_else6426:
    null $P5128
    set $P5129, $P5128
  if3063_end6427:
    unless_null $P5129, vivi_30646429
    nqp_get_sc_object $P5130, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5129, $P5130
  vivi_30646429:
    set fb_tmp_647, $P5129
    repr_defined $I5026, fb_tmp_647
    unless $I5026 goto if3062_else6424 
    set $P5131, fb_tmp_647["identifier"]
    set $P5133, $P5131
    goto if3062_end6425
  if3062_else6424:
    null $P5132
    set $P5133, $P5132
  if3062_end6425:
    unless_null $P5133, vivi_30656430
    nqp_get_sc_object $P5134, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5133, $P5134
  vivi_30656430:
    set $N5003, $P5133
    set $N5004, 1
    isne $I5025, $N5003, $N5004
    unless $I5025 goto if3061_end6423 
.annotate 'line', 2164
.annotate 'line', 2165
    unless_null _lex_param_1, fallback6433
    nqp_get_sc_object $P5135, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5135
  fallback6433:
    set fb_tmp_649, _lex_param_1
    repr_defined $I5028, fb_tmp_649
    unless $I5028 goto if3066_else6431 
    set $P5136, fb_tmp_649["name"]
    set $P5138, $P5136
    goto if3066_end6432
  if3066_else6431:
    null $P5137
    set $P5138, $P5137
  if3066_end6432:
    unless_null $P5138, vivi_30676434
    nqp_get_sc_object $P5139, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5138, $P5139
  vivi_30676434:
    $P5140 = $P5138."CURSOR"()
    $P5141 = $P5140."panic"("A my scoped package cannot have a multi-part name yet")
  if3061_end6423:
.annotate 'line', 2167
    find_dynamic_lex $P5142, "$*W"
    unless_null $P5142, fallback6435
    nqp_get_sc_object $P5144, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5143, $P5144
    set fb_tmp_650, $P5143
    repr_defined $I5029, fb_tmp_650
    unless $I5029 goto if3068_else6436 
    set $P5145, fb_tmp_650["$W"]
    set $P5147, $P5145
    goto if3068_end6437
  if3068_else6436:
    null $P5146
    set $P5147, $P5146
  if3068_end6437:
    unless_null $P5147, vivi_30696438
    nqp_get_sc_object $P5148, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5147, $P5148
  vivi_30696438:
    unless_null $P5147, vivi_30706439
    die "Contextual $*W not found"
    box $P5149, "Contextual $*W not found"
    set $P5147, $P5149
  vivi_30706439:
    set $P5142, $P5147
  fallback6435:
    find_dynamic_lex $P5150, "$*W"
    unless_null $P5150, fallback6440
    nqp_get_sc_object $P5152, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5151, $P5152
    set fb_tmp_651, $P5151
    repr_defined $I5030, fb_tmp_651
    unless $I5030 goto if3071_else6441 
    set $P5153, fb_tmp_651["$W"]
    set $P5155, $P5153
    goto if3071_end6442
  if3071_else6441:
    null $P5154
    set $P5155, $P5154
  if3071_end6442:
    unless_null $P5155, vivi_30726443
    nqp_get_sc_object $P5156, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5155, $P5156
  vivi_30726443:
    unless_null $P5155, vivi_30736444
    die "Contextual $*W not found"
    box $P5157, "Contextual $*W not found"
    set $P5155, $P5157
  vivi_30736444:
    set $P5150, $P5155
  fallback6440:
    $P5158 = $P5150."cur_lexpad"()
    unless_null _lex_param_1, fallback6451
    nqp_get_sc_object $P5159, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5159
  fallback6451:
    set fb_tmp_654, _lex_param_1
    repr_defined $I5033, fb_tmp_654
    unless $I5033 goto if3076_else6449 
    set $P5160, fb_tmp_654["name"]
    set $P5162, $P5160
    goto if3076_end6450
  if3076_else6449:
    null $P5161
    set $P5162, $P5161
  if3076_end6450:
    unless_null $P5162, vivi_30776452
    nqp_get_sc_object $P5163, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5162, $P5163
  vivi_30776452:
    set fb_tmp_653, $P5162
    repr_defined $I5032, fb_tmp_653
    unless $I5032 goto if3075_else6447 
    set $P5164, fb_tmp_653["identifier"]
    set $P5166, $P5164
    goto if3075_end6448
  if3075_else6447:
    null $P5165
    set $P5166, $P5165
  if3075_end6448:
    unless_null $P5166, vivi_30786453
    nqp_get_sc_object $P5167, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5166, $P5167
  vivi_30786453:
    set fb_tmp_652, $P5166
    repr_defined $I5031, fb_tmp_652
    unless $I5031 goto if3074_else6445 
    set $P5168, fb_tmp_652[0]
    set $P5170, $P5168
    goto if3074_end6446
  if3074_else6445:
    null $P5169
    set $P5170, $P5169
  if3074_end6446:
    unless_null $P5170, vivi_30796454
    nqp_get_sc_object $P5171, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5170, $P5171
  vivi_30796454:
    $P5172 = $P5142."install_lexical_symbol"($P5158, $P5170, $P102)
    set $P5183, $P5172
    goto if3057_end6416
  if3057_else6415:
.annotate 'line', 2169
.annotate 'line', 2170
    $P5173 = _lex_param_1."CURSOR"()
    find_dynamic_lex $P5174, "$*SCOPE"
    unless_null $P5174, fallback6455
    nqp_get_sc_object $P5176, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5175, $P5176
    set fb_tmp_655, $P5175
    repr_defined $I5034, fb_tmp_655
    unless $I5034 goto if3080_else6456 
    set $P5177, fb_tmp_655["$SCOPE"]
    set $P5179, $P5177
    goto if3080_end6457
  if3080_else6456:
    null $P5178
    set $P5179, $P5178
  if3080_end6457:
    unless_null $P5179, vivi_30816458
    nqp_get_sc_object $P5180, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5179, $P5180
  vivi_30816458:
    unless_null $P5179, vivi_30826459
    die "Contextual $*SCOPE not found"
    box $P5181, "Contextual $*SCOPE not found"
    set $P5179, $P5181
  vivi_30826459:
    set $P5174, $P5179
  fallback6455:
    set $S5006, $P5174
    concat $S5005, $S5006, " scoped packages are not supported"
    $P5182 = $P5173."panic"($S5005)
    set $P5183, $P5182
  if3057_end6416:
  if3022_end6356:
.annotate 'line', 2173
    nqp_get_sc_object $P5185, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_207, $P5185
    get_who $P5186, pkg_lookup_tmp_207
    exists $I5036, $P5186["QAST"]
    unless $I5036 goto if3084_else6462 
    get_who $P5188, pkg_lookup_tmp_207
    set $P5187, $P5188["QAST"]
    set $P5190, $P5187
    goto if3084_end6463
  if3084_else6462:
    nqp_get_sc_object $P5189, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5190, $P5189
  if3084_end6463:
    get_who $P5184, $P5190
    set fb_tmp_656, $P5184
    repr_defined $I5035, fb_tmp_656
    unless $I5035 goto if3083_else6460 
    set $P5191, fb_tmp_656["Stmts"]
    set $P5193, $P5191
    goto if3083_end6461
  if3083_else6460:
    null $P5192
    set $P5193, $P5192
  if3083_end6461:
    unless_null $P5193, vivi_30856464
    nqp_get_sc_object $P5194, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5193, $P5194
  vivi_30856464:
    $P5195 = $P5193."new"()
    $P5196 = _lex_param_1."!make"($P5195)
    .return ($P5196) 
.end
.HLL "nqp"
.namespace []
.sub "package_def" :subid("cuid_295_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2176
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5197 = 'cuid_467_1361537952.49511' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_468_1361537952.49511' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_469_1361537952.49511' 
    capture_lex $P5197 
    .const 'Sub' $P5197 = 'cuid_470_1361537952.49511' 
    capture_lex $P5197 
    .lex "@ns", $P101 
    .lex "$name", $P102 
    .lex "$how", $P103 
    .lex "$past", $P104 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_657 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc fb_tmp_679 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_703 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    unless_null _lex_param_1, fallback6469
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6469:
    set fb_tmp_658, _lex_param_1
    repr_defined $I5002, fb_tmp_658
    unless $I5002 goto if3087_else6467 
    set $P5007, fb_tmp_658["name"]
    set $P5009, $P5007
    goto if3087_end6468
  if3087_else6467:
    null $P5008
    set $P5009, $P5008
  if3087_end6468:
    unless_null $P5009, vivi_30886470
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_30886470:
    set fb_tmp_657, $P5009
    repr_defined $I5001, fb_tmp_657
    unless $I5001 goto if3086_else6465 
    set $P5011, fb_tmp_657["identifier"]
    set $P5013, $P5011
    goto if3086_end6466
  if3086_else6465:
    null $P5012
    set $P5013, $P5012
  if3086_end6466:
    unless_null $P5013, vivi_30896471
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_30896471:
    repr_clone $P5005, $P5013
    set $P101, $P5005
.annotate 'line', 2179
    $P5015 = $P101."pop"()
    set $S5001, $P5015
    box $P5016, $S5001
    set $P102, $P5016
    find_dynamic_lex $P5017, "%*HOW"
    unless_null $P5017, fallback6474
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_44, $P5018
    set fb_tmp_660, pkg_viv_tmp_44
    repr_defined $I5004, fb_tmp_660
    unless $I5004 goto if3091_else6475 
    set $P5020, fb_tmp_660["%HOW"]
    set $P5022, $P5020
    goto if3091_end6476
  if3091_else6475:
    null $P5021
    set $P5022, $P5021
  if3091_end6476:
    unless_null $P5022, vivi_30926477
    new $P5023, 'Hash'
    set pkg_viv_tmp_44["%HOW"], $P5023
    set $P5022, $P5023
  vivi_30926477:
    unless_null $P5022, vivi_30936478
    die "Contextual %*HOW not found"
    box $P5024, "Contextual %*HOW not found"
    set $P5022, $P5024
  vivi_30936478:
    set $P5017, $P5022
  fallback6474:
    set fb_tmp_659, $P5017
    repr_defined $I5003, fb_tmp_659
    unless $I5003 goto if3090_else6472 
    find_dynamic_lex $P5026, "$*PKGDECL"
    unless_null $P5026, fallback6479
    nqp_get_sc_object $P5028, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5027, $P5028
    set fb_tmp_661, $P5027
    repr_defined $I5005, fb_tmp_661
    unless $I5005 goto if3094_else6480 
    set $P5029, fb_tmp_661["$PKGDECL"]
    set $P5031, $P5029
    goto if3094_end6481
  if3094_else6480:
    null $P5030
    set $P5031, $P5030
  if3094_end6481:
    unless_null $P5031, vivi_30956482
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_30956482:
    unless_null $P5031, vivi_30966483
    die "Contextual $*PKGDECL not found"
    box $P5033, "Contextual $*PKGDECL not found"
    set $P5031, $P5033
  vivi_30966483:
    set $P5026, $P5031
  fallback6479:
    set $S5002, $P5026
    set $P5025, fb_tmp_659[$S5002]
    set $P5035, $P5025
    goto if3090_end6473
  if3090_else6472:
    null $P5034
    set $P5035, $P5034
  if3090_end6473:
    unless_null $P5035, vivi_30976484
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_30976484:
    set $P103, $P5035
    unless_null _lex_param_1, fallback6489
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5037
  fallback6489:
    set fb_tmp_662, _lex_param_1
    repr_defined $I5006, fb_tmp_662
    unless $I5006 goto if3099_else6487 
    set $P5038, fb_tmp_662["blockoid"]
    set $P5040, $P5038
    goto if3099_end6488
  if3099_else6487:
    null $P5039
    set $P5040, $P5039
  if3099_end6488:
    unless_null $P5040, vivi_31006490
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_31006490:
    unless $P5040 goto if3098_else6485 
.annotate 'line', 2184
.annotate 'line', 2185
    unless_null _lex_param_1, fallback6493
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5042
  fallback6493:
    set fb_tmp_663, _lex_param_1
    repr_defined $I5007, fb_tmp_663
    unless $I5007 goto if3101_else6491 
    set $P5043, fb_tmp_663["blockoid"]
    set $P5045, $P5043
    goto if3101_end6492
  if3101_else6491:
    null $P5044
    set $P5045, $P5044
  if3101_end6492:
    unless_null $P5045, vivi_31026494
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_31026494:
    $P5047 = $P5045."ast"()
    set $P104, $P5047
    goto if3098_end6486
  if3098_else6485:
.annotate 'line', 2187
.annotate 'line', 2188
    find_dynamic_lex $P5048, "$*W"
    unless_null $P5048, fallback6495
    nqp_get_sc_object $P5050, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5049, $P5050
    set fb_tmp_664, $P5049
    repr_defined $I5008, fb_tmp_664
    unless $I5008 goto if3103_else6496 
    set $P5051, fb_tmp_664["$W"]
    set $P5053, $P5051
    goto if3103_end6497
  if3103_else6496:
    null $P5052
    set $P5053, $P5052
  if3103_end6497:
    unless_null $P5053, vivi_31046498
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_31046498:
    unless_null $P5053, vivi_31056499
    die "Contextual $*W not found"
    box $P5055, "Contextual $*W not found"
    set $P5053, $P5055
  vivi_31056499:
    set $P5048, $P5053
  fallback6495:
    $P5056 = $P5048."pop_lexpad"()
    set $P104, $P5056
.annotate 'line', 2189
    unless_null _lex_param_1, fallback6502
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5057
  fallback6502:
    set fb_tmp_665, _lex_param_1
    repr_defined $I5009, fb_tmp_665
    unless $I5009 goto if3106_else6500 
    set $P5058, fb_tmp_665["statementlist"]
    set $P5060, $P5058
    goto if3106_end6501
  if3106_else6500:
    null $P5059
    set $P5060, $P5059
  if3106_end6501:
    unless_null $P5060, vivi_31076503
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  vivi_31076503:
    $P5062 = $P5060."ast"()
    $P5063 = $P104."push"($P5062)
  if3098_end6486:
    can $I5010, $P103, "parametric"
    box $P5066, $I5010
    set $P5065, $P5066
    unless $I5010 goto if3109_end6507 
.annotate 'line', 2196
    $P5064 = $P103."parametric"($P103)
    set $P5065, $P5064
  if3109_end6507:
    unless $P5065 goto if3108_else6504 
    .const 'Sub' $P5067 = 'cuid_467_1361537952.49511' 
    capture_lex $P5067
    $P5068 = $P5067()
    goto if3108_end6505
  if3108_else6504:
.annotate 'line', 2213
.annotate 'line', 2214
    $P104."blocktype"("immediate")
.annotate 'line', 2215
    find_dynamic_lex $P5069, "$*W"
    unless_null $P5069, fallback6572
    nqp_get_sc_object $P5071, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5070, $P5071
    set fb_tmp_679, $P5070
    repr_defined $I5011, fb_tmp_679
    unless $I5011 goto if3146_else6573 
    set $P5072, fb_tmp_679["$W"]
    set $P5074, $P5072
    goto if3146_end6574
  if3146_else6573:
    null $P5073
    set $P5074, $P5073
  if3146_end6574:
    unless_null $P5074, vivi_31476575
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5075
  vivi_31476575:
    unless_null $P5074, vivi_31486576
    die "Contextual $*W not found"
    box $P5076, "Contextual $*W not found"
    set $P5074, $P5076
  vivi_31486576:
    set $P5069, $P5074
  fallback6572:
    find_dynamic_lex $P5077, "$*PACKAGE"
    unless_null $P5077, fallback6577
    nqp_get_sc_object $P5079, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5078, $P5079
    set fb_tmp_680, $P5078
    repr_defined $I5012, fb_tmp_680
    unless $I5012 goto if3149_else6578 
    set $P5080, fb_tmp_680["$PACKAGE"]
    set $P5082, $P5080
    goto if3149_end6579
  if3149_else6578:
    null $P5081
    set $P5082, $P5081
  if3149_end6579:
    unless_null $P5082, vivi_31506580
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_31506580:
    unless_null $P5082, vivi_31516581
    die "Contextual $*PACKAGE not found"
    box $P5084, "Contextual $*PACKAGE not found"
    set $P5082, $P5084
  vivi_31516581:
    set $P5077, $P5082
  fallback6577:
    $P5069."install_lexical_symbol"($P104, "$?PACKAGE", $P5077)
.annotate 'line', 2216
    find_dynamic_lex $P5085, "$*W"
    unless_null $P5085, fallback6582
    nqp_get_sc_object $P5087, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5086, $P5087
    set fb_tmp_681, $P5086
    repr_defined $I5013, fb_tmp_681
    unless $I5013 goto if3152_else6583 
    set $P5088, fb_tmp_681["$W"]
    set $P5090, $P5088
    goto if3152_end6584
  if3152_else6583:
    null $P5089
    set $P5090, $P5089
  if3152_end6584:
    unless_null $P5090, vivi_31536585
    nqp_get_sc_object $P5091, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5091
  vivi_31536585:
    unless_null $P5090, vivi_31546586
    die "Contextual $*W not found"
    box $P5092, "Contextual $*W not found"
    set $P5090, $P5092
  vivi_31546586:
    set $P5085, $P5090
  fallback6582:
    find_dynamic_lex $P5093, "$*PACKAGE"
    unless_null $P5093, fallback6587
    nqp_get_sc_object $P5095, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5094, $P5095
    set fb_tmp_682, $P5094
    repr_defined $I5014, fb_tmp_682
    unless $I5014 goto if3155_else6588 
    set $P5096, fb_tmp_682["$PACKAGE"]
    set $P5098, $P5096
    goto if3155_end6589
  if3155_else6588:
    null $P5097
    set $P5098, $P5097
  if3155_end6589:
    unless_null $P5098, vivi_31566590
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_31566590:
    unless_null $P5098, vivi_31576591
    die "Contextual $*PACKAGE not found"
    box $P5100, "Contextual $*PACKAGE not found"
    set $P5098, $P5100
  vivi_31576591:
    set $P5093, $P5098
  fallback6587:
    $P5101 = $P5085."install_lexical_symbol"($P104, "$?CLASS", $P5093)
  if3108_end6505:
    unless_null _lex_param_1, fallback6596
    nqp_get_sc_object $P5102, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5102
  fallback6596:
    set fb_tmp_683, _lex_param_1
    repr_defined $I5015, fb_tmp_683
    unless $I5015 goto if3159_else6594 
    set $P5103, fb_tmp_683["parent"]
    set $P5105, $P5103
    goto if3159_end6595
  if3159_else6594:
    null $P5104
    set $P5105, $P5104
  if3159_end6595:
    unless_null $P5105, vivi_31606597
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5105, $P5106
  vivi_31606597:
    unless $P5105 goto if3158_else6592 
    .const 'Sub' $P5107 = 'cuid_468_1361537952.49511' 
    capture_lex $P5107
    $P5108 = $P5107()
    goto if3158_end6593
  if3158_else6592:
    can $I5016, $P103, "set_default_parent"
    box $P5112, $I5016
    set $P5111, $P5112
    unless $I5016 goto if3183_end6635 
    .const 'Sub' $P5109 = 'cuid_469_1361537952.49511' 
    capture_lex $P5109
    $P5110 = $P5109()
    set $P5111, $P5110
  if3183_end6635:
  if3158_end6593:
    unless_null _lex_param_1, fallback6662
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5113
  fallback6662:
    set fb_tmp_696, _lex_param_1
    repr_defined $I5017, fb_tmp_696
    unless $I5017 goto if3198_else6660 
    set $P5114, fb_tmp_696["role"]
    set $P5116, $P5114
    goto if3198_end6661
  if3198_else6660:
    null $P5115
    set $P5116, $P5115
  if3198_end6661:
    unless_null $P5116, vivi_31996663
    nqp_get_sc_object $P5117, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5116, $P5117
  vivi_31996663:
    unless $P5116 goto if3197_end6659 
.annotate 'line', 2241
    unless_null _lex_param_1, fallback6666
    nqp_get_sc_object $P5121, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5121
  fallback6666:
    set fb_tmp_697, _lex_param_1
    repr_defined $I5018, fb_tmp_697
    unless $I5018 goto if3200_else6664 
    set $P5122, fb_tmp_697["role"]
    set $P5124, $P5122
    goto if3200_end6665
  if3200_else6664:
    null $P5123
    set $P5124, $P5123
  if3200_end6665:
    unless_null $P5124, vivi_32016667
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5124, $P5125
  vivi_32016667:
    set $P5118, $P5124
    iter $P5120, $P5124
  for_next6690:
    unless $P5120, for_done6692
    shift $P5127, $P5120
  for_redo6691:
    .const 'Sub' $P5126 = 'cuid_470_1361537952.49511' 
    capture_lex $P5126
    $P5118 = $P5126($P5127)
    goto for_next6690
  for_done6692:
  if3197_end6659:
.annotate 'line', 2259
    find_dynamic_lex $P5128, "$*W"
    unless_null $P5128, fallback6693
    nqp_get_sc_object $P5130, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5129, $P5130
    set fb_tmp_702, $P5129
    repr_defined $I5019, fb_tmp_702
    unless $I5019 goto if3216_else6694 
    set $P5131, fb_tmp_702["$W"]
    set $P5133, $P5131
    goto if3216_end6695
  if3216_else6694:
    null $P5132
    set $P5133, $P5132
  if3216_end6695:
    unless_null $P5133, vivi_32176696
    nqp_get_sc_object $P5134, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5133, $P5134
  vivi_32176696:
    unless_null $P5133, vivi_32186697
    die "Contextual $*W not found"
    box $P5135, "Contextual $*W not found"
    set $P5133, $P5135
  vivi_32186697:
    set $P5128, $P5133
  fallback6693:
    find_dynamic_lex $P5136, "$*PACKAGE"
    unless_null $P5136, fallback6698
    nqp_get_sc_object $P5138, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5137, $P5138
    set fb_tmp_703, $P5137
    repr_defined $I5020, fb_tmp_703
    unless $I5020 goto if3219_else6699 
    set $P5139, fb_tmp_703["$PACKAGE"]
    set $P5141, $P5139
    goto if3219_end6700
  if3219_else6699:
    null $P5140
    set $P5141, $P5140
  if3219_end6700:
    unless_null $P5141, vivi_32206701
    nqp_get_sc_object $P5142, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5141, $P5142
  vivi_32206701:
    unless_null $P5141, vivi_32216702
    die "Contextual $*PACKAGE not found"
    box $P5143, "Contextual $*PACKAGE not found"
    set $P5141, $P5143
  vivi_32216702:
    set $P5136, $P5141
  fallback6698:
    $P5128."pkg_compose"($P5136)
    find_dynamic_lex $P5144, "$*PKGDECL"
    unless_null $P5144, fallback6707
    nqp_get_sc_object $P5146, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5145, $P5146
    set fb_tmp_704, $P5145
    repr_defined $I5022, fb_tmp_704
    unless $I5022 goto if3224_else6708 
    set $P5147, fb_tmp_704["$PKGDECL"]
    set $P5149, $P5147
    goto if3224_end6709
  if3224_else6708:
    null $P5148
    set $P5149, $P5148
  if3224_end6709:
    unless_null $P5149, vivi_32256710
    nqp_get_sc_object $P5150, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5149, $P5150
  vivi_32256710:
    unless_null $P5149, vivi_32266711
    die "Contextual $*PKGDECL not found"
    box $P5151, "Contextual $*PKGDECL not found"
    set $P5149, $P5151
  vivi_32266711:
    set $P5144, $P5149
  fallback6707:
    set $S5003, $P5144
    iseq $I5021, $S5003, "grammar"
    set $I5025, $I5021
    unless $I5021 goto if3223_end6706 
    find_dynamic_lex $P5152, "$*PACKAGE"
    unless_null $P5152, fallback6712
    nqp_get_sc_object $P5154, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5153, $P5154
    set fb_tmp_705, $P5153
    repr_defined $I5024, fb_tmp_705
    unless $I5024 goto if3227_else6713 
    set $P5155, fb_tmp_705["$PACKAGE"]
    set $P5157, $P5155
    goto if3227_end6714
  if3227_else6713:
    null $P5156
    set $P5157, $P5156
  if3227_end6714:
    unless_null $P5157, vivi_32286715
    nqp_get_sc_object $P5158, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5157, $P5158
  vivi_32286715:
    unless_null $P5157, vivi_32296716
    die "Contextual $*PACKAGE not found"
    box $P5159, "Contextual $*PACKAGE not found"
    set $P5157, $P5159
  vivi_32296716:
    set $P5152, $P5157
  fallback6712:
    can $I5023, $P5152, "!precompute_nfas"
    set $I5025, $I5023
  if3223_end6706:
    unless $I5025 goto if3222_end6704 
.annotate 'line', 2262
.annotate 'line', 2263
    find_dynamic_lex $P5160, "$*PACKAGE"
    unless_null $P5160, fallback6717
    nqp_get_sc_object $P5162, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5161, $P5162
    set fb_tmp_706, $P5161
    repr_defined $I5026, fb_tmp_706
    unless $I5026 goto if3230_else6718 
    set $P5163, fb_tmp_706["$PACKAGE"]
    set $P5165, $P5163
    goto if3230_end6719
  if3230_else6718:
    null $P5164
    set $P5165, $P5164
  if3230_end6719:
    unless_null $P5165, vivi_32316720
    nqp_get_sc_object $P5166, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5165, $P5166
  vivi_32316720:
    unless_null $P5165, vivi_32326721
    die "Contextual $*PACKAGE not found"
    box $P5167, "Contextual $*PACKAGE not found"
    set $P5165, $P5167
  vivi_32326721:
    set $P5160, $P5165
  fallback6717:
    $P5168 = $P5160."!precompute_nfas"()
  if3222_end6704:
    unless_null _lex_param_1, fallback6726
    nqp_get_sc_object $P5169, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5169
  fallback6726:
    set fb_tmp_707, _lex_param_1
    repr_defined $I5027, fb_tmp_707
    unless $I5027 goto if3234_else6724 
    set $P5170, fb_tmp_707["export"]
    set $P5172, $P5170
    goto if3234_end6725
  if3234_else6724:
    null $P5171
    set $P5172, $P5171
  if3234_end6725:
    unless_null $P5172, vivi_32356727
    nqp_get_sc_object $P5173, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5172, $P5173
  vivi_32356727:
    unless $P5172 goto if3233_end6723 
.annotate 'line', 2267
    find_dynamic_lex $P5176, "$*EXPORT"
    unless_null $P5176, fallback6730
    nqp_get_sc_object $P5178, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5177, $P5178
    set fb_tmp_709, $P5177
    repr_defined $I5029, fb_tmp_709
    unless $I5029 goto if3237_else6731 
    set $P5179, fb_tmp_709["$EXPORT"]
    set $P5181, $P5179
    goto if3237_end6732
  if3237_else6731:
    null $P5180
    set $P5181, $P5180
  if3237_end6732:
    unless_null $P5181, vivi_32386733
    nqp_get_sc_object $P5182, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5181, $P5182
  vivi_32386733:
    unless_null $P5181, vivi_32396734
    die "Contextual $*EXPORT not found"
    box $P5183, "Contextual $*EXPORT not found"
    set $P5181, $P5183
  vivi_32396734:
    set $P5176, $P5181
  fallback6730:
    get_who $P5175, $P5176
    set fb_tmp_708, $P5175
    repr_defined $I5028, fb_tmp_708
    unless $I5028 goto if3236_else6728 
    set $P5184, fb_tmp_708["DEFAULT"]
    set $P5186, $P5184
    goto if3236_end6729
  if3236_else6728:
    null $P5185
    set $P5186, $P5185
  if3236_end6729:
    unless_null $P5186, vivi_32406735
    nqp_get_sc_object $P5187, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5186, $P5187
  vivi_32406735:
    get_who $P5174, $P5186
    set $S5004, $P102
    find_dynamic_lex $P5188, "$*PACKAGE"
    unless_null $P5188, fallback6736
    nqp_get_sc_object $P5190, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5189, $P5190
    set fb_tmp_710, $P5189
    repr_defined $I5030, fb_tmp_710
    unless $I5030 goto if3241_else6737 
    set $P5191, fb_tmp_710["$PACKAGE"]
    set $P5193, $P5191
    goto if3241_end6738
  if3241_else6737:
    null $P5192
    set $P5193, $P5192
  if3241_end6738:
    unless_null $P5193, vivi_32426739
    nqp_get_sc_object $P5194, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5193, $P5194
  vivi_32426739:
    unless_null $P5193, vivi_32436740
    die "Contextual $*PACKAGE not found"
    box $P5195, "Contextual $*PACKAGE not found"
    set $P5193, $P5195
  vivi_32436740:
    set $P5188, $P5193
  fallback6736:
    set $P5174[$S5004], $P5188
  if3233_end6723:
.annotate 'line', 2271
    $P5196 = _lex_param_1."!make"($P104)
    .return ($P5196) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_467_1361537952.49511") :anon :lex :outer("cuid_295_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2196
    .const 'Sub' $P5119 = 'cuid_466_1361537952.49511' 
    capture_lex $P5119 
    .lex "$params", $P101 
    .local pmc fb_tmp_666 
    .local pmc pkg_lookup_tmp_208 
    .local pmc fb_tmp_667 
    .local pmc pkg_lookup_tmp_209 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc fb_tmp_672 
    .local pmc pkg_lookup_tmp_210 
    .local pmc fb_tmp_673 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc fb_tmp_678 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2197
    find_lex $P5002, "$past"
    $P5002."blocktype"("declaration")
.annotate 'line', 2198
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_208, $P5004
    get_who $P5005, pkg_lookup_tmp_208
    exists $I5002, $P5005["QAST"]
    unless $I5002 goto if3111_else6510 
    get_who $P5007, pkg_lookup_tmp_208
    set $P5006, $P5007["QAST"]
    set $P5009, $P5006
    goto if3111_end6511
  if3111_else6510:
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5008
  if3111_end6511:
    get_who $P5003, $P5009
    set fb_tmp_666, $P5003
    repr_defined $I5001, fb_tmp_666
    unless $I5001 goto if3110_else6508 
    set $P5010, fb_tmp_666["Stmts"]
    set $P5012, $P5010
    goto if3110_end6509
  if3110_else6508:
    null $P5011
    set $P5012, $P5011
  if3110_end6509:
    unless_null $P5012, vivi_31126512
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_31126512:
.annotate 'line', 2199
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_209, $P5015
    get_who $P5016, pkg_lookup_tmp_209
    exists $I5004, $P5016["QAST"]
    unless $I5004 goto if3114_else6515 
    get_who $P5018, pkg_lookup_tmp_209
    set $P5017, $P5018["QAST"]
    set $P5020, $P5017
    goto if3114_end6516
  if3114_else6515:
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5019
  if3114_end6516:
    get_who $P5014, $P5020
    set fb_tmp_667, $P5014
    repr_defined $I5003, fb_tmp_667
    unless $I5003 goto if3113_else6513 
    set $P5021, fb_tmp_667["Var"]
    set $P5023, $P5021
    goto if3113_end6514
  if3113_else6513:
    null $P5022
    set $P5023, $P5022
  if3113_end6514:
    unless_null $P5023, vivi_31156517
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_31156517:
    $P5025 = $P5023."new"("$?CLASS" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5026 = $P5012."new"($P5025)
    set $P101, $P5026
    find_lex $P5027, "$/"
    unless_null $P5027, fallback6522
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  fallback6522:
    set fb_tmp_668, $P5027
    repr_defined $I5005, fb_tmp_668
    unless $I5005 goto if3117_else6520 
    set $P5029, fb_tmp_668["role_params"]
    set $P5031, $P5029
    goto if3117_end6521
  if3117_else6520:
    null $P5030
    set $P5031, $P5030
  if3117_end6521:
    unless_null $P5031, vivi_31186523
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_31186523:
    unless $P5031 goto if3116_end6519 
.annotate 'line', 2201
    find_lex $P5036, "$/"
    unless_null $P5036, fallback6530
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  fallback6530:
    set fb_tmp_671, $P5036
    repr_defined $I5008, fb_tmp_671
    unless $I5008 goto if3121_else6528 
    set $P5038, fb_tmp_671["role_params"]
    set $P5040, $P5038
    goto if3121_end6529
  if3121_else6528:
    null $P5039
    set $P5040, $P5039
  if3121_end6529:
    unless_null $P5040, vivi_31226531
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_31226531:
    set fb_tmp_670, $P5040
    repr_defined $I5007, fb_tmp_670
    unless $I5007 goto if3120_else6526 
    set $P5042, fb_tmp_670[0]
    set $P5044, $P5042
    goto if3120_end6527
  if3120_else6526:
    null $P5043
    set $P5044, $P5043
  if3120_end6527:
    unless_null $P5044, vivi_31236532
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5045
  vivi_31236532:
    set fb_tmp_669, $P5044
    repr_defined $I5006, fb_tmp_669
    unless $I5006 goto if3119_else6524 
    set $P5046, fb_tmp_669["variable"]
    set $P5048, $P5046
    goto if3119_end6525
  if3119_else6524:
    null $P5047
    set $P5048, $P5047
  if3119_end6525:
    unless_null $P5048, vivi_31246533
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_31246533:
    set $P5033, $P5048
    iter $P5035, $P5048
  for_next6534:
    unless $P5035, for_done6536
    shift $P5051, $P5035
  for_redo6535:
    .const 'Sub' $P5050 = 'cuid_466_1361537952.49511' 
    capture_lex $P5050
    $P5033 = $P5050($P5051)
    goto for_next6534
  for_done6536:
  if3116_end6519:
.annotate 'line', 2206
    find_lex $P5052, "$past"
    $P5052."unshift"($P101)
.annotate 'line', 2207
    find_lex $P5053, "$past"
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_210, $P5055
    get_who $P5056, pkg_lookup_tmp_210
    exists $I5010, $P5056["QAST"]
    unless $I5010 goto if3126_else6539 
    get_who $P5058, pkg_lookup_tmp_210
    set $P5057, $P5058["QAST"]
    set $P5060, $P5057
    goto if3126_end6540
  if3126_else6539:
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5059
  if3126_end6540:
    get_who $P5054, $P5060
    set fb_tmp_672, $P5054
    repr_defined $I5009, fb_tmp_672
    unless $I5009 goto if3125_else6537 
    set $P5061, fb_tmp_672["Op"]
    set $P5063, $P5061
    goto if3125_end6538
  if3125_else6537:
    null $P5062
    set $P5063, $P5062
  if3125_end6538:
    unless_null $P5063, vivi_31276541
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_31276541:
    $P5065 = $P5063."new"("curlexpad" :named("op"))
    $P5053."push"($P5065)
.annotate 'line', 2208
    find_lex $P5066, "$past"
    $P5066."symbol"("$?CLASS", "lexical" :named("scope"))
.annotate 'line', 2209
    find_dynamic_lex $P5067, "$*W"
    unless_null $P5067, fallback6542
    nqp_get_sc_object $P5069, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5068, $P5069
    set fb_tmp_673, $P5068
    repr_defined $I5011, fb_tmp_673
    unless $I5011 goto if3128_else6543 
    set $P5070, fb_tmp_673["$W"]
    set $P5072, $P5070
    goto if3128_end6544
  if3128_else6543:
    null $P5071
    set $P5072, $P5071
  if3128_end6544:
    unless_null $P5072, vivi_31296545
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5072, $P5073
  vivi_31296545:
    unless_null $P5072, vivi_31306546
    die "Contextual $*W not found"
    box $P5074, "Contextual $*W not found"
    set $P5072, $P5074
  vivi_31306546:
    set $P5067, $P5072
  fallback6542:
    find_dynamic_lex $P5075, "$*PACKAGE"
    unless_null $P5075, fallback6547
    nqp_get_sc_object $P5077, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5076, $P5077
    set fb_tmp_674, $P5076
    repr_defined $I5012, fb_tmp_674
    unless $I5012 goto if3131_else6548 
    set $P5078, fb_tmp_674["$PACKAGE"]
    set $P5080, $P5078
    goto if3131_end6549
  if3131_else6548:
    null $P5079
    set $P5080, $P5079
  if3131_end6549:
    unless_null $P5080, vivi_31326550
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5081
  vivi_31326550:
    unless_null $P5080, vivi_31336551
    die "Contextual $*PACKAGE not found"
    box $P5082, "Contextual $*PACKAGE not found"
    set $P5080, $P5082
  vivi_31336551:
    set $P5075, $P5080
  fallback6547:
    find_lex $P5083, "$past"
    $P5067."pkg_set_body_block"($P5075, $P5083)
.annotate 'line', 2210
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback6552
    nqp_get_sc_object $P5086, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5085, $P5086
    set fb_tmp_675, $P5085
    repr_defined $I5013, fb_tmp_675
    unless $I5013 goto if3134_else6553 
    set $P5087, fb_tmp_675["$W"]
    set $P5089, $P5087
    goto if3134_end6554
  if3134_else6553:
    null $P5088
    set $P5089, $P5088
  if3134_end6554:
    unless_null $P5089, vivi_31356555
    nqp_get_sc_object $P5090, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5089, $P5090
  vivi_31356555:
    unless_null $P5089, vivi_31366556
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_31366556:
    set $P5084, $P5089
  fallback6552:
    find_lex $P5092, "$past"
    find_dynamic_lex $P5093, "$*PACKAGE"
    unless_null $P5093, fallback6557
    nqp_get_sc_object $P5095, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5094, $P5095
    set fb_tmp_676, $P5094
    repr_defined $I5014, fb_tmp_676
    unless $I5014 goto if3137_else6558 
    set $P5096, fb_tmp_676["$PACKAGE"]
    set $P5098, $P5096
    goto if3137_end6559
  if3137_else6558:
    null $P5097
    set $P5098, $P5097
  if3137_end6559:
    unless_null $P5098, vivi_31386560
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_31386560:
    unless_null $P5098, vivi_31396561
    die "Contextual $*PACKAGE not found"
    box $P5100, "Contextual $*PACKAGE not found"
    set $P5098, $P5100
  vivi_31396561:
    set $P5093, $P5098
  fallback6557:
    $P5084."install_lexical_symbol"($P5092, "$?PACKAGE", $P5093)
.annotate 'line', 2211
    find_dynamic_lex $P5101, "$*W"
    unless_null $P5101, fallback6562
    nqp_get_sc_object $P5103, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5102, $P5103
    set fb_tmp_677, $P5102
    repr_defined $I5015, fb_tmp_677
    unless $I5015 goto if3140_else6563 
    set $P5104, fb_tmp_677["$W"]
    set $P5106, $P5104
    goto if3140_end6564
  if3140_else6563:
    null $P5105
    set $P5106, $P5105
  if3140_end6564:
    unless_null $P5106, vivi_31416565
    nqp_get_sc_object $P5107, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5106, $P5107
  vivi_31416565:
    unless_null $P5106, vivi_31426566
    die "Contextual $*W not found"
    box $P5108, "Contextual $*W not found"
    set $P5106, $P5108
  vivi_31426566:
    set $P5101, $P5106
  fallback6562:
    find_lex $P5109, "$past"
    find_dynamic_lex $P5110, "$*PACKAGE"
    unless_null $P5110, fallback6567
    nqp_get_sc_object $P5112, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5111, $P5112
    set fb_tmp_678, $P5111
    repr_defined $I5016, fb_tmp_678
    unless $I5016 goto if3143_else6568 
    set $P5113, fb_tmp_678["$PACKAGE"]
    set $P5115, $P5113
    goto if3143_end6569
  if3143_else6568:
    null $P5114
    set $P5115, $P5114
  if3143_end6569:
    unless_null $P5115, vivi_31446570
    nqp_get_sc_object $P5116, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5115, $P5116
  vivi_31446570:
    unless_null $P5115, vivi_31456571
    die "Contextual $*PACKAGE not found"
    box $P5117, "Contextual $*PACKAGE not found"
    set $P5115, $P5117
  vivi_31456571:
    set $P5110, $P5115
  fallback6567:
    $P5118 = $P5101."install_lexical_symbol"($P5109, "$?ROLE", $P5110)
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_466_1361537952.49511") :anon :lex :outer("cuid_467_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2202
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2203
    find_lex $P5001, "$params"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_468_1361537952.49511") :anon :lex :outer("cuid_295_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2220
    .lex "$parent", $P101 
    .lex "$parent_found", $P102 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc fb_tmp_688 
    .local pmc fb_tmp_689 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    new $P5028, 'ExceptionHandler'
    set_label $P5028, catch_handler_31716614
    $P5028.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5028
.annotate 'line', 2223
.annotate 'line', 2224
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6598
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_684, $P5004
    repr_defined $I5001, fb_tmp_684
    unless $I5001 goto if3161_else6599 
    set $P5006, fb_tmp_684["$W"]
    set $P5008, $P5006
    goto if3161_end6600
  if3161_else6599:
    null $P5007
    set $P5008, $P5007
  if3161_end6600:
    unless_null $P5008, vivi_31626601
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_31626601:
    unless_null $P5008, vivi_31636602
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_31636602:
    set $P5003, $P5008
  fallback6598:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback6609
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  fallback6609:
    set fb_tmp_687, $P5012
    repr_defined $I5004, fb_tmp_687
    unless $I5004 goto if3166_else6607 
    set $P5014, fb_tmp_687["parent"]
    set $P5016, $P5014
    goto if3166_end6608
  if3166_else6607:
    null $P5015
    set $P5016, $P5015
  if3166_end6608:
    unless_null $P5016, vivi_31676610
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_31676610:
    set fb_tmp_686, $P5016
    repr_defined $I5003, fb_tmp_686
    unless $I5003 goto if3165_else6605 
    set $P5018, fb_tmp_686[0]
    set $P5020, $P5018
    goto if3165_end6606
  if3165_else6605:
    null $P5019
    set $P5020, $P5019
  if3165_end6606:
    unless_null $P5020, vivi_31686611
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_31686611:
    set fb_tmp_685, $P5020
    repr_defined $I5002, fb_tmp_685
    unless $I5002 goto if3164_else6603 
    set $P5022, fb_tmp_685["identifier"]
    set $P5024, $P5022
    goto if3164_end6604
  if3164_else6603:
    null $P5023
    set $P5024, $P5023
  if3164_end6604:
    unless_null $P5024, vivi_31696612
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_31696612:
    repr_clone $P5011, $P5024
    $P5026 = $P5003."find_sym"($P5011)
    set $P101, $P5026
    box $P5027, 1
    set $P102, $P5027
    set $P5029, $P102
    pop_eh 
    goto skip_handler_31706613
  catch_handler_31716614:
    .get_results ($P5028) 
    set $I10001, 1
    set $P5028["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5028
    pop_upto_eh $P5028
    pop_eh 
    set $P5029, $P10001
    goto skip_handler_31706613
  skip_handler_31706613:
    unless $P102 goto if3172_else6615 
.annotate 'line', 2227
.annotate 'line', 2228
    find_dynamic_lex $P5030, "$*W"
    unless_null $P5030, fallback6617
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5031, $P5032
    set fb_tmp_688, $P5031
    repr_defined $I5005, fb_tmp_688
    unless $I5005 goto if3173_else6618 
    set $P5033, fb_tmp_688["$W"]
    set $P5035, $P5033
    goto if3173_end6619
  if3173_else6618:
    null $P5034
    set $P5035, $P5034
  if3173_end6619:
    unless_null $P5035, vivi_31746620
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_31746620:
    unless_null $P5035, vivi_31756621
    die "Contextual $*W not found"
    box $P5037, "Contextual $*W not found"
    set $P5035, $P5037
  vivi_31756621:
    set $P5030, $P5035
  fallback6617:
    find_dynamic_lex $P5038, "$*PACKAGE"
    unless_null $P5038, fallback6622
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5039, $P5040
    set fb_tmp_689, $P5039
    repr_defined $I5006, fb_tmp_689
    unless $I5006 goto if3176_else6623 
    set $P5041, fb_tmp_689["$PACKAGE"]
    set $P5043, $P5041
    goto if3176_end6624
  if3176_else6623:
    null $P5042
    set $P5043, $P5042
  if3176_end6624:
    unless_null $P5043, vivi_31776625
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_31776625:
    unless_null $P5043, vivi_31786626
    die "Contextual $*PACKAGE not found"
    box $P5045, "Contextual $*PACKAGE not found"
    set $P5043, $P5045
  vivi_31786626:
    set $P5038, $P5043
  fallback6622:
    $P5046 = $P5030."pkg_add_parent_or_role"($P5038, "add_parent", $P101)
    set $P5060, $P5046
    goto if3172_end6616
  if3172_else6615:
.annotate 'line', 2230
.annotate 'line', 2231
    find_lex $P5047, "$/"
    $P5048 = $P5047."CURSOR"()
    find_lex $P5049, "$/"
    unless_null $P5049, fallback6631
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  fallback6631:
    set fb_tmp_691, $P5049
    repr_defined $I5008, fb_tmp_691
    unless $I5008 goto if3180_else6629 
    set $P5051, fb_tmp_691["parent"]
    set $P5053, $P5051
    goto if3180_end6630
  if3180_else6629:
    null $P5052
    set $P5053, $P5052
  if3180_end6630:
    unless_null $P5053, vivi_31816632
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_31816632:
    set fb_tmp_690, $P5053
    repr_defined $I5007, fb_tmp_690
    unless $I5007 goto if3179_else6627 
    set $P5055, fb_tmp_690[0]
    set $P5057, $P5055
    goto if3179_end6628
  if3179_else6627:
    null $P5056
    set $P5057, $P5056
  if3179_end6628:
    unless_null $P5057, vivi_31826633
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_31826633:
    set $S5003, $P5057
    concat $S5002, "Could not find parent class '", $S5003
    concat $S5001, $S5002, "'"
    $P5059 = $P5048."panic"($S5001)
    set $P5060, $P5059
  if3172_end6616:
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_469_1361537952.49511") :anon :lex :outer("cuid_295_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2234
    .lex "$default", $P101 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*PKGDECL"
    unless_null $P5002, fallback6638
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_692, $P5003
    repr_defined $I5002, fb_tmp_692
    unless $I5002 goto if3185_else6639 
    set $P5005, fb_tmp_692["$PKGDECL"]
    set $P5007, $P5005
    goto if3185_end6640
  if3185_else6639:
    null $P5006
    set $P5007, $P5006
  if3185_end6640:
    unless_null $P5007, vivi_31866641
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_31866641:
    unless_null $P5007, vivi_31876642
    die "Contextual $*PKGDECL not found"
    box $P5009, "Contextual $*PKGDECL not found"
    set $P5007, $P5009
  vivi_31876642:
    set $P5002, $P5007
  fallback6638:
    set $S5001, $P5002
    iseq $I5001, $S5001, "grammar"
    unless $I5001 goto if3184_else6636 
    new $P5010, 'ResizablePMCArray'
    box $P5011, "NQPCursor"
    push $P5010, $P5011
    set $P5014, $P5010
    goto if3184_end6637
  if3184_else6636:
    new $P5012, 'ResizablePMCArray'
    box $P5013, "NQPMu"
    push $P5012, $P5013
    set $P5014, $P5012
  if3184_end6637:
    set $P101, $P5014
.annotate 'line', 2236
    find_dynamic_lex $P5015, "$*W"
    unless_null $P5015, fallback6643
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_693, $P5016
    repr_defined $I5003, fb_tmp_693
    unless $I5003 goto if3188_else6644 
    set $P5018, fb_tmp_693["$W"]
    set $P5020, $P5018
    goto if3188_end6645
  if3188_else6644:
    null $P5019
    set $P5020, $P5019
  if3188_end6645:
    unless_null $P5020, vivi_31896646
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_31896646:
    unless_null $P5020, vivi_31906647
    die "Contextual $*W not found"
    box $P5022, "Contextual $*W not found"
    set $P5020, $P5022
  vivi_31906647:
    set $P5015, $P5020
  fallback6643:
    find_dynamic_lex $P5023, "$*PACKAGE"
    unless_null $P5023, fallback6648
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5024, $P5025
    set fb_tmp_694, $P5024
    repr_defined $I5004, fb_tmp_694
    unless $I5004 goto if3191_else6649 
    set $P5026, fb_tmp_694["$PACKAGE"]
    set $P5028, $P5026
    goto if3191_end6650
  if3191_else6649:
    null $P5027
    set $P5028, $P5027
  if3191_end6650:
    unless_null $P5028, vivi_31926651
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_31926651:
    unless_null $P5028, vivi_31936652
    die "Contextual $*PACKAGE not found"
    box $P5030, "Contextual $*PACKAGE not found"
    set $P5028, $P5030
  vivi_31936652:
    set $P5023, $P5028
  fallback6648:
.annotate 'line', 2237
    find_dynamic_lex $P5031, "$*W"
    unless_null $P5031, fallback6653
    nqp_get_sc_object $P5033, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5032, $P5033
    set fb_tmp_695, $P5032
    repr_defined $I5005, fb_tmp_695
    unless $I5005 goto if3194_else6654 
    set $P5034, fb_tmp_695["$W"]
    set $P5036, $P5034
    goto if3194_end6655
  if3194_else6654:
    null $P5035
    set $P5036, $P5035
  if3194_end6655:
    unless_null $P5036, vivi_31956656
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_31956656:
    unless_null $P5036, vivi_31966657
    die "Contextual $*W not found"
    box $P5038, "Contextual $*W not found"
    set $P5036, $P5038
  vivi_31966657:
    set $P5031, $P5036
  fallback6653:
    $P5039 = $P5031."find_sym"($P101)
    $P5040 = $P5015."pkg_add_parent_or_role"($P5023, "set_default_parent", $P5039)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_470_1361537952.49511") :anon :lex :outer("cuid_295_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2242
    .param pmc _lex_param_0 
    .lex "$role", $P101 
    .lex "$role_found", $P102 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc fb_tmp_700 
    .local pmc fb_tmp_701 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_32086677
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
.annotate 'line', 2245
.annotate 'line', 2246
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6668
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_698, $P5004
    repr_defined $I5001, fb_tmp_698
    unless $I5001 goto if3202_else6669 
    set $P5006, fb_tmp_698["$W"]
    set $P5008, $P5006
    goto if3202_end6670
  if3202_else6669:
    null $P5007
    set $P5008, $P5007
  if3202_end6670:
    unless_null $P5008, vivi_32036671
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_32036671:
    unless_null $P5008, vivi_32046672
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_32046672:
    set $P5003, $P5008
  fallback6668:
    set fb_tmp_699, _lex_param_0
    repr_defined $I5002, fb_tmp_699
    unless $I5002 goto if3205_else6673 
    set $P5012, fb_tmp_699["identifier"]
    set $P5014, $P5012
    goto if3205_end6674
  if3205_else6673:
    null $P5013
    set $P5014, $P5013
  if3205_end6674:
    unless_null $P5014, vivi_32066675
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_32066675:
    repr_clone $P5011, $P5014
    $P5016 = $P5003."find_sym"($P5011)
    set $P101, $P5016
    box $P5017, 1
    set $P102, $P5017
    set $P5019, $P102
    pop_eh 
    goto skip_handler_32076676
  catch_handler_32086677:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_32076676
  skip_handler_32076676:
    unless $P102 goto if3209_else6678 
.annotate 'line', 2249
.annotate 'line', 2250
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback6680
    nqp_get_sc_object $P5022, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5021, $P5022
    set fb_tmp_700, $P5021
    repr_defined $I5003, fb_tmp_700
    unless $I5003 goto if3210_else6681 
    set $P5023, fb_tmp_700["$W"]
    set $P5025, $P5023
    goto if3210_end6682
  if3210_else6681:
    null $P5024
    set $P5025, $P5024
  if3210_end6682:
    unless_null $P5025, vivi_32116683
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_32116683:
    unless_null $P5025, vivi_32126684
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_32126684:
    set $P5020, $P5025
  fallback6680:
    find_dynamic_lex $P5028, "$*PACKAGE"
    unless_null $P5028, fallback6685
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5029, $P5030
    set fb_tmp_701, $P5029
    repr_defined $I5004, fb_tmp_701
    unless $I5004 goto if3213_else6686 
    set $P5031, fb_tmp_701["$PACKAGE"]
    set $P5033, $P5031
    goto if3213_end6687
  if3213_else6686:
    null $P5032
    set $P5033, $P5032
  if3213_end6687:
    unless_null $P5033, vivi_32146688
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_32146688:
    unless_null $P5033, vivi_32156689
    die "Contextual $*PACKAGE not found"
    box $P5035, "Contextual $*PACKAGE not found"
    set $P5033, $P5035
  vivi_32156689:
    set $P5028, $P5033
  fallback6685:
    $P5036 = $P5020."pkg_add_parent_or_role"($P5028, "add_role", $P101)
    set $P5040, $P5036
    goto if3209_end6679
  if3209_else6678:
.annotate 'line', 2252
.annotate 'line', 2253
    find_lex $P5037, "$/"
    $P5038 = $P5037."CURSOR"()
    set $S5003, _lex_param_0
    concat $S5002, "Could not find role '", $S5003
    concat $S5001, $S5002, "'"
    $P5039 = $P5038."panic"($S5001)
    set $P5040, $P5039
  if3209_end6679:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "role_params" :subid("cuid_296_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5011 = 'cuid_471_1361537952.49511' 
    capture_lex $P5011 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_711 
    unless_null _lex_param_1, fallback6743
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5004
  fallback6743:
    set fb_tmp_711, _lex_param_1
    repr_defined $I5001, fb_tmp_711
    unless $I5001 goto if3244_else6741 
    set $P5005, fb_tmp_711["variable"]
    set $P5007, $P5005
    goto if3244_end6742
  if3244_else6741:
    null $P5006
    set $P5007, $P5006
  if3244_end6742:
    unless_null $P5007, vivi_32456744
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_32456744:
    set $P5001, $P5007
    iter $P5003, $P5007
  for_next6750:
    unless $P5003, for_done6752
    shift $P5010, $P5003
  for_redo6751:
    .const 'Sub' $P5009 = 'cuid_471_1361537952.49511' 
    capture_lex $P5009
    $P5001 = $P5009($P5010)
    goto for_next6750
  for_done6752:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_471_1361537952.49511") :anon :lex :outer("cuid_296_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2275
    .param pmc _lex_param_0 
    .lex "$var", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_712 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2276
    $P5002 = _lex_param_0."ast"()
    set $P101, $P5002
.annotate 'line', 2277
    $P101."scope"("lexical")
.annotate 'line', 2278
    $P101."decl"("param")
.annotate 'line', 2279
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback6745
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_712, $P5004
    repr_defined $I5001, fb_tmp_712
    unless $I5001 goto if3246_else6746 
    set $P5006, fb_tmp_712["$W"]
    set $P5008, $P5006
    goto if3246_end6747
  if3246_else6746:
    null $P5007
    set $P5008, $P5007
  if3246_end6747:
    unless_null $P5008, vivi_32476748
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_32476748:
    unless_null $P5008, vivi_32486749
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_32486749:
    set $P5003, $P5008
  fallback6745:
    $P5011 = $P5003."cur_lexpad"()
    $P5012 = $P101."name"()
    $P5013 = $P5011."symbol"($P5012, "lexical" :named("scope"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<my>" :subid("cuid_297_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2283
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_713 
    unless_null _lex_param_1, fallback6755
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6755:
    set fb_tmp_713, _lex_param_1
    repr_defined $I5001, fb_tmp_713
    unless $I5001 goto if3249_else6753 
    set $P5002, fb_tmp_713["scoped"]
    set $P5004, $P5002
    goto if3249_end6754
  if3249_else6753:
    null $P5003
    set $P5004, $P5003
  if3249_end6754:
    unless_null $P5004, vivi_32506756
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32506756:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<our>" :subid("cuid_298_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2284
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_714 
    unless_null _lex_param_1, fallback6759
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6759:
    set fb_tmp_714, _lex_param_1
    repr_defined $I5001, fb_tmp_714
    unless $I5001 goto if3251_else6757 
    set $P5002, fb_tmp_714["scoped"]
    set $P5004, $P5002
    goto if3251_end6758
  if3251_else6757:
    null $P5003
    set $P5004, $P5003
  if3251_end6758:
    unless_null $P5004, vivi_32526760
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32526760:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scope_declarator:sym<has>" :subid("cuid_299_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_715 
    unless_null _lex_param_1, fallback6763
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6763:
    set fb_tmp_715, _lex_param_1
    repr_defined $I5001, fb_tmp_715
    unless $I5001 goto if3253_else6761 
    set $P5002, fb_tmp_715["scoped"]
    set $P5004, $P5002
    goto if3253_end6762
  if3253_else6761:
    null $P5003
    set $P5004, $P5003
  if3253_end6762:
    unless_null $P5004, vivi_32546764
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32546764:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "scoped" :subid("cuid_300_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_716 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
.annotate 'line', 2288
    unless_null _lex_param_1, fallback6769
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6769:
    set fb_tmp_716, _lex_param_1
    repr_defined $I5001, fb_tmp_716
    unless $I5001 goto if3256_else6767 
    set $P5002, fb_tmp_716["declarator"]
    set $P5004, $P5002
    goto if3256_end6768
  if3256_else6767:
    null $P5003
    set $P5004, $P5003
  if3256_end6768:
    unless_null $P5004, vivi_32576770
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32576770:
    unless $P5004 goto if3255_else6765 
    unless_null _lex_param_1, fallback6773
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6773:
    set fb_tmp_717, _lex_param_1
    repr_defined $I5002, fb_tmp_717
    unless $I5002 goto if3258_else6771 
    set $P5007, fb_tmp_717["declarator"]
    set $P5009, $P5007
    goto if3258_end6772
  if3258_else6771:
    null $P5008
    set $P5009, $P5008
  if3258_end6772:
    unless_null $P5009, vivi_32596774
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_32596774:
    $P5011 = $P5009."ast"()
    set $P5030, $P5011
    goto if3255_end6766
  if3255_else6765:
    unless_null _lex_param_1, fallback6779
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6779:
    set fb_tmp_718, _lex_param_1
    repr_defined $I5003, fb_tmp_718
    unless $I5003 goto if3261_else6777 
    set $P5013, fb_tmp_718["multi_declarator"]
    set $P5015, $P5013
    goto if3261_end6778
  if3261_else6777:
    null $P5014
    set $P5015, $P5014
  if3261_end6778:
    unless_null $P5015, vivi_32626780
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_32626780:
    unless $P5015 goto if3260_else6775 
.annotate 'line', 2289
    unless_null _lex_param_1, fallback6783
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5017
  fallback6783:
    set fb_tmp_719, _lex_param_1
    repr_defined $I5004, fb_tmp_719
    unless $I5004 goto if3263_else6781 
    set $P5018, fb_tmp_719["multi_declarator"]
    set $P5020, $P5018
    goto if3263_end6782
  if3263_else6781:
    null $P5019
    set $P5020, $P5019
  if3263_end6782:
    unless_null $P5020, vivi_32646784
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_32646784:
    $P5022 = $P5020."ast"()
    set $P5029, $P5022
    goto if3260_end6776
  if3260_else6775:
.annotate 'line', 2290
    unless_null _lex_param_1, fallback6787
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5023
  fallback6787:
    set fb_tmp_720, _lex_param_1
    repr_defined $I5005, fb_tmp_720
    unless $I5005 goto if3265_else6785 
    set $P5024, fb_tmp_720["package_declarator"]
    set $P5026, $P5024
    goto if3265_end6786
  if3265_else6785:
    null $P5025
    set $P5026, $P5025
  if3265_end6786:
    unless_null $P5026, vivi_32666788
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_32666788:
    $P5028 = $P5026."ast"()
    set $P5029, $P5028
  if3260_end6776:
    set $P5030, $P5029
  if3255_end6766:
    $P5031 = _lex_param_1."!make"($P5030)
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "declarator" :subid("cuid_301_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2293
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc fb_tmp_723 
.annotate 'line', 2294
    unless_null _lex_param_1, fallback6793
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6793:
    set fb_tmp_721, _lex_param_1
    repr_defined $I5001, fb_tmp_721
    unless $I5001 goto if3268_else6791 
    set $P5002, fb_tmp_721["routine_declarator"]
    set $P5004, $P5002
    goto if3268_end6792
  if3268_else6791:
    null $P5003
    set $P5004, $P5003
  if3268_end6792:
    unless_null $P5004, vivi_32696794
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32696794:
    unless $P5004 goto if3267_else6789 
.annotate 'line', 2295
    unless_null _lex_param_1, fallback6797
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6797:
    set fb_tmp_722, _lex_param_1
    repr_defined $I5002, fb_tmp_722
    unless $I5002 goto if3270_else6795 
    set $P5007, fb_tmp_722["routine_declarator"]
    set $P5009, $P5007
    goto if3270_end6796
  if3270_else6795:
    null $P5008
    set $P5009, $P5008
  if3270_end6796:
    unless_null $P5009, vivi_32716798
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_32716798:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3267_end6790
  if3267_else6789:
.annotate 'line', 2296
    unless_null _lex_param_1, fallback6801
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6801:
    set fb_tmp_723, _lex_param_1
    repr_defined $I5003, fb_tmp_723
    unless $I5003 goto if3272_else6799 
    set $P5013, fb_tmp_723["variable_declarator"]
    set $P5015, $P5013
    goto if3272_end6800
  if3272_else6799:
    null $P5014
    set $P5015, $P5014
  if3272_end6800:
    unless_null $P5015, vivi_32736802
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_32736802:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3267_end6790:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<multi>" :subid("cuid_302_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2299
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_724 
    .local pmc fb_tmp_725 
    .local pmc fb_tmp_726 
    unless_null _lex_param_1, fallback6807
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6807:
    set fb_tmp_724, _lex_param_1
    repr_defined $I5001, fb_tmp_724
    unless $I5001 goto if3275_else6805 
    set $P5002, fb_tmp_724["declarator"]
    set $P5004, $P5002
    goto if3275_end6806
  if3275_else6805:
    null $P5003
    set $P5004, $P5003
  if3275_end6806:
    unless_null $P5004, vivi_32766808
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32766808:
    unless $P5004 goto if3274_else6803 
    unless_null _lex_param_1, fallback6811
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6811:
    set fb_tmp_725, _lex_param_1
    repr_defined $I5002, fb_tmp_725
    unless $I5002 goto if3277_else6809 
    set $P5007, fb_tmp_725["declarator"]
    set $P5009, $P5007
    goto if3277_end6810
  if3277_else6809:
    null $P5008
    set $P5009, $P5008
  if3277_end6810:
    unless_null $P5009, vivi_32786812
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_32786812:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3274_end6804
  if3274_else6803:
    unless_null _lex_param_1, fallback6815
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6815:
    set fb_tmp_726, _lex_param_1
    repr_defined $I5003, fb_tmp_726
    unless $I5003 goto if3279_else6813 
    set $P5013, fb_tmp_726["routine_def"]
    set $P5015, $P5013
    goto if3279_end6814
  if3279_else6813:
    null $P5014
    set $P5015, $P5014
  if3279_end6814:
    unless_null $P5015, vivi_32806816
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_32806816:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3274_end6804:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<proto>" :subid("cuid_303_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2300
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_727 
    .local pmc fb_tmp_728 
    .local pmc fb_tmp_729 
    unless_null _lex_param_1, fallback6821
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6821:
    set fb_tmp_727, _lex_param_1
    repr_defined $I5001, fb_tmp_727
    unless $I5001 goto if3282_else6819 
    set $P5002, fb_tmp_727["declarator"]
    set $P5004, $P5002
    goto if3282_end6820
  if3282_else6819:
    null $P5003
    set $P5004, $P5003
  if3282_end6820:
    unless_null $P5004, vivi_32836822
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32836822:
    unless $P5004 goto if3281_else6817 
    unless_null _lex_param_1, fallback6825
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6825:
    set fb_tmp_728, _lex_param_1
    repr_defined $I5002, fb_tmp_728
    unless $I5002 goto if3284_else6823 
    set $P5007, fb_tmp_728["declarator"]
    set $P5009, $P5007
    goto if3284_end6824
  if3284_else6823:
    null $P5008
    set $P5009, $P5008
  if3284_end6824:
    unless_null $P5009, vivi_32856826
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_32856826:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if3281_end6818
  if3281_else6817:
    unless_null _lex_param_1, fallback6829
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6829:
    set fb_tmp_729, _lex_param_1
    repr_defined $I5003, fb_tmp_729
    unless $I5003 goto if3286_else6827 
    set $P5013, fb_tmp_729["routine_def"]
    set $P5015, $P5013
    goto if3286_end6828
  if3286_else6827:
    null $P5014
    set $P5015, $P5014
  if3286_end6828:
    unless_null $P5015, vivi_32876830
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_32876830:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if3281_end6818:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "multi_declarator:sym<null>" :subid("cuid_304_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2301
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_730 
    unless_null _lex_param_1, fallback6833
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback6833:
    set fb_tmp_730, _lex_param_1
    repr_defined $I5001, fb_tmp_730
    unless $I5001 goto if3288_else6831 
    set $P5002, fb_tmp_730["declarator"]
    set $P5004, $P5002
    goto if3288_end6832
  if3288_else6831:
    null $P5003
    set $P5004, $P5003
  if3288_end6832:
    unless_null $P5004, vivi_32896834
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_32896834:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "variable_declarator" :subid("cuid_305_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2304
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5095 = 'cuid_472_1361537952.49511' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_474_1361537952.49511' 
    capture_lex $P5095 
    .const 'Sub' $P5095 = 'cuid_475_1361537952.49511' 
    capture_lex $P5095 
    .lex "$past", $P101 
    .lex "$sigil", $P102 
    .lex "$name", $P103 
    .lex "$BLOCK", $P104 
    .lex "$*DECLARAND_ATTR", $P105 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_731 
    .local pmc fb_tmp_732 
    .local pmc fb_tmp_733 
    .local pmc fb_tmp_734 
    .local pmc fb_tmp_735 
    .local pmc fb_tmp_736 
    .local pmc fb_tmp_753 
    .local pmc fb_tmp_754 
    .local pmc fb_tmp_755 
    .local pmc fb_tmp_763 
    .local pmc fb_tmp_764 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P105, $P5005
.annotate 'line', 2305
    unless_null _lex_param_1, fallback6837
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback6837:
    set fb_tmp_731, _lex_param_1
    repr_defined $I5001, fb_tmp_731
    unless $I5001 goto if3290_else6835 
    set $P5007, fb_tmp_731["variable"]
    set $P5009, $P5007
    goto if3290_end6836
  if3290_else6835:
    null $P5008
    set $P5009, $P5008
  if3290_end6836:
    unless_null $P5009, vivi_32916838
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_32916838:
    $P5011 = $P5009."ast"()
    set $P101, $P5011
    unless_null _lex_param_1, fallback6843
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback6843:
    set fb_tmp_733, _lex_param_1
    repr_defined $I5003, fb_tmp_733
    unless $I5003 goto if3293_else6841 
    set $P5013, fb_tmp_733["variable"]
    set $P5015, $P5013
    goto if3293_end6842
  if3293_else6841:
    null $P5014
    set $P5015, $P5014
  if3293_end6842:
    unless_null $P5015, vivi_32946844
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_32946844:
    set fb_tmp_732, $P5015
    repr_defined $I5002, fb_tmp_732
    unless $I5002 goto if3292_else6839 
    set $P5017, fb_tmp_732["sigil"]
    set $P5019, $P5017
    goto if3292_end6840
  if3292_else6839:
    null $P5018
    set $P5019, $P5018
  if3292_end6840:
    unless_null $P5019, vivi_32956845
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_32956845:
    set $P102, $P5019
.annotate 'line', 2307
    $P5021 = $P101."name"()
    set $P103, $P5021
.annotate 'line', 2308
    find_dynamic_lex $P5022, "$*W"
    unless_null $P5022, fallback6846
    nqp_get_sc_object $P5024, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5023, $P5024
    set fb_tmp_734, $P5023
    repr_defined $I5004, fb_tmp_734
    unless $I5004 goto if3296_else6847 
    set $P5025, fb_tmp_734["$W"]
    set $P5027, $P5025
    goto if3296_end6848
  if3296_else6847:
    null $P5026
    set $P5027, $P5026
  if3296_end6848:
    unless_null $P5027, vivi_32976849
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_32976849:
    unless_null $P5027, vivi_32986850
    die "Contextual $*W not found"
    box $P5029, "Contextual $*W not found"
    set $P5027, $P5029
  vivi_32986850:
    set $P5022, $P5027
  fallback6846:
    $P5030 = $P5022."cur_lexpad"()
    set $P104, $P5030
    set $P5039, $P103
    unless $P103 goto if3303_end6859 
.annotate 'line', 2310
    $P5038 = $P104."symbol"($P103)
    set $P5039, $P5038
  if3303_end6859:
    unless $P5039 goto if3302_end6857 
.annotate 'line', 2311
    $P5040 = _lex_param_1."CURSOR"()
    $P5041 = $P5040."panic"("Redeclaration of symbol ", $P103)
  if3302_end6857:
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback6862
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5043, $P5044
    set fb_tmp_736, $P5043
    repr_defined $I5007, fb_tmp_736
    unless $I5007 goto if3305_else6863 
    set $P5045, fb_tmp_736["$SCOPE"]
    set $P5047, $P5045
    goto if3305_end6864
  if3305_else6863:
    null $P5046
    set $P5047, $P5046
  if3305_end6864:
    unless_null $P5047, vivi_33066865
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_33066865:
    unless_null $P5047, vivi_33076866
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_33076866:
    set $P5042, $P5047
  fallback6862:
    set $S5001, $P5042
    iseq $I5006, $S5001, "has"
    unless $I5006 goto if3304_else6860 
    .const 'Sub' $P5050 = 'cuid_472_1361537952.49511' 
    capture_lex $P5050
    $P5051 = $P5050()
    goto if3304_end6861
  if3304_else6860:
    find_dynamic_lex $P5052, "$*SCOPE"
    unless_null $P5052, fallback6952
    nqp_get_sc_object $P5054, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5053, $P5054
    set fb_tmp_753, $P5053
    repr_defined $I5009, fb_tmp_753
    unless $I5009 goto if3358_else6953 
    set $P5055, fb_tmp_753["$SCOPE"]
    set $P5057, $P5055
    goto if3358_end6954
  if3358_else6953:
    null $P5056
    set $P5057, $P5056
  if3358_end6954:
    unless_null $P5057, vivi_33596955
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_33596955:
    unless_null $P5057, vivi_33606956
    die "Contextual $*SCOPE not found"
    box $P5059, "Contextual $*SCOPE not found"
    set $P5057, $P5059
  vivi_33606956:
    set $P5052, $P5057
  fallback6952:
    set $S5002, $P5052
    iseq $I5008, $S5002, "our"
    unless $I5008 goto if3357_else6950 
.annotate 'line', 2341
    unless_null _lex_param_1, fallback6961
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5060
  fallback6961:
    set fb_tmp_754, _lex_param_1
    repr_defined $I5010, fb_tmp_754
    unless $I5010 goto if3362_else6959 
    set $P5061, fb_tmp_754["typename"]
    set $P5063, $P5061
    goto if3362_end6960
  if3362_else6959:
    null $P5062
    set $P5063, $P5062
  if3362_end6960:
    unless_null $P5063, vivi_33636962
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_33636962:
    unless $P5063 goto if3361_end6958 
.annotate 'line', 2345
.annotate 'line', 2346
    $P5065 = _lex_param_1."CURSOR"()
    $P5066 = $P5065."panic"("Cannot put types on our-scoped variables")
  if3361_end6958:
    unless_null _lex_param_1, fallback6965
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5067
  fallback6965:
    set fb_tmp_755, _lex_param_1
    repr_defined $I5011, fb_tmp_755
    unless $I5011 goto if3364_else6963 
    set $P5068, fb_tmp_755["variable"]
    set $P5070, $P5068
    goto if3364_end6964
  if3364_else6963:
    null $P5069
    set $P5070, $P5069
  if3364_end6964:
    unless_null $P5070, vivi_33656966
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_33656966:
    set $S5003, $P5070
    box $P5072, $S5003
    set $P103, $P5072
.annotate 'line', 2349
    new $P5073, 'ResizablePMCArray'
    push $P5073, $P103
    $P5074 = "&lexical_package_lookup"($P5073, _lex_param_1)
    set $P101, $P5074
.annotate 'line', 2350
    $P5075 = $P104."symbol"($P103, "package" :named("scope"))
    set $P5078, $P5075
    goto if3357_end6951
  if3357_else6950:
    .const 'Sub' $P5076 = 'cuid_474_1361537952.49511' 
    capture_lex $P5076
    $P5077 = $P5076()
    set $P5078, $P5077
  if3357_end6951:
  if3304_end6861:
    unless_null _lex_param_1, fallback7006
    nqp_get_sc_object $P5079, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5079
  fallback7006:
    set fb_tmp_763, _lex_param_1
    repr_defined $I5012, fb_tmp_763
    unless $I5012 goto if3387_else7004 
    set $P5080, fb_tmp_763["trait"]
    set $P5082, $P5080
    goto if3387_end7005
  if3387_else7004:
    null $P5081
    set $P5082, $P5081
  if3387_end7005:
    unless_null $P5082, vivi_33887007
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_33887007:
    unless $P5082 goto if3386_end7003 
.annotate 'line', 2379
    unless_null _lex_param_1, fallback7010
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5087
  fallback7010:
    set fb_tmp_764, _lex_param_1
    repr_defined $I5013, fb_tmp_764
    unless $I5013 goto if3389_else7008 
    set $P5088, fb_tmp_764["trait"]
    set $P5090, $P5088
    goto if3389_end7009
  if3389_else7008:
    null $P5089
    set $P5090, $P5089
  if3389_end7009:
    unless_null $P5090, vivi_33907011
    nqp_get_sc_object $P5091, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5090, $P5091
  vivi_33907011:
    set $P5084, $P5090
    iter $P5086, $P5090
  for_next7012:
    unless $P5086, for_done7014
    shift $P5093, $P5086
  for_redo7013:
    .const 'Sub' $P5092 = 'cuid_475_1361537952.49511' 
    capture_lex $P5092
    $P5084 = $P5092($P5093)
    goto for_next7012
  for_done7014:
  if3386_end7003:
.annotate 'line', 2383
    $P5094 = _lex_param_1."!make"($P101)
    .return ($P5094) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_472_1361537952.49511") :anon :lex :outer("cuid_305_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2313
    .lex "%lit_args", $P101 
    .lex "%obj_args", $P102 
    .local pmc fb_tmp_737 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_738 
    .local pmc fb_tmp_739 
    .local pmc fb_tmp_740 
    .local pmc fb_tmp_741 
    .local pmc fb_tmp_742 
    .local pmc fb_tmp_743 
    .local pmc fb_tmp_744 
    .local pmc fb_tmp_745 
    .local pmc fb_tmp_746 
    .local pmc fb_tmp_747 
    .local pmc fb_tmp_748 
    .local pmc fb_tmp_749 
    .local pmc fb_tmp_750 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_751 
    .local pmc fb_tmp_752 
    .local pmc pkg_lookup_tmp_211 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*HOW"
    unless_null $P5003, fallback6869
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_45, $P5004
    set fb_tmp_737, pkg_viv_tmp_45
    repr_defined $I5002, fb_tmp_737
    unless $I5002 goto if3309_else6870 
    set $P5006, fb_tmp_737["%HOW"]
    set $P5008, $P5006
    goto if3309_end6871
  if3309_else6870:
    null $P5007
    set $P5008, $P5007
  if3309_end6871:
    unless_null $P5008, vivi_33106872
    new $P5009, 'Hash'
    set pkg_viv_tmp_45["%HOW"], $P5009
    set $P5008, $P5009
  vivi_33106872:
    unless_null $P5008, vivi_33116873
    die "Contextual %*HOW not found"
    box $P5010, "Contextual %*HOW not found"
    set $P5008, $P5010
  vivi_33116873:
    set $P5003, $P5008
  fallback6869:
    find_dynamic_lex $P5011, "$*PKGDECL"
    unless_null $P5011, fallback6874
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5012, $P5013
    set fb_tmp_738, $P5012
    repr_defined $I5003, fb_tmp_738
    unless $I5003 goto if3312_else6875 
    set $P5014, fb_tmp_738["$PKGDECL"]
    set $P5016, $P5014
    goto if3312_end6876
  if3312_else6875:
    null $P5015
    set $P5016, $P5015
  if3312_end6876:
    unless_null $P5016, vivi_33136877
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_33136877:
    unless_null $P5016, vivi_33146878
    die "Contextual $*PKGDECL not found"
    box $P5018, "Contextual $*PKGDECL not found"
    set $P5016, $P5018
  vivi_33146878:
    set $P5011, $P5016
  fallback6874:
    set $S5002, $P5011
    concat $S5001, $S5002, "-attr"
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless3308_end6868 
.annotate 'line', 2315
.annotate 'line', 2316
    find_lex $P5019, "$/"
    $P5020 = $P5019."CURSOR"()
    find_dynamic_lex $P5021, "$*PKGDECL"
    unless_null $P5021, fallback6879
    nqp_get_sc_object $P5023, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5022, $P5023
    set fb_tmp_739, $P5022
    repr_defined $I5004, fb_tmp_739
    unless $I5004 goto if3315_else6880 
    set $P5024, fb_tmp_739["$PKGDECL"]
    set $P5026, $P5024
    goto if3315_end6881
  if3315_else6880:
    null $P5025
    set $P5026, $P5025
  if3315_end6881:
    unless_null $P5026, vivi_33166882
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_33166882:
    unless_null $P5026, vivi_33176883
    die "Contextual $*PKGDECL not found"
    box $P5028, "Contextual $*PKGDECL not found"
    set $P5026, $P5028
  vivi_33176883:
    set $P5021, $P5026
  fallback6879:
    set $S5004, $P5021
    concat $S5003, $S5004, " packages do not support attributes"
    $P5029 = $P5020."panic"($S5003)
  unless3308_end6868:
    find_lex $P5030, "$name"
    set $P101["name"], $P5030
    find_lex $P5031, "$/"
    unless_null $P5031, fallback6888
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  fallback6888:
    set fb_tmp_740, $P5031
    repr_defined $I5005, fb_tmp_740
    unless $I5005 goto if3319_else6886 
    set $P5033, fb_tmp_740["typename"]
    set $P5035, $P5033
    goto if3319_end6887
  if3319_else6886:
    null $P5034
    set $P5035, $P5034
  if3319_end6887:
    unless_null $P5035, vivi_33206889
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_33206889:
    unless $P5035 goto if3318_end6885 
.annotate 'line', 2323
.annotate 'line', 2324
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback6890
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5038, $P5039
    set fb_tmp_741, $P5038
    repr_defined $I5006, fb_tmp_741
    unless $I5006 goto if3321_else6891 
    set $P5040, fb_tmp_741["$W"]
    set $P5042, $P5040
    goto if3321_end6892
  if3321_else6891:
    null $P5041
    set $P5042, $P5041
  if3321_end6892:
    unless_null $P5042, vivi_33226893
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_33226893:
    unless_null $P5042, vivi_33236894
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_33236894:
    set $P5037, $P5042
  fallback6890:
    new $P5045, 'ResizablePMCArray'
    find_lex $P5046, "$/"
    unless_null $P5046, fallback6899
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5047
  fallback6899:
    set fb_tmp_743, $P5046
    repr_defined $I5008, fb_tmp_743
    unless $I5008 goto if3325_else6897 
    set $P5048, fb_tmp_743["typename"]
    set $P5050, $P5048
    goto if3325_end6898
  if3325_else6897:
    null $P5049
    set $P5050, $P5049
  if3325_end6898:
    unless_null $P5050, vivi_33266900
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_33266900:
    set fb_tmp_742, $P5050
    repr_defined $I5007, fb_tmp_742
    unless $I5007 goto if3324_else6895 
    set $P5052, fb_tmp_742[0]
    set $P5054, $P5052
    goto if3324_end6896
  if3324_else6895:
    null $P5053
    set $P5054, $P5053
  if3324_end6896:
    unless_null $P5054, vivi_33276901
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_33276901:
    set $S5005, $P5054
    box $P5056, $S5005
    push $P5045, $P5056
    $P5057 = $P5037."find_sym"($P5045)
    set $P102["type"], $P5057
  if3318_end6885:
    find_lex $P5058, "$sigil"
    set $S5006, $P5058
    iseq $I5009, $S5006, "$"
    set $I5011, $I5009
    if $I5009 goto unless3329_end6905 
    find_lex $P5059, "$sigil"
    set $S5007, $P5059
    iseq $I5010, $S5007, "&"
    set $I5011, $I5010
  unless3329_end6905:
    unless $I5011 goto if3328_end6903 
.annotate 'line', 2326
    find_lex $P5060, "$/"
    unless_null $P5060, fallback6910
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  fallback6910:
    set fb_tmp_744, $P5060
    repr_defined $I5012, fb_tmp_744
    unless $I5012 goto if3331_else6908 
    set $P5062, fb_tmp_744["typename"]
    set $P5064, $P5062
    goto if3331_end6909
  if3331_else6908:
    null $P5063
    set $P5064, $P5063
  if3331_end6909:
    unless_null $P5064, vivi_33326911
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_33326911:
    unless $P5064 goto if3330_else6906 
.annotate 'line', 2327
    set fb_tmp_745, $P102
    repr_defined $I5013, fb_tmp_745
    unless $I5013 goto if3333_else6912 
    set $P5066, fb_tmp_745["type"]
    set $P5068, $P5066
    goto if3333_end6913
  if3333_else6912:
    null $P5067
    set $P5068, $P5067
  if3333_end6913:
    unless_null $P5068, vivi_33346914
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_33346914:
    set $P102["default"], $P5068
    set $P5083, $P5068
    goto if3330_end6907
  if3330_else6906:
.annotate 'line', 2330
    new $P5081, 'ExceptionHandler'
    set_label $P5081, catch_handler_33396921
    $P5081.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5081
.annotate 'line', 2331
    find_dynamic_lex $P5070, "$*W"
    unless_null $P5070, fallback6915
    nqp_get_sc_object $P5072, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5071, $P5072
    set fb_tmp_746, $P5071
    repr_defined $I5014, fb_tmp_746
    unless $I5014 goto if3335_else6916 
    set $P5073, fb_tmp_746["$W"]
    set $P5075, $P5073
    goto if3335_end6917
  if3335_else6916:
    null $P5074
    set $P5075, $P5074
  if3335_end6917:
    unless_null $P5075, vivi_33366918
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_33366918:
    unless_null $P5075, vivi_33376919
    die "Contextual $*W not found"
    box $P5077, "Contextual $*W not found"
    set $P5075, $P5077
  vivi_33376919:
    set $P5070, $P5075
  fallback6915:
    new $P5078, 'ResizablePMCArray'
    box $P5079, "NQPMu"
    push $P5078, $P5079
    $P5080 = $P5070."find_sym"($P5078)
    set $P102["default"], $P5080
    set $P5082, $P5080
    pop_eh 
    goto skip_handler_33386920
  catch_handler_33396921:
    .get_results ($P5081) 
    set $I10001, 1
    set $P5081["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5081
    pop_upto_eh $P5081
    pop_eh 
    set $P5082, $P10001
    goto skip_handler_33386920
  skip_handler_33386920:
    set $P5083, $P5082
  if3330_end6907:
  if3328_end6903:
.annotate 'line', 2336
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback6922
    nqp_get_sc_object $P5086, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5085, $P5086
    set fb_tmp_747, $P5085
    repr_defined $I5015, fb_tmp_747
    unless $I5015 goto if3340_else6923 
    set $P5087, fb_tmp_747["$W"]
    set $P5089, $P5087
    goto if3340_end6924
  if3340_else6923:
    null $P5088
    set $P5089, $P5088
  if3340_end6924:
    unless_null $P5089, vivi_33416925
    nqp_get_sc_object $P5090, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5089, $P5090
  vivi_33416925:
    unless_null $P5089, vivi_33426926
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_33426926:
    set $P5084, $P5089
  fallback6922:
    find_dynamic_lex $P5092, "$*PACKAGE"
    unless_null $P5092, fallback6927
    nqp_get_sc_object $P5094, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5093, $P5094
    set fb_tmp_748, $P5093
    repr_defined $I5016, fb_tmp_748
    unless $I5016 goto if3343_else6928 
    set $P5095, fb_tmp_748["$PACKAGE"]
    set $P5097, $P5095
    goto if3343_end6929
  if3343_else6928:
    null $P5096
    set $P5097, $P5096
  if3343_end6929:
    unless_null $P5097, vivi_33446930
    nqp_get_sc_object $P5098, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5098
  vivi_33446930:
    unless_null $P5097, vivi_33456931
    die "Contextual $*PACKAGE not found"
    box $P5099, "Contextual $*PACKAGE not found"
    set $P5097, $P5099
  vivi_33456931:
    set $P5092, $P5097
  fallback6927:
    find_dynamic_lex $P5100, "%*HOW"
    unless_null $P5100, fallback6934
    nqp_get_sc_object $P5102, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_46, $P5101
    set fb_tmp_750, pkg_viv_tmp_46
    repr_defined $I5018, fb_tmp_750
    unless $I5018 goto if3347_else6935 
    set $P5103, fb_tmp_750["%HOW"]
    set $P5105, $P5103
    goto if3347_end6936
  if3347_else6935:
    null $P5104
    set $P5105, $P5104
  if3347_end6936:
    unless_null $P5105, vivi_33486937
    new $P5106, 'Hash'
    set pkg_viv_tmp_46["%HOW"], $P5106
    set $P5105, $P5106
  vivi_33486937:
    unless_null $P5105, vivi_33496938
    die "Contextual %*HOW not found"
    box $P5107, "Contextual %*HOW not found"
    set $P5105, $P5107
  vivi_33496938:
    set $P5100, $P5105
  fallback6934:
    set fb_tmp_749, $P5100
    repr_defined $I5017, fb_tmp_749
    unless $I5017 goto if3346_else6932 
    find_dynamic_lex $P5109, "$*PKGDECL"
    unless_null $P5109, fallback6939
    nqp_get_sc_object $P5111, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5110, $P5111
    set fb_tmp_751, $P5110
    repr_defined $I5019, fb_tmp_751
    unless $I5019 goto if3350_else6940 
    set $P5112, fb_tmp_751["$PKGDECL"]
    set $P5114, $P5112
    goto if3350_end6941
  if3350_else6940:
    null $P5113
    set $P5114, $P5113
  if3350_end6941:
    unless_null $P5114, vivi_33516942
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5115
  vivi_33516942:
    unless_null $P5114, vivi_33526943
    die "Contextual $*PKGDECL not found"
    box $P5116, "Contextual $*PKGDECL not found"
    set $P5114, $P5116
  vivi_33526943:
    set $P5109, $P5114
  fallback6939:
    set $S5009, $P5109
    concat $S5008, $S5009, "-attr"
    set $P5108, fb_tmp_749[$S5008]
    set $P5118, $P5108
    goto if3346_end6933
  if3346_else6932:
    null $P5117
    set $P5118, $P5117
  if3346_end6933:
    unless_null $P5118, vivi_33536944
    nqp_get_sc_object $P5119, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5118, $P5119
  vivi_33536944:
    $P5120 = $P5084."pkg_add_attribute"($P5092, $P5118, $P101, $P102)
    store_dynamic_lex "$*DECLARAND_ATTR", $P5120
.annotate 'line', 2339
    nqp_get_sc_object $P5122, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_211, $P5122
    get_who $P5123, pkg_lookup_tmp_211
    exists $I5021, $P5123["QAST"]
    unless $I5021 goto if3355_else6947 
    get_who $P5125, pkg_lookup_tmp_211
    set $P5124, $P5125["QAST"]
    set $P5127, $P5124
    goto if3355_end6948
  if3355_else6947:
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5127, $P5126
  if3355_end6948:
    get_who $P5121, $P5127
    set fb_tmp_752, $P5121
    repr_defined $I5020, fb_tmp_752
    unless $I5020 goto if3354_else6945 
    set $P5128, fb_tmp_752["Stmts"]
    set $P5130, $P5128
    goto if3354_end6946
  if3354_else6945:
    null $P5129
    set $P5130, $P5129
  if3354_end6946:
    unless_null $P5130, vivi_33566949
    nqp_get_sc_object $P5131, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5130, $P5131
  vivi_33566949:
    $P5132 = $P5130."new"()
    store_lex "$past", $P5132
    .return ($P5132) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_474_1361537952.49511") :anon :lex :outer("cuid_305_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2352
    .const 'Sub' $P5076 = 'cuid_473_1361537952.49511' 
    capture_lex $P5076 
    .lex "$type", $P101 
    .lex "$default", $P102 
    .local pmc fb_tmp_756 
    .local pmc fb_tmp_757 
    .local pmc fb_tmp_758 
    .local pmc fb_tmp_759 
    .local pmc fb_tmp_760 
    .local pmc fb_tmp_761 
    .local pmc pkg_lookup_tmp_212 
    .local pmc fb_tmp_762 
    .local pmc pkg_lookup_tmp_213 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_lex $P5003, "$/"
    unless_null $P5003, fallback6971
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  fallback6971:
    set fb_tmp_756, $P5003
    repr_defined $I5001, fb_tmp_756
    unless $I5001 goto if3367_else6969 
    set $P5005, fb_tmp_756["typename"]
    set $P5007, $P5005
    goto if3367_end6970
  if3367_else6969:
    null $P5006
    set $P5007, $P5006
  if3367_end6970:
    unless_null $P5007, vivi_33686972
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_33686972:
    unless $P5007 goto if3366_else6967 
.annotate 'line', 2355
    find_lex $P5009, "$sigil"
    set $S5001, $P5009
    iseq $I5002, $S5001, "$"
    if $I5002 goto unless3369_end6974 
.annotate 'line', 2356
.annotate 'line', 2357
    find_lex $P5010, "$/"
    $P5011 = $P5010."CURSOR"()
    $P5012 = $P5011."panic"("Only typed scalars are currently supported in NQP")
  unless3369_end6974:
.annotate 'line', 2359
    find_dynamic_lex $P5013, "$*W"
    unless_null $P5013, fallback6975
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5014, $P5015
    set fb_tmp_757, $P5014
    repr_defined $I5003, fb_tmp_757
    unless $I5003 goto if3370_else6976 
    set $P5016, fb_tmp_757["$W"]
    set $P5018, $P5016
    goto if3370_end6977
  if3370_else6976:
    null $P5017
    set $P5018, $P5017
  if3370_end6977:
    unless_null $P5018, vivi_33716978
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_33716978:
    unless_null $P5018, vivi_33726979
    die "Contextual $*W not found"
    box $P5020, "Contextual $*W not found"
    set $P5018, $P5020
  vivi_33726979:
    set $P5013, $P5018
  fallback6975:
    new $P5021, 'ResizablePMCArray'
    find_lex $P5022, "$/"
    unless_null $P5022, fallback6984
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  fallback6984:
    set fb_tmp_759, $P5022
    repr_defined $I5005, fb_tmp_759
    unless $I5005 goto if3374_else6982 
    set $P5024, fb_tmp_759["typename"]
    set $P5026, $P5024
    goto if3374_end6983
  if3374_else6982:
    null $P5025
    set $P5026, $P5025
  if3374_end6983:
    unless_null $P5026, vivi_33756985
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_33756985:
    set fb_tmp_758, $P5026
    repr_defined $I5004, fb_tmp_758
    unless $I5004 goto if3373_else6980 
    set $P5028, fb_tmp_758[0]
    set $P5030, $P5028
    goto if3373_end6981
  if3373_else6980:
    null $P5029
    set $P5030, $P5029
  if3373_end6981:
    unless_null $P5030, vivi_33766986
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  vivi_33766986:
    set $S5002, $P5030
    box $P5032, $S5002
    push $P5021, $P5032
    $P5033 = $P5013."find_sym"($P5021)
    set $P101, $P5033
    repr_get_primitive_type_spec $I5006, $P101
    unless $I5006 goto if3377_else6987 
    .const 'Sub' $P5034 = 'cuid_473_1361537952.49511' 
    capture_lex $P5034
    $P5035 = $P5034($I5006)
    set $P5039, $P5035
    goto if3377_end6988
  if3377_else6987:
.annotate 'line', 2363
.annotate 'line', 2364
    find_lex $P5036, "$/"
    $P5037 = $P5036."CURSOR"()
    $P5038 = $P5037."panic"("Only native types are currently supported/checked")
    set $P5039, $P5038
  if3377_end6988:
    goto if3366_end6968
  if3366_else6967:
.annotate 'line', 2367
.annotate 'line', 2368
    find_lex $P5040, "$sigil"
    $P5041 = "&default_for"($P5040)
    set $P102, $P5041
  if3366_end6968:
.annotate 'line', 2370
    find_lex $P5042, "$BLOCK"
    set fb_tmp_760, $P5042
    repr_defined $I5007, fb_tmp_760
    unless $I5007 goto if3378_else6989 
    set $P5043, fb_tmp_760[0]
    set $P5045, $P5043
    goto if3378_end6990
  if3378_else6989:
    null $P5044
    set $P5045, $P5044
  if3378_end6990:
    unless_null $P5045, vivi_33796991
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_33796991:
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_212, $P5048
    get_who $P5049, pkg_lookup_tmp_212
    exists $I5009, $P5049["QAST"]
    unless $I5009 goto if3381_else6994 
    get_who $P5051, pkg_lookup_tmp_212
    set $P5050, $P5051["QAST"]
    set $P5053, $P5050
    goto if3381_end6995
  if3381_else6994:
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5052
  if3381_end6995:
    get_who $P5047, $P5053
    set fb_tmp_761, $P5047
    repr_defined $I5008, fb_tmp_761
    unless $I5008 goto if3380_else6992 
    set $P5054, fb_tmp_761["Op"]
    set $P5056, $P5054
    goto if3380_end6993
  if3380_else6992:
    null $P5055
    set $P5056, $P5055
  if3380_end6993:
    unless_null $P5056, vivi_33826996
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_33826996:
    find_lex $P5058, "$/"
.annotate 'line', 2372
    nqp_get_sc_object $P5060, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_213, $P5060
    get_who $P5061, pkg_lookup_tmp_213
    exists $I5011, $P5061["QAST"]
    unless $I5011 goto if3384_else6999 
    get_who $P5063, pkg_lookup_tmp_213
    set $P5062, $P5063["QAST"]
    set $P5065, $P5062
    goto if3384_end7000
  if3384_else6999:
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5064
  if3384_end7000:
    get_who $P5059, $P5065
    set fb_tmp_762, $P5059
    repr_defined $I5010, fb_tmp_762
    unless $I5010 goto if3383_else6997 
    set $P5066, fb_tmp_762["Var"]
    set $P5068, $P5066
    goto if3383_end6998
  if3383_else6997:
    null $P5067
    set $P5068, $P5067
  if3383_end6998:
    unless_null $P5068, vivi_33857001
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_33857001:
    find_lex $P5070, "$name"
    $P5071 = $P5068."new"($P5070 :named("name"), "lexical" :named("scope"), "var" :named("decl"), $P101 :named("returns"))
    $P5072 = $P5056."new"($P5071, $P102, "bind" :named("op"), $P5058 :named("node"))
    $P5045."push"($P5072)
.annotate 'line', 2375
    find_lex $P5073, "$BLOCK"
    find_lex $P5074, "$name"
    $P5075 = $P5073."symbol"($P5074, "lexical" :named("scope"), $P101 :named("type"))
    .return ($P5075) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_473_1361537952.49511") :anon :lex :outer("cuid_474_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2360
    .param pmc _lex_param_0 
    .lex "$prim_spec", _lex_param_0 
.annotate 'line', 2361
    $P5001 = "&default_value_for_prim"(_lex_param_0)
    store_lex "$default", $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_475_1361537952.49511") :anon :lex :outer("cuid_305_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2380
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<sub>" :subid("cuid_306_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_765 
    unless_null _lex_param_1, fallback7017
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback7017:
    set fb_tmp_765, _lex_param_1
    repr_defined $I5001, fb_tmp_765
    unless $I5001 goto if3391_else7015 
    set $P5002, fb_tmp_765["routine_def"]
    set $P5004, $P5002
    goto if3391_end7016
  if3391_else7015:
    null $P5003
    set $P5004, $P5003
  if3391_end7016:
    unless_null $P5004, vivi_33927018
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_33927018:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_declarator:sym<method>" :subid("cuid_307_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2387
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_766 
    unless_null _lex_param_1, fallback7021
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback7021:
    set fb_tmp_766, _lex_param_1
    repr_defined $I5001, fb_tmp_766
    unless $I5001 goto if3393_else7019 
    set $P5002, fb_tmp_766["method_def"]
    set $P5004, $P5002
    goto if3393_end7020
  if3393_else7019:
    null $P5003
    set $P5004, $P5003
  if3393_end7020:
    unless_null $P5004, vivi_33947022
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_33947022:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "routine_def" :subid("cuid_308_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2389
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5084 = 'cuid_479_1361537952.49511' 
    capture_lex $P5084 
    .const 'Sub' $P5084 = 'cuid_482_1361537952.49511' 
    capture_lex $P5084 
    .lex "$past", $P101 
    .lex "$block", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_767 
    .local pmc fb_tmp_768 
    .local pmc fb_tmp_769 
    .local pmc fb_tmp_770 
    .local pmc fb_tmp_771 
    .local pmc fb_tmp_819 
    .local pmc fb_tmp_820 
    .local pmc fb_tmp_821 
    .local pmc pkg_lookup_tmp_228 
    .local pmc fb_tmp_822 
    .local pmc fb_tmp_823 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback7027
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5004
  fallback7027:
    set fb_tmp_767, _lex_param_1
    repr_defined $I5001, fb_tmp_767
    unless $I5001 goto if3396_else7025 
    set $P5005, fb_tmp_767["onlystar"]
    set $P5007, $P5005
    goto if3396_end7026
  if3396_else7025:
    null $P5006
    set $P5007, $P5006
  if3396_end7026:
    unless_null $P5007, vivi_33977028
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_33977028:
    unless $P5007 goto if3395_else7023 
.annotate 'line', 2393
.annotate 'line', 2394
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if3395_end7024
  if3395_else7023:
.annotate 'line', 2396
.annotate 'line', 2397
    unless_null _lex_param_1, fallback7031
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5010
  fallback7031:
    set fb_tmp_768, _lex_param_1
    repr_defined $I5002, fb_tmp_768
    unless $I5002 goto if3398_else7029 
    set $P5011, fb_tmp_768["blockoid"]
    set $P5013, $P5011
    goto if3398_end7030
  if3398_else7029:
    null $P5012
    set $P5013, $P5012
  if3398_end7030:
    unless_null $P5013, vivi_33997032
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_33997032:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2398
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback7035
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5017, $P5018
    set fb_tmp_769, $P5017
    repr_defined $I5003, fb_tmp_769
    unless $I5003 goto if3401_else7036 
    set $P5019, fb_tmp_769["$RETURN_USED"]
    set $P5021, $P5019
    goto if3401_end7037
  if3401_else7036:
    null $P5020
    set $P5021, $P5020
  if3401_end7037:
    unless_null $P5021, vivi_34027038
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_34027038:
    unless_null $P5021, vivi_34037039
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_34037039:
    set $P5016, $P5021
  fallback7035:
    set $P5029, $P5016
    unless $P5016 goto if3400_end7034 
.annotate 'line', 2399
.annotate 'line', 2400
    set fb_tmp_770, $P101
    repr_defined $I5004, fb_tmp_770
    unless $I5004 goto if3404_else7040 
    set $P5024, fb_tmp_770[1]
    set $P5026, $P5024
    goto if3404_end7041
  if3404_else7040:
    null $P5025
    set $P5026, $P5025
  if3404_end7041:
    unless_null $P5026, vivi_34057042
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_34057042:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if3400_end7034:
  if3395_end7024:
    set $P102, $P101
    unless_null _lex_param_1, fallback7047
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5030
  fallback7047:
    set fb_tmp_771, _lex_param_1
    repr_defined $I5005, fb_tmp_771
    unless $I5005 goto if3407_else7045 
    set $P5031, fb_tmp_771["deflongname"]
    set $P5033, $P5031
    goto if3407_end7046
  if3407_else7045:
    null $P5032
    set $P5033, $P5032
  if3407_end7046:
    unless_null $P5033, vivi_34087048
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_34087048:
    unless $P5033 goto if3406_else7043 
    .const 'Sub' $P5035 = 'cuid_479_1361537952.49511' 
    capture_lex $P5035
    $P5036 = $P5035()
    goto if3406_end7044
  if3406_else7043:
.annotate 'line', 2510
.annotate 'line', 2511
    find_dynamic_lex $P5037, "$*W"
    unless_null $P5037, fallback7291
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5038, $P5039
    set fb_tmp_819, $P5038
    repr_defined $I5006, fb_tmp_819
    unless $I5006 goto if3551_else7292 
    set $P5040, fb_tmp_819["$W"]
    set $P5042, $P5040
    goto if3551_end7293
  if3551_else7292:
    null $P5041
    set $P5042, $P5041
  if3551_end7293:
    unless_null $P5042, vivi_35527294
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_35527294:
    unless_null $P5042, vivi_35537295
    die "Contextual $*W not found"
    box $P5044, "Contextual $*W not found"
    set $P5042, $P5044
  vivi_35537295:
    set $P5037, $P5042
  fallback7291:
    $P5045 = $P5037."is_precompilation_mode"()
    set $P5055, $P5045
    unless $P5045 goto if3550_end7290 
.annotate 'line', 2512
    find_dynamic_lex $P5046, "$*W"
    unless_null $P5046, fallback7296
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5047, $P5048
    set fb_tmp_820, $P5047
    repr_defined $I5007, fb_tmp_820
    unless $I5007 goto if3554_else7297 
    set $P5049, fb_tmp_820["$W"]
    set $P5051, $P5049
    goto if3554_end7298
  if3554_else7297:
    null $P5050
    set $P5051, $P5050
  if3554_end7298:
    unless_null $P5051, vivi_35557299
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_35557299:
    unless_null $P5051, vivi_35567300
    die "Contextual $*W not found"
    box $P5053, "Contextual $*W not found"
    set $P5051, $P5053
  vivi_35567300:
    set $P5046, $P5051
  fallback7296:
    $P5054 = $P5046."create_code"($P101, "<anon>", 0)
    set $P5055, $P5054
  if3550_end7290:
  if3406_end7044:
.annotate 'line', 2516
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_228, $P5057
    get_who $P5058, pkg_lookup_tmp_228
    exists $I5009, $P5058["QAST"]
    unless $I5009 goto if3558_else7303 
    get_who $P5060, pkg_lookup_tmp_228
    set $P5059, $P5060["QAST"]
    set $P5062, $P5059
    goto if3558_end7304
  if3558_else7303:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if3558_end7304:
    get_who $P5056, $P5062
    set fb_tmp_821, $P5056
    repr_defined $I5008, fb_tmp_821
    unless $I5008 goto if3557_else7301 
    set $P5063, fb_tmp_821["Op"]
    set $P5065, $P5063
    goto if3557_end7302
  if3557_else7301:
    null $P5064
    set $P5065, $P5064
  if3557_end7302:
    unless_null $P5065, vivi_35597305
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_35597305:
    $P5067 = $P5065."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5067
    set $P103["sink"], $P101
    set $P103["block_past"], $P102
.annotate 'line', 2519
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback7310
    nqp_get_sc_object $P5068, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5068
  fallback7310:
    set fb_tmp_822, _lex_param_1
    repr_defined $I5010, fb_tmp_822
    unless $I5010 goto if3561_else7308 
    set $P5069, fb_tmp_822["trait"]
    set $P5071, $P5069
    goto if3561_end7309
  if3561_else7308:
    null $P5070
    set $P5071, $P5070
  if3561_end7309:
    unless_null $P5071, vivi_35627311
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_35627311:
    set $P5083, $P5071
    unless $P5071 goto if3560_end7307 
.annotate 'line', 2522
    unless_null _lex_param_1, fallback7314
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5076
  fallback7314:
    set fb_tmp_823, _lex_param_1
    repr_defined $I5011, fb_tmp_823
    unless $I5011 goto if3563_else7312 
    set $P5077, fb_tmp_823["trait"]
    set $P5079, $P5077
    goto if3563_end7313
  if3563_else7312:
    null $P5078
    set $P5079, $P5078
  if3563_end7313:
    unless_null $P5079, vivi_35647315
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_35647315:
    set $P5073, $P5079
    iter $P5075, $P5079
  for_next7316:
    unless $P5075, for_done7318
    shift $P5082, $P5075
  for_redo7317:
    .const 'Sub' $P5081 = 'cuid_482_1361537952.49511' 
    capture_lex $P5081
    $P5073 = $P5081($P5082)
    goto for_next7316
  for_done7318:
    set $P5083, $P5073
  if3560_end7307:
    .return ($P5083) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_479_1361537952.49511") :anon :lex :outer("cuid_308_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2405
    .const 'Sub' $P5106 = 'cuid_478_1361537952.49511' 
    capture_lex $P5106 
    .const 'Sub' $P5106 = 'cuid_480_1361537952.49511' 
    capture_lex $P5106 
    .const 'Sub' $P5106 = 'cuid_481_1361537952.49511' 
    capture_lex $P5106 
    .lex "$name", $P101 
    .local pmc fb_tmp_772 
    .local pmc fb_tmp_773 
    .local pmc fb_tmp_774 
    .local pmc fb_tmp_775 
    .local pmc fb_tmp_776 
    .local pmc fb_tmp_777 
    .local pmc fb_tmp_778 
    .local pmc fb_tmp_779 
    .local pmc fb_tmp_790 
    .local pmc fb_tmp_816 
    .local pmc pkg_lookup_tmp_227 
    .local pmc fb_tmp_817 
    .local pmc fb_tmp_818 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    find_lex $P5002, "$/"
    unless_null $P5002, fallback7053
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback7053:
    set fb_tmp_773, $P5002
    repr_defined $I5002, fb_tmp_773
    unless $I5002 goto if3410_else7051 
    set $P5004, fb_tmp_773["sigil"]
    set $P5006, $P5004
    goto if3410_end7052
  if3410_else7051:
    null $P5005
    set $P5006, $P5005
  if3410_end7052:
    unless_null $P5006, vivi_34117054
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_34117054:
    set fb_tmp_772, $P5006
    repr_defined $I5001, fb_tmp_772
    unless $I5001 goto if3409_else7049 
    set $P5008, fb_tmp_772[0]
    set $P5010, $P5008
    goto if3409_end7050
  if3409_else7049:
    null $P5009
    set $P5010, $P5009
  if3409_end7050:
    unless_null $P5010, vivi_34127055
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_34127055:
    set $S5002, $P5010
.annotate 'line', 2406
    find_lex $P5012, "$/"
    unless_null $P5012, fallback7060
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  fallback7060:
    set fb_tmp_775, $P5012
    repr_defined $I5004, fb_tmp_775
    unless $I5004 goto if3414_else7058 
    set $P5014, fb_tmp_775["deflongname"]
    set $P5016, $P5014
    goto if3414_end7059
  if3414_else7058:
    null $P5015
    set $P5016, $P5015
  if3414_end7059:
    unless_null $P5016, vivi_34157061
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_34157061:
    set fb_tmp_774, $P5016
    repr_defined $I5003, fb_tmp_774
    unless $I5003 goto if3413_else7056 
    set $P5018, fb_tmp_774[0]
    set $P5020, $P5018
    goto if3413_end7057
  if3413_else7056:
    null $P5019
    set $P5020, $P5019
  if3413_end7057:
    unless_null $P5020, vivi_34167062
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_34167062:
    $P5022 = $P5020."ast"()
    set $S5003, $P5022
    concat $S5001, $S5002, $S5003
    box $P5023, $S5001
    set $P101, $P5023
.annotate 'line', 2407
    find_lex $P5024, "$past"
    $P5024."name"($P101)
    find_dynamic_lex $P5025, "$*SCOPE"
    unless_null $P5025, fallback7069
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5026, $P5027
    set fb_tmp_776, $P5026
    repr_defined $I5006, fb_tmp_776
    unless $I5006 goto if3420_else7070 
    set $P5028, fb_tmp_776["$SCOPE"]
    set $P5030, $P5028
    goto if3420_end7071
  if3420_else7070:
    null $P5029
    set $P5030, $P5029
  if3420_end7071:
    unless_null $P5030, vivi_34217072
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  vivi_34217072:
    unless_null $P5030, vivi_34227073
    die "Contextual $*SCOPE not found"
    box $P5032, "Contextual $*SCOPE not found"
    set $P5030, $P5032
  vivi_34227073:
    set $P5025, $P5030
  fallback7069:
    set $S5004, $P5025
    iseq $I5005, $S5004, ""
    set $I5009, $I5005
    if $I5005 goto unless3419_end7068 
    find_dynamic_lex $P5033, "$*SCOPE"
    unless_null $P5033, fallback7074
    nqp_get_sc_object $P5035, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5034, $P5035
    set fb_tmp_777, $P5034
    repr_defined $I5008, fb_tmp_777
    unless $I5008 goto if3423_else7075 
    set $P5036, fb_tmp_777["$SCOPE"]
    set $P5038, $P5036
    goto if3423_end7076
  if3423_else7075:
    null $P5037
    set $P5038, $P5037
  if3423_end7076:
    unless_null $P5038, vivi_34247077
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_34247077:
    unless_null $P5038, vivi_34257078
    die "Contextual $*SCOPE not found"
    box $P5040, "Contextual $*SCOPE not found"
    set $P5038, $P5040
  vivi_34257078:
    set $P5033, $P5038
  fallback7074:
    set $S5005, $P5033
    iseq $I5007, $S5005, "my"
    set $I5009, $I5007
  unless3419_end7068:
    set $I5012, $I5009
    if $I5009 goto unless3418_end7066 
    find_dynamic_lex $P5041, "$*SCOPE"
    unless_null $P5041, fallback7079
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5042, $P5043
    set fb_tmp_778, $P5042
    repr_defined $I5011, fb_tmp_778
    unless $I5011 goto if3426_else7080 
    set $P5044, fb_tmp_778["$SCOPE"]
    set $P5046, $P5044
    goto if3426_end7081
  if3426_else7080:
    null $P5045
    set $P5046, $P5045
  if3426_end7081:
    unless_null $P5046, vivi_34277082
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5046, $P5047
  vivi_34277082:
    unless_null $P5046, vivi_34287083
    die "Contextual $*SCOPE not found"
    box $P5048, "Contextual $*SCOPE not found"
    set $P5046, $P5048
  vivi_34287083:
    set $P5041, $P5046
  fallback7079:
    set $S5006, $P5041
    iseq $I5010, $S5006, "our"
    set $I5012, $I5010
  unless3418_end7066:
    unless $I5012 goto if3417_else7063 
.annotate 'line', 2408
    find_dynamic_lex $P5049, "$*MULTINESS"
    unless_null $P5049, fallback7086
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5050, $P5051
    set fb_tmp_779, $P5050
    repr_defined $I5014, fb_tmp_779
    unless $I5014 goto if3430_else7087 
    set $P5052, fb_tmp_779["$MULTINESS"]
    set $P5054, $P5052
    goto if3430_end7088
  if3430_else7087:
    null $P5053
    set $P5054, $P5053
  if3430_end7088:
    unless_null $P5054, vivi_34317089
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_34317089:
    unless_null $P5054, vivi_34327090
    die "Contextual $*MULTINESS not found"
    box $P5056, "Contextual $*MULTINESS not found"
    set $P5054, $P5056
  vivi_34327090:
    set $P5049, $P5054
  fallback7086:
    set $S5007, $P5049
    iseq $I5013, $S5007, "multi"
    unless $I5013 goto if3429_else7084 
    .const 'Sub' $P5057 = 'cuid_478_1361537952.49511' 
    capture_lex $P5057
    $P5058 = $P5057()
    goto if3429_end7085
  if3429_else7084:
    find_dynamic_lex $P5059, "$*MULTINESS"
    unless_null $P5059, fallback7146
    nqp_get_sc_object $P5061, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5060, $P5061
    set fb_tmp_790, $P5060
    repr_defined $I5016, fb_tmp_790
    unless $I5016 goto if3464_else7147 
    set $P5062, fb_tmp_790["$MULTINESS"]
    set $P5064, $P5062
    goto if3464_end7148
  if3464_else7147:
    null $P5063
    set $P5064, $P5063
  if3464_end7148:
    unless_null $P5064, vivi_34657149
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_34657149:
    unless_null $P5064, vivi_34667150
    die "Contextual $*MULTINESS not found"
    box $P5066, "Contextual $*MULTINESS not found"
    set $P5064, $P5066
  vivi_34667150:
    set $P5059, $P5064
  fallback7146:
    set $S5008, $P5059
    iseq $I5015, $S5008, "proto"
    unless $I5015 goto if3463_else7144 
    .const 'Sub' $P5067 = 'cuid_480_1361537952.49511' 
    capture_lex $P5067
    $P5068 = $P5067()
    set $P5071, $P5068
    goto if3463_end7145
  if3463_else7144:
    .const 'Sub' $P5069 = 'cuid_481_1361537952.49511' 
    capture_lex $P5069
    $P5070 = $P5069()
    set $P5071, $P5070
  if3463_end7145:
  if3429_end7085:
.annotate 'line', 2499
    nqp_get_sc_object $P5073, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_227, $P5073
    get_who $P5074, pkg_lookup_tmp_227
    exists $I5018, $P5074["QAST"]
    unless $I5018 goto if3540_else7272 
    get_who $P5076, pkg_lookup_tmp_227
    set $P5075, $P5076["QAST"]
    set $P5078, $P5075
    goto if3540_end7273
  if3540_else7272:
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5077
  if3540_end7273:
    get_who $P5072, $P5078
    set fb_tmp_816, $P5072
    repr_defined $I5017, fb_tmp_816
    unless $I5017 goto if3539_else7270 
    set $P5079, fb_tmp_816["Var"]
    set $P5081, $P5079
    goto if3539_end7271
  if3539_else7270:
    null $P5080
    set $P5081, $P5080
  if3539_end7271:
    unless_null $P5081, vivi_35417274
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5081, $P5082
  vivi_35417274:
    set $S5010, $P101
    concat $S5009, "&", $S5010
    $P5083 = $P5081."new"($S5009 :named("name"), "lexical" :named("scope"))
    store_lex "$past", $P5083
    goto if3417_end7064
  if3417_else7063:
.annotate 'line', 2501
.annotate 'line', 2502
    find_lex $P5084, "$/"
    $P5085 = $P5084."CURSOR"()
    find_dynamic_lex $P5086, "$*SCOPE"
    unless_null $P5086, fallback7275
    nqp_get_sc_object $P5088, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5087, $P5088
    set fb_tmp_817, $P5087
    repr_defined $I5019, fb_tmp_817
    unless $I5019 goto if3542_else7276 
    set $P5089, fb_tmp_817["$SCOPE"]
    set $P5091, $P5089
    goto if3542_end7277
  if3542_else7276:
    null $P5090
    set $P5091, $P5090
  if3542_end7277:
    unless_null $P5091, vivi_35437278
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5091, $P5092
  vivi_35437278:
    unless_null $P5091, vivi_35447279
    die "Contextual $*SCOPE not found"
    box $P5093, "Contextual $*SCOPE not found"
    set $P5091, $P5093
  vivi_35447279:
    set $P5086, $P5091
  fallback7275:
    set $S5012, $P5086
    concat $S5011, $S5012, " scoped routines are not supported yet"
    $P5094 = $P5085."panic"($S5011)
  if3417_end7064:
    set $S5013, $P101
    iseq $I5020, $S5013, "MAIN"
    set $I5023, $I5020
    unless $I5020 goto if3546_end7283 
    find_dynamic_lex $P5095, "$*MULTINESS"
    unless_null $P5095, fallback7284
    nqp_get_sc_object $P5097, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5096, $P5097
    set fb_tmp_818, $P5096
    repr_defined $I5022, fb_tmp_818
    unless $I5022 goto if3547_else7285 
    set $P5098, fb_tmp_818["$MULTINESS"]
    set $P5100, $P5098
    goto if3547_end7286
  if3547_else7285:
    null $P5099
    set $P5100, $P5099
  if3547_end7286:
    unless_null $P5100, vivi_35487287
    nqp_get_sc_object $P5101, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5100, $P5101
  vivi_35487287:
    unless_null $P5100, vivi_35497288
    die "Contextual $*MULTINESS not found"
    box $P5102, "Contextual $*MULTINESS not found"
    set $P5100, $P5102
  vivi_35497288:
    set $P5095, $P5100
  fallback7284:
    set $S5014, $P5095
    isne $I5021, $S5014, "multi"
    set $I5023, $I5021
  if3546_end7283:
    box $P5105, $I5023
    set $P5104, $P5105
    unless $I5023 goto if3545_end7281 
.annotate 'line', 2506
    find_lex $P5103, "$block"
    store_dynamic_lex "$*MAIN_SUB", $P5103
    set $P5104, $P5103
  if3545_end7281:
    .return ($P5104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_478_1361537952.49511") :anon :lex :outer("cuid_479_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2409
    .const 'Sub' $P5062 = 'cuid_477_1361537952.49511' 
    capture_lex $P5062 
    .lex "$proto", $P101 
    .lex "%sym", $P102 
    .lex "$code", $P103 
    .lex "$BLOCK", $P104 
    .local pmc fb_tmp_780 
    .local pmc fb_tmp_781 
    .local pmc fb_tmp_782 
    .local pmc fb_tmp_783 
    .local pmc fb_tmp_787 
    .local pmc fb_tmp_788 
    .local pmc fb_tmp_789 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
    find_dynamic_lex $P5005, "$*SCOPE"
    unless_null $P5005, fallback7093
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5006, $P5007
    set fb_tmp_780, $P5006
    repr_defined $I5002, fb_tmp_780
    unless $I5002 goto if3434_else7094 
    set $P5008, fb_tmp_780["$SCOPE"]
    set $P5010, $P5008
    goto if3434_end7095
  if3434_else7094:
    null $P5009
    set $P5010, $P5009
  if3434_end7095:
    unless_null $P5010, vivi_34357096
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_34357096:
    unless_null $P5010, vivi_34367097
    die "Contextual $*SCOPE not found"
    box $P5012, "Contextual $*SCOPE not found"
    set $P5010, $P5012
  vivi_34367097:
    set $P5005, $P5010
  fallback7093:
    set $S5001, $P5005
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if3433_end7092 
.annotate 'line', 2411
    box $P5013, "a multi can not be our-scoped"
    die $P5013
  if3433_end7092:
.annotate 'line', 2413
    find_dynamic_lex $P5014, "$*W"
    unless_null $P5014, fallback7098
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5015, $P5016
    set fb_tmp_781, $P5015
    repr_defined $I5003, fb_tmp_781
    unless $I5003 goto if3437_else7099 
    set $P5017, fb_tmp_781["$W"]
    set $P5019, $P5017
    goto if3437_end7100
  if3437_else7099:
    null $P5018
    set $P5019, $P5018
  if3437_end7100:
    unless_null $P5019, vivi_34387101
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_34387101:
    unless_null $P5019, vivi_34397102
    die "Contextual $*W not found"
    box $P5021, "Contextual $*W not found"
    set $P5019, $P5021
  vivi_34397102:
    set $P5014, $P5019
  fallback7098:
    $P5022 = $P5014."cur_lexpad"()
    find_lex $P5023, "$name"
    set $S5003, $P5023
    concat $S5002, "&", $S5003
    $P5024 = $P5022."symbol"($S5002)
    set $P102, $P5024
    set fb_tmp_782, $P102
    repr_defined $I5004, fb_tmp_782
    unless $I5004 goto if3441_else7105 
    set $P5025, fb_tmp_782["proto"]
    set $P5027, $P5025
    goto if3441_end7106
  if3441_else7105:
    null $P5026
    set $P5027, $P5026
  if3441_end7106:
    unless_null $P5027, vivi_34427107
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_34427107:
    unless $P5027 goto if3440_else7103 
.annotate 'line', 2414
    set fb_tmp_783, $P102
    repr_defined $I5005, fb_tmp_783
    unless $I5005 goto if3443_else7108 
    set $P5029, fb_tmp_783["value"]
    set $P5031, $P5029
    goto if3443_end7109
  if3443_else7108:
    null $P5030
    set $P5031, $P5030
  if3443_end7109:
    unless_null $P5031, vivi_34447110
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_34447110:
    set $P101, $P5031
    goto if3440_end7104
  if3440_else7103:
    .const 'Sub' $P5033 = 'cuid_477_1361537952.49511' 
    capture_lex $P5033
    $P5034 = $P5033()
  if3440_end7104:
.annotate 'line', 2443
    find_dynamic_lex $P5035, "$*W"
    unless_null $P5035, fallback7131
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5036, $P5037
    set fb_tmp_787, $P5036
    repr_defined $I5006, fb_tmp_787
    unless $I5006 goto if3455_else7132 
    set $P5038, fb_tmp_787["$W"]
    set $P5040, $P5038
    goto if3455_end7133
  if3455_else7132:
    null $P5039
    set $P5040, $P5039
  if3455_end7133:
    unless_null $P5040, vivi_34567134
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_34567134:
    unless_null $P5040, vivi_34577135
    die "Contextual $*W not found"
    box $P5042, "Contextual $*W not found"
    set $P5040, $P5042
  vivi_34577135:
    set $P5035, $P5040
  fallback7131:
    find_lex $P5043, "$past"
    find_lex $P5044, "$name"
    $P5045 = $P5035."create_code"($P5043, $P5044, 0)
    set $P103, $P5045
.annotate 'line', 2444
    find_lex $P5046, "$past"
    "&attach_multi_signature"($P103, $P5046)
.annotate 'line', 2447
    $P101."add_dispatchee"($P103)
.annotate 'line', 2450
    find_dynamic_lex $P5047, "$*W"
    unless_null $P5047, fallback7136
    nqp_get_sc_object $P5049, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5048, $P5049
    set fb_tmp_788, $P5048
    repr_defined $I5007, fb_tmp_788
    unless $I5007 goto if3458_else7137 
    set $P5050, fb_tmp_788["$W"]
    set $P5052, $P5050
    goto if3458_end7138
  if3458_else7137:
    null $P5051
    set $P5052, $P5051
  if3458_end7138:
    unless_null $P5052, vivi_34597139
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_34597139:
    unless_null $P5052, vivi_34607140
    die "Contextual $*W not found"
    box $P5054, "Contextual $*W not found"
    set $P5052, $P5054
  vivi_34607140:
    set $P5047, $P5052
  fallback7136:
    $P5055 = $P5047."cur_lexpad"()
    set $P104, $P5055
.annotate 'line', 2451
    set fb_tmp_789, $P104
    repr_defined $I5008, fb_tmp_789
    unless $I5008 goto if3461_else7141 
    set $P5056, fb_tmp_789[0]
    set $P5058, $P5056
    goto if3461_end7142
  if3461_else7141:
    null $P5057
    set $P5058, $P5057
  if3461_end7142:
    unless_null $P5058, vivi_34627143
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5059
  vivi_34627143:
    find_lex $P5060, "$past"
    $P5061 = $P5058."push"($P5060)
    .return ($P5061) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_477_1361537952.49511") :anon :lex :outer("cuid_478_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2419
    .const 'Sub' $P5020 = 'cuid_476_1361537952.49511' 
    capture_lex $P5020 
    .lex "$found_proto", $P101 
    .local pmc fb_tmp_784 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2422
    find_dynamic_lex $P5005, "$*W"
    unless_null $P5005, fallback7111
    nqp_get_sc_object $P5007, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5006, $P5007
    set fb_tmp_784, $P5006
    repr_defined $I5001, fb_tmp_784
    unless $I5001 goto if3445_else7112 
    set $P5008, fb_tmp_784["$W"]
    set $P5010, $P5008
    goto if3445_end7113
  if3445_else7112:
    null $P5009
    set $P5010, $P5009
  if3445_end7113:
    unless_null $P5010, vivi_34467114
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_34467114:
    unless_null $P5010, vivi_34477115
    die "Contextual $*W not found"
    box $P5012, "Contextual $*W not found"
    set $P5010, $P5012
  vivi_34477115:
    set $P5005, $P5010
  fallback7111:
    $P5013 = $P5005."get_legacy_block_list"()
    set $P5002, $P5013
    iter $P5004, $P5013
  for_next7126:
    unless $P5004, for_done7128
    shift $P5015, $P5004
  for_redo7127:
    .const 'Sub' $P5014 = 'cuid_476_1361537952.49511' 
    capture_lex $P5014
    $P5002 = $P5014($P5015)
    goto for_next7126
  for_done7128:
    if $P101 goto unless3454_end7130 
.annotate 'line', 2434
.annotate 'line', 2435
    find_lex $P5016, "$/"
    $P5017 = $P5016."CURSOR"()
    $P5018 = $P5017."panic"("Sorry, no proto sub in scope, and auto-generation of protos is not yet implemented.")
  unless3454_end7130:
    box $P5019, "Dispatcher derivation NYI"
    die $P5019
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_476_1361537952.49511") :anon :lex :outer("cuid_477_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2422
    .param pmc _lex_param_0 
    .lex "%sym", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_785 
    .local pmc fb_tmp_786 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 2423
    find_lex $P5002, "$name"
    set $S5002, $P5002
    concat $S5001, "&", $S5002
    $P5003 = _lex_param_0."symbol"($S5001)
    set $P101, $P5003
    set fb_tmp_785, $P101
    repr_defined $I5001, fb_tmp_785
    unless $I5001 goto if3449_else7118 
    set $P5004, fb_tmp_785["proto"]
    set $P5006, $P5004
    goto if3449_end7119
  if3449_else7118:
    null $P5005
    set $P5006, $P5005
  if3449_end7119:
    unless_null $P5006, vivi_34507120
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_34507120:
    unless $P5006 goto if3448_else7116 
.annotate 'line', 2424
    set fb_tmp_786, $P101
    repr_defined $I5002, fb_tmp_786
    unless $I5002 goto if3451_else7121 
    set $P5008, fb_tmp_786["value"]
    set $P5010, $P5008
    goto if3451_end7122
  if3451_else7121:
    null $P5009
    set $P5010, $P5009
  if3451_end7122:
    unless_null $P5010, vivi_34527123
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_34527123:
    store_lex "$proto", $P5010
    box $P5012, 1
    store_lex "$found_proto", $P5012
    set $P5017, $P5012
    goto if3448_end7117
  if3448_else7116:
    set $P5016, $P101
    unless $P101 goto if3453_end7125 
.annotate 'line', 2428
.annotate 'line', 2429
    find_lex $P5013, "$/"
    $P5014 = $P5013."CURSOR"()
    $P5015 = $P5014."panic"("Cannot declare a multi when an only is already in scope.")
    set $P5016, $P5015
  if3453_end7125:
    set $P5017, $P5016
  if3448_end7117:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_480_1361537952.49511") :anon :lex :outer("cuid_479_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2453
    .lex "$code", $P101 
    .lex "$BLOCK", $P102 
    .local pmc fb_tmp_791 
    .local pmc fb_tmp_792 
    .local pmc fb_tmp_793 
    .local pmc fb_tmp_794 
    .local pmc fb_tmp_795 
    .local pmc pkg_lookup_tmp_214 
    .local pmc fb_tmp_796 
    .local pmc pkg_lookup_tmp_215 
    .local pmc fb_tmp_797 
    .local pmc fb_tmp_798 
    .local pmc pkg_lookup_tmp_216 
    .local pmc fb_tmp_799 
    .local pmc pkg_lookup_tmp_217 
    .local pmc fb_tmp_800 
    .local pmc pkg_lookup_tmp_218 
    .local pmc fb_tmp_801 
    .local pmc fb_tmp_802 
    .local pmc pkg_lookup_tmp_219 
    .local pmc fb_tmp_803 
    .local pmc pkg_lookup_tmp_220 
    .local pmc fb_tmp_804 
    .local pmc pkg_lookup_tmp_221 
    .local pmc fb_tmp_805 
    .local pmc pkg_lookup_tmp_222 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*SCOPE"
    unless_null $P5003, fallback7153
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_791, $P5004
    repr_defined $I5002, fb_tmp_791
    unless $I5002 goto if3468_else7154 
    set $P5006, fb_tmp_791["$SCOPE"]
    set $P5008, $P5006
    goto if3468_end7155
  if3468_else7154:
    null $P5007
    set $P5008, $P5007
  if3468_end7155:
    unless_null $P5008, vivi_34697156
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_34697156:
    unless_null $P5008, vivi_34707157
    die "Contextual $*SCOPE not found"
    box $P5010, "Contextual $*SCOPE not found"
    set $P5008, $P5010
  vivi_34707157:
    set $P5003, $P5008
  fallback7153:
    set $S5001, $P5003
    iseq $I5001, $S5001, "our"
    unless $I5001 goto if3467_end7152 
.annotate 'line', 2457
    box $P5011, "our-scoped protos not yet implemented"
    die $P5011
  if3467_end7152:
.annotate 'line', 2458
    find_dynamic_lex $P5012, "$*W"
    unless_null $P5012, fallback7158
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5013, $P5014
    set fb_tmp_792, $P5013
    repr_defined $I5003, fb_tmp_792
    unless $I5003 goto if3471_else7159 
    set $P5015, fb_tmp_792["$W"]
    set $P5017, $P5015
    goto if3471_end7160
  if3471_else7159:
    null $P5016
    set $P5017, $P5016
  if3471_end7160:
    unless_null $P5017, vivi_34727161
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_34727161:
    unless_null $P5017, vivi_34737162
    die "Contextual $*W not found"
    box $P5019, "Contextual $*W not found"
    set $P5017, $P5019
  vivi_34737162:
    set $P5012, $P5017
  fallback7158:
    find_lex $P5020, "$past"
    find_lex $P5021, "$name"
    $P5022 = $P5012."create_code"($P5020, $P5021, 1)
    set $P101, $P5022
.annotate 'line', 2459
    find_dynamic_lex $P5023, "$*W"
    unless_null $P5023, fallback7163
    nqp_get_sc_object $P5025, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5024, $P5025
    set fb_tmp_793, $P5024
    repr_defined $I5004, fb_tmp_793
    unless $I5004 goto if3474_else7164 
    set $P5026, fb_tmp_793["$W"]
    set $P5028, $P5026
    goto if3474_end7165
  if3474_else7164:
    null $P5027
    set $P5028, $P5027
  if3474_end7165:
    unless_null $P5028, vivi_34757166
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_34757166:
    unless_null $P5028, vivi_34767167
    die "Contextual $*W not found"
    box $P5030, "Contextual $*W not found"
    set $P5028, $P5030
  vivi_34767167:
    set $P5023, $P5028
  fallback7163:
    $P5031 = $P5023."cur_lexpad"()
    set $P102, $P5031
.annotate 'line', 2460
    set fb_tmp_794, $P102
    repr_defined $I5005, fb_tmp_794
    unless $I5005 goto if3477_else7168 
    set $P5032, fb_tmp_794[0]
    set $P5034, $P5032
    goto if3477_end7169
  if3477_else7168:
    null $P5033
    set $P5034, $P5033
  if3477_end7169:
    unless_null $P5034, vivi_34787170
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_34787170:
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_214, $P5037
    get_who $P5038, pkg_lookup_tmp_214
    exists $I5007, $P5038["QAST"]
    unless $I5007 goto if3480_else7173 
    get_who $P5040, pkg_lookup_tmp_214
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if3480_end7174
  if3480_else7173:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if3480_end7174:
    get_who $P5036, $P5042
    set fb_tmp_795, $P5036
    repr_defined $I5006, fb_tmp_795
    unless $I5006 goto if3479_else7171 
    set $P5043, fb_tmp_795["Op"]
    set $P5045, $P5043
    goto if3479_end7172
  if3479_else7171:
    null $P5044
    set $P5045, $P5044
  if3479_end7172:
    unless_null $P5045, vivi_34817175
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_34817175:
.annotate 'line', 2462
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_215, $P5048
    get_who $P5049, pkg_lookup_tmp_215
    exists $I5009, $P5049["QAST"]
    unless $I5009 goto if3483_else7178 
    get_who $P5051, pkg_lookup_tmp_215
    set $P5050, $P5051["QAST"]
    set $P5053, $P5050
    goto if3483_end7179
  if3483_else7178:
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5052
  if3483_end7179:
    get_who $P5047, $P5053
    set fb_tmp_796, $P5047
    repr_defined $I5008, fb_tmp_796
    unless $I5008 goto if3482_else7176 
    set $P5054, fb_tmp_796["Var"]
    set $P5056, $P5054
    goto if3482_end7177
  if3482_else7176:
    null $P5055
    set $P5056, $P5055
  if3482_end7177:
    unless_null $P5056, vivi_34847180
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_34847180:
    find_lex $P5058, "$name"
    set $S5003, $P5058
    concat $S5002, "&", $S5003
    $P5059 = $P5056."new"($S5002 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5060, "$past"
    $P5061 = $P5045."new"($P5059, $P5060, "bind" :named("op"))
    $P5034."push"($P5061)
.annotate 'line', 2465
    find_lex $P5062, "$name"
    set $S5005, $P5062
    concat $S5004, "&", $S5005
    $P102."symbol"($S5004, "lexical" :named("scope"), 1 :named("proto"), $P101 :named("value"))
.annotate 'line', 2469
    find_lex $P5063, "$block"
    set fb_tmp_797, $P5063
    repr_defined $I5010, fb_tmp_797
    unless $I5010 goto if3485_else7181 
    set $P5064, fb_tmp_797[0]
    set $P5066, $P5064
    goto if3485_end7182
  if3485_else7181:
    null $P5065
    set $P5066, $P5065
  if3485_end7182:
    unless_null $P5066, vivi_34867183
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5066, $P5067
  vivi_34867183:
    nqp_get_sc_object $P5069, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_216, $P5069
    get_who $P5070, pkg_lookup_tmp_216
    exists $I5012, $P5070["QAST"]
    unless $I5012 goto if3488_else7186 
    get_who $P5072, pkg_lookup_tmp_216
    set $P5071, $P5072["QAST"]
    set $P5074, $P5071
    goto if3488_end7187
  if3488_else7186:
    nqp_get_sc_object $P5073, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5074, $P5073
  if3488_end7187:
    get_who $P5068, $P5074
    set fb_tmp_798, $P5068
    repr_defined $I5011, fb_tmp_798
    unless $I5011 goto if3487_else7184 
    set $P5075, fb_tmp_798["Op"]
    set $P5077, $P5075
    goto if3487_end7185
  if3487_else7184:
    null $P5076
    set $P5077, $P5076
  if3487_end7185:
    unless_null $P5077, vivi_34897188
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5078
  vivi_34897188:
.annotate 'line', 2471
    nqp_get_sc_object $P5080, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_217, $P5080
    get_who $P5081, pkg_lookup_tmp_217
    exists $I5014, $P5081["QAST"]
    unless $I5014 goto if3491_else7191 
    get_who $P5083, pkg_lookup_tmp_217
    set $P5082, $P5083["QAST"]
    set $P5085, $P5082
    goto if3491_end7192
  if3491_else7191:
    nqp_get_sc_object $P5084, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5085, $P5084
  if3491_end7192:
    get_who $P5079, $P5085
    set fb_tmp_799, $P5079
    repr_defined $I5013, fb_tmp_799
    unless $I5013 goto if3490_else7189 
    set $P5086, fb_tmp_799["Var"]
    set $P5088, $P5086
    goto if3490_end7190
  if3490_else7189:
    null $P5087
    set $P5088, $P5087
  if3490_end7190:
    unless_null $P5088, vivi_34927193
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_34927193:
    $P5090 = $P5088."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2472
    nqp_get_sc_object $P5092, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_218, $P5092
    get_who $P5093, pkg_lookup_tmp_218
    exists $I5016, $P5093["QAST"]
    unless $I5016 goto if3494_else7196 
    get_who $P5095, pkg_lookup_tmp_218
    set $P5094, $P5095["QAST"]
    set $P5097, $P5094
    goto if3494_end7197
  if3494_else7196:
    nqp_get_sc_object $P5096, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5096
  if3494_end7197:
    get_who $P5091, $P5097
    set fb_tmp_800, $P5091
    repr_defined $I5015, fb_tmp_800
    unless $I5015 goto if3493_else7194 
    set $P5098, fb_tmp_800["Op"]
    set $P5100, $P5098
    goto if3493_end7195
  if3493_else7194:
    null $P5099
    set $P5100, $P5099
  if3493_end7195:
    unless_null $P5100, vivi_34957198
    nqp_get_sc_object $P5101, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5100, $P5101
  vivi_34957198:
    $P5102 = $P5100."new"("savecapture" :named("op"))
    $P5103 = $P5077."new"($P5090, $P5102, "bind" :named("op"))
    $P5066."push"($P5103)
.annotate 'line', 2474
    find_lex $P5104, "$block"
    set fb_tmp_801, $P5104
    repr_defined $I5017, fb_tmp_801
    unless $I5017 goto if3496_else7199 
    set $P5105, fb_tmp_801[0]
    set $P5107, $P5105
    goto if3496_end7200
  if3496_else7199:
    null $P5106
    set $P5107, $P5106
  if3496_end7200:
    unless_null $P5107, vivi_34977201
    nqp_get_sc_object $P5108, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5107, $P5108
  vivi_34977201:
    nqp_get_sc_object $P5110, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_219, $P5110
    get_who $P5111, pkg_lookup_tmp_219
    exists $I5019, $P5111["QAST"]
    unless $I5019 goto if3499_else7204 
    get_who $P5113, pkg_lookup_tmp_219
    set $P5112, $P5113["QAST"]
    set $P5115, $P5112
    goto if3499_end7205
  if3499_else7204:
    nqp_get_sc_object $P5114, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5115, $P5114
  if3499_end7205:
    get_who $P5109, $P5115
    set fb_tmp_802, $P5109
    repr_defined $I5018, fb_tmp_802
    unless $I5018 goto if3498_else7202 
    set $P5116, fb_tmp_802["Op"]
    set $P5118, $P5116
    goto if3498_end7203
  if3498_else7202:
    null $P5117
    set $P5118, $P5117
  if3498_end7203:
    unless_null $P5118, vivi_35007206
    nqp_get_sc_object $P5119, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5118, $P5119
  vivi_35007206:
.annotate 'line', 2476
    nqp_get_sc_object $P5121, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_220, $P5121
    get_who $P5122, pkg_lookup_tmp_220
    exists $I5021, $P5122["QAST"]
    unless $I5021 goto if3502_else7209 
    get_who $P5124, pkg_lookup_tmp_220
    set $P5123, $P5124["QAST"]
    set $P5126, $P5123
    goto if3502_end7210
  if3502_else7209:
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5125
  if3502_end7210:
    get_who $P5120, $P5126
    set fb_tmp_803, $P5120
    repr_defined $I5020, fb_tmp_803
    unless $I5020 goto if3501_else7207 
    set $P5127, fb_tmp_803["Var"]
    set $P5129, $P5127
    goto if3501_end7208
  if3501_else7207:
    null $P5128
    set $P5129, $P5128
  if3501_end7208:
    unless_null $P5129, vivi_35037211
    nqp_get_sc_object $P5130, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5129, $P5130
  vivi_35037211:
    $P5131 = $P5129."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2477
    nqp_get_sc_object $P5133, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_221, $P5133
    get_who $P5134, pkg_lookup_tmp_221
    exists $I5023, $P5134["QAST"]
    unless $I5023 goto if3505_else7214 
    get_who $P5136, pkg_lookup_tmp_221
    set $P5135, $P5136["QAST"]
    set $P5138, $P5135
    goto if3505_end7215
  if3505_else7214:
    nqp_get_sc_object $P5137, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5138, $P5137
  if3505_end7215:
    get_who $P5132, $P5138
    set fb_tmp_804, $P5132
    repr_defined $I5022, fb_tmp_804
    unless $I5022 goto if3504_else7212 
    set $P5139, fb_tmp_804["Op"]
    set $P5141, $P5139
    goto if3504_end7213
  if3504_else7212:
    null $P5140
    set $P5141, $P5140
  if3504_end7213:
    unless_null $P5141, vivi_35067216
    nqp_get_sc_object $P5142, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5141, $P5142
  vivi_35067216:
    nqp_get_sc_object $P5144, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_222, $P5144
    get_who $P5145, pkg_lookup_tmp_222
    exists $I5025, $P5145["QAST"]
    unless $I5025 goto if3508_else7219 
    get_who $P5147, pkg_lookup_tmp_222
    set $P5146, $P5147["QAST"]
    set $P5149, $P5146
    goto if3508_end7220
  if3508_else7219:
    nqp_get_sc_object $P5148, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5149, $P5148
  if3508_end7220:
    get_who $P5143, $P5149
    set fb_tmp_805, $P5143
    repr_defined $I5024, fb_tmp_805
    unless $I5024 goto if3507_else7217 
    set $P5150, fb_tmp_805["Op"]
    set $P5152, $P5150
    goto if3507_end7218
  if3507_else7217:
    null $P5151
    set $P5152, $P5151
  if3507_end7218:
    unless_null $P5152, vivi_35097221
    nqp_get_sc_object $P5153, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5152, $P5153
  vivi_35097221:
    $P5154 = $P5152."new"("curcode" :named("op"))
    $P5155 = $P5141."new"($P5154, "getcodeobj" :named("op"))
    $P5156 = $P5118."new"($P5131, $P5155, "bind" :named("op"))
    $P5157 = $P5107."push"($P5156)
    .return ($P5157) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_481_1361537952.49511") :anon :lex :outer("cuid_479_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2480
    .lex "$BLOCK", $P101 
    .local pmc fb_tmp_806 
    .local pmc fb_tmp_807 
    .local pmc fb_tmp_808 
    .local pmc pkg_lookup_tmp_223 
    .local pmc fb_tmp_809 
    .local pmc pkg_lookup_tmp_224 
    .local pmc fb_tmp_810 
    .local pmc fb_tmp_811 
    .local pmc fb_tmp_812 
    .local pmc fb_tmp_813 
    .local pmc fb_tmp_814 
    .local pmc pkg_lookup_tmp_225 
    .local pmc fb_tmp_815 
    .local pmc pkg_lookup_tmp_226 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2481
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7222
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_806, $P5003
    repr_defined $I5001, fb_tmp_806
    unless $I5001 goto if3510_else7223 
    set $P5005, fb_tmp_806["$W"]
    set $P5007, $P5005
    goto if3510_end7224
  if3510_else7223:
    null $P5006
    set $P5007, $P5006
  if3510_end7224:
    unless_null $P5007, vivi_35117225
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_35117225:
    unless_null $P5007, vivi_35127226
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_35127226:
    set $P5002, $P5007
  fallback7222:
    $P5010 = $P5002."cur_lexpad"()
    set $P101, $P5010
.annotate 'line', 2482
    set fb_tmp_807, $P101
    repr_defined $I5002, fb_tmp_807
    unless $I5002 goto if3513_else7227 
    set $P5011, fb_tmp_807[0]
    set $P5013, $P5011
    goto if3513_end7228
  if3513_else7227:
    null $P5012
    set $P5013, $P5012
  if3513_end7228:
    unless_null $P5013, vivi_35147229
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_35147229:
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_223, $P5016
    get_who $P5017, pkg_lookup_tmp_223
    exists $I5004, $P5017["QAST"]
    unless $I5004 goto if3516_else7232 
    get_who $P5019, pkg_lookup_tmp_223
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if3516_end7233
  if3516_else7232:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if3516_end7233:
    get_who $P5015, $P5021
    set fb_tmp_808, $P5015
    repr_defined $I5003, fb_tmp_808
    unless $I5003 goto if3515_else7230 
    set $P5022, fb_tmp_808["Op"]
    set $P5024, $P5022
    goto if3515_end7231
  if3515_else7230:
    null $P5023
    set $P5024, $P5023
  if3515_end7231:
    unless_null $P5024, vivi_35177234
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_35177234:
.annotate 'line', 2484
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_224, $P5027
    get_who $P5028, pkg_lookup_tmp_224
    exists $I5006, $P5028["QAST"]
    unless $I5006 goto if3519_else7237 
    get_who $P5030, pkg_lookup_tmp_224
    set $P5029, $P5030["QAST"]
    set $P5032, $P5029
    goto if3519_end7238
  if3519_else7237:
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5031
  if3519_end7238:
    get_who $P5026, $P5032
    set fb_tmp_809, $P5026
    repr_defined $I5005, fb_tmp_809
    unless $I5005 goto if3518_else7235 
    set $P5033, fb_tmp_809["Var"]
    set $P5035, $P5033
    goto if3518_end7236
  if3518_else7235:
    null $P5034
    set $P5035, $P5034
  if3518_end7236:
    unless_null $P5035, vivi_35207239
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_35207239:
    find_lex $P5037, "$name"
    set $S5002, $P5037
    concat $S5001, "&", $S5002
    $P5038 = $P5035."new"($S5001 :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    find_lex $P5039, "$past"
    $P5040 = $P5024."new"($P5038, $P5039, "bind" :named("op"))
    $P5013."push"($P5040)
.annotate 'line', 2487
    find_lex $P5041, "$name"
    set $S5004, $P5041
    concat $S5003, "&", $S5004
    $P101."symbol"($S5003, "lexical" :named("scope"))
    find_dynamic_lex $P5042, "$*SCOPE"
    unless_null $P5042, fallback7242
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5043, $P5044
    set fb_tmp_810, $P5043
    repr_defined $I5008, fb_tmp_810
    unless $I5008 goto if3522_else7243 
    set $P5045, fb_tmp_810["$SCOPE"]
    set $P5047, $P5045
    goto if3522_end7244
  if3522_else7243:
    null $P5046
    set $P5047, $P5046
  if3522_end7244:
    unless_null $P5047, vivi_35237245
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_35237245:
    unless_null $P5047, vivi_35247246
    die "Contextual $*SCOPE not found"
    box $P5049, "Contextual $*SCOPE not found"
    set $P5047, $P5049
  vivi_35247246:
    set $P5042, $P5047
  fallback7242:
    set $S5005, $P5042
    iseq $I5007, $S5005, "our"
    box $P5103, $I5007
    set $P5102, $P5103
    unless $I5007 goto if3521_end7241 
.annotate 'line', 2488
.annotate 'line', 2491
    find_dynamic_lex $P5050, "$*W"
    unless_null $P5050, fallback7247
    nqp_get_sc_object $P5052, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5051, $P5052
    set fb_tmp_811, $P5051
    repr_defined $I5009, fb_tmp_811
    unless $I5009 goto if3525_else7248 
    set $P5053, fb_tmp_811["$W"]
    set $P5055, $P5053
    goto if3525_end7249
  if3525_else7248:
    null $P5054
    set $P5055, $P5054
  if3525_end7249:
    unless_null $P5055, vivi_35267250
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_35267250:
    unless_null $P5055, vivi_35277251
    die "Contextual $*W not found"
    box $P5057, "Contextual $*W not found"
    set $P5055, $P5057
  vivi_35277251:
    set $P5050, $P5055
  fallback7247:
    find_dynamic_lex $P5058, "$*PACKAGE"
    unless_null $P5058, fallback7252
    nqp_get_sc_object $P5060, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5059, $P5060
    set fb_tmp_812, $P5059
    repr_defined $I5010, fb_tmp_812
    unless $I5010 goto if3528_else7253 
    set $P5061, fb_tmp_812["$PACKAGE"]
    set $P5063, $P5061
    goto if3528_end7254
  if3528_else7253:
    null $P5062
    set $P5063, $P5062
  if3528_end7254:
    unless_null $P5063, vivi_35297255
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_35297255:
    unless_null $P5063, vivi_35307256
    die "Contextual $*PACKAGE not found"
    box $P5065, "Contextual $*PACKAGE not found"
    set $P5063, $P5065
  vivi_35307256:
    set $P5058, $P5063
  fallback7252:
    find_lex $P5066, "$name"
    find_lex $P5067, "$past"
    $P5050."install_package_routine"($P5058, $P5066, $P5067)
.annotate 'line', 2492
    set fb_tmp_813, $P101
    repr_defined $I5011, fb_tmp_813
    unless $I5011 goto if3531_else7257 
    set $P5068, fb_tmp_813[0]
    set $P5070, $P5068
    goto if3531_end7258
  if3531_else7257:
    null $P5069
    set $P5070, $P5069
  if3531_end7258:
    unless_null $P5070, vivi_35327259
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_35327259:
    nqp_get_sc_object $P5073, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_225, $P5073
    get_who $P5074, pkg_lookup_tmp_225
    exists $I5013, $P5074["QAST"]
    unless $I5013 goto if3534_else7262 
    get_who $P5076, pkg_lookup_tmp_225
    set $P5075, $P5076["QAST"]
    set $P5078, $P5075
    goto if3534_end7263
  if3534_else7262:
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5077
  if3534_end7263:
    get_who $P5072, $P5078
    set fb_tmp_814, $P5072
    repr_defined $I5012, fb_tmp_814
    unless $I5012 goto if3533_else7260 
    set $P5079, fb_tmp_814["Op"]
    set $P5081, $P5079
    goto if3533_end7261
  if3533_else7260:
    null $P5080
    set $P5081, $P5080
  if3533_end7261:
    unless_null $P5081, vivi_35357264
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5081, $P5082
  vivi_35357264:
.annotate 'line', 2494
    new $P5083, 'ResizablePMCArray'
    find_lex $P5084, "$name"
    push $P5083, $P5084
    find_lex $P5085, "$/"
    $P5086 = "&lexical_package_lookup"($P5083, $P5085)
.annotate 'line', 2495
    nqp_get_sc_object $P5088, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_226, $P5088
    get_who $P5089, pkg_lookup_tmp_226
    exists $I5015, $P5089["QAST"]
    unless $I5015 goto if3537_else7267 
    get_who $P5091, pkg_lookup_tmp_226
    set $P5090, $P5091["QAST"]
    set $P5093, $P5090
    goto if3537_end7268
  if3537_else7267:
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5093, $P5092
  if3537_end7268:
    get_who $P5087, $P5093
    set fb_tmp_815, $P5087
    repr_defined $I5014, fb_tmp_815
    unless $I5014 goto if3536_else7265 
    set $P5094, fb_tmp_815["Var"]
    set $P5096, $P5094
    goto if3536_end7266
  if3536_else7265:
    null $P5095
    set $P5096, $P5095
  if3536_end7266:
    unless_null $P5096, vivi_35387269
    nqp_get_sc_object $P5097, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5097
  vivi_35387269:
    find_lex $P5098, "$name"
    set $S5007, $P5098
    concat $S5006, "&", $S5007
    $P5099 = $P5096."new"($S5006 :named("name"), "lexical" :named("scope"))
    $P5100 = $P5081."new"($P5086, $P5099, "bind" :named("op"))
    $P5101 = $P5070."push"($P5100)
    set $P5102, $P5101
  if3521_end7241:
    .return ($P5102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_482_1361537952.49511") :anon :lex :outer("cuid_308_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2523
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "method_def" :subid("cuid_309_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2527
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5137 = 'cuid_483_1361537952.49511' 
    capture_lex $P5137 
    .const 'Sub' $P5137 = 'cuid_484_1361537952.49511' 
    capture_lex $P5137 
    .lex "$past", $P101 
    .lex "$name", $P102 
    .lex "$lexpast", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_824 
    .local pmc fb_tmp_825 
    .local pmc fb_tmp_826 
    .local pmc fb_tmp_827 
    .local pmc fb_tmp_828 
    .local pmc fb_tmp_829 
    .local pmc fb_tmp_830 
    .local pmc pkg_lookup_tmp_229 
    .local pmc fb_tmp_831 
    .local pmc fb_tmp_832 
    .local pmc fb_tmp_833 
    .local pmc fb_tmp_834 
    .local pmc fb_tmp_835 
    .local pmc fb_tmp_836 
    .local pmc fb_tmp_837 
    .local pmc fb_tmp_838 
    .local pmc fb_tmp_857 
    .local pmc pkg_lookup_tmp_237 
    .local pmc fb_tmp_858 
    .local pmc fb_tmp_859 
    .local pmc fb_tmp_860 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback7323
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5004
  fallback7323:
    set fb_tmp_824, _lex_param_1
    repr_defined $I5001, fb_tmp_824
    unless $I5001 goto if3566_else7321 
    set $P5005, fb_tmp_824["onlystar"]
    set $P5007, $P5005
    goto if3566_end7322
  if3566_else7321:
    null $P5006
    set $P5007, $P5006
  if3566_end7322:
    unless_null $P5007, vivi_35677324
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_35677324:
    unless $P5007 goto if3565_else7319 
.annotate 'line', 2531
.annotate 'line', 2532
    $P5009 = "&only_star_block"()
    set $P101, $P5009
    goto if3565_end7320
  if3565_else7319:
.annotate 'line', 2534
.annotate 'line', 2535
    unless_null _lex_param_1, fallback7327
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5010
  fallback7327:
    set fb_tmp_825, _lex_param_1
    repr_defined $I5002, fb_tmp_825
    unless $I5002 goto if3568_else7325 
    set $P5011, fb_tmp_825["blockoid"]
    set $P5013, $P5011
    goto if3568_end7326
  if3568_else7325:
    null $P5012
    set $P5013, $P5012
  if3568_end7326:
    unless_null $P5013, vivi_35697328
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_35697328:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2536
    $P101."blocktype"("declaration")
    find_dynamic_lex $P5016, "$*RETURN_USED"
    unless_null $P5016, fallback7331
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5017, $P5018
    set fb_tmp_826, $P5017
    repr_defined $I5003, fb_tmp_826
    unless $I5003 goto if3571_else7332 
    set $P5019, fb_tmp_826["$RETURN_USED"]
    set $P5021, $P5019
    goto if3571_end7333
  if3571_else7332:
    null $P5020
    set $P5021, $P5020
  if3571_end7333:
    unless_null $P5021, vivi_35727334
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_35727334:
    unless_null $P5021, vivi_35737335
    die "Contextual $*RETURN_USED not found"
    box $P5023, "Contextual $*RETURN_USED not found"
    set $P5021, $P5023
  vivi_35737335:
    set $P5016, $P5021
  fallback7331:
    set $P5029, $P5016
    unless $P5016 goto if3570_end7330 
.annotate 'line', 2537
.annotate 'line', 2538
    set fb_tmp_827, $P101
    repr_defined $I5004, fb_tmp_827
    unless $I5004 goto if3574_else7336 
    set $P5024, fb_tmp_827[1]
    set $P5026, $P5024
    goto if3574_end7337
  if3574_else7336:
    null $P5025
    set $P5026, $P5025
  if3574_end7337:
    unless_null $P5026, vivi_35757338
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_35757338:
    $P5028 = "&wrap_return_handler"($P5026)
    set $P101[1], $P5028
    set $P5029, $P5028
  if3570_end7330:
  if3565_end7320:
    set fb_tmp_828, $P101
    repr_defined $I5005, fb_tmp_828
    unless $I5005 goto if3577_else7341 
    set $P5030, fb_tmp_828["signature_has_invocant"]
    set $P5032, $P5030
    goto if3577_end7342
  if3577_else7341:
    null $P5031
    set $P5032, $P5031
  if3577_end7342:
    unless_null $P5032, vivi_35787343
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_35787343:
    if $P5032 goto unless3576_end7340 
.annotate 'line', 2543
.annotate 'line', 2544
    set fb_tmp_829, $P101
    repr_defined $I5006, fb_tmp_829
    unless $I5006 goto if3579_else7344 
    set $P5034, fb_tmp_829[0]
    set $P5036, $P5034
    goto if3579_end7345
  if3579_else7344:
    null $P5035
    set $P5036, $P5035
  if3579_end7345:
    unless_null $P5036, vivi_35807346
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_35807346:
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_229, $P5039
    get_who $P5040, pkg_lookup_tmp_229
    exists $I5008, $P5040["QAST"]
    unless $I5008 goto if3582_else7349 
    get_who $P5042, pkg_lookup_tmp_229
    set $P5041, $P5042["QAST"]
    set $P5044, $P5041
    goto if3582_end7350
  if3582_else7349:
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5043
  if3582_end7350:
    get_who $P5038, $P5044
    set fb_tmp_830, $P5038
    repr_defined $I5007, fb_tmp_830
    unless $I5007 goto if3581_else7347 
    set $P5045, fb_tmp_830["Var"]
    set $P5047, $P5045
    goto if3581_end7348
  if3581_else7347:
    null $P5046
    set $P5047, $P5046
  if3581_end7348:
    unless_null $P5047, vivi_35837351
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_35837351:
    find_dynamic_lex $P5049, "$*PACKAGE"
    unless_null $P5049, fallback7352
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5050, $P5051
    set fb_tmp_831, $P5050
    repr_defined $I5009, fb_tmp_831
    unless $I5009 goto if3584_else7353 
    set $P5052, fb_tmp_831["$PACKAGE"]
    set $P5054, $P5052
    goto if3584_end7354
  if3584_else7353:
    null $P5053
    set $P5054, $P5053
  if3584_end7354:
    unless_null $P5054, vivi_35857355
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5055
  vivi_35857355:
    unless_null $P5054, vivi_35867356
    die "Contextual $*PACKAGE not found"
    box $P5056, "Contextual $*PACKAGE not found"
    set $P5054, $P5056
  vivi_35867356:
    set $P5049, $P5054
  fallback7352:
    $P5057 = $P5047."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"), $P5049 :named("returns"))
    $P5058 = $P5036."unshift"($P5057)
  unless3576_end7340:
.annotate 'line', 2549
    $P101."symbol"("self", "lexical" :named("scope"))
    box $P5059, ""
    set $P102, $P5059
    unless_null _lex_param_1, fallback7361
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5060
  fallback7361:
    set fb_tmp_832, _lex_param_1
    repr_defined $I5010, fb_tmp_832
    unless $I5010 goto if3588_else7359 
    set $P5061, fb_tmp_832["deflongname"]
    set $P5063, $P5061
    goto if3588_end7360
  if3588_else7359:
    null $P5062
    set $P5063, $P5062
  if3588_end7360:
    unless_null $P5063, vivi_35897362
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_35897362:
    unless $P5063 goto if3587_else7357 
.annotate 'line', 2553
    unless_null _lex_param_1, fallback7365
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5065
  fallback7365:
    set fb_tmp_833, _lex_param_1
    repr_defined $I5011, fb_tmp_833
    unless $I5011 goto if3590_else7363 
    set $P5066, fb_tmp_833["private"]
    set $P5068, $P5066
    goto if3590_end7364
  if3590_else7363:
    null $P5067
    set $P5068, $P5067
  if3590_end7364:
    unless_null $P5068, vivi_35917366
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_35917366:
    set $S5002, $P5068
.annotate 'line', 2554
    unless_null _lex_param_1, fallback7371
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5070
  fallback7371:
    set fb_tmp_835, _lex_param_1
    repr_defined $I5013, fb_tmp_835
    unless $I5013 goto if3593_else7369 
    set $P5071, fb_tmp_835["deflongname"]
    set $P5073, $P5071
    goto if3593_end7370
  if3593_else7369:
    null $P5072
    set $P5073, $P5072
  if3593_end7370:
    unless_null $P5073, vivi_35947372
    nqp_get_sc_object $P5074, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5073, $P5074
  vivi_35947372:
    set fb_tmp_834, $P5073
    repr_defined $I5012, fb_tmp_834
    unless $I5012 goto if3592_else7367 
    set $P5075, fb_tmp_834[0]
    set $P5077, $P5075
    goto if3592_end7368
  if3592_else7367:
    null $P5076
    set $P5077, $P5076
  if3592_end7368:
    unless_null $P5077, vivi_35957373
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5077, $P5078
  vivi_35957373:
    $P5079 = $P5077."ast"()
    set $S5003, $P5079
    concat $S5001, $S5002, $S5003
    box $P5080, $S5001
    set $P102, $P5080
    goto if3587_end7358
  if3587_else7357:
    unless_null _lex_param_1, fallback7378
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5081
  fallback7378:
    set fb_tmp_836, _lex_param_1
    repr_defined $I5014, fb_tmp_836
    unless $I5014 goto if3597_else7376 
    set $P5082, fb_tmp_836["latename"]
    set $P5084, $P5082
    goto if3597_end7377
  if3597_else7376:
    null $P5083
    set $P5084, $P5083
  if3597_end7377:
    unless_null $P5084, vivi_35987379
    nqp_get_sc_object $P5085, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5085
  vivi_35987379:
    set $P5102, $P5084
    unless $P5084 goto if3596_end7375 
.annotate 'line', 2556
    find_dynamic_lex $P5086, "$*PKGDECL"
    unless_null $P5086, fallback7382
    nqp_get_sc_object $P5088, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5087, $P5088
    set fb_tmp_837, $P5087
    repr_defined $I5016, fb_tmp_837
    unless $I5016 goto if3600_else7383 
    set $P5089, fb_tmp_837["$PKGDECL"]
    set $P5091, $P5089
    goto if3600_end7384
  if3600_else7383:
    null $P5090
    set $P5091, $P5090
  if3600_end7384:
    unless_null $P5091, vivi_36017385
    nqp_get_sc_object $P5092, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5091, $P5092
  vivi_36017385:
    unless_null $P5091, vivi_36027386
    die "Contextual $*PKGDECL not found"
    box $P5093, "Contextual $*PKGDECL not found"
    set $P5091, $P5093
  vivi_36027386:
    set $P5086, $P5091
  fallback7382:
    set $S5004, $P5086
    isne $I5015, $S5004, "role"
    unless $I5015 goto if3599_end7381 
.annotate 'line', 2557
.annotate 'line', 2558
    $P5094 = _lex_param_1."CURSOR"()
    $P5095 = $P5094."panic"("Late-bound method name only valid in role")
  if3599_end7381:
    unless_null _lex_param_1, fallback7389
    nqp_get_sc_object $P5096, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5096
  fallback7389:
    set fb_tmp_838, _lex_param_1
    repr_defined $I5017, fb_tmp_838
    unless $I5017 goto if3603_else7387 
    set $P5097, fb_tmp_838["latename"]
    set $P5099, $P5097
    goto if3603_end7388
  if3603_else7387:
    null $P5098
    set $P5099, $P5098
  if3603_end7388:
    unless_null $P5099, vivi_36047390
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5099, $P5100
  vivi_36047390:
    set $S5006, $P5099
    concat $S5005, "!!LATENAME!!", $S5006
    box $P5101, $S5005
    set $P102, $P5101
    set $P5102, $P102
  if3596_end7375:
  if3587_end7358:
    set $S5007, $P102
    isne $I5018, $S5007, ""
    unless $I5018 goto if3605_end7392 
    .const 'Sub' $P5103 = 'cuid_483_1361537952.49511' 
    capture_lex $P5103
    $P5104 = $P5103()
  if3605_end7392:
.annotate 'line', 2596
    nqp_get_sc_object $P5106, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_237, $P5106
    get_who $P5107, pkg_lookup_tmp_237
    exists $I5020, $P5107["QAST"]
    unless $I5020 goto if3663_else7489 
    get_who $P5109, pkg_lookup_tmp_237
    set $P5108, $P5109["QAST"]
    set $P5111, $P5108
    goto if3663_end7490
  if3663_else7489:
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5110
  if3663_end7490:
    get_who $P5105, $P5111
    set fb_tmp_857, $P5105
    repr_defined $I5019, fb_tmp_857
    unless $I5019 goto if3662_else7487 
    set $P5112, fb_tmp_857["Op"]
    set $P5114, $P5112
    goto if3662_end7488
  if3662_else7487:
    null $P5113
    set $P5114, $P5113
  if3662_end7488:
    unless_null $P5114, vivi_36647491
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5115
  vivi_36647491:
    $P5116 = $P5114."new"($P101, "takeclosure" :named("op"))
    set $P103, $P5116
    set $P103["sink"], $P101
    set $P103["block_past"], $P101
    set fb_tmp_858, $P101
    repr_defined $I5021, fb_tmp_858
    unless $I5021 goto if3665_else7492 
    set $P5117, fb_tmp_858["code_obj"]
    set $P5119, $P5117
    goto if3665_end7493
  if3665_else7492:
    null $P5118
    set $P5119, $P5118
  if3665_end7493:
    unless_null $P5119, vivi_36667494
    nqp_get_sc_object $P5120, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5119, $P5120
  vivi_36667494:
    set $P103["code_obj"], $P5119
.annotate 'line', 2600
    _lex_param_1."!make"($P103)
    unless_null _lex_param_1, fallback7499
    nqp_get_sc_object $P5121, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5121
  fallback7499:
    set fb_tmp_859, _lex_param_1
    repr_defined $I5022, fb_tmp_859
    unless $I5022 goto if3668_else7497 
    set $P5122, fb_tmp_859["trait"]
    set $P5124, $P5122
    goto if3668_end7498
  if3668_else7497:
    null $P5123
    set $P5124, $P5123
  if3668_end7498:
    unless_null $P5124, vivi_36697500
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5124, $P5125
  vivi_36697500:
    set $P5136, $P5124
    unless $P5124 goto if3667_end7496 
.annotate 'line', 2601
    unless_null _lex_param_1, fallback7503
    nqp_get_sc_object $P5129, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5129
  fallback7503:
    set fb_tmp_860, _lex_param_1
    repr_defined $I5023, fb_tmp_860
    unless $I5023 goto if3670_else7501 
    set $P5130, fb_tmp_860["trait"]
    set $P5132, $P5130
    goto if3670_end7502
  if3670_else7501:
    null $P5131
    set $P5132, $P5131
  if3670_end7502:
    unless_null $P5132, vivi_36717504
    nqp_get_sc_object $P5133, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5132, $P5133
  vivi_36717504:
    set $P5126, $P5132
    iter $P5128, $P5132
  for_next7505:
    unless $P5128, for_done7507
    shift $P5135, $P5128
  for_redo7506:
    .const 'Sub' $P5134 = 'cuid_484_1361537952.49511' 
    capture_lex $P5134
    $P5126 = $P5134($P5135)
    goto for_next7505
  for_done7507:
    set $P5136, $P5126
  if3667_end7496:
    .return ($P5136) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_483_1361537952.49511") :anon :lex :outer("cuid_309_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2562
    .lex "$meta_meth", $P101 
    .lex "$is_dispatcher", $P102 
    .lex "$code", $P103 
    .local pmc fb_tmp_839 
    .local pmc fb_tmp_840 
    .local pmc fb_tmp_841 
    .local pmc fb_tmp_842 
    .local pmc fb_tmp_843 
    .local pmc fb_tmp_844 
    .local pmc fb_tmp_845 
    .local pmc fb_tmp_846 
    .local pmc fb_tmp_847 
    .local pmc fb_tmp_848 
    .local pmc fb_tmp_849 
    .local pmc pkg_lookup_tmp_230 
    .local pmc fb_tmp_850 
    .local pmc pkg_lookup_tmp_231 
    .local pmc fb_tmp_851 
    .local pmc pkg_lookup_tmp_232 
    .local pmc fb_tmp_852 
    .local pmc fb_tmp_853 
    .local pmc pkg_lookup_tmp_233 
    .local pmc fb_tmp_854 
    .local pmc pkg_lookup_tmp_234 
    .local pmc fb_tmp_855 
    .local pmc pkg_lookup_tmp_235 
    .local pmc fb_tmp_856 
    .local pmc pkg_lookup_tmp_236 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 2564
    find_lex $P5004, "$past"
    find_lex $P5005, "$name"
    $P5004."name"($P5005)
    find_dynamic_lex $P5006, "$*MULTINESS"
    unless_null $P5006, fallback7395
    nqp_get_sc_object $P5008, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5007, $P5008
    set fb_tmp_839, $P5007
    repr_defined $I5002, fb_tmp_839
    unless $I5002 goto if3607_else7396 
    set $P5009, fb_tmp_839["$MULTINESS"]
    set $P5011, $P5009
    goto if3607_end7397
  if3607_else7396:
    null $P5010
    set $P5011, $P5010
  if3607_end7397:
    unless_null $P5011, vivi_36087398
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_36087398:
    unless_null $P5011, vivi_36097399
    die "Contextual $*MULTINESS not found"
    box $P5013, "Contextual $*MULTINESS not found"
    set $P5011, $P5013
  vivi_36097399:
    set $P5006, $P5011
  fallback7395:
    set $S5001, $P5006
    iseq $I5001, $S5001, "multi"
    unless $I5001 goto if3606_else7393 
    set $S5002, "add_multi_method"
    goto if3606_end7394
  if3606_else7393:
    set $S5002, "add_method"
  if3606_end7394:
    box $P5014, $S5002
    set $P101, $P5014
    find_dynamic_lex $P5015, "$*MULTINESS"
    unless_null $P5015, fallback7400
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_840, $P5016
    repr_defined $I5004, fb_tmp_840
    unless $I5004 goto if3610_else7401 
    set $P5018, fb_tmp_840["$MULTINESS"]
    set $P5020, $P5018
    goto if3610_end7402
  if3610_else7401:
    null $P5019
    set $P5020, $P5019
  if3610_end7402:
    unless_null $P5020, vivi_36117403
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_36117403:
    unless_null $P5020, vivi_36127404
    die "Contextual $*MULTINESS not found"
    box $P5022, "Contextual $*MULTINESS not found"
    set $P5020, $P5022
  vivi_36127404:
    set $P5015, $P5020
  fallback7400:
    set $S5003, $P5015
    iseq $I5003, $S5003, "proto"
    box $P5023, $I5003
    set $P102, $P5023
.annotate 'line', 2569
    find_dynamic_lex $P5024, "$*W"
    unless_null $P5024, fallback7405
    nqp_get_sc_object $P5026, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5025, $P5026
    set fb_tmp_841, $P5025
    repr_defined $I5005, fb_tmp_841
    unless $I5005 goto if3613_else7406 
    set $P5027, fb_tmp_841["$W"]
    set $P5029, $P5027
    goto if3613_end7407
  if3613_else7406:
    null $P5028
    set $P5029, $P5028
  if3613_end7407:
    unless_null $P5029, vivi_36147408
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_36147408:
    unless_null $P5029, vivi_36157409
    die "Contextual $*W not found"
    box $P5031, "Contextual $*W not found"
    set $P5029, $P5031
  vivi_36157409:
    set $P5024, $P5029
  fallback7405:
    find_lex $P5032, "$past"
    find_lex $P5033, "$name"
    $P5034 = $P5024."create_code"($P5032, $P5033, $P102)
    set $P103, $P5034
    find_dynamic_lex $P5035, "$*MULTINESS"
    unless_null $P5035, fallback7412
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5036, $P5037
    set fb_tmp_842, $P5036
    repr_defined $I5007, fb_tmp_842
    unless $I5007 goto if3617_else7413 
    set $P5038, fb_tmp_842["$MULTINESS"]
    set $P5040, $P5038
    goto if3617_end7414
  if3617_else7413:
    null $P5039
    set $P5040, $P5039
  if3617_end7414:
    unless_null $P5040, vivi_36187415
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_36187415:
    unless_null $P5040, vivi_36197416
    die "Contextual $*MULTINESS not found"
    box $P5042, "Contextual $*MULTINESS not found"
    set $P5040, $P5042
  vivi_36197416:
    set $P5035, $P5040
  fallback7412:
    set $S5004, $P5035
    iseq $I5006, $S5004, "multi"
    unless $I5006 goto if3616_end7411 
.annotate 'line', 2570
    find_lex $P5043, "$past"
    $P5044 = "&attach_multi_signature"($P103, $P5043)
  if3616_end7411:
.annotate 'line', 2571
    find_dynamic_lex $P5045, "$*W"
    unless_null $P5045, fallback7417
    nqp_get_sc_object $P5047, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5046, $P5047
    set fb_tmp_843, $P5046
    repr_defined $I5008, fb_tmp_843
    unless $I5008 goto if3620_else7418 
    set $P5048, fb_tmp_843["$W"]
    set $P5050, $P5048
    goto if3620_end7419
  if3620_else7418:
    null $P5049
    set $P5050, $P5049
  if3620_end7419:
    unless_null $P5050, vivi_36217420
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_36217420:
    unless_null $P5050, vivi_36227421
    die "Contextual $*W not found"
    box $P5052, "Contextual $*W not found"
    set $P5050, $P5052
  vivi_36227421:
    set $P5045, $P5050
  fallback7417:
    find_dynamic_lex $P5053, "$*PACKAGE"
    unless_null $P5053, fallback7422
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5054, $P5055
    set fb_tmp_844, $P5054
    repr_defined $I5009, fb_tmp_844
    unless $I5009 goto if3623_else7423 
    set $P5056, fb_tmp_844["$PACKAGE"]
    set $P5058, $P5056
    goto if3623_end7424
  if3623_else7423:
    null $P5057
    set $P5058, $P5057
  if3623_end7424:
    unless_null $P5058, vivi_36247425
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5058, $P5059
  vivi_36247425:
    unless_null $P5058, vivi_36257426
    die "Contextual $*PACKAGE not found"
    box $P5060, "Contextual $*PACKAGE not found"
    set $P5058, $P5060
  vivi_36257426:
    set $P5053, $P5058
  fallback7422:
    find_lex $P5061, "$name"
    $P5045."pkg_add_method"($P5053, $P101, $P5061, $P103)
    find_lex $P5062, "$past"
    set $P5062["code_obj"], $P103
    find_dynamic_lex $P5063, "$*SCOPE"
    unless_null $P5063, fallback7429
    nqp_get_sc_object $P5065, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5064, $P5065
    set fb_tmp_845, $P5064
    repr_defined $I5011, fb_tmp_845
    unless $I5011 goto if3627_else7430 
    set $P5066, fb_tmp_845["$SCOPE"]
    set $P5068, $P5066
    goto if3627_end7431
  if3627_else7430:
    null $P5067
    set $P5068, $P5067
  if3627_end7431:
    unless_null $P5068, vivi_36287432
    nqp_get_sc_object $P5069, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5069
  vivi_36287432:
    unless_null $P5068, vivi_36297433
    die "Contextual $*SCOPE not found"
    box $P5070, "Contextual $*SCOPE not found"
    set $P5068, $P5070
  vivi_36297433:
    set $P5063, $P5068
  fallback7429:
    set $S5005, $P5063
    iseq $I5010, $S5005, "our"
    unless $I5010 goto if3626_end7428 
.annotate 'line', 2575
.annotate 'line', 2576
    find_dynamic_lex $P5071, "$*W"
    unless_null $P5071, fallback7434
    nqp_get_sc_object $P5073, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5072, $P5073
    set fb_tmp_846, $P5072
    repr_defined $I5012, fb_tmp_846
    unless $I5012 goto if3630_else7435 
    set $P5074, fb_tmp_846["$W"]
    set $P5076, $P5074
    goto if3630_end7436
  if3630_else7435:
    null $P5075
    set $P5076, $P5075
  if3630_end7436:
    unless_null $P5076, vivi_36317437
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5076, $P5077
  vivi_36317437:
    unless_null $P5076, vivi_36327438
    die "Contextual $*W not found"
    box $P5078, "Contextual $*W not found"
    set $P5076, $P5078
  vivi_36327438:
    set $P5071, $P5076
  fallback7434:
    find_dynamic_lex $P5079, "$*PACKAGE"
    unless_null $P5079, fallback7439
    nqp_get_sc_object $P5081, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5080, $P5081
    set fb_tmp_847, $P5080
    repr_defined $I5013, fb_tmp_847
    unless $I5013 goto if3633_else7440 
    set $P5082, fb_tmp_847["$PACKAGE"]
    set $P5084, $P5082
    goto if3633_end7441
  if3633_else7440:
    null $P5083
    set $P5084, $P5083
  if3633_end7441:
    unless_null $P5084, vivi_36347442
    nqp_get_sc_object $P5085, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5084, $P5085
  vivi_36347442:
    unless_null $P5084, vivi_36357443
    die "Contextual $*PACKAGE not found"
    box $P5086, "Contextual $*PACKAGE not found"
    set $P5084, $P5086
  vivi_36357443:
    set $P5079, $P5084
  fallback7439:
    find_lex $P5087, "$name"
    find_lex $P5088, "$past"
    $P5089 = $P5071."install_package_routine"($P5079, $P5087, $P5088)
  if3626_end7428:
    set $P5185, $P102
    unless $P102 goto if3636_end7445 
.annotate 'line', 2581
.annotate 'line', 2582
    find_lex $P5090, "$past"
    set fb_tmp_848, $P5090
    repr_defined $I5014, fb_tmp_848
    unless $I5014 goto if3637_else7446 
    set $P5091, fb_tmp_848[0]
    set $P5093, $P5091
    goto if3637_end7447
  if3637_else7446:
    null $P5092
    set $P5093, $P5092
  if3637_end7447:
    unless_null $P5093, vivi_36387448
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5093, $P5094
  vivi_36387448:
    nqp_get_sc_object $P5096, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_230, $P5096
    get_who $P5097, pkg_lookup_tmp_230
    exists $I5016, $P5097["QAST"]
    unless $I5016 goto if3640_else7451 
    get_who $P5099, pkg_lookup_tmp_230
    set $P5098, $P5099["QAST"]
    set $P5101, $P5098
    goto if3640_end7452
  if3640_else7451:
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5101, $P5100
  if3640_end7452:
    get_who $P5095, $P5101
    set fb_tmp_849, $P5095
    repr_defined $I5015, fb_tmp_849
    unless $I5015 goto if3639_else7449 
    set $P5102, fb_tmp_849["Op"]
    set $P5104, $P5102
    goto if3639_end7450
  if3639_else7449:
    null $P5103
    set $P5104, $P5103
  if3639_end7450:
    unless_null $P5104, vivi_36417453
    nqp_get_sc_object $P5105, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5104, $P5105
  vivi_36417453:
.annotate 'line', 2584
    nqp_get_sc_object $P5107, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_231, $P5107
    get_who $P5108, pkg_lookup_tmp_231
    exists $I5018, $P5108["QAST"]
    unless $I5018 goto if3643_else7456 
    get_who $P5110, pkg_lookup_tmp_231
    set $P5109, $P5110["QAST"]
    set $P5112, $P5109
    goto if3643_end7457
  if3643_else7456:
    nqp_get_sc_object $P5111, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5112, $P5111
  if3643_end7457:
    get_who $P5106, $P5112
    set fb_tmp_850, $P5106
    repr_defined $I5017, fb_tmp_850
    unless $I5017 goto if3642_else7454 
    set $P5113, fb_tmp_850["Var"]
    set $P5115, $P5113
    goto if3642_end7455
  if3642_else7454:
    null $P5114
    set $P5115, $P5114
  if3642_end7455:
    unless_null $P5115, vivi_36447458
    nqp_get_sc_object $P5116, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5115, $P5116
  vivi_36447458:
    $P5117 = $P5115."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2585
    nqp_get_sc_object $P5119, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_232, $P5119
    get_who $P5120, pkg_lookup_tmp_232
    exists $I5020, $P5120["QAST"]
    unless $I5020 goto if3646_else7461 
    get_who $P5122, pkg_lookup_tmp_232
    set $P5121, $P5122["QAST"]
    set $P5124, $P5121
    goto if3646_end7462
  if3646_else7461:
    nqp_get_sc_object $P5123, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5124, $P5123
  if3646_end7462:
    get_who $P5118, $P5124
    set fb_tmp_851, $P5118
    repr_defined $I5019, fb_tmp_851
    unless $I5019 goto if3645_else7459 
    set $P5125, fb_tmp_851["Op"]
    set $P5127, $P5125
    goto if3645_end7460
  if3645_else7459:
    null $P5126
    set $P5127, $P5126
  if3645_end7460:
    unless_null $P5127, vivi_36477463
    nqp_get_sc_object $P5128, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5127, $P5128
  vivi_36477463:
    $P5129 = $P5127."new"("savecapture" :named("op"))
    $P5130 = $P5104."new"($P5117, $P5129, "bind" :named("op"))
    $P5093."push"($P5130)
.annotate 'line', 2587
    find_lex $P5131, "$past"
    set fb_tmp_852, $P5131
    repr_defined $I5021, fb_tmp_852
    unless $I5021 goto if3648_else7464 
    set $P5132, fb_tmp_852[0]
    set $P5134, $P5132
    goto if3648_end7465
  if3648_else7464:
    null $P5133
    set $P5134, $P5133
  if3648_end7465:
    unless_null $P5134, vivi_36497466
    nqp_get_sc_object $P5135, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5134, $P5135
  vivi_36497466:
    nqp_get_sc_object $P5137, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_233, $P5137
    get_who $P5138, pkg_lookup_tmp_233
    exists $I5023, $P5138["QAST"]
    unless $I5023 goto if3651_else7469 
    get_who $P5140, pkg_lookup_tmp_233
    set $P5139, $P5140["QAST"]
    set $P5142, $P5139
    goto if3651_end7470
  if3651_else7469:
    nqp_get_sc_object $P5141, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5142, $P5141
  if3651_end7470:
    get_who $P5136, $P5142
    set fb_tmp_853, $P5136
    repr_defined $I5022, fb_tmp_853
    unless $I5022 goto if3650_else7467 
    set $P5143, fb_tmp_853["Op"]
    set $P5145, $P5143
    goto if3650_end7468
  if3650_else7467:
    null $P5144
    set $P5145, $P5144
  if3650_end7468:
    unless_null $P5145, vivi_36527471
    nqp_get_sc_object $P5146, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5145, $P5146
  vivi_36527471:
.annotate 'line', 2589
    nqp_get_sc_object $P5148, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_234, $P5148
    get_who $P5149, pkg_lookup_tmp_234
    exists $I5025, $P5149["QAST"]
    unless $I5025 goto if3654_else7474 
    get_who $P5151, pkg_lookup_tmp_234
    set $P5150, $P5151["QAST"]
    set $P5153, $P5150
    goto if3654_end7475
  if3654_else7474:
    nqp_get_sc_object $P5152, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5153, $P5152
  if3654_end7475:
    get_who $P5147, $P5153
    set fb_tmp_854, $P5147
    repr_defined $I5024, fb_tmp_854
    unless $I5024 goto if3653_else7472 
    set $P5154, fb_tmp_854["Var"]
    set $P5156, $P5154
    goto if3653_end7473
  if3653_else7472:
    null $P5155
    set $P5156, $P5155
  if3653_end7473:
    unless_null $P5156, vivi_36557476
    nqp_get_sc_object $P5157, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5156, $P5157
  vivi_36557476:
    $P5158 = $P5156."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2590
    nqp_get_sc_object $P5160, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_235, $P5160
    get_who $P5161, pkg_lookup_tmp_235
    exists $I5027, $P5161["QAST"]
    unless $I5027 goto if3657_else7479 
    get_who $P5163, pkg_lookup_tmp_235
    set $P5162, $P5163["QAST"]
    set $P5165, $P5162
    goto if3657_end7480
  if3657_else7479:
    nqp_get_sc_object $P5164, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5165, $P5164
  if3657_end7480:
    get_who $P5159, $P5165
    set fb_tmp_855, $P5159
    repr_defined $I5026, fb_tmp_855
    unless $I5026 goto if3656_else7477 
    set $P5166, fb_tmp_855["Op"]
    set $P5168, $P5166
    goto if3656_end7478
  if3656_else7477:
    null $P5167
    set $P5168, $P5167
  if3656_end7478:
    unless_null $P5168, vivi_36587481
    nqp_get_sc_object $P5169, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5168, $P5169
  vivi_36587481:
    nqp_get_sc_object $P5171, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_236, $P5171
    get_who $P5172, pkg_lookup_tmp_236
    exists $I5029, $P5172["QAST"]
    unless $I5029 goto if3660_else7484 
    get_who $P5174, pkg_lookup_tmp_236
    set $P5173, $P5174["QAST"]
    set $P5176, $P5173
    goto if3660_end7485
  if3660_else7484:
    nqp_get_sc_object $P5175, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5176, $P5175
  if3660_end7485:
    get_who $P5170, $P5176
    set fb_tmp_856, $P5170
    repr_defined $I5028, fb_tmp_856
    unless $I5028 goto if3659_else7482 
    set $P5177, fb_tmp_856["Op"]
    set $P5179, $P5177
    goto if3659_end7483
  if3659_else7482:
    null $P5178
    set $P5179, $P5178
  if3659_end7483:
    unless_null $P5179, vivi_36617486
    nqp_get_sc_object $P5180, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5179, $P5180
  vivi_36617486:
    $P5181 = $P5179."new"("curcode" :named("op"))
    $P5182 = $P5168."new"($P5181, "getcodeobj" :named("op"))
    $P5183 = $P5145."new"($P5158, $P5182, "bind" :named("op"))
    $P5184 = $P5134."push"($P5183)
    set $P5185, $P5184
  if3636_end7445:
    .return ($P5185) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_484_1361537952.49511") :anon :lex :outer("cuid_309_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2602
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "$/"
    $P5001 = _lex_param_0."ast"()
    $P5003 = $P5001($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "signature" :subid("cuid_310_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2654
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5033 = 'cuid_485_1361537952.49511' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_486_1361537952.49511' 
    capture_lex $P5033 
    .lex "$BLOCK", $P101 
    .lex "$BLOCKINIT", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_861 
    .local pmc fb_tmp_862 
    .local pmc fb_tmp_863 
    .local pmc fb_tmp_869 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2655
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback7508
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_861, $P5004
    repr_defined $I5001, fb_tmp_861
    unless $I5001 goto if3672_else7509 
    set $P5006, fb_tmp_861["$W"]
    set $P5008, $P5006
    goto if3672_end7510
  if3672_else7509:
    null $P5007
    set $P5008, $P5007
  if3672_end7510:
    unless_null $P5008, vivi_36737511
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_36737511:
    unless_null $P5008, vivi_36747512
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_36747512:
    set $P5003, $P5008
  fallback7508:
    $P5011 = $P5003."cur_lexpad"()
    set $P101, $P5011
    set fb_tmp_862, $P101
    repr_defined $I5002, fb_tmp_862
    unless $I5002 goto if3675_else7513 
    set $P5012, fb_tmp_862[0]
    set $P5014, $P5012
    goto if3675_end7514
  if3675_else7513:
    null $P5013
    set $P5014, $P5013
  if3675_end7514:
    unless_null $P5014, vivi_36767515
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_36767515:
    set $P102, $P5014
    unless_null _lex_param_1, fallback7520
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5016
  fallback7520:
    set fb_tmp_863, _lex_param_1
    repr_defined $I5003, fb_tmp_863
    unless $I5003 goto if3678_else7518 
    set $P5017, fb_tmp_863["invocant"]
    set $P5019, $P5017
    goto if3678_end7519
  if3678_else7518:
    null $P5018
    set $P5019, $P5018
  if3678_end7519:
    unless_null $P5019, vivi_36797521
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_36797521:
    unless $P5019 goto if3677_end7517 
    .const 'Sub' $P5021 = 'cuid_485_1361537952.49511' 
    capture_lex $P5021
    $P5022 = $P5021()
  if3677_end7517:
    unless_null _lex_param_1, fallback7546
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5026
  fallback7546:
    set fb_tmp_869, _lex_param_1
    repr_defined $I5004, fb_tmp_869
    unless $I5004 goto if3693_else7544 
    set $P5027, fb_tmp_869["parameter"]
    set $P5029, $P5027
    goto if3693_end7545
  if3693_else7544:
    null $P5028
    set $P5029, $P5028
  if3693_end7545:
    unless_null $P5029, vivi_36947547
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_36947547:
    set $P5023, $P5029
    iter $P5025, $P5029
  for_next7548:
    unless $P5025, for_done7550
    shift $P5032, $P5025
  for_redo7549:
    .const 'Sub' $P5031 = 'cuid_486_1361537952.49511' 
    capture_lex $P5031
    $P5023 = $P5031($P5032)
    goto for_next7548
  for_done7550:
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_485_1361537952.49511") :anon :lex :outer("cuid_310_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2657
    .lex "$inv", $P101 
    .local pmc fb_tmp_864 
    .local pmc fb_tmp_865 
    .local pmc fb_tmp_866 
    .local pmc pkg_lookup_tmp_253 
    .local pmc fb_tmp_867 
    .local pmc pkg_lookup_tmp_254 
    .local pmc fb_tmp_868 
    .local pmc pkg_lookup_tmp_255 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2658
    find_lex $P5002, "$/"
    unless_null $P5002, fallback7526
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback7526:
    set fb_tmp_865, $P5002
    repr_defined $I5002, fb_tmp_865
    unless $I5002 goto if3681_else7524 
    set $P5004, fb_tmp_865["invocant"]
    set $P5006, $P5004
    goto if3681_end7525
  if3681_else7524:
    null $P5005
    set $P5006, $P5005
  if3681_end7525:
    unless_null $P5006, vivi_36827527
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_36827527:
    set fb_tmp_864, $P5006
    repr_defined $I5001, fb_tmp_864
    unless $I5001 goto if3680_else7522 
    set $P5008, fb_tmp_864[0]
    set $P5010, $P5008
    goto if3680_end7523
  if3680_else7522:
    null $P5009
    set $P5010, $P5009
  if3680_end7523:
    unless_null $P5010, vivi_36837528
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_36837528:
    $P5012 = $P5010."ast"()
    set $P101, $P5012
.annotate 'line', 2659
    find_lex $P5013, "$BLOCKINIT"
    $P5013."push"($P101)
.annotate 'line', 2660
    find_lex $P5014, "$BLOCKINIT"
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_253, $P5016
    get_who $P5017, pkg_lookup_tmp_253
    exists $I5004, $P5017["QAST"]
    unless $I5004 goto if3685_else7531 
    get_who $P5019, pkg_lookup_tmp_253
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if3685_end7532
  if3685_else7531:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if3685_end7532:
    get_who $P5015, $P5021
    set fb_tmp_866, $P5015
    repr_defined $I5003, fb_tmp_866
    unless $I5003 goto if3684_else7529 
    set $P5022, fb_tmp_866["Op"]
    set $P5024, $P5022
    goto if3684_end7530
  if3684_else7529:
    null $P5023
    set $P5024, $P5023
  if3684_end7530:
    unless_null $P5024, vivi_36867533
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_36867533:
.annotate 'line', 2662
    nqp_get_sc_object $P5027, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_254, $P5027
    get_who $P5028, pkg_lookup_tmp_254
    exists $I5006, $P5028["QAST"]
    unless $I5006 goto if3688_else7536 
    get_who $P5030, pkg_lookup_tmp_254
    set $P5029, $P5030["QAST"]
    set $P5032, $P5029
    goto if3688_end7537
  if3688_else7536:
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5031
  if3688_end7537:
    get_who $P5026, $P5032
    set fb_tmp_867, $P5026
    repr_defined $I5005, fb_tmp_867
    unless $I5005 goto if3687_else7534 
    set $P5033, fb_tmp_867["Var"]
    set $P5035, $P5033
    goto if3687_end7535
  if3687_else7534:
    null $P5034
    set $P5035, $P5034
  if3687_end7535:
    unless_null $P5035, vivi_36897538
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5036
  vivi_36897538:
    $P5037 = $P5035."new"("self" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
.annotate 'line', 2663
    nqp_get_sc_object $P5039, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_255, $P5039
    get_who $P5040, pkg_lookup_tmp_255
    exists $I5008, $P5040["QAST"]
    unless $I5008 goto if3691_else7541 
    get_who $P5042, pkg_lookup_tmp_255
    set $P5041, $P5042["QAST"]
    set $P5044, $P5041
    goto if3691_end7542
  if3691_else7541:
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5044, $P5043
  if3691_end7542:
    get_who $P5038, $P5044
    set fb_tmp_868, $P5038
    repr_defined $I5007, fb_tmp_868
    unless $I5007 goto if3690_else7539 
    set $P5045, fb_tmp_868["Var"]
    set $P5047, $P5045
    goto if3690_end7540
  if3690_else7539:
    null $P5046
    set $P5047, $P5046
  if3690_end7540:
    unless_null $P5047, vivi_36927543
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5048
  vivi_36927543:
    $P5049 = $P101."name"()
    $P5050 = $P5047."new"("lexical" :named("scope"), $P5049 :named("name"))
    $P5051 = $P5024."new"($P5037, $P5050, "bind" :named("op"))
    $P5014."push"($P5051)
    find_lex $P5052, "$BLOCK"
    box $P5053, 1
    set $P5052["signature_has_invocant"], $P5053
    .return ($P5053) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_486_1361537952.49511") :anon :lex :outer("cuid_310_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2667
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$BLOCKINIT"
    $P5002 = _lex_param_0."ast"()
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "parameter" :subid("cuid_311_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2670
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5134 = 'cuid_488_1361537952.49511' 
    capture_lex $P5134 
    .lex "$quant", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_870 
    .local pmc fb_tmp_871 
    .local pmc fb_tmp_872 
    .local pmc fb_tmp_873 
    .local pmc fb_tmp_874 
    .local pmc fb_tmp_875 
    .local pmc fb_tmp_876 
    .local pmc fb_tmp_877 
    .local pmc fb_tmp_878 
    .local pmc fb_tmp_879 
    .local pmc fb_tmp_880 
    .local pmc fb_tmp_881 
    .local pmc fb_tmp_882 
    .local pmc fb_tmp_883 
    .local pmc fb_tmp_884 
    .local pmc fb_tmp_885 
    .local pmc fb_tmp_886 
    .local pmc fb_tmp_887 
    .local pmc fb_tmp_892 
    .local pmc fb_tmp_893 
    .local pmc fb_tmp_894 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback7553
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback7553:
    set fb_tmp_870, _lex_param_1
    repr_defined $I5001, fb_tmp_870
    unless $I5001 goto if3695_else7551 
    set $P5004, fb_tmp_870["quant"]
    set $P5006, $P5004
    goto if3695_end7552
  if3695_else7551:
    null $P5005
    set $P5006, $P5005
  if3695_end7552:
    unless_null $P5006, vivi_36967554
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_36967554:
    set $P101, $P5006
    unless_null _lex_param_1, fallback7559
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback7559:
    set fb_tmp_871, _lex_param_1
    repr_defined $I5002, fb_tmp_871
    unless $I5002 goto if3698_else7557 
    set $P5009, fb_tmp_871["named_param"]
    set $P5011, $P5009
    goto if3698_end7558
  if3698_else7557:
    null $P5010
    set $P5011, $P5010
  if3698_end7558:
    unless_null $P5011, vivi_36997560
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_36997560:
    unless $P5011 goto if3697_else7555 
.annotate 'line', 2673
.annotate 'line', 2674
    unless_null _lex_param_1, fallback7563
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5013
  fallback7563:
    set fb_tmp_872, _lex_param_1
    repr_defined $I5003, fb_tmp_872
    unless $I5003 goto if3700_else7561 
    set $P5014, fb_tmp_872["named_param"]
    set $P5016, $P5014
    goto if3700_end7562
  if3700_else7561:
    null $P5015
    set $P5016, $P5015
  if3700_end7562:
    unless_null $P5016, vivi_37017564
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_37017564:
    $P5018 = $P5016."ast"()
    set $P102, $P5018
    set $S5001, $P101
    isne $I5004, $S5001, "!"
    box $P5035, $I5004
    set $P5034, $P5035
    unless $I5004 goto if3702_end7566 
.annotate 'line', 2675
.annotate 'line', 2676
    unless_null _lex_param_1, fallback7573
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5019
  fallback7573:
    set fb_tmp_875, _lex_param_1
    repr_defined $I5007, fb_tmp_875
    unless $I5007 goto if3705_else7571 
    set $P5020, fb_tmp_875["named_param"]
    set $P5022, $P5020
    goto if3705_end7572
  if3705_else7571:
    null $P5021
    set $P5022, $P5021
  if3705_end7572:
    unless_null $P5022, vivi_37067574
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_37067574:
    set fb_tmp_874, $P5022
    repr_defined $I5006, fb_tmp_874
    unless $I5006 goto if3704_else7569 
    set $P5024, fb_tmp_874["param_var"]
    set $P5026, $P5024
    goto if3704_end7570
  if3704_else7569:
    null $P5025
    set $P5026, $P5025
  if3704_end7570:
    unless_null $P5026, vivi_37077575
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_37077575:
    set fb_tmp_873, $P5026
    repr_defined $I5005, fb_tmp_873
    unless $I5005 goto if3703_else7567 
    set $P5028, fb_tmp_873["sigil"]
    set $P5030, $P5028
    goto if3703_end7568
  if3703_else7567:
    null $P5029
    set $P5030, $P5029
  if3703_end7568:
    unless_null $P5030, vivi_37087576
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5030, $P5031
  vivi_37087576:
    $P5032 = "&default_for"($P5030)
    $P5033 = $P102."default"($P5032)
    set $P5034, $P5033
  if3702_end7566:
    goto if3697_end7556
  if3697_else7555:
.annotate 'line', 2679
.annotate 'line', 2680
    unless_null _lex_param_1, fallback7579
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5036
  fallback7579:
    set fb_tmp_876, _lex_param_1
    repr_defined $I5008, fb_tmp_876
    unless $I5008 goto if3709_else7577 
    set $P5037, fb_tmp_876["param_var"]
    set $P5039, $P5037
    goto if3709_end7578
  if3709_else7577:
    null $P5038
    set $P5039, $P5038
  if3709_end7578:
    unless_null $P5039, vivi_37107580
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_37107580:
    $P5041 = $P5039."ast"()
    set $P102, $P5041
    set $S5002, $P101
    iseq $I5009, $S5002, "*"
    unless $I5009 goto if3711_else7581 
.annotate 'line', 2681
.annotate 'line', 2682
    $P102."slurpy"(1)
.annotate 'line', 2683
    unless_null _lex_param_1, fallback7587
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5042
  fallback7587:
    set fb_tmp_878, _lex_param_1
    repr_defined $I5012, fb_tmp_878
    unless $I5012 goto if3713_else7585 
    set $P5043, fb_tmp_878["param_var"]
    set $P5045, $P5043
    goto if3713_end7586
  if3713_else7585:
    null $P5044
    set $P5045, $P5044
  if3713_end7586:
    unless_null $P5045, vivi_37147588
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_37147588:
    set fb_tmp_877, $P5045
    repr_defined $I5011, fb_tmp_877
    unless $I5011 goto if3712_else7583 
    set $P5047, fb_tmp_877["sigil"]
    set $P5049, $P5047
    goto if3712_end7584
  if3712_else7583:
    null $P5048
    set $P5049, $P5048
  if3712_end7584:
    unless_null $P5049, vivi_37157589
    nqp_get_sc_object $P5050, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5050
  vivi_37157589:
    set $S5003, $P5049
    iseq $I5010, $S5003, "%"
    $P5051 = $P102."named"($I5010)
    set $P5065, $P5051
    goto if3711_end7582
  if3711_else7581:
    set $S5004, $P101
    iseq $I5013, $S5004, "?"
    box $P5064, $I5013
    set $P5063, $P5064
    unless $I5013 goto if3716_end7591 
.annotate 'line', 2685
.annotate 'line', 2686
    unless_null _lex_param_1, fallback7596
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5052
  fallback7596:
    set fb_tmp_880, _lex_param_1
    repr_defined $I5015, fb_tmp_880
    unless $I5015 goto if3718_else7594 
    set $P5053, fb_tmp_880["param_var"]
    set $P5055, $P5053
    goto if3718_end7595
  if3718_else7594:
    null $P5054
    set $P5055, $P5054
  if3718_end7595:
    unless_null $P5055, vivi_37197597
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_37197597:
    set fb_tmp_879, $P5055
    repr_defined $I5014, fb_tmp_879
    unless $I5014 goto if3717_else7592 
    set $P5057, fb_tmp_879["sigil"]
    set $P5059, $P5057
    goto if3717_end7593
  if3717_else7592:
    null $P5058
    set $P5059, $P5058
  if3717_end7593:
    unless_null $P5059, vivi_37207598
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_37207598:
    $P5061 = "&default_for"($P5059)
    $P5062 = $P102."default"($P5061)
    set $P5063, $P5062
  if3716_end7591:
    set $P5065, $P5063
  if3711_end7582:
  if3697_end7556:
    unless_null _lex_param_1, fallback7603
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5066
  fallback7603:
    set fb_tmp_881, _lex_param_1
    repr_defined $I5016, fb_tmp_881
    unless $I5016 goto if3722_else7601 
    set $P5067, fb_tmp_881["default_value"]
    set $P5069, $P5067
    goto if3722_end7602
  if3722_else7601:
    null $P5068
    set $P5069, $P5068
  if3722_end7602:
    unless_null $P5069, vivi_37237604
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5070
  vivi_37237604:
    unless $P5069 goto if3721_end7600 
.annotate 'line', 2689
    set $S5005, $P101
    iseq $I5017, $S5005, "*"
    unless $I5017 goto if3724_end7606 
.annotate 'line', 2690
.annotate 'line', 2691
    $P5071 = _lex_param_1."CURSOR"()
    $P5072 = $P5071."panic"("Can't put default on slurpy parameter")
  if3724_end7606:
    set $S5006, $P101
    iseq $I5018, $S5006, "!"
    unless $I5018 goto if3725_end7608 
.annotate 'line', 2693
.annotate 'line', 2694
    $P5073 = _lex_param_1."CURSOR"()
    $P5074 = $P5073."panic"("Can't put default on required parameter")
  if3725_end7608:
.annotate 'line', 2696
    unless_null _lex_param_1, fallback7615
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5075
  fallback7615:
    set fb_tmp_884, _lex_param_1
    repr_defined $I5021, fb_tmp_884
    unless $I5021 goto if3728_else7613 
    set $P5076, fb_tmp_884["default_value"]
    set $P5078, $P5076
    goto if3728_end7614
  if3728_else7613:
    null $P5077
    set $P5078, $P5077
  if3728_end7614:
    unless_null $P5078, vivi_37297616
    nqp_get_sc_object $P5079, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5079
  vivi_37297616:
    set fb_tmp_883, $P5078
    repr_defined $I5020, fb_tmp_883
    unless $I5020 goto if3727_else7611 
    set $P5080, fb_tmp_883[0]
    set $P5082, $P5080
    goto if3727_end7612
  if3727_else7611:
    null $P5081
    set $P5082, $P5081
  if3727_end7612:
    unless_null $P5082, vivi_37307617
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_37307617:
    set fb_tmp_882, $P5082
    repr_defined $I5019, fb_tmp_882
    unless $I5019 goto if3726_else7609 
    set $P5084, fb_tmp_882["EXPR"]
    set $P5086, $P5084
    goto if3726_end7610
  if3726_else7609:
    null $P5085
    set $P5086, $P5085
  if3726_end7610:
    unless_null $P5086, vivi_37317618
    nqp_get_sc_object $P5087, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5086, $P5087
  vivi_37317618:
    $P5088 = $P5086."ast"()
    $P5089 = $P102."default"($P5088)
  if3721_end7600:
.annotate 'line', 2698
    $P5090 = $P102."default"()
    if $P5090 goto unless3732_end7620 
    find_dynamic_lex $P5091, "$*W"
    unless_null $P5091, fallback7621
    nqp_get_sc_object $P5093, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5092, $P5093
    set fb_tmp_885, $P5092
    repr_defined $I5022, fb_tmp_885
    unless $I5022 goto if3733_else7622 
    set $P5094, fb_tmp_885["$W"]
    set $P5096, $P5094
    goto if3733_end7623
  if3733_else7622:
    null $P5095
    set $P5096, $P5095
  if3733_end7623:
    unless_null $P5096, vivi_37347624
    nqp_get_sc_object $P5097, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5096, $P5097
  vivi_37347624:
    unless_null $P5096, vivi_37357625
    die "Contextual $*W not found"
    box $P5098, "Contextual $*W not found"
    set $P5096, $P5098
  vivi_37357625:
    set $P5091, $P5096
  fallback7621:
    $P5099 = $P5091."cur_lexpad"()
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback7626
    nqp_get_sc_object $P5102, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5101, $P5102
    set fb_tmp_886, $P5101
    repr_defined $I5023, fb_tmp_886
    unless $I5023 goto if3736_else7627 
    set $P5103, fb_tmp_886["$W"]
    set $P5105, $P5103
    goto if3736_end7628
  if3736_else7627:
    null $P5104
    set $P5105, $P5104
  if3736_end7628:
    unless_null $P5105, vivi_37377629
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5105, $P5106
  vivi_37377629:
    unless_null $P5105, vivi_37387630
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_37387630:
    set $P5100, $P5105
  fallback7626:
    $P5108 = $P5100."cur_lexpad"()
    $P5109 = $P5108."arity"()
    set $N5002, $P5109
    set $N5003, 1
    add $N5001, $N5002, $N5003
    $P5110 = $P5099."arity"($N5001)
  unless3732_end7620:
    unless_null _lex_param_1, fallback7635
    nqp_get_sc_object $P5111, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5111
  fallback7635:
    set fb_tmp_887, _lex_param_1
    repr_defined $I5024, fb_tmp_887
    unless $I5024 goto if3740_else7633 
    set $P5112, fb_tmp_887["typename"]
    set $P5114, $P5112
    goto if3740_end7634
  if3740_else7633:
    null $P5113
    set $P5114, $P5113
  if3740_end7634:
    unless_null $P5114, vivi_37417636
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5115
  vivi_37417636:
    unless $P5114 goto if3739_end7632 
    .const 'Sub' $P5116 = 'cuid_488_1361537952.49511' 
    capture_lex $P5116
    $P5117 = $P5116()
  if3739_end7632:
    unless_null _lex_param_1, fallback7663
    nqp_get_sc_object $P5118, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5118
  fallback7663:
    set fb_tmp_892, _lex_param_1
    repr_defined $I5025, fb_tmp_892
    unless $I5025 goto if3755_else7661 
    set $P5119, fb_tmp_892["definedness"]
    set $P5121, $P5119
    goto if3755_end7662
  if3755_else7661:
    null $P5120
    set $P5121, $P5120
  if3755_end7662:
    unless_null $P5121, vivi_37567664
    nqp_get_sc_object $P5122, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5121, $P5122
  vivi_37567664:
    unless $P5121 goto if3754_end7660 
.annotate 'line', 2713
    unless_null _lex_param_1, fallback7669
    nqp_get_sc_object $P5123, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5123
  fallback7669:
    set fb_tmp_894, _lex_param_1
    repr_defined $I5027, fb_tmp_894
    unless $I5027 goto if3758_else7667 
    set $P5124, fb_tmp_894["definedness"]
    set $P5126, $P5124
    goto if3758_end7668
  if3758_else7667:
    null $P5125
    set $P5126, $P5125
  if3758_end7668:
    unless_null $P5126, vivi_37597670
    nqp_get_sc_object $P5127, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5127
  vivi_37597670:
    set fb_tmp_893, $P5126
    repr_defined $I5026, fb_tmp_893
    unless $I5026 goto if3757_else7665 
    set $P5128, fb_tmp_893[0]
    set $P5130, $P5128
    goto if3757_end7666
  if3757_else7665:
    null $P5129
    set $P5130, $P5129
  if3757_end7666:
    unless_null $P5130, vivi_37607671
    nqp_get_sc_object $P5131, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5130, $P5131
  vivi_37607671:
    set $S5007, $P5130
    box $P5132, $S5007
    set $P102["definedness"], $P5132
  if3754_end7660:
.annotate 'line', 2717
    $P5133 = _lex_param_1."!make"($P102)
    .return ($P5133) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_488_1361537952.49511") :anon :lex :outer("cuid_311_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2701
    .const 'Sub' $P5019 = 'cuid_487_1361537952.49511' 
    capture_lex $P5019 
    .lex "$type", $P101 
    .local pmc fb_tmp_888 
    .local pmc fb_tmp_889 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2702
    find_lex $P5002, "$/"
    unless_null $P5002, fallback7641
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback7641:
    set fb_tmp_889, $P5002
    repr_defined $I5002, fb_tmp_889
    unless $I5002 goto if3743_else7639 
    set $P5004, fb_tmp_889["typename"]
    set $P5006, $P5004
    goto if3743_end7640
  if3743_else7639:
    null $P5005
    set $P5006, $P5005
  if3743_end7640:
    unless_null $P5006, vivi_37447642
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_37447642:
    set fb_tmp_888, $P5006
    repr_defined $I5001, fb_tmp_888
    unless $I5001 goto if3742_else7637 
    set $P5008, fb_tmp_888[0]
    set $P5010, $P5008
    goto if3742_end7638
  if3742_else7637:
    null $P5009
    set $P5010, $P5009
  if3742_end7638:
    unless_null $P5010, vivi_37457643
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_37457643:
    $P5012 = $P5010."ast"()
    $P5013 = $P5012."value"()
    set $P101, $P5013
.annotate 'line', 2703
    find_lex $P5014, "$past"
    $P5014."returns"($P101)
    repr_get_primitive_type_spec $I5003, $P101
    box $P5018, $I5003
    set $P5017, $P5018
    unless $I5003 goto if3746_end7645 
    .const 'Sub' $P5015 = 'cuid_487_1361537952.49511' 
    capture_lex $P5015
    $P5016 = $P5015($P5018)
    set $P5017, $P5016
  if3746_end7645:
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_487_1361537952.49511") :anon :lex :outer("cuid_488_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2704
    .param pmc _lex_param_0 
    .lex "$prim", _lex_param_0 
    .local pmc fb_tmp_890 
    .local pmc fb_tmp_891 
.annotate 'line', 2705
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7646
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_890, $P5002
    repr_defined $I5001, fb_tmp_890
    unless $I5001 goto if3747_else7647 
    set $P5004, fb_tmp_890["$W"]
    set $P5006, $P5004
    goto if3747_end7648
  if3747_else7647:
    null $P5005
    set $P5006, $P5005
  if3747_end7648:
    unless_null $P5006, vivi_37487649
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_37487649:
    unless_null $P5006, vivi_37497650
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_37497650:
    set $P5001, $P5006
  fallback7646:
    $P5009 = $P5001."cur_lexpad"()
    find_lex $P5010, "$past"
    $P5011 = $P5010."name"()
    find_lex $P5012, "$type"
    $P5009."symbol"($P5011, $P5012 :named("type"))
.annotate 'line', 2706
    find_lex $P5013, "$past"
    $P5014 = $P5013."default"()
    set $P5021, $P5014
    unless $P5014 goto if3751_end7654 
    find_lex $P5015, "$/"
    unless_null $P5015, fallback7657
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  fallback7657:
    set fb_tmp_891, $P5015
    repr_defined $I5003, fb_tmp_891
    unless $I5003 goto if3752_else7655 
    set $P5017, fb_tmp_891["default_value"]
    set $P5019, $P5017
    goto if3752_end7656
  if3752_else7655:
    null $P5018
    set $P5019, $P5018
  if3752_end7656:
    unless_null $P5019, vivi_37537658
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_37537658:
    isfalse $I5002, $P5019
    box $P5022, $I5002
    set $P5021, $P5022
  if3751_end7654:
    set $P5026, $P5021
    unless $P5021 goto if3750_end7652 
.annotate 'line', 2707
    find_lex $P5023, "$past"
    $P5024 = "&default_value_for_prim"(_lex_param_0)
    $P5025 = $P5023."default"($P5024)
    set $P5026, $P5025
  if3750_end7652:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "param_var" :subid("cuid_312_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2720
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_895 
    .local pmc pkg_lookup_tmp_256 
    .local pmc fb_tmp_896 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    set $S5001, _lex_param_1
    box $P5003, $S5001
    set $P101, $P5003
.annotate 'line', 2722
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_256, $P5005
    get_who $P5006, pkg_lookup_tmp_256
    exists $I5002, $P5006["QAST"]
    unless $I5002 goto if3762_else7674 
    get_who $P5008, pkg_lookup_tmp_256
    set $P5007, $P5008["QAST"]
    set $P5010, $P5007
    goto if3762_end7675
  if3762_else7674:
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5009
  if3762_end7675:
    get_who $P5004, $P5010
    set fb_tmp_895, $P5004
    repr_defined $I5001, fb_tmp_895
    unless $I5001 goto if3761_else7672 
    set $P5011, fb_tmp_895["Var"]
    set $P5013, $P5011
    goto if3761_end7673
  if3761_else7672:
    null $P5012
    set $P5013, $P5012
  if3761_end7673:
    unless_null $P5013, vivi_37637676
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_37637676:
    $P5015 = $P5013."new"($P101 :named("name"), "lexical" :named("scope"), "param" :named("decl"), _lex_param_1 :named("node"))
    set $P102, $P5015
.annotate 'line', 2724
    find_dynamic_lex $P5016, "$*W"
    unless_null $P5016, fallback7677
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5017, $P5018
    set fb_tmp_896, $P5017
    repr_defined $I5003, fb_tmp_896
    unless $I5003 goto if3764_else7678 
    set $P5019, fb_tmp_896["$W"]
    set $P5021, $P5019
    goto if3764_end7679
  if3764_else7678:
    null $P5020
    set $P5021, $P5020
  if3764_end7679:
    unless_null $P5021, vivi_37657680
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_37657680:
    unless_null $P5021, vivi_37667681
    die "Contextual $*W not found"
    box $P5023, "Contextual $*W not found"
    set $P5021, $P5023
  vivi_37667681:
    set $P5016, $P5021
  fallback7677:
    $P5024 = $P5016."cur_lexpad"()
    $P5024."symbol"($P101, "lexical" :named("scope"))
.annotate 'line', 2725
    $P5025 = _lex_param_1."!make"($P102)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "named_param" :subid("cuid_313_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2728
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_897 
    .local pmc fb_tmp_898 
    .local pmc fb_tmp_899 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2729
    unless_null _lex_param_1, fallback7684
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback7684:
    set fb_tmp_897, _lex_param_1
    repr_defined $I5001, fb_tmp_897
    unless $I5001 goto if3767_else7682 
    set $P5003, fb_tmp_897["param_var"]
    set $P5005, $P5003
    goto if3767_end7683
  if3767_else7682:
    null $P5004
    set $P5005, $P5004
  if3767_end7683:
    unless_null $P5005, vivi_37687685
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_37687685:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2730
    unless_null _lex_param_1, fallback7690
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback7690:
    set fb_tmp_899, _lex_param_1
    repr_defined $I5003, fb_tmp_899
    unless $I5003 goto if3770_else7688 
    set $P5009, fb_tmp_899["param_var"]
    set $P5011, $P5009
    goto if3770_end7689
  if3770_else7688:
    null $P5010
    set $P5011, $P5010
  if3770_end7689:
    unless_null $P5011, vivi_37717691
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_37717691:
    set fb_tmp_898, $P5011
    repr_defined $I5002, fb_tmp_898
    unless $I5002 goto if3769_else7686 
    set $P5013, fb_tmp_898["name"]
    set $P5015, $P5013
    goto if3769_end7687
  if3769_else7686:
    null $P5014
    set $P5015, $P5014
  if3769_end7687:
    unless_null $P5015, vivi_37727692
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_37727692:
    set $S5001, $P5015
    $P101."named"($S5001)
.annotate 'line', 2731
    $P5017 = _lex_param_1."!make"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "typename" :subid("cuid_314_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2734
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5023 = 'cuid_489_1361537952.49511' 
    capture_lex $P5023 
    .lex "@name", $P101 
    .lex "$found", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_900 
    .local pmc pkg_lookup_tmp_257 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2738
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_257, $P5004
    get_who $P5005, pkg_lookup_tmp_257
    exists $I5002, $P5005["HLL"]
    unless $I5002 goto if3774_else7695 
    get_who $P5007, pkg_lookup_tmp_257
    set $P5006, $P5007["HLL"]
    set $P5009, $P5006
    goto if3774_end7696
  if3774_else7695:
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5008
  if3774_end7696:
    get_who $P5003, $P5009
    set fb_tmp_900, $P5003
    repr_defined $I5001, fb_tmp_900
    unless $I5001 goto if3773_else7693 
    set $P5010, fb_tmp_900["Compiler"]
    set $P5012, $P5010
    goto if3773_end7694
  if3773_else7693:
    null $P5011
    set $P5012, $P5011
  if3773_end7694:
    unless_null $P5012, vivi_37757697
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_37757697:
    set $S5001, _lex_param_1
    $P5014 = $P5012."parse_name"($S5001)
    set $P101, $P5014
    box $P5015, 0
    set $P102, $P5015
    new $P5018, 'ExceptionHandler'
    set_label $P5018, catch_handler_37837709
    $P5018.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5018
    .const 'Sub' $P5016 = 'cuid_489_1361537952.49511' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5019, $P5017
    pop_eh 
    goto skip_handler_37827708
  catch_handler_37837709:
    .get_results ($P5018) 
    set $I10001, 1
    set $P5018["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5018
    pop_upto_eh $P5018
    pop_eh 
    set $P5019, $P10001
    goto skip_handler_37827708
  skip_handler_37827708:
    set $P5022, $P102
    if $P102 goto unless3784_end7711 
.annotate 'line', 2745
.annotate 'line', 2746
    $P5020 = _lex_param_1."CURSOR"()
    set $S5004, _lex_param_1
    concat $S5003, "Use of undeclared type '", $S5004
    concat $S5002, $S5003, "'"
    $P5021 = $P5020."panic"($S5002)
    set $P5022, $P5021
  unless3784_end7711:
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_489_1361537952.49511") :anon :lex :outer("cuid_314_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2740
    .lex "$sym", $P101 
    .local pmc fb_tmp_901 
    .local pmc fb_tmp_902 
    .local pmc pkg_lookup_tmp_258 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2741
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback7698
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_901, $P5003
    repr_defined $I5001, fb_tmp_901
    unless $I5001 goto if3776_else7699 
    set $P5005, fb_tmp_901["$W"]
    set $P5007, $P5005
    goto if3776_end7700
  if3776_else7699:
    null $P5006
    set $P5007, $P5006
  if3776_end7700:
    unless_null $P5007, vivi_37777701
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_37777701:
    unless_null $P5007, vivi_37787702
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_37787702:
    set $P5002, $P5007
  fallback7698:
    find_lex $P5010, "@name"
    $P5011 = $P5002."find_sym"($P5010)
    set $P101, $P5011
.annotate 'line', 2742
    find_dynamic_lex $P5012, "$/"
    nqp_get_sc_object $P5014, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_258, $P5014
    get_who $P5015, pkg_lookup_tmp_258
    exists $I5003, $P5015["QAST"]
    unless $I5003 goto if3780_else7705 
    get_who $P5017, pkg_lookup_tmp_258
    set $P5016, $P5017["QAST"]
    set $P5019, $P5016
    goto if3780_end7706
  if3780_else7705:
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5018
  if3780_end7706:
    get_who $P5013, $P5019
    set fb_tmp_902, $P5013
    repr_defined $I5002, fb_tmp_902
    unless $I5002 goto if3779_else7703 
    set $P5020, fb_tmp_902["WVal"]
    set $P5022, $P5020
    goto if3779_end7704
  if3779_else7703:
    null $P5021
    set $P5022, $P5021
  if3779_end7704:
    unless_null $P5022, vivi_37817707
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_37817707:
    $P5024 = $P5022."new"($P101 :named("value"))
    $P5012."!make"($P5024)
    box $P5025, 1
    store_lex "$found", $P5025
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "trait" :subid("cuid_315_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2750
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_903 
.annotate 'line', 2751
    unless_null _lex_param_1, fallback7714
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback7714:
    set fb_tmp_903, _lex_param_1
    repr_defined $I5001, fb_tmp_903
    unless $I5001 goto if3785_else7712 
    set $P5002, fb_tmp_903["trait_mod"]
    set $P5004, $P5002
    goto if3785_end7713
  if3785_else7712:
    null $P5003
    set $P5004, $P5003
  if3785_end7713:
    unless_null $P5004, vivi_37867715
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_37867715:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "trait_mod:sym<is>" :subid("cuid_316_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2754
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5051 = 'cuid_491_1361537952.49511' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_493_1361537952.49511' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_494_1361537952.49511' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_495_1361537952.49511' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_496_1361537952.49511' 
    capture_lex $P5051 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_904 
    .local pmc fb_tmp_914 
    .local pmc fb_tmp_921 
    .local pmc fb_tmp_923 
    .local pmc fb_tmp_925 
    .local pmc fb_tmp_932 
    unless_null _lex_param_1, fallback7720
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback7720:
    set fb_tmp_904, _lex_param_1
    repr_defined $I5002, fb_tmp_904
    unless $I5002 goto if3788_else7718 
    set $P5002, fb_tmp_904["longname"]
    set $P5004, $P5002
    goto if3788_end7719
  if3788_else7718:
    null $P5003
    set $P5004, $P5003
  if3788_end7719:
    unless_null $P5004, vivi_37897721
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_37897721:
    set $S5001, $P5004
    iseq $I5001, $S5001, "parrot_vtable"
    unless $I5001 goto if3787_else7716 
    .const 'Sub' $P5006 = 'cuid_491_1361537952.49511' 
    capture_lex $P5006
    $P5007 = $P5006()
    set $P5050, $P5007
    goto if3787_end7717
  if3787_else7716:
    unless_null _lex_param_1, fallback7767
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback7767:
    set fb_tmp_914, _lex_param_1
    repr_defined $I5004, fb_tmp_914
    unless $I5004 goto if3815_else7765 
    set $P5009, fb_tmp_914["longname"]
    set $P5011, $P5009
    goto if3815_end7766
  if3815_else7765:
    null $P5010
    set $P5011, $P5010
  if3815_end7766:
    unless_null $P5011, vivi_38167768
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_38167768:
    set $S5002, $P5011
    iseq $I5003, $S5002, "parrot_vtable_handler"
    unless $I5003 goto if3814_else7763 
    .const 'Sub' $P5013 = 'cuid_493_1361537952.49511' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5049, $P5014
    goto if3814_end7764
  if3814_else7763:
    unless_null _lex_param_1, fallback7800
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5015
  fallback7800:
    set fb_tmp_921, _lex_param_1
    repr_defined $I5006, fb_tmp_921
    unless $I5006 goto if3834_else7798 
    set $P5016, fb_tmp_921["longname"]
    set $P5018, $P5016
    goto if3834_end7799
  if3834_else7798:
    null $P5017
    set $P5018, $P5017
  if3834_end7799:
    unless_null $P5018, vivi_38357801
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_38357801:
    set $S5003, $P5018
    iseq $I5005, $S5003, "positional_delegate"
    unless $I5005 goto if3833_else7796 
.annotate 'line', 2780
.annotate 'line', 2781
    .const 'Sub' $P5021 = 'cuid_494_1361537952.49511' 
    capture_lex $P5021
    newclosure $P5020, $P5021
    $P5022 = _lex_param_1."!make"($P5020)
    set $P5048, $P5022
    goto if3833_end7797
  if3833_else7796:
    unless_null _lex_param_1, fallback7811
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5023
  fallback7811:
    set fb_tmp_923, _lex_param_1
    repr_defined $I5008, fb_tmp_923
    unless $I5008 goto if3840_else7809 
    set $P5024, fb_tmp_923["longname"]
    set $P5026, $P5024
    goto if3840_end7810
  if3840_else7809:
    null $P5025
    set $P5026, $P5025
  if3840_end7810:
    unless_null $P5026, vivi_38417812
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_38417812:
    set $S5004, $P5026
    iseq $I5007, $S5004, "associative_delegate"
    unless $I5007 goto if3839_else7807 
.annotate 'line', 2783
.annotate 'line', 2784
    .const 'Sub' $P5029 = 'cuid_495_1361537952.49511' 
    capture_lex $P5029
    newclosure $P5028, $P5029
    $P5030 = _lex_param_1."!make"($P5028)
    set $P5047, $P5030
    goto if3839_end7808
  if3839_else7807:
    unless_null _lex_param_1, fallback7822
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5031
  fallback7822:
    set fb_tmp_925, _lex_param_1
    repr_defined $I5010, fb_tmp_925
    unless $I5010 goto if3846_else7820 
    set $P5032, fb_tmp_925["longname"]
    set $P5034, $P5032
    goto if3846_end7821
  if3846_else7820:
    null $P5033
    set $P5034, $P5033
  if3846_end7821:
    unless_null $P5034, vivi_38477823
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_38477823:
    set $S5005, $P5034
    iseq $I5009, $S5005, "export"
    unless $I5009 goto if3845_else7818 
.annotate 'line', 2786
.annotate 'line', 2787
    .const 'Sub' $P5037 = 'cuid_496_1361537952.49511' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5038 = _lex_param_1."!make"($P5036)
    set $P5046, $P5038
    goto if3845_end7819
  if3845_else7818:
.annotate 'line', 2794
.annotate 'line', 2795
    $P5039 = _lex_param_1."CURSOR"()
    unless_null _lex_param_1, fallback7849
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5040
  fallback7849:
    set fb_tmp_932, _lex_param_1
    repr_defined $I5011, fb_tmp_932
    unless $I5011 goto if3862_else7847 
    set $P5041, fb_tmp_932["longname"]
    set $P5043, $P5041
    goto if3862_end7848
  if3862_else7847:
    null $P5042
    set $P5043, $P5042
  if3862_end7848:
    unless_null $P5043, vivi_38637850
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_38637850:
    set $S5008, $P5043
    concat $S5007, "Trait '", $S5008
    concat $S5006, $S5007, "' not implemented"
    $P5045 = $P5039."panic"($S5006)
    set $P5046, $P5045
  if3845_end7819:
    set $P5047, $P5046
  if3839_end7808:
    set $P5048, $P5047
  if3833_end7797:
    set $P5049, $P5048
  if3814_end7764:
    set $P5050, $P5049
  if3787_end7717:
    .return ($P5050) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_491_1361537952.49511") :anon :lex :outer("cuid_316_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2755
    .const 'Sub' $P5053 = 'cuid_490_1361537952.49511' 
    capture_lex $P5053 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .lex "$is_dispatcher", $P104 
    .local pmc fb_tmp_905 
    .local pmc fb_tmp_906 
    .local pmc fb_tmp_907 
    .local pmc pkg_lookup_tmp_259 
    .local pmc fb_tmp_908 
    .local pmc fb_tmp_909 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P104, $P5004
.annotate 'line', 2757
    find_lex $P5005, "$/"
    unless_null $P5005, fallback7726
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  fallback7726:
    set fb_tmp_906, $P5005
    repr_defined $I5002, fb_tmp_906
    unless $I5002 goto if3791_else7724 
    set $P5007, fb_tmp_906["circumfix"]
    set $P5009, $P5007
    goto if3791_end7725
  if3791_else7724:
    null $P5008
    set $P5009, $P5008
  if3791_end7725:
    unless_null $P5009, vivi_37927727
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_37927727:
    set fb_tmp_905, $P5009
    repr_defined $I5001, fb_tmp_905
    unless $I5001 goto if3790_else7722 
    set $P5011, fb_tmp_905[0]
    set $P5013, $P5011
    goto if3790_end7723
  if3790_else7722:
    null $P5012
    set $P5013, $P5012
  if3790_end7723:
    unless_null $P5013, vivi_37937728
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_37937728:
    $P5015 = $P5013."ast"()
    set $P101, $P5015
.annotate 'line', 2759
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_259, $P5017
    get_who $P5018, pkg_lookup_tmp_259
    exists $I5004, $P5018["QAST"]
    unless $I5004 goto if3796_else7733 
    get_who $P5020, pkg_lookup_tmp_259
    set $P5019, $P5020["QAST"]
    set $P5022, $P5019
    goto if3796_end7734
  if3796_else7733:
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5021
  if3796_end7734:
    get_who $P5016, $P5022
    set fb_tmp_907, $P5016
    repr_defined $I5003, fb_tmp_907
    unless $I5003 goto if3795_else7731 
    set $P5023, fb_tmp_907["SVal"]
    set $P5025, $P5023
    goto if3795_end7732
  if3795_else7731:
    null $P5024
    set $P5025, $P5024
  if3795_end7732:
    unless_null $P5025, vivi_37977735
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_37977735:
    $P5027 = $P5025."ACCEPTS"($P101)
    if $P5027 goto unless3794_end7730 
.annotate 'line', 2758
    find_lex $P5028, "$/"
    $P5029 = $P5028."CURSOR"()
    $P5030 = $P5029."panic"("Trait 'parrot_vtable' requires constant scalar argument")
  unless3794_end7730:
.annotate 'line', 2760
    $P5031 = $P101."value"()
    set $P102, $P5031
    find_dynamic_lex $P5032, "$*PACKAGE"
    unless_null $P5032, fallback7736
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5033, $P5034
    set fb_tmp_908, $P5033
    repr_defined $I5005, fb_tmp_908
    unless $I5005 goto if3798_else7737 
    set $P5035, fb_tmp_908["$PACKAGE"]
    set $P5037, $P5035
    goto if3798_end7738
  if3798_else7737:
    null $P5036
    set $P5037, $P5036
  if3798_end7738:
    unless_null $P5037, vivi_37997739
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_37997739:
    unless_null $P5037, vivi_38007740
    die "Contextual $*PACKAGE not found"
    box $P5039, "Contextual $*PACKAGE not found"
    set $P5037, $P5039
  vivi_38007740:
    set $P5032, $P5037
  fallback7736:
    set $P103, $P5032
    find_dynamic_lex $P5040, "$*SCOPE"
    unless_null $P5040, fallback7741
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5041, $P5042
    set fb_tmp_909, $P5041
    repr_defined $I5007, fb_tmp_909
    unless $I5007 goto if3801_else7742 
    set $P5043, fb_tmp_909["$SCOPE"]
    set $P5045, $P5043
    goto if3801_end7743
  if3801_else7742:
    null $P5044
    set $P5045, $P5044
  if3801_end7743:
    unless_null $P5045, vivi_38027744
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_38027744:
    unless_null $P5045, vivi_38037745
    die "Contextual $*SCOPE not found"
    box $P5047, "Contextual $*SCOPE not found"
    set $P5045, $P5047
  vivi_38037745:
    set $P5040, $P5045
  fallback7741:
    set $S5001, $P5040
    iseq $I5006, $S5001, "proto"
    box $P5048, $I5006
    set $P104, $P5048
.annotate 'line', 2763
    find_dynamic_lex $P5049, "$/"
    .const 'Sub' $P5051 = 'cuid_490_1361537952.49511' 
    capture_lex $P5051
    newclosure $P5050, $P5051
    $P5052 = $P5049."!make"($P5050)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_490_1361537952.49511") :anon :lex :outer("cuid_491_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2763
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_910 
    .local pmc fb_tmp_911 
    .local pmc fb_tmp_912 
    .local pmc fb_tmp_913 
.annotate 'line', 2764
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7746
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_910, $P5002
    repr_defined $I5001, fb_tmp_910
    unless $I5001 goto if3804_else7747 
    set $P5004, fb_tmp_910["$W"]
    set $P5006, $P5004
    goto if3804_end7748
  if3804_else7747:
    null $P5005
    set $P5006, $P5005
  if3804_end7748:
    unless_null $P5006, vivi_38057749
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38057749:
    unless_null $P5006, vivi_38067750
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_38067750:
    set $P5001, $P5006
  fallback7746:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
.annotate 'line', 2765
    $P5012 = _lex_param_0."ast"()
    set fb_tmp_911, $P5012
    repr_defined $I5003, fb_tmp_911
    unless $I5003 goto if3807_else7752 
    set $P5013, fb_tmp_911["code_obj"]
    set $P5015, $P5013
    goto if3807_end7753
  if3807_else7752:
    null $P5014
    set $P5015, $P5014
  if3807_end7753:
    unless_null $P5015, vivi_38087754
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_38087754:
    set $P5011, $P5015
    defined $I5002, $P5011
    if $I5002, defor7751
.annotate 'line', 2766
    find_dynamic_lex $P5017, "$*W"
    unless_null $P5017, fallback7755
    nqp_get_sc_object $P5019, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5018, $P5019
    set fb_tmp_912, $P5018
    repr_defined $I5004, fb_tmp_912
    unless $I5004 goto if3809_else7756 
    set $P5020, fb_tmp_912["$W"]
    set $P5022, $P5020
    goto if3809_end7757
  if3809_else7756:
    null $P5021
    set $P5022, $P5021
  if3809_end7757:
    unless_null $P5022, vivi_38107758
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_38107758:
    unless_null $P5022, vivi_38117759
    die "Contextual $*W not found"
    box $P5024, "Contextual $*W not found"
    set $P5022, $P5024
  vivi_38117759:
    set $P5017, $P5022
  fallback7755:
    $P5025 = _lex_param_0."ast"()
    set fb_tmp_913, $P5025
    repr_defined $I5005, fb_tmp_913
    unless $I5005 goto if3812_else7760 
    set $P5026, fb_tmp_913["block_past"]
    set $P5028, $P5026
    goto if3812_end7761
  if3812_else7760:
    null $P5027
    set $P5028, $P5027
  if3812_end7761:
    unless_null $P5028, vivi_38137762
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_38137762:
    find_lex $P5030, "$name"
    find_lex $P5031, "$is_dispatcher"
    $P5032 = $P5017."create_code"($P5028, $P5030, $P5031)
    set $P5011, $P5032
  defor7751:
    $P5033 = $P5001."pkg_add_method"($P5009, "add_parrot_vtable_mapping", $P5010, $P5011)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_493_1361537952.49511") :anon :lex :outer("cuid_316_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2769
    .const 'Sub' $P5043 = 'cuid_492_1361537952.49511' 
    capture_lex $P5043 
    .lex "$cpast", $P101 
    .lex "$name", $P102 
    .lex "$package", $P103 
    .local pmc fb_tmp_915 
    .local pmc fb_tmp_916 
    .local pmc fb_tmp_917 
    .local pmc pkg_lookup_tmp_260 
    .local pmc fb_tmp_918 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 2771
    find_lex $P5004, "$/"
    unless_null $P5004, fallback7773
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  fallback7773:
    set fb_tmp_916, $P5004
    repr_defined $I5002, fb_tmp_916
    unless $I5002 goto if3818_else7771 
    set $P5006, fb_tmp_916["circumfix"]
    set $P5008, $P5006
    goto if3818_end7772
  if3818_else7771:
    null $P5007
    set $P5008, $P5007
  if3818_end7772:
    unless_null $P5008, vivi_38197774
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_38197774:
    set fb_tmp_915, $P5008
    repr_defined $I5001, fb_tmp_915
    unless $I5001 goto if3817_else7769 
    set $P5010, fb_tmp_915[0]
    set $P5012, $P5010
    goto if3817_end7770
  if3817_else7769:
    null $P5011
    set $P5012, $P5011
  if3817_end7770:
    unless_null $P5012, vivi_38207775
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_38207775:
    $P5014 = $P5012."ast"()
    set $P101, $P5014
.annotate 'line', 2773
    nqp_get_sc_object $P5016, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_260, $P5016
    get_who $P5017, pkg_lookup_tmp_260
    exists $I5004, $P5017["QAST"]
    unless $I5004 goto if3823_else7780 
    get_who $P5019, pkg_lookup_tmp_260
    set $P5018, $P5019["QAST"]
    set $P5021, $P5018
    goto if3823_end7781
  if3823_else7780:
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5020
  if3823_end7781:
    get_who $P5015, $P5021
    set fb_tmp_917, $P5015
    repr_defined $I5003, fb_tmp_917
    unless $I5003 goto if3822_else7778 
    set $P5022, fb_tmp_917["SVal"]
    set $P5024, $P5022
    goto if3822_end7779
  if3822_else7778:
    null $P5023
    set $P5024, $P5023
  if3822_end7779:
    unless_null $P5024, vivi_38247782
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_38247782:
    $P5026 = $P5024."ACCEPTS"($P101)
    if $P5026 goto unless3821_end7777 
.annotate 'line', 2772
    find_lex $P5027, "$/"
    $P5028 = $P5027."CURSOR"()
    $P5029 = $P5028."panic"("Trait 'parrot_vtable_handler' requires constant scalar argument")
  unless3821_end7777:
.annotate 'line', 2774
    $P5030 = $P101."value"()
    set $P102, $P5030
    find_dynamic_lex $P5031, "$*PACKAGE"
    unless_null $P5031, fallback7783
    nqp_get_sc_object $P5033, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5032, $P5033
    set fb_tmp_918, $P5032
    repr_defined $I5005, fb_tmp_918
    unless $I5005 goto if3825_else7784 
    set $P5034, fb_tmp_918["$PACKAGE"]
    set $P5036, $P5034
    goto if3825_end7785
  if3825_else7784:
    null $P5035
    set $P5036, $P5035
  if3825_end7785:
    unless_null $P5036, vivi_38267786
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_38267786:
    unless_null $P5036, vivi_38277787
    die "Contextual $*PACKAGE not found"
    box $P5038, "Contextual $*PACKAGE not found"
    set $P5036, $P5038
  vivi_38277787:
    set $P5031, $P5036
  fallback7783:
    set $P103, $P5031
.annotate 'line', 2776
    find_dynamic_lex $P5039, "$/"
    .const 'Sub' $P5041 = 'cuid_492_1361537952.49511' 
    capture_lex $P5041
    newclosure $P5040, $P5041
    $P5042 = $P5039."!make"($P5040)
    .return ($P5042) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_492_1361537952.49511") :anon :lex :outer("cuid_493_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2776
    .param pmc _lex_param_0 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_919 
    .local pmc fb_tmp_920 
.annotate 'line', 2777
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback7788
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_919, $P5002
    repr_defined $I5001, fb_tmp_919
    unless $I5001 goto if3828_else7789 
    set $P5004, fb_tmp_919["$W"]
    set $P5006, $P5004
    goto if3828_end7790
  if3828_else7789:
    null $P5005
    set $P5006, $P5005
  if3828_end7790:
    unless_null $P5006, vivi_38297791
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38297791:
    unless_null $P5006, vivi_38307792
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_38307792:
    set $P5001, $P5006
  fallback7788:
    find_lex $P5009, "$package"
    find_lex $P5010, "$name"
    set fb_tmp_920, _lex_param_0
    repr_defined $I5002, fb_tmp_920
    unless $I5002 goto if3831_else7793 
    set $P5011, fb_tmp_920["variable"]
    set $P5013, $P5011
    goto if3831_end7794
  if3831_else7793:
    null $P5012
    set $P5013, $P5012
  if3831_end7794:
    unless_null $P5013, vivi_38327795
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_38327795:
    set $S5001, $P5013
    $P5015 = $P5001."pkg_add_parrot_vtable_handler_mapping"($P5009, $P5010, $S5001)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_494_1361537952.49511") :anon :lex :outer("cuid_316_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2781
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_922 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback7802
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_922, $P5002
    repr_defined $I5001, fb_tmp_922
    unless $I5001 goto if3836_else7803 
    set $P5004, fb_tmp_922["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if3836_end7804
  if3836_else7803:
    null $P5005
    set $P5006, $P5005
  if3836_end7804:
    unless_null $P5006, vivi_38377805
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38377805:
    unless_null $P5006, vivi_38387806
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_38387806:
    set $P5001, $P5006
  fallback7802:
    $P5009 = $P5001."set_positional_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_495_1361537952.49511") :anon :lex :outer("cuid_316_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2784
    .param pmc _lex_param_0 
    .lex "$m", _lex_param_0 
    .local pmc fb_tmp_924 
    find_dynamic_lex $P5001, "$*DECLARAND_ATTR"
    unless_null $P5001, fallback7813
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5002, $P5003
    set fb_tmp_924, $P5002
    repr_defined $I5001, fb_tmp_924
    unless $I5001 goto if3842_else7814 
    set $P5004, fb_tmp_924["$DECLARAND_ATTR"]
    set $P5006, $P5004
    goto if3842_end7815
  if3842_else7814:
    null $P5005
    set $P5006, $P5005
  if3842_end7815:
    unless_null $P5006, vivi_38437816
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38437816:
    unless_null $P5006, vivi_38447817
    die "Contextual $*DECLARAND_ATTR not found"
    box $P5008, "Contextual $*DECLARAND_ATTR not found"
    set $P5006, $P5008
  vivi_38447817:
    set $P5001, $P5006
  fallback7813:
    $P5009 = $P5001."set_associative_delegate"(1)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_496_1361537952.49511") :anon :lex :outer("cuid_316_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2787
    .param pmc _lex_param_0 
    .lex "$ast", $P101 
    .lex "$name", $P102 
    .lex "$match", _lex_param_0 
    .local pmc fb_tmp_926 
    .local pmc fb_tmp_927 
    .local pmc fb_tmp_928 
    .local pmc fb_tmp_929 
    .local pmc fb_tmp_930 
    .local pmc fb_tmp_931 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2788
    $P5003 = _lex_param_0."ast"()
    set $P101, $P5003
.annotate 'line', 2789
    set fb_tmp_926, $P101
    repr_defined $I5001, fb_tmp_926
    unless $I5001 goto if3848_else7824 
    set $P5004, fb_tmp_926["block_past"]
    set $P5006, $P5004
    goto if3848_end7825
  if3848_else7824:
    null $P5005
    set $P5006, $P5005
  if3848_end7825:
    unless_null $P5006, vivi_38497826
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38497826:
    $P5008 = $P5006."name"()
    set $P102, $P5008
    find_dynamic_lex $P5011, "$*EXPORT"
    unless_null $P5011, fallback7829
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5012, $P5013
    set fb_tmp_928, $P5012
    repr_defined $I5003, fb_tmp_928
    unless $I5003 goto if3851_else7830 
    set $P5014, fb_tmp_928["$EXPORT"]
    set $P5016, $P5014
    goto if3851_end7831
  if3851_else7830:
    null $P5015
    set $P5016, $P5015
  if3851_end7831:
    unless_null $P5016, vivi_38527832
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_38527832:
    unless_null $P5016, vivi_38537833
    die "Contextual $*EXPORT not found"
    box $P5018, "Contextual $*EXPORT not found"
    set $P5016, $P5018
  vivi_38537833:
    set $P5011, $P5016
  fallback7829:
    get_who $P5010, $P5011
    set fb_tmp_927, $P5010
    repr_defined $I5002, fb_tmp_927
    unless $I5002 goto if3850_else7827 
    set $P5019, fb_tmp_927["DEFAULT"]
    set $P5021, $P5019
    goto if3850_end7828
  if3850_else7827:
    null $P5020
    set $P5021, $P5020
  if3850_end7828:
    unless_null $P5021, vivi_38547834
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_38547834:
    get_who $P5009, $P5021
    set $S5002, $P102
    concat $S5001, "&", $S5002
    set fb_tmp_929, $P101
    repr_defined $I5005, fb_tmp_929
    unless $I5005 goto if3855_else7836 
    set $P5024, fb_tmp_929["code_obj"]
    set $P5026, $P5024
    goto if3855_end7837
  if3855_else7836:
    null $P5025
    set $P5026, $P5025
  if3855_end7837:
    unless_null $P5026, vivi_38567838
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_38567838:
    set $P5023, $P5026
    defined $I5004, $P5023
    if $I5004, defor7835
.annotate 'line', 2791
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback7839
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5029, $P5030
    set fb_tmp_930, $P5029
    repr_defined $I5006, fb_tmp_930
    unless $I5006 goto if3857_else7840 
    set $P5031, fb_tmp_930["$W"]
    set $P5033, $P5031
    goto if3857_end7841
  if3857_else7840:
    null $P5032
    set $P5033, $P5032
  if3857_end7841:
    unless_null $P5033, vivi_38587842
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_38587842:
    unless_null $P5033, vivi_38597843
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_38597843:
    set $P5028, $P5033
  fallback7839:
    set fb_tmp_931, $P101
    repr_defined $I5007, fb_tmp_931
    unless $I5007 goto if3860_else7844 
    set $P5036, fb_tmp_931["block_past"]
    set $P5038, $P5036
    goto if3860_end7845
  if3860_else7844:
    null $P5037
    set $P5038, $P5037
  if3860_end7845:
    unless_null $P5038, vivi_38617846
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_38617846:
    $P5040 = $P5028."create_code"($P5038, $P102, 0)
    set $P5023, $P5040
  defor7835:
    set $P5009[$S5001], $P5023
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "regex_declarator" :subid("cuid_317_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2799
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_5 :opt_flag 
    .const 'Sub' $P5114 = 'cuid_498_1361537952.49511' 
    capture_lex $P5114 
    .lex "$name", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .lex "$key", _lex_param_2 
    .local pmc fb_tmp_933 
    .local pmc fb_tmp_934 
    .local pmc fb_tmp_935 
    .local pmc fb_tmp_936 
    .local pmc fb_tmp_937 
    .local pmc fb_tmp_938 
    .local pmc pkg_lookup_tmp_261 
    .local pmc fb_tmp_939 
    .local pmc pkg_lookup_tmp_262 
    .local pmc fb_tmp_940 
    .local pmc pkg_lookup_tmp_263 
    .local pmc fb_tmp_941 
    .local pmc pkg_lookup_tmp_264 
    .local pmc fb_tmp_942 
    .local pmc fb_tmp_943 
    .local pmc fb_tmp_944 
    if haz_param_5, default8027
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_2, $P5113
  default8027:
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback7855
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback7855:
    set fb_tmp_933, _lex_param_1
    repr_defined $I5001, fb_tmp_933
    unless $I5001 goto if3865_else7853 
    set $P5004, fb_tmp_933["deflongname"]
    set $P5006, $P5004
    goto if3865_end7854
  if3865_else7853:
    null $P5005
    set $P5006, $P5005
  if3865_end7854:
    unless_null $P5006, vivi_38667856
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_38667856:
    unless $P5006 goto if3864_else7851 
.annotate 'line', 2801
.annotate 'line', 2802
    unless_null _lex_param_1, fallback7859
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback7859:
    set fb_tmp_934, _lex_param_1
    repr_defined $I5002, fb_tmp_934
    unless $I5002 goto if3867_else7857 
    set $P5009, fb_tmp_934["deflongname"]
    set $P5011, $P5009
    goto if3867_end7858
  if3867_else7857:
    null $P5010
    set $P5011, $P5010
  if3867_end7858:
    unless_null $P5011, vivi_38687860
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_38687860:
    $P5013 = $P5011."ast"()
    set $S5001, $P5013
    box $P5014, $S5001
    set $P101, $P5014
    goto if3864_end7852
  if3864_else7851:
.annotate 'line', 2804
    find_dynamic_lex $P5015, "$*PKGDECL"
    unless_null $P5015, fallback7863
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5016, $P5017
    set fb_tmp_935, $P5016
    repr_defined $I5004, fb_tmp_935
    unless $I5004 goto if3870_else7864 
    set $P5018, fb_tmp_935["$PKGDECL"]
    set $P5020, $P5018
    goto if3870_end7865
  if3870_else7864:
    null $P5019
    set $P5020, $P5019
  if3870_end7865:
    unless_null $P5020, vivi_38717866
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5021
  vivi_38717866:
    unless_null $P5020, vivi_38727867
    die "Contextual $*PKGDECL not found"
    box $P5022, "Contextual $*PKGDECL not found"
    set $P5020, $P5022
  vivi_38727867:
    set $P5015, $P5020
  fallback7863:
    set $S5002, $P5015
    isne $I5003, $S5002, "role"
    unless $I5003 goto if3869_end7862 
.annotate 'line', 2805
.annotate 'line', 2806
    $P5023 = _lex_param_1."CURSOR"()
    $P5024 = $P5023."panic"("Late-bound method name only valid in role")
  if3869_end7862:
    unless_null _lex_param_1, fallback7870
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5025
  fallback7870:
    set fb_tmp_936, _lex_param_1
    repr_defined $I5005, fb_tmp_936
    unless $I5005 goto if3873_else7868 
    set $P5026, fb_tmp_936["latename"]
    set $P5028, $P5026
    goto if3873_end7869
  if3873_else7868:
    null $P5027
    set $P5028, $P5027
  if3873_end7869:
    unless_null $P5028, vivi_38747871
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_38747871:
    set $S5004, $P5028
    concat $S5003, "!!LATENAME!!", $S5004
    box $P5030, $S5003
    set $P101, $P5030
  if3864_end7852:
    unless_null _lex_param_1, fallback7876
    nqp_get_sc_object $P5031, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5031
  fallback7876:
    set fb_tmp_937, _lex_param_1
    repr_defined $I5006, fb_tmp_937
    unless $I5006 goto if3876_else7874 
    set $P5032, fb_tmp_937["proto"]
    set $P5034, $P5032
    goto if3876_end7875
  if3876_else7874:
    null $P5033
    set $P5034, $P5033
  if3876_end7875:
    unless_null $P5034, vivi_38777877
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_38777877:
    unless $P5034 goto if3875_else7872 
.annotate 'line', 2811
.annotate 'line', 2812
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_261, $P5037
    get_who $P5038, pkg_lookup_tmp_261
    exists $I5008, $P5038["QAST"]
    unless $I5008 goto if3879_else7880 
    get_who $P5040, pkg_lookup_tmp_261
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if3879_end7881
  if3879_else7880:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if3879_end7881:
    get_who $P5036, $P5042
    set fb_tmp_938, $P5036
    repr_defined $I5007, fb_tmp_938
    unless $I5007 goto if3878_else7878 
    set $P5043, fb_tmp_938["Block"]
    set $P5045, $P5043
    goto if3878_end7879
  if3878_else7878:
    null $P5044
    set $P5045, $P5044
  if3878_end7879:
    unless_null $P5045, vivi_38807882
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_38807882:
.annotate 'line', 2814
    nqp_get_sc_object $P5048, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_262, $P5048
    get_who $P5049, pkg_lookup_tmp_262
    exists $I5010, $P5049["QAST"]
    unless $I5010 goto if3882_else7885 
    get_who $P5051, pkg_lookup_tmp_262
    set $P5050, $P5051["QAST"]
    set $P5053, $P5050
    goto if3882_end7886
  if3882_else7885:
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5052
  if3882_end7886:
    get_who $P5047, $P5053
    set fb_tmp_939, $P5047
    repr_defined $I5009, fb_tmp_939
    unless $I5009 goto if3881_else7883 
    set $P5054, fb_tmp_939["Op"]
    set $P5056, $P5054
    goto if3881_end7884
  if3881_else7883:
    null $P5055
    set $P5056, $P5055
  if3881_end7884:
    unless_null $P5056, vivi_38837887
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_38837887:
.annotate 'line', 2815
    nqp_get_sc_object $P5059, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_263, $P5059
    get_who $P5060, pkg_lookup_tmp_263
    exists $I5012, $P5060["QAST"]
    unless $I5012 goto if3885_else7890 
    get_who $P5062, pkg_lookup_tmp_263
    set $P5061, $P5062["QAST"]
    set $P5064, $P5061
    goto if3885_end7891
  if3885_else7890:
    nqp_get_sc_object $P5063, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5063
  if3885_end7891:
    get_who $P5058, $P5064
    set fb_tmp_940, $P5058
    repr_defined $I5011, fb_tmp_940
    unless $I5011 goto if3884_else7888 
    set $P5065, fb_tmp_940["Var"]
    set $P5067, $P5065
    goto if3884_end7889
  if3884_else7888:
    null $P5066
    set $P5067, $P5066
  if3884_end7889:
    unless_null $P5067, vivi_38867892
    nqp_get_sc_object $P5068, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5067, $P5068
  vivi_38867892:
    $P5069 = $P5067."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
.annotate 'line', 2816
    nqp_get_sc_object $P5071, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_264, $P5071
    get_who $P5072, pkg_lookup_tmp_264
    exists $I5014, $P5072["QAST"]
    unless $I5014 goto if3888_else7895 
    get_who $P5074, pkg_lookup_tmp_264
    set $P5073, $P5074["QAST"]
    set $P5076, $P5073
    goto if3888_end7896
  if3888_else7895:
    nqp_get_sc_object $P5075, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5076, $P5075
  if3888_end7896:
    get_who $P5070, $P5076
    set fb_tmp_941, $P5070
    repr_defined $I5013, fb_tmp_941
    unless $I5013 goto if3887_else7893 
    set $P5077, fb_tmp_941["SVal"]
    set $P5079, $P5077
    goto if3887_end7894
  if3887_else7893:
    null $P5078
    set $P5079, $P5078
  if3887_end7894:
    unless_null $P5079, vivi_38897897
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_38897897:
    $P5081 = $P5079."new"($P101 :named("value"))
    $P5082 = $P5056."new"($P5069, $P5081, "!protoregex" :named("name"), "callmethod" :named("op"))
    $P5083 = $P5045."new"($P5082, $P101 :named("name"), "declaration" :named("blocktype"), _lex_param_1 :named("node"))
    set $P102, $P5083
.annotate 'line', 2823
    find_dynamic_lex $P5084, "$*W"
    unless_null $P5084, fallback7898
    nqp_get_sc_object $P5086, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5085, $P5086
    set fb_tmp_942, $P5085
    repr_defined $I5015, fb_tmp_942
    unless $I5015 goto if3890_else7899 
    set $P5087, fb_tmp_942["$W"]
    set $P5089, $P5087
    goto if3890_end7900
  if3890_else7899:
    null $P5088
    set $P5089, $P5088
  if3890_end7900:
    unless_null $P5089, vivi_38917901
    nqp_get_sc_object $P5090, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5089, $P5090
  vivi_38917901:
    unless_null $P5089, vivi_38927902
    die "Contextual $*W not found"
    box $P5091, "Contextual $*W not found"
    set $P5089, $P5091
  vivi_38927902:
    set $P5084, $P5089
  fallback7898:
    find_dynamic_lex $P5092, "$*PACKAGE"
    unless_null $P5092, fallback7903
    nqp_get_sc_object $P5094, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5093, $P5094
    set fb_tmp_943, $P5093
    repr_defined $I5016, fb_tmp_943
    unless $I5016 goto if3893_else7904 
    set $P5095, fb_tmp_943["$PACKAGE"]
    set $P5097, $P5095
    goto if3893_end7905
  if3893_else7904:
    null $P5096
    set $P5097, $P5096
  if3893_end7905:
    unless_null $P5097, vivi_38947906
    nqp_get_sc_object $P5098, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5097, $P5098
  vivi_38947906:
    unless_null $P5097, vivi_38957907
    die "Contextual $*PACKAGE not found"
    box $P5099, "Contextual $*PACKAGE not found"
    set $P5097, $P5099
  vivi_38957907:
    set $P5092, $P5097
  fallback7903:
.annotate 'line', 2824
    find_dynamic_lex $P5100, "$*W"
    unless_null $P5100, fallback7908
    nqp_get_sc_object $P5102, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5101, $P5102
    set fb_tmp_944, $P5101
    repr_defined $I5017, fb_tmp_944
    unless $I5017 goto if3896_else7909 
    set $P5103, fb_tmp_944["$W"]
    set $P5105, $P5103
    goto if3896_end7910
  if3896_else7909:
    null $P5104
    set $P5105, $P5104
  if3896_end7910:
    unless_null $P5105, vivi_38977911
    nqp_get_sc_object $P5106, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5105, $P5106
  vivi_38977911:
    unless_null $P5105, vivi_38987912
    die "Contextual $*W not found"
    box $P5107, "Contextual $*W not found"
    set $P5105, $P5107
  vivi_38987912:
    set $P5100, $P5105
  fallback7908:
    $P5108 = $P5100."create_code"($P102, $P101, 0, "NQPRegex" :named("code_type_name"))
    $P5109 = $P5084."pkg_add_method"($P5092, "add_method", $P101, $P5108)
    goto if3875_end7873
  if3875_else7872:
    .const 'Sub' $P5110 = 'cuid_498_1361537952.49511' 
    capture_lex $P5110
    $P5111 = $P5110()
  if3875_end7873:
.annotate 'line', 2863
    $P5112 = _lex_param_1."!make"($P102)
    .return ($P5112) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_498_1361537952.49511") :anon :lex :outer("cuid_317_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2826
    .const 'Sub' $P5198 = 'cuid_497_1361537952.49511' 
    capture_lex $P5198 
    .lex "$block", $P101 
    .lex "$code", $P102 
    .lex "$regex", $P103 
    .local pmc fb_tmp_945 
    .local pmc fb_tmp_946 
    .local pmc fb_tmp_947 
    .local pmc pkg_lookup_tmp_265 
    .local pmc fb_tmp_948 
    .local pmc fb_tmp_949 
    .local pmc pkg_lookup_tmp_266 
    .local pmc fb_tmp_950 
    .local pmc pkg_lookup_tmp_267 
    .local pmc fb_tmp_951 
    .local pmc pkg_lookup_tmp_268 
    .local pmc fb_tmp_952 
    .local pmc fb_tmp_953 
    .local pmc pkg_lookup_tmp_269 
    .local pmc fb_tmp_954 
    .local pmc fb_tmp_955 
    .local pmc pkg_lookup_tmp_270 
    .local pmc fb_tmp_956 
    .local pmc fb_tmp_957 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_958 
    .local pmc fb_tmp_959 
    .local pmc pkg_viv_tmp_48 
    .local pmc fb_tmp_960 
    .local pmc fb_tmp_961 
    .local pmc fb_tmp_962 
    .local pmc fb_tmp_963 
    .local pmc fb_tmp_964 
    .local pmc fb_tmp_965 
    .local pmc fb_tmp_968 
    .local pmc pkg_lookup_tmp_272 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 2827
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback7913
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5005, $P5006
    set fb_tmp_945, $P5005
    repr_defined $I5001, fb_tmp_945
    unless $I5001 goto if3899_else7914 
    set $P5007, fb_tmp_945["$W"]
    set $P5009, $P5007
    goto if3899_end7915
  if3899_else7914:
    null $P5008
    set $P5009, $P5008
  if3899_end7915:
    unless_null $P5009, vivi_39007916
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_39007916:
    unless_null $P5009, vivi_39017917
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_39017917:
    set $P5004, $P5009
  fallback7913:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 2828
    set fb_tmp_946, $P101
    repr_defined $I5002, fb_tmp_946
    unless $I5002 goto if3902_else7918 
    set $P5013, fb_tmp_946[0]
    set $P5015, $P5013
    goto if3902_end7919
  if3902_else7918:
    null $P5014
    set $P5015, $P5014
  if3902_end7919:
    unless_null $P5015, vivi_39037920
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_39037920:
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_265, $P5018
    get_who $P5019, pkg_lookup_tmp_265
    exists $I5004, $P5019["QAST"]
    unless $I5004 goto if3905_else7923 
    get_who $P5021, pkg_lookup_tmp_265
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if3905_end7924
  if3905_else7923:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if3905_end7924:
    get_who $P5017, $P5023
    set fb_tmp_947, $P5017
    repr_defined $I5003, fb_tmp_947
    unless $I5003 goto if3904_else7921 
    set $P5024, fb_tmp_947["Var"]
    set $P5026, $P5024
    goto if3904_end7922
  if3904_else7921:
    null $P5025
    set $P5026, $P5025
  if3904_end7922:
    unless_null $P5026, vivi_39067925
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_39067925:
    $P5028 = $P5026."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."unshift"($P5028)
.annotate 'line', 2829
    set fb_tmp_948, $P101
    repr_defined $I5005, fb_tmp_948
    unless $I5005 goto if3907_else7926 
    set $P5029, fb_tmp_948[0]
    set $P5031, $P5029
    goto if3907_end7927
  if3907_else7926:
    null $P5030
    set $P5031, $P5030
  if3907_end7927:
    unless_null $P5031, vivi_39087928
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_39087928:
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_266, $P5034
    get_who $P5035, pkg_lookup_tmp_266
    exists $I5007, $P5035["QAST"]
    unless $I5007 goto if3910_else7931 
    get_who $P5037, pkg_lookup_tmp_266
    set $P5036, $P5037["QAST"]
    set $P5039, $P5036
    goto if3910_end7932
  if3910_else7931:
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5038
  if3910_end7932:
    get_who $P5033, $P5039
    set fb_tmp_949, $P5033
    repr_defined $I5006, fb_tmp_949
    unless $I5006 goto if3909_else7929 
    set $P5040, fb_tmp_949["Op"]
    set $P5042, $P5040
    goto if3909_end7930
  if3909_else7929:
    null $P5041
    set $P5042, $P5041
  if3909_end7930:
    unless_null $P5042, vivi_39117933
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_39117933:
.annotate 'line', 2831
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_267, $P5045
    get_who $P5046, pkg_lookup_tmp_267
    exists $I5009, $P5046["QAST"]
    unless $I5009 goto if3913_else7936 
    get_who $P5048, pkg_lookup_tmp_267
    set $P5047, $P5048["QAST"]
    set $P5050, $P5047
    goto if3913_end7937
  if3913_else7936:
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5049
  if3913_end7937:
    get_who $P5044, $P5050
    set fb_tmp_950, $P5044
    repr_defined $I5008, fb_tmp_950
    unless $I5008 goto if3912_else7934 
    set $P5051, fb_tmp_950["Var"]
    set $P5053, $P5051
    goto if3912_end7935
  if3912_else7934:
    null $P5052
    set $P5053, $P5052
  if3912_end7935:
    unless_null $P5053, vivi_39147938
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_39147938:
    $P5055 = $P5053."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2832
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_268, $P5057
    get_who $P5058, pkg_lookup_tmp_268
    exists $I5011, $P5058["QAST"]
    unless $I5011 goto if3916_else7941 
    get_who $P5060, pkg_lookup_tmp_268
    set $P5059, $P5060["QAST"]
    set $P5062, $P5059
    goto if3916_end7942
  if3916_else7941:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if3916_end7942:
    get_who $P5056, $P5062
    set fb_tmp_951, $P5056
    repr_defined $I5010, fb_tmp_951
    unless $I5010 goto if3915_else7939 
    set $P5063, fb_tmp_951["Var"]
    set $P5065, $P5063
    goto if3915_end7940
  if3915_else7939:
    null $P5064
    set $P5065, $P5064
  if3915_end7940:
    unless_null $P5065, vivi_39177943
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_39177943:
    $P5067 = $P5065."new"("self" :named("name"), "lexical" :named("scope"))
    $P5068 = $P5042."new"($P5055, $P5067, "bind" :named("op"))
    $P5031."push"($P5068)
.annotate 'line', 2833
    set fb_tmp_952, $P101
    repr_defined $I5012, fb_tmp_952
    unless $I5012 goto if3918_else7944 
    set $P5069, fb_tmp_952[0]
    set $P5071, $P5069
    goto if3918_end7945
  if3918_else7944:
    null $P5070
    set $P5071, $P5070
  if3918_end7945:
    unless_null $P5071, vivi_39197946
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_39197946:
    nqp_get_sc_object $P5074, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_269, $P5074
    get_who $P5075, pkg_lookup_tmp_269
    exists $I5014, $P5075["QAST"]
    unless $I5014 goto if3921_else7949 
    get_who $P5077, pkg_lookup_tmp_269
    set $P5076, $P5077["QAST"]
    set $P5079, $P5076
    goto if3921_end7950
  if3921_else7949:
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5078
  if3921_end7950:
    get_who $P5073, $P5079
    set fb_tmp_953, $P5073
    repr_defined $I5013, fb_tmp_953
    unless $I5013 goto if3920_else7947 
    set $P5080, fb_tmp_953["Var"]
    set $P5082, $P5080
    goto if3920_end7948
  if3920_else7947:
    null $P5081
    set $P5082, $P5081
  if3920_end7948:
    unless_null $P5082, vivi_39227951
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_39227951:
    $P5084 = $P5082."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5071."push"($P5084)
.annotate 'line', 2834
    set fb_tmp_954, $P101
    repr_defined $I5015, fb_tmp_954
    unless $I5015 goto if3923_else7952 
    set $P5085, fb_tmp_954[0]
    set $P5087, $P5085
    goto if3923_end7953
  if3923_else7952:
    null $P5086
    set $P5087, $P5086
  if3923_end7953:
    unless_null $P5087, vivi_39247954
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_39247954:
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_270, $P5090
    get_who $P5091, pkg_lookup_tmp_270
    exists $I5017, $P5091["QAST"]
    unless $I5017 goto if3926_else7957 
    get_who $P5093, pkg_lookup_tmp_270
    set $P5092, $P5093["QAST"]
    set $P5095, $P5092
    goto if3926_end7958
  if3926_else7957:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if3926_end7958:
    get_who $P5089, $P5095
    set fb_tmp_955, $P5089
    repr_defined $I5016, fb_tmp_955
    unless $I5016 goto if3925_else7955 
    set $P5096, fb_tmp_955["Var"]
    set $P5098, $P5096
    goto if3925_end7956
  if3925_else7955:
    null $P5097
    set $P5098, $P5097
  if3925_end7956:
    unless_null $P5098, vivi_39277959
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_39277959:
    $P5100 = $P5098."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5087."push"($P5100)
.annotate 'line', 2835
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 2836
    $P101."symbol"("$/", "lexical" :named("scope"))
    find_dynamic_lex $P5101, "%*RX"
    unless_null $P5101, fallback7962
    nqp_get_sc_object $P5103, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5102, $P5103
    set pkg_viv_tmp_47, $P5102
    set fb_tmp_957, pkg_viv_tmp_47
    repr_defined $I5019, fb_tmp_957
    unless $I5019 goto if3929_else7963 
    set $P5104, fb_tmp_957["%RX"]
    set $P5106, $P5104
    goto if3929_end7964
  if3929_else7963:
    null $P5105
    set $P5106, $P5105
  if3929_end7964:
    unless_null $P5106, vivi_39307965
    new $P5107, 'Hash'
    set pkg_viv_tmp_47["%RX"], $P5107
    set $P5106, $P5107
  vivi_39307965:
    unless_null $P5106, vivi_39317966
    die "Contextual %*RX not found"
    box $P5108, "Contextual %*RX not found"
    set $P5106, $P5108
  vivi_39317966:
    set $P5101, $P5106
  fallback7962:
    set fb_tmp_956, $P5101
    repr_defined $I5018, fb_tmp_956
    unless $I5018 goto if3928_else7960 
    set $P5109, fb_tmp_956["code"]
    set $P5111, $P5109
    goto if3928_end7961
  if3928_else7960:
    null $P5110
    set $P5111, $P5110
  if3928_end7961:
    unless_null $P5111, vivi_39327967
    nqp_get_sc_object $P5112, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5112
  vivi_39327967:
    set $P102, $P5111
.annotate 'line', 2838
    find_dynamic_lex $P5113, "%*LANG"
    unless_null $P5113, fallback7970
    nqp_get_sc_object $P5115, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5114, $P5115
    set pkg_viv_tmp_48, $P5114
    set fb_tmp_959, pkg_viv_tmp_48
    repr_defined $I5021, fb_tmp_959
    unless $I5021 goto if3934_else7971 
    set $P5116, fb_tmp_959["%LANG"]
    set $P5118, $P5116
    goto if3934_end7972
  if3934_else7971:
    null $P5117
    set $P5118, $P5117
  if3934_end7972:
    unless_null $P5118, vivi_39357973
    new $P5119, 'Hash'
    set pkg_viv_tmp_48["%LANG"], $P5119
    set $P5118, $P5119
  vivi_39357973:
    unless_null $P5118, vivi_39367974
    die "Contextual %*LANG not found"
    box $P5120, "Contextual %*LANG not found"
    set $P5118, $P5120
  vivi_39367974:
    set $P5113, $P5118
  fallback7970:
    set fb_tmp_958, $P5113
    repr_defined $I5020, fb_tmp_958
    unless $I5020 goto if3933_else7968 
    set $P5121, fb_tmp_958["Regex-actions"]
    set $P5123, $P5121
    goto if3933_end7969
  if3933_else7968:
    null $P5122
    set $P5123, $P5122
  if3933_end7969:
    unless_null $P5123, vivi_39377975
    nqp_get_sc_object $P5124, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5123, $P5124
  vivi_39377975:
    find_lex $P5125, "$/"
    unless_null $P5125, fallback7978
    nqp_get_sc_object $P5126, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5125, $P5126
  fallback7978:
    set fb_tmp_960, $P5125
    repr_defined $I5022, fb_tmp_960
    unless $I5022 goto if3938_else7976 
    set $P5127, fb_tmp_960["p6regex"]
    set $P5129, $P5127
    goto if3938_end7977
  if3938_else7976:
    null $P5128
    set $P5129, $P5128
  if3938_end7977:
    unless_null $P5129, vivi_39397979
    nqp_get_sc_object $P5130, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5129, $P5130
  vivi_39397979:
    $P5131 = $P5129."ast"()
    $P5132 = $P5123."qbuildsub"($P5131, $P101, $P102 :named("code_obj"))
    set $P103, $P5132
.annotate 'line', 2839
    find_lex $P5133, "$name"
    $P103."name"($P5133)
    find_dynamic_lex $P5134, "$*PKGDECL"
    unless_null $P5134, fallback7984
    nqp_get_sc_object $P5136, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5135, $P5136
    set fb_tmp_961, $P5135
    repr_defined $I5023, fb_tmp_961
    unless $I5023 goto if3942_else7985 
    set $P5137, fb_tmp_961["$PKGDECL"]
    set $P5139, $P5137
    goto if3942_end7986
  if3942_else7985:
    null $P5138
    set $P5139, $P5138
  if3942_end7986:
    unless_null $P5139, vivi_39437987
    nqp_get_sc_object $P5140, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5139, $P5140
  vivi_39437987:
    unless_null $P5139, vivi_39447988
    die "Contextual $*PKGDECL not found"
    box $P5141, "Contextual $*PKGDECL not found"
    set $P5139, $P5141
  vivi_39447988:
    set $P5134, $P5139
  fallback7984:
    set $P5151, $P5134
    unless $P5134 goto if3941_end7983 
    find_dynamic_lex $P5143, "$*PACKAGE"
    unless_null $P5143, fallback7989
    nqp_get_sc_object $P5145, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5144, $P5145
    set fb_tmp_962, $P5144
    repr_defined $I5025, fb_tmp_962
    unless $I5025 goto if3945_else7990 
    set $P5146, fb_tmp_962["$PACKAGE"]
    set $P5148, $P5146
    goto if3945_end7991
  if3945_else7990:
    null $P5147
    set $P5148, $P5147
  if3945_end7991:
    unless_null $P5148, vivi_39467992
    nqp_get_sc_object $P5149, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5148, $P5149
  vivi_39467992:
    unless_null $P5148, vivi_39477993
    die "Contextual $*PACKAGE not found"
    box $P5150, "Contextual $*PACKAGE not found"
    set $P5148, $P5150
  vivi_39477993:
    set $P5143, $P5148
  fallback7989:
    get_how $P5142, $P5143
    can $I5024, $P5142, "add_method"
    box $P5152, $I5024
    set $P5151, $P5152
  if3941_end7983:
    unless $P5151 goto if3940_end7981 
.annotate 'line', 2841
.annotate 'line', 2843
    find_dynamic_lex $P5153, "$*W"
    unless_null $P5153, fallback7994
    nqp_get_sc_object $P5155, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5154, $P5155
    set fb_tmp_963, $P5154
    repr_defined $I5026, fb_tmp_963
    unless $I5026 goto if3948_else7995 
    set $P5156, fb_tmp_963["$W"]
    set $P5158, $P5156
    goto if3948_end7996
  if3948_else7995:
    null $P5157
    set $P5158, $P5157
  if3948_end7996:
    unless_null $P5158, vivi_39497997
    nqp_get_sc_object $P5159, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5158, $P5159
  vivi_39497997:
    unless_null $P5158, vivi_39507998
    die "Contextual $*W not found"
    box $P5160, "Contextual $*W not found"
    set $P5158, $P5160
  vivi_39507998:
    set $P5153, $P5158
  fallback7994:
    find_dynamic_lex $P5161, "$*PACKAGE"
    unless_null $P5161, fallback7999
    nqp_get_sc_object $P5163, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5162, $P5163
    set fb_tmp_964, $P5162
    repr_defined $I5027, fb_tmp_964
    unless $I5027 goto if3951_else8000 
    set $P5164, fb_tmp_964["$PACKAGE"]
    set $P5166, $P5164
    goto if3951_end8001
  if3951_else8000:
    null $P5165
    set $P5166, $P5165
  if3951_end8001:
    unless_null $P5166, vivi_39528002
    nqp_get_sc_object $P5167, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5166, $P5167
  vivi_39528002:
    unless_null $P5166, vivi_39538003
    die "Contextual $*PACKAGE not found"
    box $P5168, "Contextual $*PACKAGE not found"
    set $P5166, $P5168
  vivi_39538003:
    set $P5161, $P5166
  fallback7999:
    find_lex $P5169, "$name"
    $P5170 = $P5153."pkg_add_method"($P5161, "add_method", $P5169, $P102)
  if3940_end7981:
    find_dynamic_lex $P5171, "$*PKGDECL"
    unless_null $P5171, fallback8006
    nqp_get_sc_object $P5173, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5172, $P5173
    set fb_tmp_965, $P5172
    repr_defined $I5029, fb_tmp_965
    unless $I5029 goto if3955_else8007 
    set $P5174, fb_tmp_965["$PKGDECL"]
    set $P5176, $P5174
    goto if3955_end8008
  if3955_else8007:
    null $P5175
    set $P5176, $P5175
  if3955_end8008:
    unless_null $P5176, vivi_39568009
    nqp_get_sc_object $P5177, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5176, $P5177
  vivi_39568009:
    unless_null $P5176, vivi_39578010
    die "Contextual $*PKGDECL not found"
    box $P5178, "Contextual $*PKGDECL not found"
    set $P5176, $P5178
  vivi_39578010:
    set $P5171, $P5176
  fallback8006:
    set $S5001, $P5171
    iseq $I5028, $S5001, "role"
    unless $I5028 goto if3954_end8005 
    .const 'Sub' $P5179 = 'cuid_497_1361537952.49511' 
    capture_lex $P5179
    $P5180 = $P5179()
  if3954_end8005:
.annotate 'line', 2857
    nqp_get_sc_object $P5182, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_272, $P5182
    get_who $P5183, pkg_lookup_tmp_272
    exists $I5031, $P5183["QAST"]
    unless $I5031 goto if3965_else8024 
    get_who $P5185, pkg_lookup_tmp_272
    set $P5184, $P5185["QAST"]
    set $P5187, $P5184
    goto if3965_end8025
  if3965_else8024:
    nqp_get_sc_object $P5186, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5187, $P5186
  if3965_end8025:
    get_who $P5181, $P5187
    set fb_tmp_968, $P5181
    repr_defined $I5030, fb_tmp_968
    unless $I5030 goto if3964_else8022 
    set $P5188, fb_tmp_968["Op"]
    set $P5190, $P5188
    goto if3964_end8023
  if3964_else8022:
    null $P5189
    set $P5190, $P5189
  if3964_end8023:
    unless_null $P5190, vivi_39668026
    nqp_get_sc_object $P5191, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5190, $P5191
  vivi_39668026:
.annotate 'line', 2859
    new $P5192, 'ResizablePMCArray'
    box $P5193, "NQPRegexMethod"
    push $P5192, $P5193
    find_lex $P5194, "$/"
    $P5195 = "&lexical_package_lookup"($P5192, $P5194)
    $P5196 = $P5190."new"($P5195, $P103, "callmethod" :named("op"), "new" :named("name"))
    store_lex "$past", $P5196
    find_lex $P5197, "$past"
    set $P5197["sink"], $P103
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_497_1361537952.49511") :anon :lex :outer("cuid_498_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2848
    .lex "$gen_nfa", $P101 
    .local pmc fb_tmp_966 
    .local pmc pkg_lookup_tmp_271 
    .local pmc fb_tmp_967 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2849
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_271, $P5003
    get_who $P5004, pkg_lookup_tmp_271
    exists $I5002, $P5004["QRegex"]
    unless $I5002 goto if3959_else8013 
    get_who $P5006, pkg_lookup_tmp_271
    set $P5005, $P5006["QRegex"]
    set $P5008, $P5005
    goto if3959_end8014
  if3959_else8013:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if3959_end8014:
    get_who $P5002, $P5008
    set fb_tmp_966, $P5002
    repr_defined $I5001, fb_tmp_966
    unless $I5001 goto if3958_else8011 
    set $P5009, fb_tmp_966["NFA"]
    set $P5011, $P5009
    goto if3958_end8012
  if3958_else8011:
    null $P5010
    set $P5011, $P5010
  if3958_end8012:
    unless_null $P5011, vivi_39608015
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_39608015:
    $P5013 = $P5011."new"()
    set $P101, $P5013
.annotate 'line', 2850
    find_lex $P5014, "$/"
    unless_null $P5014, fallback8018
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  fallback8018:
    set fb_tmp_967, $P5014
    repr_defined $I5003, fb_tmp_967
    unless $I5003 goto if3961_else8016 
    set $P5016, fb_tmp_967["p6regex"]
    set $P5018, $P5016
    goto if3961_end8017
  if3961_else8016:
    null $P5017
    set $P5018, $P5017
  if3961_end8017:
    unless_null $P5018, vivi_39628019
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_39628019:
    $P5020 = $P5018."ast"()
    $P101."addnode"($P5020, 1 :named("vars_as_generic"))
.annotate 'line', 2851
    $P5021 = $P101."generic"()
    set $P5024, $P5021
    unless $P5021 goto if3963_end8021 
.annotate 'line', 2852
    find_lex $P5022, "$code"
    $P5023 = $P5022."SET_GENERIC_NFA"($P101)
    set $P5024, $P5023
  if3963_end8021:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "dotty" :subid("cuid_318_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2867
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_969 
    .local pmc fb_tmp_970 
    .local pmc fb_tmp_971 
    .local pmc fb_tmp_972 
    .local pmc pkg_lookup_tmp_273 
    .local pmc fb_tmp_973 
    .local pmc fb_tmp_974 
    .local pmc fb_tmp_975 
    .local pmc fb_tmp_976 
    .local pmc fb_tmp_977 
    .local pmc fb_tmp_978 
    .local pmc fb_tmp_979 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback8032
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback8032:
    set fb_tmp_969, _lex_param_1
    repr_defined $I5001, fb_tmp_969
    unless $I5001 goto if3968_else8030 
    set $P5003, fb_tmp_969["args"]
    set $P5005, $P5003
    goto if3968_end8031
  if3968_else8030:
    null $P5004
    set $P5005, $P5004
  if3968_end8031:
    unless_null $P5005, vivi_39698033
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_39698033:
    unless $P5005 goto if3967_else8028 
.annotate 'line', 2868
    unless_null _lex_param_1, fallback8038
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5007
  fallback8038:
    set fb_tmp_971, _lex_param_1
    repr_defined $I5003, fb_tmp_971
    unless $I5003 goto if3971_else8036 
    set $P5008, fb_tmp_971["args"]
    set $P5010, $P5008
    goto if3971_end8037
  if3971_else8036:
    null $P5009
    set $P5010, $P5009
  if3971_end8037:
    unless_null $P5010, vivi_39728039
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_39728039:
    set fb_tmp_970, $P5010
    repr_defined $I5002, fb_tmp_970
    unless $I5002 goto if3970_else8034 
    set $P5012, fb_tmp_970[0]
    set $P5014, $P5012
    goto if3970_end8035
  if3970_else8034:
    null $P5013
    set $P5014, $P5013
  if3970_end8035:
    unless_null $P5014, vivi_39738040
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_39738040:
    $P5016 = $P5014."ast"()
    set $P5029, $P5016
    goto if3967_end8029
  if3967_else8028:
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_273, $P5018
    get_who $P5019, pkg_lookup_tmp_273
    exists $I5005, $P5019["QAST"]
    unless $I5005 goto if3975_else8043 
    get_who $P5021, pkg_lookup_tmp_273
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if3975_end8044
  if3975_else8043:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if3975_end8044:
    get_who $P5017, $P5023
    set fb_tmp_972, $P5017
    repr_defined $I5004, fb_tmp_972
    unless $I5004 goto if3974_else8041 
    set $P5024, fb_tmp_972["Op"]
    set $P5026, $P5024
    goto if3974_end8042
  if3974_else8041:
    null $P5025
    set $P5026, $P5025
  if3974_end8042:
    unless_null $P5026, vivi_39768045
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_39768045:
    $P5028 = $P5026."new"(_lex_param_1 :named("node"))
    set $P5029, $P5028
  if3967_end8029:
    set $P101, $P5029
    unless_null _lex_param_1, fallback8050
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5030
  fallback8050:
    set fb_tmp_973, _lex_param_1
    repr_defined $I5006, fb_tmp_973
    unless $I5006 goto if3978_else8048 
    set $P5031, fb_tmp_973["quote"]
    set $P5033, $P5031
    goto if3978_end8049
  if3978_else8048:
    null $P5032
    set $P5033, $P5032
  if3978_end8049:
    unless_null $P5033, vivi_39798051
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_39798051:
    unless $P5033 goto if3977_else8046 
.annotate 'line', 2869
.annotate 'line', 2870
    unless_null _lex_param_1, fallback8054
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5035
  fallback8054:
    set fb_tmp_974, _lex_param_1
    repr_defined $I5007, fb_tmp_974
    unless $I5007 goto if3980_else8052 
    set $P5036, fb_tmp_974["quote"]
    set $P5038, $P5036
    goto if3980_end8053
  if3980_else8052:
    null $P5037
    set $P5038, $P5037
  if3980_end8053:
    unless_null $P5038, vivi_39818055
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_39818055:
    $P5040 = $P5038."ast"()
    $P101."unshift"($P5040)
.annotate 'line', 2871
    $P5041 = $P101."op"("callmethod")
    goto if3977_end8047
  if3977_else8046:
    unless_null _lex_param_1, fallback8060
    nqp_get_sc_object $P5042, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5042
  fallback8060:
    set fb_tmp_975, _lex_param_1
    repr_defined $I5009, fb_tmp_975
    unless $I5009 goto if3983_else8058 
    set $P5043, fb_tmp_975["longname"]
    set $P5045, $P5043
    goto if3983_end8059
  if3983_else8058:
    null $P5044
    set $P5045, $P5044
  if3983_end8059:
    unless_null $P5045, vivi_39848061
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_39848061:
    set $S5001, $P5045
    iseq $I5008, $S5001, "HOW"
    unless $I5008 goto if3982_else8056 
.annotate 'line', 2873
.annotate 'line', 2874
    $P5047 = $P101."op"("how")
    set $P5075, $P5047
    goto if3982_end8057
  if3982_else8056:
    unless_null _lex_param_1, fallback8066
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5048
  fallback8066:
    set fb_tmp_976, _lex_param_1
    repr_defined $I5011, fb_tmp_976
    unless $I5011 goto if3986_else8064 
    set $P5049, fb_tmp_976["longname"]
    set $P5051, $P5049
    goto if3986_end8065
  if3986_else8064:
    null $P5050
    set $P5051, $P5050
  if3986_end8065:
    unless_null $P5051, vivi_39878067
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_39878067:
    set $S5002, $P5051
    iseq $I5010, $S5002, "WHAT"
    unless $I5010 goto if3985_else8062 
.annotate 'line', 2876
.annotate 'line', 2877
    $P5053 = $P101."op"("what")
    set $P5074, $P5053
    goto if3985_end8063
  if3985_else8062:
    unless_null _lex_param_1, fallback8072
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5054
  fallback8072:
    set fb_tmp_977, _lex_param_1
    repr_defined $I5013, fb_tmp_977
    unless $I5013 goto if3989_else8070 
    set $P5055, fb_tmp_977["longname"]
    set $P5057, $P5055
    goto if3989_end8071
  if3989_else8070:
    null $P5056
    set $P5057, $P5056
  if3989_end8071:
    unless_null $P5057, vivi_39908073
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_39908073:
    set $S5003, $P5057
    iseq $I5012, $S5003, "WHO"
    unless $I5012 goto if3988_else8068 
.annotate 'line', 2879
.annotate 'line', 2880
    $P5059 = $P101."op"("who")
    set $P5073, $P5059
    goto if3988_end8069
  if3988_else8068:
    unless_null _lex_param_1, fallback8078
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5060
  fallback8078:
    set fb_tmp_978, _lex_param_1
    repr_defined $I5015, fb_tmp_978
    unless $I5015 goto if3992_else8076 
    set $P5061, fb_tmp_978["longname"]
    set $P5063, $P5061
    goto if3992_end8077
  if3992_else8076:
    null $P5062
    set $P5063, $P5062
  if3992_end8077:
    unless_null $P5063, vivi_39938079
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_39938079:
    set $S5004, $P5063
    iseq $I5014, $S5004, "REPR"
    unless $I5014 goto if3991_else8074 
.annotate 'line', 2882
.annotate 'line', 2883
    $P5065 = $P101."op"("reprname")
    set $P5072, $P5065
    goto if3991_end8075
  if3991_else8074:
.annotate 'line', 2885
.annotate 'line', 2886
    unless_null _lex_param_1, fallback8082
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5066
  fallback8082:
    set fb_tmp_979, _lex_param_1
    repr_defined $I5016, fb_tmp_979
    unless $I5016 goto if3994_else8080 
    set $P5067, fb_tmp_979["longname"]
    set $P5069, $P5067
    goto if3994_end8081
  if3994_else8080:
    null $P5068
    set $P5069, $P5068
  if3994_end8081:
    unless_null $P5069, vivi_39958083
    nqp_get_sc_object $P5070, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5069, $P5070
  vivi_39958083:
    set $S5005, $P5069
    $P101."name"($S5005)
.annotate 'line', 2887
    $P5071 = $P101."op"("callmethod")
    set $P5072, $P5071
  if3991_end8075:
    set $P5073, $P5072
  if3988_end8069:
    set $P5074, $P5073
  if3985_end8063:
    set $P5075, $P5074
  if3982_end8057:
  if3977_end8047:
.annotate 'line', 2889
    $P5076 = _lex_param_1."!make"($P101)
    .return ($P5076) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<self>" :subid("cuid_319_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2894
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_980 
    .local pmc pkg_lookup_tmp_274 
    .local pmc fb_tmp_981 
    .local pmc pkg_lookup_tmp_275 
.annotate 'line', 2895
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_274, $P5002
    get_who $P5003, pkg_lookup_tmp_274
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if3997_else8086 
    get_who $P5005, pkg_lookup_tmp_274
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if3997_end8087
  if3997_else8086:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if3997_end8087:
    get_who $P5001, $P5007
    set fb_tmp_980, $P5001
    repr_defined $I5001, fb_tmp_980
    unless $I5001 goto if3996_else8084 
    set $P5008, fb_tmp_980["Op"]
    set $P5010, $P5008
    goto if3996_end8085
  if3996_else8084:
    null $P5009
    set $P5010, $P5009
  if3996_end8085:
    unless_null $P5010, vivi_39988088
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_39988088:
.annotate 'line', 2896
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_275, $P5013
    get_who $P5014, pkg_lookup_tmp_275
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4000_else8091 
    get_who $P5016, pkg_lookup_tmp_275
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4000_end8092
  if4000_else8091:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4000_end8092:
    get_who $P5012, $P5018
    set fb_tmp_981, $P5012
    repr_defined $I5003, fb_tmp_981
    unless $I5003 goto if3999_else8089 
    set $P5019, fb_tmp_981["Var"]
    set $P5021, $P5019
    goto if3999_end8090
  if3999_else8089:
    null $P5020
    set $P5021, $P5020
  if3999_end8090:
    unless_null $P5021, vivi_40018093
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_40018093:
    $P5023 = $P5021."new"("self" :named("name"), "lexical" :named("scope"))
    $P5024 = $P5010."new"($P5023, "decont" :named("op"))
    $P5025 = _lex_param_1."!make"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<identifier>" :subid("cuid_320_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2899
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_982 
    .local pmc fb_tmp_983 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2900
    unless_null _lex_param_1, fallback8096
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback8096:
    set fb_tmp_982, _lex_param_1
    repr_defined $I5001, fb_tmp_982
    unless $I5001 goto if4002_else8094 
    set $P5003, fb_tmp_982["args"]
    set $P5005, $P5003
    goto if4002_end8095
  if4002_else8094:
    null $P5004
    set $P5005, $P5004
  if4002_end8095:
    unless_null $P5005, vivi_40038097
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_40038097:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 2901
    unless_null _lex_param_1, fallback8100
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback8100:
    set fb_tmp_983, _lex_param_1
    repr_defined $I5002, fb_tmp_983
    unless $I5002 goto if4004_else8098 
    set $P5009, fb_tmp_983["deflongname"]
    set $P5011, $P5009
    goto if4004_end8099
  if4004_else8098:
    null $P5010
    set $P5011, $P5010
  if4004_end8099:
    unless_null $P5011, vivi_40058101
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_40058101:
    set $S5002, $P5011
    concat $S5001, "&", $S5002
    $P101."name"($S5001)
.annotate 'line', 2902
    $P5013 = _lex_param_1."!make"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<name>" :subid("cuid_321_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2905
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5069 = 'cuid_499_1361537952.49511' 
    capture_lex $P5069 
    .const 'Sub' $P5069 = 'cuid_500_1361537952.49511' 
    capture_lex $P5069 
    .lex "$var", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_984 
    .local pmc fb_tmp_985 
    .local pmc fb_tmp_986 
    .local pmc pkg_lookup_tmp_276 
    .local pmc fb_tmp_987 
    .local pmc fb_tmp_988 
    .local pmc fb_tmp_993 
    .local pmc fb_tmp_994 
    .local pmc fb_tmp_995 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 2908
    find_dynamic_lex $P5003, "$*W"
    unless_null $P5003, fallback8104
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set fb_tmp_984, $P5004
    repr_defined $I5001, fb_tmp_984
    unless $I5001 goto if4007_else8105 
    set $P5006, fb_tmp_984["$W"]
    set $P5008, $P5006
    goto if4007_end8106
  if4007_else8105:
    null $P5007
    set $P5008, $P5007
  if4007_end8106:
    unless_null $P5008, vivi_40088107
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_40088107:
    unless_null $P5008, vivi_40098108
    die "Contextual $*W not found"
    box $P5010, "Contextual $*W not found"
    set $P5008, $P5010
  vivi_40098108:
    set $P5003, $P5008
  fallback8104:
    unless_null _lex_param_1, fallback8111
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5011
  fallback8111:
    set fb_tmp_985, _lex_param_1
    repr_defined $I5002, fb_tmp_985
    unless $I5002 goto if4010_else8109 
    set $P5012, fb_tmp_985["name"]
    set $P5014, $P5012
    goto if4010_end8110
  if4010_else8109:
    null $P5013
    set $P5014, $P5013
  if4010_end8110:
    unless_null $P5014, vivi_40118112
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_40118112:
    set $S5001, $P5014
    $P5016 = $P5003."is_lexical"($S5001)
    unless $P5016 goto if4006_else8102 
    new $P5048, 'ExceptionHandler'
    set_label $P5048, catch_handler_40288139
    $P5048.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5048
.annotate 'line', 2909
    new $P5046, 'ExceptionHandler'
    set_label $P5046, catch_handler_40218128
    $P5046.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5046
.annotate 'line', 2910
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_276, $P5018
    get_who $P5019, pkg_lookup_tmp_276
    exists $I5004, $P5019["QAST"]
    unless $I5004 goto if4013_else8115 
    get_who $P5021, pkg_lookup_tmp_276
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if4013_end8116
  if4013_else8115:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if4013_end8116:
    get_who $P5017, $P5023
    set fb_tmp_986, $P5017
    repr_defined $I5003, fb_tmp_986
    unless $I5003 goto if4012_else8113 
    set $P5024, fb_tmp_986["WVal"]
    set $P5026, $P5024
    goto if4012_end8114
  if4012_else8113:
    null $P5025
    set $P5026, $P5025
  if4012_end8114:
    unless_null $P5026, vivi_40148117
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_40148117:
    find_dynamic_lex $P5028, "$*W"
    unless_null $P5028, fallback8118
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5029, $P5030
    set fb_tmp_987, $P5029
    repr_defined $I5005, fb_tmp_987
    unless $I5005 goto if4015_else8119 
    set $P5031, fb_tmp_987["$W"]
    set $P5033, $P5031
    goto if4015_end8120
  if4015_else8119:
    null $P5032
    set $P5033, $P5032
  if4015_end8120:
    unless_null $P5033, vivi_40168121
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5033, $P5034
  vivi_40168121:
    unless_null $P5033, vivi_40178122
    die "Contextual $*W not found"
    box $P5035, "Contextual $*W not found"
    set $P5033, $P5035
  vivi_40178122:
    set $P5028, $P5033
  fallback8118:
    new $P5036, 'ResizablePMCArray'
    unless_null _lex_param_1, fallback8125
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5037
  fallback8125:
    set fb_tmp_988, _lex_param_1
    repr_defined $I5006, fb_tmp_988
    unless $I5006 goto if4018_else8123 
    set $P5038, fb_tmp_988["name"]
    set $P5040, $P5038
    goto if4018_end8124
  if4018_else8123:
    null $P5039
    set $P5040, $P5039
  if4018_end8124:
    unless_null $P5040, vivi_40198126
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_40198126:
    set $S5002, $P5040
    box $P5042, $S5002
    push $P5036, $P5042
    $P5043 = $P5028."find_sym"($P5036)
    $P5044 = $P5026."new"($P5043 :named("value"))
    set $P101, $P5044
    nqp_get_sc_object $P5045, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5045
    pop_eh 
    goto skip_handler_40208127
  catch_handler_40218128:
    .get_results ($P5046) 
    .const 'Sub' $P10001 = 'cuid_499_1361537952.49511' 
    capture_lex $P10001
    $P10001($P5046)
    set $I10001, 1
    set $P5046["handled"], $I10001
    nqp_get_sc_object $P10002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5046
    pop_upto_eh $P5046
    pop_eh 
    set $P5047, $P10002
    goto skip_handler_40208127
  skip_handler_40208127:
    set $P5049, $P5047
    pop_eh 
    goto skip_handler_40278138
  catch_handler_40288139:
    .get_results ($P5048) 
    set $I10001, 1
    set $P5048["handled"], $I10001
    nqp_get_sc_object $P10001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    finalize $P5048
    pop_upto_eh $P5048
    pop_eh 
    set $P5049, $P10001
    goto skip_handler_40278138
  skip_handler_40278138:
    goto if4006_end8103
  if4006_else8102:
    .const 'Sub' $P5050 = 'cuid_500_1361537952.49511' 
    capture_lex $P5050
    $P5051 = $P5050()
  if4006_end8103:
    set $P102, $P101
    unless_null _lex_param_1, fallback8151
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5052
  fallback8151:
    set fb_tmp_993, _lex_param_1
    repr_defined $I5007, fb_tmp_993
    unless $I5007 goto if4034_else8149 
    set $P5053, fb_tmp_993["args"]
    set $P5055, $P5053
    goto if4034_end8150
  if4034_else8149:
    null $P5054
    set $P5055, $P5054
  if4034_end8150:
    unless_null $P5055, vivi_40358152
    nqp_get_sc_object $P5056, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5055, $P5056
  vivi_40358152:
    unless $P5055 goto if4033_end8148 
.annotate 'line', 2923
.annotate 'line', 2924
    unless_null _lex_param_1, fallback8157
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5057
  fallback8157:
    set fb_tmp_995, _lex_param_1
    repr_defined $I5009, fb_tmp_995
    unless $I5009 goto if4037_else8155 
    set $P5058, fb_tmp_995["args"]
    set $P5060, $P5058
    goto if4037_end8156
  if4037_else8155:
    null $P5059
    set $P5060, $P5059
  if4037_end8156:
    unless_null $P5060, vivi_40388158
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  vivi_40388158:
    set fb_tmp_994, $P5060
    repr_defined $I5008, fb_tmp_994
    unless $I5008 goto if4036_else8153 
    set $P5062, fb_tmp_994[0]
    set $P5064, $P5062
    goto if4036_end8154
  if4036_else8153:
    null $P5063
    set $P5064, $P5063
  if4036_end8154:
    unless_null $P5064, vivi_40398159
    nqp_get_sc_object $P5065, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5064, $P5065
  vivi_40398159:
    $P5066 = $P5064."ast"()
    set $P102, $P5066
.annotate 'line', 2925
    $P5067 = $P102."unshift"($P101)
  if4033_end8148:
.annotate 'line', 2927
    $P5068 = _lex_param_1."!make"($P102)
    .return ($P5068) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_499_1361537952.49511") :anon :lex :outer("cuid_321_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2911
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_989 
    .local pmc pkg_lookup_tmp_277 
    .local pmc fb_tmp_990 
    set $P101, _lex_param_0
.annotate 'line', 2912
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_277, $P5002
    get_who $P5003, pkg_lookup_tmp_277
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4023_else8131 
    get_who $P5005, pkg_lookup_tmp_277
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4023_end8132
  if4023_else8131:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4023_end8132:
    get_who $P5001, $P5007
    set fb_tmp_989, $P5001
    repr_defined $I5001, fb_tmp_989
    unless $I5001 goto if4022_else8129 
    set $P5008, fb_tmp_989["Var"]
    set $P5010, $P5008
    goto if4022_end8130
  if4022_else8129:
    null $P5009
    set $P5010, $P5009
  if4022_end8130:
    unless_null $P5010, vivi_40248133
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_40248133:
    find_lex $P5012, "$/"
    unless_null $P5012, fallback8136
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  fallback8136:
    set fb_tmp_990, $P5012
    repr_defined $I5003, fb_tmp_990
    unless $I5003 goto if4025_else8134 
    set $P5014, fb_tmp_990["name"]
    set $P5016, $P5014
    goto if4025_end8135
  if4025_else8134:
    null $P5015
    set $P5016, $P5015
  if4025_end8135:
    unless_null $P5016, vivi_40268137
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_40268137:
    set $S5001, $P5016
    $P5018 = $P5010."new"($S5001 :named("name"), "lexical" :named("scope"))
    store_lex "$var", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_500_1361537952.49511") :anon :lex :outer("cuid_321_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2916
    .lex "@ns", $P101 
    .local pmc fb_tmp_991 
    .local pmc fb_tmp_992 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$/"
    unless_null $P5003, fallback8144
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5003, $P5004
  fallback8144:
    set fb_tmp_992, $P5003
    repr_defined $I5002, fb_tmp_992
    unless $I5002 goto if4030_else8142 
    set $P5005, fb_tmp_992["name"]
    set $P5007, $P5005
    goto if4030_end8143
  if4030_else8142:
    null $P5006
    set $P5007, $P5006
  if4030_end8143:
    unless_null $P5007, vivi_40318145
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_40318145:
    set fb_tmp_991, $P5007
    repr_defined $I5001, fb_tmp_991
    unless $I5001 goto if4029_else8140 
    set $P5009, fb_tmp_991["identifier"]
    set $P5011, $P5009
    goto if4029_end8141
  if4029_else8140:
    null $P5010
    set $P5011, $P5010
  if4029_end8141:
    unless_null $P5011, vivi_40328146
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_40328146:
    repr_clone $P5002, $P5011
    set $P101, $P5002
.annotate 'line', 2918
    find_lex $P5013, "$/"
    $P5014 = "&lexical_package_lookup"($P101, $P5013)
    store_lex "$var", $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::op>" :subid("cuid_322_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2930
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@args", $P101 
    .lex "$pirop", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_996 
    .local pmc fb_tmp_997 
    .local pmc fb_tmp_998 
    .local pmc fb_tmp_999 
    .local pmc fb_tmp_1000 
    .local pmc pkg_lookup_tmp_278 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback8164
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback8164:
    set fb_tmp_996, _lex_param_1
    repr_defined $I5001, fb_tmp_996
    unless $I5001 goto if4041_else8162 
    set $P5004, fb_tmp_996["args"]
    set $P5006, $P5004
    goto if4041_end8163
  if4041_else8162:
    null $P5005
    set $P5006, $P5005
  if4041_end8163:
    unless_null $P5006, vivi_40428165
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_40428165:
    unless $P5006 goto if4040_else8160 
.annotate 'line', 2931
    unless_null _lex_param_1, fallback8170
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5008
  fallback8170:
    set fb_tmp_998, _lex_param_1
    repr_defined $I5003, fb_tmp_998
    unless $I5003 goto if4044_else8168 
    set $P5009, fb_tmp_998["args"]
    set $P5011, $P5009
    goto if4044_end8169
  if4044_else8168:
    null $P5010
    set $P5011, $P5010
  if4044_end8169:
    unless_null $P5011, vivi_40458171
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_40458171:
    set fb_tmp_997, $P5011
    repr_defined $I5002, fb_tmp_997
    unless $I5002 goto if4043_else8166 
    set $P5013, fb_tmp_997[0]
    set $P5015, $P5013
    goto if4043_end8167
  if4043_else8166:
    null $P5014
    set $P5015, $P5014
  if4043_end8167:
    unless_null $P5015, vivi_40468172
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_40468172:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."list"()
    set $P5020, $P5018
    goto if4040_end8161
  if4040_else8160:
    new $P5019, 'ResizablePMCArray'
    set $P5020, $P5019
  if4040_end8161:
    set $P101, $P5020
    unless_null _lex_param_1, fallback8175
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5021
  fallback8175:
    set fb_tmp_999, _lex_param_1
    repr_defined $I5004, fb_tmp_999
    unless $I5004 goto if4047_else8173 
    set $P5022, fb_tmp_999["op"]
    set $P5024, $P5022
    goto if4047_end8174
  if4047_else8173:
    null $P5023
    set $P5024, $P5023
  if4047_end8174:
    unless_null $P5024, vivi_40488176
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5024, $P5025
  vivi_40488176:
    set $S5001, $P5024
    box $P5026, $S5001
    set $P102, $P5026
    set $S5003, $P102
    split $P5027, "__", $S5003
    join $S5002, " ", $P5027
    box $P5028, $S5002
    set $P102, $P5028
.annotate 'line', 2934
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_278, $P5030
    get_who $P5031, pkg_lookup_tmp_278
    exists $I5006, $P5031["QAST"]
    unless $I5006 goto if4050_else8179 
    get_who $P5033, pkg_lookup_tmp_278
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if4050_end8180
  if4050_else8179:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if4050_end8180:
    get_who $P5029, $P5035
    set fb_tmp_1000, $P5029
    repr_defined $I5005, fb_tmp_1000
    unless $I5005 goto if4049_else8177 
    set $P5036, fb_tmp_1000["VM"]
    set $P5038, $P5036
    goto if4049_end8178
  if4049_else8177:
    null $P5037
    set $P5038, $P5037
  if4049_end8178:
    unless_null $P5038, vivi_40518181
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_40518181:
    $P5040 = $P5038."new"($P101 :flat, $P102 :named("pirop"), _lex_param_1 :named("node"))
    $P5041 = _lex_param_1."!make"($P5040)
    .return ($P5041) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<pir::const>" :subid("cuid_323_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2937
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1001 
    .local pmc pkg_lookup_tmp_279 
    .local pmc fb_tmp_1002 
.annotate 'line', 2938
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_279, $P5002
    get_who $P5003, pkg_lookup_tmp_279
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4053_else8184 
    get_who $P5005, pkg_lookup_tmp_279
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4053_end8185
  if4053_else8184:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4053_end8185:
    get_who $P5001, $P5007
    set fb_tmp_1001, $P5001
    repr_defined $I5001, fb_tmp_1001
    unless $I5001 goto if4052_else8182 
    set $P5008, fb_tmp_1001["VM"]
    set $P5010, $P5008
    goto if4052_end8183
  if4052_else8182:
    null $P5009
    set $P5010, $P5009
  if4052_end8183:
    unless_null $P5010, vivi_40548186
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_40548186:
    unless_null _lex_param_1, fallback8189
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8189:
    set fb_tmp_1002, _lex_param_1
    repr_defined $I5003, fb_tmp_1002
    unless $I5003 goto if4055_else8187 
    set $P5013, fb_tmp_1002["const"]
    set $P5015, $P5013
    goto if4055_end8188
  if4055_else8187:
    null $P5014
    set $P5015, $P5014
  if4055_end8188:
    unless_null $P5015, vivi_40568190
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_40568190:
    set $S5001, $P5015
    $P5017 = $P5010."new"($S5001 :named("pirconst"))
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::op>" :subid("cuid_324_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2941
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$op", $P101 
    .lex "@args", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1003 
    .local pmc fb_tmp_1004 
    .local pmc fb_tmp_1005 
    .local pmc fb_tmp_1006 
    .local pmc fb_tmp_1007 
    .local pmc pkg_lookup_tmp_280 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
    unless_null _lex_param_1, fallback8193
    nqp_get_sc_object $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5004
  fallback8193:
    set fb_tmp_1003, _lex_param_1
    repr_defined $I5001, fb_tmp_1003
    unless $I5001 goto if4057_else8191 
    set $P5005, fb_tmp_1003["op"]
    set $P5007, $P5005
    goto if4057_end8192
  if4057_else8191:
    null $P5006
    set $P5007, $P5006
  if4057_end8192:
    unless_null $P5007, vivi_40588194
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_40588194:
    set $S5001, $P5007
    box $P5009, $S5001
    set $P101, $P5009
    unless_null _lex_param_1, fallback8199
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5010
  fallback8199:
    set fb_tmp_1004, _lex_param_1
    repr_defined $I5002, fb_tmp_1004
    unless $I5002 goto if4060_else8197 
    set $P5011, fb_tmp_1004["args"]
    set $P5013, $P5011
    goto if4060_end8198
  if4060_else8197:
    null $P5012
    set $P5013, $P5012
  if4060_end8198:
    unless_null $P5013, vivi_40618200
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_40618200:
    unless $P5013 goto if4059_else8195 
.annotate 'line', 2943
    unless_null _lex_param_1, fallback8205
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5015
  fallback8205:
    set fb_tmp_1006, _lex_param_1
    repr_defined $I5004, fb_tmp_1006
    unless $I5004 goto if4063_else8203 
    set $P5016, fb_tmp_1006["args"]
    set $P5018, $P5016
    goto if4063_end8204
  if4063_else8203:
    null $P5017
    set $P5018, $P5017
  if4063_end8204:
    unless_null $P5018, vivi_40648206
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_40648206:
    set fb_tmp_1005, $P5018
    repr_defined $I5003, fb_tmp_1005
    unless $I5003 goto if4062_else8201 
    set $P5020, fb_tmp_1005[0]
    set $P5022, $P5020
    goto if4062_end8202
  if4062_else8201:
    null $P5021
    set $P5022, $P5021
  if4062_end8202:
    unless_null $P5022, vivi_40658207
    nqp_get_sc_object $P5023, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5023
  vivi_40658207:
    $P5024 = $P5022."ast"()
    $P5025 = $P5024."list"()
    set $P5027, $P5025
    goto if4059_end8196
  if4059_else8195:
    new $P5026, 'ResizablePMCArray'
    set $P5027, $P5026
  if4059_end8196:
    set $P102, $P5027
.annotate 'line', 2944
    nqp_get_sc_object $P5029, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_280, $P5029
    get_who $P5030, pkg_lookup_tmp_280
    exists $I5006, $P5030["QAST"]
    unless $I5006 goto if4067_else8210 
    get_who $P5032, pkg_lookup_tmp_280
    set $P5031, $P5032["QAST"]
    set $P5034, $P5031
    goto if4067_end8211
  if4067_else8210:
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5033
  if4067_end8211:
    get_who $P5028, $P5034
    set fb_tmp_1007, $P5028
    repr_defined $I5005, fb_tmp_1007
    unless $I5005 goto if4066_else8208 
    set $P5035, fb_tmp_1007["Op"]
    set $P5037, $P5035
    goto if4066_end8209
  if4066_else8208:
    null $P5036
    set $P5037, $P5036
  if4066_end8209:
    unless_null $P5037, vivi_40688212
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_40688212:
    $P5039 = $P5037."new"($P102 :flat, $P101 :named("op"), _lex_param_1 :named("node"))
    set $P103, $P5039
.annotate 'line', 2945
    $P5040 = _lex_param_1."!make"($P103)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<nqp::const>" :subid("cuid_325_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2948
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1008 
    .local pmc pkg_lookup_tmp_281 
    .local pmc fb_tmp_1009 
.annotate 'line', 2949
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_281, $P5002
    get_who $P5003, pkg_lookup_tmp_281
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4070_else8215 
    get_who $P5005, pkg_lookup_tmp_281
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4070_end8216
  if4070_else8215:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4070_end8216:
    get_who $P5001, $P5007
    set fb_tmp_1008, $P5001
    repr_defined $I5001, fb_tmp_1008
    unless $I5001 goto if4069_else8213 
    set $P5008, fb_tmp_1008["Op"]
    set $P5010, $P5008
    goto if4069_end8214
  if4069_else8213:
    null $P5009
    set $P5010, $P5009
  if4069_end8214:
    unless_null $P5010, vivi_40718217
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_40718217:
    unless_null _lex_param_1, fallback8220
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8220:
    set fb_tmp_1009, _lex_param_1
    repr_defined $I5003, fb_tmp_1009
    unless $I5003 goto if4072_else8218 
    set $P5013, fb_tmp_1009["const"]
    set $P5015, $P5013
    goto if4072_end8219
  if4072_else8218:
    null $P5014
    set $P5015, $P5014
  if4072_end8219:
    unless_null $P5015, vivi_40738221
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_40738221:
    set $S5001, $P5015
    $P5017 = $P5010."new"("const" :named("op"), $S5001 :named("name"))
    $P5018 = _lex_param_1."!make"($P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<onlystar>" :subid("cuid_326_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2952
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$dc_name", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1010 
    .local pmc pkg_lookup_tmp_282 
    .local pmc fb_tmp_1011 
    .local pmc pkg_lookup_tmp_283 
    .local pmc fb_tmp_1012 
    .local pmc pkg_lookup_tmp_284 
    .local pmc fb_tmp_1013 
    .local pmc pkg_lookup_tmp_285 
    .local pmc fb_tmp_1014 
    .local pmc pkg_lookup_tmp_286 
    .local pmc fb_tmp_1015 
    .local pmc pkg_lookup_tmp_287 
    .local pmc fb_tmp_1016 
    .local pmc pkg_lookup_tmp_288 
    .local pmc fb_tmp_1017 
    .local pmc pkg_lookup_tmp_289 
    .local pmc fb_tmp_1018 
    .local pmc pkg_lookup_tmp_290 
    .local pmc fb_tmp_1019 
    .local pmc pkg_lookup_tmp_291 
    .local pmc fb_tmp_1020 
    .local pmc pkg_lookup_tmp_292 
    .local pmc fb_tmp_1021 
    .local pmc fb_tmp_1022 
    .local pmc pkg_lookup_tmp_293 
    .local pmc fb_tmp_1023 
    .local pmc pkg_lookup_tmp_294 
    .local pmc fb_tmp_1024 
    .local pmc pkg_lookup_tmp_295 
    .local pmc fb_tmp_1025 
    .local pmc pkg_lookup_tmp_296 
    .local pmc fb_tmp_1026 
    .local pmc pkg_lookup_tmp_297 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2953
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_282, $P5003
    get_who $P5004, pkg_lookup_tmp_282
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if4075_else8224 
    get_who $P5006, pkg_lookup_tmp_282
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if4075_end8225
  if4075_else8224:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if4075_end8225:
    get_who $P5002, $P5008
    set fb_tmp_1010, $P5002
    repr_defined $I5001, fb_tmp_1010
    unless $I5001 goto if4074_else8222 
    set $P5009, fb_tmp_1010["Node"]
    set $P5011, $P5009
    goto if4074_end8223
  if4074_else8222:
    null $P5010
    set $P5011, $P5010
  if4074_end8223:
    unless_null $P5011, vivi_40768226
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_40768226:
    $P5013 = $P5011."unique"("dispatch_cap")
    set $P101, $P5013
.annotate 'line', 2954
    nqp_get_sc_object $P5015, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_283, $P5015
    get_who $P5016, pkg_lookup_tmp_283
    exists $I5004, $P5016["QAST"]
    unless $I5004 goto if4078_else8229 
    get_who $P5018, pkg_lookup_tmp_283
    set $P5017, $P5018["QAST"]
    set $P5020, $P5017
    goto if4078_end8230
  if4078_else8229:
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5020, $P5019
  if4078_end8230:
    get_who $P5014, $P5020
    set fb_tmp_1011, $P5014
    repr_defined $I5003, fb_tmp_1011
    unless $I5003 goto if4077_else8227 
    set $P5021, fb_tmp_1011["Stmts"]
    set $P5023, $P5021
    goto if4077_end8228
  if4077_else8227:
    null $P5022
    set $P5023, $P5022
  if4077_end8228:
    unless_null $P5023, vivi_40798231
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_40798231:
.annotate 'line', 2955
    nqp_get_sc_object $P5026, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_284, $P5026
    get_who $P5027, pkg_lookup_tmp_284
    exists $I5006, $P5027["QAST"]
    unless $I5006 goto if4081_else8234 
    get_who $P5029, pkg_lookup_tmp_284
    set $P5028, $P5029["QAST"]
    set $P5031, $P5028
    goto if4081_end8235
  if4081_else8234:
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5030
  if4081_end8235:
    get_who $P5025, $P5031
    set fb_tmp_1012, $P5025
    repr_defined $I5005, fb_tmp_1012
    unless $I5005 goto if4080_else8232 
    set $P5032, fb_tmp_1012["Op"]
    set $P5034, $P5032
    goto if4080_end8233
  if4080_else8232:
    null $P5033
    set $P5034, $P5033
  if4080_end8233:
    unless_null $P5034, vivi_40828236
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5035
  vivi_40828236:
.annotate 'line', 2957
    nqp_get_sc_object $P5037, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_285, $P5037
    get_who $P5038, pkg_lookup_tmp_285
    exists $I5008, $P5038["QAST"]
    unless $I5008 goto if4084_else8239 
    get_who $P5040, pkg_lookup_tmp_285
    set $P5039, $P5040["QAST"]
    set $P5042, $P5039
    goto if4084_end8240
  if4084_else8239:
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5041
  if4084_end8240:
    get_who $P5036, $P5042
    set fb_tmp_1013, $P5036
    repr_defined $I5007, fb_tmp_1013
    unless $I5007 goto if4083_else8237 
    set $P5043, fb_tmp_1013["Var"]
    set $P5045, $P5043
    goto if4083_end8238
  if4083_else8237:
    null $P5044
    set $P5045, $P5044
  if4083_end8238:
    unless_null $P5045, vivi_40858241
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5046
  vivi_40858241:
    $P5047 = $P5045."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2958
    nqp_get_sc_object $P5049, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_286, $P5049
    get_who $P5050, pkg_lookup_tmp_286
    exists $I5010, $P5050["QAST"]
    unless $I5010 goto if4087_else8244 
    get_who $P5052, pkg_lookup_tmp_286
    set $P5051, $P5052["QAST"]
    set $P5054, $P5051
    goto if4087_end8245
  if4087_else8244:
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5054, $P5053
  if4087_end8245:
    get_who $P5048, $P5054
    set fb_tmp_1014, $P5048
    repr_defined $I5009, fb_tmp_1014
    unless $I5009 goto if4086_else8242 
    set $P5055, fb_tmp_1014["Var"]
    set $P5057, $P5055
    goto if4086_end8243
  if4086_else8242:
    null $P5056
    set $P5057, $P5056
  if4086_end8243:
    unless_null $P5057, vivi_40888246
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_40888246:
    $P5059 = $P5057."new"("CURRENT_DISPATCH_CAPTURE" :named("name"), "lexical" :named("scope"))
    $P5060 = $P5034."new"($P5047, $P5059, "bind" :named("op"))
.annotate 'line', 2960
    nqp_get_sc_object $P5062, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_287, $P5062
    get_who $P5063, pkg_lookup_tmp_287
    exists $I5012, $P5063["QAST"]
    unless $I5012 goto if4090_else8249 
    get_who $P5065, pkg_lookup_tmp_287
    set $P5064, $P5065["QAST"]
    set $P5067, $P5064
    goto if4090_end8250
  if4090_else8249:
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5067, $P5066
  if4090_end8250:
    get_who $P5061, $P5067
    set fb_tmp_1015, $P5061
    repr_defined $I5011, fb_tmp_1015
    unless $I5011 goto if4089_else8247 
    set $P5068, fb_tmp_1015["Op"]
    set $P5070, $P5068
    goto if4089_end8248
  if4089_else8247:
    null $P5069
    set $P5070, $P5069
  if4089_end8248:
    unless_null $P5070, vivi_40918251
    nqp_get_sc_object $P5071, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5070, $P5071
  vivi_40918251:
.annotate 'line', 2962
    nqp_get_sc_object $P5073, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_288, $P5073
    get_who $P5074, pkg_lookup_tmp_288
    exists $I5014, $P5074["QAST"]
    unless $I5014 goto if4093_else8254 
    get_who $P5076, pkg_lookup_tmp_288
    set $P5075, $P5076["QAST"]
    set $P5078, $P5075
    goto if4093_end8255
  if4093_else8254:
    nqp_get_sc_object $P5077, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5078, $P5077
  if4093_end8255:
    get_who $P5072, $P5078
    set fb_tmp_1016, $P5072
    repr_defined $I5013, fb_tmp_1016
    unless $I5013 goto if4092_else8252 
    set $P5079, fb_tmp_1016["Op"]
    set $P5081, $P5079
    goto if4092_end8253
  if4092_else8252:
    null $P5080
    set $P5081, $P5080
  if4092_end8253:
    unless_null $P5081, vivi_40948256
    nqp_get_sc_object $P5082, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5081, $P5082
  vivi_40948256:
.annotate 'line', 2964
    nqp_get_sc_object $P5084, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_289, $P5084
    get_who $P5085, pkg_lookup_tmp_289
    exists $I5016, $P5085["QAST"]
    unless $I5016 goto if4096_else8259 
    get_who $P5087, pkg_lookup_tmp_289
    set $P5086, $P5087["QAST"]
    set $P5089, $P5086
    goto if4096_end8260
  if4096_else8259:
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5089, $P5088
  if4096_end8260:
    get_who $P5083, $P5089
    set fb_tmp_1017, $P5083
    repr_defined $I5015, fb_tmp_1017
    unless $I5015 goto if4095_else8257 
    set $P5090, fb_tmp_1017["Op"]
    set $P5092, $P5090
    goto if4095_end8258
  if4095_else8257:
    null $P5091
    set $P5092, $P5091
  if4095_end8258:
    unless_null $P5092, vivi_40978261
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5092, $P5093
  vivi_40978261:
.annotate 'line', 2966
    nqp_get_sc_object $P5095, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_290, $P5095
    get_who $P5096, pkg_lookup_tmp_290
    exists $I5018, $P5096["QAST"]
    unless $I5018 goto if4099_else8264 
    get_who $P5098, pkg_lookup_tmp_290
    set $P5097, $P5098["QAST"]
    set $P5100, $P5097
    goto if4099_end8265
  if4099_else8264:
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5100, $P5099
  if4099_end8265:
    get_who $P5094, $P5100
    set fb_tmp_1018, $P5094
    repr_defined $I5017, fb_tmp_1018
    unless $I5017 goto if4098_else8262 
    set $P5101, fb_tmp_1018["Var"]
    set $P5103, $P5101
    goto if4098_end8263
  if4098_else8262:
    null $P5102
    set $P5103, $P5102
  if4098_end8263:
    unless_null $P5103, vivi_41008266
    nqp_get_sc_object $P5104, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5103, $P5104
  vivi_41008266:
.annotate 'line', 2968
    nqp_get_sc_object $P5106, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_291, $P5106
    get_who $P5107, pkg_lookup_tmp_291
    exists $I5020, $P5107["QAST"]
    unless $I5020 goto if4102_else8269 
    get_who $P5109, pkg_lookup_tmp_291
    set $P5108, $P5109["QAST"]
    set $P5111, $P5108
    goto if4102_end8270
  if4102_else8269:
    nqp_get_sc_object $P5110, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5110
  if4102_end8270:
    get_who $P5105, $P5111
    set fb_tmp_1019, $P5105
    repr_defined $I5019, fb_tmp_1019
    unless $I5019 goto if4101_else8267 
    set $P5112, fb_tmp_1019["Var"]
    set $P5114, $P5112
    goto if4101_end8268
  if4101_else8267:
    null $P5113
    set $P5114, $P5113
  if4101_end8268:
    unless_null $P5114, vivi_41038271
    nqp_get_sc_object $P5115, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5114, $P5115
  vivi_41038271:
    $P5116 = $P5114."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2969
    nqp_get_sc_object $P5118, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_292, $P5118
    get_who $P5119, pkg_lookup_tmp_292
    exists $I5022, $P5119["QAST"]
    unless $I5022 goto if4105_else8274 
    get_who $P5121, pkg_lookup_tmp_292
    set $P5120, $P5121["QAST"]
    set $P5123, $P5120
    goto if4105_end8275
  if4105_else8274:
    nqp_get_sc_object $P5122, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5123, $P5122
  if4105_end8275:
    get_who $P5117, $P5123
    set fb_tmp_1020, $P5117
    repr_defined $I5021, fb_tmp_1020
    unless $I5021 goto if4104_else8272 
    set $P5124, fb_tmp_1020["WVal"]
    set $P5126, $P5124
    goto if4104_end8273
  if4104_else8272:
    null $P5125
    set $P5126, $P5125
  if4104_end8273:
    unless_null $P5126, vivi_41068276
    nqp_get_sc_object $P5127, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5127
  vivi_41068276:
    find_dynamic_lex $P5128, "$*W"
    unless_null $P5128, fallback8277
    nqp_get_sc_object $P5130, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5129, $P5130
    set fb_tmp_1021, $P5129
    repr_defined $I5023, fb_tmp_1021
    unless $I5023 goto if4107_else8278 
    set $P5131, fb_tmp_1021["$W"]
    set $P5133, $P5131
    goto if4107_end8279
  if4107_else8278:
    null $P5132
    set $P5133, $P5132
  if4107_end8279:
    unless_null $P5133, vivi_41088280
    nqp_get_sc_object $P5134, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5133, $P5134
  vivi_41088280:
    unless_null $P5133, vivi_41098281
    die "Contextual $*W not found"
    box $P5135, "Contextual $*W not found"
    set $P5133, $P5135
  vivi_41098281:
    set $P5128, $P5133
  fallback8277:
    new $P5136, 'ResizablePMCArray'
    box $P5137, "NQPRoutine"
    push $P5136, $P5137
    $P5138 = $P5128."find_sym"($P5136)
    $P5139 = $P5126."new"($P5138 :named("value"))
    $P5140 = $P5103."new"($P5116, $P5139, "$!dispatch_cache" :named("name"), "attribute" :named("scope"))
.annotate 'line', 2971
    nqp_get_sc_object $P5142, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_293, $P5142
    get_who $P5143, pkg_lookup_tmp_293
    exists $I5025, $P5143["QAST"]
    unless $I5025 goto if4111_else8284 
    get_who $P5145, pkg_lookup_tmp_293
    set $P5144, $P5145["QAST"]
    set $P5147, $P5144
    goto if4111_end8285
  if4111_else8284:
    nqp_get_sc_object $P5146, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5147, $P5146
  if4111_end8285:
    get_who $P5141, $P5147
    set fb_tmp_1022, $P5141
    repr_defined $I5024, fb_tmp_1022
    unless $I5024 goto if4110_else8282 
    set $P5148, fb_tmp_1022["Var"]
    set $P5150, $P5148
    goto if4110_end8283
  if4110_else8282:
    null $P5149
    set $P5150, $P5149
  if4110_end8283:
    unless_null $P5150, vivi_41128286
    nqp_get_sc_object $P5151, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5150, $P5151
  vivi_41128286:
    $P5152 = $P5150."new"($P101 :named("name"), "local" :named("scope"))
    $P5153 = $P5092."new"($P5140, $P5152, "multicachefind" :named("op"))
.annotate 'line', 2973
    nqp_get_sc_object $P5155, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_294, $P5155
    get_who $P5156, pkg_lookup_tmp_294
    exists $I5027, $P5156["QAST"]
    unless $I5027 goto if4114_else8289 
    get_who $P5158, pkg_lookup_tmp_294
    set $P5157, $P5158["QAST"]
    set $P5160, $P5157
    goto if4114_end8290
  if4114_else8289:
    nqp_get_sc_object $P5159, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5160, $P5159
  if4114_end8290:
    get_who $P5154, $P5160
    set fb_tmp_1023, $P5154
    repr_defined $I5026, fb_tmp_1023
    unless $I5026 goto if4113_else8287 
    set $P5161, fb_tmp_1023["Op"]
    set $P5163, $P5161
    goto if4113_end8288
  if4113_else8287:
    null $P5162
    set $P5163, $P5162
  if4113_end8288:
    unless_null $P5163, vivi_41158291
    nqp_get_sc_object $P5164, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5163, $P5164
  vivi_41158291:
.annotate 'line', 2975
    nqp_get_sc_object $P5166, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_295, $P5166
    get_who $P5167, pkg_lookup_tmp_295
    exists $I5029, $P5167["QAST"]
    unless $I5029 goto if4117_else8294 
    get_who $P5169, pkg_lookup_tmp_295
    set $P5168, $P5169["QAST"]
    set $P5171, $P5168
    goto if4117_end8295
  if4117_else8294:
    nqp_get_sc_object $P5170, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5171, $P5170
  if4117_end8295:
    get_who $P5165, $P5171
    set fb_tmp_1024, $P5165
    repr_defined $I5028, fb_tmp_1024
    unless $I5028 goto if4116_else8292 
    set $P5172, fb_tmp_1024["Var"]
    set $P5174, $P5172
    goto if4116_end8293
  if4116_else8292:
    null $P5173
    set $P5174, $P5173
  if4116_end8293:
    unless_null $P5174, vivi_41188296
    nqp_get_sc_object $P5175, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5174, $P5175
  vivi_41188296:
    $P5176 = $P5174."new"("&*CURRENT_DISPATCHER" :named("name"), "lexical" :named("scope"))
.annotate 'line', 2976
    nqp_get_sc_object $P5178, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_296, $P5178
    get_who $P5179, pkg_lookup_tmp_296
    exists $I5031, $P5179["QAST"]
    unless $I5031 goto if4120_else8299 
    get_who $P5181, pkg_lookup_tmp_296
    set $P5180, $P5181["QAST"]
    set $P5183, $P5180
    goto if4120_end8300
  if4120_else8299:
    nqp_get_sc_object $P5182, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5183, $P5182
  if4120_end8300:
    get_who $P5177, $P5183
    set fb_tmp_1025, $P5177
    repr_defined $I5030, fb_tmp_1025
    unless $I5030 goto if4119_else8297 
    set $P5184, fb_tmp_1025["Var"]
    set $P5186, $P5184
    goto if4119_end8298
  if4119_else8297:
    null $P5185
    set $P5186, $P5185
  if4119_end8298:
    unless_null $P5186, vivi_41218301
    nqp_get_sc_object $P5187, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5186, $P5187
  vivi_41218301:
    $P5188 = $P5186."new"($P101 :named("name"), "local" :named("scope"))
    $P5189 = $P5163."new"($P5176, $P5188, "callmethod" :named("op"), "dispatch" :named("name"))
    $P5190 = $P5081."new"($P5153, $P5189, "ifnull" :named("op"))
.annotate 'line', 2979
    nqp_get_sc_object $P5192, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_297, $P5192
    get_who $P5193, pkg_lookup_tmp_297
    exists $I5033, $P5193["QAST"]
    unless $I5033 goto if4123_else8304 
    get_who $P5195, pkg_lookup_tmp_297
    set $P5194, $P5195["QAST"]
    set $P5197, $P5194
    goto if4123_end8305
  if4123_else8304:
    nqp_get_sc_object $P5196, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5197, $P5196
  if4123_end8305:
    get_who $P5191, $P5197
    set fb_tmp_1026, $P5191
    repr_defined $I5032, fb_tmp_1026
    unless $I5032 goto if4122_else8302 
    set $P5198, fb_tmp_1026["Var"]
    set $P5200, $P5198
    goto if4122_end8303
  if4122_else8302:
    null $P5199
    set $P5200, $P5199
  if4122_end8303:
    unless_null $P5200, vivi_41248306
    nqp_get_sc_object $P5201, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5200, $P5201
  vivi_41248306:
    $P5202 = $P5200."new"($P101 :named("name"), "local" :named("scope"))
    $P5203 = $P5070."new"($P5190, $P5202, "invokewithcapture" :named("op"))
    $P5204 = $P5023."new"($P5060, $P5203)
    $P5205 = _lex_param_1."!make"($P5204)
    .return ($P5205) 
.end
.HLL "nqp"
.namespace []
.sub "args" :subid("cuid_327_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2983
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1027 
    unless_null _lex_param_1, fallback8309
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8309:
    set fb_tmp_1027, _lex_param_1
    repr_defined $I5001, fb_tmp_1027
    unless $I5001 goto if4125_else8307 
    set $P5002, fb_tmp_1027["arglist"]
    set $P5004, $P5002
    goto if4125_end8308
  if4125_else8307:
    null $P5003
    set $P5004, $P5003
  if4125_end8308:
    unless_null $P5004, vivi_41268310
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_41268310:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_328_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2985
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5088 = 'cuid_502_1361537952.49511' 
    capture_lex $P5088 
    .lex "$past", $P101 
    .lex "$i", $P102 
    .lex "$n", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1028 
    .local pmc pkg_lookup_tmp_298 
    .local pmc fb_tmp_1029 
    .local pmc fb_tmp_1032 
    .local pmc fb_tmp_1033 
    .local pmc pkg_lookup_tmp_300 
    .local pmc fb_tmp_1034 
    .local pmc fb_tmp_1035 
    .local pmc fb_tmp_1036 
    .local pmc fb_tmp_1037 
    .local pmc fb_tmp_1038 
    .local pmc fb_tmp_1039 
    .local pmc pkg_lookup_tmp_301 
    .local pmc fb_tmp_1040 
    .local pmc fb_tmp_1041 
    .local pmc tmp_2 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 2986
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_298, $P5005
    get_who $P5006, pkg_lookup_tmp_298
    exists $I5002, $P5006["QAST"]
    unless $I5002 goto if4128_else8313 
    get_who $P5008, pkg_lookup_tmp_298
    set $P5007, $P5008["QAST"]
    set $P5010, $P5007
    goto if4128_end8314
  if4128_else8313:
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5009
  if4128_end8314:
    get_who $P5004, $P5010
    set fb_tmp_1028, $P5004
    repr_defined $I5001, fb_tmp_1028
    unless $I5001 goto if4127_else8311 
    set $P5011, fb_tmp_1028["Op"]
    set $P5013, $P5011
    goto if4127_end8312
  if4127_else8311:
    null $P5012
    set $P5013, $P5012
  if4127_end8312:
    unless_null $P5013, vivi_41298315
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_41298315:
    $P5015 = $P5013."new"("call" :named("op"), _lex_param_1 :named("node"))
    set $P101, $P5015
    unless_null _lex_param_1, fallback8320
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5016
  fallback8320:
    set fb_tmp_1029, _lex_param_1
    repr_defined $I5003, fb_tmp_1029
    unless $I5003 goto if4131_else8318 
    set $P5017, fb_tmp_1029["EXPR"]
    set $P5019, $P5017
    goto if4131_end8319
  if4131_else8318:
    null $P5018
    set $P5019, $P5018
  if4131_end8319:
    unless_null $P5019, vivi_41328321
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5019, $P5020
  vivi_41328321:
    unless $P5019 goto if4130_end8317 
    .const 'Sub' $P5021 = 'cuid_502_1361537952.49511' 
    capture_lex $P5021
    $P5022 = $P5021()
  if4130_end8317:
    box $P5023, 0
    set $P102, $P5023
.annotate 'line', 2995
    $P5024 = $P101."list"()
    set $N5001, $P5024
    box $P5025, $N5001
    set $P103, $P5025
  while4141_test8340:
    set $N5002, $P102
    set $N5003, $P103
    islt $I5004, $N5002, $N5003
    box $P5086, $I5004
    set $P5085, $P5086
    unless $I5004 goto while4141_done8344 
  while4141_redo8342:
.annotate 'line', 2996
    set fb_tmp_1032, $P101
    repr_defined $I5006, fb_tmp_1032
    unless $I5006 goto if4144_else8349 
    set $I5007, $P102
    set $P5026, fb_tmp_1032[$I5007]
    set $P5028, $P5026
    goto if4144_end8350
  if4144_else8349:
    null $P5027
    set $P5028, $P5027
  if4144_end8350:
    unless_null $P5028, vivi_41458351
    nqp_get_sc_object $P5029, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5028, $P5029
  vivi_41458351:
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_300, $P5031
    get_who $P5032, pkg_lookup_tmp_300
    exists $I5009, $P5032["QAST"]
    unless $I5009 goto if4147_else8354 
    get_who $P5034, pkg_lookup_tmp_300
    set $P5033, $P5034["QAST"]
    set $P5036, $P5033
    goto if4147_end8355
  if4147_else8354:
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5035
  if4147_end8355:
    get_who $P5030, $P5036
    set fb_tmp_1033, $P5030
    repr_defined $I5008, fb_tmp_1033
    unless $I5008 goto if4146_else8352 
    set $P5037, fb_tmp_1033["Op"]
    set $P5039, $P5037
    goto if4146_end8353
  if4146_else8352:
    null $P5038
    set $P5039, $P5038
  if4146_end8353:
    unless_null $P5039, vivi_41488356
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_41488356:
    type_check $I5005, $P5028, $P5039
    set $I5013, $I5005
    unless $I5005 goto if4143_end8348 
.annotate 'line', 2997
    set fb_tmp_1034, $P101
    repr_defined $I5011, fb_tmp_1034
    unless $I5011 goto if4149_else8357 
    set $I5012, $P102
    set $P5041, fb_tmp_1034[$I5012]
    set $P5043, $P5041
    goto if4149_end8358
  if4149_else8357:
    null $P5042
    set $P5043, $P5042
  if4149_end8358:
    unless_null $P5043, vivi_41508359
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5043, $P5044
  vivi_41508359:
    $P5045 = $P5043."name"()
    set $S5001, $P5045
    iseq $I5010, $S5001, "&prefix:<|>"
    set $I5013, $I5010
  if4143_end8348:
    unless $I5013 goto if4142_end8346 
    set $I5014, $P102
    set fb_tmp_1036, $P101
    repr_defined $I5016, fb_tmp_1036
    unless $I5016 goto if4152_else8362 
    set $I5017, $P102
    set $P5046, fb_tmp_1036[$I5017]
    set $P5048, $P5046
    goto if4152_end8363
  if4152_else8362:
    null $P5047
    set $P5048, $P5047
  if4152_end8363:
    unless_null $P5048, vivi_41538364
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_41538364:
    set fb_tmp_1035, $P5048
    repr_defined $I5015, fb_tmp_1035
    unless $I5015 goto if4151_else8360 
    set $P5050, fb_tmp_1035[0]
    set $P5052, $P5050
    goto if4151_end8361
  if4151_else8360:
    null $P5051
    set $P5052, $P5051
  if4151_end8361:
    unless_null $P5052, vivi_41548365
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_41548365:
    set $P101[$I5014], $P5052
.annotate 'line', 2999
    set fb_tmp_1037, $P101
    repr_defined $I5018, fb_tmp_1037
    unless $I5018 goto if4155_else8366 
    set $I5019, $P102
    set $P5054, fb_tmp_1037[$I5019]
    set $P5056, $P5054
    goto if4155_end8367
  if4155_else8366:
    null $P5055
    set $P5056, $P5055
  if4155_end8367:
    unless_null $P5056, vivi_41568368
    nqp_get_sc_object $P5057, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5057
  vivi_41568368:
    $P5056."flat"(1)
    set fb_tmp_1038, $P101
    repr_defined $I5021, fb_tmp_1038
    unless $I5021 goto if4159_else8373 
    set $I5022, $P102
    set $P5058, fb_tmp_1038[$I5022]
    set $P5060, $P5058
    goto if4159_end8374
  if4159_else8373:
    null $P5059
    set $P5060, $P5059
  if4159_end8374:
    unless_null $P5060, vivi_41608375
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5061
  vivi_41608375:
    nqp_get_sc_object $P5063, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_301, $P5063
    get_who $P5064, pkg_lookup_tmp_301
    exists $I5024, $P5064["QAST"]
    unless $I5024 goto if4162_else8378 
    get_who $P5066, pkg_lookup_tmp_301
    set $P5065, $P5066["QAST"]
    set $P5068, $P5065
    goto if4162_end8379
  if4162_else8378:
    nqp_get_sc_object $P5067, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5068, $P5067
  if4162_end8379:
    get_who $P5062, $P5068
    set fb_tmp_1039, $P5062
    repr_defined $I5023, fb_tmp_1039
    unless $I5023 goto if4161_else8376 
    set $P5069, fb_tmp_1039["Var"]
    set $P5071, $P5069
    goto if4161_end8377
  if4161_else8376:
    null $P5070
    set $P5071, $P5070
  if4161_end8377:
    unless_null $P5071, vivi_41638380
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_41638380:
    type_check $I5020, $P5060, $P5071
    set $I5028, $I5020
    unless $I5020 goto if4158_end8372 
.annotate 'line', 3001
    set fb_tmp_1040, $P101
    repr_defined $I5026, fb_tmp_1040
    unless $I5026 goto if4164_else8381 
    set $I5027, $P102
    set $P5073, fb_tmp_1040[$I5027]
    set $P5075, $P5073
    goto if4164_end8382
  if4164_else8381:
    null $P5074
    set $P5075, $P5074
  if4164_end8382:
    unless_null $P5075, vivi_41658383
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_41658383:
    $P5077 = $P5075."name"()
    set $S5003, $P5077
    substr $S5002, $S5003, 0, 1
    iseq $I5025, $S5002, "%"
    set $I5028, $I5025
  if4158_end8372:
    box $P5084, $I5028
    set $P5083, $P5084
    unless $I5028 goto if4157_end8370 
.annotate 'line', 3000
    set fb_tmp_1041, $P101
    repr_defined $I5029, fb_tmp_1041
    unless $I5029 goto if4166_else8384 
    set $I5030, $P102
    set $P5078, fb_tmp_1041[$I5030]
    set $P5080, $P5078
    goto if4166_end8385
  if4166_else8384:
    null $P5079
    set $P5080, $P5079
  if4166_end8385:
    unless_null $P5080, vivi_41678386
    nqp_get_sc_object $P5081, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5080, $P5081
  vivi_41678386:
    $P5082 = $P5080."named"(1)
    set $P5083, $P5082
  if4157_end8370:
  if4142_end8346:
    set tmp_2, $P102
    set $N5005, tmp_2
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5085, $N5004
    set $P102, $P5085
    set $P5085, tmp_2
    goto while4141_test8340 
  while4141_done8344:
.annotate 'line', 3005
    $P5087 = _lex_param_1."!make"($P101)
    .return ($P5087) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_502_1361537952.49511") :anon :lex :outer("cuid_328_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2987
    .const 'Sub' $P5031 = 'cuid_501_1361537952.49511' 
    capture_lex $P5031 
    .lex "$expr", $P101 
    .local pmc fb_tmp_1030 
    .local pmc fb_tmp_1031 
    .local pmc pkg_lookup_tmp_299 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 2988
    find_lex $P5002, "$/"
    unless_null $P5002, fallback8324
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5002, $P5003
  fallback8324:
    set fb_tmp_1030, $P5002
    repr_defined $I5001, fb_tmp_1030
    unless $I5001 goto if4133_else8322 
    set $P5004, fb_tmp_1030["EXPR"]
    set $P5006, $P5004
    goto if4133_end8323
  if4133_else8322:
    null $P5005
    set $P5006, $P5005
  if4133_end8323:
    unless_null $P5006, vivi_41348325
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_41348325:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
    nqp_get_sc_object $P5010, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_299, $P5010
    get_who $P5011, pkg_lookup_tmp_299
    exists $I5004, $P5011["QAST"]
    unless $I5004 goto if4139_else8334 
    get_who $P5013, pkg_lookup_tmp_299
    set $P5012, $P5013["QAST"]
    set $P5015, $P5012
    goto if4139_end8335
  if4139_else8334:
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5014
  if4139_end8335:
    get_who $P5009, $P5015
    set fb_tmp_1031, $P5009
    repr_defined $I5003, fb_tmp_1031
    unless $I5003 goto if4138_else8332 
    set $P5016, fb_tmp_1031["Op"]
    set $P5018, $P5016
    goto if4138_end8333
  if4138_else8332:
    null $P5017
    set $P5018, $P5017
  if4138_end8333:
    unless_null $P5018, vivi_41408336
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_41408336:
    type_check $I5002, $P101, $P5018
    set $I5006, $I5002
    unless $I5002 goto if4137_end8331 
.annotate 'line', 2989
    $P5020 = $P101."name"()
    set $S5001, $P5020
    iseq $I5005, $S5001, "&infix:<,>"
    set $I5006, $I5005
  if4137_end8331:
    set $I5008, $I5006
    unless $I5006 goto if4136_end8329 
    $P5021 = $P101."named"()
    isfalse $I5007, $P5021
    set $I5008, $I5007
  if4136_end8329:
    unless $I5008 goto if4135_else8326 
.annotate 'line', 2990
    $P5025 = $P101."list"()
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next8337:
    unless $P5024, for_done8339
    shift $P5027, $P5024
  for_redo8338:
    .const 'Sub' $P5026 = 'cuid_501_1361537952.49511' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next8337
  for_done8339:
    set $P5030, $P5022
    goto if4135_end8327
  if4135_else8326:
.annotate 'line', 2992
    find_lex $P5028, "$past"
    $P5029 = $P5028."push"($P101)
    set $P5030, $P5029
  if4135_end8327:
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_501_1361537952.49511") :anon :lex :outer("cuid_502_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 2990
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$past"
    $P5002 = $P5001."push"(_lex_param_0)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<multi_declarator>" :subid("cuid_329_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3008
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1042 
    unless_null _lex_param_1, fallback8389
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8389:
    set fb_tmp_1042, _lex_param_1
    repr_defined $I5001, fb_tmp_1042
    unless $I5001 goto if4168_else8387 
    set $P5002, fb_tmp_1042["multi_declarator"]
    set $P5004, $P5002
    goto if4168_end8388
  if4168_else8387:
    null $P5003
    set $P5004, $P5003
  if4168_end8388:
    unless_null $P5004, vivi_41698390
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_41698390:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<value>" :subid("cuid_330_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3010
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1043 
    unless_null _lex_param_1, fallback8393
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8393:
    set fb_tmp_1043, _lex_param_1
    repr_defined $I5001, fb_tmp_1043
    unless $I5001 goto if4170_else8391 
    set $P5002, fb_tmp_1043["value"]
    set $P5004, $P5002
    goto if4170_end8392
  if4170_else8391:
    null $P5003
    set $P5004, $P5003
  if4170_end8392:
    unless_null $P5004, vivi_41718394
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_41718394:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<( )>" :subid("cuid_331_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3012
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1044 
    .local pmc fb_tmp_1045 
    .local pmc fb_tmp_1046 
    .local pmc fb_tmp_1047 
    .local pmc pkg_lookup_tmp_302 
.annotate 'line', 3013
    unless_null _lex_param_1, fallback8399
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8399:
    set fb_tmp_1044, _lex_param_1
    repr_defined $I5001, fb_tmp_1044
    unless $I5001 goto if4173_else8397 
    set $P5002, fb_tmp_1044["EXPR"]
    set $P5004, $P5002
    goto if4173_end8398
  if4173_else8397:
    null $P5003
    set $P5004, $P5003
  if4173_end8398:
    unless_null $P5004, vivi_41748400
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_41748400:
    unless $P5004 goto if4172_else8395 
.annotate 'line', 3014
    unless_null _lex_param_1, fallback8405
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback8405:
    set fb_tmp_1046, _lex_param_1
    repr_defined $I5003, fb_tmp_1046
    unless $I5003 goto if4176_else8403 
    set $P5007, fb_tmp_1046["EXPR"]
    set $P5009, $P5007
    goto if4176_end8404
  if4176_else8403:
    null $P5008
    set $P5009, $P5008
  if4176_end8404:
    unless_null $P5009, vivi_41778406
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_41778406:
    set fb_tmp_1045, $P5009
    repr_defined $I5002, fb_tmp_1045
    unless $I5002 goto if4175_else8401 
    set $P5011, fb_tmp_1045[0]
    set $P5013, $P5011
    goto if4175_end8402
  if4175_else8401:
    null $P5012
    set $P5013, $P5012
  if4175_end8402:
    unless_null $P5013, vivi_41788407
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_41788407:
    $P5015 = $P5013."ast"()
    set $P5028, $P5015
    goto if4172_end8396
  if4172_else8395:
.annotate 'line', 3015
    nqp_get_sc_object $P5017, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_302, $P5017
    get_who $P5018, pkg_lookup_tmp_302
    exists $I5005, $P5018["QAST"]
    unless $I5005 goto if4180_else8410 
    get_who $P5020, pkg_lookup_tmp_302
    set $P5019, $P5020["QAST"]
    set $P5022, $P5019
    goto if4180_end8411
  if4180_else8410:
    nqp_get_sc_object $P5021, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5022, $P5021
  if4180_end8411:
    get_who $P5016, $P5022
    set fb_tmp_1047, $P5016
    repr_defined $I5004, fb_tmp_1047
    unless $I5004 goto if4179_else8408 
    set $P5023, fb_tmp_1047["Op"]
    set $P5025, $P5023
    goto if4179_end8409
  if4179_else8408:
    null $P5024
    set $P5025, $P5024
  if4179_end8409:
    unless_null $P5025, vivi_41818412
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5025, $P5026
  vivi_41818412:
    $P5027 = $P5025."new"("list" :named("op"), _lex_param_1 :named("node"))
    set $P5028, $P5027
  if4172_end8396:
    $P5029 = _lex_param_1."!make"($P5028)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<[ ]>" :subid("cuid_332_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3018
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1048 
    .local pmc fb_tmp_1049 
    .local pmc fb_tmp_1050 
    .local pmc fb_tmp_1051 
    .local pmc pkg_lookup_tmp_303 
    .local pmc fb_tmp_1052 
    .local pmc pkg_lookup_tmp_304 
    .local pmc fb_tmp_1053 
    .local pmc pkg_lookup_tmp_305 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback8417
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback8417:
    set fb_tmp_1048, _lex_param_1
    repr_defined $I5001, fb_tmp_1048
    unless $I5001 goto if4183_else8415 
    set $P5003, fb_tmp_1048["EXPR"]
    set $P5005, $P5003
    goto if4183_end8416
  if4183_else8415:
    null $P5004
    set $P5005, $P5004
  if4183_end8416:
    unless_null $P5005, vivi_41848418
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_41848418:
    unless $P5005 goto if4182_else8413 
.annotate 'line', 3020
.annotate 'line', 3021
    unless_null _lex_param_1, fallback8423
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5007
  fallback8423:
    set fb_tmp_1050, _lex_param_1
    repr_defined $I5003, fb_tmp_1050
    unless $I5003 goto if4186_else8421 
    set $P5008, fb_tmp_1050["EXPR"]
    set $P5010, $P5008
    goto if4186_end8422
  if4186_else8421:
    null $P5009
    set $P5010, $P5009
  if4186_end8422:
    unless_null $P5010, vivi_41878424
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_41878424:
    set fb_tmp_1049, $P5010
    repr_defined $I5002, fb_tmp_1049
    unless $I5002 goto if4185_else8419 
    set $P5012, fb_tmp_1049[0]
    set $P5014, $P5012
    goto if4185_end8420
  if4185_else8419:
    null $P5013
    set $P5014, $P5013
  if4185_end8420:
    unless_null $P5014, vivi_41888425
    nqp_get_sc_object $P5015, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5015
  vivi_41888425:
    $P5016 = $P5014."ast"()
    set $P101, $P5016
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_303, $P5018
    get_who $P5019, pkg_lookup_tmp_303
    exists $I5006, $P5019["QAST"]
    unless $I5006 goto if4192_else8432 
    get_who $P5021, pkg_lookup_tmp_303
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if4192_end8433
  if4192_else8432:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if4192_end8433:
    get_who $P5017, $P5023
    set fb_tmp_1051, $P5017
    repr_defined $I5005, fb_tmp_1051
    unless $I5005 goto if4191_else8430 
    set $P5024, fb_tmp_1051["Op"]
    set $P5026, $P5024
    goto if4191_end8431
  if4191_else8430:
    null $P5025
    set $P5026, $P5025
  if4191_end8431:
    unless_null $P5026, vivi_41938434
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_41938434:
    type_check $I5004, $P101, $P5026
    set $I5008, $I5004
    unless $I5004 goto if4190_end8429 
.annotate 'line', 3022
    $P5028 = $P101."name"()
    set $S5001, $P5028
    iseq $I5007, $S5001, "&infix:<,>"
    set $I5008, $I5007
  if4190_end8429:
    box $P5042, $I5008
    set $P5041, $P5042
    if $I5008 goto unless4189_end8427 
.annotate 'line', 3023
    nqp_get_sc_object $P5030, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_304, $P5030
    get_who $P5031, pkg_lookup_tmp_304
    exists $I5010, $P5031["QAST"]
    unless $I5010 goto if4195_else8437 
    get_who $P5033, pkg_lookup_tmp_304
    set $P5032, $P5033["QAST"]
    set $P5035, $P5032
    goto if4195_end8438
  if4195_else8437:
    nqp_get_sc_object $P5034, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5035, $P5034
  if4195_end8438:
    get_who $P5029, $P5035
    set fb_tmp_1052, $P5029
    repr_defined $I5009, fb_tmp_1052
    unless $I5009 goto if4194_else8435 
    set $P5036, fb_tmp_1052["Op"]
    set $P5038, $P5036
    goto if4194_end8436
  if4194_else8435:
    null $P5037
    set $P5038, $P5037
  if4194_end8436:
    unless_null $P5038, vivi_41968439
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_41968439:
    $P5040 = $P5038."new"($P101, "list" :named("op"))
    set $P101, $P5040
    set $P5041, $P101
  unless4189_end8427:
    goto if4182_end8414
  if4182_else8413:
.annotate 'line', 3026
.annotate 'line', 3027
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_305, $P5044
    get_who $P5045, pkg_lookup_tmp_305
    exists $I5012, $P5045["QAST"]
    unless $I5012 goto if4198_else8442 
    get_who $P5047, pkg_lookup_tmp_305
    set $P5046, $P5047["QAST"]
    set $P5049, $P5046
    goto if4198_end8443
  if4198_else8442:
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5048
  if4198_end8443:
    get_who $P5043, $P5049
    set fb_tmp_1053, $P5043
    repr_defined $I5011, fb_tmp_1053
    unless $I5011 goto if4197_else8440 
    set $P5050, fb_tmp_1053["Op"]
    set $P5052, $P5050
    goto if4197_end8441
  if4197_else8440:
    null $P5051
    set $P5052, $P5051
  if4197_end8441:
    unless_null $P5052, vivi_41998444
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_41998444:
    $P5054 = $P5052."new"("list" :named("op"))
    set $P101, $P5054
  if4182_end8414:
.annotate 'line', 3029
    $P101."name"("&circumfix:<[ ]>")
.annotate 'line', 3030
    $P5055 = _lex_param_1."!make"($P101)
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<ang>" :subid("cuid_333_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3033
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1054 
    unless_null _lex_param_1, fallback8447
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8447:
    set fb_tmp_1054, _lex_param_1
    repr_defined $I5001, fb_tmp_1054
    unless $I5001 goto if4200_else8445 
    set $P5002, fb_tmp_1054["quote_EXPR"]
    set $P5004, $P5002
    goto if4200_end8446
  if4200_else8445:
    null $P5003
    set $P5004, $P5003
  if4200_end8446:
    unless_null $P5004, vivi_42018448
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42018448:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub utf8:"circumfix:sym<\x{ab} \x{bb}>" :subid("cuid_334_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3034
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1055 
    unless_null _lex_param_1, fallback8451
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8451:
    set fb_tmp_1055, _lex_param_1
    repr_defined $I5001, fb_tmp_1055
    unless $I5001 goto if4202_else8449 
    set $P5002, fb_tmp_1055["quote_EXPR"]
    set $P5004, $P5002
    goto if4202_end8450
  if4202_else8449:
    null $P5003
    set $P5004, $P5003
  if4202_end8450:
    unless_null $P5004, vivi_42038452
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42038452:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "circumfix:sym<{ }>" :subid("cuid_335_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3036
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5044 = 'cuid_503_1361537952.49511' 
    capture_lex $P5044 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1056 
    .local pmc fb_tmp_1057 
    .local pmc fb_tmp_1058 
    .local pmc fb_tmp_1059 
    .local pmc fb_tmp_1062 
    .local pmc fb_tmp_1063 
    .local pmc fb_tmp_1064 
    .local pmc fb_tmp_1065 
    unless_null _lex_param_1, fallback8463
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8463:
    set fb_tmp_1059, _lex_param_1
    repr_defined $I5005, fb_tmp_1059
    unless $I5005 goto if4208_else8461 
    set $P5002, fb_tmp_1059["pblock"]
    set $P5004, $P5002
    goto if4208_end8462
  if4208_else8461:
    null $P5003
    set $P5004, $P5003
  if4208_end8462:
    unless_null $P5004, vivi_42098464
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42098464:
    set fb_tmp_1058, $P5004
    repr_defined $I5004, fb_tmp_1058
    unless $I5004 goto if4207_else8459 
    set $P5006, fb_tmp_1058["blockoid"]
    set $P5008, $P5006
    goto if4207_end8460
  if4207_else8459:
    null $P5007
    set $P5008, $P5007
  if4207_end8460:
    unless_null $P5008, vivi_42108465
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5009
  vivi_42108465:
    set fb_tmp_1057, $P5008
    repr_defined $I5003, fb_tmp_1057
    unless $I5003 goto if4206_else8457 
    set $P5010, fb_tmp_1057["statementlist"]
    set $P5012, $P5010
    goto if4206_end8458
  if4206_else8457:
    null $P5011
    set $P5012, $P5011
  if4206_end8458:
    unless_null $P5012, vivi_42118466
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_42118466:
    set fb_tmp_1056, $P5012
    repr_defined $I5002, fb_tmp_1056
    unless $I5002 goto if4205_else8455 
    set $P5014, fb_tmp_1056["statement"]
    set $P5016, $P5014
    goto if4205_end8456
  if4205_else8455:
    null $P5015
    set $P5016, $P5015
  if4205_end8456:
    unless_null $P5016, vivi_42128467
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_42128467:
    set $N5001, $P5016
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    unless $I5001 goto if4204_else8453 
    .const 'Sub' $P5018 = 'cuid_503_1361537952.49511' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5043, $P5019
    goto if4204_end8454
  if4204_else8453:
    unless_null _lex_param_1, fallback8485
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5020
  fallback8485:
    set fb_tmp_1064, _lex_param_1
    repr_defined $I5008, fb_tmp_1064
    unless $I5008 goto if4221_else8483 
    set $P5021, fb_tmp_1064["pblock"]
    set $P5023, $P5021
    goto if4221_end8484
  if4221_else8483:
    null $P5022
    set $P5023, $P5022
  if4221_end8484:
    unless_null $P5023, vivi_42228486
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_42228486:
    set fb_tmp_1063, $P5023
    repr_defined $I5007, fb_tmp_1063
    unless $I5007 goto if4220_else8481 
    set $P5025, fb_tmp_1063["blockoid"]
    set $P5027, $P5025
    goto if4220_end8482
  if4220_else8481:
    null $P5026
    set $P5027, $P5026
  if4220_end8482:
    unless_null $P5027, vivi_42238487
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5027, $P5028
  vivi_42238487:
    set fb_tmp_1062, $P5027
    repr_defined $I5006, fb_tmp_1062
    unless $I5006 goto if4219_else8479 
    set $P5029, fb_tmp_1062["you_are_here"]
    set $P5031, $P5029
    goto if4219_end8480
  if4219_else8479:
    null $P5030
    set $P5031, $P5030
  if4219_end8480:
    unless_null $P5031, vivi_42248488
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_42248488:
    unless $P5031 goto if4218_else8477 
.annotate 'line', 3042
.annotate 'line', 3043
    unless_null _lex_param_1, fallback8491
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5033
  fallback8491:
    set fb_tmp_1065, _lex_param_1
    repr_defined $I5009, fb_tmp_1065
    unless $I5009 goto if4225_else8489 
    set $P5034, fb_tmp_1065["pblock"]
    set $P5036, $P5034
    goto if4225_end8490
  if4225_else8489:
    null $P5035
    set $P5036, $P5035
  if4225_end8490:
    unless_null $P5036, vivi_42268492
    nqp_get_sc_object $P5037, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5036, $P5037
  vivi_42268492:
    $P5038 = $P5036."ast"()
    $P5039 = _lex_param_1."!make"($P5038)
    set $P5042, $P5039
    goto if4218_end8478
  if4218_else8477:
.annotate 'line', 3045
.annotate 'line', 3046
    $P5040 = "&default_for"("%")
    $P5041 = _lex_param_1."!make"($P5040)
    set $P5042, $P5041
  if4218_end8478:
    set $P5043, $P5042
  if4204_end8454:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_503_1361537952.49511") :anon :lex :outer("cuid_335_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3037
    .lex "$past", $P101 
    .local pmc fb_tmp_1060 
    .local pmc pkg_lookup_tmp_306 
    .local pmc fb_tmp_1061 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 3038
    nqp_get_sc_object $P5003, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_306, $P5003
    get_who $P5004, pkg_lookup_tmp_306
    exists $I5002, $P5004["QAST"]
    unless $I5002 goto if4214_else8470 
    get_who $P5006, pkg_lookup_tmp_306
    set $P5005, $P5006["QAST"]
    set $P5008, $P5005
    goto if4214_end8471
  if4214_else8470:
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5008, $P5007
  if4214_end8471:
    get_who $P5002, $P5008
    set fb_tmp_1060, $P5002
    repr_defined $I5001, fb_tmp_1060
    unless $I5001 goto if4213_else8468 
    set $P5009, fb_tmp_1060["Op"]
    set $P5011, $P5009
    goto if4213_end8469
  if4213_else8468:
    null $P5010
    set $P5011, $P5010
  if4213_end8469:
    unless_null $P5011, vivi_42158472
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5011, $P5012
  vivi_42158472:
    find_lex $P5013, "$/"
    unless_null $P5013, fallback8475
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  fallback8475:
    set fb_tmp_1061, $P5013
    repr_defined $I5003, fb_tmp_1061
    unless $I5003 goto if4216_else8473 
    set $P5015, fb_tmp_1061["pblock"]
    set $P5017, $P5015
    goto if4216_end8474
  if4216_else8473:
    null $P5016
    set $P5017, $P5016
  if4216_end8474:
    unless_null $P5017, vivi_42178476
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_42178476:
    $P5019 = $P5017."ast"()
    $P5020 = $P5011."new"($P5019, "takeclosure" :named("op"))
    set $P101, $P5020
    box $P5021, 1
    set $P101["bareblock"], $P5021
.annotate 'line', 3040
    find_dynamic_lex $P5022, "$/"
    $P5023 = $P5022."!make"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "semilist" :subid("cuid_336_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3050
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1066 
    unless_null _lex_param_1, fallback8495
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8495:
    set fb_tmp_1066, _lex_param_1
    repr_defined $I5001, fb_tmp_1066
    unless $I5001 goto if4227_else8493 
    set $P5002, fb_tmp_1066["statement"]
    set $P5004, $P5002
    goto if4227_end8494
  if4227_else8493:
    null $P5003
    set $P5004, $P5003
  if4227_end8494:
    unless_null $P5004, vivi_42288496
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42288496:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<[ ]>" :subid("cuid_337_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3052
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1067 
    .local pmc pkg_lookup_tmp_307 
    .local pmc fb_tmp_1068 
.annotate 'line', 3053
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_307, $P5002
    get_who $P5003, pkg_lookup_tmp_307
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4230_else8499 
    get_who $P5005, pkg_lookup_tmp_307
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4230_end8500
  if4230_else8499:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4230_end8500:
    get_who $P5001, $P5007
    set fb_tmp_1067, $P5001
    repr_defined $I5001, fb_tmp_1067
    unless $I5001 goto if4229_else8497 
    set $P5008, fb_tmp_1067["VarWithFallback"]
    set $P5010, $P5008
    goto if4229_end8498
  if4229_else8497:
    null $P5009
    set $P5010, $P5009
  if4229_end8498:
    unless_null $P5010, vivi_42318501
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_42318501:
    unless_null _lex_param_1, fallback8504
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8504:
    set fb_tmp_1068, _lex_param_1
    repr_defined $I5003, fb_tmp_1068
    unless $I5003 goto if4232_else8502 
    set $P5013, fb_tmp_1068["EXPR"]
    set $P5015, $P5013
    goto if4232_end8503
  if4232_else8502:
    null $P5014
    set $P5015, $P5014
  if4232_end8503:
    unless_null $P5015, vivi_42338505
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42338505:
    $P5017 = $P5015."ast"()
    $P5018 = "&default_for"("$")
    $P5019 = $P5010."new"($P5017, "positional" :named("scope"), $P5018 :named("fallback"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<{ }>" :subid("cuid_338_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3056
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1069 
    .local pmc pkg_lookup_tmp_308 
    .local pmc fb_tmp_1070 
.annotate 'line', 3057
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_308, $P5002
    get_who $P5003, pkg_lookup_tmp_308
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4235_else8508 
    get_who $P5005, pkg_lookup_tmp_308
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4235_end8509
  if4235_else8508:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4235_end8509:
    get_who $P5001, $P5007
    set fb_tmp_1069, $P5001
    repr_defined $I5001, fb_tmp_1069
    unless $I5001 goto if4234_else8506 
    set $P5008, fb_tmp_1069["VarWithFallback"]
    set $P5010, $P5008
    goto if4234_end8507
  if4234_else8506:
    null $P5009
    set $P5010, $P5009
  if4234_end8507:
    unless_null $P5010, vivi_42368510
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_42368510:
    unless_null _lex_param_1, fallback8513
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8513:
    set fb_tmp_1070, _lex_param_1
    repr_defined $I5003, fb_tmp_1070
    unless $I5003 goto if4237_else8511 
    set $P5013, fb_tmp_1070["EXPR"]
    set $P5015, $P5013
    goto if4237_end8512
  if4237_else8511:
    null $P5014
    set $P5015, $P5014
  if4237_end8512:
    unless_null $P5015, vivi_42388514
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42388514:
    $P5017 = $P5015."ast"()
    $P5018 = "&default_for"("$")
    $P5019 = $P5010."new"($P5017, "associative" :named("scope"), $P5018 :named("fallback"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<ang>" :subid("cuid_339_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3060
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1071 
    .local pmc pkg_lookup_tmp_309 
    .local pmc fb_tmp_1072 
.annotate 'line', 3061
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_309, $P5002
    get_who $P5003, pkg_lookup_tmp_309
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4240_else8517 
    get_who $P5005, pkg_lookup_tmp_309
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4240_end8518
  if4240_else8517:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4240_end8518:
    get_who $P5001, $P5007
    set fb_tmp_1071, $P5001
    repr_defined $I5001, fb_tmp_1071
    unless $I5001 goto if4239_else8515 
    set $P5008, fb_tmp_1071["VarWithFallback"]
    set $P5010, $P5008
    goto if4239_end8516
  if4239_else8515:
    null $P5009
    set $P5010, $P5009
  if4239_end8516:
    unless_null $P5010, vivi_42418519
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_42418519:
    unless_null _lex_param_1, fallback8522
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8522:
    set fb_tmp_1072, _lex_param_1
    repr_defined $I5003, fb_tmp_1072
    unless $I5003 goto if4242_else8520 
    set $P5013, fb_tmp_1072["quote_EXPR"]
    set $P5015, $P5013
    goto if4242_end8521
  if4242_else8520:
    null $P5014
    set $P5015, $P5014
  if4242_end8521:
    unless_null $P5015, vivi_42438523
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42438523:
    $P5017 = $P5015."ast"()
    $P5018 = "&default_for"("$")
    $P5019 = $P5010."new"($P5017, "associative" :named("scope"), $P5018 :named("fallback"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "postcircumfix:sym<( )>" :subid("cuid_340_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3064
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1073 
.annotate 'line', 3065
    unless_null _lex_param_1, fallback8526
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8526:
    set fb_tmp_1073, _lex_param_1
    repr_defined $I5001, fb_tmp_1073
    unless $I5001 goto if4244_else8524 
    set $P5002, fb_tmp_1073["arglist"]
    set $P5004, $P5002
    goto if4244_end8525
  if4244_else8524:
    null $P5003
    set $P5004, $P5003
  if4244_end8525:
    unless_null $P5004, vivi_42458527
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42458527:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "value" :subid("cuid_341_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3068
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1074 
    .local pmc fb_tmp_1075 
    .local pmc fb_tmp_1076 
.annotate 'line', 3069
    unless_null _lex_param_1, fallback8532
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8532:
    set fb_tmp_1074, _lex_param_1
    repr_defined $I5001, fb_tmp_1074
    unless $I5001 goto if4247_else8530 
    set $P5002, fb_tmp_1074["quote"]
    set $P5004, $P5002
    goto if4247_end8531
  if4247_else8530:
    null $P5003
    set $P5004, $P5003
  if4247_end8531:
    unless_null $P5004, vivi_42488533
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42488533:
    unless $P5004 goto if4246_else8528 
    unless_null _lex_param_1, fallback8536
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5006
  fallback8536:
    set fb_tmp_1075, _lex_param_1
    repr_defined $I5002, fb_tmp_1075
    unless $I5002 goto if4249_else8534 
    set $P5007, fb_tmp_1075["quote"]
    set $P5009, $P5007
    goto if4249_end8535
  if4249_else8534:
    null $P5008
    set $P5009, $P5008
  if4249_end8535:
    unless_null $P5009, vivi_42508537
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_42508537:
    $P5011 = $P5009."ast"()
    set $P5018, $P5011
    goto if4246_end8529
  if4246_else8528:
    unless_null _lex_param_1, fallback8540
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8540:
    set fb_tmp_1076, _lex_param_1
    repr_defined $I5003, fb_tmp_1076
    unless $I5003 goto if4251_else8538 
    set $P5013, fb_tmp_1076["number"]
    set $P5015, $P5013
    goto if4251_end8539
  if4251_else8538:
    null $P5014
    set $P5015, $P5014
  if4251_end8539:
    unless_null $P5015, vivi_42528541
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42528541:
    $P5017 = $P5015."ast"()
    set $P5018, $P5017
  if4246_end8529:
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "number" :subid("cuid_342_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3072
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$value", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1077 
    .local pmc fb_tmp_1078 
    .local pmc fb_tmp_1079 
    .local pmc fb_tmp_1080 
    .local pmc fb_tmp_1081 
    .local pmc fb_tmp_1082 
    .local pmc pkg_lookup_tmp_310 
    .local pmc fb_tmp_1083 
    .local pmc pkg_lookup_tmp_311 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    unless_null _lex_param_1, fallback8546
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback8546:
    set fb_tmp_1077, _lex_param_1
    repr_defined $I5001, fb_tmp_1077
    unless $I5001 goto if4254_else8544 
    set $P5003, fb_tmp_1077["dec_number"]
    set $P5005, $P5003
    goto if4254_end8545
  if4254_else8544:
    null $P5004
    set $P5005, $P5004
  if4254_end8545:
    unless_null $P5005, vivi_42558547
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_42558547:
    unless $P5005 goto if4253_else8542 
.annotate 'line', 3073
    unless_null _lex_param_1, fallback8550
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5007
  fallback8550:
    set fb_tmp_1078, _lex_param_1
    repr_defined $I5002, fb_tmp_1078
    unless $I5002 goto if4256_else8548 
    set $P5008, fb_tmp_1078["dec_number"]
    set $P5010, $P5008
    goto if4256_end8549
  if4256_else8548:
    null $P5009
    set $P5010, $P5009
  if4256_end8549:
    unless_null $P5010, vivi_42578551
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_42578551:
    $P5012 = $P5010."ast"()
    set $P5019, $P5012
    goto if4253_end8543
  if4253_else8542:
    unless_null _lex_param_1, fallback8554
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5013
  fallback8554:
    set fb_tmp_1079, _lex_param_1
    repr_defined $I5003, fb_tmp_1079
    unless $I5003 goto if4258_else8552 
    set $P5014, fb_tmp_1079["integer"]
    set $P5016, $P5014
    goto if4258_end8553
  if4258_else8552:
    null $P5015
    set $P5016, $P5015
  if4258_end8553:
    unless_null $P5016, vivi_42598555
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5016, $P5017
  vivi_42598555:
    $P5018 = $P5016."ast"()
    set $P5019, $P5018
  if4253_end8543:
    set $P101, $P5019
    unless_null _lex_param_1, fallback8560
    nqp_get_sc_object $P5020, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5020
  fallback8560:
    set fb_tmp_1080, _lex_param_1
    repr_defined $I5005, fb_tmp_1080
    unless $I5005 goto if4261_else8558 
    set $P5021, fb_tmp_1080["sign"]
    set $P5023, $P5021
    goto if4261_end8559
  if4261_else8558:
    null $P5022
    set $P5023, $P5022
  if4261_end8559:
    unless_null $P5023, vivi_42628561
    nqp_get_sc_object $P5024, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5024
  vivi_42628561:
    set $S5001, $P5023
    iseq $I5004, $S5001, "-"
    unless $I5004 goto if4260_end8557 
.annotate 'line', 3074
    set $N5002, $P101
    neg $N5001, $N5002
    box $P5025, $N5001
    set $P101, $P5025
  if4260_end8557:
.annotate 'line', 3075
    unless_null _lex_param_1, fallback8566
    nqp_get_sc_object $P5026, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5026
  fallback8566:
    set fb_tmp_1081, _lex_param_1
    repr_defined $I5006, fb_tmp_1081
    unless $I5006 goto if4264_else8564 
    set $P5027, fb_tmp_1081["dec_number"]
    set $P5029, $P5027
    goto if4264_end8565
  if4264_else8564:
    null $P5028
    set $P5029, $P5028
  if4264_end8565:
    unless_null $P5029, vivi_42658567
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_42658567:
    unless $P5029 goto if4263_else8562 
.annotate 'line', 3076
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_310, $P5032
    get_who $P5033, pkg_lookup_tmp_310
    exists $I5008, $P5033["QAST"]
    unless $I5008 goto if4267_else8570 
    get_who $P5035, pkg_lookup_tmp_310
    set $P5034, $P5035["QAST"]
    set $P5037, $P5034
    goto if4267_end8571
  if4267_else8570:
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5036
  if4267_end8571:
    get_who $P5031, $P5037
    set fb_tmp_1082, $P5031
    repr_defined $I5007, fb_tmp_1082
    unless $I5007 goto if4266_else8568 
    set $P5038, fb_tmp_1082["NVal"]
    set $P5040, $P5038
    goto if4266_end8569
  if4266_else8568:
    null $P5039
    set $P5040, $P5039
  if4266_end8569:
    unless_null $P5040, vivi_42688572
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_42688572:
    $P5042 = $P5040."new"($P101 :named("value"))
    set $P5055, $P5042
    goto if4263_end8563
  if4263_else8562:
.annotate 'line', 3077
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_311, $P5044
    get_who $P5045, pkg_lookup_tmp_311
    exists $I5010, $P5045["QAST"]
    unless $I5010 goto if4270_else8575 
    get_who $P5047, pkg_lookup_tmp_311
    set $P5046, $P5047["QAST"]
    set $P5049, $P5046
    goto if4270_end8576
  if4270_else8575:
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5048
  if4270_end8576:
    get_who $P5043, $P5049
    set fb_tmp_1083, $P5043
    repr_defined $I5009, fb_tmp_1083
    unless $I5009 goto if4269_else8573 
    set $P5050, fb_tmp_1083["IVal"]
    set $P5052, $P5050
    goto if4269_end8574
  if4269_else8573:
    null $P5051
    set $P5052, $P5051
  if4269_end8574:
    unless_null $P5052, vivi_42718577
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_42718577:
    $P5054 = $P5052."new"($P101 :named("value"))
    set $P5055, $P5054
  if4263_end8563:
    $P5056 = _lex_param_1."!make"($P5055)
    .return ($P5056) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<apos>" :subid("cuid_343_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3080
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1084 
    unless_null _lex_param_1, fallback8580
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8580:
    set fb_tmp_1084, _lex_param_1
    repr_defined $I5001, fb_tmp_1084
    unless $I5001 goto if4272_else8578 
    set $P5002, fb_tmp_1084["quote_EXPR"]
    set $P5004, $P5002
    goto if4272_end8579
  if4272_else8578:
    null $P5003
    set $P5004, $P5003
  if4272_end8579:
    unless_null $P5004, vivi_42738581
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42738581:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<dblq>" :subid("cuid_344_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3081
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1085 
    unless_null _lex_param_1, fallback8584
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8584:
    set fb_tmp_1085, _lex_param_1
    repr_defined $I5001, fb_tmp_1085
    unless $I5001 goto if4274_else8582 
    set $P5002, fb_tmp_1085["quote_EXPR"]
    set $P5004, $P5002
    goto if4274_end8583
  if4274_else8582:
    null $P5003
    set $P5004, $P5003
  if4274_end8583:
    unless_null $P5004, vivi_42758585
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42758585:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<qq>" :subid("cuid_345_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3082
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1086 
    unless_null _lex_param_1, fallback8588
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8588:
    set fb_tmp_1086, _lex_param_1
    repr_defined $I5001, fb_tmp_1086
    unless $I5001 goto if4276_else8586 
    set $P5002, fb_tmp_1086["quote_EXPR"]
    set $P5004, $P5002
    goto if4276_end8587
  if4276_else8586:
    null $P5003
    set $P5004, $P5003
  if4276_end8587:
    unless_null $P5004, vivi_42778589
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42778589:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<q>" :subid("cuid_346_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3083
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1087 
    unless_null _lex_param_1, fallback8592
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8592:
    set fb_tmp_1087, _lex_param_1
    repr_defined $I5001, fb_tmp_1087
    unless $I5001 goto if4278_else8590 
    set $P5002, fb_tmp_1087["quote_EXPR"]
    set $P5004, $P5002
    goto if4278_end8591
  if4278_else8590:
    null $P5003
    set $P5004, $P5003
  if4278_end8591:
    unless_null $P5004, vivi_42798593
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42798593:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q>" :subid("cuid_347_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3084
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1088 
    unless_null _lex_param_1, fallback8596
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8596:
    set fb_tmp_1088, _lex_param_1
    repr_defined $I5001, fb_tmp_1088
    unless $I5001 goto if4280_else8594 
    set $P5002, fb_tmp_1088["quote_EXPR"]
    set $P5004, $P5002
    goto if4280_end8595
  if4280_else8594:
    null $P5003
    set $P5004, $P5003
  if4280_end8595:
    unless_null $P5004, vivi_42818597
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_42818597:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym<Q:PIR>" :subid("cuid_348_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3085
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1089 
    .local pmc pkg_lookup_tmp_312 
    .local pmc fb_tmp_1090 
.annotate 'line', 3086
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_312, $P5002
    get_who $P5003, pkg_lookup_tmp_312
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4283_else8600 
    get_who $P5005, pkg_lookup_tmp_312
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4283_end8601
  if4283_else8600:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4283_end8601:
    get_who $P5001, $P5007
    set fb_tmp_1089, $P5001
    repr_defined $I5001, fb_tmp_1089
    unless $I5001 goto if4282_else8598 
    set $P5008, fb_tmp_1089["VM"]
    set $P5010, $P5008
    goto if4282_end8599
  if4282_else8598:
    null $P5009
    set $P5010, $P5009
  if4282_end8599:
    unless_null $P5010, vivi_42848602
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_42848602:
    unless_null _lex_param_1, fallback8605
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8605:
    set fb_tmp_1090, _lex_param_1
    repr_defined $I5003, fb_tmp_1090
    unless $I5003 goto if4285_else8603 
    set $P5013, fb_tmp_1090["quote_EXPR"]
    set $P5015, $P5013
    goto if4285_end8604
  if4285_else8603:
    null $P5014
    set $P5015, $P5014
  if4285_end8604:
    unless_null $P5015, vivi_42868606
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42868606:
    $P5017 = $P5015."ast"()
    $P5018 = $P5017."value"()
    $P5019 = $P5010."new"($P5018 :named("pir"), _lex_param_1 :named("node"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "quote:sym</ />" :subid("cuid_349_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3089
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$regex", $P102 
    .lex "$past", $P103 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1091 
    .local pmc fb_tmp_1092 
    .local pmc fb_tmp_1093 
    .local pmc pkg_lookup_tmp_313 
    .local pmc fb_tmp_1094 
    .local pmc fb_tmp_1095 
    .local pmc pkg_lookup_tmp_314 
    .local pmc fb_tmp_1096 
    .local pmc pkg_lookup_tmp_315 
    .local pmc fb_tmp_1097 
    .local pmc pkg_lookup_tmp_316 
    .local pmc fb_tmp_1098 
    .local pmc fb_tmp_1099 
    .local pmc pkg_lookup_tmp_317 
    .local pmc fb_tmp_1100 
    .local pmc fb_tmp_1101 
    .local pmc pkg_lookup_tmp_318 
    .local pmc fb_tmp_1102 
    .local pmc fb_tmp_1103 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_1104 
    .local pmc fb_tmp_1105 
    .local pmc pkg_lookup_tmp_319 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P103, $P5003
.annotate 'line', 3090
    find_dynamic_lex $P5004, "$*W"
    unless_null $P5004, fallback8607
    nqp_get_sc_object $P5006, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5005, $P5006
    set fb_tmp_1091, $P5005
    repr_defined $I5001, fb_tmp_1091
    unless $I5001 goto if4287_else8608 
    set $P5007, fb_tmp_1091["$W"]
    set $P5009, $P5007
    goto if4287_end8609
  if4287_else8608:
    null $P5008
    set $P5009, $P5008
  if4287_end8609:
    unless_null $P5009, vivi_42888610
    nqp_get_sc_object $P5010, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5009, $P5010
  vivi_42888610:
    unless_null $P5009, vivi_42898611
    die "Contextual $*W not found"
    box $P5011, "Contextual $*W not found"
    set $P5009, $P5011
  vivi_42898611:
    set $P5004, $P5009
  fallback8607:
    $P5012 = $P5004."pop_lexpad"()
    set $P101, $P5012
.annotate 'line', 3091
    set fb_tmp_1092, $P101
    repr_defined $I5002, fb_tmp_1092
    unless $I5002 goto if4290_else8612 
    set $P5013, fb_tmp_1092[0]
    set $P5015, $P5013
    goto if4290_end8613
  if4290_else8612:
    null $P5014
    set $P5015, $P5014
  if4290_end8613:
    unless_null $P5015, vivi_42918614
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_42918614:
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_313, $P5018
    get_who $P5019, pkg_lookup_tmp_313
    exists $I5004, $P5019["QAST"]
    unless $I5004 goto if4293_else8617 
    get_who $P5021, pkg_lookup_tmp_313
    set $P5020, $P5021["QAST"]
    set $P5023, $P5020
    goto if4293_end8618
  if4293_else8617:
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5023, $P5022
  if4293_end8618:
    get_who $P5017, $P5023
    set fb_tmp_1093, $P5017
    repr_defined $I5003, fb_tmp_1093
    unless $I5003 goto if4292_else8615 
    set $P5024, fb_tmp_1093["Var"]
    set $P5026, $P5024
    goto if4292_end8616
  if4292_else8615:
    null $P5025
    set $P5026, $P5025
  if4292_end8616:
    unless_null $P5026, vivi_42948619
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_42948619:
    $P5028 = $P5026."new"("self" :named("name"), "lexical" :named("scope"), "param" :named("decl"))
    $P5015."push"($P5028)
.annotate 'line', 3092
    set fb_tmp_1094, $P101
    repr_defined $I5005, fb_tmp_1094
    unless $I5005 goto if4295_else8620 
    set $P5029, fb_tmp_1094[0]
    set $P5031, $P5029
    goto if4295_end8621
  if4295_else8620:
    null $P5030
    set $P5031, $P5030
  if4295_end8621:
    unless_null $P5031, vivi_42968622
    nqp_get_sc_object $P5032, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5031, $P5032
  vivi_42968622:
    nqp_get_sc_object $P5034, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_314, $P5034
    get_who $P5035, pkg_lookup_tmp_314
    exists $I5007, $P5035["QAST"]
    unless $I5007 goto if4298_else8625 
    get_who $P5037, pkg_lookup_tmp_314
    set $P5036, $P5037["QAST"]
    set $P5039, $P5036
    goto if4298_end8626
  if4298_else8625:
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5038
  if4298_end8626:
    get_who $P5033, $P5039
    set fb_tmp_1095, $P5033
    repr_defined $I5006, fb_tmp_1095
    unless $I5006 goto if4297_else8623 
    set $P5040, fb_tmp_1095["Op"]
    set $P5042, $P5040
    goto if4297_end8624
  if4297_else8623:
    null $P5041
    set $P5042, $P5041
  if4297_end8624:
    unless_null $P5042, vivi_42998627
    nqp_get_sc_object $P5043, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5042, $P5043
  vivi_42998627:
.annotate 'line', 3094
    nqp_get_sc_object $P5045, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_315, $P5045
    get_who $P5046, pkg_lookup_tmp_315
    exists $I5009, $P5046["QAST"]
    unless $I5009 goto if4301_else8630 
    get_who $P5048, pkg_lookup_tmp_315
    set $P5047, $P5048["QAST"]
    set $P5050, $P5047
    goto if4301_end8631
  if4301_else8630:
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5049
  if4301_end8631:
    get_who $P5044, $P5050
    set fb_tmp_1096, $P5044
    repr_defined $I5008, fb_tmp_1096
    unless $I5008 goto if4300_else8628 
    set $P5051, fb_tmp_1096["Var"]
    set $P5053, $P5051
    goto if4300_end8629
  if4300_else8628:
    null $P5052
    set $P5053, $P5052
  if4300_end8629:
    unless_null $P5053, vivi_43028632
    nqp_get_sc_object $P5054, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5053, $P5054
  vivi_43028632:
    $P5055 = $P5053."new"("self" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 3095
    nqp_get_sc_object $P5057, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_316, $P5057
    get_who $P5058, pkg_lookup_tmp_316
    exists $I5011, $P5058["QAST"]
    unless $I5011 goto if4304_else8635 
    get_who $P5060, pkg_lookup_tmp_316
    set $P5059, $P5060["QAST"]
    set $P5062, $P5059
    goto if4304_end8636
  if4304_else8635:
    nqp_get_sc_object $P5061, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5062, $P5061
  if4304_end8636:
    get_who $P5056, $P5062
    set fb_tmp_1097, $P5056
    repr_defined $I5010, fb_tmp_1097
    unless $I5010 goto if4303_else8633 
    set $P5063, fb_tmp_1097["Var"]
    set $P5065, $P5063
    goto if4303_end8634
  if4303_else8633:
    null $P5064
    set $P5065, $P5064
  if4303_end8634:
    unless_null $P5065, vivi_43058637
    nqp_get_sc_object $P5066, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5065, $P5066
  vivi_43058637:
    $P5067 = $P5065."new"("self" :named("name"), "lexical" :named("scope"))
    $P5068 = $P5042."new"($P5055, $P5067, "bind" :named("op"))
    $P5031."push"($P5068)
.annotate 'line', 3096
    set fb_tmp_1098, $P101
    repr_defined $I5012, fb_tmp_1098
    unless $I5012 goto if4306_else8638 
    set $P5069, fb_tmp_1098[0]
    set $P5071, $P5069
    goto if4306_end8639
  if4306_else8638:
    null $P5070
    set $P5071, $P5070
  if4306_end8639:
    unless_null $P5071, vivi_43078640
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5071, $P5072
  vivi_43078640:
    nqp_get_sc_object $P5074, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_317, $P5074
    get_who $P5075, pkg_lookup_tmp_317
    exists $I5014, $P5075["QAST"]
    unless $I5014 goto if4309_else8643 
    get_who $P5077, pkg_lookup_tmp_317
    set $P5076, $P5077["QAST"]
    set $P5079, $P5076
    goto if4309_end8644
  if4309_else8643:
    nqp_get_sc_object $P5078, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5078
  if4309_end8644:
    get_who $P5073, $P5079
    set fb_tmp_1099, $P5073
    repr_defined $I5013, fb_tmp_1099
    unless $I5013 goto if4308_else8641 
    set $P5080, fb_tmp_1099["Var"]
    set $P5082, $P5080
    goto if4308_end8642
  if4308_else8641:
    null $P5081
    set $P5082, $P5081
  if4308_end8642:
    unless_null $P5082, vivi_43108645
    nqp_get_sc_object $P5083, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5082, $P5083
  vivi_43108645:
    $P5084 = $P5082."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5071."push"($P5084)
.annotate 'line', 3097
    set fb_tmp_1100, $P101
    repr_defined $I5015, fb_tmp_1100
    unless $I5015 goto if4311_else8646 
    set $P5085, fb_tmp_1100[0]
    set $P5087, $P5085
    goto if4311_end8647
  if4311_else8646:
    null $P5086
    set $P5087, $P5086
  if4311_end8647:
    unless_null $P5087, vivi_43128648
    nqp_get_sc_object $P5088, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5087, $P5088
  vivi_43128648:
    nqp_get_sc_object $P5090, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_318, $P5090
    get_who $P5091, pkg_lookup_tmp_318
    exists $I5017, $P5091["QAST"]
    unless $I5017 goto if4314_else8651 
    get_who $P5093, pkg_lookup_tmp_318
    set $P5092, $P5093["QAST"]
    set $P5095, $P5092
    goto if4314_end8652
  if4314_else8651:
    nqp_get_sc_object $P5094, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5095, $P5094
  if4314_end8652:
    get_who $P5089, $P5095
    set fb_tmp_1101, $P5089
    repr_defined $I5016, fb_tmp_1101
    unless $I5016 goto if4313_else8649 
    set $P5096, fb_tmp_1101["Var"]
    set $P5098, $P5096
    goto if4313_end8650
  if4313_else8649:
    null $P5097
    set $P5098, $P5097
  if4313_end8650:
    unless_null $P5098, vivi_43158653
    nqp_get_sc_object $P5099, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5098, $P5099
  vivi_43158653:
    $P5100 = $P5098."new"("$/" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    $P5087."push"($P5100)
.annotate 'line', 3098
    $P101."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
.annotate 'line', 3099
    $P101."symbol"("$/", "lexical" :named("scope"))
.annotate 'line', 3101
    find_dynamic_lex $P5101, "%*LANG"
    unless_null $P5101, fallback8656
    nqp_get_sc_object $P5103, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5102, $P5103
    set pkg_viv_tmp_49, $P5102
    set fb_tmp_1103, pkg_viv_tmp_49
    repr_defined $I5019, fb_tmp_1103
    unless $I5019 goto if4317_else8657 
    set $P5104, fb_tmp_1103["%LANG"]
    set $P5106, $P5104
    goto if4317_end8658
  if4317_else8657:
    null $P5105
    set $P5106, $P5105
  if4317_end8658:
    unless_null $P5106, vivi_43188659
    new $P5107, 'Hash'
    set pkg_viv_tmp_49["%LANG"], $P5107
    set $P5106, $P5107
  vivi_43188659:
    unless_null $P5106, vivi_43198660
    die "Contextual %*LANG not found"
    box $P5108, "Contextual %*LANG not found"
    set $P5106, $P5108
  vivi_43198660:
    set $P5101, $P5106
  fallback8656:
    set fb_tmp_1102, $P5101
    repr_defined $I5018, fb_tmp_1102
    unless $I5018 goto if4316_else8654 
    set $P5109, fb_tmp_1102["Regex-actions"]
    set $P5111, $P5109
    goto if4316_end8655
  if4316_else8654:
    null $P5110
    set $P5111, $P5110
  if4316_end8655:
    unless_null $P5111, vivi_43208661
    nqp_get_sc_object $P5112, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5112
  vivi_43208661:
    unless_null _lex_param_1, fallback8664
    nqp_get_sc_object $P5113, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5113
  fallback8664:
    set fb_tmp_1104, _lex_param_1
    repr_defined $I5020, fb_tmp_1104
    unless $I5020 goto if4321_else8662 
    set $P5114, fb_tmp_1104["p6regex"]
    set $P5116, $P5114
    goto if4321_end8663
  if4321_else8662:
    null $P5115
    set $P5116, $P5115
  if4321_end8663:
    unless_null $P5116, vivi_43228665
    nqp_get_sc_object $P5117, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5116, $P5117
  vivi_43228665:
    $P5118 = $P5116."ast"()
    $P5119 = $P5111."qbuildsub"($P5118, $P101)
    set $P102, $P5119
.annotate 'line', 3102
    nqp_get_sc_object $P5121, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_319, $P5121
    get_who $P5122, pkg_lookup_tmp_319
    exists $I5022, $P5122["QAST"]
    unless $I5022 goto if4324_else8668 
    get_who $P5124, pkg_lookup_tmp_319
    set $P5123, $P5124["QAST"]
    set $P5126, $P5123
    goto if4324_end8669
  if4324_else8668:
    nqp_get_sc_object $P5125, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5126, $P5125
  if4324_end8669:
    get_who $P5120, $P5126
    set fb_tmp_1105, $P5120
    repr_defined $I5021, fb_tmp_1105
    unless $I5021 goto if4323_else8666 
    set $P5127, fb_tmp_1105["Op"]
    set $P5129, $P5127
    goto if4323_end8667
  if4323_else8666:
    null $P5128
    set $P5129, $P5128
  if4323_end8667:
    unless_null $P5129, vivi_43258670
    nqp_get_sc_object $P5130, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5129, $P5130
  vivi_43258670:
.annotate 'line', 3104
    new $P5131, 'ResizablePMCArray'
    box $P5132, "NQPRegex"
    push $P5131, $P5132
    $P5133 = "&lexical_package_lookup"($P5131, _lex_param_1)
    $P5134 = $P5129."new"($P5133, $P102, "callmethod" :named("op"), "new" :named("name"))
    set $P103, $P5134
    set $P103["sink"], $P102
.annotate 'line', 3109
    $P5135 = _lex_param_1."!make"($P103)
    .return ($P5135) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<$>" :subid("cuid_350_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3112
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1106 
    unless_null _lex_param_1, fallback8673
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8673:
    set fb_tmp_1106, _lex_param_1
    repr_defined $I5001, fb_tmp_1106
    unless $I5001 goto if4326_else8671 
    set $P5002, fb_tmp_1106["variable"]
    set $P5004, $P5002
    goto if4326_end8672
  if4326_else8671:
    null $P5003
    set $P5004, $P5003
  if4326_end8672:
    unless_null $P5004, vivi_43278674
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_43278674:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<{ }>" :subid("cuid_351_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3113
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1107 
    .local pmc pkg_lookup_tmp_320 
    .local pmc fb_tmp_1108 
.annotate 'line', 3114
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_320, $P5002
    get_who $P5003, pkg_lookup_tmp_320
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4329_else8677 
    get_who $P5005, pkg_lookup_tmp_320
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4329_end8678
  if4329_else8677:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4329_end8678:
    get_who $P5001, $P5007
    set fb_tmp_1107, $P5001
    repr_defined $I5001, fb_tmp_1107
    unless $I5001 goto if4328_else8675 
    set $P5008, fb_tmp_1107["Op"]
    set $P5010, $P5008
    goto if4328_end8676
  if4328_else8675:
    null $P5009
    set $P5010, $P5009
  if4328_end8676:
    unless_null $P5010, vivi_43308679
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43308679:
.annotate 'line', 3115
    unless_null _lex_param_1, fallback8682
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8682:
    set fb_tmp_1108, _lex_param_1
    repr_defined $I5003, fb_tmp_1108
    unless $I5003 goto if4331_else8680 
    set $P5013, fb_tmp_1108["block"]
    set $P5015, $P5013
    goto if4331_end8681
  if4331_else8680:
    null $P5014
    set $P5015, $P5014
  if4331_end8681:
    unless_null $P5015, vivi_43328683
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_43328683:
    $P5017 = $P5015."ast"()
    $P5018 = "&block_immediate"($P5017)
    $P5019 = $P5010."new"($P5018, "stringify" :named("op"), _lex_param_1 :named("node"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "quote_escape:sym<esc>" :subid("cuid_352_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3118
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    $P5001 = _lex_param_1."!make"("\e")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "postfix:sym<.>" :subid("cuid_353_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3122
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1109 
    unless_null _lex_param_1, fallback8686
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8686:
    set fb_tmp_1109, _lex_param_1
    repr_defined $I5001, fb_tmp_1109
    unless $I5001 goto if4333_else8684 
    set $P5002, fb_tmp_1109["dotty"]
    set $P5004, $P5002
    goto if4333_end8685
  if4333_else8684:
    null $P5003
    set $P5004, $P5003
  if4333_end8685:
    unless_null $P5004, vivi_43348687
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_43348687:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<return>" :subid("cuid_354_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3124
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1110 
    .local pmc pkg_lookup_tmp_321 
    .local pmc fb_tmp_1111 
    .local pmc pkg_lookup_tmp_322 
.annotate 'line', 3125
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_321, $P5002
    get_who $P5003, pkg_lookup_tmp_321
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4336_else8690 
    get_who $P5005, pkg_lookup_tmp_321
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4336_end8691
  if4336_else8690:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4336_end8691:
    get_who $P5001, $P5007
    set fb_tmp_1110, $P5001
    repr_defined $I5001, fb_tmp_1110
    unless $I5001 goto if4335_else8688 
    set $P5008, fb_tmp_1110["Op"]
    set $P5010, $P5008
    goto if4335_end8689
  if4335_else8688:
    null $P5009
    set $P5010, $P5009
  if4335_end8689:
    unless_null $P5010, vivi_43378692
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43378692:
.annotate 'line', 3127
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_322, $P5013
    get_who $P5014, pkg_lookup_tmp_322
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4339_else8695 
    get_who $P5016, pkg_lookup_tmp_322
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4339_end8696
  if4339_else8695:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4339_end8696:
    get_who $P5012, $P5018
    set fb_tmp_1111, $P5012
    repr_defined $I5003, fb_tmp_1111
    unless $I5003 goto if4338_else8693 
    set $P5019, fb_tmp_1111["Var"]
    set $P5021, $P5019
    goto if4338_end8694
  if4338_else8693:
    null $P5020
    set $P5021, $P5020
  if4338_end8694:
    unless_null $P5021, vivi_43408697
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_43408697:
    $P5023 = $P5021."new"("RETURN" :named("name"), "lexical" :named("scope"))
    $P5024 = $P5010."new"($P5023, "call" :named("op"))
    $P5025 = _lex_param_1."!make"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "prefix:sym<make>" :subid("cuid_355_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3131
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1112 
    .local pmc pkg_lookup_tmp_323 
    .local pmc fb_tmp_1113 
    .local pmc pkg_lookup_tmp_324 
.annotate 'line', 3132
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_323, $P5002
    get_who $P5003, pkg_lookup_tmp_323
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4342_else8700 
    get_who $P5005, pkg_lookup_tmp_323
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4342_end8701
  if4342_else8700:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4342_end8701:
    get_who $P5001, $P5007
    set fb_tmp_1112, $P5001
    repr_defined $I5001, fb_tmp_1112
    unless $I5001 goto if4341_else8698 
    set $P5008, fb_tmp_1112["Op"]
    set $P5010, $P5008
    goto if4341_end8699
  if4341_else8698:
    null $P5009
    set $P5010, $P5009
  if4341_end8699:
    unless_null $P5010, vivi_43438702
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43438702:
.annotate 'line', 3133
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_324, $P5013
    get_who $P5014, pkg_lookup_tmp_324
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4345_else8705 
    get_who $P5016, pkg_lookup_tmp_324
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4345_end8706
  if4345_else8705:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4345_end8706:
    get_who $P5012, $P5018
    set fb_tmp_1113, $P5012
    repr_defined $I5003, fb_tmp_1113
    unless $I5003 goto if4344_else8703 
    set $P5019, fb_tmp_1113["Var"]
    set $P5021, $P5019
    goto if4344_end8704
  if4344_else8703:
    null $P5020
    set $P5021, $P5020
  if4344_end8704:
    unless_null $P5021, vivi_43468707
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_43468707:
    $P5023 = $P5021."new"("$/" :named("name"), "contextual" :named("scope"))
    $P5024 = $P5010."new"($P5023, "callmethod" :named("op"), "!make" :named("name"), _lex_param_1 :named("node"))
    $P5025 = _lex_param_1."!make"($P5024)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<next>" :subid("cuid_356_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3140
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1114 
    .local pmc pkg_lookup_tmp_325 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_325, $P5002
    get_who $P5003, pkg_lookup_tmp_325
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4348_else8710 
    get_who $P5005, pkg_lookup_tmp_325
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4348_end8711
  if4348_else8710:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4348_end8711:
    get_who $P5001, $P5007
    set fb_tmp_1114, $P5001
    repr_defined $I5001, fb_tmp_1114
    unless $I5001 goto if4347_else8708 
    set $P5008, fb_tmp_1114["Op"]
    set $P5010, $P5008
    goto if4347_end8709
  if4347_else8708:
    null $P5009
    set $P5010, $P5009
  if4347_end8709:
    unless_null $P5010, vivi_43498712
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43498712:
    $P5012 = $P5010."new"("control" :named("op"), "next" :named("name"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<last>" :subid("cuid_357_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1115 
    .local pmc pkg_lookup_tmp_326 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_326, $P5002
    get_who $P5003, pkg_lookup_tmp_326
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4351_else8715 
    get_who $P5005, pkg_lookup_tmp_326
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4351_end8716
  if4351_else8715:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4351_end8716:
    get_who $P5001, $P5007
    set fb_tmp_1115, $P5001
    repr_defined $I5001, fb_tmp_1115
    unless $I5001 goto if4350_else8713 
    set $P5008, fb_tmp_1115["Op"]
    set $P5010, $P5008
    goto if4350_end8714
  if4350_else8713:
    null $P5009
    set $P5010, $P5009
  if4350_end8714:
    unless_null $P5010, vivi_43528717
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43528717:
    $P5012 = $P5010."new"("control" :named("op"), "last" :named("name"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "term:sym<redo>" :subid("cuid_358_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1116 
    .local pmc pkg_lookup_tmp_327 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_327, $P5002
    get_who $P5003, pkg_lookup_tmp_327
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4354_else8720 
    get_who $P5005, pkg_lookup_tmp_327
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4354_end8721
  if4354_else8720:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4354_end8721:
    get_who $P5001, $P5007
    set fb_tmp_1116, $P5001
    repr_defined $I5001, fb_tmp_1116
    unless $I5001 goto if4353_else8718 
    set $P5008, fb_tmp_1116["Op"]
    set $P5010, $P5008
    goto if4353_end8719
  if4353_else8718:
    null $P5009
    set $P5010, $P5009
  if4353_end8719:
    unless_null $P5010, vivi_43558722
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43558722:
    $P5012 = $P5010."new"("control" :named("op"), "redo" :named("name"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "infix:sym<~~>" :subid("cuid_359_1361537952.49511") :anon :lex :outer("cuid_427_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3144
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1117 
    .local pmc pkg_lookup_tmp_328 
.annotate 'line', 3145
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_328, $P5002
    get_who $P5003, pkg_lookup_tmp_328
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4357_else8725 
    get_who $P5005, pkg_lookup_tmp_328
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4357_end8726
  if4357_else8725:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4357_end8726:
    get_who $P5001, $P5007
    set fb_tmp_1117, $P5001
    repr_defined $I5001, fb_tmp_1117
    unless $I5001 goto if4356_else8723 
    set $P5008, fb_tmp_1117["Op"]
    set $P5010, $P5008
    goto if4356_end8724
  if4356_else8723:
    null $P5009
    set $P5010, $P5009
  if4356_end8724:
    unless_null $P5010, vivi_43588727
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43588727:
    $P5012 = $P5010."new"("callmethod" :named("op"), "ACCEPTS" :named("name"), _lex_param_1 :named("node"))
    $P5013 = _lex_param_1."!make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_504_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3249
    .const 'Sub' $P5014 = 'cuid_360_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_361_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_362_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_363_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_364_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_365_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_366_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_367_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_368_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_369_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_370_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_371_1361537952.49511' 
    capture_lex $P5014 
    .const 'Sub' $P5014 = 'cuid_372_1361537952.49511' 
    capture_lex $P5014 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_360_1361537952.49511' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_361_1361537952.49511' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_362_1361537952.49511' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_363_1361537952.49511' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_364_1361537952.49511' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_365_1361537952.49511' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_366_1361537952.49511' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_367_1361537952.49511' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_368_1361537952.49511' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_369_1361537952.49511' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_370_1361537952.49511' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_371_1361537952.49511' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_372_1361537952.49511' 
    capture_lex $P5013
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:my>" :subid("cuid_360_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3251
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$past", $P101 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1118 
    .local pmc fb_tmp_1119 
    .local pmc pkg_lookup_tmp_360 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 3252
    unless_null _lex_param_1, fallback8730
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5002
  fallback8730:
    set fb_tmp_1118, _lex_param_1
    repr_defined $I5001, fb_tmp_1118
    unless $I5001 goto if4359_else8728 
    set $P5003, fb_tmp_1118["statement"]
    set $P5005, $P5003
    goto if4359_end8729
  if4359_else8728:
    null $P5004
    set $P5005, $P5004
  if4359_end8729:
    unless_null $P5005, vivi_43608731
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5005, $P5006
  vivi_43608731:
    $P5007 = $P5005."ast"()
    set $P101, $P5007
.annotate 'line', 3253
    nqp_get_sc_object $P5009, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_360, $P5009
    get_who $P5010, pkg_lookup_tmp_360
    exists $I5003, $P5010["QAST"]
    unless $I5003 goto if4362_else8734 
    get_who $P5012, pkg_lookup_tmp_360
    set $P5011, $P5012["QAST"]
    set $P5014, $P5011
    goto if4362_end8735
  if4362_else8734:
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5014, $P5013
  if4362_end8735:
    get_who $P5008, $P5014
    set fb_tmp_1119, $P5008
    repr_defined $I5002, fb_tmp_1119
    unless $I5002 goto if4361_else8732 
    set $P5015, fb_tmp_1119["Regex"]
    set $P5017, $P5015
    goto if4361_end8733
  if4361_else8732:
    null $P5016
    set $P5017, $P5016
  if4361_end8733:
    unless_null $P5017, vivi_43638736
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_43638736:
    $P5019 = $P5017."new"($P101, "qastnode" :named("rxtype"), "declarative" :named("subtype"), _lex_param_1 :named("node"))
    $P5020 = _lex_param_1."!make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{ }>" :subid("cuid_361_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3257
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1120 
    .local pmc pkg_lookup_tmp_361 
    .local pmc fb_tmp_1121 
.annotate 'line', 3258
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_361, $P5002
    get_who $P5003, pkg_lookup_tmp_361
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4365_else8739 
    get_who $P5005, pkg_lookup_tmp_361
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4365_end8740
  if4365_else8739:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4365_end8740:
    get_who $P5001, $P5007
    set fb_tmp_1120, $P5001
    repr_defined $I5001, fb_tmp_1120
    unless $I5001 goto if4364_else8737 
    set $P5008, fb_tmp_1120["Regex"]
    set $P5010, $P5008
    goto if4364_end8738
  if4364_else8737:
    null $P5009
    set $P5010, $P5009
  if4364_end8738:
    unless_null $P5010, vivi_43668741
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43668741:
    unless_null _lex_param_1, fallback8744
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8744:
    set fb_tmp_1121, _lex_param_1
    repr_defined $I5003, fb_tmp_1121
    unless $I5003 goto if4367_else8742 
    set $P5013, fb_tmp_1121["codeblock"]
    set $P5015, $P5013
    goto if4367_end8743
  if4367_else8742:
    null $P5014
    set $P5015, $P5014
  if4367_end8743:
    unless_null $P5015, vivi_43688745
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_43688745:
    $P5017 = $P5015."ast"()
    $P5018 = $P5010."new"($P5017, "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5019 = _lex_param_1."!make"($P5018)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<nqpvar>" :subid("cuid_362_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3262
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1122 
    .local pmc pkg_lookup_tmp_362 
    .local pmc fb_tmp_1123 
    .local pmc pkg_lookup_tmp_363 
    .local pmc fb_tmp_1124 
    .local pmc pkg_lookup_tmp_364 
    .local pmc fb_tmp_1125 
    .local pmc fb_tmp_1126 
    .local pmc pkg_lookup_tmp_365 
    .local pmc fb_tmp_1127 
.annotate 'line', 3263
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_362, $P5002
    get_who $P5003, pkg_lookup_tmp_362
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4370_else8748 
    get_who $P5005, pkg_lookup_tmp_362
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4370_end8749
  if4370_else8748:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4370_end8749:
    get_who $P5001, $P5007
    set fb_tmp_1122, $P5001
    repr_defined $I5001, fb_tmp_1122
    unless $I5001 goto if4369_else8746 
    set $P5008, fb_tmp_1122["Regex"]
    set $P5010, $P5008
    goto if4369_end8747
  if4369_else8746:
    null $P5009
    set $P5010, $P5009
  if4369_end8747:
    unless_null $P5010, vivi_43718750
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43718750:
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_363, $P5013
    get_who $P5014, pkg_lookup_tmp_363
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4373_else8753 
    get_who $P5016, pkg_lookup_tmp_363
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4373_end8754
  if4373_else8753:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4373_end8754:
    get_who $P5012, $P5018
    set fb_tmp_1123, $P5012
    repr_defined $I5003, fb_tmp_1123
    unless $I5003 goto if4372_else8751 
    set $P5019, fb_tmp_1123["Node"]
    set $P5021, $P5019
    goto if4372_end8752
  if4372_else8751:
    null $P5020
    set $P5021, $P5020
  if4372_end8752:
    unless_null $P5021, vivi_43748755
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_43748755:
.annotate 'line', 3264
    nqp_get_sc_object $P5024, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_364, $P5024
    get_who $P5025, pkg_lookup_tmp_364
    exists $I5006, $P5025["QAST"]
    unless $I5006 goto if4376_else8758 
    get_who $P5027, pkg_lookup_tmp_364
    set $P5026, $P5027["QAST"]
    set $P5029, $P5026
    goto if4376_end8759
  if4376_else8758:
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5028
  if4376_end8759:
    get_who $P5023, $P5029
    set fb_tmp_1124, $P5023
    repr_defined $I5005, fb_tmp_1124
    unless $I5005 goto if4375_else8756 
    set $P5030, fb_tmp_1124["SVal"]
    set $P5032, $P5030
    goto if4375_end8757
  if4375_else8756:
    null $P5031
    set $P5032, $P5031
  if4375_end8757:
    unless_null $P5032, vivi_43778760
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_43778760:
    $P5034 = $P5032."new"("!INTERPOLATE" :named("value"))
.annotate 'line', 3265
    unless_null _lex_param_1, fallback8763
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5035
  fallback8763:
    set fb_tmp_1125, _lex_param_1
    repr_defined $I5007, fb_tmp_1125
    unless $I5007 goto if4378_else8761 
    set $P5036, fb_tmp_1125["var"]
    set $P5038, $P5036
    goto if4378_end8762
  if4378_else8761:
    null $P5037
    set $P5038, $P5037
  if4378_end8762:
    unless_null $P5038, vivi_43798764
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_43798764:
    $P5040 = $P5038."ast"()
.annotate 'line', 3266
    nqp_get_sc_object $P5042, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_365, $P5042
    get_who $P5043, pkg_lookup_tmp_365
    exists $I5009, $P5043["QAST"]
    unless $I5009 goto if4381_else8767 
    get_who $P5045, pkg_lookup_tmp_365
    set $P5044, $P5045["QAST"]
    set $P5047, $P5044
    goto if4381_end8768
  if4381_else8767:
    nqp_get_sc_object $P5046, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5047, $P5046
  if4381_end8768:
    get_who $P5041, $P5047
    set fb_tmp_1126, $P5041
    repr_defined $I5008, fb_tmp_1126
    unless $I5008 goto if4380_else8765 
    set $P5048, fb_tmp_1126["IVal"]
    set $P5050, $P5048
    goto if4380_end8766
  if4380_else8765:
    null $P5049
    set $P5050, $P5049
  if4380_end8766:
    unless_null $P5050, vivi_43828769
    nqp_get_sc_object $P5051, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5050, $P5051
  vivi_43828769:
    find_dynamic_lex $P5052, "$*SEQ"
    unless_null $P5052, fallback8772
    nqp_get_sc_object $P5054, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5053, $P5054
    set fb_tmp_1127, $P5053
    repr_defined $I5010, fb_tmp_1127
    unless $I5010 goto if4384_else8773 
    set $P5055, fb_tmp_1127["$SEQ"]
    set $P5057, $P5055
    goto if4384_end8774
  if4384_else8773:
    null $P5056
    set $P5057, $P5056
  if4384_end8774:
    unless_null $P5057, vivi_43858775
    nqp_get_sc_object $P5058, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5057, $P5058
  vivi_43858775:
    unless_null $P5057, vivi_43868776
    die "Contextual $*SEQ not found"
    box $P5059, "Contextual $*SEQ not found"
    set $P5057, $P5059
  vivi_43868776:
    set $P5052, $P5057
  fallback8772:
    unless $P5052 goto if4383_else8770 
    set $I5011, 1
    goto if4383_end8771
  if4383_else8770:
    set $I5011, 0
  if4383_end8771:
    $P5060 = $P5050."new"($I5011 :named("value"))
    $P5061 = $P5021."new"($P5034, $P5040, $P5060)
    $P5062 = $P5010."new"($P5061, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5063 = _lex_param_1."!make"($P5062)
    .return ($P5063) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<{ }>" :subid("cuid_363_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3270
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1128 
    .local pmc pkg_lookup_tmp_366 
    .local pmc fb_tmp_1129 
    .local pmc pkg_lookup_tmp_367 
    .local pmc fb_tmp_1130 
    .local pmc pkg_lookup_tmp_368 
    .local pmc fb_tmp_1131 
.annotate 'line', 3271
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_366, $P5002
    get_who $P5003, pkg_lookup_tmp_366
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4388_else8779 
    get_who $P5005, pkg_lookup_tmp_366
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4388_end8780
  if4388_else8779:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4388_end8780:
    get_who $P5001, $P5007
    set fb_tmp_1128, $P5001
    repr_defined $I5001, fb_tmp_1128
    unless $I5001 goto if4387_else8777 
    set $P5008, fb_tmp_1128["Regex"]
    set $P5010, $P5008
    goto if4387_end8778
  if4387_else8777:
    null $P5009
    set $P5010, $P5009
  if4387_end8778:
    unless_null $P5010, vivi_43898781
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_43898781:
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_367, $P5013
    get_who $P5014, pkg_lookup_tmp_367
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4391_else8784 
    get_who $P5016, pkg_lookup_tmp_367
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4391_end8785
  if4391_else8784:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4391_end8785:
    get_who $P5012, $P5018
    set fb_tmp_1129, $P5012
    repr_defined $I5003, fb_tmp_1129
    unless $I5003 goto if4390_else8782 
    set $P5019, fb_tmp_1129["Node"]
    set $P5021, $P5019
    goto if4390_end8783
  if4390_else8782:
    null $P5020
    set $P5021, $P5020
  if4390_end8783:
    unless_null $P5021, vivi_43928786
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_43928786:
.annotate 'line', 3272
    nqp_get_sc_object $P5024, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_368, $P5024
    get_who $P5025, pkg_lookup_tmp_368
    exists $I5006, $P5025["QAST"]
    unless $I5006 goto if4394_else8789 
    get_who $P5027, pkg_lookup_tmp_368
    set $P5026, $P5027["QAST"]
    set $P5029, $P5026
    goto if4394_end8790
  if4394_else8789:
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5028
  if4394_end8790:
    get_who $P5023, $P5029
    set fb_tmp_1130, $P5023
    repr_defined $I5005, fb_tmp_1130
    unless $I5005 goto if4393_else8787 
    set $P5030, fb_tmp_1130["SVal"]
    set $P5032, $P5030
    goto if4393_end8788
  if4393_else8787:
    null $P5031
    set $P5032, $P5031
  if4393_end8788:
    unless_null $P5032, vivi_43958791
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_43958791:
    $P5034 = $P5032."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3273
    unless_null _lex_param_1, fallback8794
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5035
  fallback8794:
    set fb_tmp_1131, _lex_param_1
    repr_defined $I5007, fb_tmp_1131
    unless $I5007 goto if4396_else8792 
    set $P5036, fb_tmp_1131["codeblock"]
    set $P5038, $P5036
    goto if4396_end8793
  if4396_else8792:
    null $P5037
    set $P5038, $P5037
  if4396_end8793:
    unless_null $P5038, vivi_43978795
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_43978795:
    $P5040 = $P5038."ast"()
    $P5041 = $P5021."new"($P5034, $P5040)
    $P5042 = $P5010."new"($P5041, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5043 = _lex_param_1."!make"($P5042)
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?{ }>" :subid("cuid_364_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3277
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1132 
    .local pmc pkg_lookup_tmp_369 
    .local pmc fb_tmp_1133 
    .local pmc fb_tmp_1134 
.annotate 'line', 3278
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_369, $P5002
    get_who $P5003, pkg_lookup_tmp_369
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4399_else8798 
    get_who $P5005, pkg_lookup_tmp_369
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4399_end8799
  if4399_else8798:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4399_end8799:
    get_who $P5001, $P5007
    set fb_tmp_1132, $P5001
    repr_defined $I5001, fb_tmp_1132
    unless $I5001 goto if4398_else8796 
    set $P5008, fb_tmp_1132["Regex"]
    set $P5010, $P5008
    goto if4398_end8797
  if4398_else8796:
    null $P5009
    set $P5010, $P5009
  if4398_end8797:
    unless_null $P5010, vivi_44008800
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_44008800:
    unless_null _lex_param_1, fallback8803
    nqp_get_sc_object $P5012, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5012
  fallback8803:
    set fb_tmp_1133, _lex_param_1
    repr_defined $I5003, fb_tmp_1133
    unless $I5003 goto if4401_else8801 
    set $P5013, fb_tmp_1133["codeblock"]
    set $P5015, $P5013
    goto if4401_end8802
  if4401_else8801:
    null $P5014
    set $P5015, $P5014
  if4401_end8802:
    unless_null $P5015, vivi_44028804
    nqp_get_sc_object $P5016, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5016
  vivi_44028804:
    $P5017 = $P5015."ast"()
    unless_null _lex_param_1, fallback8807
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5018
  fallback8807:
    set fb_tmp_1134, _lex_param_1
    repr_defined $I5005, fb_tmp_1134
    unless $I5005 goto if4403_else8805 
    set $P5019, fb_tmp_1134["zw"]
    set $P5021, $P5019
    goto if4403_end8806
  if4403_else8805:
    null $P5020
    set $P5021, $P5020
  if4403_end8806:
    unless_null $P5021, vivi_44048808
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_44048808:
    set $S5001, $P5021
    iseq $I5004, $S5001, "!"
    $P5023 = $P5010."new"($P5017, "zerowidth" :named("subtype"), $I5004 :named("negate"), "qastnode" :named("rxtype"), _lex_param_1 :named("node"))
    $P5024 = _lex_param_1."!make"($P5023)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<var>" :subid("cuid_365_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3283
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1135 
    .local pmc pkg_lookup_tmp_370 
    .local pmc fb_tmp_1136 
    .local pmc pkg_lookup_tmp_371 
    .local pmc fb_tmp_1137 
    .local pmc pkg_lookup_tmp_372 
    .local pmc fb_tmp_1138 
.annotate 'line', 3284
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_370, $P5002
    get_who $P5003, pkg_lookup_tmp_370
    exists $I5002, $P5003["QAST"]
    unless $I5002 goto if4406_else8811 
    get_who $P5005, pkg_lookup_tmp_370
    set $P5004, $P5005["QAST"]
    set $P5007, $P5004
    goto if4406_end8812
  if4406_else8811:
    nqp_get_sc_object $P5006, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5006
  if4406_end8812:
    get_who $P5001, $P5007
    set fb_tmp_1135, $P5001
    repr_defined $I5001, fb_tmp_1135
    unless $I5001 goto if4405_else8809 
    set $P5008, fb_tmp_1135["Regex"]
    set $P5010, $P5008
    goto if4405_end8810
  if4405_else8809:
    null $P5009
    set $P5010, $P5009
  if4405_end8810:
    unless_null $P5010, vivi_44078813
    nqp_get_sc_object $P5011, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5010, $P5011
  vivi_44078813:
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_371, $P5013
    get_who $P5014, pkg_lookup_tmp_371
    exists $I5004, $P5014["QAST"]
    unless $I5004 goto if4409_else8816 
    get_who $P5016, pkg_lookup_tmp_371
    set $P5015, $P5016["QAST"]
    set $P5018, $P5015
    goto if4409_end8817
  if4409_else8816:
    nqp_get_sc_object $P5017, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5017
  if4409_end8817:
    get_who $P5012, $P5018
    set fb_tmp_1136, $P5012
    repr_defined $I5003, fb_tmp_1136
    unless $I5003 goto if4408_else8814 
    set $P5019, fb_tmp_1136["Node"]
    set $P5021, $P5019
    goto if4408_end8815
  if4408_else8814:
    null $P5020
    set $P5021, $P5020
  if4408_end8815:
    unless_null $P5021, vivi_44108818
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_44108818:
.annotate 'line', 3285
    nqp_get_sc_object $P5024, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_372, $P5024
    get_who $P5025, pkg_lookup_tmp_372
    exists $I5006, $P5025["QAST"]
    unless $I5006 goto if4412_else8821 
    get_who $P5027, pkg_lookup_tmp_372
    set $P5026, $P5027["QAST"]
    set $P5029, $P5026
    goto if4412_end8822
  if4412_else8821:
    nqp_get_sc_object $P5028, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5028
  if4412_end8822:
    get_who $P5023, $P5029
    set fb_tmp_1137, $P5023
    repr_defined $I5005, fb_tmp_1137
    unless $I5005 goto if4411_else8819 
    set $P5030, fb_tmp_1137["SVal"]
    set $P5032, $P5030
    goto if4411_end8820
  if4411_else8819:
    null $P5031
    set $P5032, $P5031
  if4411_end8820:
    unless_null $P5032, vivi_44138823
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5032, $P5033
  vivi_44138823:
    $P5034 = $P5032."new"("!INTERPOLATE_REGEX" :named("value"))
.annotate 'line', 3286
    unless_null _lex_param_1, fallback8826
    nqp_get_sc_object $P5035, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5035
  fallback8826:
    set fb_tmp_1138, _lex_param_1
    repr_defined $I5007, fb_tmp_1138
    unless $I5007 goto if4414_else8824 
    set $P5036, fb_tmp_1138["var"]
    set $P5038, $P5036
    goto if4414_end8825
  if4414_else8824:
    null $P5037
    set $P5038, $P5037
  if4414_end8825:
    unless_null $P5038, vivi_44158827
    nqp_get_sc_object $P5039, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5038, $P5039
  vivi_44158827:
    $P5040 = $P5038."ast"()
    $P5041 = $P5021."new"($P5034, $P5040)
    $P5042 = $P5010."new"($P5041, "subrule" :named("rxtype"), "method" :named("subtype"), _lex_param_1 :named("node"))
    $P5043 = _lex_param_1."!make"($P5042)
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_366_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3290
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$block", $P101 
    .lex "$past", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1139 
    .local pmc fb_tmp_1140 
    .local pmc pkg_lookup_tmp_373 
    .local pmc fb_tmp_1141 
    .local pmc pkg_lookup_tmp_374 
    .local pmc fb_tmp_1142 
    .local pmc pkg_lookup_tmp_375 
    .local pmc fb_tmp_1143 
    .local pmc pkg_lookup_tmp_376 
    .local pmc fb_tmp_1144 
    .local pmc pkg_lookup_tmp_377 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
.annotate 'line', 3291
    unless_null _lex_param_1, fallback8830
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback8830:
    set fb_tmp_1139, _lex_param_1
    repr_defined $I5001, fb_tmp_1139
    unless $I5001 goto if4416_else8828 
    set $P5004, fb_tmp_1139["block"]
    set $P5006, $P5004
    goto if4416_end8829
  if4416_else8828:
    null $P5005
    set $P5006, $P5005
  if4416_end8829:
    unless_null $P5006, vivi_44178831
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_44178831:
    $P5008 = $P5006."ast"()
    set $P101, $P5008
.annotate 'line', 3292
    $P101."blocktype"("immediate")
.annotate 'line', 3294
    nqp_get_sc_object $P5010, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_373, $P5010
    get_who $P5011, pkg_lookup_tmp_373
    exists $I5003, $P5011["QAST"]
    unless $I5003 goto if4419_else8834 
    get_who $P5013, pkg_lookup_tmp_373
    set $P5012, $P5013["QAST"]
    set $P5015, $P5012
    goto if4419_end8835
  if4419_else8834:
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5015, $P5014
  if4419_end8835:
    get_who $P5009, $P5015
    set fb_tmp_1140, $P5009
    repr_defined $I5002, fb_tmp_1140
    unless $I5002 goto if4418_else8832 
    set $P5016, fb_tmp_1140["Stmts"]
    set $P5018, $P5016
    goto if4418_end8833
  if4418_else8832:
    null $P5017
    set $P5018, $P5017
  if4418_end8833:
    unless_null $P5018, vivi_44208836
    nqp_get_sc_object $P5019, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5018, $P5019
  vivi_44208836:
.annotate 'line', 3295
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_374, $P5021
    get_who $P5022, pkg_lookup_tmp_374
    exists $I5005, $P5022["QAST"]
    unless $I5005 goto if4422_else8839 
    get_who $P5024, pkg_lookup_tmp_374
    set $P5023, $P5024["QAST"]
    set $P5026, $P5023
    goto if4422_end8840
  if4422_else8839:
    nqp_get_sc_object $P5025, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5025
  if4422_end8840:
    get_who $P5020, $P5026
    set fb_tmp_1141, $P5020
    repr_defined $I5004, fb_tmp_1141
    unless $I5004 goto if4421_else8837 
    set $P5027, fb_tmp_1141["Op"]
    set $P5029, $P5027
    goto if4421_end8838
  if4421_else8837:
    null $P5028
    set $P5029, $P5028
  if4421_end8838:
    unless_null $P5029, vivi_44238841
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_44238841:
.annotate 'line', 3297
    nqp_get_sc_object $P5032, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_375, $P5032
    get_who $P5033, pkg_lookup_tmp_375
    exists $I5007, $P5033["QAST"]
    unless $I5007 goto if4425_else8844 
    get_who $P5035, pkg_lookup_tmp_375
    set $P5034, $P5035["QAST"]
    set $P5037, $P5034
    goto if4425_end8845
  if4425_else8844:
    nqp_get_sc_object $P5036, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5036
  if4425_end8845:
    get_who $P5031, $P5037
    set fb_tmp_1142, $P5031
    repr_defined $I5006, fb_tmp_1142
    unless $I5006 goto if4424_else8842 
    set $P5038, fb_tmp_1142["Var"]
    set $P5040, $P5038
    goto if4424_end8843
  if4424_else8842:
    null $P5039
    set $P5040, $P5039
  if4424_end8843:
    unless_null $P5040, vivi_44268846
    nqp_get_sc_object $P5041, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5040, $P5041
  vivi_44268846:
    $P5042 = $P5040."new"("$/" :named("name"), "contextual" :named("scope"))
.annotate 'line', 3298
    nqp_get_sc_object $P5044, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_376, $P5044
    get_who $P5045, pkg_lookup_tmp_376
    exists $I5009, $P5045["QAST"]
    unless $I5009 goto if4428_else8849 
    get_who $P5047, pkg_lookup_tmp_376
    set $P5046, $P5047["QAST"]
    set $P5049, $P5046
    goto if4428_end8850
  if4428_else8849:
    nqp_get_sc_object $P5048, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5049, $P5048
  if4428_end8850:
    get_who $P5043, $P5049
    set fb_tmp_1143, $P5043
    repr_defined $I5008, fb_tmp_1143
    unless $I5008 goto if4427_else8847 
    set $P5050, fb_tmp_1143["Op"]
    set $P5052, $P5050
    goto if4427_end8848
  if4427_else8847:
    null $P5051
    set $P5052, $P5051
  if4427_end8848:
    unless_null $P5052, vivi_44298851
    nqp_get_sc_object $P5053, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5052, $P5053
  vivi_44298851:
.annotate 'line', 3299
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_377, $P5055
    get_who $P5056, pkg_lookup_tmp_377
    exists $I5011, $P5056["QAST"]
    unless $I5011 goto if4431_else8854 
    get_who $P5058, pkg_lookup_tmp_377
    set $P5057, $P5058["QAST"]
    set $P5060, $P5057
    goto if4431_end8855
  if4431_else8854:
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5059
  if4431_end8855:
    get_who $P5054, $P5060
    set fb_tmp_1144, $P5054
    repr_defined $I5010, fb_tmp_1144
    unless $I5010 goto if4430_else8852 
    set $P5061, fb_tmp_1144["Var"]
    set $P5063, $P5061
    goto if4430_end8853
  if4430_else8852:
    null $P5062
    set $P5063, $P5062
  if4430_end8853:
    unless_null $P5063, vivi_44328856
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_44328856:
    $P5065 = $P5063."new"(utf8:"$\x{a2}" :named("name"), "contextual" :named("scope"))
    $P5066 = $P5052."new"($P5065, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5067 = $P5029."new"($P5042, $P5066, "bind" :named("op"))
    $P5068 = $P5018."new"($P5067, $P101)
    set $P102, $P5068
.annotate 'line', 3306
    $P5069 = _lex_param_1."!make"($P102)
    .return ($P5069) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_367_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3309
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5131 = 'cuid_505_1361537952.49511' 
    capture_lex $P5131 
    .const 'Sub' $P5131 = 'cuid_506_1361537952.49511' 
    capture_lex $P5131 
    .lex "$name", $P101 
    .lex "$qast", $P102 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1145 
    .local pmc fb_tmp_1146 
    .local pmc fb_tmp_1147 
    .local pmc fb_tmp_1148 
    .local pmc fb_tmp_1157 
    .local pmc pkg_lookup_tmp_380 
    .local pmc fb_tmp_1158 
    .local pmc pkg_lookup_tmp_381 
    .local pmc fb_tmp_1159 
    .local pmc pkg_lookup_tmp_382 
    .local pmc fb_tmp_1160 
    .local pmc fb_tmp_1161 
    .local pmc fb_tmp_1162 
    .local pmc fb_tmp_1164 
    .local pmc fb_tmp_1165 
    .local pmc fb_tmp_1166 
    .local pmc fb_tmp_1167 
    .local pmc fb_tmp_1168 
    .local pmc fb_tmp_1169 
    .local pmc fb_tmp_1170 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    unless_null _lex_param_1, fallback8859
    nqp_get_sc_object $P5003, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5003
  fallback8859:
    set fb_tmp_1145, _lex_param_1
    repr_defined $I5001, fb_tmp_1145
    unless $I5001 goto if4433_else8857 
    set $P5004, fb_tmp_1145["longname"]
    set $P5006, $P5004
    goto if4433_end8858
  if4433_else8857:
    null $P5005
    set $P5006, $P5005
  if4433_end8858:
    unless_null $P5006, vivi_44348860
    nqp_get_sc_object $P5007, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5006, $P5007
  vivi_44348860:
    set $S5001, $P5006
    box $P5008, $S5001
    set $P101, $P5008
    unless_null _lex_param_1, fallback8865
    nqp_get_sc_object $P5009, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5009
  fallback8865:
    set fb_tmp_1146, _lex_param_1
    repr_defined $I5002, fb_tmp_1146
    unless $I5002 goto if4436_else8863 
    set $P5010, fb_tmp_1146["assertion"]
    set $P5012, $P5010
    goto if4436_end8864
  if4436_else8863:
    null $P5011
    set $P5012, $P5011
  if4436_end8864:
    unless_null $P5012, vivi_44378866
    nqp_get_sc_object $P5013, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5012, $P5013
  vivi_44378866:
    unless $P5012 goto if4435_else8861 
.annotate 'line', 3312
.annotate 'line', 3313
    unless_null _lex_param_1, fallback8871
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5014
  fallback8871:
    set fb_tmp_1148, _lex_param_1
    repr_defined $I5004, fb_tmp_1148
    unless $I5004 goto if4439_else8869 
    set $P5015, fb_tmp_1148["assertion"]
    set $P5017, $P5015
    goto if4439_end8870
  if4439_else8869:
    null $P5016
    set $P5017, $P5016
  if4439_end8870:
    unless_null $P5017, vivi_44408872
    nqp_get_sc_object $P5018, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5017, $P5018
  vivi_44408872:
    set fb_tmp_1147, $P5017
    repr_defined $I5003, fb_tmp_1147
    unless $I5003 goto if4438_else8867 
    set $P5019, fb_tmp_1147[0]
    set $P5021, $P5019
    goto if4438_end8868
  if4438_else8867:
    null $P5020
    set $P5021, $P5020
  if4438_end8868:
    unless_null $P5021, vivi_44418873
    nqp_get_sc_object $P5022, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5021, $P5022
  vivi_44418873:
    $P5023 = $P5021."ast"()
    set $P102, $P5023
.annotate 'line', 3314
    nqp_decontainerize $P5024, _lex_param_0
    $P5025 = $P5024."subrule_alias"($P102, $P101)
    goto if4435_end8862
  if4435_else8861:
    set $S5002, $P101
    iseq $I5005, $S5002, "sym"
    unless $I5005 goto if4442_else8874 
    .const 'Sub' $P5026 = 'cuid_505_1361537952.49511' 
    capture_lex $P5026
    $P5027 = $P5026()
    set $P5129, $P5027
    goto if4442_end8875
  if4442_else8874:
.annotate 'line', 3324
.annotate 'line', 3325
    nqp_get_sc_object $P5029, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_380, $P5029
    get_who $P5030, pkg_lookup_tmp_380
    exists $I5007, $P5030["QAST"]
    unless $I5007 goto if4466_else8914 
    get_who $P5032, pkg_lookup_tmp_380
    set $P5031, $P5032["QAST"]
    set $P5034, $P5031
    goto if4466_end8915
  if4466_else8914:
    nqp_get_sc_object $P5033, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5034, $P5033
  if4466_end8915:
    get_who $P5028, $P5034
    set fb_tmp_1157, $P5028
    repr_defined $I5006, fb_tmp_1157
    unless $I5006 goto if4465_else8912 
    set $P5035, fb_tmp_1157["Regex"]
    set $P5037, $P5035
    goto if4465_end8913
  if4465_else8912:
    null $P5036
    set $P5037, $P5036
  if4465_end8913:
    unless_null $P5037, vivi_44678916
    nqp_get_sc_object $P5038, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5037, $P5038
  vivi_44678916:
.annotate 'line', 3327
    nqp_get_sc_object $P5040, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_381, $P5040
    get_who $P5041, pkg_lookup_tmp_381
    exists $I5009, $P5041["QAST"]
    unless $I5009 goto if4469_else8919 
    get_who $P5043, pkg_lookup_tmp_381
    set $P5042, $P5043["QAST"]
    set $P5045, $P5042
    goto if4469_end8920
  if4469_else8919:
    nqp_get_sc_object $P5044, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5045, $P5044
  if4469_end8920:
    get_who $P5039, $P5045
    set fb_tmp_1158, $P5039
    repr_defined $I5008, fb_tmp_1158
    unless $I5008 goto if4468_else8917 
    set $P5046, fb_tmp_1158["Node"]
    set $P5048, $P5046
    goto if4468_end8918
  if4468_else8917:
    null $P5047
    set $P5048, $P5047
  if4468_end8918:
    unless_null $P5048, vivi_44708921
    nqp_get_sc_object $P5049, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5049
  vivi_44708921:
    nqp_get_sc_object $P5051, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_382, $P5051
    get_who $P5052, pkg_lookup_tmp_382
    exists $I5011, $P5052["QAST"]
    unless $I5011 goto if4472_else8924 
    get_who $P5054, pkg_lookup_tmp_382
    set $P5053, $P5054["QAST"]
    set $P5056, $P5053
    goto if4472_end8925
  if4472_else8924:
    nqp_get_sc_object $P5055, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5056, $P5055
  if4472_end8925:
    get_who $P5050, $P5056
    set fb_tmp_1159, $P5050
    repr_defined $I5010, fb_tmp_1159
    unless $I5010 goto if4471_else8922 
    set $P5057, fb_tmp_1159["SVal"]
    set $P5059, $P5057
    goto if4471_end8923
  if4471_else8922:
    null $P5058
    set $P5059, $P5058
  if4471_end8923:
    unless_null $P5059, vivi_44738926
    nqp_get_sc_object $P5060, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5059, $P5060
  vivi_44738926:
    $P5061 = $P5059."new"($P101 :named("value"))
    $P5062 = $P5048."new"($P5061)
    $P5063 = $P5037."new"($P5062, "subrule" :named("rxtype"), "capture" :named("subtype"), _lex_param_1 :named("node"), $P101 :named("name"))
    set $P102, $P5063
    unless_null _lex_param_1, fallback8931
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5064
  fallback8931:
    set fb_tmp_1160, _lex_param_1
    repr_defined $I5012, fb_tmp_1160
    unless $I5012 goto if4475_else8929 
    set $P5065, fb_tmp_1160["arglist"]
    set $P5067, $P5065
    goto if4475_end8930
  if4475_else8929:
    null $P5066
    set $P5067, $P5066
  if4475_end8930:
    unless_null $P5067, vivi_44768932
    nqp_get_sc_object $P5068, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5067, $P5068
  vivi_44768932:
    unless $P5067 goto if4474_else8927 
.annotate 'line', 3328
.annotate 'line', 3329
    unless_null _lex_param_1, fallback8937
    nqp_get_sc_object $P5072, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5072
  fallback8937:
    set fb_tmp_1162, _lex_param_1
    repr_defined $I5014, fb_tmp_1162
    unless $I5014 goto if4478_else8935 
    set $P5073, fb_tmp_1162["arglist"]
    set $P5075, $P5073
    goto if4478_end8936
  if4478_else8935:
    null $P5074
    set $P5075, $P5074
  if4478_end8936:
    unless_null $P5075, vivi_44798938
    nqp_get_sc_object $P5076, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5075, $P5076
  vivi_44798938:
    set fb_tmp_1161, $P5075
    repr_defined $I5013, fb_tmp_1161
    unless $I5013 goto if4477_else8933 
    set $P5077, fb_tmp_1161[0]
    set $P5079, $P5077
    goto if4477_end8934
  if4477_else8933:
    null $P5078
    set $P5079, $P5078
  if4477_end8934:
    unless_null $P5079, vivi_44808939
    nqp_get_sc_object $P5080, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5079, $P5080
  vivi_44808939:
    $P5081 = $P5079."ast"()
    $P5082 = $P5081."list"()
    set $P5069, $P5082
    iter $P5071, $P5082
  for_next8943:
    unless $P5071, for_done8945
    shift $P5084, $P5071
  for_redo8944:
    .const 'Sub' $P5083 = 'cuid_506_1361537952.49511' 
    capture_lex $P5083
    $P5069 = $P5083($P5084)
    goto for_next8943
  for_done8945:
    set $P5128, $P5069
    goto if4474_end8928
  if4474_else8927:
    unless_null _lex_param_1, fallback8950
    nqp_get_sc_object $P5085, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5085
  fallback8950:
    set fb_tmp_1164, _lex_param_1
    repr_defined $I5015, fb_tmp_1164
    unless $I5015 goto if4484_else8948 
    set $P5086, fb_tmp_1164["nibbler"]
    set $P5088, $P5086
    goto if4484_end8949
  if4484_else8948:
    null $P5087
    set $P5088, $P5087
  if4484_end8949:
    unless_null $P5088, vivi_44858951
    nqp_get_sc_object $P5089, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5088, $P5089
  vivi_44858951:
    set $P5127, $P5088
    unless $P5088 goto if4483_end8947 
.annotate 'line', 3331
    set $S5003, $P101
    iseq $I5016, $S5003, "after"
    unless $I5016 goto if4486_else8952 
.annotate 'line', 3333
    set fb_tmp_1165, $P102
    repr_defined $I5017, fb_tmp_1165
    unless $I5017 goto if4487_else8954 
    set $P5090, fb_tmp_1165[0]
    set $P5092, $P5090
    goto if4487_end8955
  if4487_else8954:
    null $P5091
    set $P5092, $P5091
  if4487_end8955:
    unless_null $P5092, vivi_44888956
    nqp_get_sc_object $P5093, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5092, $P5093
  vivi_44888956:
    nqp_decontainerize $P5094, _lex_param_0
    nqp_decontainerize $P5095, _lex_param_0
    unless_null _lex_param_1, fallback8961
    nqp_get_sc_object $P5096, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5096
  fallback8961:
    set fb_tmp_1167, _lex_param_1
    repr_defined $I5019, fb_tmp_1167
    unless $I5019 goto if4490_else8959 
    set $P5097, fb_tmp_1167["nibbler"]
    set $P5099, $P5097
    goto if4490_end8960
  if4490_else8959:
    null $P5098
    set $P5099, $P5098
  if4490_end8960:
    unless_null $P5099, vivi_44918962
    nqp_get_sc_object $P5100, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5099, $P5100
  vivi_44918962:
    set fb_tmp_1166, $P5099
    repr_defined $I5018, fb_tmp_1166
    unless $I5018 goto if4489_else8957 
    set $P5101, fb_tmp_1166[0]
    set $P5103, $P5101
    goto if4489_end8958
  if4489_else8957:
    null $P5102
    set $P5103, $P5102
  if4489_end8958:
    unless_null $P5103, vivi_44928963
    nqp_get_sc_object $P5104, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5103, $P5104
  vivi_44928963:
    $P5105 = $P5103."ast"()
    $P5106 = $P5095."flip_ast"($P5105)
    $P5107 = $P5094."qbuildsub"($P5106, 1 :named("anon"), 1 :named("addself"))
    $P5108 = $P5092."push"($P5107)
    set $P5126, $P5108
    goto if4486_end8953
  if4486_else8952:
.annotate 'line', 3334
    set fb_tmp_1168, $P102
    repr_defined $I5020, fb_tmp_1168
    unless $I5020 goto if4493_else8964 
    set $P5109, fb_tmp_1168[0]
    set $P5111, $P5109
    goto if4493_end8965
  if4493_else8964:
    null $P5110
    set $P5111, $P5110
  if4493_end8965:
    unless_null $P5111, vivi_44948966
    nqp_get_sc_object $P5112, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5111, $P5112
  vivi_44948966:
    nqp_decontainerize $P5113, _lex_param_0
    unless_null _lex_param_1, fallback8971
    nqp_get_sc_object $P5114, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5114
  fallback8971:
    set fb_tmp_1170, _lex_param_1
    repr_defined $I5022, fb_tmp_1170
    unless $I5022 goto if4496_else8969 
    set $P5115, fb_tmp_1170["nibbler"]
    set $P5117, $P5115
    goto if4496_end8970
  if4496_else8969:
    null $P5116
    set $P5117, $P5116
  if4496_end8970:
    unless_null $P5117, vivi_44978972
    nqp_get_sc_object $P5118, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5117, $P5118
  vivi_44978972:
    set fb_tmp_1169, $P5117
    repr_defined $I5021, fb_tmp_1169
    unless $I5021 goto if4495_else8967 
    set $P5119, fb_tmp_1169[0]
    set $P5121, $P5119
    goto if4495_end8968
  if4495_else8967:
    null $P5120
    set $P5121, $P5120
  if4495_end8968:
    unless_null $P5121, vivi_44988973
    nqp_get_sc_object $P5122, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5121, $P5122
  vivi_44988973:
    $P5123 = $P5121."ast"()
    $P5124 = $P5113."qbuildsub"($P5123, 1 :named("anon"), 1 :named("addself"))
    $P5125 = $P5111."push"($P5124)
    set $P5126, $P5125
  if4486_end8953:
    set $P5127, $P5126
  if4483_end8947:
    set $P5128, $P5127
  if4474_end8928:
    set $P5129, $P5128
  if4442_end8875:
  if4435_end8862:
.annotate 'line', 3337
    $P5130 = _lex_param_1."!make"($P102)
    .return ($P5130) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_505_1361537952.49511") :anon :lex :outer("cuid_367_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3316
    .lex "$loc", $P101 
    .lex "$rxname", $P102 
    .local pmc fb_tmp_1149 
    .local pmc fb_tmp_1150 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_1151 
    .local pmc fb_tmp_1152 
    .local pmc pkg_viv_tmp_51 
    .local pmc fb_tmp_1153 
    .local pmc fb_tmp_1154 
    .local pmc pkg_viv_tmp_52 
    .local pmc fb_tmp_1155 
    .local pmc pkg_lookup_tmp_378 
    .local pmc fb_tmp_1156 
    .local pmc pkg_lookup_tmp_379 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "%*RX"
    unless_null $P5003, fallback8878
    nqp_get_sc_object $P5005, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_50, $P5004
    set fb_tmp_1150, pkg_viv_tmp_50
    repr_defined $I5003, fb_tmp_1150
    unless $I5003 goto if4444_else8879 
    set $P5006, fb_tmp_1150["%RX"]
    set $P5008, $P5006
    goto if4444_end8880
  if4444_else8879:
    null $P5007
    set $P5008, $P5007
  if4444_end8880:
    unless_null $P5008, vivi_44458881
    new $P5009, 'Hash'
    set pkg_viv_tmp_50["%RX"], $P5009
    set $P5008, $P5009
  vivi_44458881:
    unless_null $P5008, vivi_44468882
    die "Contextual %*RX not found"
    box $P5010, "Contextual %*RX not found"
    set $P5008, $P5010
  vivi_44468882:
    set $P5003, $P5008
  fallback8878:
    set fb_tmp_1149, $P5003
    repr_defined $I5002, fb_tmp_1149
    unless $I5002 goto if4443_else8876 
    set $P5011, fb_tmp_1149["name"]
    set $P5013, $P5011
    goto if4443_end8877
  if4443_else8876:
    null $P5012
    set $P5013, $P5012
  if4443_end8877:
    unless_null $P5013, vivi_44478883
    nqp_get_sc_object $P5014, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5013, $P5014
  vivi_44478883:
    set $S5001, $P5013
    index $I5001, $S5001, ":sym<", 0
    box $P5015, $I5001
    set $P101, $P5015
    set $N5001, $P101
    set $N5002, 0
    islt $I5004, $N5001, $N5002
    unless $I5004 goto if4448_end8885 
    find_dynamic_lex $P5016, "%*RX"
    unless_null $P5016, fallback8888
    nqp_get_sc_object $P5018, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_51, $P5017
    set fb_tmp_1152, pkg_viv_tmp_51
    repr_defined $I5007, fb_tmp_1152
    unless $I5007 goto if4450_else8889 
    set $P5019, fb_tmp_1152["%RX"]
    set $P5021, $P5019
    goto if4450_end8890
  if4450_else8889:
    null $P5020
    set $P5021, $P5020
  if4450_end8890:
    unless_null $P5021, vivi_44518891
    new $P5022, 'Hash'
    set pkg_viv_tmp_51["%RX"], $P5022
    set $P5021, $P5022
  vivi_44518891:
    unless_null $P5021, vivi_44528892
    die "Contextual %*RX not found"
    box $P5023, "Contextual %*RX not found"
    set $P5021, $P5023
  vivi_44528892:
    set $P5016, $P5021
  fallback8888:
    set fb_tmp_1151, $P5016
    repr_defined $I5006, fb_tmp_1151
    unless $I5006 goto if4449_else8886 
    set $P5024, fb_tmp_1151["name"]
    set $P5026, $P5024
    goto if4449_end8887
  if4449_else8886:
    null $P5025
    set $P5026, $P5025
  if4449_end8887:
    unless_null $P5026, vivi_44538893
    nqp_get_sc_object $P5027, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5026, $P5027
  vivi_44538893:
    set $S5002, $P5026
    index $I5005, $S5002, utf8:":sym\x{ab}", 0
    box $P5028, $I5005
    set $P101, $P5028
  if4448_end8885:
    find_dynamic_lex $P5029, "%*RX"
    unless_null $P5029, fallback8896
    nqp_get_sc_object $P5031, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_52, $P5030
    set fb_tmp_1154, pkg_viv_tmp_52
    repr_defined $I5009, fb_tmp_1154
    unless $I5009 goto if4455_else8897 
    set $P5032, fb_tmp_1154["%RX"]
    set $P5034, $P5032
    goto if4455_end8898
  if4455_else8897:
    null $P5033
    set $P5034, $P5033
  if4455_end8898:
    unless_null $P5034, vivi_44568899
    new $P5035, 'Hash'
    set pkg_viv_tmp_52["%RX"], $P5035
    set $P5034, $P5035
  vivi_44568899:
    unless_null $P5034, vivi_44578900
    die "Contextual %*RX not found"
    box $P5036, "Contextual %*RX not found"
    set $P5034, $P5036
  vivi_44578900:
    set $P5029, $P5034
  fallback8896:
    set fb_tmp_1153, $P5029
    repr_defined $I5008, fb_tmp_1153
    unless $I5008 goto if4454_else8894 
    set $P5037, fb_tmp_1153["name"]
    set $P5039, $P5037
    goto if4454_end8895
  if4454_else8894:
    null $P5038
    set $P5039, $P5038
  if4454_end8895:
    unless_null $P5039, vivi_44588901
    nqp_get_sc_object $P5040, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5039, $P5040
  vivi_44588901:
    set $S5005, $P5039
    set $N5004, $P101
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5010, $N5003
    substr $S5004, $S5005, $I5010
    chopn $S5003, $S5004, 1
    box $P5041, $S5003
    set $P102, $P5041
.annotate 'line', 3321
    nqp_get_sc_object $P5043, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_378, $P5043
    get_who $P5044, pkg_lookup_tmp_378
    exists $I5012, $P5044["QAST"]
    unless $I5012 goto if4460_else8904 
    get_who $P5046, pkg_lookup_tmp_378
    set $P5045, $P5046["QAST"]
    set $P5048, $P5045
    goto if4460_end8905
  if4460_else8904:
    nqp_get_sc_object $P5047, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5048, $P5047
  if4460_end8905:
    get_who $P5042, $P5048
    set fb_tmp_1155, $P5042
    repr_defined $I5011, fb_tmp_1155
    unless $I5011 goto if4459_else8902 
    set $P5049, fb_tmp_1155["Regex"]
    set $P5051, $P5049
    goto if4459_end8903
  if4459_else8902:
    null $P5050
    set $P5051, $P5050
  if4459_end8903:
    unless_null $P5051, vivi_44618906
    nqp_get_sc_object $P5052, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5051, $P5052
  vivi_44618906:
    find_lex $P5053, "$/"
.annotate 'line', 3322
    nqp_get_sc_object $P5055, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    set pkg_lookup_tmp_379, $P5055
    get_who $P5056, pkg_lookup_tmp_379
    exists $I5014, $P5056["QAST"]
    unless $I5014 goto if4463_else8909 
    get_who $P5058, pkg_lookup_tmp_379
    set $P5057, $P5058["QAST"]
    set $P5060, $P5057
    goto if4463_end8910
  if4463_else8909:
    nqp_get_sc_object $P5059, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5060, $P5059
  if4463_end8910:
    get_who $P5054, $P5060
    set fb_tmp_1156, $P5054
    repr_defined $I5013, fb_tmp_1156
    unless $I5013 goto if4462_else8907 
    set $P5061, fb_tmp_1156["Regex"]
    set $P5063, $P5061
    goto if4462_end8908
  if4462_else8907:
    null $P5062
    set $P5063, $P5062
  if4462_end8908:
    unless_null $P5063, vivi_44648911
    nqp_get_sc_object $P5064, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5063, $P5064
  vivi_44648911:
    find_lex $P5065, "$/"
    $P5066 = $P5063."new"($P102, "literal" :named("rxtype"), $P5065 :named("node"))
    $P5067 = $P5051."new"($P5066, "sym" :named("name"), "subcapture" :named("rxtype"), $P5053 :named("node"))
    store_lex "$qast", $P5067
    .return ($P5067) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_506_1361537952.49511") :anon :lex :outer("cuid_367_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3329
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_1163 
    find_lex $P5001, "$qast"
    set fb_tmp_1163, $P5001
    repr_defined $I5001, fb_tmp_1163
    unless $I5001 goto if4481_else8940 
    set $P5002, fb_tmp_1163[0]
    set $P5004, $P5002
    goto if4481_end8941
  if4481_else8940:
    null $P5003
    set $P5004, $P5003
  if4481_end8941:
    unless_null $P5004, vivi_44828942
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_44828942:
    $P5006 = $P5004."push"(_lex_param_0)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_368_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3340
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$/", _lex_param_1 
    .local pmc fb_tmp_1171 
.annotate 'line', 3341
    unless_null _lex_param_1, fallback8976
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set _lex_param_1, $P5001
  fallback8976:
    set fb_tmp_1171, _lex_param_1
    repr_defined $I5001, fb_tmp_1171
    unless $I5001 goto if4499_else8974 
    set $P5002, fb_tmp_1171["quote_EXPR"]
    set $P5004, $P5002
    goto if4499_end8975
  if4499_else8974:
    null $P5003
    set $P5004, $P5003
  if4499_end8975:
    unless_null $P5004, vivi_45008977
    nqp_get_sc_object $P5005, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5004, $P5005
  vivi_45008977:
    $P5006 = $P5004."ast"()
    $P5007 = _lex_param_1."!make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_369_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3344
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$code", $P101 
    .lex "self", _lex_param_0 
    .lex "$block", _lex_param_1 
    .local pmc fb_tmp_1172 
    .local pmc fb_tmp_1173 
    .local pmc pkg_viv_tmp_53 
    .local pmc fb_tmp_1174 
    .local pmc fb_tmp_1175 
    .local pmc pkg_viv_tmp_54 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P101, $P5001
.annotate 'line', 3345
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback8978
    nqp_get_sc_object $P5004, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5003, $P5004
    set fb_tmp_1172, $P5003
    repr_defined $I5001, fb_tmp_1172
    unless $I5001 goto if4501_else8979 
    set $P5005, fb_tmp_1172["$W"]
    set $P5007, $P5005
    goto if4501_end8980
  if4501_else8979:
    null $P5006
    set $P5007, $P5006
  if4501_end8980:
    unless_null $P5007, vivi_45028981
    nqp_get_sc_object $P5008, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5007, $P5008
  vivi_45028981:
    unless_null $P5007, vivi_45038982
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_45038982:
    set $P5002, $P5007
  fallback8978:
    $P5010 = $P5002."create_code"(_lex_param_1, "", 0, "NQPRegex" :named("code_type_name"))
    set $P101, $P5010
    find_dynamic_lex $P5011, "%*RX"
    unless_null $P5011, fallback8985
    nqp_get_sc_object $P5013, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_53, $P5012
    set fb_tmp_1173, pkg_viv_tmp_53
    repr_defined $I5003, fb_tmp_1173
    unless $I5003 goto if4505_else8986 
    set $P5014, fb_tmp_1173["%RX"]
    set $P5016, $P5014
    goto if4505_end8987
  if4505_else8986:
    null $P5015
    set $P5016, $P5015
  if4505_end8987:
    unless_null $P5016, vivi_45068988
    new $P5017, 'Hash'
    set pkg_viv_tmp_53["%RX"], $P5017
    set $P5016, $P5017
  vivi_45068988:
    unless_null $P5016, vivi_45078989
    die "Contextual %*RX not found"
    box $P5018, "Contextual %*RX not found"
    set $P5016, $P5018
  vivi_45078989:
    set $P5011, $P5016
  fallback8985:
    exists $I5002, $P5011["code"]
    unless $I5002 goto if4504_end8984 
.annotate 'line', 3346
.annotate 'line', 3347
    find_dynamic_lex $P5019, "%*RX"
    unless_null $P5019, fallback8992
    nqp_get_sc_object $P5021, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_54, $P5020
    set fb_tmp_1175, pkg_viv_tmp_54
    repr_defined $I5005, fb_tmp_1175
    unless $I5005 goto if4509_else8993 
    set $P5022, fb_tmp_1175["%RX"]
    set $P5024, $P5022
    goto if4509_end8994
  if4509_else8993:
    null $P5023
    set $P5024, $P5023
  if4509_end8994:
    unless_null $P5024, vivi_45108995
    new $P5025, 'Hash'
    set pkg_viv_tmp_54["%RX"], $P5025
    set $P5024, $P5025
  vivi_45108995:
    unless_null $P5024, vivi_45118996
    die "Contextual %*RX not found"
    box $P5026, "Contextual %*RX not found"
    set $P5024, $P5026
  vivi_45118996:
    set $P5019, $P5024
  fallback8992:
    set fb_tmp_1174, $P5019
    repr_defined $I5004, fb_tmp_1174
    unless $I5004 goto if4508_else8990 
    set $P5027, fb_tmp_1174["code"]
    set $P5029, $P5027
    goto if4508_end8991
  if4508_else8990:
    null $P5028
    set $P5029, $P5028
  if4508_end8991:
    unless_null $P5029, vivi_45128997
    nqp_get_sc_object $P5030, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    set $P5029, $P5030
  vivi_45128997:
    $P5031 = $P5029."ADD_NESTED_CODE"($P101)
  if4504_end8984:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_370_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3352
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$nfa", _lex_param_3 
.annotate 'line', 3353
    $P5001 = _lex_param_3."save"()
    $P5002 = _lex_param_1."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_371_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3356
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "%caps", _lex_param_3 
.annotate 'line', 3357
    $P5001 = _lex_param_1."SET_CAPS"(_lex_param_3)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_372_1361537952.49511") :anon :lex :outer("cuid_504_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3360
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .const 'Sub' $P5008 = 'cuid_507_1361537952.49511' 
    capture_lex $P5008 
    .lex "@saved", $P101 
    .lex "self", _lex_param_0 
    .lex "$code_obj", _lex_param_1 
    .lex "$block", _lex_param_2 
    .lex "$key", _lex_param_3 
    .lex "@alternatives", _lex_param_4 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_4
    iter $P5004, _lex_param_4
  for_next8998:
    unless $P5004, for_done9000
    shift $P5006, $P5004
  for_redo8999:
    .const 'Sub' $P5005 = 'cuid_507_1361537952.49511' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next8998
  for_done9000:
.annotate 'line', 3365
    $P5007 = _lex_param_1."SET_ALT_NFA"(_lex_param_3, $P101)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_507_1361537952.49511") :anon :lex :outer("cuid_372_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3362
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 3363
    find_lex $P5001, "@saved"
    $P5002 = _lex_param_0."save"(1 :named("non_empty"))
    $P5003 = $P5001."push"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_508_1361537952.49511") :anon :lex :outer("cuid_374_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
.annotate 'line', 3370
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863", 25
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_510_1361537952.49511") :load :init
.annotate 'file', "src/stage2/gen/NQP.pm"
    .const 'Sub' $P5001 = 'cuid_509_1361537952.49511' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_374_1361537952.49511" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPP6QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src/stage2/gen/NQP.pm")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "7DD1B5B9E21CADC2FBACC98D0B31001EB126DE0C-1361537912.59024"
    push $P5004, "src/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "NQP"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "D4E0CA5AAC5F9C8A71CA3B044B7ECC9913216510-1361537907.73863"
    push $P5004, "src/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "__dump"
    push $P5004, "BUILD"
    push $P5004, "slot_for_object"
    push $P5004, "FF45FE93F2CABD7DE984214B41A3DF6A1D65EBE6-1361537918.36225"
    push $P5004, "src/stage2/gen/NQPHLL.pm"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "push_lexpad"
    push $P5004, "pop_lexpad"
    push $P5004, "cur_lexpad"
    push $P5004, "get_legacy_block_list"
    push $P5004, "load_setting"
    push $P5004, "load_module"
    push $P5004, "import"
    push $P5004, "install_package_symbol"
    push $P5004, "install_lexical_symbol"
    push $P5004, "install_package_routine"
    push $P5004, "create_code"
    push $P5004, "pkg_create_mo"
    push $P5004, "pkg_add_attribute"
    push $P5004, "pkg_add_method"
    push $P5004, "set_routine_signature"
    push $P5004, "pkg_set_body_block"
    push $P5004, "pkg_add_parent_or_role"
    push $P5004, "pkg_add_parrot_vtable_handler_mapping"
    push $P5004, "pkg_compose"
    push $P5004, "run_begin_block"
    push $P5004, "libs"
    push $P5004, "add_initializations"
    push $P5004, "cleanup"
    push $P5004, "is_lexical"
    push $P5004, "is_package"
    push $P5004, "is_scope"
    push $P5004, "known_sym"
    push $P5004, "find_sym"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "%!addr_to_slot"
    push $P5004, "@!BLOCKS"
    push $P5004, "%!code_objects_to_fix_up"
    push $P5004, "%!code_object_types"
    push $P5004, "%!code_object_fixup_list"
    push $P5004, "%!code_stub_sc_idx"
    push $P5004, "@!clearup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "TOP"
    push $P5004, "identifier"
    push $P5004, "name"
    push $P5004, "deflongname"
    push $P5004, "ENDSTMT"
    push $P5004, "unv"
    push $P5004, "pod_comment"
    push $P5004, "comp_unit"
    push $P5004, "statementlist"
    push $P5004, "statement"
    push $P5004, "eat_terminator"
    push $P5004, "xblock"
    push $P5004, "pblock"
    push $P5004, "lambda"
    push $P5004, "block"
    push $P5004, "blockoid"
    push $P5004, "newpad"
    push $P5004, "outerctx"
    push $P5004, "finishpad"
    push $P5004, "you_are_here"
    push $P5004, "terminator"
    push $P5004, "terminator:sym<;>"
    push $P5004, "terminator:sym<}>"
    push $P5004, "statement_control"
    push $P5004, "statement_control:sym<use>"
    push $P5004, "statement_control:sym<if>"
    push $P5004, "statement_control:sym<unless>"
    push $P5004, "statement_control:sym<while>"
    push $P5004, "statement_control:sym<repeat>"
    push $P5004, "statement_control:sym<for>"
    push $P5004, "statement_control:sym<CATCH>"
    push $P5004, "statement_control:sym<CONTROL>"
    push $P5004, "statement_prefix"
    push $P5004, "statement_prefix:sym<BEGIN>"
    push $P5004, "statement_prefix:sym<INIT>"
    push $P5004, "statement_prefix:sym<try>"
    push $P5004, "blorst"
    push $P5004, "statement_mod_cond"
    push $P5004, "statement_mod_cond:sym<if>"
    push $P5004, "statement_mod_cond:sym<unless>"
    push $P5004, "statement_mod_loop"
    push $P5004, "statement_mod_loop:sym<while>"
    push $P5004, "statement_mod_loop:sym<until>"
    push $P5004, "statement_mod_loop:sym<for>"
    push $P5004, "term:sym<fatarrow>"
    push $P5004, "term:sym<colonpair>"
    push $P5004, "term:sym<variable>"
    push $P5004, "term:sym<package_declarator>"
    push $P5004, "term:sym<scope_declarator>"
    push $P5004, "term:sym<routine_declarator>"
    push $P5004, "term:sym<multi_declarator>"
    push $P5004, "term:sym<regex_declarator>"
    push $P5004, "term:sym<statement_prefix>"
    push $P5004, "term:sym<lambda>"
    push $P5004, "fatarrow"
    push $P5004, "colonpair"
    push $P5004, "variable"
    push $P5004, "sigil"
    push $P5004, "twigil"
    push $P5004, "package_declarator"
    push $P5004, "package_declarator:sym<module>"
    push $P5004, "package_declarator:sym<knowhow>"
    push $P5004, "package_declarator:sym<class>"
    push $P5004, "package_declarator:sym<grammar>"
    push $P5004, "package_declarator:sym<role>"
    push $P5004, "package_declarator:sym<native>"
    push $P5004, "package_declarator:sym<stub>"
    push $P5004, "package_def"
    push $P5004, "role_params"
    push $P5004, "scope_declarator"
    push $P5004, "scope_declarator:sym<my>"
    push $P5004, "scope_declarator:sym<our>"
    push $P5004, "scope_declarator:sym<has>"
    push $P5004, "scoped"
    push $P5004, "typename"
    push $P5004, "declarator"
    push $P5004, "variable_declarator"
    push $P5004, "routine_declarator"
    push $P5004, "routine_declarator:sym<sub>"
    push $P5004, "routine_declarator:sym<method>"
    push $P5004, "routine_def"
    push $P5004, "method_def"
    push $P5004, "onlystar"
    push $P5004, "multi_declarator"
    push $P5004, "multi_declarator:sym<multi>"
    push $P5004, "multi_declarator:sym<proto>"
    push $P5004, "multi_declarator:sym<null>"
    push $P5004, "signature"
    push $P5004, "parameter"
    push $P5004, "param_var"
    push $P5004, "named_param"
    push $P5004, "default_value"
    push $P5004, "trait"
    push $P5004, "trait_mod"
    push $P5004, "trait_mod:sym<is>"
    push $P5004, "regex_declarator"
    push $P5004, "dotty"
    push $P5004, "term:sym<self>"
    push $P5004, "term:sym<identifier>"
    push $P5004, "term:sym<name>"
    push $P5004, "term:sym<pir::op>"
    push $P5004, "term:sym<pir::const>"
    push $P5004, "term:sym<nqp::op>"
    push $P5004, "term:sym<nqp::const>"
    push $P5004, "term:sym<onlystar>"
    push $P5004, "args"
    push $P5004, "arglist"
    push $P5004, "term:sym<value>"
    push $P5004, "value"
    push $P5004, "number"
    push $P5004, "quote"
    push $P5004, "quote:sym<apos>"
    push $P5004, "quote:sym<dblq>"
    push $P5004, "quote:sym<q>"
    push $P5004, "quote:sym<qq>"
    push $P5004, "quote:sym<Q>"
    push $P5004, "quote:sym<Q:PIR>"
    push $P5004, "quote:sym</ />"
    push $P5004, "quote_escape:sym<$>"
    push $P5004, "quote_escape:sym<{ }>"
    push $P5004, "circumfix:sym<( )>"
    push $P5004, "circumfix:sym<[ ]>"
    push $P5004, "circumfix:sym<ang>"
    push $P5004, utf8:"circumfix:sym<\x{ab} \x{bb}>"
    push $P5004, "circumfix:sym<{ }>"
    push $P5004, "semilist"
    push $P5004, "infixstopper"
    push $P5004, "postcircumfix:sym<[ ]>"
    push $P5004, "postcircumfix:sym<{ }>"
    push $P5004, "postcircumfix:sym<ang>"
    push $P5004, "postcircumfix:sym<( )>"
    push $P5004, "postfix:sym<.>"
    push $P5004, "prefix:sym<++>"
    push $P5004, "prefix:sym<-->"
    push $P5004, "postfix:sym<++>"
    push $P5004, "postfix:sym<-->"
    push $P5004, "infix:sym<**>"
    push $P5004, "prefix:sym<+>"
    push $P5004, "prefix:sym<~>"
    push $P5004, "prefix:sym<->"
    push $P5004, "prefix:sym<?>"
    push $P5004, "prefix:sym<!>"
    push $P5004, "prefix:sym<|>"
    push $P5004, "infix:sym<*>"
    push $P5004, "infix:sym</>"
    push $P5004, "infix:sym<%>"
    push $P5004, "infix:sym<+&>"
    push $P5004, "infix:sym<+>"
    push $P5004, "infix:sym<->"
    push $P5004, "infix:sym<+|>"
    push $P5004, "infix:sym<+^>"
    push $P5004, "infix:sym<~>"
    push $P5004, "infix:sym<==>"
    push $P5004, "infix:sym<!=>"
    push $P5004, "infix:sym<<=>"
    push $P5004, "infix:sym<>=>"
    push $P5004, "infix:sym<<>"
    push $P5004, "infix:sym<>>"
    push $P5004, "infix:sym<eq>"
    push $P5004, "infix:sym<ne>"
    push $P5004, "infix:sym<le>"
    push $P5004, "infix:sym<ge>"
    push $P5004, "infix:sym<lt>"
    push $P5004, "infix:sym<gt>"
    push $P5004, "infix:sym<=:=>"
    push $P5004, "infix:sym<~~>"
    push $P5004, "infix:sym<&&>"
    push $P5004, "infix:sym<||>"
    push $P5004, "infix:sym<//>"
    push $P5004, "infix:sym<?? !!>"
    push $P5004, "infix:sym<=>"
    push $P5004, "infix:sym<:=>"
    push $P5004, "infix:sym<::=>"
    push $P5004, "infix:sym<,>"
    push $P5004, "prefix:sym<return>"
    push $P5004, "prefix:sym<make>"
    push $P5004, "term:sym<last>"
    push $P5004, "term:sym<next>"
    push $P5004, "term:sym<redo>"
    push $P5004, "smartmatch"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "7433AC1B6CF7AE716AD54E1921987807F4E7F67F-1361537946.1771"
    push $P5004, "src/stage2/gen/NQPP6QRegex.pm"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_null_pattern"
    push $P5004, "normspace"
    push $P5004, "arg"
    push $P5004, "nibbler"
    push $P5004, "rxstopper"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<ws>"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "metachar:sym<var>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "metachar:sym<:my>"
    push $P5004, "metachar:sym<{ }>"
    push $P5004, "metachar:sym<nqpvar>"
    push $P5004, "assertion:sym<{ }>"
    push $P5004, "assertion:sym<?{ }>"
    push $P5004, "assertion:sym<var>"
    push $P5004, "codeblock"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "past"
    push $P5004, "post"
    push $P5004, "pirbegin"
    push $P5004, "pir"
    push $P5004, "pbc"
    push $P5004, "init"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "vmstat"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, ""
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "alt_nfa__1_1361537954.24231"
    push $P5004, "alt_nfa__2_1361537954.27351"
    push $P5004, utf8:"\n\x{b}\f\r\x{85}\u2028\u2029"
    push $P5004, "alt_nfa__4_1361537954.28911"
    push $P5004, "alt_nfa__3_1361537954.28911"
    push $P5004, "alt_nfa__6_1361537954.42951"
    push $P5004, "alt_nfa__5_1361537954.41391"
    push $P5004, "alt_nfa__7_1361537954.55431"
    push $P5004, "alt_nfa__9_1361537954.60111"
    push $P5004, "alt_nfa__8_1361537954.55431"
    push $P5004, "{"
    push $P5004, "alt_nfa__10_1361537954.63231"
    push $P5004, "alt_nfa__11_1361537954.64791"
    push $P5004, ";"
    push $P5004, "}"
    push $P5004, "sym"
    push $P5004, "else"
    push $P5004, "alt_nfa__12_1361537954.77271"
    push $P5004, "wu"
    push $P5004, "alt_nfa__13_1361537954.80391"
    push $P5004, "alt_nfa__14_1361537954.80391"
    push $P5004, "alt_nfa__15_1361537954.80391"
    push $P5004, "alt_nfa__16_1361537954.89751"
    push $P5004, "cond"
    push $P5004, "alt_nfa__17_1361537954.99111"
    push $P5004, "alt_nfa__18_1361537955.00671"
    push $P5004, "key"
    push $P5004, "val"
    push $P5004, "not"
    push $P5004, "alt_nfa__19_1361537955.05351"
    push $P5004, "desigilname"
    push $P5004, "<"
    push $P5004, "/_!"
    push $P5004, "alt_nfa__20_1361537955.08471"
    push $P5004, "$@%&"
    push $P5004, "*!?"
    push $P5004, "metaclass"
    push $P5004, "repr"
    push $P5004, "export"
    push $P5004, "parent"
    push $P5004, "role"
    push $P5004, "alt_nfa__21_1361537955.53711"
    push $P5004, "alt_nfa__22_1361537955.56831"
    push $P5004, "alt_nfa__23_1361537955.63071"
    push $P5004, "latename"
    push $P5004, "private"
    push $P5004, "alt_nfa__24_1361537955.70871"
    push $P5004, "invocant"
    push $P5004, "alt_nfa__26_1361537955.80231"
    push $P5004, "alt_nfa__25_1361537955.80231"
    push $P5004, "definedness"
    push $P5004, "quant"
    push $P5004, "_DU"
    push $P5004, "alt_nfa__27_1361537955.83351"
    push $P5004, "alt_nfa__28_1361537955.83351"
    push $P5004, "alt_nfa__29_1361537955.83351"
    push $P5004, "/!"
    push $P5004, "alt_nfa__30_1361537955.84911"
    push $P5004, "longname"
    push $P5004, "proto"
    push $P5004, "p6regex"
    push $P5004, "alt_nfa__31_1361537956.03631"
    push $P5004, "alt_nfa__32_1361537956.03631"
    push $P5004, "alt_nfa__33_1361537956.03631"
    push $P5004, "'\""
    push $P5004, "("
    push $P5004, "alt_nfa__34_1361537956.06751"
    push $P5004, "alt_nfa__35_1361537956.06751"
    push $P5004, "op"
    push $P5004, "const"
    push $P5004, "alt_nfa__36_1361537956.16111"
    push $P5004, "alt_nfa__37_1361537956.17671"
    push $P5004, "sign"
    push $P5004, "alt_nfa__38_1361537956.22352"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "$"
    push $P5004, utf8:"\x{ab}"
    push $P5004, "OPER"
    push $P5004, ">"
    push $P5004, "}/"
    push $P5004, "var"
    push $P5004, "alt_nfa__39_1361537957.26872"
    push $P5004, "alt_nfa__40_1361537957.29992"
    push $P5004, "alt_nfa__41_1361537957.31552"
    push $P5004, "zw"
    push $P5004, "?!"
    push $P5004, "alt_nfa__42_1361537957.36232"
    push $P5004, "$@"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "0CFA2EB01BFB7173CB04D945815D8B274BC236CB-1361537902.85582"
    push $P5004, "src/stage2/gen/nqp-mo.pm"
    push $P5004, "NQP::World"
    push $P5004, "NQP::Grammar"
    push $P5004, "alt_nfa__1_1361537918.50265"
    push $P5004, "alt_nfa__2_1361537918.54945"
    push $P5004, "alt_nfa__3_1361537918.65865"
    push $P5004, "alt_nfa__4_1361537918.65865"
    push $P5004, "alt_nfa__5_1361537918.68985"
    push $P5004, "alt_nfa__6_1361537918.78345"
    push $P5004, "alt_nfa__7_1361537918.79905"
    push $P5004, "alt_nfa__8_1361537918.87705"
    push $P5004, "alt_nfa__9_1361537918.92385"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "NQP::Regex"
    push $P5004, "alt_nfa__1_1361537946.3331"
    push $P5004, "alt_nfa__2_1361537946.3487"
    push $P5004, "alt_nfa__3_1361537946.4111"
    push $P5004, "alt_nfa__4_1361537946.5047"
    push $P5004, "alt_nfa__5_1361537946.5359"
    push $P5004, "alt_nfa__6_1361537946.6295"
    push $P5004, "alt_nfa__7_1361537946.6919"
    push $P5004, "alt_nfa__8_1361537946.7075"
    push $P5004, "alt_nfa__9_1361537946.8011"
    push $P5004, "alt_nfa__10_1361537946.8947"
    push $P5004, "alt_nfa__11_1361537946.9259"
    push $P5004, "alt_nfa__12_1361537947.0351"
    push $P5004, "alt_nfa__13_1361537947.1131"
    push $P5004, "alt_nfa__14_1361537947.1287"
    push $P5004, "alt_nfa__15_1361537947.2535"
    push $P5004, "alt_nfa__16_1361537947.2691"
    push $P5004, "alt_nfa__17_1361537947.3003"
    push $P5004, "alt_nfa__18_1361537947.3159"
    push $P5004, "alt_nfa__19_1361537947.3939"
    push $P5004, "alt_nfa__20_1361537947.3939"
    push $P5004, "alt_nfa__21_1361537947.3939"
    push $P5004, "alt_nfa__23_1361537947.4563"
    push $P5004, "alt_nfa__24_1361537947.4563"
    push $P5004, "alt_nfa__22_1361537947.3939"
    push $P5004, "NQP::Actions"
    push $P5004, "NQP::RegexActions"
    push $P5004, "NQP::Compiler"
    push $P5004, "CompileTimeValue"
    push $P5004, "790414E005FB5592A735E24F73F0C2BBC92B5F1E-1361537910.23463"
    push $P5004, "src/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Node"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "981BD5FC0B0D36B182D3DEC7128221DD4645D2E4-1361537925.07026"
    push $P5004, "src/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "RegexActions"
    push $P5004, "Ee"
    push $P5004, "01"
    push $P5004, "01234567"
    push $P5004, "0123456789abcdefABCDEF"
    push $P5004, "?@ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "xX"
    push $P5004, "cC"
    push $P5004, "&|~"
    .const 'Sub' $P5005 = 'cuid_509_1361537952.49511' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if4523_end9019 
    die "Repossession conflicts occurred during deserialization"
  if4523_end9019:
    .const "LexInfo" $P5001 = "cuid_374_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_374_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_374_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 5
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_3_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 6
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_12_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 15
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 16
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_26_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 30
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 31
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_32_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_377_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_377_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_377_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_377_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_35_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_36_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 42
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 43
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_52_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 59
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 60
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 61
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_63_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 72
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 73
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_87_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 97
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_142_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_143_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_144_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_145_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_146_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_147_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_148_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 152
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_149_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 153
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_150_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 154
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_151_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 155
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_152_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 156
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_153_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 157
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_154_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 158
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_155_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 159
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_156_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 160
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_157_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 161
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_158_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 162
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_159_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 163
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_160_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 164
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_161_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 165
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_162_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 166
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_163_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 167
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_164_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 168
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_165_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 169
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_166_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 170
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_167_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 171
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_168_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 172
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_169_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 173
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_170_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 174
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_171_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 175
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_172_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 176
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_173_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 177
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_174_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 178
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_175_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 179
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_176_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 180
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_177_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 181
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_178_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 182
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_179_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 183
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_180_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 184
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_181_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 185
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_182_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 186
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_183_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 187
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_184_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 188
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_185_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 189
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_186_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 190
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_187_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 191
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_188_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 192
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_189_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 193
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_190_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 194
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_191_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 195
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_192_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 196
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_193_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 197
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_194_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 198
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_195_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 199
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_196_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 200
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_197_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 201
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_198_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 202
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_199_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 203
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_200_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 204
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_201_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 205
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_202_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 206
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_203_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 207
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_204_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 208
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_205_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 209
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_206_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 210
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_207_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 211
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_208_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 212
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_209_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 213
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_210_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 214
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_211_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 215
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_212_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 216
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_213_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 217
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_214_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 218
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_215_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 219
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_216_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 220
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_217_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 221
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_218_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 222
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_219_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 223
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_220_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 224
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_221_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 225
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_222_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 226
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_223_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 227
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_224_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 228
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_225_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 229
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_226_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 230
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_227_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 231
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_398_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_398_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_398_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_398_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_228_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 233
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_229_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 234
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_230_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 235
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_231_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 236
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_232_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 237
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_233_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 238
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_234_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 239
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_235_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 240
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_236_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 241
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_237_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 242
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_238_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 243
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_239_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 244
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_240_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 245
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_241_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 246
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_242_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 247
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_243_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 248
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_244_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 249
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_245_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 250
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_246_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 251
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_247_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 252
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_417_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 232
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_417_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_417_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 232
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_417_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_248_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 254
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_249_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 255
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_250_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 256
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_251_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 257
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_252_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 258
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_253_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 259
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_254_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 260
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_255_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 261
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_256_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 262
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_257_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 263
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_258_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 264
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_259_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 265
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_260_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 266
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_261_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 267
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_262_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 268
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_263_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 269
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_264_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 270
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_265_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 271
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_266_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 272
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_267_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 273
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_268_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 274
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_269_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 275
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_270_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 276
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_271_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 277
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_272_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 278
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_273_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 279
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_274_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 280
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_275_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 281
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_276_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 282
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_277_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 283
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_278_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 284
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_279_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 285
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_280_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 286
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_281_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 287
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_282_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 288
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_283_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 289
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_284_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 290
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_285_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 291
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_286_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 292
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_287_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 293
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_288_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 294
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_289_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 295
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_290_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 296
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_291_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 297
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_292_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 298
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_293_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 299
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_294_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 300
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_295_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 301
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_296_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 302
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_297_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 303
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_298_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 304
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_299_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 305
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_300_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 306
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_301_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 307
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_302_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 308
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_303_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 309
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_304_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 310
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_305_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 311
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_306_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 312
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_307_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 313
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_308_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 314
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_309_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 315
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_310_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 316
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_311_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 317
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_312_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 318
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_313_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 319
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_314_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 320
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_315_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 321
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_316_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 322
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_317_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 323
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_318_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 324
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_319_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 325
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_320_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 326
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_321_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 327
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_322_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 328
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_323_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 329
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_324_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 330
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_325_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 331
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_326_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 332
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_327_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 333
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_328_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 334
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_329_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 335
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_330_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 336
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_331_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 337
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_332_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 338
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_333_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 339
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_334_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 340
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_335_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 341
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_336_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 342
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_337_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 343
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_338_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 344
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_339_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 345
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_340_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 346
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_341_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 347
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_342_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 348
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_343_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 349
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_344_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 350
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_345_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 351
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_346_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 352
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_347_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 353
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_348_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 354
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_349_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 355
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_350_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 356
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_351_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 357
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_352_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 358
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_353_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 359
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_354_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 360
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_355_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 361
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_356_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 362
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_357_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 363
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_358_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 364
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_359_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 365
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_427_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 253
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_427_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_427_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 253
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_427_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_360_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 367
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_361_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 368
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_362_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 369
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_363_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 370
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_364_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 371
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_365_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 372
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_366_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 373
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_367_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 374
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_368_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 375
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_369_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 376
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_370_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 377
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_371_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 378
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_372_1361537952.49511" 
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 379
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_504_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 366
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_504_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 366
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_504_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 380
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_508_1361537952.49511"
    nqp_get_sc_object $P5002, "9B645311D6A5AA00E2D4931708B5268C4CD7CC64-1361537952.54191", 380
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_508_1361537952.49511"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_509_1361537952.49511") :anon :lex :outer("cuid_510_1361537952.49511")
.annotate 'file', "src/stage2/gen/NQP.pm"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_237_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_238_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_239_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_240_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_241_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_242_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_243_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_244_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_245_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_246_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_247_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_248_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_249_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_250_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_251_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_252_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_253_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_254_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_255_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_256_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_257_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_258_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_259_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_260_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_261_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_262_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_263_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_264_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_265_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_266_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_267_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_268_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_269_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_270_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_271_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_272_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_273_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_274_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_275_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_276_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_277_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_278_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_279_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_280_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_281_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_282_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_283_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_284_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_285_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_286_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_287_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_288_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_289_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_290_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_291_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_292_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_293_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_294_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_295_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_296_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_297_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_298_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_299_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_300_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_301_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_302_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_303_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_304_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_305_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_306_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_307_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_308_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_309_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_310_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_311_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_312_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_313_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_314_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_315_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_316_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_317_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_318_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_319_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_320_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_321_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_322_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_323_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_324_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_325_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_326_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_327_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_328_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_329_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_330_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_331_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_332_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_333_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_334_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_335_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_336_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_337_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_338_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_339_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_340_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_341_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_342_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_343_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_344_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_345_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_346_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_347_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_348_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_349_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_350_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_351_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_352_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_353_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_354_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_355_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_356_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_357_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_358_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_359_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_360_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_361_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_362_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_363_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_364_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_365_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_366_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_367_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_368_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_369_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_370_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_371_1361537952.49511" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_372_1361537952.49511" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_511_1361537952.49511") :load
.annotate 'file', "src/stage2/gen/NQP.pm"
    .const 'Sub' $P5001 = "cuid_374_1361537952.49511" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_512_1361537952.49511") :main
.annotate 'file', "src/stage2/gen/NQP.pm"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_374_1361537952.49511" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end